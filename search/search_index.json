{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4e3b\u9875 \u4e00\u4e9b\u5e73\u65f6\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u4f9b\u53c2\u8003","title":"\u4e3b\u9875"},{"location":"#_1","text":"\u4e00\u4e9b\u5e73\u65f6\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u4f9b\u53c2\u8003","title":"\u4e3b\u9875"},{"location":"ElasticSearch/","text":"ElasticSearch 1\u3001ElasticSearch\u7b80\u4ecb.md 2\u3001ElasticSearch\u539f\u7406.md 3\u3001ElasticSearch\u641c\u7d22\u57fa\u7840.md 4\u3001ElasticSearch\u641c\u7d22API.md 5\u3001ElasticSearch\u7d22\u5f15\u7ba1\u7406.md 6\u3001ElasticSearch\u7ed3\u6784\u5316\u641c\u7d22.md 7\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f.md 8\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f2.md 9\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f3.md","title":"ElasticSearch"},{"location":"ElasticSearch/#elasticsearch","text":"1\u3001ElasticSearch\u7b80\u4ecb.md 2\u3001ElasticSearch\u539f\u7406.md 3\u3001ElasticSearch\u641c\u7d22\u57fa\u7840.md 4\u3001ElasticSearch\u641c\u7d22API.md 5\u3001ElasticSearch\u7d22\u5f15\u7ba1\u7406.md 6\u3001ElasticSearch\u7ed3\u6784\u5316\u641c\u7d22.md 7\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f.md 8\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f2.md 9\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f3.md","title":"ElasticSearch"},{"location":"ElasticSearch/1\u3001ElasticSearch\u7b80\u4ecb/","text":"ElasticSearch \u4e00\u3001\u5b66\u4e60\u8def\u5f84\uff1a 1\u3001\u6838\u5fc3\u77e5\u8bc6 2\u3001\u9ad8\u624b\u8fdb\u9636 3\u3001\u5927\u578b\u96c6\u7fa4\u8fd0\u7ef4\u4f18\u5316 4\u3001\u5927\u578b\u9879\u76ee\u67b6\u6784 5\u3001ELK\u6df1\u5165\u6d45\u51fa \u4e8c\u3001ElasticSearch\u7b80\u4ecb \u5206\u5e03\u5f0f\uff0c\u9ad8\u53ef\u7528\uff0c\u9ad8\u6027\u80fd\uff0c\u53ef\u4f38\u7f29\u7684\u641c\u7d22\u548c\u5206\u6790\u7cfb\u7edf 1\u3001\u5e94\u7528 \u4e92\u8054\u7f51\uff1a\u7535\u5546\uff0c\u65b0\u95fb\uff0c\u62db\u8058... IT\u7cfb\u7edf\uff1aOA\u8f6f\u4ef6\uff0c\u529e\u516c\u81ea\u52a8\u5316\u8f6f\u4ef6\uff0c\u4f1a\u8bae\u7ba1\u7406\uff0c\u65e5\u7a0b\u7ba1\u7406\uff0c\u9879\u76ee\u7ba1\u7406\uff0c\u5458\u5de5\u7ba1\u7406... 2\u3001\u6570\u636e\u5e93\u505a\u641c\u7d22 \u6548\u679c\u4e0d\u4f73\uff0c\u901f\u5ea6\u8f83\u6162 3\u3001\u5168\u6587\u68c0\u7d22\uff0c\u5012\u6392\u7d22\u5f15 Lucene\uff1ajar\u5305\uff0c\u63d0\u4f9b\u4e86\u5efa\u7acb\u5012\u6392\u7d22\u5f15\uff0c\u641c\u7d22\u7684\u529f\u80fd 4\u3001ElasticSearch\uff1a (1)\u3001\u57fa\u4e8eLucene (2)\u3001\u81ea\u52a8\u7ef4\u62a4\u591a\u4e2a\u8282\u70b9\u7d22\u5f15\u5efa\u7acb (3)\u3001\u641c\u7d22\u5206\u5e03\u5230\u591a\u4e2a\u8282\u70b9\u6267\u884c (4)\u3001\u81ea\u52a8\u7ef4\u62a4\u6570\u636e\u7684\u5197\u4f59\u526f\u672c \u4e09\u3001ElasticSearch\u529f\u80fd 1\u3001\u5206\u5e03\u5f0f\u641c\u7d22\u5f15\u64ce\u548c\u6570\u636e\u5206\u6790\u5f15\u64ce \u200b \u5206\u5e03\u5f0f\uff0c\u641c\u7d22\uff0c\u6570\u636e\u5206\u6790 2\u3001\u5168\u6587\u68c0\u7d22\uff0c\u7ed3\u6784\u5316\u68c0\u7d22\uff0c\u6570\u636e\u5206\u6790 3\u3001\u5bf9\u6d77\u91cf\u6570\u636e\u8fdb\u884c\u8fd1\u5b9e\u65f6\u5904\u7406 ES\u5206\u5e03\u5f0f\u5b58\u50a8\u6d77\u91cf\u6570\u636e - Lucene\u5355\u673a\u5e94\u7528 \u8fd1\u5b9e\u65f6\uff08\u79d2\u7ea7\uff09 - \u79bb\u7ebf\u6279\u5904\u7406 \u56db\u3001ElasticSearch\u9002\u7528\u573a\u666f 1\u3001\u7ef4\u57fa\u767e\u79d1 2\u3001\u65b0\u95fb\u7f51\u7ad9\uff0c\u7528\u6237\u884c\u4e3a\u65e5\u5fd7\uff08\u70b9\u51fb\uff0c\u6d4f\u89c8\uff0c\u6536\u85cf\uff0c\u8bc4\u8bba\uff09 3\u3001Stack Overflow\u95ee\u9898\u641c\u7d22 4\u3001github\u4ee3\u7801\u641c\u7d22 5\u3001\u7535\u5546\u641c\u7d22 6\u3001\u65e5\u5fd7\u6570\u636e\u5206\u6790 7\u3001\u5546\u54c1\u4ef7\u683c\u76d1\u63a7\u7f51\u7ad9 8\u3001BI\u7cfb\u7edf\uff0c\u5546\u4e1a\u667a\u80fd 9\u3001\u7ad9\u5185\u641c\u7d22\uff08\u7535\u5546\uff0c\u62db\u8058\uff0c\u95e8\u6237...\uff09 10\u3001IT\u7cfb\u7edf\uff08OA\uff0cCRM\uff0cERP...\uff09 11\u3001\u6570\u636e\u5206\u6790\uff08\u70ed\u95e8\uff09 \u4e94\u3001ElasticSearch\u7279\u70b9 1\u3001\u5206\u5e03\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u5355\u673a 2\u3001ES = \u5168\u6587\u68c0\u7d22 + \u6570\u636e\u5206\u6790 + \u5206\u5e03\u5f0f\u6280\u672f 3\u3001\u5f00\u7bb1\u5373\u7528\uff0c\u7b80\u5355 4\u3001\u6570\u636e\u5e93\uff08\u4e8b\u52a1\uff09ES\u4f5c\u4e3a\u8865\u5145 \u516d\u3001ElasticSearch\u6838\u5fc3\u6982\u5ff5 Lucene: \u6700\u5148\u8fdb\uff0c\u529f\u80fd\u5f3a\u5927\u7684\u641c\u7d22\u5e93\uff0capi\u590d\u6742 ES: \u5206\u5e03\u5f0f\uff0c \u6587\u6863\u5b58\u50a8\uff0c \u641c\u7d22\u5f15\u64ce\uff0c \u5206\u6790\u5f15\u64ce\uff0c PB\u7ea7\u6570\u636e \u6838\u5fc3\u6982\u5ff5 1\u3001Near Realtime NRT \u8fd1\u5b9e\u65f6\uff08\u5ef6\u8fdf1s\uff09 2\u3001Cluster \u96c6\u7fa4\uff0c\u5305\u542b\u591a\u4e2a\u8282\u70b9 3\u3001Node \u8282\u70b9 4\u3001Document \u6587\u6863 es\u4e2d\u7684\u6700\u5c0f\u6570\u636e\u5355\u5143 json\u7ed3\u6784\uff0c\u5305\u542b\u591a\u4e2afield\u5b57\u6bb5 5\u3001Index \u7d22\u5f15 6\u3001Type \u7c7b\u578b index\u4e2d\u7684\u4e00\u4e2a\u903b\u8f91\u5206\u7c7b 7\u3001Shard(primary shard) \u5206\u7247 \u4e00\u4e2aindex\u4f1a\u88ab\u5206\u6210\u591a\u7247\uff0c\u5b58\u653e\u5230\u53f0\u6001\u670d\u52a1\u5668 \u200b (1\uff09\u6a2a\u5411\u6269\u5c55 \u200b (2\uff09\u5e76\u884c\u5206\u5e03\u5f0f\u6267\u884c\uff0c\u63d0\u5347\u541e\u5410\u91cf\u548c\u6027\u80fd \u200b (3) \u9ed8\u8ba45\u4e2a\uff0c\u5efa\u7acb\u65f6\u8bbe\u7f6e\uff0c\u4e0d\u80fd\u4fee\u6539 8\u3001Replica(replica shard) \u526f\u672c \u200b (1)\u9ad8\u53ef\u7528\uff0c\u4e00\u4e2ashard\u5b95\u673a\uff0c\u670d\u52a1\u53ef\u7528 \u200b (2)\u63d0\u5347\u641c\u7d22\u8bf7\u6c42\u541e\u5410\u91cf \u200b (3)\u9ed8\u8ba41\u4e2a\uff0c\u968f\u65f6\u4fee\u6539 \u200b 5\u4e2ashard \u5bf9\u5e94 5\u4e2a\u526f\u672c\uff0c\u6700\u5c0f\u9ad8\u53ef\u7528\u914d\u7f6e2\u53f0\u670d\u52a1\u5668 \u548cmysql\u5bf9\u6bd4\uff1a es - mysql index - database type - table document - row \u4e03\u3001ElasticSearch\u5b89\u88c5 \u5b89\u88c5 Java -version >= 1.8 1\u3001\u4e0b\u8f7d\u89e3\u538b \u5b98\u7f51\uff1a https://www.elastic.co/ \u6ce8\u610f\u7248\u672c\u8981\u5339\u914dversion 5.2.0 \u641c\u7d22\u4e0b\u8f7des \u548c kibana https://www.elastic.co/cn/downloads/past-releases \u6216\u8005\u76f4\u63a5\u4e0b\u8f7d elasticsearch 5.2.0 32.0 MB: https://www.elastic.co/cn/downloads/past-releases/elasticsearch-5-2-0 https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.2.0.tar.gz kibana 5.2.0 35.2 MB: https://www.elastic.co/cn/downloads/past-releases/kibana-5-2-0 https://artifacts.elastic.co/downloads/kibana/kibana-5.2.0-windows-x86.zip https://artifacts.elastic.co/downloads/kibana/kibana-5.2.0-darwin-x86_64.tar.gz https://artifacts.elastic.co/downloads/kibana/kibana-5.2.0-linux-x86_64.tar.gz 2\u3001\u542f\u52a8es . / bin / elasticsearch \u67e5\u770b\u542f\u52a8\u60c5\u51b5 http://127.0.0.1:9200/?pretty ## \u8282\u70b9\u540d\u79f0 name : \"node-1\" , ## \u96c6\u7fa4\u540d\u79f0 cluster_name : \"elasticsearch\" , \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 config/elasticsearch.yml 3\u3001\u542f\u52a8kibana . / bin / kibana \u8bbf\u95ee http://127.0.0.1:5601 \u8fdb\u5165Dev Tools \u67e5\u770b\u5065\u5eb7\u72b6\u6001 GET _cluster / health \u516b\u3001\u6587\u6863CRUD \u9762\u5411\u6587\u6863\u7684\u641c\u7d22\u5206\u6790\u5f15\u64ce Document\u6587\u6863\u683c\u5f0f json\u683c\u5f0f 1\u3001\u7b80\u5355\u7684\u96c6\u7fa4\u7ba1\u7406 cat api \u53c2\u6570 ? v \u663e\u793a\u6807\u9898 ? pretty \uff081\uff09\u68c0\u67e5\u96c6\u7fa4\u5065\u5eb7\u72b6\u51b5 GET _cat / health status primary shard replica shard green active active yellow active \u90e8\u5206\u4e0d\u53ef\u7528 red \u90e8\u5206\u6709\u6570\u636e\u4e22\u5931 - \u542f\u52a8\u4e86\u4e00\u4e2aes\u8fdb\u7a0b\uff0c\u53ea\u6709\u4e00\u4e2anode\uff0c\u5f53\u524d\u53ea\u6709\u4e00\u4e2aindex\uff0c \u9ed8\u8ba4\u914d\u7f6e\u4e00\u4e2aindex\u5206\u914d5\u4e2aprimary shard\u548c 5 \u4e2areplica shard \u800c\u4e14 primary shard \u548c replica shard\u4e0d\u80fd\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\uff08\u4e3a\u4e86\u5bb9\u9519\uff09 kibana\u81ea\u5df1\u5efa\u7acb\u7684index\u662f\u4e00\u4e2aprimary shard \u548c 1\u4e2areplica shard \u5f53\u524d\u5c31\u4e00\u4e2anode\uff0c\u53ea\u5206\u914d\u4e86primary shard \u6ca1\u6709\u7b2c\u4e8c\u53f0\u673a\u5668\u5206\u914dreplica shard \u53ea\u8981\u518d\u542f\u52a8\u4e00\u4e2aes\uff0c\u5c31\u4f1a\u53d8\u6210green \uff082\uff09\u67e5\u770b\u96c6\u7fa4\u4e2d\u7d22\u5f15 GET _cat / indices \uff083\uff09\u521b\u5efa\u7d22\u5f15 PUT /<index_name> \uff084\uff09\u5220\u9664\u7d22\u5f15 DELETE /<index_name> 2\u3001\u6587\u6863\u64cd\u4f5c(\u589e\u5220\u6539\u67e5) \uff081\uff09\u65b0\u589e\u6587\u6863 PUT /index/type/id { <data> } es\u4f1a\u81ea\u52a8\u5efa\u7acbindex\u548ctype\uff0c\u4e0d\u9700\u8981\u63d0\u524d\u521b\u5efa \u800c\u4e14\u9ed8\u8ba4\u4f1a\u5bf9document\u7684\u6bcf\u4e2afield\u90fd\u5efa\u7acb\u5012\u6392\u7d22\u5f15\uff0c\u4ee5\u4fbf\u641c\u7d22 eg: PUT /web/product/1 { \"name\": \"bat baidu\", \"price\": 30, \"tags\": [\"tieba\", \"baike\"] } PUT /web/product/2 { \"name\": \"bat tencent\", \"price\": 40, \"tags\": [\"qq\", \"weixin\"] } PUT /web/product/3 { \"name\": \"bat alibaba\", \"price\": 60, \"tags\": [\"taobao\", \"tianmao\"] } \uff082\uff09\u67e5\u627e\u6587\u6863 GET /web/product/1 \uff083\uff09\u66ff\u6362\u6587\u6863 PUT /web/product/1 { \"name\": \"baidu\", \"price\": 35, \"tags\": [\"tieba\", \"baike\"] } \u66ff\u6362\u65b9\u5f0f\u5fc5\u987b\u5e26\u4e0a\u6240\u6709\u4fe1\u606f\u624d\u80fd\u8fdb\u884c\u4fee\u6539\uff0c\u4f1a\u6574\u4e2a\u6587\u6863\u66ff\u6362 \uff084\uff09\u66f4\u65b0\u6587\u6863 POST /web/product/1/_update { \"doc\": { \"price\": 306 } } \u53ea\u4f1a\u66f4\u65b0\u90e8\u5206\u5b57\u6bb5\uff0c\u4e0d\u4f1a\u5168\u90e8\u66ff\u6362 \uff085\uff09\u5220\u9664\u6587\u6863 DELETE /web/product/1 \u4e5d\u3001\u591a\u79cd\u641c\u7d22\u65b9\u5f0f 1\u3001query string search \uff081\uff09\u67e5\u8be2\u6240\u6709 GET /web/product/_search \u8fd4\u56de\u53c2\u6570 took \u8017\u8d39\u65f6\u95f4\u6beb\u79d2 time_out \u662f\u5426\u8d85\u65f6 _shard \u51e0\u4e2a shard\u5904\u7406\u4e86\u641c\u7d22\u8bf7\u6c42 hits . total \u67e5\u8be2\u7ed3\u679c\u6570\u91cf hits . max_score \u76f8\u5173\u5ea6\u5339\u914d\u5206\u6570\uff0c\u8d8a\u5927\u8d8a\u76f8\u5173 ( 0 - 1 ] hits . hits \u641c\u7d22\u5339\u914d\u7684\u8be6\u7ec6\u6570\u636e \uff082\uff09\u67e5\u8be2name\u5305\u542b'bat' \u6309\u7167price\u964d\u5e8f\u6392\u5217 GET /web/product/_search?q=name:bat&sort=price:desc \u51e0\u4e4e\u5f88\u5c11\u7528query string search,\u96be\u4ee5\u6784\u5efa\u590d\u6742\u67e5\u8be2 2\u3001query DSL DSL\uff1aDomain Specified Language \u7279\u5b9a\u9886\u57df\u7684\u8bed\u8a00 http request body\u8bf7\u6c42\uff0c\u7528json\u6784\u5efa\u67e5\u8be2 \uff081\uff09\u67e5\u8be2\u6240\u6709 GET /web/product/_search { \"query\":{ \"match_all\": {} } } \uff082\uff09\u6392\u5e8f\u67e5\u8be2 \u67e5\u8be2name\u5305\u542b 'bat' \u6309\u7167price\u964d\u5e8f\u6392\u5217 GET /web/product/_search { \"query\": { \"match\": { \"name\": \"bat\" } }, \"sort\": [ { \"price\": \"desc\" } ] } \uff083\uff09\u5206\u9875\u67e5\u8be2 \u7b2c1\u4e2a\u5f00\u59cb\uff0c\u53d61\u6761\u6570\u636e\uff0c\u5b9e\u9645\u53d6\u51fa\u7b2c2\u6761\u6570\u636e\uff08form\u4ece0\u5f00\u59cb\u8ba1\u6570\uff09 GET /web/product/_search { \"query\": { \"match_all\": {} }, \"from\": 1, \"size\": 1 } \uff084\uff09\u6307\u5b9a\u5b57\u6bb5 \u53ea\u53d6\u90e8\u5206\u5b57\u6bb5 GET /web/product/_search { \"query\": { \"match_all\": {} }, \"_source\": [\"name\", \"price\"] } 3\u3001query filter \u6570\u636e\u8fc7\u6ee4 \uff081\uff09\u67e5\u8be2name\u4e2d\u5305\u542b\u201cbat\u201d\uff0cprice>25 GET /web/product/_search { \"query\":{ \"bool\":{ \"must\":{ \"match\":{ \"name\":\"bat\" } }, \"filter\":{ \"range\":{ \"price\":{ \"gt\":35 } } } } } } 4\u3001full-text search \u5168\u6587\u68c0\u7d22 name\u5b57\u6bb5\u4f1a\u88ab\u62c6\u89e3\uff0c\u5efa\u7acb\u5012\u6392\u7d22\u5f15 \u5173\u952e\u5b57 id bat 1,2,3 baidu 1 tencent 2 alibaba 3 \u641c\u7d22\u65f6\u4f1a\u5c06\u641c\u7d22\u4e32\u62c6\u89e3\u5f00\uff0c\u53bb\u5012\u6392\u7d22\u5f15\u4e00\u4e00\u5339\u914d\uff0c\u53ea\u8981 \u5339\u914d\u4efb\u610f\u4e00\u4e2a \u5c31\u4f1a\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de \u547d\u4e2d\u8d8a\u591a\uff0c\u5206\u6570\u503c\u8d8a\u9ad8 GET /web/product/_search { \"query\":{ \"match\":{ \"name\": \"bat baidu\" } } } 5\u3001phrase search \u77ed\u8bed\u641c\u7d22 \u8f93\u5165\u641c\u7d22\u4e32\u5fc5\u987b \u5b8c\u5168\u5339\u914d \uff0c\u624d\u80fd\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de GET /web/product/_search { \"query\":{ \"match_phrase\":{ \"name\": \"bat baidu\" } } } 6\u3001highlight search \u9ad8\u4eae\u641c\u7d22\u7ed3\u679c \u5c06name\u5b57\u6bb5\u5339\u914d\u7684\u5185\u5bb9\u505a\u4e0a\u9ad8\u4eae\u6807\u5fd7 GET /web/product/_search { \"query\":{ \"match\":{ \"name\": \"bat baidu\" } }, \"highlight\": { \"fields\": { \"name\":{} } } } \u5341\u3001\u805a\u5408\u64cd\u4f5c aggregations \u805a\u5408\u793a\u4f8b\u4f7f\u7528\u7684\u6587\u6863\u6570\u636e PUT /taobao/product/1 { \"name\": \"red dog\", \"age\": 2, \"tags\": [ \"red\", \"dog\" ] } PUT /taobao/product/2 { \"name\": \"green dog\", \"age\": 3, \"tags\": [ \"green\", \"dog\" ] } PUT /taobao/product/3 { \"name\": \"yellow dog\", \"age\": 5, \"tags\": [ \"yellow\", \"dog\" ] } 1\u3001\u7b80\u5355\u805a\u5408 \uff081\uff09\u8bbe\u7f6efeild\u7684fielddata\u5c5e\u6027\u4e3atrue PUT /taobao/_mapping/product { \"properties\": { \"tags\":{ \"type\": \"text\", \"fielddata\": true } } } \uff082\uff09\u901a\u8fc7\u6807\u7b7e\u5206\u7ec4\u8ba1\u7b97\u6570\u91cf GET /taobao/product/_search { \"aggs\":{ \"group_by_tag\":{ \"terms\":{ \"field\": \"tags\" } } } } \uff083\uff09\u8bbe\u7f6e \"size\": 0\u4e0d\u663e\u793a\u67e5\u8be2\u7ed3\u679c GET /taobao/product/_search { \"size\": 0, \"aggs\":{ \"group_by_tag\":{ \"terms\":{ \"field\": \"tags\" } } } } 2\u3001\u5148\u641c\u7d22\u518d\u805a\u5408 GET /taobao/product/_search { \"size\": 0, \"query\": { \"match\": { \"name\": \"red\" } }, \"aggs\": { \"group_by_tag\": { \"terms\": { \"field\": \"tags\" } } } } 3\u3001\u5148\u5206\u7ec4\uff0c\u518d\u5e73\u5747 GET /taobao/product/_search { \"size\": 0, \"aggs\": { \"group_by_tag\": { \"terms\": { \"field\": \"tags\" }, \"aggs\": { \"avg_age\": { \"avg\": {\"field\": \"age\"} } } } } } 4\u3001\u5148\u5206\u7ec4\uff0c\u518d\u5e73\u5747\uff0c\u518d\u964d\u5e8f\u6392\u5e8f GET /taobao/product/_search { \"size\": 0, \"aggs\": { \"group_by_tag\": { \"terms\": { \"field\": \"tags\", \"order\": { \"avg_age\": \"desc\" } }, \"aggs\": { \"avg_age\": { \"avg\": { \"field\": \"age\" } } } } } } 5\u3001\u6307\u5b9a\u5e74\u9f84\u8303\u56f4\u5206\u7ec4\uff0c\u518d\u6309\u7167\u7ec4\u5185\u6807\u7b7e\u5206\u7ec4\uff0c\u6700\u540e\u8ba1\u7b97\u6bcf\u7ec4\u5e73\u5747\u4ef7\u683c GET /taobao/product/_search { \"size\": 0, \"aggs\": { \"group_by_age\": { \"range\": { \"field\": \"age\", \"ranges\": [ { \"from\": 0, \"to\": 3 }, { \"from\": 1, \"to\": 5 } ] }, \"aggs\": { \"group_by_tag\": { \"terms\": { \"field\": \"tags\" }, \"aggs\": { \"avg_age\": { \"avg\": { \"field\": \"age\" } } } } } } } }","title":"ElasticSearch"},{"location":"ElasticSearch/1\u3001ElasticSearch\u7b80\u4ecb/#elasticsearch","text":"","title":"ElasticSearch"},{"location":"ElasticSearch/1\u3001ElasticSearch\u7b80\u4ecb/#_1","text":"1\u3001\u6838\u5fc3\u77e5\u8bc6 2\u3001\u9ad8\u624b\u8fdb\u9636 3\u3001\u5927\u578b\u96c6\u7fa4\u8fd0\u7ef4\u4f18\u5316 4\u3001\u5927\u578b\u9879\u76ee\u67b6\u6784 5\u3001ELK\u6df1\u5165\u6d45\u51fa","title":"\u4e00\u3001\u5b66\u4e60\u8def\u5f84\uff1a"},{"location":"ElasticSearch/1\u3001ElasticSearch\u7b80\u4ecb/#elasticsearch_1","text":"\u5206\u5e03\u5f0f\uff0c\u9ad8\u53ef\u7528\uff0c\u9ad8\u6027\u80fd\uff0c\u53ef\u4f38\u7f29\u7684\u641c\u7d22\u548c\u5206\u6790\u7cfb\u7edf 1\u3001\u5e94\u7528 \u4e92\u8054\u7f51\uff1a\u7535\u5546\uff0c\u65b0\u95fb\uff0c\u62db\u8058... IT\u7cfb\u7edf\uff1aOA\u8f6f\u4ef6\uff0c\u529e\u516c\u81ea\u52a8\u5316\u8f6f\u4ef6\uff0c\u4f1a\u8bae\u7ba1\u7406\uff0c\u65e5\u7a0b\u7ba1\u7406\uff0c\u9879\u76ee\u7ba1\u7406\uff0c\u5458\u5de5\u7ba1\u7406... 2\u3001\u6570\u636e\u5e93\u505a\u641c\u7d22 \u6548\u679c\u4e0d\u4f73\uff0c\u901f\u5ea6\u8f83\u6162 3\u3001\u5168\u6587\u68c0\u7d22\uff0c\u5012\u6392\u7d22\u5f15 Lucene\uff1ajar\u5305\uff0c\u63d0\u4f9b\u4e86\u5efa\u7acb\u5012\u6392\u7d22\u5f15\uff0c\u641c\u7d22\u7684\u529f\u80fd 4\u3001ElasticSearch\uff1a (1)\u3001\u57fa\u4e8eLucene (2)\u3001\u81ea\u52a8\u7ef4\u62a4\u591a\u4e2a\u8282\u70b9\u7d22\u5f15\u5efa\u7acb (3)\u3001\u641c\u7d22\u5206\u5e03\u5230\u591a\u4e2a\u8282\u70b9\u6267\u884c (4)\u3001\u81ea\u52a8\u7ef4\u62a4\u6570\u636e\u7684\u5197\u4f59\u526f\u672c","title":"\u4e8c\u3001ElasticSearch\u7b80\u4ecb"},{"location":"ElasticSearch/1\u3001ElasticSearch\u7b80\u4ecb/#elasticsearch_2","text":"1\u3001\u5206\u5e03\u5f0f\u641c\u7d22\u5f15\u64ce\u548c\u6570\u636e\u5206\u6790\u5f15\u64ce \u200b \u5206\u5e03\u5f0f\uff0c\u641c\u7d22\uff0c\u6570\u636e\u5206\u6790 2\u3001\u5168\u6587\u68c0\u7d22\uff0c\u7ed3\u6784\u5316\u68c0\u7d22\uff0c\u6570\u636e\u5206\u6790 3\u3001\u5bf9\u6d77\u91cf\u6570\u636e\u8fdb\u884c\u8fd1\u5b9e\u65f6\u5904\u7406 ES\u5206\u5e03\u5f0f\u5b58\u50a8\u6d77\u91cf\u6570\u636e - Lucene\u5355\u673a\u5e94\u7528 \u8fd1\u5b9e\u65f6\uff08\u79d2\u7ea7\uff09 - \u79bb\u7ebf\u6279\u5904\u7406","title":"\u4e09\u3001ElasticSearch\u529f\u80fd"},{"location":"ElasticSearch/1\u3001ElasticSearch\u7b80\u4ecb/#elasticsearch_3","text":"1\u3001\u7ef4\u57fa\u767e\u79d1 2\u3001\u65b0\u95fb\u7f51\u7ad9\uff0c\u7528\u6237\u884c\u4e3a\u65e5\u5fd7\uff08\u70b9\u51fb\uff0c\u6d4f\u89c8\uff0c\u6536\u85cf\uff0c\u8bc4\u8bba\uff09 3\u3001Stack Overflow\u95ee\u9898\u641c\u7d22 4\u3001github\u4ee3\u7801\u641c\u7d22 5\u3001\u7535\u5546\u641c\u7d22 6\u3001\u65e5\u5fd7\u6570\u636e\u5206\u6790 7\u3001\u5546\u54c1\u4ef7\u683c\u76d1\u63a7\u7f51\u7ad9 8\u3001BI\u7cfb\u7edf\uff0c\u5546\u4e1a\u667a\u80fd 9\u3001\u7ad9\u5185\u641c\u7d22\uff08\u7535\u5546\uff0c\u62db\u8058\uff0c\u95e8\u6237...\uff09 10\u3001IT\u7cfb\u7edf\uff08OA\uff0cCRM\uff0cERP...\uff09 11\u3001\u6570\u636e\u5206\u6790\uff08\u70ed\u95e8\uff09","title":"\u56db\u3001ElasticSearch\u9002\u7528\u573a\u666f"},{"location":"ElasticSearch/1\u3001ElasticSearch\u7b80\u4ecb/#elasticsearch_4","text":"1\u3001\u5206\u5e03\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u5355\u673a 2\u3001ES = \u5168\u6587\u68c0\u7d22 + \u6570\u636e\u5206\u6790 + \u5206\u5e03\u5f0f\u6280\u672f 3\u3001\u5f00\u7bb1\u5373\u7528\uff0c\u7b80\u5355 4\u3001\u6570\u636e\u5e93\uff08\u4e8b\u52a1\uff09ES\u4f5c\u4e3a\u8865\u5145","title":"\u4e94\u3001ElasticSearch\u7279\u70b9"},{"location":"ElasticSearch/1\u3001ElasticSearch\u7b80\u4ecb/#elasticsearch_5","text":"Lucene: \u6700\u5148\u8fdb\uff0c\u529f\u80fd\u5f3a\u5927\u7684\u641c\u7d22\u5e93\uff0capi\u590d\u6742 ES: \u5206\u5e03\u5f0f\uff0c \u6587\u6863\u5b58\u50a8\uff0c \u641c\u7d22\u5f15\u64ce\uff0c \u5206\u6790\u5f15\u64ce\uff0c PB\u7ea7\u6570\u636e \u6838\u5fc3\u6982\u5ff5 1\u3001Near Realtime NRT \u8fd1\u5b9e\u65f6\uff08\u5ef6\u8fdf1s\uff09 2\u3001Cluster \u96c6\u7fa4\uff0c\u5305\u542b\u591a\u4e2a\u8282\u70b9 3\u3001Node \u8282\u70b9 4\u3001Document \u6587\u6863 es\u4e2d\u7684\u6700\u5c0f\u6570\u636e\u5355\u5143 json\u7ed3\u6784\uff0c\u5305\u542b\u591a\u4e2afield\u5b57\u6bb5 5\u3001Index \u7d22\u5f15 6\u3001Type \u7c7b\u578b index\u4e2d\u7684\u4e00\u4e2a\u903b\u8f91\u5206\u7c7b 7\u3001Shard(primary shard) \u5206\u7247 \u4e00\u4e2aindex\u4f1a\u88ab\u5206\u6210\u591a\u7247\uff0c\u5b58\u653e\u5230\u53f0\u6001\u670d\u52a1\u5668 \u200b (1\uff09\u6a2a\u5411\u6269\u5c55 \u200b (2\uff09\u5e76\u884c\u5206\u5e03\u5f0f\u6267\u884c\uff0c\u63d0\u5347\u541e\u5410\u91cf\u548c\u6027\u80fd \u200b (3) \u9ed8\u8ba45\u4e2a\uff0c\u5efa\u7acb\u65f6\u8bbe\u7f6e\uff0c\u4e0d\u80fd\u4fee\u6539 8\u3001Replica(replica shard) \u526f\u672c \u200b (1)\u9ad8\u53ef\u7528\uff0c\u4e00\u4e2ashard\u5b95\u673a\uff0c\u670d\u52a1\u53ef\u7528 \u200b (2)\u63d0\u5347\u641c\u7d22\u8bf7\u6c42\u541e\u5410\u91cf \u200b (3)\u9ed8\u8ba41\u4e2a\uff0c\u968f\u65f6\u4fee\u6539 \u200b 5\u4e2ashard \u5bf9\u5e94 5\u4e2a\u526f\u672c\uff0c\u6700\u5c0f\u9ad8\u53ef\u7528\u914d\u7f6e2\u53f0\u670d\u52a1\u5668 \u548cmysql\u5bf9\u6bd4\uff1a es - mysql index - database type - table document - row","title":"\u516d\u3001ElasticSearch\u6838\u5fc3\u6982\u5ff5"},{"location":"ElasticSearch/1\u3001ElasticSearch\u7b80\u4ecb/#elasticsearch_6","text":"\u5b89\u88c5 Java -version >= 1.8 1\u3001\u4e0b\u8f7d\u89e3\u538b \u5b98\u7f51\uff1a https://www.elastic.co/ \u6ce8\u610f\u7248\u672c\u8981\u5339\u914dversion 5.2.0 \u641c\u7d22\u4e0b\u8f7des \u548c kibana https://www.elastic.co/cn/downloads/past-releases \u6216\u8005\u76f4\u63a5\u4e0b\u8f7d elasticsearch 5.2.0 32.0 MB: https://www.elastic.co/cn/downloads/past-releases/elasticsearch-5-2-0 https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.2.0.tar.gz kibana 5.2.0 35.2 MB: https://www.elastic.co/cn/downloads/past-releases/kibana-5-2-0 https://artifacts.elastic.co/downloads/kibana/kibana-5.2.0-windows-x86.zip https://artifacts.elastic.co/downloads/kibana/kibana-5.2.0-darwin-x86_64.tar.gz https://artifacts.elastic.co/downloads/kibana/kibana-5.2.0-linux-x86_64.tar.gz 2\u3001\u542f\u52a8es . / bin / elasticsearch \u67e5\u770b\u542f\u52a8\u60c5\u51b5 http://127.0.0.1:9200/?pretty ## \u8282\u70b9\u540d\u79f0 name : \"node-1\" , ## \u96c6\u7fa4\u540d\u79f0 cluster_name : \"elasticsearch\" , \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 config/elasticsearch.yml 3\u3001\u542f\u52a8kibana . / bin / kibana \u8bbf\u95ee http://127.0.0.1:5601 \u8fdb\u5165Dev Tools \u67e5\u770b\u5065\u5eb7\u72b6\u6001 GET _cluster / health","title":"\u4e03\u3001ElasticSearch\u5b89\u88c5"},{"location":"ElasticSearch/1\u3001ElasticSearch\u7b80\u4ecb/#crud","text":"\u9762\u5411\u6587\u6863\u7684\u641c\u7d22\u5206\u6790\u5f15\u64ce Document\u6587\u6863\u683c\u5f0f json\u683c\u5f0f 1\u3001\u7b80\u5355\u7684\u96c6\u7fa4\u7ba1\u7406 cat api \u53c2\u6570 ? v \u663e\u793a\u6807\u9898 ? pretty \uff081\uff09\u68c0\u67e5\u96c6\u7fa4\u5065\u5eb7\u72b6\u51b5 GET _cat / health status primary shard replica shard green active active yellow active \u90e8\u5206\u4e0d\u53ef\u7528 red \u90e8\u5206\u6709\u6570\u636e\u4e22\u5931 - \u542f\u52a8\u4e86\u4e00\u4e2aes\u8fdb\u7a0b\uff0c\u53ea\u6709\u4e00\u4e2anode\uff0c\u5f53\u524d\u53ea\u6709\u4e00\u4e2aindex\uff0c \u9ed8\u8ba4\u914d\u7f6e\u4e00\u4e2aindex\u5206\u914d5\u4e2aprimary shard\u548c 5 \u4e2areplica shard \u800c\u4e14 primary shard \u548c replica shard\u4e0d\u80fd\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\uff08\u4e3a\u4e86\u5bb9\u9519\uff09 kibana\u81ea\u5df1\u5efa\u7acb\u7684index\u662f\u4e00\u4e2aprimary shard \u548c 1\u4e2areplica shard \u5f53\u524d\u5c31\u4e00\u4e2anode\uff0c\u53ea\u5206\u914d\u4e86primary shard \u6ca1\u6709\u7b2c\u4e8c\u53f0\u673a\u5668\u5206\u914dreplica shard \u53ea\u8981\u518d\u542f\u52a8\u4e00\u4e2aes\uff0c\u5c31\u4f1a\u53d8\u6210green \uff082\uff09\u67e5\u770b\u96c6\u7fa4\u4e2d\u7d22\u5f15 GET _cat / indices \uff083\uff09\u521b\u5efa\u7d22\u5f15 PUT /<index_name> \uff084\uff09\u5220\u9664\u7d22\u5f15 DELETE /<index_name> 2\u3001\u6587\u6863\u64cd\u4f5c(\u589e\u5220\u6539\u67e5) \uff081\uff09\u65b0\u589e\u6587\u6863 PUT /index/type/id { <data> } es\u4f1a\u81ea\u52a8\u5efa\u7acbindex\u548ctype\uff0c\u4e0d\u9700\u8981\u63d0\u524d\u521b\u5efa \u800c\u4e14\u9ed8\u8ba4\u4f1a\u5bf9document\u7684\u6bcf\u4e2afield\u90fd\u5efa\u7acb\u5012\u6392\u7d22\u5f15\uff0c\u4ee5\u4fbf\u641c\u7d22 eg: PUT /web/product/1 { \"name\": \"bat baidu\", \"price\": 30, \"tags\": [\"tieba\", \"baike\"] } PUT /web/product/2 { \"name\": \"bat tencent\", \"price\": 40, \"tags\": [\"qq\", \"weixin\"] } PUT /web/product/3 { \"name\": \"bat alibaba\", \"price\": 60, \"tags\": [\"taobao\", \"tianmao\"] } \uff082\uff09\u67e5\u627e\u6587\u6863 GET /web/product/1 \uff083\uff09\u66ff\u6362\u6587\u6863 PUT /web/product/1 { \"name\": \"baidu\", \"price\": 35, \"tags\": [\"tieba\", \"baike\"] } \u66ff\u6362\u65b9\u5f0f\u5fc5\u987b\u5e26\u4e0a\u6240\u6709\u4fe1\u606f\u624d\u80fd\u8fdb\u884c\u4fee\u6539\uff0c\u4f1a\u6574\u4e2a\u6587\u6863\u66ff\u6362 \uff084\uff09\u66f4\u65b0\u6587\u6863 POST /web/product/1/_update { \"doc\": { \"price\": 306 } } \u53ea\u4f1a\u66f4\u65b0\u90e8\u5206\u5b57\u6bb5\uff0c\u4e0d\u4f1a\u5168\u90e8\u66ff\u6362 \uff085\uff09\u5220\u9664\u6587\u6863 DELETE /web/product/1","title":"\u516b\u3001\u6587\u6863CRUD"},{"location":"ElasticSearch/1\u3001ElasticSearch\u7b80\u4ecb/#_2","text":"1\u3001query string search \uff081\uff09\u67e5\u8be2\u6240\u6709 GET /web/product/_search \u8fd4\u56de\u53c2\u6570 took \u8017\u8d39\u65f6\u95f4\u6beb\u79d2 time_out \u662f\u5426\u8d85\u65f6 _shard \u51e0\u4e2a shard\u5904\u7406\u4e86\u641c\u7d22\u8bf7\u6c42 hits . total \u67e5\u8be2\u7ed3\u679c\u6570\u91cf hits . max_score \u76f8\u5173\u5ea6\u5339\u914d\u5206\u6570\uff0c\u8d8a\u5927\u8d8a\u76f8\u5173 ( 0 - 1 ] hits . hits \u641c\u7d22\u5339\u914d\u7684\u8be6\u7ec6\u6570\u636e \uff082\uff09\u67e5\u8be2name\u5305\u542b'bat' \u6309\u7167price\u964d\u5e8f\u6392\u5217 GET /web/product/_search?q=name:bat&sort=price:desc \u51e0\u4e4e\u5f88\u5c11\u7528query string search,\u96be\u4ee5\u6784\u5efa\u590d\u6742\u67e5\u8be2 2\u3001query DSL DSL\uff1aDomain Specified Language \u7279\u5b9a\u9886\u57df\u7684\u8bed\u8a00 http request body\u8bf7\u6c42\uff0c\u7528json\u6784\u5efa\u67e5\u8be2 \uff081\uff09\u67e5\u8be2\u6240\u6709 GET /web/product/_search { \"query\":{ \"match_all\": {} } } \uff082\uff09\u6392\u5e8f\u67e5\u8be2 \u67e5\u8be2name\u5305\u542b 'bat' \u6309\u7167price\u964d\u5e8f\u6392\u5217 GET /web/product/_search { \"query\": { \"match\": { \"name\": \"bat\" } }, \"sort\": [ { \"price\": \"desc\" } ] } \uff083\uff09\u5206\u9875\u67e5\u8be2 \u7b2c1\u4e2a\u5f00\u59cb\uff0c\u53d61\u6761\u6570\u636e\uff0c\u5b9e\u9645\u53d6\u51fa\u7b2c2\u6761\u6570\u636e\uff08form\u4ece0\u5f00\u59cb\u8ba1\u6570\uff09 GET /web/product/_search { \"query\": { \"match_all\": {} }, \"from\": 1, \"size\": 1 } \uff084\uff09\u6307\u5b9a\u5b57\u6bb5 \u53ea\u53d6\u90e8\u5206\u5b57\u6bb5 GET /web/product/_search { \"query\": { \"match_all\": {} }, \"_source\": [\"name\", \"price\"] } 3\u3001query filter \u6570\u636e\u8fc7\u6ee4 \uff081\uff09\u67e5\u8be2name\u4e2d\u5305\u542b\u201cbat\u201d\uff0cprice>25 GET /web/product/_search { \"query\":{ \"bool\":{ \"must\":{ \"match\":{ \"name\":\"bat\" } }, \"filter\":{ \"range\":{ \"price\":{ \"gt\":35 } } } } } } 4\u3001full-text search \u5168\u6587\u68c0\u7d22 name\u5b57\u6bb5\u4f1a\u88ab\u62c6\u89e3\uff0c\u5efa\u7acb\u5012\u6392\u7d22\u5f15 \u5173\u952e\u5b57 id bat 1,2,3 baidu 1 tencent 2 alibaba 3 \u641c\u7d22\u65f6\u4f1a\u5c06\u641c\u7d22\u4e32\u62c6\u89e3\u5f00\uff0c\u53bb\u5012\u6392\u7d22\u5f15\u4e00\u4e00\u5339\u914d\uff0c\u53ea\u8981 \u5339\u914d\u4efb\u610f\u4e00\u4e2a \u5c31\u4f1a\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de \u547d\u4e2d\u8d8a\u591a\uff0c\u5206\u6570\u503c\u8d8a\u9ad8 GET /web/product/_search { \"query\":{ \"match\":{ \"name\": \"bat baidu\" } } } 5\u3001phrase search \u77ed\u8bed\u641c\u7d22 \u8f93\u5165\u641c\u7d22\u4e32\u5fc5\u987b \u5b8c\u5168\u5339\u914d \uff0c\u624d\u80fd\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de GET /web/product/_search { \"query\":{ \"match_phrase\":{ \"name\": \"bat baidu\" } } } 6\u3001highlight search \u9ad8\u4eae\u641c\u7d22\u7ed3\u679c \u5c06name\u5b57\u6bb5\u5339\u914d\u7684\u5185\u5bb9\u505a\u4e0a\u9ad8\u4eae\u6807\u5fd7 GET /web/product/_search { \"query\":{ \"match\":{ \"name\": \"bat baidu\" } }, \"highlight\": { \"fields\": { \"name\":{} } } }","title":"\u4e5d\u3001\u591a\u79cd\u641c\u7d22\u65b9\u5f0f"},{"location":"ElasticSearch/1\u3001ElasticSearch\u7b80\u4ecb/#aggregations","text":"\u805a\u5408\u793a\u4f8b\u4f7f\u7528\u7684\u6587\u6863\u6570\u636e PUT /taobao/product/1 { \"name\": \"red dog\", \"age\": 2, \"tags\": [ \"red\", \"dog\" ] } PUT /taobao/product/2 { \"name\": \"green dog\", \"age\": 3, \"tags\": [ \"green\", \"dog\" ] } PUT /taobao/product/3 { \"name\": \"yellow dog\", \"age\": 5, \"tags\": [ \"yellow\", \"dog\" ] } 1\u3001\u7b80\u5355\u805a\u5408 \uff081\uff09\u8bbe\u7f6efeild\u7684fielddata\u5c5e\u6027\u4e3atrue PUT /taobao/_mapping/product { \"properties\": { \"tags\":{ \"type\": \"text\", \"fielddata\": true } } } \uff082\uff09\u901a\u8fc7\u6807\u7b7e\u5206\u7ec4\u8ba1\u7b97\u6570\u91cf GET /taobao/product/_search { \"aggs\":{ \"group_by_tag\":{ \"terms\":{ \"field\": \"tags\" } } } } \uff083\uff09\u8bbe\u7f6e \"size\": 0\u4e0d\u663e\u793a\u67e5\u8be2\u7ed3\u679c GET /taobao/product/_search { \"size\": 0, \"aggs\":{ \"group_by_tag\":{ \"terms\":{ \"field\": \"tags\" } } } } 2\u3001\u5148\u641c\u7d22\u518d\u805a\u5408 GET /taobao/product/_search { \"size\": 0, \"query\": { \"match\": { \"name\": \"red\" } }, \"aggs\": { \"group_by_tag\": { \"terms\": { \"field\": \"tags\" } } } } 3\u3001\u5148\u5206\u7ec4\uff0c\u518d\u5e73\u5747 GET /taobao/product/_search { \"size\": 0, \"aggs\": { \"group_by_tag\": { \"terms\": { \"field\": \"tags\" }, \"aggs\": { \"avg_age\": { \"avg\": {\"field\": \"age\"} } } } } } 4\u3001\u5148\u5206\u7ec4\uff0c\u518d\u5e73\u5747\uff0c\u518d\u964d\u5e8f\u6392\u5e8f GET /taobao/product/_search { \"size\": 0, \"aggs\": { \"group_by_tag\": { \"terms\": { \"field\": \"tags\", \"order\": { \"avg_age\": \"desc\" } }, \"aggs\": { \"avg_age\": { \"avg\": { \"field\": \"age\" } } } } } } 5\u3001\u6307\u5b9a\u5e74\u9f84\u8303\u56f4\u5206\u7ec4\uff0c\u518d\u6309\u7167\u7ec4\u5185\u6807\u7b7e\u5206\u7ec4\uff0c\u6700\u540e\u8ba1\u7b97\u6bcf\u7ec4\u5e73\u5747\u4ef7\u683c GET /taobao/product/_search { \"size\": 0, \"aggs\": { \"group_by_age\": { \"range\": { \"field\": \"age\", \"ranges\": [ { \"from\": 0, \"to\": 3 }, { \"from\": 1, \"to\": 5 } ] }, \"aggs\": { \"group_by_tag\": { \"terms\": { \"field\": \"tags\" }, \"aggs\": { \"avg_age\": { \"avg\": { \"field\": \"age\" } } } } } } } }","title":"\u5341\u3001\u805a\u5408\u64cd\u4f5c aggregations"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/","text":"ElasticSearch\u539f\u7406 \u4e00\u3001\u57fa\u7840\u5206\u5e03\u5f0f\u67b6\u6784 1\u3001ElasticSearch\u5bf9\u590d\u6742\u5206\u5e03\u5f0f\u673a\u5236\u7684\u900f\u660e\u9690\u85cf\u7279\u6027 \u5206\u5e03\u5f0f\u4e3a\u4e86\u5e94\u5bf9\u5927\u91cf\u6570\u636e \uff081\uff09\u9690\u85cf\u4e86\u5206\u7247\u673a\u5236 \uff082\uff09cluster discovery \u96c6\u7fa4\u53d1\u73b0\u673a\u5236 \uff083\uff09shard\u8d1f\u8f7d\u5747\u8861 \uff084\uff09shard\u526f\u672c \uff085\uff09\u8bf7\u6c42\u8def\u7531 \uff086\uff09\u96c6\u7fa4\u6269\u5bb9 \uff087\uff09shard\u91cd\u5206\u914d 2\u3001ElasticSearch\u7684\u5782\u76f4\u6269\u5bb9\u4e0e\u6c34\u5e73\u6269\u5bb9 \uff081\uff09\u5782\u76f4\u6269\u5bb9 \u66ff\u6362\u670d\u52a1\u5668 \uff082\uff09\u6c34\u5e73\u6269\u5bb9 \u589e\u52a0\u670d\u52a1\u5668\uff08\u5e38\u7528\uff09 3\u3001\u589e\u51cf\u8282\u70b9\u65f6\u6570\u636erebalance \u4fdd\u6301\u8d1f\u8f7d\u5747\u8861 4\u3001mastar\u8282\u70b9 \uff081\uff09\u7ba1\u7406es\u96c6\u7fa4\u7684\u5143\u6570\u636e\uff0c\u7d22\u5f15\u521b\u5efa\u548c\u5220\u9664\uff0c\u7ef4\u62a4\u7d22\u5f15\u5143\u6570\u636e \uff082\uff09\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u81ea\u52a8\u9009\u4e3e\u51famastar 5\u3001\u8282\u70b9\u5e73\u7b49\u7684\u5206\u5e03\u5f0f\u67b6\u6784 \uff081\uff09\u8282\u70b9\u5bf9\u7b49\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u80fd\u63a5\u6536\u6240\u6709\u8bf7\u6c42 \uff082\uff09\u81ea\u52a8\u8def\u7531\u8bf7\u6c42 \uff083\uff09\u54cd\u5e94\u6548\u7387 \u4e8c\u3001 shard & replica\u673a\u5236 1\u3001\u4e00\u4e2aindex\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2ashard 2\u3001\u6bcf\u4e2ashard\u662f\u6700\u5c0f\u7684\u5de5\u4f5c\u5355\u5143\uff0c\u627f\u8f7d\u90e8\u5206\u6570\u636e\uff0c Lucene\u5b9e\u4f8b\uff0c\u5b8c\u6574\u7684\u521b\u5efa\u7d22\u5f15\u548c\u5904\u7406\u8bf7\u6c42\u7684\u80fd\u529b 3\u3001\u589e\u51cf\u8282\u70b9\u65f6\uff0cshard\u4f1a\u81ea\u52a8\u5728nodes\u4e2d\u8d1f\u8f7d\u5747\u8861 4\u3001primary shard\u548creplica shard\uff0c\u6bcf\u4e2adocument\u80af\u5b9a\u53ea\u5b58\u5728\u4e8e\u67d0\u4e00\u4e2aprimary shard \u4ee5\u53ca\u5bf9\u5e94\u7684replica shard\u4e2d\uff0c\u4e0d\u53ef\u80fd\u5b58\u5728\u4e8e\u591a\u4e2aprimary shard\u4e2d 5\u3001replica shard \u662fprimary shard \u7684\u526f\u672c\uff0c\u8d1f\u8d23\u5bb9\u9519\uff0c\u4ee5\u53ca\u627f\u62c5\u8bfb\u8bf7\u6c42\u8d1f\u8f7d 6\u3001primary shard\u6570\u91cf\u5728\u521b\u5efa\u7d22\u5f15\u7684\u65f6\u5019\u5c31\u56fa\u5b9a\u4e86\uff0creplica shard\u7684\u6570\u91cf\u53ef\u4ee5\u968f\u65f6\u66f4\u6539 7\u3001primary shard\u9ed8\u8ba4\u6570\u91cf5\uff0creplica shard\u9ed8\u8ba4\u662f1\uff0c\u9ed8\u8ba4\u670910\u4e2ashard 5 primary shard 5 replica shard 8\u3001primary shard \u4e0d\u80fd\u548c\u81ea\u5df1\u7684replica shard\u653e\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u5426\u5219\u8282\u70b9\u5b95\u673a\uff0cprimary shard \u548creplica shard \u90fd\u4e22\u5931\uff0c\u8d77\u4e0d\u5230\u5bb9\u9519\u4f5c\u7528\uff0c\u4f46\u662f\uff0c\u53ef\u4ee5\u548c\u5176\u4ed6primary shard\u7684replica shard \u653e\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a \u4e09\u3001 \u5355\u53f0node\u73af\u5883\u4e0b\u521b\u5efaindex 1\u3001\u5355\u53f0node\uff0c\u521b\u5efaindex\uff0c\u67093\u4e2aprimary shard 3 \u4e2areplica shard PUT /tianmao { \"settings\": { \"number_of_shards\": 3, \"number_of_replicas\": 1 } } GET /tianmao 2\u3001\u96c6\u7fa4status\u662fyellow 3\u3001\u8fd9\u65f6\u5019\uff0c\u53ea\u4f1a\u5c063\u4e2aprimary shard\u5206\u914d\u5230\u4ec5\u6709\u7684\u4e00\u4e2anode\u4e0a\uff0c\u53e6\u59163\u4e2areplica shard\u65e0\u6cd5\u5206\u914d 4\u3001\u96c6\u7fa4\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u5f53\u662f\u4e00\u65e6\u51fa\u73b0\u8282\u70b9\u5b95\u673a\uff0c\u6570\u636e\u5168\u90e8\u4e22\u5931\uff0c\u800c\u4e14\u96c6\u7fa4\u4e0d\u53ef\u7528\uff0c\u65e0\u6cd5\u627f\u63a5\u4efb\u4f55\u8bf7\u6c42 \u56db\u3001 2\u53f0node\u73af\u5883\u4e0b\u521b\u5efaindex 1\u3001\u67093\u4e2aprimary shard 3 \u4e2areplica shard 2\u3001primary shard \u540c\u6b65 replica shard 3\u3001primary shard replica shard \u90fd\u53ef\u4ee5\u5904\u7406\u8bfb\u8bf7\u6c42 \u4e94\u3001\u6a2a\u5411\u6269\u5bb9 1\u3001primary & replica\u81ea\u52a8\u8d1f\u8f7d\u5747\u8861 6 \u4e2ashard = 3 primary + 3 replica 2\u3001\u6bcf\u4e2anode\u6709\u66f4\u5c11\u7684shard\uff0cIO/CPU/Memory\u8d44\u6e90\u7ed9\u6bcf\u4e2ashard\u5206\u914d\u7684\u66f4\u591a\uff0c\u6bcf\u4e2ashard\u6027\u80fd\u66f4\u597d 3\u3001\u6269\u5bb9\u7684\u6781\u9650\uff0c6\u4e2ashard\uff083 primary + 3 replica\uff09\uff0c\u6700\u591a\u6269\u5bb9\u52306\u53f0\u673a\u5668\uff0c \u6bcf\u4e2ashard\u53ef\u4ee5\u5360\u7528\u7684\u5355\u53f0\u670d\u52a1\u5668\u7684\u6240\u6709\u8d44\u6e90\uff0c\u6027\u80fd\u6700\u597d 4\u3001\u8d85\u51fa\u6269\u5bb9\u6781\u9650\uff0c\u52a8\u6001\u4fee\u6539replica\u6570\u91cf\uff0c9\u4e2ashard\uff083 primary + 6 replica\uff09\uff0c \u6269\u5bb9\u52309\u53f0\u673a\u5668\uff0c\u6bd43\u53f0\u673a\u5668\u62e5\u67093\u500d\u7684\u8bfb\u541e\u5410\u91cf\uff0c\u6700\u591a\u5bb9\u7eb32\u53f0\u673a\u5668\u5b95\u673a 5\u30013\u53f0\u673a\u5668\u4e0b\uff0c9\u4e2ashard\uff083 primary + 6 replica\uff09\u8d44\u6e90\u66f4\u5c11\uff0c\u4f46\u662f\u5bb9\u9519\u6027\u66f4\u597d\uff0c 6\u4e2ashard \u5bb9\u5fcd1\u53f0\u5b95\u673a 6\u3001\u670d\u52a1\u5668\u5b95\u673a\uff0c\u4fdd\u8bc1\u6570\u636e\u4e0d\u4e22\u5931 \u516d\u3001Elasticsearch\u5bb9\u9519\u673a\u5236 9 shard 3 node Node1 Node2 Node3 P0 R1 R2 P1 R2 R0 P2 R0 R1 1\u3001master\u5b95\u673a\uff0c\u81ea\u52a8master\u9009\u4e3e 2\u3001replica\u5bb9\u9519\uff0c\u63d0\u5347\u4e3aprimary\uff0cstatus=yellow 3\u3001\u91cd\u542fnode\uff0c\u6570\u636e\u6062\u590d\uff0c\u4f7f\u7528\u539f\u6709shard\uff0c\u540c\u6b65\u53d1\u751f\u4fee\u6539\u7684\u90e8\u5206 status=green \u5206\u5e03\u5f0f\u6587\u6863\u7cfb\u7edf \u4e00\u3001document\u7684\u6838\u5fc3\u5143\u6570\u636e 1\u3001index\u5143\u6570\u636e \uff081\uff09\u4ee3\u8868document \u5b58\u653e\u5728\u90a3\u4e2aindex \uff082\uff09\u7c7b\u4f3c\u7684\u6570\u636e\u653e\u5728\u4e00\u4e2a\u7d22\u5f15\uff0cfield\u5b57\u6bb5\u5927\u81f4\u76f8\u540c \uff083\uff09index\u4e2d\u5305\u542b\u5f88\u591a\u7c7b\u4f3c\u7684document \uff084\uff09\u7d22\u5f15\u540d\u79f0\u5fc5\u987b\u662f\u5c0f\u5199\uff0c\u4e0d\u80fd\u7528\u4e0b\u5212\u7ebf\u5f00\u5934\uff0c\u4e0d\u80fd\u5305\u542b\u9017\u53f7 2\u3001type\u5143\u6570\u636e \uff081\uff09\u4ee3\u8868document\u5c5e\u4e8eindex\u4e2d\u7684\u7c7b\u522btype \uff082\uff09\u4e00\u4e2a\u7d22\u5f15\u901a\u5e38\u5212\u5206\u4e3a\u591a\u4e2atype\uff0c\u903b\u8f91\u4e0a\u5bf9index\u4e2d\u5bf9\u4e9b\u8bb8\u4e0d\u540c\u7684\u6570\u636e\u8fdb\u884c\u5206\u7c7b \uff083\uff09type\u540d\u53ef\u4ee5\u662f\u5927\u5199\uff0c\u5c0f\u5199\uff0c\u4f46\u662f\u4e0d\u80fd\u7528\u4e0b\u5212\u7ebf\u5f00\u5934\uff0c\u4e0d\u80fd\u5305\u542b\u9017\u53f7 3\u3001id\u5143\u6570\u636e \uff081\uff09\u4ee3\u8868document\u7684\u552f\u4e00\u6807\u8bc6\uff0c\u4e0eindex\u548ctype\u4e00\u8d77\uff0c\u552f\u4e00\u5b9a\u4f4d\u4e00\u4e2adocument \uff082\uff09\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u6307\u5b9a\uff0c\u7531es\u81ea\u52a8\u751f\u6210 \u4e8c\u3001document id\u751f\u6210\u4e24\u79cd\u65b9\u5f0f\u89e3\u6790 1\u3001\u624b\u52a8\u6307\u5b9a PUT /index/type/id { \"key\": \"value\" } \u4ece\u5176\u4ed6\u6570\u636e\u5e93\u5bfc\u5165\u53ef\u4ee5\u4f7f\u7528\u539f\u6709id 2\u3001\u81ea\u52a8\u751f\u6210 POST /index/type { \"key\": \"value\" } \u81ea\u52a8\u751f\u6210\u7684id \u957f\u5ea6\u4e3a20\u4e2a\u5b57\u7b26\uff0curl\u5b89\u5168\uff0cbase64\u7f16\u7801 GUID\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u5e76\u884c\u751f\u6210\u662f\u4e0d\u4f1a\u51b2\u7a81 \u4e09\u3001source\u5143\u6570\u636e 1\u3001source\u5143\u6570\u636e\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u539f\u5c01\u4e0d\u52a8\u8fd4\u56de 2\u3001\u81ea\u5b9a\u4e49\u8fd4\u56de\u5b57\u6bb5 PUT /shop/goods/1 { \"name\": \"iphone\", \"price\": 6000 } # \u8fd4\u56de\u5168\u90e8\u5b57\u6bb5 GET /shop/goods/1 # \u8fd4\u56de\u90e8\u5206\u5b57\u6bb5\uff0c\u591a\u4e2a\u5b57\u6bb5\u9017\u53f7\u9694\u5f00 GET /shop/goods/1?_source=name \u56db\u3001document\u64cd\u4f5c 1\u3001document\u5168\u91cf\u66ff\u6362 \uff081\uff09\u8bed\u6cd5\u683c\u5f0f\u4e0e\u521b\u5efa\u6587\u6863\u4e00\u6837\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u521b\u5efa\uff0c\u5426\u5219\u5168\u91cf\u66ff\u6362 \uff082\uff09document\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u5982\u679c\u8981\u4fee\u6539document\u5185\u5bb9\uff0c\u5176\u4e2d\u4e00\u79cd\u65b9\u5f0f\u5c31\u662f\u5168\u91cf\u66ff\u6362\uff0c \u76f4\u63a5\u5bf9document\u91cd\u5efa\u7d22\u5f15\uff0c\u66ff\u6362\u6240\u6709\u5185\u5bb9 \uff083\uff09es\u4f1a\u5c06\u65e7\u7684document\u6807\u8bb0\u4e3adeleted\uff0c\u65b0\u589e\u6211\u4eec\u7684document\uff0c \u5f53\u6211\u4eec\u521b\u5efa\u8d8a\u6765\u8d8a\u591a\u7684document\u65f6\uff0ces\u4f1a\u81ea\u52a8\u5220\u9664\u6807\u8bb0\u4e3adeleted\u7684document 2\u3001document\u5f3a\u5236\u521b\u5efa \uff081\uff09\u521b\u5efa\u6587\u6863\u8bed\u6cd5\u4e0e\u5168\u91cf\u66ff\u6362\u4e00\u6837,\u53ea\u60f3\u65b0\u5efa\u6587\u6863\uff0c\u4e0d\u60f3\u66ff\u6362\u6587\u6863\u65f6\u4f7f\u7528 \uff082\uff09\u521b\u5efa\u8bed\u6cd5 PUT /index/type/id?op_type=create or PUT /index/type/id/_create 3\u3001document\u5220\u9664 \uff081\uff09\u8bed\u6cd5 DELETE /index/type/id \uff082\uff09\u4e0d\u4f1a\u7269\u7406\u5220\u9664\uff0c\u53ea\u4f1a\u5c06\u5176\u6807\u8bb0\u4e3adeleted\uff0c\u5f53\u6570\u636e\u8d8a\u6765\u8d8a\u591a\u7684\u65f6\u5019\uff0c\u540e\u53f0\u81ea\u52a8\u5220\u9664\uff08lazy delete\u673a\u5236\uff09 \u4e94\u3001Elasticsearch\u5e76\u53d1\u51b2\u7a81\u95ee\u9898 1\u3001\u5e76\u53d1\u51b2\u7a81\u4f1a\u5bfc\u81f4\u6570\u636e\u4e0d\u51c6\u786e 2\u3001\u60b2\u89c2\u9501\u5e76\u53d1\u63a7\u5236\u65b9\u6848 \uff081\uff09\u5e38\u89c1\u4e8emysql \uff082\uff09\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u8bfb\u6570\u636e\uff0c\u5199\u56de\u53bb\u4e4b\u540e\u518d\u91ca\u653e\u6240\u9501\uff0c\u671f\u95f4\u5176\u4ed6\u7ebf\u7a0b\u4e0d\u80fd\u8bfb\u53d6\u6570\u636e \uff083\uff09\u884c\u7ea7\u9501\uff0c\u8868\u7ea7\u9501\uff0c\u8bfb\u9501\uff0c\u5199\u9501 \uff084\uff09\u4f18\u70b9\uff1a\u65b9\u4fbf\uff0c\u76f4\u63a5\u52a0\u9501 \uff085\uff09\u7f3a\u70b9\uff1a\u5e76\u53d1\u80fd\u529b\u4f4e 3\u3001\u4e50\u89c2\u9501\u5e76\u53d1\u63a7\u5236\u65b9\u6848\uff08es\u65b9\u6848\uff09 \uff081\uff09\u4e50\u89c2\u9501\u4e0d\u52a0\u9501\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u53ef\u4ee5\u64cd\u4f5c \uff082\uff09\u5199\u5165\u4e4b\u524d\u6bd4\u5bf9version\uff0c\u5982\u679c\u4e0d\u540c\uff0c\u91cd\u65b0\u8bfb\u53d6\u6570\u636e\u64cd\u4f5c\u540e\u518d\u5199\u5165 \uff083\uff09\u4f18\u70b9\uff1a\u5e76\u53d1\u80fd\u529b\u9ad8 \uff084\uff09\u7f3a\u70b9\uff1a\u64cd\u4f5c\u9ebb\u70e6\uff0c\u6bcf\u6b21\u90fd\u8981\u6bd4\u5bf9\u7248\u672c\u53f7 4\u3001es\u57fa\u4e8eversion\u8fdb\u884c\u4e50\u89c2\u9501\u5e76\u53d1\u63a7\u5236 \uff081\uff09version\u7248\u672c\u53f7\u5143\u6570\u636e \uff082\uff09\u7b2c\u4e00\u6b21\u521b\u5efadocument\uff0c\u7248\u672c\u53f7\u662f1\uff0c\u4fee\u6539\u6216\u5220\u9664\u90fd\u81ea\u52a01 \uff083\uff09document\u5220\u9664\u4e4b\u540e\uff0c\u4e0d\u4f1a\u7269\u7406\u5220\u9664\uff0c\u518d\u6b21\u5199\u5165\u4f1a\u5728\u539f\u5148\u7248\u672c\u53f7\u4e4b\u4e0a\u81ea\u589e1 \uff084\uff09primary\u548creplica\u4e4b\u95f4\u540c\u6b65\u662f\u591a\u7ebf\u7a0b\u5f02\u6b65\uff0c\u57fa\u4e8eversion\u7248\u672c\u53f7\u5e76\u53d1\u63a7\u5236 \uff085\uff09\u9ad8\u7248\u672c\u5148\u5230\uff0c\u4f4e\u7248\u672c\u540e\u5230\uff0c\u540e\u5230\u8fbe\u7684\u4f4e\u7248\u672c\u4f1a\u88ab\u4e22\u5f03\uff0c\u65b0\u6570\u636e\u4e0d\u4f1a\u88ab\u65e7\u7684\u6570\u636e\u8986\u76d6 5\u3001es\u57fa\u4e8eversion\u8fdb\u884c\u4e50\u89c2\u9501\u5e76\u53d1\u63a7\u5236\u793a\u4f8b \u4e24\u4e2a\u7ebf\u7a0b\u5bf9\u540c\u4e00\u6761\u5546\u54c1\u4fe1\u606f\u8fdb\u884c\u66f4\u65b0\u64cd\u4f5c\u8fc7\u7a0b # 1 \u3001\u67e5\u8be2\u6570\u636e GET / shop / goods / 1 { \"_version\" : 1 , \"_source\" : { \"name\" : \"iphone\" , } } # 2 \u3001\u5148\u8fdb\u884c\u66f4\u65b0 \u6210\u529f POST / shop / goods / 1 ? version = 1 { \"name\" : \"xiaomi\" } # 3 \u3001\u540e\u66f4\u65b0 \u5931\u8d25 POST / shop / goods / 1 ? version = 1 { \"name\" : \"huawei\" } # 4 \u3001\u67e5\u8be2\u6700\u65b0\u7248\u672c\u53f7 GET / shop / goods / 1 { \"_version\" : 2 , \"_source\" : { \"name\" : \"xiaomi\" , } } # 5 \u3001\u7528\u6700\u65b0\u7684\u7248\u672c\u53f7\u518d\u6b21\u66f4\u65b0 \u6210\u529f POST / shop / goods / 1 ? version = 2 { \"name\" : \"huawei\" } 6\u3001\u57fa\u4e8eexternal version\u8fdb\u884c\u4e50\u89c2\u9501\u5e76\u53d1\u63a7\u5236 es\u63d0\u4f9b\u7684version \u4e00\u81f4 \u65f6\u8fdb\u884c\u4fee\u6539\uff0c\u4e0d\u4e00\u6837\u62a5\u9519 ? version = 1 \u5f53external\u63d0\u4f9b\u7684\u7248\u672c\u53f7\u6bd4es\u4e2d\u7684\u7248\u672c\u53f7 \u5927 \u65f6\u624d\u8fdb\u884c\u4fee\u6539 ? version = 1 & version_type = external \u4f8b\u5982\uff1a # 1 \u3001\u6dfb\u52a0\u4e00\u6761\u6570\u636e PUT / shop / goods / 1 { \"name\" : \"iphone\" } # 2 \u3001\u67e5\u770b\u6570\u636e\u7248\u672c\u53f7\uff0c\u6b64\u65f6 verison = 1 GET / shop / goods / 1 # 3 \u3001\u7528\u5916\u90e8\u7248\u672c\u53f7\u4e3a 2 \u7684\u6570\u636e\u53bb\u66f4\u65b0 \u6210\u529f PUT / shop / goods / 1 ? version = 2 & version_type = external { \"name\" : \"xiaomi\" } # 4 \u3001\u518d\u6b21\u7528\u5916\u90e8\u7248\u672c\u53f7\u4e3a 2 \u7684\u6570\u636e\u53bb\u66f4\u65b0 \u5931\u8d25 PUT / shop / goods / 1 ? version = 2 & version_type = external { \"name\" : \"huawei\" } # 5 \u3001\u67e5\u770b\u7248\u672c\u53f7\uff0c\u6b64\u65f6\u7248\u672c\u53f7 version = 2 \uff0c\u4f7f\u7528\u5916\u90e8\u7248\u672c\u53f7 verison = 4 \u7684\u6570\u636e\u53bb\u66f4\u65b0 \u6210\u529f PUT / shop / goods / 1 ? version = 4 & version_type = external { \"name\" : \"huawei\" } # \u5e76\u4e14\u6700\u540e\u7684\u7248\u672c\u53f7\u663e\u793a\u4e3a version = 4 \u516d\u3001update\u5b9e\u73b0\u539f\u7406 1\u3001update \u5168\u91cf\u66f4\u65b0 \u521b\u5efa & \u66ff\u6362\u6587\u6863\u4e00\u6837\u7684\u8bed\u6cd5 PUT /index/type/id \u4e00\u822c\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u6d41\u7a0b \uff081\uff09\u5e94\u7528\u7a0b\u5e8f\u53d1\u8d77GET\u8bf7\u6c42\uff0c\u83b7\u53d6document\uff0c\u5c55\u793a\u5230\u524d\u53f0 \uff082\uff09\u7528\u6237\u524d\u53f0\u4fee\u6539\u7684\u6570\u636e\uff0c\u53d1\u9001\u5230\u540e\u53f0 \uff083\uff09\u540e\u53f0\u4ee3\u7801\u5c06\u7528\u6237\u4fee\u6539\u7684\u6570\u636e\u5728\u5185\u5b58\u4e2d\u6267\u884c\uff0c\u7136\u540e\u5c01\u88c5\u597d\u4fee\u6539\u540e\u7684\u6570\u636e \uff084\uff09\u540e\u53f0\u53d1\u8d77PUT\u8bf7\u6c42\uff0c\u5230es\u4e2d\uff0c\u8fdb\u884c\u5168\u91cf\u66f4\u65b0 \uff085\uff09es\u5c06\u65e7\u7684document\u6807\u8bb0\u4e3adeleted\uff0c\u7136\u540e\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u65b0\u7684document 2\u3001partial update \u5c40\u90e8\u66f4\u65b0 PUT /index/type/id/_update { data } 3\u3001es\u5185\u90e8\u6267\u884c\u6d41\u7a0b \uff081\uff09\u5148\u83b7\u53d6document \uff082\uff09\u5c06\u65b0\u7684\u5b57\u6bb5\u503c\u66f4\u65b0\u5230document\u4e2d \uff083\uff09\u5c06\u65e7\u7684document\u6807\u8bb0\u4e3adeleted \uff084\uff09\u5c06\u4fee\u6539\u7684document\u521b\u5efa\u51fa\u6765 4\u3001\u5c40\u90e8\u66f4\u65b0\u4f18\u70b9 \uff081\uff09\u6240\u6709\u67e5\u8be2\u3001\u4fee\u6539\u64cd\u4f5c\u53d1\u751f\u5728es\u7684shard\u5185\u90e8\uff0c\u907f\u514d\u7f51\u7edc\u5f00\u9500\uff0c\u63d0\u5347\u6548\u7387 \uff082\uff09\u51cf\u5c11\u5e76\u53d1\u51b2\u7a81 5\u3001\u5c40\u90e8\u66f4\u65b0\u6570\u636e\u793a\u4f8b # \u5199\u5165\u6570\u636e PUT / shop / goods / 1 { \"name\" : \"iphone\" } # \u5c40\u90e8\u66f4\u65b0 POST / shop / goods / 1 / _update { \"doc\" : { \"price\" : 36 } } # \u67e5\u770b\u6570\u636e GET / shop / goods / 1 6\u3001\u57fa\u4e8egroovy\u811a\u672c\u8fdb\u884cpartial update (1)\u5185\u7f6e\u811a\u672c # \u51c6\u5907\u6570\u636e PUT / shop / goods / 1 { \"name\" : \"iphone\" , \"price\" : 10 } # \u811a\u672c\u66f4\u65b0\u6570\u636e POST / shop / goods / 1 / _update { \"script\" : \"ctx._source.price+=1\" } # \u67e5\u770b\u66f4\u65b0\u7ed3\u679c GET / shop / goods / 1 { \"_source\" : { \"name\" : \"iphone\" , \"price\" : 11 } } \uff082\uff09\u5916\u90e8\u811a\u672c es\u5b89\u88c5\u76ee\u5f55\u4e0b\u65b0\u5efa\u811a\u672c\u6587\u4ef6 elasticsearch-5.2.0/config/scripts/add-shop-goods-price.groovy ctx . _source . price += 1 \u6267\u884c\u66f4\u65b0 POST /shop/goods/1/_update { \"script\": { \"lang\": \"groovy\", \"file\":\"add-shop-goods-price\" } } # \u67e5\u770b\u66f4\u65b0\u7ed3\u679c GET /shop/goods/1 { \"_source\": { \"name\": \"iphone\", \"price\": 12 } } \uff083\uff09\u901a\u8fc7\u5916\u90e8\u811a\u672c\u5220\u9664\u6587\u6863 \u65b0\u5efa\u811a\u672c\u6587\u4ef6 elasticsearch-5.2.0/config/scripts/delete-document.groovy ctx . op = ctx . _source . price == price ? 'delete' : 'none' POST /shop/goods/1/_update { \"script\": { \"lang\": \"groovy\", \"file\": \"delete-document\", \"params\": { \"price\": 12 } } } # \u67e5\u770b\u5220\u9664\u7ed3\u679c GET /shop/goods/1 { \"_index\": \"shop\", \"_type\": \"goods\", \"_id\": \"1\", \"found\": false } \uff084\uff09upsert \u64cd\u4f5c \u5982\u679cdocument\u5b58\u5728\u5219\u6267\u884c\u66f4\u65b0\u64cd\u4f5c\uff0c\u4e0d\u5b58\u5728\u5219\u6267\u884cupsert\u64cd\u4f5c # 1 \u3001\u65b0\u5efa\u6570\u636e PUT / shop / goods / 1 { \"name\" : \"iphone\" , \"price\" : 10 } # 2 \u3001\u67e5\u770b\u6570\u636e GET / shop / goods / 1 { \"_version\" : 1 , \"_source\" : { \"name\" : \"iphone\" , \"price\" : 10 } } # 3 \u3001\u66f4\u65b0\u6570\u636e POST / shop / goods / 1 / _update { \"doc\" : { \"name\" : \"huawei\" } , \"upsert\" : { \"name\" : \"xiaomi\" } } # 4 \u3001\u67e5\u770b\u66f4\u65b0\u7684\u6570\u636e version = 2 \uff0c name = huawei GET / shop / goods / 1 { \"_version\" : 2 , \"_source\" : { \"name\" : \"huawei\" , \"price\" : 10 } } # 5 \u3001\u5220\u9664\u6570\u636e DELETE / shop / goods / 1 # 6 \u3001\u518d\u6b21\u66f4\u65b0\u6570\u636e POST / shop / goods / 1 / _update { \"doc\" : { \"name\" : \"huawei\" } , \"upsert\" : { \"name\" : \"xiaomi\" } } # 7 \u3001\u67e5\u770b\u6570\u636e\uff0c vesion = 4 \uff0c name = xiaomi GET / shop / goods / 1 { \"_version\" : 4 , \"_source\" : { \"name\" : \"xiaomi\" } } 7\u3001partial update\u5185\u7f6e\u4e50\u89c2\u9501\u5e76\u53d1\u63a7\u5236 \u53ef\u4ee5\u8bbe\u7f6e\u91cd\u8bd5\u6b21\u6570 POST taobao / product / 1 / _update ? version = 1 & retry_on_conflict = 5 { \"doc\" : { \"name\" : \"red cat\" } } \u4e03\u3001\u6279\u91cf\u67e5\u8be2 1\u3001\u6279\u91cf\u67e5\u8be2\u7684\u597d\u5904 \u5982\u679c\u4e00\u6761\u4e00\u6761\u7684\u67e5\u8be2\uff0c\u67e5\u8be2100\u6761\u5c31\u8981\u53d1\u9001100\u6b21\u7f51\u7edc\u8bf7\u6c42\uff0c\u5f00\u9500\u8f83\u5927 \u5982\u679c\u6279\u91cf\u67e5\u8be2\uff0c\u67e5\u8be2100\u6761\u6570\u636e\uff0c\u53ea\u7528\u53d1\u90011\u6b21\u7f51\u7edc\u8bf7\u6c42\uff0c\u51cf\u5c11\u7f51\u7edc\u5f00\u9500 2\u3001\u5355\u6761\u67e5\u8be2 GET tianmao / product / 1 3\u3001mget \u8bed\u6cd5 GET / _mget { \"docs\" : [ { \"_index\" : \"taobao\" , \"_type\" : \"product\" , \"_id\" : 1 } , { \"_index\" : \"tianmao\" , \"_type\" : \"product\" , \"_id\" : 1 } ] } 4\u3001\u67e5\u8be2\u540c\u4e00\u4e2aindex\u4e0b\u4e0d\u540ctype\u6570\u636e GET taobao / _mget { \"docs\" : [ { \"_type\" : \"product\" , \"_id\" : 1 } , { \"_type\" : \"product\" , \"_id\" : 2 } ] } 5\u3001\u67e5\u8be2\u540c\u4e00\u4e2aindex\u4e0b\uff0c\u540ctype\u6570\u636e GET taobao / product / _mget { \"ids\" : [ 1 , 2 ] } 6\u3001mget\u5f88\u91cd\u8981 \u5982\u679c\u4e00\u6b21\u67e5\u8be2\u591a\u6761\u6570\u636e\uff0c\u90a3\u4e48\u4e45\u4f7f\u7528mget\uff0c\u51cf\u5c11\u7f51\u7edc\u5f00\u9500 \u4e03\u3001\u6279\u91cf\u64cd\u4f5c 1\u3001bulk\u8bed\u6cd5 \u6bcf\u6b21\u64cd\u4f5c\u6709\u4e24\u4e2ajson\u4e32\uff0c\u653e\u5728bulk\u91cc POST /_bulk {\"action\": {\"metadata\"}} {\"data\"} \u4f8b\u5982 \u521b\u5efa\u4e00\u4e2a\u6587\u6863 { \"index\" : { \"_index\" : \"taobao\" , \"_type\" : \"product\" , \"_id\" : \"1\" }} { \"name\" : \"Dog\" , \"price\" : 25 } 2\u3001\u53ef\u4ee5\u6267\u884cbulk\u64cd\u4f5c\u7684\u7c7b\u578b \uff081\uff09delete \u5220\u9664\u6587\u6863 \uff082\uff09create \u5f3a\u5236\u521b\u5efa PUT /index/type/id/_create \uff083\uff09index \u666e\u901aPUT\uff0c\u521b\u5efa\u6587\u6863\uff0c\u4e5f\u53ef\u662f\u5168\u91cf\u66ff\u6362\u6587\u6863 \uff084\uff09update \u6267\u884c\u7684partial update\u64cd\u4f5c \u6ce8\u610f\uff1a \u5355\u4e2ajson\u4e32\u4e0d\u80fd\u6362\u884c\uff0cjson\u4e32\u4e4b\u95f4\u5fc5\u987b\u6362\u884c \u4efb\u610f\u4e00\u4e2a\u64cd\u4f5c\u5931\u8d25\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u64cd\u4f5c\uff0c\u4f1a\u5728\u7ed3\u679c\u4e2d\u663e\u793a \u793a\u4f8b POST _bulk { \"create\" : { \"_index\" : \"taobao\" , \"_type\" : \"product\" , \"_id\" : 4 }} { \"name\" : \"Pig\" , \"price\" : 36 } { \"delete\" : { \"_index\" : \"taobao\" , \"_type\" : \"product\" , \"_id\" : 1 }} { \"index\" : { \"_index\" : \"taobao\" , \"_type\" : \"product\" , \"_id\" : 5 }} { \"name\" : \"Pig\" , \"price\" : 45 } { \"update\" : { \"_index\" : \"taobao\" , \"_type\" : \"product\" , \"_id\" : 5 }} { \"doc\" : { \"price\" : 54 }} 3\u3001\u6307\u5b9aindex POST taobao / _bulk { \"create\" : { \"_type\" : \"product\" , \"_id\" : 4 }} { \"name\" : \"Pig\" , \"price\" : 36 } 4\u3001\u6307\u5b9aindex \u548ctype POST taobao / product / _bulk { \"create\" : { \"_id\" : 4 }} { \"name\" : \"Pig\" , \"price\" : 36 } 5\u3001bulk\u6027\u80fd bulk request\u4f1a\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u5982\u679c\u592a\u5927\u53cd\u800c\u4f1a\u964d\u4f4e\u6027\u80fd\uff0c\u56e0\u6b64\u9700\u8981\u53cd\u590d\u5c1d\u8bd5\u4e00\u4e2a\u6700\u4f73\u7684bulk size \u4e00\u822c\u4ece1000~5000\u6761\u6570\u636e\u5f00\u59cb\uff0c\u5c1d\u8bd5\u589e\u52a0 \u5982\u679c\u770b\u5927\u5c0f\uff0c\u6700\u597d\u57285~15MB\u4e4b\u95f4 \u516b\u3001\u9636\u6bb5\u603b\u7ed3 1\u3001\u9636\u6bb5\u6027\u603b\u7ed3 1-8 \u5feb\u901f\u5165\u95e8\uff0c\u57fa\u672c\u539f\u7406\uff0c\u57fa\u672c\u64cd\u4f5c 9-13 ES\u5206\u5e03\u5f0f\u7684\u57fa\u672c\u539f\u7406\uff0c 14-27 document\u8bb2\u89e3 ElasticSearch \u6700\u6838\u5fc3\u529f\u80fd \u5206\u5e03\u5f0f\u6587\u6863\u7684\u6570\u636e\u5b58\u50a8\u7cfb\u7edf \u5206\u5e03\u5f0f distributed document store \u6587\u6863\u6570\u636e \u53ef\u4ee5\u5b58\u50a8json\u683c\u5f0f\u7684\u6587\u6863\uff0c\u6838\u5fc3\u6570\u636e\u7ed3\u6784 \u5b58\u50a8\u7cfb\u7edf \u5bf9\u6570\u636e\u8fdb\u884c\u5b58\u50a8\uff0c\u67e5\u8be2\uff0c\u521b\u5efa\uff0c\u66f4\u65b0\uff0c\u5220\u9664 \u4e00\u4e2aNoSQL\u5b58\u50a8\u7cfb\u7edf \u64cd\u4f5cdocument \u53ef\u4ee5\u5f00\u53d1\u7684\u5e94\u7528\u7a0b\u5e8f \uff081\uff09\u6570\u636e\u91cf\u8f83\u5927\uff0c\u5feb\u901f\u8fdb\u884c\u6269\u5bb9\uff0c\u627f\u8f7d\u5927\u91cf\u6570\u636e \uff082\uff09\u6570\u636e\u7ed3\u6784\u7075\u6d3b\u64cd\u4f5c\uff0c\u4e0d\u7528\u53bb\u5904\u7406\u4f20\u7edf\u6570\u636e\u5e93\u4e2d\u7684\u8868 \uff083\uff09\u5bf9\u6570\u636e\u64cd\u4f5c\u8f83\u4e3a\u7b80\u5355\uff0c\u57fa\u672c\u7684\u589e\u5220\u6539\u67e5 \uff084\uff09NoSQL\u6570\u636e\u5e93\uff0c\u4e5f\u9002\u7528\u4ee5\u4e0a\u573a\u666f \u4e5d\u3001document\u6570\u636e\u8def\u7531\u539f\u7406 1\u3001document\u8def\u7531\uff0c\u6570\u636e\u8def\u7531 \u4e00\u4e2aindex\u4f1a\u88ab\u5206\u6210\u591a\u7247\uff0c\u6bcf\u7247\u90fd\u5728\u4e00\u4e2ashard\u4e2d\uff0c \u4e00\u4e2adocument\uff0c\u53ea\u80fd\u5b58\u5728\u4e00\u4e2ashard\u4e2d \u5ba2\u6237\u7aef\u521b\u5efadocument\u7684\u65f6\u5019\uff0ces\u5c31\u4f1a\u51b3\u5b9adocument\u5b58\u653e\u5728\u54ea\u4e2ashard\u4e0a 2\u3001\u8def\u7531\u7b97\u6cd5 shard = hash ( routing ) % number_of_primary_shards \u4e3e\u4f8b\uff1a \u4e00\u4e2aindex \u67093\u4e2aprimary shard P0, P1, P2 \uff081\uff09\u589e\u5220\u6539\u67e5document\u65f6\u5019\uff0c\u4f1a\u6709\u4e00\u4e2arouting number \u9ed8\u8ba4 routing = id \uff082\uff09\u4f20\u5165hash\u51fd\u6570\u4ea7\u751frouting\u7684hash\u503c hash(routing) = 21 \uff083\uff09hash\u503c \u5bf9index \u7684primary shard\u6570\u91cf\u53d6\u4f59 21 % 3 =0 \uff084\uff09\u5c31\u51b3\u5b9a\u4e86\u8fd9\u4e2adocument \u653e\u5728 P0\u4e4b\u4e0a \u51b3\u5b9adocument \u5728\u54ea\u4e2ashard\u4e0a\uff0c\u6700\u91cd\u8981\u7684\u503c\u662frouting\uff0c\u9ed8\u8ba4\u662fid\uff0c\u4e5f\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a \u76f8\u540c\u7684routing\u503c\uff0c\u6bcf\u6b21\u6c42hash\u518d\u6c42\u4f59\uff0c\u7ed3\u679c\u4e5f\u4e00\u6837 \u7ed3\u679c\u4e00\u5b9a\u5728 0 ~ number_of_primary_shards - 1\u4e4b\u95f4 \u9ed8\u8ba4\u7684routing\u662fid\uff0c\u4e5f\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a \u4ee5\u4fbf\u540e\u7eed\u8fdb\u884c\u5e94\u7528\u7ea7\u522b\u7684\u8d1f\u8f7d\u5747\u8861\uff0c\u4ee5\u53ca\u63d0\u5347\u6279\u91cf\u8bfb\u53d6\u7684\u6027\u80fd\u4e5f\u5f88\u6709\u5e2e\u52a9 PUT /index/type/id?routing=<user_id> \u57fa\u4e8edocument\u8def\u7531\u7b97\u6cd5\uff0cprimary shard\u5efa\u7acb\u4e4b\u540e\u5c31\u4e0d\u80fd\u4fee\u6539\uff0c\u4f46\u662freplica shard\u53ef\u4ee5\u4fee\u6539 \u5341\u3001document\u589e\u5220\u6539\u5185\u90e8\u539f\u7406 1\u3001\u5ba2\u6237\u7aef\u9009\u62e9\u4e00\u4e2anode\u53d1\u9001\u8bf7\u6c42\u8fc7\u53bb\uff0c\u8fd9\u4e2anode\u5c31\u662fcoordinating node(\u534f\u8c03\u8282\u70b9) 2\u3001coordinating node \u5bf9document\u8fdb\u884c\u8def\u7531\uff0c\u5c06\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u5bf9\u5e94\u7684node\uff08\u6709primary shard\uff09 3\u3001\u5b9e\u9645\u7684node\u4e0aprimary shard\u5904\u7406\u8bf7\u6c42\uff0c\u7136\u540e\u5c06\u6570\u636e\u540c\u6b65\u5230replica shard 4\u3001coordinating node \u5982\u679c\u53d1\u73b0primary node \u548c\u6240\u5c5e replica node\u90fd\u641e\u5b9a\u4e4b\u540e\uff0c\u5c31\u653e\u56de\u54cd\u5e94\u7ed3\u679c\u7ed9\u5ba2\u6237\u7aef \u4f8b\u5982 3\u4e2a\u8282\u70b9\uff0c3\u4e2aprimary shard replica=1\uff0c replica shard=3 \u603b\u51716\u4e2ashard client \u8981\u521b\u5efa\u4e00\u4e2adocument docuemnt\u53ef\u4ee5\u53d1\u9001\u4efb\u610f\u4e00\u4e2anode \u589e\u5220\u6539\u64cd\u4f5c\u53ea\u80fd\u7531primary shard\u64cd\u4f5c\uff0c\u4f1a\u81ea\u52a8\u540c\u6b65\u5230replica sahrd \u5341\u4e00\u3001\u5206\u5e03\u5f0f\u6587\u6863\u7cfb\u7edf 1\u3001consistency \u53d1\u9001\u589e\u5220\u6539\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5e26\u4e0a\u4e00\u4e2aconsistency\u53c2\u6570\uff0c\u6307\u660e\u6211\u4eec\u60f3\u8981\u7684\u5199\u4e00\u81f4\u6027 PUT /index/type/id?consistency=quorum one(primary shard): \u5199\u64cd\u4f5c\uff0c\u53ea\u8981primary shard\u662factive\u5c31\u53ef\u4ee5\u6267\u884c all(all shard): \u5199\u64cd\u4f5c\uff0c\u5fc5\u987b\u6240\u6709priamry shard\u548creplica shard\u90fd\u662factive\u624d\u6267\u884c quorum(default): \u9ed8\u8ba4\u503c\uff0c\u8981\u6c42\u6240\u6709\u7684shard\uff0c\u5927\u90e8\u5206shar\u90fd\u662f\u6d3b\u8dc3\u7684\u624d\u53ef\u4ee5\u6267\u884c\u5199\u64cd\u4f5c 2\u3001quorum\u673a\u5236 \u5199\u4e4b\u524d\u5fc5\u987b\u786e\u4fdd\u5927\u591a\u6570shard\u90fd\u53ef\u7528\uff0c\u5f53number_of_replica > 1\u65f6\u624d\u751f\u6548 \u8ba1\u7b97\u516c\u5f0f quorum = int (( primary + number_of_replica ) / 2 ) + 1 \u4e3e\u4f8b\uff1a primary_shard=3\uff0c number_of_replica=1, \u603bshard=6 quorum = int((3 + 1)/2) + 1 = 3 \u6240\u4ee56\u4e2ashard\uff0c\u81f3\u5c113\u4e2ashard\u5904\u4e8eactive\uff0c\u624d\u53ef\u4ee5\u6267\u884c\u5199\u64cd\u4f5c 3\u3001\u5982\u679c\u8282\u70b9\u6570\u91cf\u5c11\u4e8equorum\u6570\u91cf\uff0c\u53ef\u80fd\u5bfc\u81f4quorum\u4e0d\u9f50\u5168\uff0c\u5bfc\u81f4\u65e0\u6cd5\u6267\u884c\u5199\u64cd\u4f5c primary \u548creplica \u5fc5\u987b\u5728\u4e0d\u540c\u8282\u70b9\u4e0a\uff0c\u5982\u679c\u4e24\u4e2a\u673a\u5668\uff0c\u6709\u53ef\u80fd\u51fa\u73b03\u4e2ashard\u5206\u914d\u4e0d\u9f50\u5168\uff0c \u6b64\u65f6\u53ef\u80fd\u56de\u51fa\u73b0\u5199\u64cd\u4f5c\u65e0\u6cd5\u6267\u884c \u4f8b\u5982\uff1a node=2\uff0c primay=1 replica=3 quorum = int((primay + replica)/2) + 1 = 3 node1 -> primary node2 -> replica1 \u6240\u4ee5active=2 < quorum=3, \u4e0d\u6ee1\u8db3quorum\u673a\u5236 \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7279\u6b8a\u573a\u666f\uff0c\u5c31\u662fnumber_of_replica>1\u624d\u751f\u6548 \u5982\u679c\u4e0d\u505a\u5904\u7406\uff0c\u5355\u8282\u70b9\u5c31\u65e0\u6cd5\u5de5\u4f5c 4\u3001quorum\u4e0d\u9f50\u5168\u65f6\uff0cwait\uff0c\u9ed8\u8ba41\u5206\u949f\uff0ctimeout \u5199\u64cd\u4f5c\u53ef\u4ee5\u8bbe\u7f6etimeout\u53c2\u6570,\u5355\u4f4d \u6beb\u79d2 PUT /index/type/id?timeout=30 \u5341\u4e8c\u3001document\u67e5\u8be2\u5185\u90e8\u539f\u7406 1\u3001\u5ba2\u6237\u7aef\u53d1\u9001\u8bf7\u6c42\u5230\u4efb\u610f\u4e00\u4e2anode 2\u3001coordinating node\u63a5\u6536\u5230document\u8bfb\u8bf7\u6c42\u540e\uff0c\u8fdb\u884c\u8def\u7531\uff0c\u8f6c\u53d1\u7ed9\u5bf9\u5e94\u7684node\uff0c \u968f\u673a\u8f6e\u8be2\u7b97\u6cd5\u5728primary shard \u548c replica shard\u4e2d\u968f\u673a\u9009\u4e00\u4e2ashard\uff0c\u4f7f\u5f97\u8d1f\u8f7d\u5747\u8861 3\u3001\u63a5\u6536\u8bf7\u6c42\u7684node\u8fd4\u56dedocument\u7ed9coordination node 4\u3001coordinating node\u8fd4\u56dedocument\u7ed9\u5ba2\u6237\u7aef 5\u3001\u7279\u6b8a\u60c5\u51b5\uff0cdocument\u5982\u679c\u8fd8\u5728\u5efa\u7acb\u7d22\u5f15\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u80fd\u53ea\u6709primary shard\u6709\u6570\u636e\uff0creplica shard\u6ca1\u6570\u636e\uff0c \u53ef\u80fd\u5bfc\u81f4\u65e0\u6cd5\u8bfb\u53d6\u5230document\uff0c\u4f46\u662fdocument\u5b8c\u6210\u7d22\u5f15\u5efa\u7acb\u4e4b\u540e\uff0cprimary shard\u548creplica shard\u5c31\u90fd\u6709\u6570\u636e\u4e86 \u5bf9\u4e8e\u8bfb\u8bf7\u6c42\uff0c\u4e0d\u4e00\u5b9a\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230primary shard\u4e5f\u53ef\u4ee5\u8f6c\u53d1\u5230replica shard replica shard\u4e5f\u53ef\u4ee5\u5904\u7406\u6240\u6709\u7684\u8bfb\u8bf7\u6c42 \u4f7f\u7528round-robin \u968f\u673a\u8f6e\u8be2\u7b97\u6cd5 \u6bd4\u5982\u8bf4\uff1a coordinating node\u63a5\u6536\u5230\u4e00\u4e2adocument\u76844\u6b21\u67e5\u8be2\uff0c\u5c31\u4f1a\u4f7f\u7528\u7b97\u6cd5 \u5c062\u6b21\u67e5\u8be2\u8bf7\u6c42\u8f6c\u53d1\u7ed9P1\uff0c\u5c062\u6b21\u67e5\u8be2\u8bf7\u6c42\u8f6c\u53d1\u7ed9R1 \u5c3d\u91cf\u8ba9primary shard \u548c\u6240\u6709\u7684replica shard\u5747\u5300\u670d\u52a1\u8bfb\u8bf7\u6c42\uff0c\u4f7f\u5f97\u8d1f\u8f7d\u5747\u8861 \u5341\u4e09\u3001bulk api json\u683c\u5f0f\u4e0e\u5e95\u5c42\u6027\u80fd bulk api Json\u683c\u5f0f { \"action\" : \"meta\" } { \"data\" } 1\u3001bulk\u4e2d\u7684\u6bcf\u4e2a\u64cd\u4f5c\u90fd\u53ef\u80fd\u8981\u8f6c\u53d1\u5230\u4e0d\u540cnode\u7684shard\u53bb\u6267\u884c 2\u3001\u5982\u679c\u91c7\u7528\u6bd4\u8f83\u826f\u597d\u7684json\u6570\u7ec4\u683c\u5f0f \uff081\uff09\u5c06json\u6570\u7ec4\u89e3\u6790\u4e3aJSONArray\u5bf9\u8c61 \u6587\u672c->JsonArray\u5bf9\u8c61 \uff082\uff09\u5bf9\u6bcf\u4e2a\u8bf7\u6c42\u4e2d\u7684document\u8fdb\u884c\u8def\u7531 \uff083\uff09\u4e3a\u8def\u7531\u5230\u540c\u4e00\u4e2ashard\u4e0a\u7684\u591a\u4e2a\u8bf7\u6c42\uff0c\u521b\u5efa\u4e00\u4e2a\u8bf7\u6c42\u6570\u7ec4 \uff084\uff09\u5c06\u5e8f\u5217\u5316\u540e\u7684\u6570\u636e\u53d1\u9001\u5230\u5bf9\u5e94\u7684\u8282\u70b9\u4e0a\u53bb 3\u3001\u8017\u8d39\u66f4\u591a\u5185\u5b58\uff0c\u66f4\u591a\u7684jvm\u5f00\u9500 bulk size \u6700\u4f73\u5927\u5c0f\uff0c\u5982\u679c\u5355\u6b21\u4f20\u8f93\u6570\u636e\u8fc7\u591a\uff0c\u5185\u5b58\u5360\u7528\u8fc7\u591a\uff0c\u6027\u80fd\u4e0b\u964d\uff0c\u5783\u573e\u56de\u6536\u8017\u8d39\u65f6\u95f4 4\u3001\u73b0\u5728\u7684\u65b9\u5f0f \uff081\uff09\u76f4\u63a5\u6309\u7167\u6362\u884c\u7b26\u5207\u5272json \uff082\uff09\u5bf9\u6bcf\u4e24\u4e2a\u4e00\u7ec4\u7684json\uff0c\u8bfb\u53d6mete\uff0c\u8fdb\u884cdocument\u8def\u7531 \uff083\uff09\u76f4\u63a5\u5c06\u5bf9\u5e94\u7684json\u53d1\u9001\u5230node\u4e0a\u53bb 5\u3001\u6700\u5927\u7684\u4f18\u52bf\u5728\u4e8e\uff0c\u4e0d\u9700\u8981\u5c06json\u6570\u7ec4\u89e3\u6790\u4e3a\u4e00\u4e2aJSONArray\u5bf9\u8c61\uff0c \u5f62\u6210\u4e00\u4efd\u5927\u6570\u636e\u62f7\u8d1d\uff0c\u907f\u514d\u4e86\u5185\u5b58\u7a7a\u95f4\u7684\u6d6a\u8d39","title":"2\u3001ElasticSearch\u539f\u7406"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#elasticsearch","text":"","title":"ElasticSearch\u539f\u7406"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#_1","text":"1\u3001ElasticSearch\u5bf9\u590d\u6742\u5206\u5e03\u5f0f\u673a\u5236\u7684\u900f\u660e\u9690\u85cf\u7279\u6027 \u5206\u5e03\u5f0f\u4e3a\u4e86\u5e94\u5bf9\u5927\u91cf\u6570\u636e \uff081\uff09\u9690\u85cf\u4e86\u5206\u7247\u673a\u5236 \uff082\uff09cluster discovery \u96c6\u7fa4\u53d1\u73b0\u673a\u5236 \uff083\uff09shard\u8d1f\u8f7d\u5747\u8861 \uff084\uff09shard\u526f\u672c \uff085\uff09\u8bf7\u6c42\u8def\u7531 \uff086\uff09\u96c6\u7fa4\u6269\u5bb9 \uff087\uff09shard\u91cd\u5206\u914d 2\u3001ElasticSearch\u7684\u5782\u76f4\u6269\u5bb9\u4e0e\u6c34\u5e73\u6269\u5bb9 \uff081\uff09\u5782\u76f4\u6269\u5bb9 \u66ff\u6362\u670d\u52a1\u5668 \uff082\uff09\u6c34\u5e73\u6269\u5bb9 \u589e\u52a0\u670d\u52a1\u5668\uff08\u5e38\u7528\uff09 3\u3001\u589e\u51cf\u8282\u70b9\u65f6\u6570\u636erebalance \u4fdd\u6301\u8d1f\u8f7d\u5747\u8861 4\u3001mastar\u8282\u70b9 \uff081\uff09\u7ba1\u7406es\u96c6\u7fa4\u7684\u5143\u6570\u636e\uff0c\u7d22\u5f15\u521b\u5efa\u548c\u5220\u9664\uff0c\u7ef4\u62a4\u7d22\u5f15\u5143\u6570\u636e \uff082\uff09\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u81ea\u52a8\u9009\u4e3e\u51famastar 5\u3001\u8282\u70b9\u5e73\u7b49\u7684\u5206\u5e03\u5f0f\u67b6\u6784 \uff081\uff09\u8282\u70b9\u5bf9\u7b49\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u80fd\u63a5\u6536\u6240\u6709\u8bf7\u6c42 \uff082\uff09\u81ea\u52a8\u8def\u7531\u8bf7\u6c42 \uff083\uff09\u54cd\u5e94\u6548\u7387","title":"\u4e00\u3001\u57fa\u7840\u5206\u5e03\u5f0f\u67b6\u6784"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#shard-replica","text":"1\u3001\u4e00\u4e2aindex\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2ashard 2\u3001\u6bcf\u4e2ashard\u662f\u6700\u5c0f\u7684\u5de5\u4f5c\u5355\u5143\uff0c\u627f\u8f7d\u90e8\u5206\u6570\u636e\uff0c Lucene\u5b9e\u4f8b\uff0c\u5b8c\u6574\u7684\u521b\u5efa\u7d22\u5f15\u548c\u5904\u7406\u8bf7\u6c42\u7684\u80fd\u529b 3\u3001\u589e\u51cf\u8282\u70b9\u65f6\uff0cshard\u4f1a\u81ea\u52a8\u5728nodes\u4e2d\u8d1f\u8f7d\u5747\u8861 4\u3001primary shard\u548creplica shard\uff0c\u6bcf\u4e2adocument\u80af\u5b9a\u53ea\u5b58\u5728\u4e8e\u67d0\u4e00\u4e2aprimary shard \u4ee5\u53ca\u5bf9\u5e94\u7684replica shard\u4e2d\uff0c\u4e0d\u53ef\u80fd\u5b58\u5728\u4e8e\u591a\u4e2aprimary shard\u4e2d 5\u3001replica shard \u662fprimary shard \u7684\u526f\u672c\uff0c\u8d1f\u8d23\u5bb9\u9519\uff0c\u4ee5\u53ca\u627f\u62c5\u8bfb\u8bf7\u6c42\u8d1f\u8f7d 6\u3001primary shard\u6570\u91cf\u5728\u521b\u5efa\u7d22\u5f15\u7684\u65f6\u5019\u5c31\u56fa\u5b9a\u4e86\uff0creplica shard\u7684\u6570\u91cf\u53ef\u4ee5\u968f\u65f6\u66f4\u6539 7\u3001primary shard\u9ed8\u8ba4\u6570\u91cf5\uff0creplica shard\u9ed8\u8ba4\u662f1\uff0c\u9ed8\u8ba4\u670910\u4e2ashard 5 primary shard 5 replica shard 8\u3001primary shard \u4e0d\u80fd\u548c\u81ea\u5df1\u7684replica shard\u653e\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u5426\u5219\u8282\u70b9\u5b95\u673a\uff0cprimary shard \u548creplica shard \u90fd\u4e22\u5931\uff0c\u8d77\u4e0d\u5230\u5bb9\u9519\u4f5c\u7528\uff0c\u4f46\u662f\uff0c\u53ef\u4ee5\u548c\u5176\u4ed6primary shard\u7684replica shard \u653e\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a","title":"\u4e8c\u3001 shard &amp; replica\u673a\u5236"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#nodeindex","text":"1\u3001\u5355\u53f0node\uff0c\u521b\u5efaindex\uff0c\u67093\u4e2aprimary shard 3 \u4e2areplica shard PUT /tianmao { \"settings\": { \"number_of_shards\": 3, \"number_of_replicas\": 1 } } GET /tianmao 2\u3001\u96c6\u7fa4status\u662fyellow 3\u3001\u8fd9\u65f6\u5019\uff0c\u53ea\u4f1a\u5c063\u4e2aprimary shard\u5206\u914d\u5230\u4ec5\u6709\u7684\u4e00\u4e2anode\u4e0a\uff0c\u53e6\u59163\u4e2areplica shard\u65e0\u6cd5\u5206\u914d 4\u3001\u96c6\u7fa4\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u5f53\u662f\u4e00\u65e6\u51fa\u73b0\u8282\u70b9\u5b95\u673a\uff0c\u6570\u636e\u5168\u90e8\u4e22\u5931\uff0c\u800c\u4e14\u96c6\u7fa4\u4e0d\u53ef\u7528\uff0c\u65e0\u6cd5\u627f\u63a5\u4efb\u4f55\u8bf7\u6c42","title":"\u4e09\u3001 \u5355\u53f0node\u73af\u5883\u4e0b\u521b\u5efaindex"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#2nodeindex","text":"1\u3001\u67093\u4e2aprimary shard 3 \u4e2areplica shard 2\u3001primary shard \u540c\u6b65 replica shard 3\u3001primary shard replica shard \u90fd\u53ef\u4ee5\u5904\u7406\u8bfb\u8bf7\u6c42","title":"\u56db\u3001 2\u53f0node\u73af\u5883\u4e0b\u521b\u5efaindex"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#_2","text":"1\u3001primary & replica\u81ea\u52a8\u8d1f\u8f7d\u5747\u8861 6 \u4e2ashard = 3 primary + 3 replica 2\u3001\u6bcf\u4e2anode\u6709\u66f4\u5c11\u7684shard\uff0cIO/CPU/Memory\u8d44\u6e90\u7ed9\u6bcf\u4e2ashard\u5206\u914d\u7684\u66f4\u591a\uff0c\u6bcf\u4e2ashard\u6027\u80fd\u66f4\u597d 3\u3001\u6269\u5bb9\u7684\u6781\u9650\uff0c6\u4e2ashard\uff083 primary + 3 replica\uff09\uff0c\u6700\u591a\u6269\u5bb9\u52306\u53f0\u673a\u5668\uff0c \u6bcf\u4e2ashard\u53ef\u4ee5\u5360\u7528\u7684\u5355\u53f0\u670d\u52a1\u5668\u7684\u6240\u6709\u8d44\u6e90\uff0c\u6027\u80fd\u6700\u597d 4\u3001\u8d85\u51fa\u6269\u5bb9\u6781\u9650\uff0c\u52a8\u6001\u4fee\u6539replica\u6570\u91cf\uff0c9\u4e2ashard\uff083 primary + 6 replica\uff09\uff0c \u6269\u5bb9\u52309\u53f0\u673a\u5668\uff0c\u6bd43\u53f0\u673a\u5668\u62e5\u67093\u500d\u7684\u8bfb\u541e\u5410\u91cf\uff0c\u6700\u591a\u5bb9\u7eb32\u53f0\u673a\u5668\u5b95\u673a 5\u30013\u53f0\u673a\u5668\u4e0b\uff0c9\u4e2ashard\uff083 primary + 6 replica\uff09\u8d44\u6e90\u66f4\u5c11\uff0c\u4f46\u662f\u5bb9\u9519\u6027\u66f4\u597d\uff0c 6\u4e2ashard \u5bb9\u5fcd1\u53f0\u5b95\u673a 6\u3001\u670d\u52a1\u5668\u5b95\u673a\uff0c\u4fdd\u8bc1\u6570\u636e\u4e0d\u4e22\u5931","title":"\u4e94\u3001\u6a2a\u5411\u6269\u5bb9"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#elasticsearch_1","text":"9 shard 3 node Node1 Node2 Node3 P0 R1 R2 P1 R2 R0 P2 R0 R1 1\u3001master\u5b95\u673a\uff0c\u81ea\u52a8master\u9009\u4e3e 2\u3001replica\u5bb9\u9519\uff0c\u63d0\u5347\u4e3aprimary\uff0cstatus=yellow 3\u3001\u91cd\u542fnode\uff0c\u6570\u636e\u6062\u590d\uff0c\u4f7f\u7528\u539f\u6709shard\uff0c\u540c\u6b65\u53d1\u751f\u4fee\u6539\u7684\u90e8\u5206 status=green","title":"\u516d\u3001Elasticsearch\u5bb9\u9519\u673a\u5236"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#_3","text":"","title":"\u5206\u5e03\u5f0f\u6587\u6863\u7cfb\u7edf"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#document","text":"1\u3001index\u5143\u6570\u636e \uff081\uff09\u4ee3\u8868document \u5b58\u653e\u5728\u90a3\u4e2aindex \uff082\uff09\u7c7b\u4f3c\u7684\u6570\u636e\u653e\u5728\u4e00\u4e2a\u7d22\u5f15\uff0cfield\u5b57\u6bb5\u5927\u81f4\u76f8\u540c \uff083\uff09index\u4e2d\u5305\u542b\u5f88\u591a\u7c7b\u4f3c\u7684document \uff084\uff09\u7d22\u5f15\u540d\u79f0\u5fc5\u987b\u662f\u5c0f\u5199\uff0c\u4e0d\u80fd\u7528\u4e0b\u5212\u7ebf\u5f00\u5934\uff0c\u4e0d\u80fd\u5305\u542b\u9017\u53f7 2\u3001type\u5143\u6570\u636e \uff081\uff09\u4ee3\u8868document\u5c5e\u4e8eindex\u4e2d\u7684\u7c7b\u522btype \uff082\uff09\u4e00\u4e2a\u7d22\u5f15\u901a\u5e38\u5212\u5206\u4e3a\u591a\u4e2atype\uff0c\u903b\u8f91\u4e0a\u5bf9index\u4e2d\u5bf9\u4e9b\u8bb8\u4e0d\u540c\u7684\u6570\u636e\u8fdb\u884c\u5206\u7c7b \uff083\uff09type\u540d\u53ef\u4ee5\u662f\u5927\u5199\uff0c\u5c0f\u5199\uff0c\u4f46\u662f\u4e0d\u80fd\u7528\u4e0b\u5212\u7ebf\u5f00\u5934\uff0c\u4e0d\u80fd\u5305\u542b\u9017\u53f7 3\u3001id\u5143\u6570\u636e \uff081\uff09\u4ee3\u8868document\u7684\u552f\u4e00\u6807\u8bc6\uff0c\u4e0eindex\u548ctype\u4e00\u8d77\uff0c\u552f\u4e00\u5b9a\u4f4d\u4e00\u4e2adocument \uff082\uff09\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u6307\u5b9a\uff0c\u7531es\u81ea\u52a8\u751f\u6210","title":"\u4e00\u3001document\u7684\u6838\u5fc3\u5143\u6570\u636e"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#document-id","text":"1\u3001\u624b\u52a8\u6307\u5b9a PUT /index/type/id { \"key\": \"value\" } \u4ece\u5176\u4ed6\u6570\u636e\u5e93\u5bfc\u5165\u53ef\u4ee5\u4f7f\u7528\u539f\u6709id 2\u3001\u81ea\u52a8\u751f\u6210 POST /index/type { \"key\": \"value\" } \u81ea\u52a8\u751f\u6210\u7684id \u957f\u5ea6\u4e3a20\u4e2a\u5b57\u7b26\uff0curl\u5b89\u5168\uff0cbase64\u7f16\u7801 GUID\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u5e76\u884c\u751f\u6210\u662f\u4e0d\u4f1a\u51b2\u7a81","title":"\u4e8c\u3001document id\u751f\u6210\u4e24\u79cd\u65b9\u5f0f\u89e3\u6790"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#source","text":"1\u3001source\u5143\u6570\u636e\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u539f\u5c01\u4e0d\u52a8\u8fd4\u56de 2\u3001\u81ea\u5b9a\u4e49\u8fd4\u56de\u5b57\u6bb5 PUT /shop/goods/1 { \"name\": \"iphone\", \"price\": 6000 } # \u8fd4\u56de\u5168\u90e8\u5b57\u6bb5 GET /shop/goods/1 # \u8fd4\u56de\u90e8\u5206\u5b57\u6bb5\uff0c\u591a\u4e2a\u5b57\u6bb5\u9017\u53f7\u9694\u5f00 GET /shop/goods/1?_source=name","title":"\u4e09\u3001source\u5143\u6570\u636e"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#document_1","text":"1\u3001document\u5168\u91cf\u66ff\u6362 \uff081\uff09\u8bed\u6cd5\u683c\u5f0f\u4e0e\u521b\u5efa\u6587\u6863\u4e00\u6837\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u521b\u5efa\uff0c\u5426\u5219\u5168\u91cf\u66ff\u6362 \uff082\uff09document\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u5982\u679c\u8981\u4fee\u6539document\u5185\u5bb9\uff0c\u5176\u4e2d\u4e00\u79cd\u65b9\u5f0f\u5c31\u662f\u5168\u91cf\u66ff\u6362\uff0c \u76f4\u63a5\u5bf9document\u91cd\u5efa\u7d22\u5f15\uff0c\u66ff\u6362\u6240\u6709\u5185\u5bb9 \uff083\uff09es\u4f1a\u5c06\u65e7\u7684document\u6807\u8bb0\u4e3adeleted\uff0c\u65b0\u589e\u6211\u4eec\u7684document\uff0c \u5f53\u6211\u4eec\u521b\u5efa\u8d8a\u6765\u8d8a\u591a\u7684document\u65f6\uff0ces\u4f1a\u81ea\u52a8\u5220\u9664\u6807\u8bb0\u4e3adeleted\u7684document 2\u3001document\u5f3a\u5236\u521b\u5efa \uff081\uff09\u521b\u5efa\u6587\u6863\u8bed\u6cd5\u4e0e\u5168\u91cf\u66ff\u6362\u4e00\u6837,\u53ea\u60f3\u65b0\u5efa\u6587\u6863\uff0c\u4e0d\u60f3\u66ff\u6362\u6587\u6863\u65f6\u4f7f\u7528 \uff082\uff09\u521b\u5efa\u8bed\u6cd5 PUT /index/type/id?op_type=create or PUT /index/type/id/_create 3\u3001document\u5220\u9664 \uff081\uff09\u8bed\u6cd5 DELETE /index/type/id \uff082\uff09\u4e0d\u4f1a\u7269\u7406\u5220\u9664\uff0c\u53ea\u4f1a\u5c06\u5176\u6807\u8bb0\u4e3adeleted\uff0c\u5f53\u6570\u636e\u8d8a\u6765\u8d8a\u591a\u7684\u65f6\u5019\uff0c\u540e\u53f0\u81ea\u52a8\u5220\u9664\uff08lazy delete\u673a\u5236\uff09","title":"\u56db\u3001document\u64cd\u4f5c"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#elasticsearch_2","text":"1\u3001\u5e76\u53d1\u51b2\u7a81\u4f1a\u5bfc\u81f4\u6570\u636e\u4e0d\u51c6\u786e 2\u3001\u60b2\u89c2\u9501\u5e76\u53d1\u63a7\u5236\u65b9\u6848 \uff081\uff09\u5e38\u89c1\u4e8emysql \uff082\uff09\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u8bfb\u6570\u636e\uff0c\u5199\u56de\u53bb\u4e4b\u540e\u518d\u91ca\u653e\u6240\u9501\uff0c\u671f\u95f4\u5176\u4ed6\u7ebf\u7a0b\u4e0d\u80fd\u8bfb\u53d6\u6570\u636e \uff083\uff09\u884c\u7ea7\u9501\uff0c\u8868\u7ea7\u9501\uff0c\u8bfb\u9501\uff0c\u5199\u9501 \uff084\uff09\u4f18\u70b9\uff1a\u65b9\u4fbf\uff0c\u76f4\u63a5\u52a0\u9501 \uff085\uff09\u7f3a\u70b9\uff1a\u5e76\u53d1\u80fd\u529b\u4f4e 3\u3001\u4e50\u89c2\u9501\u5e76\u53d1\u63a7\u5236\u65b9\u6848\uff08es\u65b9\u6848\uff09 \uff081\uff09\u4e50\u89c2\u9501\u4e0d\u52a0\u9501\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u53ef\u4ee5\u64cd\u4f5c \uff082\uff09\u5199\u5165\u4e4b\u524d\u6bd4\u5bf9version\uff0c\u5982\u679c\u4e0d\u540c\uff0c\u91cd\u65b0\u8bfb\u53d6\u6570\u636e\u64cd\u4f5c\u540e\u518d\u5199\u5165 \uff083\uff09\u4f18\u70b9\uff1a\u5e76\u53d1\u80fd\u529b\u9ad8 \uff084\uff09\u7f3a\u70b9\uff1a\u64cd\u4f5c\u9ebb\u70e6\uff0c\u6bcf\u6b21\u90fd\u8981\u6bd4\u5bf9\u7248\u672c\u53f7 4\u3001es\u57fa\u4e8eversion\u8fdb\u884c\u4e50\u89c2\u9501\u5e76\u53d1\u63a7\u5236 \uff081\uff09version\u7248\u672c\u53f7\u5143\u6570\u636e \uff082\uff09\u7b2c\u4e00\u6b21\u521b\u5efadocument\uff0c\u7248\u672c\u53f7\u662f1\uff0c\u4fee\u6539\u6216\u5220\u9664\u90fd\u81ea\u52a01 \uff083\uff09document\u5220\u9664\u4e4b\u540e\uff0c\u4e0d\u4f1a\u7269\u7406\u5220\u9664\uff0c\u518d\u6b21\u5199\u5165\u4f1a\u5728\u539f\u5148\u7248\u672c\u53f7\u4e4b\u4e0a\u81ea\u589e1 \uff084\uff09primary\u548creplica\u4e4b\u95f4\u540c\u6b65\u662f\u591a\u7ebf\u7a0b\u5f02\u6b65\uff0c\u57fa\u4e8eversion\u7248\u672c\u53f7\u5e76\u53d1\u63a7\u5236 \uff085\uff09\u9ad8\u7248\u672c\u5148\u5230\uff0c\u4f4e\u7248\u672c\u540e\u5230\uff0c\u540e\u5230\u8fbe\u7684\u4f4e\u7248\u672c\u4f1a\u88ab\u4e22\u5f03\uff0c\u65b0\u6570\u636e\u4e0d\u4f1a\u88ab\u65e7\u7684\u6570\u636e\u8986\u76d6 5\u3001es\u57fa\u4e8eversion\u8fdb\u884c\u4e50\u89c2\u9501\u5e76\u53d1\u63a7\u5236\u793a\u4f8b \u4e24\u4e2a\u7ebf\u7a0b\u5bf9\u540c\u4e00\u6761\u5546\u54c1\u4fe1\u606f\u8fdb\u884c\u66f4\u65b0\u64cd\u4f5c\u8fc7\u7a0b # 1 \u3001\u67e5\u8be2\u6570\u636e GET / shop / goods / 1 { \"_version\" : 1 , \"_source\" : { \"name\" : \"iphone\" , } } # 2 \u3001\u5148\u8fdb\u884c\u66f4\u65b0 \u6210\u529f POST / shop / goods / 1 ? version = 1 { \"name\" : \"xiaomi\" } # 3 \u3001\u540e\u66f4\u65b0 \u5931\u8d25 POST / shop / goods / 1 ? version = 1 { \"name\" : \"huawei\" } # 4 \u3001\u67e5\u8be2\u6700\u65b0\u7248\u672c\u53f7 GET / shop / goods / 1 { \"_version\" : 2 , \"_source\" : { \"name\" : \"xiaomi\" , } } # 5 \u3001\u7528\u6700\u65b0\u7684\u7248\u672c\u53f7\u518d\u6b21\u66f4\u65b0 \u6210\u529f POST / shop / goods / 1 ? version = 2 { \"name\" : \"huawei\" } 6\u3001\u57fa\u4e8eexternal version\u8fdb\u884c\u4e50\u89c2\u9501\u5e76\u53d1\u63a7\u5236 es\u63d0\u4f9b\u7684version \u4e00\u81f4 \u65f6\u8fdb\u884c\u4fee\u6539\uff0c\u4e0d\u4e00\u6837\u62a5\u9519 ? version = 1 \u5f53external\u63d0\u4f9b\u7684\u7248\u672c\u53f7\u6bd4es\u4e2d\u7684\u7248\u672c\u53f7 \u5927 \u65f6\u624d\u8fdb\u884c\u4fee\u6539 ? version = 1 & version_type = external \u4f8b\u5982\uff1a # 1 \u3001\u6dfb\u52a0\u4e00\u6761\u6570\u636e PUT / shop / goods / 1 { \"name\" : \"iphone\" } # 2 \u3001\u67e5\u770b\u6570\u636e\u7248\u672c\u53f7\uff0c\u6b64\u65f6 verison = 1 GET / shop / goods / 1 # 3 \u3001\u7528\u5916\u90e8\u7248\u672c\u53f7\u4e3a 2 \u7684\u6570\u636e\u53bb\u66f4\u65b0 \u6210\u529f PUT / shop / goods / 1 ? version = 2 & version_type = external { \"name\" : \"xiaomi\" } # 4 \u3001\u518d\u6b21\u7528\u5916\u90e8\u7248\u672c\u53f7\u4e3a 2 \u7684\u6570\u636e\u53bb\u66f4\u65b0 \u5931\u8d25 PUT / shop / goods / 1 ? version = 2 & version_type = external { \"name\" : \"huawei\" } # 5 \u3001\u67e5\u770b\u7248\u672c\u53f7\uff0c\u6b64\u65f6\u7248\u672c\u53f7 version = 2 \uff0c\u4f7f\u7528\u5916\u90e8\u7248\u672c\u53f7 verison = 4 \u7684\u6570\u636e\u53bb\u66f4\u65b0 \u6210\u529f PUT / shop / goods / 1 ? version = 4 & version_type = external { \"name\" : \"huawei\" } # \u5e76\u4e14\u6700\u540e\u7684\u7248\u672c\u53f7\u663e\u793a\u4e3a version = 4","title":"\u4e94\u3001Elasticsearch\u5e76\u53d1\u51b2\u7a81\u95ee\u9898"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#update","text":"1\u3001update \u5168\u91cf\u66f4\u65b0 \u521b\u5efa & \u66ff\u6362\u6587\u6863\u4e00\u6837\u7684\u8bed\u6cd5 PUT /index/type/id \u4e00\u822c\u5e94\u7528\u7a0b\u5e8f\u6267\u884c\u6d41\u7a0b \uff081\uff09\u5e94\u7528\u7a0b\u5e8f\u53d1\u8d77GET\u8bf7\u6c42\uff0c\u83b7\u53d6document\uff0c\u5c55\u793a\u5230\u524d\u53f0 \uff082\uff09\u7528\u6237\u524d\u53f0\u4fee\u6539\u7684\u6570\u636e\uff0c\u53d1\u9001\u5230\u540e\u53f0 \uff083\uff09\u540e\u53f0\u4ee3\u7801\u5c06\u7528\u6237\u4fee\u6539\u7684\u6570\u636e\u5728\u5185\u5b58\u4e2d\u6267\u884c\uff0c\u7136\u540e\u5c01\u88c5\u597d\u4fee\u6539\u540e\u7684\u6570\u636e \uff084\uff09\u540e\u53f0\u53d1\u8d77PUT\u8bf7\u6c42\uff0c\u5230es\u4e2d\uff0c\u8fdb\u884c\u5168\u91cf\u66f4\u65b0 \uff085\uff09es\u5c06\u65e7\u7684document\u6807\u8bb0\u4e3adeleted\uff0c\u7136\u540e\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u65b0\u7684document 2\u3001partial update \u5c40\u90e8\u66f4\u65b0 PUT /index/type/id/_update { data } 3\u3001es\u5185\u90e8\u6267\u884c\u6d41\u7a0b \uff081\uff09\u5148\u83b7\u53d6document \uff082\uff09\u5c06\u65b0\u7684\u5b57\u6bb5\u503c\u66f4\u65b0\u5230document\u4e2d \uff083\uff09\u5c06\u65e7\u7684document\u6807\u8bb0\u4e3adeleted \uff084\uff09\u5c06\u4fee\u6539\u7684document\u521b\u5efa\u51fa\u6765 4\u3001\u5c40\u90e8\u66f4\u65b0\u4f18\u70b9 \uff081\uff09\u6240\u6709\u67e5\u8be2\u3001\u4fee\u6539\u64cd\u4f5c\u53d1\u751f\u5728es\u7684shard\u5185\u90e8\uff0c\u907f\u514d\u7f51\u7edc\u5f00\u9500\uff0c\u63d0\u5347\u6548\u7387 \uff082\uff09\u51cf\u5c11\u5e76\u53d1\u51b2\u7a81 5\u3001\u5c40\u90e8\u66f4\u65b0\u6570\u636e\u793a\u4f8b # \u5199\u5165\u6570\u636e PUT / shop / goods / 1 { \"name\" : \"iphone\" } # \u5c40\u90e8\u66f4\u65b0 POST / shop / goods / 1 / _update { \"doc\" : { \"price\" : 36 } } # \u67e5\u770b\u6570\u636e GET / shop / goods / 1 6\u3001\u57fa\u4e8egroovy\u811a\u672c\u8fdb\u884cpartial update (1)\u5185\u7f6e\u811a\u672c # \u51c6\u5907\u6570\u636e PUT / shop / goods / 1 { \"name\" : \"iphone\" , \"price\" : 10 } # \u811a\u672c\u66f4\u65b0\u6570\u636e POST / shop / goods / 1 / _update { \"script\" : \"ctx._source.price+=1\" } # \u67e5\u770b\u66f4\u65b0\u7ed3\u679c GET / shop / goods / 1 { \"_source\" : { \"name\" : \"iphone\" , \"price\" : 11 } } \uff082\uff09\u5916\u90e8\u811a\u672c es\u5b89\u88c5\u76ee\u5f55\u4e0b\u65b0\u5efa\u811a\u672c\u6587\u4ef6 elasticsearch-5.2.0/config/scripts/add-shop-goods-price.groovy ctx . _source . price += 1 \u6267\u884c\u66f4\u65b0 POST /shop/goods/1/_update { \"script\": { \"lang\": \"groovy\", \"file\":\"add-shop-goods-price\" } } # \u67e5\u770b\u66f4\u65b0\u7ed3\u679c GET /shop/goods/1 { \"_source\": { \"name\": \"iphone\", \"price\": 12 } } \uff083\uff09\u901a\u8fc7\u5916\u90e8\u811a\u672c\u5220\u9664\u6587\u6863 \u65b0\u5efa\u811a\u672c\u6587\u4ef6 elasticsearch-5.2.0/config/scripts/delete-document.groovy ctx . op = ctx . _source . price == price ? 'delete' : 'none' POST /shop/goods/1/_update { \"script\": { \"lang\": \"groovy\", \"file\": \"delete-document\", \"params\": { \"price\": 12 } } } # \u67e5\u770b\u5220\u9664\u7ed3\u679c GET /shop/goods/1 { \"_index\": \"shop\", \"_type\": \"goods\", \"_id\": \"1\", \"found\": false } \uff084\uff09upsert \u64cd\u4f5c \u5982\u679cdocument\u5b58\u5728\u5219\u6267\u884c\u66f4\u65b0\u64cd\u4f5c\uff0c\u4e0d\u5b58\u5728\u5219\u6267\u884cupsert\u64cd\u4f5c # 1 \u3001\u65b0\u5efa\u6570\u636e PUT / shop / goods / 1 { \"name\" : \"iphone\" , \"price\" : 10 } # 2 \u3001\u67e5\u770b\u6570\u636e GET / shop / goods / 1 { \"_version\" : 1 , \"_source\" : { \"name\" : \"iphone\" , \"price\" : 10 } } # 3 \u3001\u66f4\u65b0\u6570\u636e POST / shop / goods / 1 / _update { \"doc\" : { \"name\" : \"huawei\" } , \"upsert\" : { \"name\" : \"xiaomi\" } } # 4 \u3001\u67e5\u770b\u66f4\u65b0\u7684\u6570\u636e version = 2 \uff0c name = huawei GET / shop / goods / 1 { \"_version\" : 2 , \"_source\" : { \"name\" : \"huawei\" , \"price\" : 10 } } # 5 \u3001\u5220\u9664\u6570\u636e DELETE / shop / goods / 1 # 6 \u3001\u518d\u6b21\u66f4\u65b0\u6570\u636e POST / shop / goods / 1 / _update { \"doc\" : { \"name\" : \"huawei\" } , \"upsert\" : { \"name\" : \"xiaomi\" } } # 7 \u3001\u67e5\u770b\u6570\u636e\uff0c vesion = 4 \uff0c name = xiaomi GET / shop / goods / 1 { \"_version\" : 4 , \"_source\" : { \"name\" : \"xiaomi\" } } 7\u3001partial update\u5185\u7f6e\u4e50\u89c2\u9501\u5e76\u53d1\u63a7\u5236 \u53ef\u4ee5\u8bbe\u7f6e\u91cd\u8bd5\u6b21\u6570 POST taobao / product / 1 / _update ? version = 1 & retry_on_conflict = 5 { \"doc\" : { \"name\" : \"red cat\" } }","title":"\u516d\u3001update\u5b9e\u73b0\u539f\u7406"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#_4","text":"1\u3001\u6279\u91cf\u67e5\u8be2\u7684\u597d\u5904 \u5982\u679c\u4e00\u6761\u4e00\u6761\u7684\u67e5\u8be2\uff0c\u67e5\u8be2100\u6761\u5c31\u8981\u53d1\u9001100\u6b21\u7f51\u7edc\u8bf7\u6c42\uff0c\u5f00\u9500\u8f83\u5927 \u5982\u679c\u6279\u91cf\u67e5\u8be2\uff0c\u67e5\u8be2100\u6761\u6570\u636e\uff0c\u53ea\u7528\u53d1\u90011\u6b21\u7f51\u7edc\u8bf7\u6c42\uff0c\u51cf\u5c11\u7f51\u7edc\u5f00\u9500 2\u3001\u5355\u6761\u67e5\u8be2 GET tianmao / product / 1 3\u3001mget \u8bed\u6cd5 GET / _mget { \"docs\" : [ { \"_index\" : \"taobao\" , \"_type\" : \"product\" , \"_id\" : 1 } , { \"_index\" : \"tianmao\" , \"_type\" : \"product\" , \"_id\" : 1 } ] } 4\u3001\u67e5\u8be2\u540c\u4e00\u4e2aindex\u4e0b\u4e0d\u540ctype\u6570\u636e GET taobao / _mget { \"docs\" : [ { \"_type\" : \"product\" , \"_id\" : 1 } , { \"_type\" : \"product\" , \"_id\" : 2 } ] } 5\u3001\u67e5\u8be2\u540c\u4e00\u4e2aindex\u4e0b\uff0c\u540ctype\u6570\u636e GET taobao / product / _mget { \"ids\" : [ 1 , 2 ] } 6\u3001mget\u5f88\u91cd\u8981 \u5982\u679c\u4e00\u6b21\u67e5\u8be2\u591a\u6761\u6570\u636e\uff0c\u90a3\u4e48\u4e45\u4f7f\u7528mget\uff0c\u51cf\u5c11\u7f51\u7edc\u5f00\u9500","title":"\u4e03\u3001\u6279\u91cf\u67e5\u8be2"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#_5","text":"1\u3001bulk\u8bed\u6cd5 \u6bcf\u6b21\u64cd\u4f5c\u6709\u4e24\u4e2ajson\u4e32\uff0c\u653e\u5728bulk\u91cc POST /_bulk {\"action\": {\"metadata\"}} {\"data\"} \u4f8b\u5982 \u521b\u5efa\u4e00\u4e2a\u6587\u6863 { \"index\" : { \"_index\" : \"taobao\" , \"_type\" : \"product\" , \"_id\" : \"1\" }} { \"name\" : \"Dog\" , \"price\" : 25 } 2\u3001\u53ef\u4ee5\u6267\u884cbulk\u64cd\u4f5c\u7684\u7c7b\u578b \uff081\uff09delete \u5220\u9664\u6587\u6863 \uff082\uff09create \u5f3a\u5236\u521b\u5efa PUT /index/type/id/_create \uff083\uff09index \u666e\u901aPUT\uff0c\u521b\u5efa\u6587\u6863\uff0c\u4e5f\u53ef\u662f\u5168\u91cf\u66ff\u6362\u6587\u6863 \uff084\uff09update \u6267\u884c\u7684partial update\u64cd\u4f5c \u6ce8\u610f\uff1a \u5355\u4e2ajson\u4e32\u4e0d\u80fd\u6362\u884c\uff0cjson\u4e32\u4e4b\u95f4\u5fc5\u987b\u6362\u884c \u4efb\u610f\u4e00\u4e2a\u64cd\u4f5c\u5931\u8d25\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u64cd\u4f5c\uff0c\u4f1a\u5728\u7ed3\u679c\u4e2d\u663e\u793a \u793a\u4f8b POST _bulk { \"create\" : { \"_index\" : \"taobao\" , \"_type\" : \"product\" , \"_id\" : 4 }} { \"name\" : \"Pig\" , \"price\" : 36 } { \"delete\" : { \"_index\" : \"taobao\" , \"_type\" : \"product\" , \"_id\" : 1 }} { \"index\" : { \"_index\" : \"taobao\" , \"_type\" : \"product\" , \"_id\" : 5 }} { \"name\" : \"Pig\" , \"price\" : 45 } { \"update\" : { \"_index\" : \"taobao\" , \"_type\" : \"product\" , \"_id\" : 5 }} { \"doc\" : { \"price\" : 54 }} 3\u3001\u6307\u5b9aindex POST taobao / _bulk { \"create\" : { \"_type\" : \"product\" , \"_id\" : 4 }} { \"name\" : \"Pig\" , \"price\" : 36 } 4\u3001\u6307\u5b9aindex \u548ctype POST taobao / product / _bulk { \"create\" : { \"_id\" : 4 }} { \"name\" : \"Pig\" , \"price\" : 36 } 5\u3001bulk\u6027\u80fd bulk request\u4f1a\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u5982\u679c\u592a\u5927\u53cd\u800c\u4f1a\u964d\u4f4e\u6027\u80fd\uff0c\u56e0\u6b64\u9700\u8981\u53cd\u590d\u5c1d\u8bd5\u4e00\u4e2a\u6700\u4f73\u7684bulk size \u4e00\u822c\u4ece1000~5000\u6761\u6570\u636e\u5f00\u59cb\uff0c\u5c1d\u8bd5\u589e\u52a0 \u5982\u679c\u770b\u5927\u5c0f\uff0c\u6700\u597d\u57285~15MB\u4e4b\u95f4","title":"\u4e03\u3001\u6279\u91cf\u64cd\u4f5c"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#_6","text":"1\u3001\u9636\u6bb5\u6027\u603b\u7ed3 1-8 \u5feb\u901f\u5165\u95e8\uff0c\u57fa\u672c\u539f\u7406\uff0c\u57fa\u672c\u64cd\u4f5c 9-13 ES\u5206\u5e03\u5f0f\u7684\u57fa\u672c\u539f\u7406\uff0c 14-27 document\u8bb2\u89e3 ElasticSearch \u6700\u6838\u5fc3\u529f\u80fd \u5206\u5e03\u5f0f\u6587\u6863\u7684\u6570\u636e\u5b58\u50a8\u7cfb\u7edf \u5206\u5e03\u5f0f distributed document store \u6587\u6863\u6570\u636e \u53ef\u4ee5\u5b58\u50a8json\u683c\u5f0f\u7684\u6587\u6863\uff0c\u6838\u5fc3\u6570\u636e\u7ed3\u6784 \u5b58\u50a8\u7cfb\u7edf \u5bf9\u6570\u636e\u8fdb\u884c\u5b58\u50a8\uff0c\u67e5\u8be2\uff0c\u521b\u5efa\uff0c\u66f4\u65b0\uff0c\u5220\u9664 \u4e00\u4e2aNoSQL\u5b58\u50a8\u7cfb\u7edf \u64cd\u4f5cdocument \u53ef\u4ee5\u5f00\u53d1\u7684\u5e94\u7528\u7a0b\u5e8f \uff081\uff09\u6570\u636e\u91cf\u8f83\u5927\uff0c\u5feb\u901f\u8fdb\u884c\u6269\u5bb9\uff0c\u627f\u8f7d\u5927\u91cf\u6570\u636e \uff082\uff09\u6570\u636e\u7ed3\u6784\u7075\u6d3b\u64cd\u4f5c\uff0c\u4e0d\u7528\u53bb\u5904\u7406\u4f20\u7edf\u6570\u636e\u5e93\u4e2d\u7684\u8868 \uff083\uff09\u5bf9\u6570\u636e\u64cd\u4f5c\u8f83\u4e3a\u7b80\u5355\uff0c\u57fa\u672c\u7684\u589e\u5220\u6539\u67e5 \uff084\uff09NoSQL\u6570\u636e\u5e93\uff0c\u4e5f\u9002\u7528\u4ee5\u4e0a\u573a\u666f","title":"\u516b\u3001\u9636\u6bb5\u603b\u7ed3"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#document_2","text":"1\u3001document\u8def\u7531\uff0c\u6570\u636e\u8def\u7531 \u4e00\u4e2aindex\u4f1a\u88ab\u5206\u6210\u591a\u7247\uff0c\u6bcf\u7247\u90fd\u5728\u4e00\u4e2ashard\u4e2d\uff0c \u4e00\u4e2adocument\uff0c\u53ea\u80fd\u5b58\u5728\u4e00\u4e2ashard\u4e2d \u5ba2\u6237\u7aef\u521b\u5efadocument\u7684\u65f6\u5019\uff0ces\u5c31\u4f1a\u51b3\u5b9adocument\u5b58\u653e\u5728\u54ea\u4e2ashard\u4e0a 2\u3001\u8def\u7531\u7b97\u6cd5 shard = hash ( routing ) % number_of_primary_shards \u4e3e\u4f8b\uff1a \u4e00\u4e2aindex \u67093\u4e2aprimary shard P0, P1, P2 \uff081\uff09\u589e\u5220\u6539\u67e5document\u65f6\u5019\uff0c\u4f1a\u6709\u4e00\u4e2arouting number \u9ed8\u8ba4 routing = id \uff082\uff09\u4f20\u5165hash\u51fd\u6570\u4ea7\u751frouting\u7684hash\u503c hash(routing) = 21 \uff083\uff09hash\u503c \u5bf9index \u7684primary shard\u6570\u91cf\u53d6\u4f59 21 % 3 =0 \uff084\uff09\u5c31\u51b3\u5b9a\u4e86\u8fd9\u4e2adocument \u653e\u5728 P0\u4e4b\u4e0a \u51b3\u5b9adocument \u5728\u54ea\u4e2ashard\u4e0a\uff0c\u6700\u91cd\u8981\u7684\u503c\u662frouting\uff0c\u9ed8\u8ba4\u662fid\uff0c\u4e5f\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a \u76f8\u540c\u7684routing\u503c\uff0c\u6bcf\u6b21\u6c42hash\u518d\u6c42\u4f59\uff0c\u7ed3\u679c\u4e5f\u4e00\u6837 \u7ed3\u679c\u4e00\u5b9a\u5728 0 ~ number_of_primary_shards - 1\u4e4b\u95f4 \u9ed8\u8ba4\u7684routing\u662fid\uff0c\u4e5f\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a \u4ee5\u4fbf\u540e\u7eed\u8fdb\u884c\u5e94\u7528\u7ea7\u522b\u7684\u8d1f\u8f7d\u5747\u8861\uff0c\u4ee5\u53ca\u63d0\u5347\u6279\u91cf\u8bfb\u53d6\u7684\u6027\u80fd\u4e5f\u5f88\u6709\u5e2e\u52a9 PUT /index/type/id?routing=<user_id> \u57fa\u4e8edocument\u8def\u7531\u7b97\u6cd5\uff0cprimary shard\u5efa\u7acb\u4e4b\u540e\u5c31\u4e0d\u80fd\u4fee\u6539\uff0c\u4f46\u662freplica shard\u53ef\u4ee5\u4fee\u6539","title":"\u4e5d\u3001document\u6570\u636e\u8def\u7531\u539f\u7406"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#document_3","text":"1\u3001\u5ba2\u6237\u7aef\u9009\u62e9\u4e00\u4e2anode\u53d1\u9001\u8bf7\u6c42\u8fc7\u53bb\uff0c\u8fd9\u4e2anode\u5c31\u662fcoordinating node(\u534f\u8c03\u8282\u70b9) 2\u3001coordinating node \u5bf9document\u8fdb\u884c\u8def\u7531\uff0c\u5c06\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u5bf9\u5e94\u7684node\uff08\u6709primary shard\uff09 3\u3001\u5b9e\u9645\u7684node\u4e0aprimary shard\u5904\u7406\u8bf7\u6c42\uff0c\u7136\u540e\u5c06\u6570\u636e\u540c\u6b65\u5230replica shard 4\u3001coordinating node \u5982\u679c\u53d1\u73b0primary node \u548c\u6240\u5c5e replica node\u90fd\u641e\u5b9a\u4e4b\u540e\uff0c\u5c31\u653e\u56de\u54cd\u5e94\u7ed3\u679c\u7ed9\u5ba2\u6237\u7aef \u4f8b\u5982 3\u4e2a\u8282\u70b9\uff0c3\u4e2aprimary shard replica=1\uff0c replica shard=3 \u603b\u51716\u4e2ashard client \u8981\u521b\u5efa\u4e00\u4e2adocument docuemnt\u53ef\u4ee5\u53d1\u9001\u4efb\u610f\u4e00\u4e2anode \u589e\u5220\u6539\u64cd\u4f5c\u53ea\u80fd\u7531primary shard\u64cd\u4f5c\uff0c\u4f1a\u81ea\u52a8\u540c\u6b65\u5230replica sahrd","title":"\u5341\u3001document\u589e\u5220\u6539\u5185\u90e8\u539f\u7406"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#_7","text":"1\u3001consistency \u53d1\u9001\u589e\u5220\u6539\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5e26\u4e0a\u4e00\u4e2aconsistency\u53c2\u6570\uff0c\u6307\u660e\u6211\u4eec\u60f3\u8981\u7684\u5199\u4e00\u81f4\u6027 PUT /index/type/id?consistency=quorum one(primary shard): \u5199\u64cd\u4f5c\uff0c\u53ea\u8981primary shard\u662factive\u5c31\u53ef\u4ee5\u6267\u884c all(all shard): \u5199\u64cd\u4f5c\uff0c\u5fc5\u987b\u6240\u6709priamry shard\u548creplica shard\u90fd\u662factive\u624d\u6267\u884c quorum(default): \u9ed8\u8ba4\u503c\uff0c\u8981\u6c42\u6240\u6709\u7684shard\uff0c\u5927\u90e8\u5206shar\u90fd\u662f\u6d3b\u8dc3\u7684\u624d\u53ef\u4ee5\u6267\u884c\u5199\u64cd\u4f5c 2\u3001quorum\u673a\u5236 \u5199\u4e4b\u524d\u5fc5\u987b\u786e\u4fdd\u5927\u591a\u6570shard\u90fd\u53ef\u7528\uff0c\u5f53number_of_replica > 1\u65f6\u624d\u751f\u6548 \u8ba1\u7b97\u516c\u5f0f quorum = int (( primary + number_of_replica ) / 2 ) + 1 \u4e3e\u4f8b\uff1a primary_shard=3\uff0c number_of_replica=1, \u603bshard=6 quorum = int((3 + 1)/2) + 1 = 3 \u6240\u4ee56\u4e2ashard\uff0c\u81f3\u5c113\u4e2ashard\u5904\u4e8eactive\uff0c\u624d\u53ef\u4ee5\u6267\u884c\u5199\u64cd\u4f5c 3\u3001\u5982\u679c\u8282\u70b9\u6570\u91cf\u5c11\u4e8equorum\u6570\u91cf\uff0c\u53ef\u80fd\u5bfc\u81f4quorum\u4e0d\u9f50\u5168\uff0c\u5bfc\u81f4\u65e0\u6cd5\u6267\u884c\u5199\u64cd\u4f5c primary \u548creplica \u5fc5\u987b\u5728\u4e0d\u540c\u8282\u70b9\u4e0a\uff0c\u5982\u679c\u4e24\u4e2a\u673a\u5668\uff0c\u6709\u53ef\u80fd\u51fa\u73b03\u4e2ashard\u5206\u914d\u4e0d\u9f50\u5168\uff0c \u6b64\u65f6\u53ef\u80fd\u56de\u51fa\u73b0\u5199\u64cd\u4f5c\u65e0\u6cd5\u6267\u884c \u4f8b\u5982\uff1a node=2\uff0c primay=1 replica=3 quorum = int((primay + replica)/2) + 1 = 3 node1 -> primary node2 -> replica1 \u6240\u4ee5active=2 < quorum=3, \u4e0d\u6ee1\u8db3quorum\u673a\u5236 \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7279\u6b8a\u573a\u666f\uff0c\u5c31\u662fnumber_of_replica>1\u624d\u751f\u6548 \u5982\u679c\u4e0d\u505a\u5904\u7406\uff0c\u5355\u8282\u70b9\u5c31\u65e0\u6cd5\u5de5\u4f5c 4\u3001quorum\u4e0d\u9f50\u5168\u65f6\uff0cwait\uff0c\u9ed8\u8ba41\u5206\u949f\uff0ctimeout \u5199\u64cd\u4f5c\u53ef\u4ee5\u8bbe\u7f6etimeout\u53c2\u6570,\u5355\u4f4d \u6beb\u79d2 PUT /index/type/id?timeout=30","title":"\u5341\u4e00\u3001\u5206\u5e03\u5f0f\u6587\u6863\u7cfb\u7edf"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#document_4","text":"1\u3001\u5ba2\u6237\u7aef\u53d1\u9001\u8bf7\u6c42\u5230\u4efb\u610f\u4e00\u4e2anode 2\u3001coordinating node\u63a5\u6536\u5230document\u8bfb\u8bf7\u6c42\u540e\uff0c\u8fdb\u884c\u8def\u7531\uff0c\u8f6c\u53d1\u7ed9\u5bf9\u5e94\u7684node\uff0c \u968f\u673a\u8f6e\u8be2\u7b97\u6cd5\u5728primary shard \u548c replica shard\u4e2d\u968f\u673a\u9009\u4e00\u4e2ashard\uff0c\u4f7f\u5f97\u8d1f\u8f7d\u5747\u8861 3\u3001\u63a5\u6536\u8bf7\u6c42\u7684node\u8fd4\u56dedocument\u7ed9coordination node 4\u3001coordinating node\u8fd4\u56dedocument\u7ed9\u5ba2\u6237\u7aef 5\u3001\u7279\u6b8a\u60c5\u51b5\uff0cdocument\u5982\u679c\u8fd8\u5728\u5efa\u7acb\u7d22\u5f15\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u80fd\u53ea\u6709primary shard\u6709\u6570\u636e\uff0creplica shard\u6ca1\u6570\u636e\uff0c \u53ef\u80fd\u5bfc\u81f4\u65e0\u6cd5\u8bfb\u53d6\u5230document\uff0c\u4f46\u662fdocument\u5b8c\u6210\u7d22\u5f15\u5efa\u7acb\u4e4b\u540e\uff0cprimary shard\u548creplica shard\u5c31\u90fd\u6709\u6570\u636e\u4e86 \u5bf9\u4e8e\u8bfb\u8bf7\u6c42\uff0c\u4e0d\u4e00\u5b9a\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230primary shard\u4e5f\u53ef\u4ee5\u8f6c\u53d1\u5230replica shard replica shard\u4e5f\u53ef\u4ee5\u5904\u7406\u6240\u6709\u7684\u8bfb\u8bf7\u6c42 \u4f7f\u7528round-robin \u968f\u673a\u8f6e\u8be2\u7b97\u6cd5 \u6bd4\u5982\u8bf4\uff1a coordinating node\u63a5\u6536\u5230\u4e00\u4e2adocument\u76844\u6b21\u67e5\u8be2\uff0c\u5c31\u4f1a\u4f7f\u7528\u7b97\u6cd5 \u5c062\u6b21\u67e5\u8be2\u8bf7\u6c42\u8f6c\u53d1\u7ed9P1\uff0c\u5c062\u6b21\u67e5\u8be2\u8bf7\u6c42\u8f6c\u53d1\u7ed9R1 \u5c3d\u91cf\u8ba9primary shard \u548c\u6240\u6709\u7684replica shard\u5747\u5300\u670d\u52a1\u8bfb\u8bf7\u6c42\uff0c\u4f7f\u5f97\u8d1f\u8f7d\u5747\u8861","title":"\u5341\u4e8c\u3001document\u67e5\u8be2\u5185\u90e8\u539f\u7406"},{"location":"ElasticSearch/2\u3001ElasticSearch\u539f\u7406/#bulk-api-json","text":"bulk api Json\u683c\u5f0f { \"action\" : \"meta\" } { \"data\" } 1\u3001bulk\u4e2d\u7684\u6bcf\u4e2a\u64cd\u4f5c\u90fd\u53ef\u80fd\u8981\u8f6c\u53d1\u5230\u4e0d\u540cnode\u7684shard\u53bb\u6267\u884c 2\u3001\u5982\u679c\u91c7\u7528\u6bd4\u8f83\u826f\u597d\u7684json\u6570\u7ec4\u683c\u5f0f \uff081\uff09\u5c06json\u6570\u7ec4\u89e3\u6790\u4e3aJSONArray\u5bf9\u8c61 \u6587\u672c->JsonArray\u5bf9\u8c61 \uff082\uff09\u5bf9\u6bcf\u4e2a\u8bf7\u6c42\u4e2d\u7684document\u8fdb\u884c\u8def\u7531 \uff083\uff09\u4e3a\u8def\u7531\u5230\u540c\u4e00\u4e2ashard\u4e0a\u7684\u591a\u4e2a\u8bf7\u6c42\uff0c\u521b\u5efa\u4e00\u4e2a\u8bf7\u6c42\u6570\u7ec4 \uff084\uff09\u5c06\u5e8f\u5217\u5316\u540e\u7684\u6570\u636e\u53d1\u9001\u5230\u5bf9\u5e94\u7684\u8282\u70b9\u4e0a\u53bb 3\u3001\u8017\u8d39\u66f4\u591a\u5185\u5b58\uff0c\u66f4\u591a\u7684jvm\u5f00\u9500 bulk size \u6700\u4f73\u5927\u5c0f\uff0c\u5982\u679c\u5355\u6b21\u4f20\u8f93\u6570\u636e\u8fc7\u591a\uff0c\u5185\u5b58\u5360\u7528\u8fc7\u591a\uff0c\u6027\u80fd\u4e0b\u964d\uff0c\u5783\u573e\u56de\u6536\u8017\u8d39\u65f6\u95f4 4\u3001\u73b0\u5728\u7684\u65b9\u5f0f \uff081\uff09\u76f4\u63a5\u6309\u7167\u6362\u884c\u7b26\u5207\u5272json \uff082\uff09\u5bf9\u6bcf\u4e24\u4e2a\u4e00\u7ec4\u7684json\uff0c\u8bfb\u53d6mete\uff0c\u8fdb\u884cdocument\u8def\u7531 \uff083\uff09\u76f4\u63a5\u5c06\u5bf9\u5e94\u7684json\u53d1\u9001\u5230node\u4e0a\u53bb 5\u3001\u6700\u5927\u7684\u4f18\u52bf\u5728\u4e8e\uff0c\u4e0d\u9700\u8981\u5c06json\u6570\u7ec4\u89e3\u6790\u4e3a\u4e00\u4e2aJSONArray\u5bf9\u8c61\uff0c \u5f62\u6210\u4e00\u4efd\u5927\u6570\u636e\u62f7\u8d1d\uff0c\u907f\u514d\u4e86\u5185\u5b58\u7a7a\u95f4\u7684\u6d6a\u8d39","title":"\u5341\u4e09\u3001bulk api json\u683c\u5f0f\u4e0e\u5e95\u5c42\u6027\u80fd"},{"location":"ElasticSearch/3\u3001ElasticSearch\u641c\u7d22\u57fa\u7840/","text":"\u4e00\u3001\u641c\u7d22\u8bf7\u6c42\u7ed3\u679c GET taobao / product / _search ? q = name : Pig { \"took\" : 42 , \"timed_out\" : false , \"_shards\" : { \"total\" : 5 , \"successful\" : 5 , \"failed\" : 0 } , \"hits\" : { \"total\" : 1 , \"max_score\" : 0 . 80259144 , \"hits\" : [ { \"_index\" : \"taobao\" , \"_type\" : \"product\" , \"_id\" : \"4\" , \"_score\" : 0 . 80259144 , \"_source\" : { \"name\" : \"Pig\" , \"price\" : 36 } } ] } } took \u6574\u4e2a\u641c\u7d22\u8bf7\u6c42\u82b1\u8d39\u4e86\u591a\u5c11\u6beb\u79d2 shards.total \u5904\u7406\u8bf7\u6c42\u7684shards shards.faild \u5931\u8d25\u6570\u91cf\uff0cprimary \u548creplica\u5168\u90e8\u6302\u6389\uff0c\u4e0d\u5f71\u54cd\u5176\u4ed6 shard \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u641c\u7d22\u8bf7\u6c42\uff0c\u4f1a\u6253\u5230\u4e00\u4e2aindex\u7684\u6240\u6709primary shard\uff0c \u4e5f\u53ef\u80fd\u5230primary shard\u7684\u5176\u4e2d\u4e00\u4e2areplica shard hits.total \u672c\u6b21\u641c\u7d22\uff0c\u8fd4\u56de\u51e0\u6761\u7ed3\u679c hits.max_score \u672c\u6b21\u641c\u7d22\u6240\u6709\u7ed3\u679c\u4e2d\uff0c\u6700\u5927\u76f8\u5173\u5ea6 \u6bcf\u4e2adocument\u5bf9\u4e8esearch\u7684\u76f8\u5173\u5ea6\uff0c\u8d8a\u76f8\u5173score\u5206\u6570\u8d8a\u5927\uff0c\u6392\u4f4d\u8d8a\u9760\u524d hits.hits \u9ed8\u8ba4\u524d10\u6761\u5b8c\u6210\u6570\u636e timeout \u9ed8\u8ba4\u65e0timeout\uff0clatency\u5e73\u8861completeness\uff0c \u90e8\u5206\u5e94\u7528\u4f1a\u6709\u65f6\u95f4\u9650\u5236\uff0c\u9700\u8981\u5feb\u901f\u8fd4\u56de\u6570\u636e \u6307\u5b9a\u6bcf\u4e2ashard\uff0c\u5c31\u53ea\u80fd\u5728timeout\u65f6\u95f4\u8303\u56f4\u5185\uff0c\u5c06\u641c\u7d22\u5230\u7684\u90e8\u5206\u6570\u636e\u76f4\u63a5\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef 1ms\uff08\u6beb\u79d2\uff09 1s\uff08\u79d2\uff09 1m(\u5206\u949f) GET _search ? timeout = 10 \u4e8c\u3001multi-index \u548c multi-type\u641c\u7d22\u6a21\u5f0f \uff081\uff09multi-index / _search # \u6240\u6709\u7d22\u5f15\uff0c\u6240\u6709 type\u4e0b\u7684\u6240\u6709\u6570\u636e / index / _search \u6307\u5b9a\u7d22\u5f15\uff0c\u641c\u7d22\u5176\u4e0b\u7684\u6240\u6709 type\u6570\u636e / index1 , index2 / _search \u540c\u65f6\u641c\u7d22\u4e24\u4e2a\u7d22\u5f15\u4e0b\u7684\u6570\u636e /*1,*2/_search \u6309\u7167\u901a\u914d\u7b26\u53bb\u5339\u914d\u591a\u4e2a\u7d22\u5f15 \uff082\uff09multi-type / index / type / _search \u641c\u7d22\u6307\u5b9a\u7d22\u5f15\u4e0b\u6307\u5b9a type\u6570\u636e / index / type1 , type2 / _search \u4e00\u4e2a\u7d22\u5f15\u4e0b\u591a\u4e2a type\u6570\u636e / index1 , index2 / type1 , type2 / _search \u591a\u4e2a\u7d22\u5f15\u4e0b\u591a\u4e2a type\u6570\u636e / _all / type1 , type2 / _search \u6240\u6709\u7d22\u5f15\u4e0b\u591a\u4e2a type\u6570\u636e client \u53d1\u9001\u4e00\u4e2a\u641c\u7d22\u8bf7\u6c42\uff0c\u4f1a\u628a\u8bf7\u6c42\u6253\u5230\u6240\u6709\u7684primary shard\u4e0a\u6267\u884c \u56e0\u4e3a\u6bcf\u4e2ashard\u90fd\u5305\u542b\u90e8\u5206\u6570\u636e\uff0c\u6240\u4ee5\u6bcf\u4e2ashard\u4e0a\u90fd\u53ef\u80fd\u4f1a\u5305\u542b\u641c\u7d22\u8bf7\u6c42\u7684\u7ed3\u679c \u4f46\u662f\uff0c\u5982\u679cprimary shard\u6709replica shard\uff0c\u90a3\u4e48\u8bf7\u6c42\u4e5f\u53ef\u4ee5\u6253\u5230replicashard\u6267\u884c \u4e09\u3001\u5206\u9875\u641c\u7d22\u8bed\u6cd5 \u548c deep paging\u6027\u80fd\u95ee\u9898 \uff081\uff09\u5206\u9875\u641c\u7d22\u8bed\u6cd5 GET /_search?size=10 GET /_search?size=10&from=0 GET /_search?size=10&from=20 from size \u7b2c\u4e00\u9875\uff1a 0 3 \u7b2c\u4e8c\u9875\uff1a 3 3 \uff082\uff09deep paging \u6df1\u5ea6\u5206\u9875 \u4e3e\u4f8b\uff1a \u5982\u679c\u4e00\u5171\u670960000\u6761\u6570\uff0c\u4e00\u51713\u4e2ashard\uff0c\u6bcf\u4e2ashard20000\u6761\u6570\u636e \u641c\u7d22\u7b2c1001\u9875\uff081000\uff0c10\uff09\u6bcf\u4e2ashard\u90fd\u4f1a\u6392\u5e8f\u540e\u8fd4\u56de1009\u6761\u6570\u636e coordinate node\u6392\u5e8f\u540e\u5728\u8f93\u51fa \u5f71\u54cd\uff1a [1] \u4f20\u8f93\u8017\u8d39\u5e26\u5bbd [2] \u6570\u636e\u8017\u8d39\u5185\u5b58 [3] \u6392\u5e8f\u8017\u8d39CUP \u56db\u3001query string search\u8bed\u6cd5\u548call metadata \uff081\uff09query string search\u8bed\u6cd5 GET /index/type/_search?q=key:value GET /index/type/_search?q=+key:value # \u5305\u542b GET /index/type/_search?q=-key:value # \u4e0d\u5305\u542b (2)all metadata GET /index/type/_search?q=value \u641c\u7d22\u4efb\u610f\u5305\u542bvalue\u7684\u7ed3\u679c _all \u5143\u6570\u636e \u5728\u5efa\u7acb\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u6211\u4eec\u63d2\u5165\u4e00\u6761document\uff0c\u91cc\u8fb9\u5305\u542b\u7684\u6240\u6709\u5b57\u6bb5\uff0c\u4f1a\u4e32\u8054\u8d77\u6765\u53d8\u6210\u4e00\u4e2a\u957f\u7684\u5b57\u7b26\u521b \u4f5c\u4e3a _all field \u7684\u503c\uff0c\u540c\u65f6\u5efa\u7acb\u7d22\u5f15 \u641c\u7d22\u65f6\u6ca1\u6709\u6307\u5b9a\u5b57\u6bb5field\uff0c\u5c31\u9ed8\u8ba4\u641c\u7d22 _all field \u6ce8\u610f\uff1a\u751f\u4ea7\u73af\u5883\u4e2d\u4e0d\u4f7f\u7528 \u4e94\u3001mapping\u5230\u5e95\u662f\u4ec0\u4e48 \u6570\u636e\u51c6\u5907 put / website / article / 1 { \"title\" : \"this is a title one\" , \"content\" : \"this is a content one\" , \"post_date\" : \"2019-05-02\" , \"author_id\" : 9527 } put / website / article / 2 { \"title\" : \"this is a title two\" , \"content\" : \"this is a content two\" , \"post_date\" : \"2019-05-03\" , \"author_id\" : 9527 } put / website / article / 3 { \"title\" : \"this is a title three\" , \"content\" : \"this is a content three\" , \"post_date\" : \"2019-05-02\" , \"author_id\" : 9525 } \u641c\u7d22\u6d4b\u8bd5 GET /website/article/_search?q=2019 # 3 GET /website/article/_search?q=2019-05-02 # 3 GET /website/article/_search?q=post_date:2019-05-02 # 1 GET /website/article/_search?q=post_date:2019 # 0 \u81ea\u52a8\u6216\u624b\u52a8\u4e3aindex\u4e2d\u7684type\u5efa\u7acb\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u548c\u76f8\u5173\u914d\u7f6e\uff0c\u7b80\u79f0\u4e3amapping dynamic mapping \u4f1a\u81ea\u52a8\u521b\u5efaindex\uff0c\u521b\u5efatype\uff0c\u4ee5\u53catype\u5bf9\u5e94\u7684mapping mapping\u5305\u542b\u4e86\u6bcf\u4e2afield\u5bf9\u5e94\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4ee5\u53ca\u5982\u4f55\u5206\u8bcd\u7b49\u8bbe\u7f6e GET /website/_mapping/article { \"website\": { \"mappings\": { \"article\": { \"properties\": { \"author_id\": { \"type\": \"long\" }, \"content\": { \"type\": \"text\", \"fields\": { \"keyword\": { \"type\": \"keyword\", \"ignore_above\": 256 } } }, \"post_date\": { \"type\": \"date\" }, \"title\": { \"type\": \"text\", \"fields\": { \"keyword\": { \"type\": \"keyword\", \"ignore_above\": 256 } } } } } } } } \u516d\u3001\u7cbe\u786e\u5339\u914d\u4e0e\u5168\u6587\u641c\u7d22 1\u3001exact value \u7cbe\u786e\u641c\u7d22 \u4f8b\u5982\uff1a 2017-01-01 \u641c\u7d22\u7684\u65f6\u5019\u5fc5\u987b\u8f93\u5165 2017-01-01\uff0c\u624d\u80fd\u641c\u7d22\u51fa\u6765 2\u3001full text \u5168\u6587\u68c0\u7d22 \uff081\uff09\u7f29\u5199 vs\uff0c\u5168\u79f0\uff1acn vs. chian \uff082\uff09\u683c\u5f0f\u8f6c\u5316\uff1alike liked likes \uff083\uff09\u5927\u5c0f\u5199\uff1a Tom vs tom \uff084\uff09\u540c\u4e49\u8bcd\uff1alike vs love \u4f8b\u5982\uff1a 2017-01-01 \u641c\u7d22 2017 01 \u90fd\u53ef\u4ee5\u641c\u51fa\u6765 \u5168\u6587\u68c0\u7d22\uff0c\u5206\u8bcd\u641c\u7d22\uff0c\u7f29\u5199\uff0c\u65f6\u6001\uff0c\u5927\u5c0f\u5199\uff0c\u540c\u4e49\u8bcd \u4e03\u3001\u5012\u6392\u7d22\u5f15\u6838\u5fc3\u539f\u7406 \u4e3e\u4f8b\uff1a 1\u3001\u4e24\u4e2a\u6587\u6863 I like my dog I think you like my dog 2\u3001\u5206\u8bcd\uff0c\u521d\u6b65\u5efa\u7acb\u5012\u6392\u7d22\u5f15 word doc1 doc2 normalization I * * like * * -> like my * * dog * * -> dogs think * - you * - 3\u3001\u641c\u7d22\u641c\u4e0d\u5230\u4efb\u4f55\u7ed3\u679c mother love little cat 4\u3001normalization \u65f6\u6001\uff0c\u5355\u590d\u6570\uff0c\u540c\u4e49\u8bcd\u8f6c\u6362 \u5efa\u7acb\u5012\u6392\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u4f1a\u5bf9\u62c6\u5206\u51fa\u6765\u7684\u5404\u4e2a\u5355\u8bcd\u8fdb\u884c\u76f8\u5e94\u7684\u5904\u7406 \u4ee5\u63d0\u5347\u540e\u9762\u641c\u7d22\u7684\u65f6\u5019\u80fd\u591f\u641c\u5230\u7684\u76f8\u5173\u8054\u6587\u6863\u7684\u6982\u7387 5\u3001\u641c\u7d22\u4e32\u5206\u8bcd\u540e\u641c\u7d22\uff1a mother love little cat \u516b\u3001\u5206\u8bcd\u5668\u7684\u5185\u90e8\u7ec4\u6210 1\u3001\u5206\u8bcd\u5668 \u5207\u5206\u8bcd\u8bed\uff0cnormalization \u63d0\u5347recall\u53ec\u56de\u7387\uff08\u67e5\u5168\u7387\uff09\uff1a \u641c\u7d22\u7684\u65f6\u5019\uff0c\u589e\u52a0\u80fd\u591f\u641c\u5230\u7ed3\u679c\u7684\u6570\u91cf character filter \u5b57\u7b26\u9884\u5904\u7406 hello -> hello tokenizer \u5206\u8bcd hello you and me -> hello, you, and , me token filter lowercase stop word Tom -> tom small -> little \u5206\u8bcd\u5668\u5f88\u91cd\u8981\uff0c\u5c06\u4e00\u6bb5\u6587\u672c\u8fdb\u884c\u5404\u79cd\u5904\u7406\uff0c\u6700\u540e\u5904\u7406\u597d\u7684\u7ed3\u679c\u624d\u4f1a\u62ff\u53bb\u5efa\u7acb\u5012\u6392\u7d22\u5f15 2\u3001\u5185\u7f6e\u5206\u8bcd\u5668 standard analyzer \uff08\u9ed8\u8ba4\uff09 simple analyzer whitespace analyzer language analyzer\uff08\u7279\u5b9a\u8bed\u8a00\u5206\u8bcd\u5668\uff09 \u4e5d\u3001query string\u7684\u5206\u8bcd query string \u5fc5\u987b\u4ee5\u548cindex\u5efa\u7acb\u65f6\u76f8\u540c\u7684analyzer\u8fdb\u884c\u5206\u8bcd query string \u5bf9exact value\u548cfull text\u7684\u533a\u522b \u77e5\u8bc6\u70b9\uff1a \u4e0d\u540c\u7c7b\u578b\u7684field\uff0c\u6709\u7684\u662ffull text\uff0c \u6709\u7684\u662fexact value date\uff1a exact value eg: date _all : full text, \u5206\u8bcd\uff0c normalization \u6d4b\u8bd5\u5206\u8bcd\u5668 GET /_analyze { \"analyzer\": \"standard\", \"text\": \"this is a good man\" } \u5341\u3001\u900f\u5f7b\u7406\u89e3mapping 1\u3001\u5f80es\u76f4\u63a5\u63d2\u5165\u6570\u636e\uff0ces\u4f1a\u81ea\u52a8\u5efa\u7acb\u7d22\u5f15\uff0c\u5efa\u7acbtype \u4ee5\u53ca\u5bf9\u5e94\u7684mapping 2\u3001mapping\u81ea\u52a8\u5b9a\u4e49\u6bcf\u4e2afield\u7684\u6570\u636e\u7c7b\u578b 3\u3001\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6709exact value \u548c full text 4\u3001exact value \u5efa\u7acb\u5012\u6392\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u4e0d\u4f1a\u5206\u8bcd\uff0c\u5c06\u6574\u4e2a\u503c\u4f5c\u4e3a\u4e00\u4e2a\u5173\u952e\u5b57\u5efa\u7acb\u5230\u5012\u6392\u7d22\u5f15\u4e2d 5\u3001full text \u4f1a\u7ecf\u5386\u5404\u79cd\u5904\u7406\uff0c\u5206\u8bcd\uff0cnormalization\uff08\u65f6\u6001\uff0c\u540c\u4e49\u8bcd\uff0c\u5927\u5c0f\u5199\uff09\uff0c\u624d\u4f1a\u5efa\u7acb\u5230\u7d22\u5f15\u4e2d 6\u3001\u4e00\u4e2a\u641c\u7d22\u8fc7\u6765\uff0c\u5bf9\u641c\u7d22\u6587\u672c\u7684\u5904\u7406\u4e5f\u4e00\u6837 7\u3001\u53ef\u4ee5\u4f7f\u7528dynamic mapping \u81ea\u52a8\u5efa\u7acbmapping\uff0c\u4e5f\u53ef\u4ee5\u624b\u52a8\u8bbe\u7f6e 8\u3001mapping\u5c31\u662findex\u7684type\u7684\u5143\u6570\u636e\uff0c\u6bcf\u4e2atype\u90fd\u6709\u81ea\u5df1\u7684mapping\uff0c \u51b3\u5b9a\u4e86\u6570\u636e\u7c7b\u578b\uff0c\u5efa\u7acb\u5012\u6392\u7d22\u5f15\u7684\u884c\u4e3a\uff0c\u8fd8\u6709\u8fdb\u884c\u641c\u7d22\u7684\u884c\u4e3a \u5341\u4e00\u3001dynamic mapping 1\u3001\u6838\u5fc3\u6570\u636e\u7c7b\u578b string byte short integer long float double boolean date 2\u3001dynamic mapping true or false -> boolean 123 -> long 123.45 -> double 2017-01-01 -> date \"hello\" -> string/text 3\u3001\u67e5\u770bmapping GET /index/_mapping/type \u5341\u4e8c\u3001\u624b\u52a8\u5efa\u7acb\u548c\u4fee\u6539mapping 1\u3001\u5efa\u7acb\u7d22\u5f15 analyzed not_analyzed no 2\u3001\u4fee\u6539mapping \u53ea\u80fd\u521b\u5efaindex\u65f6\u624b\u52a8\u5efa\u7acbmapping\uff0c\u6216\u65b0\u589efield mapping \u4e0d\u80fdupdate field mapping # \u5efa\u7acb mapping PUT / website { \"mappings\" : { \"article\" : { \"properties\" : { \"title\" : { \"type\" : \"text\" } , \"content\" : { \"type\" : \"text\" , \"analyzer\" : \"english\" } , \"id\" : { \"type\" : \"long\" } , \"post_date\" : { \"type\" : \"date\" } } } } } # \u6dfb\u52a0\u5b57\u6bb5\u4e0d\u5206\u8bcd PUT website / _mapping / article { \"properties\" : { \"publisher\" : { \"type\" : \"string\" , \"index\" : \"not_analyzed\" } } } # \u67e5\u770b mapping GET / website / _mapping / article { \"website\" : { \"mappings\" : { \"article\" : { \"properties\" : { \"content\" : { \"type\" : \"text\" , \"analyzer\" : \"english\" } , \"id\" : { \"type\" : \"long\" } , \"post_date\" : { \"type\" : \"date\" } , \"publisher\" : { \"type\" : \"keyword\" } , \"title\" : { \"type\" : \"text\" } } } } } } \u5206\u8bcd\u6d4b\u8bd5 # publisher\u5b57\u6bb5\u4e0d\u652f\u6301\u5206\u8bcd \uff0c\u4f1a\u62a5\u9519 GET website / _analyze { \"field\" : \"publisher\" , \"text\" : \"this is a good man\" } # \u6807\u51c6\u5206\u8bcd GET website / _analyze { \"field\" : \"title\" , \"text\" : \"this is a good man\" } { \"tokens\" : [ { \"token\" : \"this\" , \"start_offset\" : 0 , \"end_offset\" : 4 , \"type\" : \"<ALPHANUM>\" , \"position\" : 0 } , { \"token\" : \"is\" , \"start_offset\" : 5 , \"end_offset\" : 7 , \"type\" : \"<ALPHANUM>\" , \"position\" : 1 } , { \"token\" : \"a\" , \"start_offset\" : 8 , \"end_offset\" : 9 , \"type\" : \"<ALPHANUM>\" , \"position\" : 2 } , { \"token\" : \"good\" , \"start_offset\" : 10 , \"end_offset\" : 14 , \"type\" : \"<ALPHANUM>\" , \"position\" : 3 } , { \"token\" : \"man\" , \"start_offset\" : 15 , \"end_offset\" : 18 , \"type\" : \"<ALPHANUM>\" , \"position\" : 4 } ] } # english\u5206\u8bcd GET website / _analyze { \"field\" : \"content\" , \"text\" : \"this is a good man\" } { \"tokens\" : [ { \"token\" : \"good\" , \"start_offset\" : 10 , \"end_offset\" : 14 , \"type\" : \"<ALPHANUM>\" , \"position\" : 3 } , { \"token\" : \"man\" , \"start_offset\" : 15 , \"end_offset\" : 18 , \"type\" : \"<ALPHANUM>\" , \"position\" : 4 } ] } \u5341\u4e09\u3001mapping\u590d\u6742\u6570\u636e\u7c7b\u578b 1\u3001multivale field { \"tags\" : [ \"red\" , \"blue\" ] } 2\u3001empty field null , [] , [ null ] 3\u3001object\u7c7b\u578b\u6570\u636e\u5e95\u5c42\u7ed3\u6784 { \"info\" { \"address\" : \"beijing\" } \"name\" : \"Tom\" } \u6570\u636e\u7c7b\u578b\u5b58\u50a8 info . address : beijing name : Tom","title":"3\u3001ElasticSearch\u641c\u7d22\u57fa\u7840"},{"location":"ElasticSearch/3\u3001ElasticSearch\u641c\u7d22\u57fa\u7840/#_1","text":"GET taobao / product / _search ? q = name : Pig { \"took\" : 42 , \"timed_out\" : false , \"_shards\" : { \"total\" : 5 , \"successful\" : 5 , \"failed\" : 0 } , \"hits\" : { \"total\" : 1 , \"max_score\" : 0 . 80259144 , \"hits\" : [ { \"_index\" : \"taobao\" , \"_type\" : \"product\" , \"_id\" : \"4\" , \"_score\" : 0 . 80259144 , \"_source\" : { \"name\" : \"Pig\" , \"price\" : 36 } } ] } } took \u6574\u4e2a\u641c\u7d22\u8bf7\u6c42\u82b1\u8d39\u4e86\u591a\u5c11\u6beb\u79d2 shards.total \u5904\u7406\u8bf7\u6c42\u7684shards shards.faild \u5931\u8d25\u6570\u91cf\uff0cprimary \u548creplica\u5168\u90e8\u6302\u6389\uff0c\u4e0d\u5f71\u54cd\u5176\u4ed6 shard \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u641c\u7d22\u8bf7\u6c42\uff0c\u4f1a\u6253\u5230\u4e00\u4e2aindex\u7684\u6240\u6709primary shard\uff0c \u4e5f\u53ef\u80fd\u5230primary shard\u7684\u5176\u4e2d\u4e00\u4e2areplica shard hits.total \u672c\u6b21\u641c\u7d22\uff0c\u8fd4\u56de\u51e0\u6761\u7ed3\u679c hits.max_score \u672c\u6b21\u641c\u7d22\u6240\u6709\u7ed3\u679c\u4e2d\uff0c\u6700\u5927\u76f8\u5173\u5ea6 \u6bcf\u4e2adocument\u5bf9\u4e8esearch\u7684\u76f8\u5173\u5ea6\uff0c\u8d8a\u76f8\u5173score\u5206\u6570\u8d8a\u5927\uff0c\u6392\u4f4d\u8d8a\u9760\u524d hits.hits \u9ed8\u8ba4\u524d10\u6761\u5b8c\u6210\u6570\u636e timeout \u9ed8\u8ba4\u65e0timeout\uff0clatency\u5e73\u8861completeness\uff0c \u90e8\u5206\u5e94\u7528\u4f1a\u6709\u65f6\u95f4\u9650\u5236\uff0c\u9700\u8981\u5feb\u901f\u8fd4\u56de\u6570\u636e \u6307\u5b9a\u6bcf\u4e2ashard\uff0c\u5c31\u53ea\u80fd\u5728timeout\u65f6\u95f4\u8303\u56f4\u5185\uff0c\u5c06\u641c\u7d22\u5230\u7684\u90e8\u5206\u6570\u636e\u76f4\u63a5\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef 1ms\uff08\u6beb\u79d2\uff09 1s\uff08\u79d2\uff09 1m(\u5206\u949f) GET _search ? timeout = 10","title":"\u4e00\u3001\u641c\u7d22\u8bf7\u6c42\u7ed3\u679c"},{"location":"ElasticSearch/3\u3001ElasticSearch\u641c\u7d22\u57fa\u7840/#multi-index-multi-type","text":"\uff081\uff09multi-index / _search # \u6240\u6709\u7d22\u5f15\uff0c\u6240\u6709 type\u4e0b\u7684\u6240\u6709\u6570\u636e / index / _search \u6307\u5b9a\u7d22\u5f15\uff0c\u641c\u7d22\u5176\u4e0b\u7684\u6240\u6709 type\u6570\u636e / index1 , index2 / _search \u540c\u65f6\u641c\u7d22\u4e24\u4e2a\u7d22\u5f15\u4e0b\u7684\u6570\u636e /*1,*2/_search \u6309\u7167\u901a\u914d\u7b26\u53bb\u5339\u914d\u591a\u4e2a\u7d22\u5f15 \uff082\uff09multi-type / index / type / _search \u641c\u7d22\u6307\u5b9a\u7d22\u5f15\u4e0b\u6307\u5b9a type\u6570\u636e / index / type1 , type2 / _search \u4e00\u4e2a\u7d22\u5f15\u4e0b\u591a\u4e2a type\u6570\u636e / index1 , index2 / type1 , type2 / _search \u591a\u4e2a\u7d22\u5f15\u4e0b\u591a\u4e2a type\u6570\u636e / _all / type1 , type2 / _search \u6240\u6709\u7d22\u5f15\u4e0b\u591a\u4e2a type\u6570\u636e client \u53d1\u9001\u4e00\u4e2a\u641c\u7d22\u8bf7\u6c42\uff0c\u4f1a\u628a\u8bf7\u6c42\u6253\u5230\u6240\u6709\u7684primary shard\u4e0a\u6267\u884c \u56e0\u4e3a\u6bcf\u4e2ashard\u90fd\u5305\u542b\u90e8\u5206\u6570\u636e\uff0c\u6240\u4ee5\u6bcf\u4e2ashard\u4e0a\u90fd\u53ef\u80fd\u4f1a\u5305\u542b\u641c\u7d22\u8bf7\u6c42\u7684\u7ed3\u679c \u4f46\u662f\uff0c\u5982\u679cprimary shard\u6709replica shard\uff0c\u90a3\u4e48\u8bf7\u6c42\u4e5f\u53ef\u4ee5\u6253\u5230replicashard\u6267\u884c","title":"\u4e8c\u3001multi-index \u548c multi-type\u641c\u7d22\u6a21\u5f0f"},{"location":"ElasticSearch/3\u3001ElasticSearch\u641c\u7d22\u57fa\u7840/#deep-paging","text":"\uff081\uff09\u5206\u9875\u641c\u7d22\u8bed\u6cd5 GET /_search?size=10 GET /_search?size=10&from=0 GET /_search?size=10&from=20 from size \u7b2c\u4e00\u9875\uff1a 0 3 \u7b2c\u4e8c\u9875\uff1a 3 3 \uff082\uff09deep paging \u6df1\u5ea6\u5206\u9875 \u4e3e\u4f8b\uff1a \u5982\u679c\u4e00\u5171\u670960000\u6761\u6570\uff0c\u4e00\u51713\u4e2ashard\uff0c\u6bcf\u4e2ashard20000\u6761\u6570\u636e \u641c\u7d22\u7b2c1001\u9875\uff081000\uff0c10\uff09\u6bcf\u4e2ashard\u90fd\u4f1a\u6392\u5e8f\u540e\u8fd4\u56de1009\u6761\u6570\u636e coordinate node\u6392\u5e8f\u540e\u5728\u8f93\u51fa \u5f71\u54cd\uff1a [1] \u4f20\u8f93\u8017\u8d39\u5e26\u5bbd [2] \u6570\u636e\u8017\u8d39\u5185\u5b58 [3] \u6392\u5e8f\u8017\u8d39CUP","title":"\u4e09\u3001\u5206\u9875\u641c\u7d22\u8bed\u6cd5 \u548c deep paging\u6027\u80fd\u95ee\u9898"},{"location":"ElasticSearch/3\u3001ElasticSearch\u641c\u7d22\u57fa\u7840/#query-string-searchall-metadata","text":"\uff081\uff09query string search\u8bed\u6cd5 GET /index/type/_search?q=key:value GET /index/type/_search?q=+key:value # \u5305\u542b GET /index/type/_search?q=-key:value # \u4e0d\u5305\u542b (2)all metadata GET /index/type/_search?q=value \u641c\u7d22\u4efb\u610f\u5305\u542bvalue\u7684\u7ed3\u679c _all \u5143\u6570\u636e \u5728\u5efa\u7acb\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u6211\u4eec\u63d2\u5165\u4e00\u6761document\uff0c\u91cc\u8fb9\u5305\u542b\u7684\u6240\u6709\u5b57\u6bb5\uff0c\u4f1a\u4e32\u8054\u8d77\u6765\u53d8\u6210\u4e00\u4e2a\u957f\u7684\u5b57\u7b26\u521b \u4f5c\u4e3a _all field \u7684\u503c\uff0c\u540c\u65f6\u5efa\u7acb\u7d22\u5f15 \u641c\u7d22\u65f6\u6ca1\u6709\u6307\u5b9a\u5b57\u6bb5field\uff0c\u5c31\u9ed8\u8ba4\u641c\u7d22 _all field \u6ce8\u610f\uff1a\u751f\u4ea7\u73af\u5883\u4e2d\u4e0d\u4f7f\u7528","title":"\u56db\u3001query string search\u8bed\u6cd5\u548call metadata"},{"location":"ElasticSearch/3\u3001ElasticSearch\u641c\u7d22\u57fa\u7840/#mapping","text":"\u6570\u636e\u51c6\u5907 put / website / article / 1 { \"title\" : \"this is a title one\" , \"content\" : \"this is a content one\" , \"post_date\" : \"2019-05-02\" , \"author_id\" : 9527 } put / website / article / 2 { \"title\" : \"this is a title two\" , \"content\" : \"this is a content two\" , \"post_date\" : \"2019-05-03\" , \"author_id\" : 9527 } put / website / article / 3 { \"title\" : \"this is a title three\" , \"content\" : \"this is a content three\" , \"post_date\" : \"2019-05-02\" , \"author_id\" : 9525 } \u641c\u7d22\u6d4b\u8bd5 GET /website/article/_search?q=2019 # 3 GET /website/article/_search?q=2019-05-02 # 3 GET /website/article/_search?q=post_date:2019-05-02 # 1 GET /website/article/_search?q=post_date:2019 # 0 \u81ea\u52a8\u6216\u624b\u52a8\u4e3aindex\u4e2d\u7684type\u5efa\u7acb\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u548c\u76f8\u5173\u914d\u7f6e\uff0c\u7b80\u79f0\u4e3amapping dynamic mapping \u4f1a\u81ea\u52a8\u521b\u5efaindex\uff0c\u521b\u5efatype\uff0c\u4ee5\u53catype\u5bf9\u5e94\u7684mapping mapping\u5305\u542b\u4e86\u6bcf\u4e2afield\u5bf9\u5e94\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4ee5\u53ca\u5982\u4f55\u5206\u8bcd\u7b49\u8bbe\u7f6e GET /website/_mapping/article { \"website\": { \"mappings\": { \"article\": { \"properties\": { \"author_id\": { \"type\": \"long\" }, \"content\": { \"type\": \"text\", \"fields\": { \"keyword\": { \"type\": \"keyword\", \"ignore_above\": 256 } } }, \"post_date\": { \"type\": \"date\" }, \"title\": { \"type\": \"text\", \"fields\": { \"keyword\": { \"type\": \"keyword\", \"ignore_above\": 256 } } } } } } } }","title":"\u4e94\u3001mapping\u5230\u5e95\u662f\u4ec0\u4e48"},{"location":"ElasticSearch/3\u3001ElasticSearch\u641c\u7d22\u57fa\u7840/#_2","text":"1\u3001exact value \u7cbe\u786e\u641c\u7d22 \u4f8b\u5982\uff1a 2017-01-01 \u641c\u7d22\u7684\u65f6\u5019\u5fc5\u987b\u8f93\u5165 2017-01-01\uff0c\u624d\u80fd\u641c\u7d22\u51fa\u6765 2\u3001full text \u5168\u6587\u68c0\u7d22 \uff081\uff09\u7f29\u5199 vs\uff0c\u5168\u79f0\uff1acn vs. chian \uff082\uff09\u683c\u5f0f\u8f6c\u5316\uff1alike liked likes \uff083\uff09\u5927\u5c0f\u5199\uff1a Tom vs tom \uff084\uff09\u540c\u4e49\u8bcd\uff1alike vs love \u4f8b\u5982\uff1a 2017-01-01 \u641c\u7d22 2017 01 \u90fd\u53ef\u4ee5\u641c\u51fa\u6765 \u5168\u6587\u68c0\u7d22\uff0c\u5206\u8bcd\u641c\u7d22\uff0c\u7f29\u5199\uff0c\u65f6\u6001\uff0c\u5927\u5c0f\u5199\uff0c\u540c\u4e49\u8bcd","title":"\u516d\u3001\u7cbe\u786e\u5339\u914d\u4e0e\u5168\u6587\u641c\u7d22"},{"location":"ElasticSearch/3\u3001ElasticSearch\u641c\u7d22\u57fa\u7840/#_3","text":"\u4e3e\u4f8b\uff1a 1\u3001\u4e24\u4e2a\u6587\u6863 I like my dog I think you like my dog 2\u3001\u5206\u8bcd\uff0c\u521d\u6b65\u5efa\u7acb\u5012\u6392\u7d22\u5f15 word doc1 doc2 normalization I * * like * * -> like my * * dog * * -> dogs think * - you * - 3\u3001\u641c\u7d22\u641c\u4e0d\u5230\u4efb\u4f55\u7ed3\u679c mother love little cat 4\u3001normalization \u65f6\u6001\uff0c\u5355\u590d\u6570\uff0c\u540c\u4e49\u8bcd\u8f6c\u6362 \u5efa\u7acb\u5012\u6392\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u4f1a\u5bf9\u62c6\u5206\u51fa\u6765\u7684\u5404\u4e2a\u5355\u8bcd\u8fdb\u884c\u76f8\u5e94\u7684\u5904\u7406 \u4ee5\u63d0\u5347\u540e\u9762\u641c\u7d22\u7684\u65f6\u5019\u80fd\u591f\u641c\u5230\u7684\u76f8\u5173\u8054\u6587\u6863\u7684\u6982\u7387 5\u3001\u641c\u7d22\u4e32\u5206\u8bcd\u540e\u641c\u7d22\uff1a mother love little cat","title":"\u4e03\u3001\u5012\u6392\u7d22\u5f15\u6838\u5fc3\u539f\u7406"},{"location":"ElasticSearch/3\u3001ElasticSearch\u641c\u7d22\u57fa\u7840/#_4","text":"1\u3001\u5206\u8bcd\u5668 \u5207\u5206\u8bcd\u8bed\uff0cnormalization \u63d0\u5347recall\u53ec\u56de\u7387\uff08\u67e5\u5168\u7387\uff09\uff1a \u641c\u7d22\u7684\u65f6\u5019\uff0c\u589e\u52a0\u80fd\u591f\u641c\u5230\u7ed3\u679c\u7684\u6570\u91cf character filter \u5b57\u7b26\u9884\u5904\u7406","title":"\u516b\u3001\u5206\u8bcd\u5668\u7684\u5185\u90e8\u7ec4\u6210"},{"location":"ElasticSearch/3\u3001ElasticSearch\u641c\u7d22\u57fa\u7840/#query-string","text":"query string \u5fc5\u987b\u4ee5\u548cindex\u5efa\u7acb\u65f6\u76f8\u540c\u7684analyzer\u8fdb\u884c\u5206\u8bcd query string \u5bf9exact value\u548cfull text\u7684\u533a\u522b \u77e5\u8bc6\u70b9\uff1a \u4e0d\u540c\u7c7b\u578b\u7684field\uff0c\u6709\u7684\u662ffull text\uff0c \u6709\u7684\u662fexact value date\uff1a exact value eg: date _all : full text, \u5206\u8bcd\uff0c normalization \u6d4b\u8bd5\u5206\u8bcd\u5668 GET /_analyze { \"analyzer\": \"standard\", \"text\": \"this is a good man\" }","title":"\u4e5d\u3001query string\u7684\u5206\u8bcd"},{"location":"ElasticSearch/3\u3001ElasticSearch\u641c\u7d22\u57fa\u7840/#mapping_1","text":"1\u3001\u5f80es\u76f4\u63a5\u63d2\u5165\u6570\u636e\uff0ces\u4f1a\u81ea\u52a8\u5efa\u7acb\u7d22\u5f15\uff0c\u5efa\u7acbtype \u4ee5\u53ca\u5bf9\u5e94\u7684mapping 2\u3001mapping\u81ea\u52a8\u5b9a\u4e49\u6bcf\u4e2afield\u7684\u6570\u636e\u7c7b\u578b 3\u3001\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6709exact value \u548c full text 4\u3001exact value \u5efa\u7acb\u5012\u6392\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u4e0d\u4f1a\u5206\u8bcd\uff0c\u5c06\u6574\u4e2a\u503c\u4f5c\u4e3a\u4e00\u4e2a\u5173\u952e\u5b57\u5efa\u7acb\u5230\u5012\u6392\u7d22\u5f15\u4e2d 5\u3001full text \u4f1a\u7ecf\u5386\u5404\u79cd\u5904\u7406\uff0c\u5206\u8bcd\uff0cnormalization\uff08\u65f6\u6001\uff0c\u540c\u4e49\u8bcd\uff0c\u5927\u5c0f\u5199\uff09\uff0c\u624d\u4f1a\u5efa\u7acb\u5230\u7d22\u5f15\u4e2d 6\u3001\u4e00\u4e2a\u641c\u7d22\u8fc7\u6765\uff0c\u5bf9\u641c\u7d22\u6587\u672c\u7684\u5904\u7406\u4e5f\u4e00\u6837 7\u3001\u53ef\u4ee5\u4f7f\u7528dynamic mapping \u81ea\u52a8\u5efa\u7acbmapping\uff0c\u4e5f\u53ef\u4ee5\u624b\u52a8\u8bbe\u7f6e 8\u3001mapping\u5c31\u662findex\u7684type\u7684\u5143\u6570\u636e\uff0c\u6bcf\u4e2atype\u90fd\u6709\u81ea\u5df1\u7684mapping\uff0c \u51b3\u5b9a\u4e86\u6570\u636e\u7c7b\u578b\uff0c\u5efa\u7acb\u5012\u6392\u7d22\u5f15\u7684\u884c\u4e3a\uff0c\u8fd8\u6709\u8fdb\u884c\u641c\u7d22\u7684\u884c\u4e3a","title":"\u5341\u3001\u900f\u5f7b\u7406\u89e3mapping"},{"location":"ElasticSearch/3\u3001ElasticSearch\u641c\u7d22\u57fa\u7840/#dynamic-mapping","text":"1\u3001\u6838\u5fc3\u6570\u636e\u7c7b\u578b string byte short integer long float double boolean date 2\u3001dynamic mapping true or false -> boolean 123 -> long 123.45 -> double 2017-01-01 -> date \"hello\" -> string/text 3\u3001\u67e5\u770bmapping GET /index/_mapping/type","title":"\u5341\u4e00\u3001dynamic mapping"},{"location":"ElasticSearch/3\u3001ElasticSearch\u641c\u7d22\u57fa\u7840/#mapping_2","text":"1\u3001\u5efa\u7acb\u7d22\u5f15 analyzed not_analyzed no 2\u3001\u4fee\u6539mapping \u53ea\u80fd\u521b\u5efaindex\u65f6\u624b\u52a8\u5efa\u7acbmapping\uff0c\u6216\u65b0\u589efield mapping \u4e0d\u80fdupdate field mapping # \u5efa\u7acb mapping PUT / website { \"mappings\" : { \"article\" : { \"properties\" : { \"title\" : { \"type\" : \"text\" } , \"content\" : { \"type\" : \"text\" , \"analyzer\" : \"english\" } , \"id\" : { \"type\" : \"long\" } , \"post_date\" : { \"type\" : \"date\" } } } } } # \u6dfb\u52a0\u5b57\u6bb5\u4e0d\u5206\u8bcd PUT website / _mapping / article { \"properties\" : { \"publisher\" : { \"type\" : \"string\" , \"index\" : \"not_analyzed\" } } } # \u67e5\u770b mapping GET / website / _mapping / article { \"website\" : { \"mappings\" : { \"article\" : { \"properties\" : { \"content\" : { \"type\" : \"text\" , \"analyzer\" : \"english\" } , \"id\" : { \"type\" : \"long\" } , \"post_date\" : { \"type\" : \"date\" } , \"publisher\" : { \"type\" : \"keyword\" } , \"title\" : { \"type\" : \"text\" } } } } } } \u5206\u8bcd\u6d4b\u8bd5 # publisher\u5b57\u6bb5\u4e0d\u652f\u6301\u5206\u8bcd \uff0c\u4f1a\u62a5\u9519 GET website / _analyze { \"field\" : \"publisher\" , \"text\" : \"this is a good man\" } # \u6807\u51c6\u5206\u8bcd GET website / _analyze { \"field\" : \"title\" , \"text\" : \"this is a good man\" } { \"tokens\" : [ { \"token\" : \"this\" , \"start_offset\" : 0 , \"end_offset\" : 4 , \"type\" : \"<ALPHANUM>\" , \"position\" : 0 } , { \"token\" : \"is\" , \"start_offset\" : 5 , \"end_offset\" : 7 , \"type\" : \"<ALPHANUM>\" , \"position\" : 1 } , { \"token\" : \"a\" , \"start_offset\" : 8 , \"end_offset\" : 9 , \"type\" : \"<ALPHANUM>\" , \"position\" : 2 } , { \"token\" : \"good\" , \"start_offset\" : 10 , \"end_offset\" : 14 , \"type\" : \"<ALPHANUM>\" , \"position\" : 3 } , { \"token\" : \"man\" , \"start_offset\" : 15 , \"end_offset\" : 18 , \"type\" : \"<ALPHANUM>\" , \"position\" : 4 } ] } # english\u5206\u8bcd GET website / _analyze { \"field\" : \"content\" , \"text\" : \"this is a good man\" } { \"tokens\" : [ { \"token\" : \"good\" , \"start_offset\" : 10 , \"end_offset\" : 14 , \"type\" : \"<ALPHANUM>\" , \"position\" : 3 } , { \"token\" : \"man\" , \"start_offset\" : 15 , \"end_offset\" : 18 , \"type\" : \"<ALPHANUM>\" , \"position\" : 4 } ] }","title":"\u5341\u4e8c\u3001\u624b\u52a8\u5efa\u7acb\u548c\u4fee\u6539mapping"},{"location":"ElasticSearch/3\u3001ElasticSearch\u641c\u7d22\u57fa\u7840/#mapping_3","text":"1\u3001multivale field { \"tags\" : [ \"red\" , \"blue\" ] } 2\u3001empty field null , [] , [ null ] 3\u3001object\u7c7b\u578b\u6570\u636e\u5e95\u5c42\u7ed3\u6784 { \"info\" { \"address\" : \"beijing\" } \"name\" : \"Tom\" } \u6570\u636e\u7c7b\u578b\u5b58\u50a8 info . address : beijing name : Tom","title":"\u5341\u4e09\u3001mapping\u590d\u6742\u6570\u636e\u7c7b\u578b"},{"location":"ElasticSearch/4\u3001ElasticSearch\u641c\u7d22API/","text":"\u4e00\u3001search api\u7684\u57fa\u7840\u8bed\u6cd5\u4ecb\u7ecd 1\u3001search api GET _search GET index1 , index2 / type1 , type2 / _search ? q = value & from = 0 & size = 10 2\u3001GET\u4e2d\u643a\u5e26reques body http\u534f\u8bae\u4e2d\uff0c\u4e00\u822c\u4e0d\u5141\u8bb8GET\u8bf7\u6c42\u5199\u5230request body\uff0c\u4e3a\u4e86\u66f4\u597d\u63cf\u8ff0\u6570\u636e\u67e5\u8be2\u64cd\u4f5c\uff0c\u8fd8\u662f\u53ef\u4ee5\u4f7f\u7528 \u5982\u679c\u9047\u5230\u4e0d\u652f\u6301\u7684\u573a\u666f\uff0c\u53ef\u4ee5\u4f7f\u7528POST \u4e8c\u3001Query DSL\u641c\u7d22\u8bed\u6cd5 1\u3001\u5c0f\u5b9e\u4f8b GET /_search { \"query\":{ \"match_all\": {} } } 2\u3001Query DSL\u57fa\u672c\u8bed\u6cd5 { query_name : { argument : value , argument : value , ... } } { query_name : { field_name : { argument : value , argument : value , } } } \u793a\u4f8b GET /index/type/_search { \"query\": { \"match\":{ \"field\": \"value\" } } } 3\u3001\u7ec4\u5408\u591a\u4e2a\u641c\u7d22\u6761\u4ef6 GET /index/type/_search { \"query\": { \"bool\": { \"must\": {\"match\": {\"name\": \"Tom\"}}, \"should\": [ \"match\": {\"age\": 23}, { \"bool\": { \"must\": {\"match\": {\"address\": \"beijing\"}}, \"must_not\": {\"match\": {\"rude\": true}} } } ], \"minimum_should_match\": 1 } } } \u793a\u4f8b # \u51c6\u5907 3 \u6761\u6570\u636e PUT / website / article / 1 { \"title\" : \"elasticsearch title\" , \"content\" : \"this is a elasticsearch content\" , \"author\" : \"Peng Shiyu\" } PUT / website / article / 2 { \"title\" : \"hadoop title\" , \"content\" : \"this is a hadoop content\" , \"author\" : \"Peng Shiyu\" } PUT / website / article / 3 { \"title\" : \"hbase title\" , \"content\" : \"this is a hbase content\" , \"author\" : \"mouday\" } GET / website / article / _search # \u641c\u7d22\u6761\u4ef6\uff0c author\u5305\u542bpeng \uff0c title\u53ef\u4ee5\u5305\u542belasticsearch GET / website / article / _search { \"query\" : { \"bool\" : { \"must\" : { \"match\" : { \"author\" : \"peng\" } } , \"should\" : { \"match\" : { \"title\" : \"elasticsearch\" } } } } } \u4e09\u3001filter\u4e0equery\u6df1\u5165\u5bf9\u6bd4\u89e3\u5bc6\uff1a\u76f8\u5173\u5ea6\uff0c\u6027\u80fd 1\u3001filter\u793a\u4f8b GET /website/article/_search { \"query\": { \"bool\": { \"must\": { \"match\": { \"author\": \"peng\" } }, \"filter\": { \"match\": { \"title\": \"hadoop\" } } } } } 2\u3001filter \u548c query\u6bd4\u5bf9 filter \u4ec5\u4ec5\u6309\u7167\u641c\u7d22\u6761\u4ef6\u8fc7\u6ee4\u51fa\u9700\u8981\u7684\u6570\u636e\uff0c\u4e0d\u8ba1\u7b97\u76f8\u5173\u5ea6 query \u4f1a\u8ba1\u7b97\u6bcf\u4e2adocument\u76f8\u5bf9\u641c\u7d22\u6761\u4ef6\u7684\u76f8\u5173\u5ea6\uff0c\u5e76\u6309\u7167\u76f8\u5173\u5ea6\u6392\u5e8f 3\u3001filter\u548c query\u6027\u80fd filter \u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u81ea\u52a8cache query \u8981\u8ba1\u7b97\u76f8\u5173\u5ea6\u5206\u6570\uff0c\u65e0\u6cd5\u4f7f\u7528cache \u56db\u3001\u5e38\u7528\u7684\u5404\u79cdquery\u641c\u7d22\u8bed\u6cd5 1\u3001match_all GET /index/type/_search { \"query\": { \"match_all\": {} } } 2\u3001match GET /index/type/_search { \"query\": { \"match\": { \"field\": \"value\" } } } 3\u3001multi match GET /index/type/_search { \"query\": { \"multi_match\": { \"query\": \"text\", \"fields\": [\"title\", \"content\"] } } } 4\u3001range query GET /index/type/_search { \"query\": { \"range\": { \"age\": { \"gte\": 20, \"lt\": 30 } } } } 5\u3001term query \u6574\u4e32\u67e5\u8be2\uff0c\u4e0d\u5206\u8bcd GET /index/type/_search { \"query\": { \"term\": { \"field\": \"value\" } } } 6\u3001terms query GET /index/type/_search { \"query\": { \"terms\": { \"field\": [\"value1\", \"value2\"] } } } 7\u3001exist query \u67e5\u8be2\u5b57\u6bb5\u4e0d\u80fd\u4e3a\u7a7a\uff082.x\u7248\u672c\uff09 GET /index/type/_search { \"query\": { \"exists\": { \"field\": \"value1\" } } } \u4e94\u3001\u591a\u641c\u7d22\u6761\u4ef6\u7ec4\u5408\u67e5\u8be2 bool -query -should -must -must_not -filter \u53ea\u8fc7\u6ee4\uff0c\u4e0d\u6392\u5e8f\u793a\u4f8b \"query\" : { \"constant_score\" : { \"filter\" : { \"range\" : { \"age\" : { \"gte\" : 30 } } } } } \u7ec4\u5408\u5206\u6570\u8ba1\u7b97\uff1a \u5148\u8ba1\u7b97\u6bcf\u4e2adocument\u9488\u5bf9\u4ed6\u7684\u76f8\u5173\u5ea6\u5206\u6570\uff0c\u7136\u540ebool\u7efc\u5408\u6240\u6709\u5206\u6570\uff0c\u5408\u5e76\u4e3a\u4e00\u4e2a\u5206\u6570 filter \u4e0d\u8ba1\u7b97\u5206\u6570 \u516d\u3001\u5b9a\u4f4d\u4e0d\u5408\u6cd5\u7684\u641c\u7d22\u4ee5\u53ca\u5176\u539f\u56e0 GET /index/type/_validate/query?explain { \"query\": { \"match\": { \"feild\": \"value\" } } } \u4e00\u822c\u7528\u5728\u7279\u522b\u590d\u6742\u7684\u641c\u7d22\u8bed\u53e5\u68c0\u67e5\uff0c\u9a8c\u8bc1\u641c\u7d22\u8bed\u53e5\u662f\u5426\u5408\u6cd5 \u4e03\u3001\u5b9a\u5236\u641c\u7d22\u7ed3\u679c\u7684\u6392\u5e8f\u89c4\u5219 \u5b9a\u5236\u6392\u5e8f\u89c4\u5219 PUT /alibaba/taobao/1 { \"name\": \"dog\", \"price\": 20 } PUT /alibaba/taobao/2 { \"name\": \"cat\", \"price\": 25 } PUT /alibaba/taobao/3 { \"name\": \"pig\", \"price\": 23 } # \u6309\u7167\u4ef7\u683c\u5927\u5230\u5c0f\u6392\u5e8f GET /alibaba/taobao/_search { \"sort\": { \"price\": { \"order\": \"desc\" } } } \u516b\u3001\u5c06\u4e00\u4e2afield\u7d22\u5f15\u4e24\u6b21\u6765\u89e3\u51b3\u5b57\u7b26\u4e32\u6392\u5e8f\u95ee\u9898 \u5982\u679c\u5bf9\u4e00\u4e2astring field\u8fdb\u884c\u6392\u5e8f\uff0c\u7ed3\u679c\u5f80\u5f80\u4e0d\u51c6\u786e\uff0c \u56e0\u4e3a\u5206\u8bcd\u540e\u662f\u591a\u4e2a\u5355\u8bcd\uff0c\u518d\u6392\u5e8f\u5c31\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u4e86 \u901a\u5e38\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff1a \u5c06\u4e00\u4e2astring field\u5efa\u7acb\u4e24\u6b21\u7d22\u5f15\uff0c\u4e00\u4e2a\u5206\u8bcd\uff0c\u7528\u4e8e\u641c\u7d22\uff1b\u4e00\u4e2a\u4e0d\u5206\u8bcd\uff0c\u7528\u6765\u6392\u5e8f PUT /website { \"mappings\": { \"article\": { \"properties\": { \"title\": { \"type\": \"text\", \"fields\": { \"raw\": { \"type\": \"string\", \"index\": \"not_analyzed\" } }, \"fielddata\": true }, \"content\": { \"type\": \"text\" }, \"post_date\": { \"type\": \"date\" }, \"author_id\": { \"type\": \"long\" } } } } } # \u67e5\u770bmapping GET /website/_mapping/article { \"website\": { \"mappings\": { \"article\": { \"properties\": { \"author_id\": { \"type\": \"long\" }, \"content\": { \"type\": \"text\" }, \"post_date\": { \"type\": \"date\" }, \"title\": { \"type\": \"text\", \"fields\": { \"raw\": { \"type\": \"keyword\" } }, \"fielddata\": true } } } } } } \u586b\u5145\u6570\u636e PUT /website/article/1 { \"title\": \"title 1\", \"content\": \"content 1\", \"post_date\": \"2019-04-30\", \"author_id\": 1001 } PUT /website/article/2 { \"title\": \"title 2\", \"content\": \"content 2\", \"post_date\": \"2019-05-30\", \"author_id\": 1002 } PUT /website/article/3 { \"title\": \"title 3\", \"content\": \"content 3\", \"post_date\": \"2019-04-28\", \"author_id\": 1001 } \u5206\u8bcd\u540e\u7684\u6392\u5e8f\u7ed3\u679c GET /website/article/_search { \"sort\": [ { \"title\": { \"order\": \"desc\" } } ] } { \"took\": 26, \"timed_out\": false, \"_shards\": { \"total\": 5, \"successful\": 5, \"failed\": 0 }, \"hits\": { \"total\": 3, \"max_score\": null, \"hits\": [ { \"_index\": \"website\", \"_type\": \"article\", \"_id\": \"2\", \"_score\": null, \"_source\": { \"title\": \"title 2\", \"content\": \"content 2\", \"post_date\": \"2019-05-30\", \"author_id\": 1002 }, \"sort\": [ \"title\" ] }, { \"_index\": \"website\", \"_type\": \"article\", \"_id\": \"1\", \"_score\": null, \"_source\": { \"title\": \"title 1\", \"content\": \"content 1\", \"post_date\": \"2019-04-30\", \"author_id\": 1001 }, \"sort\": [ \"title\" ] }, { \"_index\": \"website\", \"_type\": \"article\", \"_id\": \"3\", \"_score\": null, \"_source\": { \"title\": \"title 3\", \"content\": \"content 3\", \"post_date\": \"2019-04-28\", \"author_id\": 1001 }, \"sort\": [ \"title\" ] } ] } } \u4f7f\u7528\u6392\u5e8f\u5c5e\u6027\u6392\u5e8f\u7ed3\u679c GET /website/article/_search { \"sort\": [ { \"title.raw\": { \"order\": \"desc\" } } ] } { \"took\": 3, \"timed_out\": false, \"_shards\": { \"total\": 5, \"successful\": 5, \"failed\": 0 }, \"hits\": { \"total\": 3, \"max_score\": null, \"hits\": [ { \"_index\": \"website\", \"_type\": \"article\", \"_id\": \"3\", \"_score\": null, \"_source\": { \"title\": \"title 3\", \"content\": \"content 3\", \"post_date\": \"2019-04-28\", \"author_id\": 1001 }, \"sort\": [ \"title 3\" ] }, { \"_index\": \"website\", \"_type\": \"article\", \"_id\": \"2\", \"_score\": null, \"_source\": { \"title\": \"title 2\", \"content\": \"content 2\", \"post_date\": \"2019-05-30\", \"author_id\": 1002 }, \"sort\": [ \"title 2\" ] }, { \"_index\": \"website\", \"_type\": \"article\", \"_id\": \"1\", \"_score\": null, \"_source\": { \"title\": \"title 1\", \"content\": \"content 1\", \"post_date\": \"2019-04-30\", \"author_id\": 1001 }, \"sort\": [ \"title 1\" ] } ] } } \u4e5d\u3001\u76f8\u5173\u5ea6\u8bc4\u5206TF&IDF\u7b97\u6cd5\u72ec 1\u3001relevance score\u7b97\u6cd5 \u8ba1\u7b97\u7d22\u5f15\u6587\u672c\u4e0e\u641c\u7d22\u6587\u672c\u7684\u5173\u8054\u5339\u914d\u5ea6 ElasticSearch\u4f7f\u7528TF/IDF\u7b97\u6cd5 term frequency/ inverse document frequency\u7b97\u6cd5 TF: \u641c\u7d22\u6587\u672c\u4e2d\u7684\u5404\u4e2a\u8bcd\u6761\u5728field\u6587\u672c\u4e2d\u51fa\u73b0\u6b21\u6570\uff0c\u51fa\u73b0\u6b21\u6570\u8d8a\u591a\uff0c\u5c31\u8d8a\u76f8\u5173 IDF: \u641c\u7d22\u6587\u672c\u4e2d\u5404\u4e2a\u8bcd\u6761\u5728\u6574\u4e2a\u7d22\u5f15\u7684\u6240\u6709\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u51fa\u73b0\u6b21\u6570\u8d8a\u591a\uff0c\u5c31\u8d8a\u4e0d\u76f8\u5173 field length norm : field\u957f\u5ea6\u8d8a\u957f\uff0c\u76f8\u5173\u5ea6\u8d8a\u5f31 \u4e3e\u4f8b\uff1a doc1: hello, you and world is very good doc2: hello, how are you 2\u3001score\u8ba1\u7b97 GET /website/article/_search?explain { \"query\": { \"match\": { \"title\": \"title\" } } } 3\u3001\u5206\u6790\u4e00\u4e2adocument\u662f\u5982\u4f55\u88ab\u5339\u914d\u4e0a\u7684 GET /website/article/1/_explain { \"query\": { \"match\": { \"title\": \"title\" } } } \u5341\u3001\u5185\u6838\u7ea7\u77e5\u8bc6\u70b9\u4e4bdoc value \u641c\u7d22\u7684\u65f6\u5019\uff0c\u4e3b\u8981\u4f9d\u9760\u5012\u6392\u7d22\u5f15\uff1b \u6392\u5e8f\u7684\u65f6\u5019\uff0c\u9700\u8981\u4f9d\u9760\u6b63\u6392\u7d22\u5f15\uff0c\u770b\u5230\u6bcf\u4e2adocument\u7684\u6bcf\u4e2afield \u7136\u540e\u8fdb\u884c\u6392\u5e8f\uff0c\u6240\u8c13\u7684\u6b63\u6392\u7d22\u5f15\uff0c\u5176\u5b9e\u5c31\u662fdoc values \u5728\u5efa\u7acb\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u4e00\u65b9\u9762\u4f1a\u5efa\u7acb\u5012\u6392\u7d22\u5f15\uff0c\u4ee5\u4f9b\u641c\u7d22\u4f7f\u7528 \u4e00\u65b9\u9762\u4f1a\u5efa\u7acb\u6b63\u6392\u7d22\u5f15\uff0c\u4e5f\u5c31\u662fdoc values\uff0c\u4ee5\u4f9b\u6392\u5e8f\u3001\u805a\u5408\u3001\u8fc7\u6ee4\u7b49\u64cd\u4f5c\u4f7f\u7528 doc values\u662f\u88ab\u4fdd\u5b58\u5728\u78c1\u76d8\u4e0a\u7684\uff0c\u6b64\u65f6\uff0c\u5982\u679c\u5185\u5b58\u8db3\u591f\uff0cos\u4f1a\u81ea\u52a8\u5c06\u5176\u7f13\u5b58\u5230\u5185\u5b58\u4e2d\uff0c\u6027\u80fd\u8fd8\u662f\u4f1a\u5f88\u9ad8 \u5982\u679c\u5185\u5b58\u4e0d\u8db3\u591f\uff0cos\u4f1a\u5c06\u5176\u5199\u5165\u78c1\u76d8\u4e0a \u5341\u4e00\u3001\u5185\u6838\u89e3\u5bc6\u4e4bquery phase 1\u3001query phase \uff081\uff09\u641c\u7d22\u8bf7\u6c42\u53d1\u9001\u5230\u67d0\u4e00\u4e2acoordinate node\uff0c\u6784\u5efa\u4e00\u4e2apriority queue\uff0c\u957f\u5ea6\u4ee5paging\u64cd\u4f5cfrom\u548csize\u4e3a\u51c6\uff0c\u9ed8\u8ba4\u4e3a0 \uff082\uff09coordinate node\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230\u6240\u6709\u7684shard\uff0c\u6bcf\u4e2ashard\u672c\u5730\u641c\u7d22\uff0c\u5e76\u6784\u5efa\u4e00\u4e2a\u672c\u5730\u7684priority queue \uff083\uff09\u5404\u4e2ashard\u5c06\u81ea\u5df1\u7684priority queue\uff08doc id\uff09\u8fd4\u56de\u7ed9coordinate node\uff0c\u5e76\u6784\u5efa\u4e00\u4e2a\u5168\u5c40\u7684priority queue 2\u3001replica shard\u63d0\u5347\u641c\u7d22\u541e\u5410\u91cf \u4e00\u6b21\u8bf7\u6c42\u8981\u6253\u5230\u6240\u6709\u7684shard\u7684\u4e00\u4e2areplica/primary\u4e0a\uff0c\u5982\u679c\u6bcf\u4e2ashard\u90fd\u6709\u591a\u4e2areplica\uff0c \u90a3\u4e48\u540c\u65f6\u5e76\u53d1\u8fc7\u6765\u7684\u641c\u7d22\u8bf7\u6c42\u53ef\u4ee5\u540c\u65f6\u6253\u5230\u5176\u4ed6\u7684replica\u4e0a\u53bb \u5341\u4e8c\u3001\u5185\u6838\u89e3\u5bc6\u4e4bfetch phase 1\u3001\u5de5\u4f5c\u6d41\u7a0b \uff081\uff09coordinate node\u6784\u5efa\u5b8cpriority queue\u4e4b\u540e\uff0c\u5c31\u53d1\u9001mget\u8bf7\u6c42\u53bb\u6240\u6709\u7684shard\u4e0a\u83b7\u53d6\u5bf9\u5e94\u7684document \uff082\uff09\u5404\u4e2ashard\u5c06document\u8fd4\u56de\u7ed9coordinate node \uff083\uff09coodinate node\u5c06\u5408\u5e76\u540e\u7684document\u7ed3\u679c\u8fd4\u56de\u7ed9client\u5ba2\u6237\u7aef 2\u3001\u5982\u679c\u4e0d\u52a0from \u548csize\uff0c\u9ed8\u8ba4from=0 size=10, \u6309\u7167socre\u6392\u5e8f \u5341\u4e09\u3001\u641c\u7d22\u76f8\u5173\u53c2\u6570\u68b3\u7406 1\u3001preference \u51b3\u5b9a\u4e86\u54ea\u4e9bshard\u4f1a\u88ab\u7528\u6765\u6267\u884c\u641c\u7d22\u64cd\u4f5c _primary , _primary_first , _local , _only_node : xyz , _prefer_node : xyz , _shard : 2 , 3 2\u3001bouncing results\u95ee\u9898 \u4e24\u4e2adocument \u6392\u5e8f\uff0cfield\u503c\u76f8\u540c\uff0c\u4e0d\u540c\u7684shard\u5546\uff0c\u53ef\u80fd\u6392\u5e8f\u4e0d\u540c; \u6bcf\u6b21\u8bf7\u6c42\u8f6e\u8be2\u6253\u5230\u4e0d\u540c\u7684shard\u4e0a\uff0c\u6bcf\u6b21\u9875\u9762\u4e0a\u770b\u5230\u7684\u641c\u7d22\u7ed3\u679c\u7684\u6392\u5e8f\u90fd\u4e0d\u4e00\u6837 \u8fd9\u5c31\u662fbouncing result\uff0c\u4e5f\u5c31\u662f\u8df3\u8dc3\u7684\u7ed3\u679c \u89e3\u51b3\u65b9\u6848 \u5c06preference\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u968f\u673a\u7684\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982\u8bf4user_id\uff0c \u8ba9\u6bcf\u4e2auser\u6bcf\u6b21\u641c\u7d22\u7684\u65f6\u5019\u90fd\u662f\u7528\u540c\u4e00\u4e2ashard\u4e0a\u6267\u884c\uff0c\u5c31\u4e0d\u4f1a\u770b\u5230bouncing result timeout \u5c06\u67e5\u5230\u7684\u6570\u636e\u76f4\u63a5\u8fd4\u56de\uff0c\u907f\u514d\u67e5\u8be2\u8017\u65f6\u8fc7\u957f routing document\u6587\u6863\u8def\u7531\uff0crouting=user_id, \u8fd9\u5c31\u53ef\u4ee5\u8ba9\u540c\u4e00\u4e2auser\u5bf9\u5e94\u7684\u6570\u636e\u5230\u4e00\u4e2ashard\u4e0a\u53bb search_type dfs_query_then_fetch \u53ef\u4ee5\u63d0\u5347revelance sort\u7cbe\u51c6\u5ea6 \u5341\u56db\u3001\u57fa\u4e8escroll\u6280\u672f\u6eda\u52a8\u641c\u7d22\u5927\u91cf\u6570\u636e \u4f7f\u7528scroll\u6eda\u52a8\u641c\u7d22 \u5148\u641c\u7d22\u4e00\u6279\u6570\u636e\uff0c\u7136\u540e\u4e0b\u6b21\u5728\u641c\u7d22\u4e00\u6279\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u77e5\u9053\u641c\u7d22\u51fa\u5168\u90e8\u7684\u6570\u636e\u6765 scroll\u641c\u7d22\u4f1a\u5728\u7b2c\u4e00\u6b21\u641c\u7d22\u7684\u65f6\u5019\uff0c\u4fdd\u5b58\u4e00\u4e2a\u5f53\u524d\u7684\u89c6\u56fe\u5feb\u7167\uff0c\u4e4b\u540e\u4f1a\u57fa\u4e8e\u8be5\u5c31\u7684\u89c6\u56fe\u5feb\u7167\u63d0\u4f9b\u6570\u636e\u641c\u7d22\uff0c\u5982\u679c\u8fd9\u4e2a\u671f\u95f4\u6570\u636e\u53d8\u66f4\uff0c\u662f\u4e0d\u4f1a\u8ba9\u7528\u6237\u770b\u5230\u7684 \u91c7\u7528\u57fa\u4e8e_doc \u8fdb\u884c\u6392\u5e8f\u7684\u65b9\u5f0f\uff0c\u6027\u80fd\u8f83\u9ad8\u54e6 \u6bcf\u6b21\u53d1\u9001scroll\u8bf7\u6c42\uff0c\u8fd8\u9700\u8981\u6307\u5b9a\u4e00\u4e2ascroll\u53c2\u6570\uff0c\u6307\u5b9a\u4e00\u4e2a\u65f6\u95f4\u7a97\u53e3\uff0c\u6bcf\u6b21\u641c\u7d22\u8bf7\u6c42\u53ea\u8981\u5728\u8fd9\u4e2a\u65f6\u95f4\u7a97\u53e3\u5185\u5b8c\u6210\u5c31\u53ef\u4ee5 size \u4f1a\u53d1\u9001\u7ed9\u6bcf\u4e2ashard\uff0c \u56e0\u6b64\u6bcf\u6b21\u6700\u591a\u4f1a\u8fd4\u56desize * primary shard\u6761\u6570\u636e scroll \u770b\u8d77\u6765\u633a\u50cf\u5206\u9875\u7684\uff0c\u4f46\u662f\u5176\u5b9e\u4f7f\u7528\u573a\u666f\u4e0d\u4e00\u6837\uff0c\u5206\u9875\u4e3b\u8981\u662f\u7528\u6765\u4e00\u9875\u4e00\u9875\u641c\u7d22\uff0c\u7ed9\u7528\u6237\u7684\uff0c scroll\u4e3b\u8981\u662f\u7528\u6765\u4e00\u6279\u4e00\u6279\u68c0\u7d22\u6570\u636e\uff0c\u8ba9\u7cfb\u7edf\u8fdb\u884c\u5904\u7406\u7684 # \u7b2c\u4e00\u6b21\u8bf7\u6c42 GET / website / article / _search ? scroll = 1 m { \"query\" : { \"match_all\" : {} } , \"sort\" : [ \"_doc\" ], \"size\" : 2 } # \u7b2c\u4e8c\u6b21\u8bf7\u6c42 GET / _search / scroll { \"scroll\" : \"1m\" , \"scroll_id\" : \"DnF1ZXJ5VGhlbkZldGNoBQAAAAAAADp0FkVUUFF3UUUyUmxhV1JTdWtPRkdpd2cAAAAAAAA6dRZFVFBRd1FFMlJsYVdSU3VrT0ZHaXdnAAAAAAAAOnYWRVRQUXdRRTJSbGFXUlN1a09GR2l3ZwAAAAAAADp3FkVUUFF3UUUyUmxhV1JTdWtPRkdpd2cAAAAAAAA6eBZFVFBRd1FFMlJsYVdSU3VrT0ZHaXdn\" }","title":"4\u3001ElasticSearch\u641c\u7d22API"},{"location":"ElasticSearch/4\u3001ElasticSearch\u641c\u7d22API/#search-api","text":"1\u3001search api GET _search GET index1 , index2 / type1 , type2 / _search ? q = value & from = 0 & size = 10 2\u3001GET\u4e2d\u643a\u5e26reques body http\u534f\u8bae\u4e2d\uff0c\u4e00\u822c\u4e0d\u5141\u8bb8GET\u8bf7\u6c42\u5199\u5230request body\uff0c\u4e3a\u4e86\u66f4\u597d\u63cf\u8ff0\u6570\u636e\u67e5\u8be2\u64cd\u4f5c\uff0c\u8fd8\u662f\u53ef\u4ee5\u4f7f\u7528 \u5982\u679c\u9047\u5230\u4e0d\u652f\u6301\u7684\u573a\u666f\uff0c\u53ef\u4ee5\u4f7f\u7528POST","title":"\u4e00\u3001search api\u7684\u57fa\u7840\u8bed\u6cd5\u4ecb\u7ecd"},{"location":"ElasticSearch/4\u3001ElasticSearch\u641c\u7d22API/#query-dsl","text":"1\u3001\u5c0f\u5b9e\u4f8b GET /_search { \"query\":{ \"match_all\": {} } } 2\u3001Query DSL\u57fa\u672c\u8bed\u6cd5 { query_name : { argument : value , argument : value , ... } } { query_name : { field_name : { argument : value , argument : value , } } } \u793a\u4f8b GET /index/type/_search { \"query\": { \"match\":{ \"field\": \"value\" } } } 3\u3001\u7ec4\u5408\u591a\u4e2a\u641c\u7d22\u6761\u4ef6 GET /index/type/_search { \"query\": { \"bool\": { \"must\": {\"match\": {\"name\": \"Tom\"}}, \"should\": [ \"match\": {\"age\": 23}, { \"bool\": { \"must\": {\"match\": {\"address\": \"beijing\"}}, \"must_not\": {\"match\": {\"rude\": true}} } } ], \"minimum_should_match\": 1 } } } \u793a\u4f8b # \u51c6\u5907 3 \u6761\u6570\u636e PUT / website / article / 1 { \"title\" : \"elasticsearch title\" , \"content\" : \"this is a elasticsearch content\" , \"author\" : \"Peng Shiyu\" } PUT / website / article / 2 { \"title\" : \"hadoop title\" , \"content\" : \"this is a hadoop content\" , \"author\" : \"Peng Shiyu\" } PUT / website / article / 3 { \"title\" : \"hbase title\" , \"content\" : \"this is a hbase content\" , \"author\" : \"mouday\" } GET / website / article / _search # \u641c\u7d22\u6761\u4ef6\uff0c author\u5305\u542bpeng \uff0c title\u53ef\u4ee5\u5305\u542belasticsearch GET / website / article / _search { \"query\" : { \"bool\" : { \"must\" : { \"match\" : { \"author\" : \"peng\" } } , \"should\" : { \"match\" : { \"title\" : \"elasticsearch\" } } } } }","title":"\u4e8c\u3001Query DSL\u641c\u7d22\u8bed\u6cd5"},{"location":"ElasticSearch/4\u3001ElasticSearch\u641c\u7d22API/#filterquery","text":"1\u3001filter\u793a\u4f8b GET /website/article/_search { \"query\": { \"bool\": { \"must\": { \"match\": { \"author\": \"peng\" } }, \"filter\": { \"match\": { \"title\": \"hadoop\" } } } } } 2\u3001filter \u548c query\u6bd4\u5bf9 filter \u4ec5\u4ec5\u6309\u7167\u641c\u7d22\u6761\u4ef6\u8fc7\u6ee4\u51fa\u9700\u8981\u7684\u6570\u636e\uff0c\u4e0d\u8ba1\u7b97\u76f8\u5173\u5ea6 query \u4f1a\u8ba1\u7b97\u6bcf\u4e2adocument\u76f8\u5bf9\u641c\u7d22\u6761\u4ef6\u7684\u76f8\u5173\u5ea6\uff0c\u5e76\u6309\u7167\u76f8\u5173\u5ea6\u6392\u5e8f 3\u3001filter\u548c query\u6027\u80fd filter \u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u81ea\u52a8cache query \u8981\u8ba1\u7b97\u76f8\u5173\u5ea6\u5206\u6570\uff0c\u65e0\u6cd5\u4f7f\u7528cache","title":"\u4e09\u3001filter\u4e0equery\u6df1\u5165\u5bf9\u6bd4\u89e3\u5bc6\uff1a\u76f8\u5173\u5ea6\uff0c\u6027\u80fd"},{"location":"ElasticSearch/4\u3001ElasticSearch\u641c\u7d22API/#query","text":"1\u3001match_all GET /index/type/_search { \"query\": { \"match_all\": {} } } 2\u3001match GET /index/type/_search { \"query\": { \"match\": { \"field\": \"value\" } } } 3\u3001multi match GET /index/type/_search { \"query\": { \"multi_match\": { \"query\": \"text\", \"fields\": [\"title\", \"content\"] } } } 4\u3001range query GET /index/type/_search { \"query\": { \"range\": { \"age\": { \"gte\": 20, \"lt\": 30 } } } } 5\u3001term query \u6574\u4e32\u67e5\u8be2\uff0c\u4e0d\u5206\u8bcd GET /index/type/_search { \"query\": { \"term\": { \"field\": \"value\" } } } 6\u3001terms query GET /index/type/_search { \"query\": { \"terms\": { \"field\": [\"value1\", \"value2\"] } } } 7\u3001exist query \u67e5\u8be2\u5b57\u6bb5\u4e0d\u80fd\u4e3a\u7a7a\uff082.x\u7248\u672c\uff09 GET /index/type/_search { \"query\": { \"exists\": { \"field\": \"value1\" } } }","title":"\u56db\u3001\u5e38\u7528\u7684\u5404\u79cdquery\u641c\u7d22\u8bed\u6cd5"},{"location":"ElasticSearch/4\u3001ElasticSearch\u641c\u7d22API/#_1","text":"bool -query -should -must -must_not -filter \u53ea\u8fc7\u6ee4\uff0c\u4e0d\u6392\u5e8f\u793a\u4f8b \"query\" : { \"constant_score\" : { \"filter\" : { \"range\" : { \"age\" : { \"gte\" : 30 } } } } } \u7ec4\u5408\u5206\u6570\u8ba1\u7b97\uff1a \u5148\u8ba1\u7b97\u6bcf\u4e2adocument\u9488\u5bf9\u4ed6\u7684\u76f8\u5173\u5ea6\u5206\u6570\uff0c\u7136\u540ebool\u7efc\u5408\u6240\u6709\u5206\u6570\uff0c\u5408\u5e76\u4e3a\u4e00\u4e2a\u5206\u6570 filter \u4e0d\u8ba1\u7b97\u5206\u6570","title":"\u4e94\u3001\u591a\u641c\u7d22\u6761\u4ef6\u7ec4\u5408\u67e5\u8be2"},{"location":"ElasticSearch/4\u3001ElasticSearch\u641c\u7d22API/#_2","text":"GET /index/type/_validate/query?explain { \"query\": { \"match\": { \"feild\": \"value\" } } } \u4e00\u822c\u7528\u5728\u7279\u522b\u590d\u6742\u7684\u641c\u7d22\u8bed\u53e5\u68c0\u67e5\uff0c\u9a8c\u8bc1\u641c\u7d22\u8bed\u53e5\u662f\u5426\u5408\u6cd5","title":"\u516d\u3001\u5b9a\u4f4d\u4e0d\u5408\u6cd5\u7684\u641c\u7d22\u4ee5\u53ca\u5176\u539f\u56e0"},{"location":"ElasticSearch/4\u3001ElasticSearch\u641c\u7d22API/#_3","text":"\u5b9a\u5236\u6392\u5e8f\u89c4\u5219 PUT /alibaba/taobao/1 { \"name\": \"dog\", \"price\": 20 } PUT /alibaba/taobao/2 { \"name\": \"cat\", \"price\": 25 } PUT /alibaba/taobao/3 { \"name\": \"pig\", \"price\": 23 } # \u6309\u7167\u4ef7\u683c\u5927\u5230\u5c0f\u6392\u5e8f GET /alibaba/taobao/_search { \"sort\": { \"price\": { \"order\": \"desc\" } } }","title":"\u4e03\u3001\u5b9a\u5236\u641c\u7d22\u7ed3\u679c\u7684\u6392\u5e8f\u89c4\u5219"},{"location":"ElasticSearch/4\u3001ElasticSearch\u641c\u7d22API/#field","text":"\u5982\u679c\u5bf9\u4e00\u4e2astring field\u8fdb\u884c\u6392\u5e8f\uff0c\u7ed3\u679c\u5f80\u5f80\u4e0d\u51c6\u786e\uff0c \u56e0\u4e3a\u5206\u8bcd\u540e\u662f\u591a\u4e2a\u5355\u8bcd\uff0c\u518d\u6392\u5e8f\u5c31\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c\u4e86 \u901a\u5e38\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff1a \u5c06\u4e00\u4e2astring field\u5efa\u7acb\u4e24\u6b21\u7d22\u5f15\uff0c\u4e00\u4e2a\u5206\u8bcd\uff0c\u7528\u4e8e\u641c\u7d22\uff1b\u4e00\u4e2a\u4e0d\u5206\u8bcd\uff0c\u7528\u6765\u6392\u5e8f PUT /website { \"mappings\": { \"article\": { \"properties\": { \"title\": { \"type\": \"text\", \"fields\": { \"raw\": { \"type\": \"string\", \"index\": \"not_analyzed\" } }, \"fielddata\": true }, \"content\": { \"type\": \"text\" }, \"post_date\": { \"type\": \"date\" }, \"author_id\": { \"type\": \"long\" } } } } } # \u67e5\u770bmapping GET /website/_mapping/article { \"website\": { \"mappings\": { \"article\": { \"properties\": { \"author_id\": { \"type\": \"long\" }, \"content\": { \"type\": \"text\" }, \"post_date\": { \"type\": \"date\" }, \"title\": { \"type\": \"text\", \"fields\": { \"raw\": { \"type\": \"keyword\" } }, \"fielddata\": true } } } } } } \u586b\u5145\u6570\u636e PUT /website/article/1 { \"title\": \"title 1\", \"content\": \"content 1\", \"post_date\": \"2019-04-30\", \"author_id\": 1001 } PUT /website/article/2 { \"title\": \"title 2\", \"content\": \"content 2\", \"post_date\": \"2019-05-30\", \"author_id\": 1002 } PUT /website/article/3 { \"title\": \"title 3\", \"content\": \"content 3\", \"post_date\": \"2019-04-28\", \"author_id\": 1001 } \u5206\u8bcd\u540e\u7684\u6392\u5e8f\u7ed3\u679c GET /website/article/_search { \"sort\": [ { \"title\": { \"order\": \"desc\" } } ] } { \"took\": 26, \"timed_out\": false, \"_shards\": { \"total\": 5, \"successful\": 5, \"failed\": 0 }, \"hits\": { \"total\": 3, \"max_score\": null, \"hits\": [ { \"_index\": \"website\", \"_type\": \"article\", \"_id\": \"2\", \"_score\": null, \"_source\": { \"title\": \"title 2\", \"content\": \"content 2\", \"post_date\": \"2019-05-30\", \"author_id\": 1002 }, \"sort\": [ \"title\" ] }, { \"_index\": \"website\", \"_type\": \"article\", \"_id\": \"1\", \"_score\": null, \"_source\": { \"title\": \"title 1\", \"content\": \"content 1\", \"post_date\": \"2019-04-30\", \"author_id\": 1001 }, \"sort\": [ \"title\" ] }, { \"_index\": \"website\", \"_type\": \"article\", \"_id\": \"3\", \"_score\": null, \"_source\": { \"title\": \"title 3\", \"content\": \"content 3\", \"post_date\": \"2019-04-28\", \"author_id\": 1001 }, \"sort\": [ \"title\" ] } ] } } \u4f7f\u7528\u6392\u5e8f\u5c5e\u6027\u6392\u5e8f\u7ed3\u679c GET /website/article/_search { \"sort\": [ { \"title.raw\": { \"order\": \"desc\" } } ] } { \"took\": 3, \"timed_out\": false, \"_shards\": { \"total\": 5, \"successful\": 5, \"failed\": 0 }, \"hits\": { \"total\": 3, \"max_score\": null, \"hits\": [ { \"_index\": \"website\", \"_type\": \"article\", \"_id\": \"3\", \"_score\": null, \"_source\": { \"title\": \"title 3\", \"content\": \"content 3\", \"post_date\": \"2019-04-28\", \"author_id\": 1001 }, \"sort\": [ \"title 3\" ] }, { \"_index\": \"website\", \"_type\": \"article\", \"_id\": \"2\", \"_score\": null, \"_source\": { \"title\": \"title 2\", \"content\": \"content 2\", \"post_date\": \"2019-05-30\", \"author_id\": 1002 }, \"sort\": [ \"title 2\" ] }, { \"_index\": \"website\", \"_type\": \"article\", \"_id\": \"1\", \"_score\": null, \"_source\": { \"title\": \"title 1\", \"content\": \"content 1\", \"post_date\": \"2019-04-30\", \"author_id\": 1001 }, \"sort\": [ \"title 1\" ] } ] } }","title":"\u516b\u3001\u5c06\u4e00\u4e2afield\u7d22\u5f15\u4e24\u6b21\u6765\u89e3\u51b3\u5b57\u7b26\u4e32\u6392\u5e8f\u95ee\u9898"},{"location":"ElasticSearch/4\u3001ElasticSearch\u641c\u7d22API/#tfidf","text":"1\u3001relevance score\u7b97\u6cd5 \u8ba1\u7b97\u7d22\u5f15\u6587\u672c\u4e0e\u641c\u7d22\u6587\u672c\u7684\u5173\u8054\u5339\u914d\u5ea6 ElasticSearch\u4f7f\u7528TF/IDF\u7b97\u6cd5 term frequency/ inverse document frequency\u7b97\u6cd5 TF: \u641c\u7d22\u6587\u672c\u4e2d\u7684\u5404\u4e2a\u8bcd\u6761\u5728field\u6587\u672c\u4e2d\u51fa\u73b0\u6b21\u6570\uff0c\u51fa\u73b0\u6b21\u6570\u8d8a\u591a\uff0c\u5c31\u8d8a\u76f8\u5173 IDF: \u641c\u7d22\u6587\u672c\u4e2d\u5404\u4e2a\u8bcd\u6761\u5728\u6574\u4e2a\u7d22\u5f15\u7684\u6240\u6709\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u51fa\u73b0\u6b21\u6570\u8d8a\u591a\uff0c\u5c31\u8d8a\u4e0d\u76f8\u5173 field length norm : field\u957f\u5ea6\u8d8a\u957f\uff0c\u76f8\u5173\u5ea6\u8d8a\u5f31 \u4e3e\u4f8b\uff1a doc1: hello, you and world is very good doc2: hello, how are you 2\u3001score\u8ba1\u7b97 GET /website/article/_search?explain { \"query\": { \"match\": { \"title\": \"title\" } } } 3\u3001\u5206\u6790\u4e00\u4e2adocument\u662f\u5982\u4f55\u88ab\u5339\u914d\u4e0a\u7684 GET /website/article/1/_explain { \"query\": { \"match\": { \"title\": \"title\" } } }","title":"\u4e5d\u3001\u76f8\u5173\u5ea6\u8bc4\u5206TF&amp;IDF\u7b97\u6cd5\u72ec"},{"location":"ElasticSearch/4\u3001ElasticSearch\u641c\u7d22API/#doc-value","text":"\u641c\u7d22\u7684\u65f6\u5019\uff0c\u4e3b\u8981\u4f9d\u9760\u5012\u6392\u7d22\u5f15\uff1b \u6392\u5e8f\u7684\u65f6\u5019\uff0c\u9700\u8981\u4f9d\u9760\u6b63\u6392\u7d22\u5f15\uff0c\u770b\u5230\u6bcf\u4e2adocument\u7684\u6bcf\u4e2afield \u7136\u540e\u8fdb\u884c\u6392\u5e8f\uff0c\u6240\u8c13\u7684\u6b63\u6392\u7d22\u5f15\uff0c\u5176\u5b9e\u5c31\u662fdoc values \u5728\u5efa\u7acb\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u4e00\u65b9\u9762\u4f1a\u5efa\u7acb\u5012\u6392\u7d22\u5f15\uff0c\u4ee5\u4f9b\u641c\u7d22\u4f7f\u7528 \u4e00\u65b9\u9762\u4f1a\u5efa\u7acb\u6b63\u6392\u7d22\u5f15\uff0c\u4e5f\u5c31\u662fdoc values\uff0c\u4ee5\u4f9b\u6392\u5e8f\u3001\u805a\u5408\u3001\u8fc7\u6ee4\u7b49\u64cd\u4f5c\u4f7f\u7528 doc values\u662f\u88ab\u4fdd\u5b58\u5728\u78c1\u76d8\u4e0a\u7684\uff0c\u6b64\u65f6\uff0c\u5982\u679c\u5185\u5b58\u8db3\u591f\uff0cos\u4f1a\u81ea\u52a8\u5c06\u5176\u7f13\u5b58\u5230\u5185\u5b58\u4e2d\uff0c\u6027\u80fd\u8fd8\u662f\u4f1a\u5f88\u9ad8 \u5982\u679c\u5185\u5b58\u4e0d\u8db3\u591f\uff0cos\u4f1a\u5c06\u5176\u5199\u5165\u78c1\u76d8\u4e0a","title":"\u5341\u3001\u5185\u6838\u7ea7\u77e5\u8bc6\u70b9\u4e4bdoc value"},{"location":"ElasticSearch/4\u3001ElasticSearch\u641c\u7d22API/#query-phase","text":"1\u3001query phase \uff081\uff09\u641c\u7d22\u8bf7\u6c42\u53d1\u9001\u5230\u67d0\u4e00\u4e2acoordinate node\uff0c\u6784\u5efa\u4e00\u4e2apriority queue\uff0c\u957f\u5ea6\u4ee5paging\u64cd\u4f5cfrom\u548csize\u4e3a\u51c6\uff0c\u9ed8\u8ba4\u4e3a0 \uff082\uff09coordinate node\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230\u6240\u6709\u7684shard\uff0c\u6bcf\u4e2ashard\u672c\u5730\u641c\u7d22\uff0c\u5e76\u6784\u5efa\u4e00\u4e2a\u672c\u5730\u7684priority queue \uff083\uff09\u5404\u4e2ashard\u5c06\u81ea\u5df1\u7684priority queue\uff08doc id\uff09\u8fd4\u56de\u7ed9coordinate node\uff0c\u5e76\u6784\u5efa\u4e00\u4e2a\u5168\u5c40\u7684priority queue 2\u3001replica shard\u63d0\u5347\u641c\u7d22\u541e\u5410\u91cf \u4e00\u6b21\u8bf7\u6c42\u8981\u6253\u5230\u6240\u6709\u7684shard\u7684\u4e00\u4e2areplica/primary\u4e0a\uff0c\u5982\u679c\u6bcf\u4e2ashard\u90fd\u6709\u591a\u4e2areplica\uff0c \u90a3\u4e48\u540c\u65f6\u5e76\u53d1\u8fc7\u6765\u7684\u641c\u7d22\u8bf7\u6c42\u53ef\u4ee5\u540c\u65f6\u6253\u5230\u5176\u4ed6\u7684replica\u4e0a\u53bb","title":"\u5341\u4e00\u3001\u5185\u6838\u89e3\u5bc6\u4e4bquery phase"},{"location":"ElasticSearch/4\u3001ElasticSearch\u641c\u7d22API/#fetch-phase","text":"1\u3001\u5de5\u4f5c\u6d41\u7a0b \uff081\uff09coordinate node\u6784\u5efa\u5b8cpriority queue\u4e4b\u540e\uff0c\u5c31\u53d1\u9001mget\u8bf7\u6c42\u53bb\u6240\u6709\u7684shard\u4e0a\u83b7\u53d6\u5bf9\u5e94\u7684document \uff082\uff09\u5404\u4e2ashard\u5c06document\u8fd4\u56de\u7ed9coordinate node \uff083\uff09coodinate node\u5c06\u5408\u5e76\u540e\u7684document\u7ed3\u679c\u8fd4\u56de\u7ed9client\u5ba2\u6237\u7aef 2\u3001\u5982\u679c\u4e0d\u52a0from \u548csize\uff0c\u9ed8\u8ba4from=0 size=10, \u6309\u7167socre\u6392\u5e8f","title":"\u5341\u4e8c\u3001\u5185\u6838\u89e3\u5bc6\u4e4bfetch phase"},{"location":"ElasticSearch/4\u3001ElasticSearch\u641c\u7d22API/#_4","text":"1\u3001preference \u51b3\u5b9a\u4e86\u54ea\u4e9bshard\u4f1a\u88ab\u7528\u6765\u6267\u884c\u641c\u7d22\u64cd\u4f5c _primary , _primary_first , _local , _only_node : xyz , _prefer_node : xyz , _shard : 2 , 3 2\u3001bouncing results\u95ee\u9898 \u4e24\u4e2adocument \u6392\u5e8f\uff0cfield\u503c\u76f8\u540c\uff0c\u4e0d\u540c\u7684shard\u5546\uff0c\u53ef\u80fd\u6392\u5e8f\u4e0d\u540c; \u6bcf\u6b21\u8bf7\u6c42\u8f6e\u8be2\u6253\u5230\u4e0d\u540c\u7684shard\u4e0a\uff0c\u6bcf\u6b21\u9875\u9762\u4e0a\u770b\u5230\u7684\u641c\u7d22\u7ed3\u679c\u7684\u6392\u5e8f\u90fd\u4e0d\u4e00\u6837 \u8fd9\u5c31\u662fbouncing result\uff0c\u4e5f\u5c31\u662f\u8df3\u8dc3\u7684\u7ed3\u679c \u89e3\u51b3\u65b9\u6848 \u5c06preference\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u968f\u673a\u7684\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982\u8bf4user_id\uff0c \u8ba9\u6bcf\u4e2auser\u6bcf\u6b21\u641c\u7d22\u7684\u65f6\u5019\u90fd\u662f\u7528\u540c\u4e00\u4e2ashard\u4e0a\u6267\u884c\uff0c\u5c31\u4e0d\u4f1a\u770b\u5230bouncing result timeout \u5c06\u67e5\u5230\u7684\u6570\u636e\u76f4\u63a5\u8fd4\u56de\uff0c\u907f\u514d\u67e5\u8be2\u8017\u65f6\u8fc7\u957f routing document\u6587\u6863\u8def\u7531\uff0crouting=user_id, \u8fd9\u5c31\u53ef\u4ee5\u8ba9\u540c\u4e00\u4e2auser\u5bf9\u5e94\u7684\u6570\u636e\u5230\u4e00\u4e2ashard\u4e0a\u53bb search_type dfs_query_then_fetch \u53ef\u4ee5\u63d0\u5347revelance sort\u7cbe\u51c6\u5ea6","title":"\u5341\u4e09\u3001\u641c\u7d22\u76f8\u5173\u53c2\u6570\u68b3\u7406"},{"location":"ElasticSearch/4\u3001ElasticSearch\u641c\u7d22API/#scroll","text":"\u4f7f\u7528scroll\u6eda\u52a8\u641c\u7d22 \u5148\u641c\u7d22\u4e00\u6279\u6570\u636e\uff0c\u7136\u540e\u4e0b\u6b21\u5728\u641c\u7d22\u4e00\u6279\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u77e5\u9053\u641c\u7d22\u51fa\u5168\u90e8\u7684\u6570\u636e\u6765 scroll\u641c\u7d22\u4f1a\u5728\u7b2c\u4e00\u6b21\u641c\u7d22\u7684\u65f6\u5019\uff0c\u4fdd\u5b58\u4e00\u4e2a\u5f53\u524d\u7684\u89c6\u56fe\u5feb\u7167\uff0c\u4e4b\u540e\u4f1a\u57fa\u4e8e\u8be5\u5c31\u7684\u89c6\u56fe\u5feb\u7167\u63d0\u4f9b\u6570\u636e\u641c\u7d22\uff0c\u5982\u679c\u8fd9\u4e2a\u671f\u95f4\u6570\u636e\u53d8\u66f4\uff0c\u662f\u4e0d\u4f1a\u8ba9\u7528\u6237\u770b\u5230\u7684 \u91c7\u7528\u57fa\u4e8e_doc \u8fdb\u884c\u6392\u5e8f\u7684\u65b9\u5f0f\uff0c\u6027\u80fd\u8f83\u9ad8\u54e6 \u6bcf\u6b21\u53d1\u9001scroll\u8bf7\u6c42\uff0c\u8fd8\u9700\u8981\u6307\u5b9a\u4e00\u4e2ascroll\u53c2\u6570\uff0c\u6307\u5b9a\u4e00\u4e2a\u65f6\u95f4\u7a97\u53e3\uff0c\u6bcf\u6b21\u641c\u7d22\u8bf7\u6c42\u53ea\u8981\u5728\u8fd9\u4e2a\u65f6\u95f4\u7a97\u53e3\u5185\u5b8c\u6210\u5c31\u53ef\u4ee5 size \u4f1a\u53d1\u9001\u7ed9\u6bcf\u4e2ashard\uff0c \u56e0\u6b64\u6bcf\u6b21\u6700\u591a\u4f1a\u8fd4\u56desize * primary shard\u6761\u6570\u636e scroll \u770b\u8d77\u6765\u633a\u50cf\u5206\u9875\u7684\uff0c\u4f46\u662f\u5176\u5b9e\u4f7f\u7528\u573a\u666f\u4e0d\u4e00\u6837\uff0c\u5206\u9875\u4e3b\u8981\u662f\u7528\u6765\u4e00\u9875\u4e00\u9875\u641c\u7d22\uff0c\u7ed9\u7528\u6237\u7684\uff0c scroll\u4e3b\u8981\u662f\u7528\u6765\u4e00\u6279\u4e00\u6279\u68c0\u7d22\u6570\u636e\uff0c\u8ba9\u7cfb\u7edf\u8fdb\u884c\u5904\u7406\u7684 # \u7b2c\u4e00\u6b21\u8bf7\u6c42 GET / website / article / _search ? scroll = 1 m { \"query\" : { \"match_all\" : {} } , \"sort\" : [ \"_doc\" ], \"size\" : 2 } # \u7b2c\u4e8c\u6b21\u8bf7\u6c42 GET / _search / scroll { \"scroll\" : \"1m\" , \"scroll_id\" : \"DnF1ZXJ5VGhlbkZldGNoBQAAAAAAADp0FkVUUFF3UUUyUmxhV1JTdWtPRkdpd2cAAAAAAAA6dRZFVFBRd1FFMlJsYVdSU3VrT0ZHaXdnAAAAAAAAOnYWRVRQUXdRRTJSbGFXUlN1a09GR2l3ZwAAAAAAADp3FkVUUFF3UUUyUmxhV1JTdWtPRkdpd2cAAAAAAAA6eBZFVFBRd1FFMlJsYVdSU3VrT0ZHaXdn\" }","title":"\u5341\u56db\u3001\u57fa\u4e8escroll\u6280\u672f\u6eda\u52a8\u641c\u7d22\u5927\u91cf\u6570\u636e"},{"location":"ElasticSearch/5\u3001ElasticSearch\u7d22\u5f15\u7ba1\u7406/","text":"\u4e00\u3001\u521b\u5efa\u3001\u4fee\u6539\u4ee5\u53ca\u5220\u9664\u7d22\u5f15 1\u3001\u521b\u5efa\u7d22\u5f15 PUT /alibaba { \"settings\": { \"number_of_replicas\": 0, \"number_of_shards\": 1 }, \"mappings\": { \"tianmao\": { \"properties\": { \"name\": { \"type\": \"text\" } } } } } 2\u3001\u4fee\u6539\u7d22\u5f15 PUT /alibaba/_settings { \"number_of_replicas\": 1 } 3\u3001\u5220\u9664\u7d22\u5f15 DELETE /index DELETE /index1,index2 DELETE /index* DELETE /_all \u7981\u7528all\u53c2\u6570\uff0c\u907f\u514d\u5220\u9664\u6240\u6709\u7d22\u5f15 elasticsearch.yml action.destructive_requires_name: true \u4e8c\u3001\u4fee\u6539\u5206\u8bcd\u5668\u4ee5\u53ca\u5b9a\u5236\u81ea\u5df1\u7684\u5206\u8bcd\u5668 1\u3001\u9ed8\u8ba4\u7684\u5206\u8bcd\u5668 standard standard tokenizer \u4ee5\u5355\u8bcd\u8fb9\u754c\u8fdb\u884c\u5207\u5206 shandard token filter \u4ec0\u4e48\u90fd\u4e0d\u505a lowercase token filter \u5c06\u6240\u6709\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5c0f\u5199 stop token filter \uff08\u9ed8\u8ba4\u88ab\u7981\u7528\uff09\u79fb\u9664\u505c\u7528\u8bcd\uff0c\u6bd4\u5982 a\uff0c the it\u7b49\u7b49 2\u3001\u4fee\u6539\u5206\u8bcd\u5668\u8bbe\u7f6e PUT /index { \"settings\": { \"analysis\": { \"analyzer\": { \"es_std\": { \"type\": \"standard\", \"stopwords\": \"_english_\" } } } } } 3\u3001\u5206\u8bcd\u6d4b\u8bd5 GET /index/_analyze { \"analyzer\": \"es_std\", \"text\": \"nihao es\" } 4\u3001\u81ea\u5b9a\u4e49\u5206\u8bcd\u5668 PUT /index { \"settings\": { \"analysis\": { \"char_filter\": { \"&_to_and\": { \"type\": \"mapping\", \"mappings\": [\"&=>and\"] } }, \"filter\": { \"my_stopwords\": { \"type\": \"stop\", \"stopwords\": [\"the\", \"a\"] } }, \"analyzer\": { \"my_analyzer\": { \"type\": \"custome\", \"char_filter\": [\"html_strip\", \"&_to_and\"], \"tokenizer\": \"standard\", \"filter\": [\"lowercase\", \"my_stopwords\"] } } } } } \u5206\u8bcd\u5668\u6d4b\u8bd5 GET /alibaba/_analyze { \"analyzer\": \"my_analyzer\", \"text\": \"nihao es & haha shit <a>\" } { \"tokens\": [ { \"token\": \"nihao\", \"start_offset\": 0, \"end_offset\": 5, \"type\": \"<ALPHANUM>\", \"position\": 0 }, { \"token\": \"es\", \"start_offset\": 6, \"end_offset\": 8, \"type\": \"<ALPHANUM>\", \"position\": 1 }, { \"token\": \"and\", \"start_offset\": 9, \"end_offset\": 10, \"type\": \"<ALPHANUM>\", \"position\": 2 }, { \"token\": \"haha\", \"start_offset\": 11, \"end_offset\": 15, \"type\": \"<ALPHANUM>\", \"position\": 3 }, { \"token\": \"shit\", \"start_offset\": 16, \"end_offset\": 20, \"type\": \"<ALPHANUM>\", \"position\": 4 } ] } \u4f7f\u7528\u81ea\u5b9a\u4e49\u5206\u8bcd\u5668 PUT /alibaba/_mapping/fruit { \"properties\": { \"name\": { \"type\": \"text\", \"analyzer\": \"my_analyzer\" } } } \u4e09\u3001type\u5e95\u5c42\u6570\u636e\u7ed3\u6784 type \u662f\u4e00index\u4e2d\u7528\u6765\u533a\u5206\u7c7b\u4f3c\u7684\u6570\u636e\u7684\uff0c\u5f53\u53ef\u80fd\u6709\u4e0d\u540c\u7684fields\uff0c \u800c\u4e14\u6709\u4e0d\u540c\u7684\u5c5e\u6027\u6765\u63a7\u5236\u7d22\u5f15\u5efa\u7acb\uff0c\u5206\u8bcd\u5668field\u7684value\uff0c \u5728\u5e95\u5c42\u7684lucene\u4e2d\u5efa\u7acb\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u5168\u90e8\u662fopaque bytes\u7c7b\u578b\uff0c\u4e0d\u533a\u5206\u7c7b\u578b\u7684 lucene\u662f\u6ca1\u6709type\u7684\u6982\u5ff5\u7684\uff0c\u5728document\u4e2d\uff0c\u5b9e\u9645\u4e0a\u5c06type\u4f5c\u4e3a\u4e00\u4e2adocument\u7684field\u6765\u5b58\u50a8\uff0c\u5373type es\u901a\u8fc7_type\u6765\u8fdb\u884ctype\u7684\u8fc7\u6ee4\u548c\u7b5b\u9009\uff0c\u4e00\u4e2aindex\u7684\u591a\u4e2atype\uff0c\u5b9e\u9645\u4e0a\u662f\u653e\u5728\u4e00\u8d77\u5b58\u50a8\u7684\uff0c \u56e0\u6b64\u4e00\u4e2aindex\u4e0b\uff0c\u4e0d\u80fd\u6709\u591a\u4e2atype\u91cd\u540d\uff0c\u800c\u4e14\u7c7b\u578b\u6216\u8005\u5176\u4ed6\u8bbe\u7f6e\u4e0d\u540c\u7684\uff0c\u56e0\u4e3a\u90a3\u6837\u662f\u65e0\u6cd5\u5904\u7406\u7684 \u5b58\u50a8\u7ed3\u6784 { \"_type\" : \"animal\" , \"name\" : \"dog\" } { \"_type\" : \"fruit\" , \"name\" : \"apple\" } \u6700\u4f73\u5b9e\u8df5 \u5c06\u7c7b\u4f3c\u7ed3\u6784\u7684type\u653e\u5728\u4e00\u4e2aindex\u4e0b\uff0c\u8fd9\u4e9btype\u5e94\u8be5\u6709\u591a\u4e2afield\u662f\u76f8\u540c\u7684 \u5047\u5982\u8bf4\uff0c\u4f60\u8bb2\u4e24\u4e2atype\u7684field\u5b8c\u5168\u4e0d\u540c\uff0c\u653e\u5728\u4e00\u4e2aindex\u4e0b\uff0c \u90a3\u4e48\u5c31\u6bcf\u6761\u6570\u636e\u90fd\u81f3\u5c11\u6709\u4e00\u534afield\u5728\u5e95\u5c42\u7684lucene\u4e2d\u662f\u7a7a\u503c\uff0c\u4f1a\u6709\u4e25\u91cd\u7684\u6027\u80fd\u95ee\u9898 \u56db\u3001mapping root object\u6df1\u5165\u5256\u6790 1\u3001root object \u5c31\u662f\u67d0\u4e2atype\u5bf9\u5e94\u7684mapping json\uff0c\u5305\u62ec\u4e86 properties(type\u7c7b\u578b, index\u8bbe\u7f6e\u662f\u5426\u5206\u8bcd, analyzer\u5206\u8bcd\u5668)\uff0c metadata\uff08 _id, _source, _type \uff09 settings\uff08analyzer\uff09 \u5176\u4ed6settings\uff08\u6bd4\u5982include_in_all\uff09 2\u3001properties PUT /alibaba/_mapping/fruit { \"properties\": { \"age\": { \"type\": \"long\" } } } 3\u3001source \uff081\uff09\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u76f4\u63a5\u62ff\u5230\u5b8c\u6574\u7684document\uff0c\u4e0d\u9700\u8981\u5148\u62ffdocument id\uff0c\u518d\u53d1\u9001\u4e00\u6b21\u8bf7\u6c42\u62ffdocument \uff082\uff09partial update\u57fa\u4e8e_source \u5b9e\u73b0 \uff083\uff09reindex \u65f6\uff0c\u76f4\u63a5\u57fa\u4e8e_source \u5b9e\u73b0\uff0c\u4e0d\u9700\u8981\u67e5\u8be2\u6570\u636e\u518d\u4fee\u6539 \uff084\uff09\u53ef\u4ee5\u57fa\u4e8e_source \u5b9a\u5236\u8fd4\u56defield \uff085\uff09debug query\u66f4\u5bb9\u6613\uff0c\u53ef\u4ee5\u76f4\u63a5\u770b\u5230_source \u7981\u7528source PUT /alibaba/_mapping/fruit2 { \"_source\": { \"enabled\": false } } 4\u3001all \u5c06\u6240\u6709\u7684field\u6253\u5305\u5728\u4e00\u8d77\uff0c\u4f5c\u4e3a\u4e00\u4e2a_all field\uff0c\u5efa\u7acb\u7d22\u5f15 \u6ca1\u6709\u6307\u5b9a\u4efb\u4f55field\u8fdb\u884c\u641c\u7d22\u65f6\uff0c\u5c31\u662f\u4f7f\u7528_all field\u5728\u641c\u7d22 PUT /alibaba/_mapping/fruit3 { \"_all\": { \"enabled\": false } } \u4e5f\u53ef\u4ee5\u5728field\u7ea7\u522b\u8bbe\u7f6einclude_in_all field ,\u8bbe\u7f6e\u662f\u5426\u5c06field\u7684\u503c\u5305\u542b\u5728_all field\u4e2d PUT /alibaba/_mapping/fruit { \"properties\": { \"title\": { \"type\": \"text\", \"include_in_all\": false } } } 5\u3001\u6807\u793a\u6027metadata _index _type _id \u4e94\u3001\u5b9a\u5236\u5316\u81ea\u5df1\u7684dynamic mapping\u7b56\u7565 1\u3001\u5b9a\u5236dynalic \u7b56\u7565 true \u9047\u5230\u964c\u751f\u5b57\u6bb5\uff0c\u5c31\u8fdb\u884cdynamic mapping flase \u9047\u5230\u964c\u751f\u5b57\u6bb5\uff0c\u5c31\u5ffd\u7565 strict \u9047\u5230\u964c\u751f\u5b57\u6bb5\uff0c\u5c31\u62a5\u9519 PUT /alibaba { \"mappings\": { \"taobao\": { \"dynamic\": \"strict\", \"properties\": { \"title\": { \"type\": \"text\" }, \"address\": { \"type\": \"text\" } } } } } PUT /alibaba/baotao/1 { \"title\": \"dog\", \"address\": \"beijing\" } PUT /alibaba/baotao/2 { \"title\": \"dog\", \"address\": \"beijing\", \"price\": 26 } GET /alibaba/_mapping/taobao 2\u3001\u5b9a\u5236dynamic mapping\u7b56\u7565 \uff081\uff09date_detection \u9ed8\u8ba4\u4f1a\u6309\u7167\u4e00\u5b9a\u683c\u5f0f\u8bc6\u522bdate\uff0c\u6bd4\u5982yyyy-MM-dd, \u5982\u679c\u67d0\u4e2afield\u5148\u8fc7\u6765\u4e00\u4e2a2019-05-02\uff0c\u5c31\u4f1a\u88ab\u81ea\u52a8dynamic mapping\u6210date \u540e\u9762\u5982\u679c\u518d\u8fc7\u6765\u4e00\u4e2a\u201chello world\u201d\u5c31\u88ab\u62a5\u9519 \u53ef\u4ee5\u624b\u52a8\u5173\u95ed\u67d0\u4e2atype\u7684date_detection \u5982\u679c\u9700\u8981\uff0c\u81ea\u5df1\u624b\u52a8\u6267\u884c\u67d0\u4e2afield\u4e3adate\u7c7b\u578b PUT /my_index/_mapping/my_type { \"date_detecion\": false } (2)\u5b9a\u5236\u81ea\u5df1\u7684dynamic mapping template(type level) PUT /my_index { \"mappings\": { \"my_type\": { \"dynamic_templates\": [{ \"en\": { \"match\": \"*_en\", \"match_mapping_type\": \"string\", \"mapping\": { \"type\": \"string\", \"analyzer\": \"english\" } } }] } } } \u5206\u8bcd\u6548\u679c\u6d4b\u8bd5 # \u6807\u51c6\u5206\u8bcd\u5668\uff08 this is a good man \uff09 GET / my_index / _analyze { \"analyzer\" : \"standard\" , \"text\" : \"this is a good man\" } # english\u5206\u8bcd\u5668 \uff08 good man \uff09 GET / my_index / _analyze { \"analyzer\" : \"english\" , \"text\" : \"this is a good man\" } \u68c0\u6d4b\u52a8\u6001\u5206\u8bcd\u6a21\u677f\u6548\u679c # \u6dfb\u52a0\u6570\u636e PUT / my_index / my_type / 1 { \"name\" : \"this is a good man\" , \"name_en\" : \"this is a good man\" } # \u4f7f\u7528 english\u5206\u8bcd\u5668\u5b57\u6bb5\u641c\u7d22 \uff08\u5931\u8d25\uff09 GET / my_index / my_type / _search { \"query\" : { \"match\" : { \"name_en\" : \"is\" } } } # \u4f7f\u7528 standard \u5206\u8bcd\u5668\u5b57\u6bb5\u641c\u7d22\uff08\u6210\u529f\uff09 GET / my_index / my_type / _search { \"query\" : { \"match\" : { \"name\" : \"is\" } } } \u9ed8\u8ba4standard \u5206\u8bcd\u5668\u4e0d\u4f1a\u8fc7\u6ee4\u505c\u7528\u8bcd\uff0cis\u7b49\u8bcd\u4e0d\u8fdb\u884c\u7d22\u5f15 english\u5206\u8bcd\u5668\u4f1a\u8fc7\u6ee4\u505c\u7528\u8bcd (3)\u5b9a\u5236\u81ea\u5df1\u7684dynamic mapping template(index level) PUT /my_index { \"mappings\": { \"_default\": { \"_all\": { \"enabled\": false } }, \"blog\": { \"_all\": { \"enabled\": false } } } } \u516d\u3001\u57fa\u4e8escoll+bulk+\u7d22\u5f15\u522b\u540d\u5b9e\u73b0\u96f6\u505c\u673a\u91cd\u5efa\u7d22\u5f15 1\u3001\u91cd\u5efa\u7d22\u5f15 \u4e00\u4e2afield\u7684\u8bbe\u7f6e\u662f\u4e0d\u80fd\u88ab\u4fee\u6539\u7684\uff0c \u5982\u679c\u8981\u4fee\u6539\u4e00\u4e2afield\uff0c\u90a3\u4e48\u5e94\u8be5\u91cd\u65b0\u6309\u7167\u65b0\u7684mapping\uff0c\u5efa\u7acb\u4e00\u4e2aindex \u7136\u540e\uff0c\u5c06\u6570\u636e\u6279\u91cf\u67e5\u8be2\u51fa\u6765\uff0c\u91cd\u65b0\u7528bulk api\u5199\u5165index\u4e2d\uff0c \u6279\u91cf\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u5efa\u8bae\u624d\u6709scroll api\uff0c\u5e76\u91c7\u7528\u591a\u7ebf\u7a0b\u5e76\u53d1\u7684\u65b9\u5f0f\u6765reindex\u6570\u636e\uff0c \u6bcf\u6b21scroll\u5c31\u67e5\u8be2\u6307\u5b9a\u65e5\u671f\u7684\u4e00\u6bb5\u6570\u636e\uff0c\u4ea4\u7ed9\u4e00\u4e2a\u7ebf\u7a0b\u5373\u53ef \uff081\uff09dymanic mapping\u5c06\u5b57\u7b26\u4e32\u8bc6\u522b\u4e3a\u4e86\u65e5\u671f\u7c7b\u578b PUT /my_index/my_type/1 { \"title\": \"2019-05-03\" } \uff082\uff09\u5f53\u540e\u671f\u5411\u7d22\u5f15\u4e2d\u952e\u5165string\u7c7b\u578b\u7684\u6570\u636e\u5c31\u62a5\u9519 # \u63d2\u5165\u6570\u636e\u62a5\u9519 PUT / my_index / my_type / 2 { \"title\" : \"this is a title\" } # \u67e5\u770b\u7d22\u5f15 mapping \uff0c \u53d1\u73b0 title\u662fdate\u7c7b\u578b GET / my_index / _mapping / my_type { \"my_index\" : { \"mappings\" : { \"my_type\" : { \"properties\" : { \"title\" : { \"type\" : \"date\" } } } } } } \uff083\uff09\u6b64\u65f6\u4e0d\u80fd\u4fee\u6539title\u7c7b\u578b # \u76f4\u63a5\u4fee\u6539\u5df2\u5b58\u5728\u7d22\u5f15\u5b57\u6bb5\u4f1a\u62a5\u9519 PUT / my_index / _mapping / my_type { \"properties\" : { \"title\" : { \"type\" : \"text\" } } } \uff084\uff09\u552f\u4e00\u7684\u529e\u6cd5\u5c31\u662freindex\uff0c\u91cd\u5efa\u7d22\u5f15\uff0c\u5c06\u65e7\u7684\u7d22\u5f15\u6570\u636e\u67e5\u8be2\u51fa\u6765\uff0c\u518d\u5bfc\u5165\u65b0\u7d22\u5f15 \uff085\uff09\u5982\u679c\u65e7\u7684\u7d22\u5f15\u5df2\u7ecf\u5728\u4f7f\u7528\uff0c\u4fee\u6539\u4e3a\u65b0\u7684\u7d22\u5f15\u540d\u79f0\u4e4b\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u4e0d\u77e5\u9053 \u5982\u679c\u8981java\u7a0b\u5e8f\u8fdb\u884c\u4fee\u6539\uff0c\u90a3\u4e48\u9700\u8981\u505c\u673a\u91cd\u542f\uff0c\u964d\u4f4e\u53ef\u7528\u6027 \uff086\uff09\u5148\u7ed9java\u5e94\u7528\u4e00\u4e2a\u522b\u540d\u7528\u7740\uff0cgoods_index \u6307\u5411\u65e7\u7d22\u5f15my_index PUT /my_index/_alias/goods_index # \u4e24\u4e2a\u7d22\u5f15\u540d\u79f0\u90fd\u80fd\u67e5\u8be2\u5230\u6570\u636e GET /my_index/my_type/_search GET /goods_index/my_type/_search \uff087\uff09\u65b0\u5efa\u4e00\u4e2aindex\uff0c\u8c03\u6574\u5176title\u7684\u7c7b\u578b\u4e3astring PUT /my_index_new { \"mappings\": { \"my_type\": { \"properties\": { \"title\": { \"type\": \"string\" } } } } } \uff088\uff09\u4f7f\u7528scroll api\u5c06\u6570\u636e\u6279\u91cf\u67e5\u8be2\u51fa\u6765 GET /my_index/my_type/_search?scroll=1m { \"query\": { \"match_all\": {} }, \"sort\": [\"_doc\"], \"size\": 1 } GET /_search/scroll { \"scroll_id\": \"DnF1ZXJ5VGhlbkZldGNoBQAAAAAAAEzPFkVUUFF3UUUyUmxhV1JTdWtPRkdpd2cAAAAAAABM0BZFVFBRd1FFMlJsYVdSU3VrT0ZHaXdnAAAAAAAATNEWRVRQUXdRRTJSbGFXUlN1a09GR2l3ZwAAAAAAAEzSFkVUUFF3UUUyUmxhV1JTdWtPRkdpd2cAAAAAAABM0xZFVFBRd1FFMlJsYVdSU3VrT0ZHaXdn\", \"scroll\": \"1m\" } \uff089\uff09\u91c7\u7528bulk api\u5c06\u6570\u636e\u6279\u91cf\u5199\u5165\u65b0\u7d22\u5f15 POST /my_index_new/my_type/_bulk {\"index\": {\"_id\": 1}} {\"text\": \"2019-05-03\"} \uff0810\uff09\u5faa\u73af8~9,\u5c06\u6570\u636e\u5168\u90e8\u5199\u5165\u65b0\u7d22\u5f15 \uff0811\uff09\u5c06\u65e7\u7d22\u5f15\uff0calias \u5207\u6362\u5230\u65b0\u7d22\u5f15\uff0c\u5e94\u7528\u96f6\u505c\u673a\u5207\u6362 POST /_aliases { \"actions\": [ { \"remove\": { \"index\": \"my_index\", \"alias\": \"goods_index\" } }, { \"add\": { \"index\": \"my_index_new\", \"alias\": \"goods_index\" } } ] } # \u67e5\u770b\u7d22\u5f15\u522b\u540d\u5207\u6362\u7ed3\u679c GET /my_index GET /my_index_new \uff0812\uff09\u76f4\u63a5\u901a\u8fc7goods_index\u522b\u540d\u67e5\u8be2 GET /goods_index/my_type/_search 2\u3001\u57fa\u4e8ealias \u5bf9client\u900f\u660e\u5207\u6362index PUT /my_index_v1/_alias/my_index client \u5bf9my_index\u8fdb\u884c\u64cd\u4f5c reindex\u64cd\u4f5c\u5b8c\u6210\u4e4b\u540e\uff0c\u5207\u6362v1\u5230v2 POST /_aliases { \"actions\": [ { \"remove\": { \"index\": \"my_index\", \"alias\": \"goods_index\" } }, { \"add\": { \"index\": \"my_index_new\", \"alias\": \"goods_index\" } } ] } \u4e03\u3001\u5012\u6392\u7d22\u5f15\u7ec4\u6210\u7ed3\u6784\u4ee5\u53ca\u5176\u7d22\u5f15\u4e0d\u53ef\u53d8\u539f\u56e0 1\u3001\u5012\u6392\u7d22\u5f15 \u5012\u6392\u7d22\u5f15\uff0c\u9002\u5408\u7528\u4e8e\u641c\u7d22 \u5012\u6392\u7d22\u5f15\u7ed3\u6784 \uff081\uff09\u5305\u542b\u8fd9\u4e2a\u5173\u952e\u8bcd\u7684document list \uff082\uff09\u5305\u542b\u8fd9\u4e2a\u5173\u952e\u8bcd\u7684document\u7684\u6570\u91cf IDF \uff083\uff09\u8fd9\u4e2a\u5173\u952e\u8bcd\u5728\u6bcf\u4e2adocument\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 TF \uff084\uff09\u8fd9\u4e2a\u5173\u952e\u8bcd\u5728\u8fd9\u4e2adocument\u4e2d\u7684\u6b21\u5e8f \uff085\uff09\u6bcf\u4e2adocument\u7684\u957f\u5ea6 length norm \uff086\uff09\u5305\u542b\u8fd9\u4e2a\u5173\u952e\u8bcd\u7684\u6240\u6709document\u7684\u5e73\u5747\u957f\u5ea6 2\u3001\u7d22\u5f15\u4e0d\u53ef\u53d8 \u4e0d\u53ef\u53d8\u7684\u597d\u5904 \uff081\uff09\u4e0d\u9700\u8981\u9501\uff0c\u63d0\u5347\u5e76\u53d1\u80fd\u529b\uff0c\u907f\u514d\u9501\u7684\u95ee\u9898 \uff082\uff09\u6570\u636e\u4e0d\u53d8\uff0c\u4e00\u76f4\u4fdd\u5b58\u5728os cache\u4e2d\uff0c\u53ea\u8981cache\u5185\u5b58\u8db3\u591f \uff083\uff09filter cache\u4e00\u76f4\u9a7b\u7559\u5728\u5185\u5b58\uff0c\u56e0\u4e3a\u6570\u636e\u4e0d\u53d8 \uff084\uff09\u53ef\u4ee5\u538b\u7f29\uff0c\u8282\u7701cpu\u548cio\u5f00\u9500 \u4e0d\u53ef\u53d8\u7684\u574f\u5904 \u6bcf\u6b21\u90fd\u8981\u91cd\u65b0\u6784\u5efa\u6574\u4e2a\u7d22\u5f15 \u516b\u3001\u6df1\u5ea6\u56fe\u89e3\u5256\u6790document\u5199\u5165\u539f\u7406\uff08buffer\uff0csegment\uff0ccommit\uff09 1\u3001\u6570\u636e\u5199\u5165 \uff081\uff09\u6570\u636e\u5199\u5165buffer \uff082\uff09commit point \uff083\uff09buffer \u4e2d\u7684\u6570\u636e\u5199\u5165\u65b0\u7684index segment\uff08lucene\uff09 \uff084\uff09\u7b49\u5f85\u5728os cache \u4e2d\u7684index segment\u88abfsync\u5f3a\u5236\u5237\u5230\u78c1\u76d8\u4e0a \uff085\uff09\u65b0\u7684index segment\u88ab\u6253\u5f00\uff0c\u4f9bsearch\u4f7f\u7528 \uff086\uff09buffer\u88ab\u6e05\u7a7a 2\u3001\u6570\u636e\u5220\u9664 \u6bcf\u6b21commit point\u65f6\uff0c\u4f1a\u6709\u4e00\u4e2a.del\u6587\u4ef6\uff0c \u6807\u8bb0\u4e86\u54ea\u4e9bsegment\u4e2d\u7684\u54ea\u4e9bdocument\u88ab\u6807\u8bb0delete\u4e86 \u641c\u7d22\u7684\u65f6\u5019\uff0c\u4f1a\u4e00\u6b21\u67e5\u8be2\u6240\u6709\u7684segment\uff0c\u4ece\u65e7\u7684\u5230\u65b0\u7684\uff0c \u6bd4\u5982\u88ab\u4fee\u6539\u8fc7\u7684document\uff0c\u5728\u65e7\u7684segment\u4e2d\uff0c\u4f1a\u6807\u8bb0\u4e3adeleted\uff0c \u5728\u65b0\u7684segment\u4e2d\u4f1a\u6709\u65b0\u7684\u6570\u636e 3\u3001\u6570\u636e\u4fee\u6539 \u76f8\u5f53\u4e8e\u5c06\u65e7\u7684\u6570\u636e\u6807\u8bb0\u4e3adeleted\uff0c\u65b0\u5199\u4e00\u4efd\u6570\u636e\u5230es \u4e5d\u3001\u4f18\u5316\u5199\u5165\u6d41\u7a0b\u5b9e\u73b0NRT\u8fd1\u5b9e\u65f6\uff08filesystem cache\uff0crefresh\uff09 \u57fa\u4e8e\u4e0a\u9762\u7684\u6d41\u7a0b\uff0c\u6bcf\u6b21\u5fc5\u987b\u7b49\u5f85fsync\u5c06segment\u5237\u5165\u78c1\u76d8\uff0c\u624d\u80fd\u5c06segment\u6253\u5f00\u4f9bsearch\u4f7f\u7528 \u8fd9\u6837\u4e00\u6765\uff0c\u4ece\u5199\u5165document\u5230\u53ef\u4ee5\u641c\u7d22\uff0c\u53ef\u80fd\u4f1a\u8d85\u8fc71\u5206\u949f \u4e3b\u8981\u74f6\u9888\u5728\u4e8efsync\u5b9e\u9645\u53d1\u751f\u78c1\u76d8IO\u5199\u6570\u636e\u8fdb\u78c1\u76d8\uff0c\u5f88\u8017\u65f6 \u5199\u5165\u6d41\u7a0b\u6539\u8fdb\uff1a \uff081\uff09\u6570\u636e\u5199\u5165buffer \uff082\uff09buffer\u6ee1\u4e4b\u540e\uff0cbuffer\u4e2d\u7684\u6570\u636e\u88ab\u5199\u5165segment\u6587\u4ef6\uff0c\u4f46\u662f\u5148\u5199\u5165os cache \uff083\uff09\u53ea\u8981segment\u5199\u5165os cache\uff0c\u90a3\u5c31\u76f4\u63a5\u6253\u5f00\u4f9bsearch\u4f7f\u7528\uff0c\u4e0d\u7acb\u5373\u6267\u884ccommit \u6570\u636e\u5199\u5165os cache\uff0c\u5e76\u6253\u5f00\u4f9b\u641c\u7d22\u7684\u8fc7\u7a0b\uff0c\u53eb\u505arefresh\uff0c\u9ed8\u8ba4\u662f\u6bcf\u96941\u79d2\u4e00\u6b21 \u6240\u4ee5es\u662f\u8fd1\u5b9e\u65f6\u7684\uff0c\u5199\u5165\u5230\u53ef\u4ee5\u88ab\u641c\u7d22\uff0c\u9ed8\u8ba4\u662f1\u79d2 \u624b\u52a8refresh, \u4e00\u822c\u4e0d\u7528\u624b\u52a8\u6267\u884c\uff0ces\u81ea\u5df1\u5904\u7406\u5c31\u884c POST /my_index/_refresh \u8bbe\u7f6erefresh\u65f6\u95f4\uff0c \u5982\u679c\u5931\u6548\u8981\u6c42\u8f83\u4f4e\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u957f\u4e00\u4e9b PUT /my_index { \"settings\": { \"refresh_interval\": \"30s\" } } \u5341\u3001\u4f18\u5316\u5199\u5165\u6d41\u7a0b\u5b9e\u73b0durability\u53ef\u9760\u5b58\u50a8\uff08translog\uff0cflush\uff09 \uff081\uff09\u6570\u636e\u5199\u5165buffer\u7f13\u51b2\u533a\u548ctranslog\u65e5\u5fd7\u6587\u4ef6 \uff082\uff09\u6bcf\u96941\u79d2\u949f\uff0cbuffer\u4e2d\u7684\u6570\u636e\u88ab\u5199\u5165\u65b0\u7684segment file\uff0c\u5e76\u8fdb\u5165os cache\uff0c \u6b64\u65f6segment\u88ab\u6253\u5f00\u4f9bsearch\u4f7f\u7528 \uff083\uff09buffer\u88ab\u6e05\u7a7a \uff084\uff09\u91cd\u590d1~3 \u65b0\u7684segment\u4e0d\u65ad\u6dfb\u52a0\uff0cbuffer\u4e0d\u65ad\u4e0d\u6e05\u7a7a\uff0c\u800ctranslog\u4e2d\u7684\u6570\u636e\u4e0d\u65ad\u7d2f\u52a0 \uff085\uff09\u5f53translog\u957f\u5ea6\u8fbe\u5230\u4e00\u5b9a\u7a0b\u5ea6\u7684\u65f6\u5019\uff0ccommit\u64cd\u4f5c\u53d1\u751f \uff085-1\uff09buffer\u4e2d\u7684\u6240\u6709\u6570\u636e\u5199\u5165\u4e00\u4e2a\u65b0\u7684segment\uff0c\u5e76\u5199\u5165os cache\uff0c\u6253\u5f00\u4f9bsearch\u4f7f\u7528 \uff085-2\uff09buffer\u88ab\u6e05\u7a7a \uff085-3\uff09\u4e00\u4e2acommit point \u88ab\u5199\u5165\u78c1\u76d8\uff0c\u6807\u660e\u4e86\u6240\u6709\u7684index segment \uff085-4\uff09file system cache\u4e2d\u7684\u6240\u6709index segment file \u7f13\u5b58\u6570\u636e\uff0c\u88abfsync\u5f3a\u5236\u5237\u5230\u78c1\u76d8\u4e0a \uff085-5\uff09\u73b0\u6709\u7684translog\u88ab\u6e05\u7a7a\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684translog \u57fa\u4e8etranslog \u548ccommit point\u8fdb\u884c\u6570\u636e\u6062\u590d fsync + \u6e05\u7a7atranslog\u5c31\u662fflush\uff0c\u9ed8\u8ba4\u6bcf\u969430\u5206\u949fflush\u4e00\u6b21\uff0c \u6216\u8005\u5f53translog\u8fc7\u5927\u7684\u65f6\u5019\uff0c\u4e5f\u4f1aflush,\u81ea\u52a8\u6267\u884c\u5c31\u884c POST /my_index/_flush translog\uff0c\u6bcf\u96945 \u79d2\u88abfsync\u4e00\u6b21\u5230\u78c1\u76d8\u4e0a\uff0c\u5728\u4e00\u6b21\u589e\u5220\u6539\u64cd\u4f5c\u4e4b\u540e\uff0c \u5f53fsync \u5728primary shard \u548c replica shard\u90fd\u6210\u529f\u4e4b\u540e\uff0c\u90a3\u6b21\u589e\u5220\u6539\u64cd\u4f5c\u624d\u4f1a\u6210\u529f \u4f46\u662f\uff0c\u8fd9\u79cd\u5728\u4e00\u6b21\u589e\u5220\u6539\u65f6\u5f3a\u884cfsync translog \u53ef\u80fd\u4f1a\u5bfc\u81f4\u90e8\u5206\u64cd\u4f5c\u6bd4\u8f83\u8017\u65f6\uff0c\u4e5f\u53ef\u4ee5\u5141\u8bb8\u90e8\u5206\u6570\u636e\u4e22\u5931 \u8bbe\u7f6e\u5f02\u6b65fsync translog POST /my_index/_settings { \"index.translog.durability\": \"async\", \"index.translog.sync_interval\": \"5s\", } \u5341\u4e00\u3001\u5199\u5165\u6d41\u7a0b\u5b9e\u73b0\u6d77\u91cf\u78c1\u76d8\u6587\u4ef6\u5408\u5e76\uff08segment merge\uff0coptimize\uff09 \u6bcf\u79d21\u4e2asegment file\uff0c\u6587\u4ef6\u8fc7\u591a\uff0c\u800c\u4e14\u6bcf\u6b21search\u90fd\u8981\u641c\u7d22\u6240\u6709\u7684segment\uff0c\u5f88\u8017\u65f6 \u9ed8\u8ba4\u4f1a\u5728\u540e\u53f0\u6267\u884csegment merge \u64cd\u4f5c\uff0c\u5728merge\u7684\u65f6\u5019\uff0c\u88ab\u6807\u8bb0\u4e3adeleted\u7684document\u4e5f\u4f1a\u88ab\u5f7b\u5e95\u7269\u7406\u5220\u9664 \u6bcf\u6b21merge \u64cd\u4f5c\u7684\u6d41\u7a0b \uff081\uff09\u9009\u62e9\u4e00\u4e9b\u6709\u76f8\u4f3c\u5927\u5c0f\u7684segment\uff0cmerge\u6210\u4e00\u4e2a\u5927\u7684segment \uff082\uff09\u5c06\u65b0\u7684segment flush\u5230\u78c1\u76d8\u4e0a \uff083\uff09\u5199\u4e00\u4e2a\u65b0\u7684commit point\uff0c\u5305\u62ec\u4e86\u65b0\u7684segment\uff0c\u5e76\u4e14\u6392\u9664\u65e7\u7684\u54ea\u4e9bsegment \uff084\uff09\u5c06\u65b0\u7684segment\u6253\u5f00\u4f9b\u641c\u7d22 \uff085\uff09\u5c06\u65e7\u7684segment\u5220\u9664 POST /my_index/_optimize?max_num_segments=1","title":"5\u3001ElasticSearch\u7d22\u5f15\u7ba1\u7406"},{"location":"ElasticSearch/5\u3001ElasticSearch\u7d22\u5f15\u7ba1\u7406/#_1","text":"1\u3001\u521b\u5efa\u7d22\u5f15 PUT /alibaba { \"settings\": { \"number_of_replicas\": 0, \"number_of_shards\": 1 }, \"mappings\": { \"tianmao\": { \"properties\": { \"name\": { \"type\": \"text\" } } } } } 2\u3001\u4fee\u6539\u7d22\u5f15 PUT /alibaba/_settings { \"number_of_replicas\": 1 } 3\u3001\u5220\u9664\u7d22\u5f15 DELETE /index DELETE /index1,index2 DELETE /index* DELETE /_all \u7981\u7528all\u53c2\u6570\uff0c\u907f\u514d\u5220\u9664\u6240\u6709\u7d22\u5f15 elasticsearch.yml action.destructive_requires_name: true","title":"\u4e00\u3001\u521b\u5efa\u3001\u4fee\u6539\u4ee5\u53ca\u5220\u9664\u7d22\u5f15"},{"location":"ElasticSearch/5\u3001ElasticSearch\u7d22\u5f15\u7ba1\u7406/#_2","text":"1\u3001\u9ed8\u8ba4\u7684\u5206\u8bcd\u5668 standard standard tokenizer \u4ee5\u5355\u8bcd\u8fb9\u754c\u8fdb\u884c\u5207\u5206 shandard token filter \u4ec0\u4e48\u90fd\u4e0d\u505a lowercase token filter \u5c06\u6240\u6709\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5c0f\u5199 stop token filter \uff08\u9ed8\u8ba4\u88ab\u7981\u7528\uff09\u79fb\u9664\u505c\u7528\u8bcd\uff0c\u6bd4\u5982 a\uff0c the it\u7b49\u7b49 2\u3001\u4fee\u6539\u5206\u8bcd\u5668\u8bbe\u7f6e PUT /index { \"settings\": { \"analysis\": { \"analyzer\": { \"es_std\": { \"type\": \"standard\", \"stopwords\": \"_english_\" } } } } } 3\u3001\u5206\u8bcd\u6d4b\u8bd5 GET /index/_analyze { \"analyzer\": \"es_std\", \"text\": \"nihao es\" } 4\u3001\u81ea\u5b9a\u4e49\u5206\u8bcd\u5668 PUT /index { \"settings\": { \"analysis\": { \"char_filter\": { \"&_to_and\": { \"type\": \"mapping\", \"mappings\": [\"&=>and\"] } }, \"filter\": { \"my_stopwords\": { \"type\": \"stop\", \"stopwords\": [\"the\", \"a\"] } }, \"analyzer\": { \"my_analyzer\": { \"type\": \"custome\", \"char_filter\": [\"html_strip\", \"&_to_and\"], \"tokenizer\": \"standard\", \"filter\": [\"lowercase\", \"my_stopwords\"] } } } } } \u5206\u8bcd\u5668\u6d4b\u8bd5 GET /alibaba/_analyze { \"analyzer\": \"my_analyzer\", \"text\": \"nihao es & haha shit <a>\" } { \"tokens\": [ { \"token\": \"nihao\", \"start_offset\": 0, \"end_offset\": 5, \"type\": \"<ALPHANUM>\", \"position\": 0 }, { \"token\": \"es\", \"start_offset\": 6, \"end_offset\": 8, \"type\": \"<ALPHANUM>\", \"position\": 1 }, { \"token\": \"and\", \"start_offset\": 9, \"end_offset\": 10, \"type\": \"<ALPHANUM>\", \"position\": 2 }, { \"token\": \"haha\", \"start_offset\": 11, \"end_offset\": 15, \"type\": \"<ALPHANUM>\", \"position\": 3 }, { \"token\": \"shit\", \"start_offset\": 16, \"end_offset\": 20, \"type\": \"<ALPHANUM>\", \"position\": 4 } ] } \u4f7f\u7528\u81ea\u5b9a\u4e49\u5206\u8bcd\u5668 PUT /alibaba/_mapping/fruit { \"properties\": { \"name\": { \"type\": \"text\", \"analyzer\": \"my_analyzer\" } } }","title":"\u4e8c\u3001\u4fee\u6539\u5206\u8bcd\u5668\u4ee5\u53ca\u5b9a\u5236\u81ea\u5df1\u7684\u5206\u8bcd\u5668"},{"location":"ElasticSearch/5\u3001ElasticSearch\u7d22\u5f15\u7ba1\u7406/#type","text":"type \u662f\u4e00index\u4e2d\u7528\u6765\u533a\u5206\u7c7b\u4f3c\u7684\u6570\u636e\u7684\uff0c\u5f53\u53ef\u80fd\u6709\u4e0d\u540c\u7684fields\uff0c \u800c\u4e14\u6709\u4e0d\u540c\u7684\u5c5e\u6027\u6765\u63a7\u5236\u7d22\u5f15\u5efa\u7acb\uff0c\u5206\u8bcd\u5668field\u7684value\uff0c \u5728\u5e95\u5c42\u7684lucene\u4e2d\u5efa\u7acb\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u5168\u90e8\u662fopaque bytes\u7c7b\u578b\uff0c\u4e0d\u533a\u5206\u7c7b\u578b\u7684 lucene\u662f\u6ca1\u6709type\u7684\u6982\u5ff5\u7684\uff0c\u5728document\u4e2d\uff0c\u5b9e\u9645\u4e0a\u5c06type\u4f5c\u4e3a\u4e00\u4e2adocument\u7684field\u6765\u5b58\u50a8\uff0c\u5373type es\u901a\u8fc7_type\u6765\u8fdb\u884ctype\u7684\u8fc7\u6ee4\u548c\u7b5b\u9009\uff0c\u4e00\u4e2aindex\u7684\u591a\u4e2atype\uff0c\u5b9e\u9645\u4e0a\u662f\u653e\u5728\u4e00\u8d77\u5b58\u50a8\u7684\uff0c \u56e0\u6b64\u4e00\u4e2aindex\u4e0b\uff0c\u4e0d\u80fd\u6709\u591a\u4e2atype\u91cd\u540d\uff0c\u800c\u4e14\u7c7b\u578b\u6216\u8005\u5176\u4ed6\u8bbe\u7f6e\u4e0d\u540c\u7684\uff0c\u56e0\u4e3a\u90a3\u6837\u662f\u65e0\u6cd5\u5904\u7406\u7684 \u5b58\u50a8\u7ed3\u6784 { \"_type\" : \"animal\" , \"name\" : \"dog\" } { \"_type\" : \"fruit\" , \"name\" : \"apple\" } \u6700\u4f73\u5b9e\u8df5 \u5c06\u7c7b\u4f3c\u7ed3\u6784\u7684type\u653e\u5728\u4e00\u4e2aindex\u4e0b\uff0c\u8fd9\u4e9btype\u5e94\u8be5\u6709\u591a\u4e2afield\u662f\u76f8\u540c\u7684 \u5047\u5982\u8bf4\uff0c\u4f60\u8bb2\u4e24\u4e2atype\u7684field\u5b8c\u5168\u4e0d\u540c\uff0c\u653e\u5728\u4e00\u4e2aindex\u4e0b\uff0c \u90a3\u4e48\u5c31\u6bcf\u6761\u6570\u636e\u90fd\u81f3\u5c11\u6709\u4e00\u534afield\u5728\u5e95\u5c42\u7684lucene\u4e2d\u662f\u7a7a\u503c\uff0c\u4f1a\u6709\u4e25\u91cd\u7684\u6027\u80fd\u95ee\u9898","title":"\u4e09\u3001type\u5e95\u5c42\u6570\u636e\u7ed3\u6784"},{"location":"ElasticSearch/5\u3001ElasticSearch\u7d22\u5f15\u7ba1\u7406/#mapping-root-object","text":"1\u3001root object \u5c31\u662f\u67d0\u4e2atype\u5bf9\u5e94\u7684mapping json\uff0c\u5305\u62ec\u4e86 properties(type\u7c7b\u578b, index\u8bbe\u7f6e\u662f\u5426\u5206\u8bcd, analyzer\u5206\u8bcd\u5668)\uff0c metadata\uff08 _id, _source, _type \uff09 settings\uff08analyzer\uff09 \u5176\u4ed6settings\uff08\u6bd4\u5982include_in_all\uff09 2\u3001properties PUT /alibaba/_mapping/fruit { \"properties\": { \"age\": { \"type\": \"long\" } } } 3\u3001source \uff081\uff09\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u76f4\u63a5\u62ff\u5230\u5b8c\u6574\u7684document\uff0c\u4e0d\u9700\u8981\u5148\u62ffdocument id\uff0c\u518d\u53d1\u9001\u4e00\u6b21\u8bf7\u6c42\u62ffdocument \uff082\uff09partial update\u57fa\u4e8e_source \u5b9e\u73b0 \uff083\uff09reindex \u65f6\uff0c\u76f4\u63a5\u57fa\u4e8e_source \u5b9e\u73b0\uff0c\u4e0d\u9700\u8981\u67e5\u8be2\u6570\u636e\u518d\u4fee\u6539 \uff084\uff09\u53ef\u4ee5\u57fa\u4e8e_source \u5b9a\u5236\u8fd4\u56defield \uff085\uff09debug query\u66f4\u5bb9\u6613\uff0c\u53ef\u4ee5\u76f4\u63a5\u770b\u5230_source \u7981\u7528source PUT /alibaba/_mapping/fruit2 { \"_source\": { \"enabled\": false } } 4\u3001all \u5c06\u6240\u6709\u7684field\u6253\u5305\u5728\u4e00\u8d77\uff0c\u4f5c\u4e3a\u4e00\u4e2a_all field\uff0c\u5efa\u7acb\u7d22\u5f15 \u6ca1\u6709\u6307\u5b9a\u4efb\u4f55field\u8fdb\u884c\u641c\u7d22\u65f6\uff0c\u5c31\u662f\u4f7f\u7528_all field\u5728\u641c\u7d22 PUT /alibaba/_mapping/fruit3 { \"_all\": { \"enabled\": false } } \u4e5f\u53ef\u4ee5\u5728field\u7ea7\u522b\u8bbe\u7f6einclude_in_all field ,\u8bbe\u7f6e\u662f\u5426\u5c06field\u7684\u503c\u5305\u542b\u5728_all field\u4e2d PUT /alibaba/_mapping/fruit { \"properties\": { \"title\": { \"type\": \"text\", \"include_in_all\": false } } } 5\u3001\u6807\u793a\u6027metadata _index _type _id","title":"\u56db\u3001mapping root object\u6df1\u5165\u5256\u6790"},{"location":"ElasticSearch/5\u3001ElasticSearch\u7d22\u5f15\u7ba1\u7406/#dynamic-mapping","text":"1\u3001\u5b9a\u5236dynalic \u7b56\u7565 true \u9047\u5230\u964c\u751f\u5b57\u6bb5\uff0c\u5c31\u8fdb\u884cdynamic mapping flase \u9047\u5230\u964c\u751f\u5b57\u6bb5\uff0c\u5c31\u5ffd\u7565 strict \u9047\u5230\u964c\u751f\u5b57\u6bb5\uff0c\u5c31\u62a5\u9519 PUT /alibaba { \"mappings\": { \"taobao\": { \"dynamic\": \"strict\", \"properties\": { \"title\": { \"type\": \"text\" }, \"address\": { \"type\": \"text\" } } } } } PUT /alibaba/baotao/1 { \"title\": \"dog\", \"address\": \"beijing\" } PUT /alibaba/baotao/2 { \"title\": \"dog\", \"address\": \"beijing\", \"price\": 26 } GET /alibaba/_mapping/taobao 2\u3001\u5b9a\u5236dynamic mapping\u7b56\u7565 \uff081\uff09date_detection \u9ed8\u8ba4\u4f1a\u6309\u7167\u4e00\u5b9a\u683c\u5f0f\u8bc6\u522bdate\uff0c\u6bd4\u5982yyyy-MM-dd, \u5982\u679c\u67d0\u4e2afield\u5148\u8fc7\u6765\u4e00\u4e2a2019-05-02\uff0c\u5c31\u4f1a\u88ab\u81ea\u52a8dynamic mapping\u6210date \u540e\u9762\u5982\u679c\u518d\u8fc7\u6765\u4e00\u4e2a\u201chello world\u201d\u5c31\u88ab\u62a5\u9519 \u53ef\u4ee5\u624b\u52a8\u5173\u95ed\u67d0\u4e2atype\u7684date_detection \u5982\u679c\u9700\u8981\uff0c\u81ea\u5df1\u624b\u52a8\u6267\u884c\u67d0\u4e2afield\u4e3adate\u7c7b\u578b PUT /my_index/_mapping/my_type { \"date_detecion\": false } (2)\u5b9a\u5236\u81ea\u5df1\u7684dynamic mapping template(type level) PUT /my_index { \"mappings\": { \"my_type\": { \"dynamic_templates\": [{ \"en\": { \"match\": \"*_en\", \"match_mapping_type\": \"string\", \"mapping\": { \"type\": \"string\", \"analyzer\": \"english\" } } }] } } } \u5206\u8bcd\u6548\u679c\u6d4b\u8bd5 # \u6807\u51c6\u5206\u8bcd\u5668\uff08 this is a good man \uff09 GET / my_index / _analyze { \"analyzer\" : \"standard\" , \"text\" : \"this is a good man\" } # english\u5206\u8bcd\u5668 \uff08 good man \uff09 GET / my_index / _analyze { \"analyzer\" : \"english\" , \"text\" : \"this is a good man\" } \u68c0\u6d4b\u52a8\u6001\u5206\u8bcd\u6a21\u677f\u6548\u679c # \u6dfb\u52a0\u6570\u636e PUT / my_index / my_type / 1 { \"name\" : \"this is a good man\" , \"name_en\" : \"this is a good man\" } # \u4f7f\u7528 english\u5206\u8bcd\u5668\u5b57\u6bb5\u641c\u7d22 \uff08\u5931\u8d25\uff09 GET / my_index / my_type / _search { \"query\" : { \"match\" : { \"name_en\" : \"is\" } } } # \u4f7f\u7528 standard \u5206\u8bcd\u5668\u5b57\u6bb5\u641c\u7d22\uff08\u6210\u529f\uff09 GET / my_index / my_type / _search { \"query\" : { \"match\" : { \"name\" : \"is\" } } } \u9ed8\u8ba4standard \u5206\u8bcd\u5668\u4e0d\u4f1a\u8fc7\u6ee4\u505c\u7528\u8bcd\uff0cis\u7b49\u8bcd\u4e0d\u8fdb\u884c\u7d22\u5f15 english\u5206\u8bcd\u5668\u4f1a\u8fc7\u6ee4\u505c\u7528\u8bcd (3)\u5b9a\u5236\u81ea\u5df1\u7684dynamic mapping template(index level) PUT /my_index { \"mappings\": { \"_default\": { \"_all\": { \"enabled\": false } }, \"blog\": { \"_all\": { \"enabled\": false } } } }","title":"\u4e94\u3001\u5b9a\u5236\u5316\u81ea\u5df1\u7684dynamic mapping\u7b56\u7565"},{"location":"ElasticSearch/5\u3001ElasticSearch\u7d22\u5f15\u7ba1\u7406/#scollbulk","text":"1\u3001\u91cd\u5efa\u7d22\u5f15 \u4e00\u4e2afield\u7684\u8bbe\u7f6e\u662f\u4e0d\u80fd\u88ab\u4fee\u6539\u7684\uff0c \u5982\u679c\u8981\u4fee\u6539\u4e00\u4e2afield\uff0c\u90a3\u4e48\u5e94\u8be5\u91cd\u65b0\u6309\u7167\u65b0\u7684mapping\uff0c\u5efa\u7acb\u4e00\u4e2aindex \u7136\u540e\uff0c\u5c06\u6570\u636e\u6279\u91cf\u67e5\u8be2\u51fa\u6765\uff0c\u91cd\u65b0\u7528bulk api\u5199\u5165index\u4e2d\uff0c \u6279\u91cf\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u5efa\u8bae\u624d\u6709scroll api\uff0c\u5e76\u91c7\u7528\u591a\u7ebf\u7a0b\u5e76\u53d1\u7684\u65b9\u5f0f\u6765reindex\u6570\u636e\uff0c \u6bcf\u6b21scroll\u5c31\u67e5\u8be2\u6307\u5b9a\u65e5\u671f\u7684\u4e00\u6bb5\u6570\u636e\uff0c\u4ea4\u7ed9\u4e00\u4e2a\u7ebf\u7a0b\u5373\u53ef \uff081\uff09dymanic mapping\u5c06\u5b57\u7b26\u4e32\u8bc6\u522b\u4e3a\u4e86\u65e5\u671f\u7c7b\u578b PUT /my_index/my_type/1 { \"title\": \"2019-05-03\" } \uff082\uff09\u5f53\u540e\u671f\u5411\u7d22\u5f15\u4e2d\u952e\u5165string\u7c7b\u578b\u7684\u6570\u636e\u5c31\u62a5\u9519 # \u63d2\u5165\u6570\u636e\u62a5\u9519 PUT / my_index / my_type / 2 { \"title\" : \"this is a title\" } # \u67e5\u770b\u7d22\u5f15 mapping \uff0c \u53d1\u73b0 title\u662fdate\u7c7b\u578b GET / my_index / _mapping / my_type { \"my_index\" : { \"mappings\" : { \"my_type\" : { \"properties\" : { \"title\" : { \"type\" : \"date\" } } } } } } \uff083\uff09\u6b64\u65f6\u4e0d\u80fd\u4fee\u6539title\u7c7b\u578b # \u76f4\u63a5\u4fee\u6539\u5df2\u5b58\u5728\u7d22\u5f15\u5b57\u6bb5\u4f1a\u62a5\u9519 PUT / my_index / _mapping / my_type { \"properties\" : { \"title\" : { \"type\" : \"text\" } } } \uff084\uff09\u552f\u4e00\u7684\u529e\u6cd5\u5c31\u662freindex\uff0c\u91cd\u5efa\u7d22\u5f15\uff0c\u5c06\u65e7\u7684\u7d22\u5f15\u6570\u636e\u67e5\u8be2\u51fa\u6765\uff0c\u518d\u5bfc\u5165\u65b0\u7d22\u5f15 \uff085\uff09\u5982\u679c\u65e7\u7684\u7d22\u5f15\u5df2\u7ecf\u5728\u4f7f\u7528\uff0c\u4fee\u6539\u4e3a\u65b0\u7684\u7d22\u5f15\u540d\u79f0\u4e4b\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u4e0d\u77e5\u9053 \u5982\u679c\u8981java\u7a0b\u5e8f\u8fdb\u884c\u4fee\u6539\uff0c\u90a3\u4e48\u9700\u8981\u505c\u673a\u91cd\u542f\uff0c\u964d\u4f4e\u53ef\u7528\u6027 \uff086\uff09\u5148\u7ed9java\u5e94\u7528\u4e00\u4e2a\u522b\u540d\u7528\u7740\uff0cgoods_index \u6307\u5411\u65e7\u7d22\u5f15my_index PUT /my_index/_alias/goods_index # \u4e24\u4e2a\u7d22\u5f15\u540d\u79f0\u90fd\u80fd\u67e5\u8be2\u5230\u6570\u636e GET /my_index/my_type/_search GET /goods_index/my_type/_search \uff087\uff09\u65b0\u5efa\u4e00\u4e2aindex\uff0c\u8c03\u6574\u5176title\u7684\u7c7b\u578b\u4e3astring PUT /my_index_new { \"mappings\": { \"my_type\": { \"properties\": { \"title\": { \"type\": \"string\" } } } } } \uff088\uff09\u4f7f\u7528scroll api\u5c06\u6570\u636e\u6279\u91cf\u67e5\u8be2\u51fa\u6765 GET /my_index/my_type/_search?scroll=1m { \"query\": { \"match_all\": {} }, \"sort\": [\"_doc\"], \"size\": 1 } GET /_search/scroll { \"scroll_id\": \"DnF1ZXJ5VGhlbkZldGNoBQAAAAAAAEzPFkVUUFF3UUUyUmxhV1JTdWtPRkdpd2cAAAAAAABM0BZFVFBRd1FFMlJsYVdSU3VrT0ZHaXdnAAAAAAAATNEWRVRQUXdRRTJSbGFXUlN1a09GR2l3ZwAAAAAAAEzSFkVUUFF3UUUyUmxhV1JTdWtPRkdpd2cAAAAAAABM0xZFVFBRd1FFMlJsYVdSU3VrT0ZHaXdn\", \"scroll\": \"1m\" } \uff089\uff09\u91c7\u7528bulk api\u5c06\u6570\u636e\u6279\u91cf\u5199\u5165\u65b0\u7d22\u5f15 POST /my_index_new/my_type/_bulk {\"index\": {\"_id\": 1}} {\"text\": \"2019-05-03\"} \uff0810\uff09\u5faa\u73af8~9,\u5c06\u6570\u636e\u5168\u90e8\u5199\u5165\u65b0\u7d22\u5f15 \uff0811\uff09\u5c06\u65e7\u7d22\u5f15\uff0calias \u5207\u6362\u5230\u65b0\u7d22\u5f15\uff0c\u5e94\u7528\u96f6\u505c\u673a\u5207\u6362 POST /_aliases { \"actions\": [ { \"remove\": { \"index\": \"my_index\", \"alias\": \"goods_index\" } }, { \"add\": { \"index\": \"my_index_new\", \"alias\": \"goods_index\" } } ] } # \u67e5\u770b\u7d22\u5f15\u522b\u540d\u5207\u6362\u7ed3\u679c GET /my_index GET /my_index_new \uff0812\uff09\u76f4\u63a5\u901a\u8fc7goods_index\u522b\u540d\u67e5\u8be2 GET /goods_index/my_type/_search 2\u3001\u57fa\u4e8ealias \u5bf9client\u900f\u660e\u5207\u6362index PUT /my_index_v1/_alias/my_index client \u5bf9my_index\u8fdb\u884c\u64cd\u4f5c reindex\u64cd\u4f5c\u5b8c\u6210\u4e4b\u540e\uff0c\u5207\u6362v1\u5230v2 POST /_aliases { \"actions\": [ { \"remove\": { \"index\": \"my_index\", \"alias\": \"goods_index\" } }, { \"add\": { \"index\": \"my_index_new\", \"alias\": \"goods_index\" } } ] }","title":"\u516d\u3001\u57fa\u4e8escoll+bulk+\u7d22\u5f15\u522b\u540d\u5b9e\u73b0\u96f6\u505c\u673a\u91cd\u5efa\u7d22\u5f15"},{"location":"ElasticSearch/5\u3001ElasticSearch\u7d22\u5f15\u7ba1\u7406/#_3","text":"1\u3001\u5012\u6392\u7d22\u5f15 \u5012\u6392\u7d22\u5f15\uff0c\u9002\u5408\u7528\u4e8e\u641c\u7d22 \u5012\u6392\u7d22\u5f15\u7ed3\u6784 \uff081\uff09\u5305\u542b\u8fd9\u4e2a\u5173\u952e\u8bcd\u7684document list \uff082\uff09\u5305\u542b\u8fd9\u4e2a\u5173\u952e\u8bcd\u7684document\u7684\u6570\u91cf IDF \uff083\uff09\u8fd9\u4e2a\u5173\u952e\u8bcd\u5728\u6bcf\u4e2adocument\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 TF \uff084\uff09\u8fd9\u4e2a\u5173\u952e\u8bcd\u5728\u8fd9\u4e2adocument\u4e2d\u7684\u6b21\u5e8f \uff085\uff09\u6bcf\u4e2adocument\u7684\u957f\u5ea6 length norm \uff086\uff09\u5305\u542b\u8fd9\u4e2a\u5173\u952e\u8bcd\u7684\u6240\u6709document\u7684\u5e73\u5747\u957f\u5ea6 2\u3001\u7d22\u5f15\u4e0d\u53ef\u53d8 \u4e0d\u53ef\u53d8\u7684\u597d\u5904 \uff081\uff09\u4e0d\u9700\u8981\u9501\uff0c\u63d0\u5347\u5e76\u53d1\u80fd\u529b\uff0c\u907f\u514d\u9501\u7684\u95ee\u9898 \uff082\uff09\u6570\u636e\u4e0d\u53d8\uff0c\u4e00\u76f4\u4fdd\u5b58\u5728os cache\u4e2d\uff0c\u53ea\u8981cache\u5185\u5b58\u8db3\u591f \uff083\uff09filter cache\u4e00\u76f4\u9a7b\u7559\u5728\u5185\u5b58\uff0c\u56e0\u4e3a\u6570\u636e\u4e0d\u53d8 \uff084\uff09\u53ef\u4ee5\u538b\u7f29\uff0c\u8282\u7701cpu\u548cio\u5f00\u9500 \u4e0d\u53ef\u53d8\u7684\u574f\u5904 \u6bcf\u6b21\u90fd\u8981\u91cd\u65b0\u6784\u5efa\u6574\u4e2a\u7d22\u5f15","title":"\u4e03\u3001\u5012\u6392\u7d22\u5f15\u7ec4\u6210\u7ed3\u6784\u4ee5\u53ca\u5176\u7d22\u5f15\u4e0d\u53ef\u53d8\u539f\u56e0"},{"location":"ElasticSearch/5\u3001ElasticSearch\u7d22\u5f15\u7ba1\u7406/#documentbuffersegmentcommit","text":"1\u3001\u6570\u636e\u5199\u5165 \uff081\uff09\u6570\u636e\u5199\u5165buffer \uff082\uff09commit point \uff083\uff09buffer \u4e2d\u7684\u6570\u636e\u5199\u5165\u65b0\u7684index segment\uff08lucene\uff09 \uff084\uff09\u7b49\u5f85\u5728os cache \u4e2d\u7684index segment\u88abfsync\u5f3a\u5236\u5237\u5230\u78c1\u76d8\u4e0a \uff085\uff09\u65b0\u7684index segment\u88ab\u6253\u5f00\uff0c\u4f9bsearch\u4f7f\u7528 \uff086\uff09buffer\u88ab\u6e05\u7a7a 2\u3001\u6570\u636e\u5220\u9664 \u6bcf\u6b21commit point\u65f6\uff0c\u4f1a\u6709\u4e00\u4e2a.del\u6587\u4ef6\uff0c \u6807\u8bb0\u4e86\u54ea\u4e9bsegment\u4e2d\u7684\u54ea\u4e9bdocument\u88ab\u6807\u8bb0delete\u4e86 \u641c\u7d22\u7684\u65f6\u5019\uff0c\u4f1a\u4e00\u6b21\u67e5\u8be2\u6240\u6709\u7684segment\uff0c\u4ece\u65e7\u7684\u5230\u65b0\u7684\uff0c \u6bd4\u5982\u88ab\u4fee\u6539\u8fc7\u7684document\uff0c\u5728\u65e7\u7684segment\u4e2d\uff0c\u4f1a\u6807\u8bb0\u4e3adeleted\uff0c \u5728\u65b0\u7684segment\u4e2d\u4f1a\u6709\u65b0\u7684\u6570\u636e 3\u3001\u6570\u636e\u4fee\u6539 \u76f8\u5f53\u4e8e\u5c06\u65e7\u7684\u6570\u636e\u6807\u8bb0\u4e3adeleted\uff0c\u65b0\u5199\u4e00\u4efd\u6570\u636e\u5230es","title":"\u516b\u3001\u6df1\u5ea6\u56fe\u89e3\u5256\u6790document\u5199\u5165\u539f\u7406\uff08buffer\uff0csegment\uff0ccommit\uff09"},{"location":"ElasticSearch/5\u3001ElasticSearch\u7d22\u5f15\u7ba1\u7406/#nrtfilesystem-cacherefresh","text":"\u57fa\u4e8e\u4e0a\u9762\u7684\u6d41\u7a0b\uff0c\u6bcf\u6b21\u5fc5\u987b\u7b49\u5f85fsync\u5c06segment\u5237\u5165\u78c1\u76d8\uff0c\u624d\u80fd\u5c06segment\u6253\u5f00\u4f9bsearch\u4f7f\u7528 \u8fd9\u6837\u4e00\u6765\uff0c\u4ece\u5199\u5165document\u5230\u53ef\u4ee5\u641c\u7d22\uff0c\u53ef\u80fd\u4f1a\u8d85\u8fc71\u5206\u949f \u4e3b\u8981\u74f6\u9888\u5728\u4e8efsync\u5b9e\u9645\u53d1\u751f\u78c1\u76d8IO\u5199\u6570\u636e\u8fdb\u78c1\u76d8\uff0c\u5f88\u8017\u65f6 \u5199\u5165\u6d41\u7a0b\u6539\u8fdb\uff1a \uff081\uff09\u6570\u636e\u5199\u5165buffer \uff082\uff09buffer\u6ee1\u4e4b\u540e\uff0cbuffer\u4e2d\u7684\u6570\u636e\u88ab\u5199\u5165segment\u6587\u4ef6\uff0c\u4f46\u662f\u5148\u5199\u5165os cache \uff083\uff09\u53ea\u8981segment\u5199\u5165os cache\uff0c\u90a3\u5c31\u76f4\u63a5\u6253\u5f00\u4f9bsearch\u4f7f\u7528\uff0c\u4e0d\u7acb\u5373\u6267\u884ccommit \u6570\u636e\u5199\u5165os cache\uff0c\u5e76\u6253\u5f00\u4f9b\u641c\u7d22\u7684\u8fc7\u7a0b\uff0c\u53eb\u505arefresh\uff0c\u9ed8\u8ba4\u662f\u6bcf\u96941\u79d2\u4e00\u6b21 \u6240\u4ee5es\u662f\u8fd1\u5b9e\u65f6\u7684\uff0c\u5199\u5165\u5230\u53ef\u4ee5\u88ab\u641c\u7d22\uff0c\u9ed8\u8ba4\u662f1\u79d2 \u624b\u52a8refresh, \u4e00\u822c\u4e0d\u7528\u624b\u52a8\u6267\u884c\uff0ces\u81ea\u5df1\u5904\u7406\u5c31\u884c POST /my_index/_refresh \u8bbe\u7f6erefresh\u65f6\u95f4\uff0c \u5982\u679c\u5931\u6548\u8981\u6c42\u8f83\u4f4e\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u957f\u4e00\u4e9b PUT /my_index { \"settings\": { \"refresh_interval\": \"30s\" } }","title":"\u4e5d\u3001\u4f18\u5316\u5199\u5165\u6d41\u7a0b\u5b9e\u73b0NRT\u8fd1\u5b9e\u65f6\uff08filesystem cache\uff0crefresh\uff09"},{"location":"ElasticSearch/5\u3001ElasticSearch\u7d22\u5f15\u7ba1\u7406/#durabilitytranslogflush","text":"\uff081\uff09\u6570\u636e\u5199\u5165buffer\u7f13\u51b2\u533a\u548ctranslog\u65e5\u5fd7\u6587\u4ef6 \uff082\uff09\u6bcf\u96941\u79d2\u949f\uff0cbuffer\u4e2d\u7684\u6570\u636e\u88ab\u5199\u5165\u65b0\u7684segment file\uff0c\u5e76\u8fdb\u5165os cache\uff0c \u6b64\u65f6segment\u88ab\u6253\u5f00\u4f9bsearch\u4f7f\u7528 \uff083\uff09buffer\u88ab\u6e05\u7a7a \uff084\uff09\u91cd\u590d1~3 \u65b0\u7684segment\u4e0d\u65ad\u6dfb\u52a0\uff0cbuffer\u4e0d\u65ad\u4e0d\u6e05\u7a7a\uff0c\u800ctranslog\u4e2d\u7684\u6570\u636e\u4e0d\u65ad\u7d2f\u52a0 \uff085\uff09\u5f53translog\u957f\u5ea6\u8fbe\u5230\u4e00\u5b9a\u7a0b\u5ea6\u7684\u65f6\u5019\uff0ccommit\u64cd\u4f5c\u53d1\u751f \uff085-1\uff09buffer\u4e2d\u7684\u6240\u6709\u6570\u636e\u5199\u5165\u4e00\u4e2a\u65b0\u7684segment\uff0c\u5e76\u5199\u5165os cache\uff0c\u6253\u5f00\u4f9bsearch\u4f7f\u7528 \uff085-2\uff09buffer\u88ab\u6e05\u7a7a \uff085-3\uff09\u4e00\u4e2acommit point \u88ab\u5199\u5165\u78c1\u76d8\uff0c\u6807\u660e\u4e86\u6240\u6709\u7684index segment \uff085-4\uff09file system cache\u4e2d\u7684\u6240\u6709index segment file \u7f13\u5b58\u6570\u636e\uff0c\u88abfsync\u5f3a\u5236\u5237\u5230\u78c1\u76d8\u4e0a \uff085-5\uff09\u73b0\u6709\u7684translog\u88ab\u6e05\u7a7a\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684translog \u57fa\u4e8etranslog \u548ccommit point\u8fdb\u884c\u6570\u636e\u6062\u590d fsync + \u6e05\u7a7atranslog\u5c31\u662fflush\uff0c\u9ed8\u8ba4\u6bcf\u969430\u5206\u949fflush\u4e00\u6b21\uff0c \u6216\u8005\u5f53translog\u8fc7\u5927\u7684\u65f6\u5019\uff0c\u4e5f\u4f1aflush,\u81ea\u52a8\u6267\u884c\u5c31\u884c POST /my_index/_flush translog\uff0c\u6bcf\u96945 \u79d2\u88abfsync\u4e00\u6b21\u5230\u78c1\u76d8\u4e0a\uff0c\u5728\u4e00\u6b21\u589e\u5220\u6539\u64cd\u4f5c\u4e4b\u540e\uff0c \u5f53fsync \u5728primary shard \u548c replica shard\u90fd\u6210\u529f\u4e4b\u540e\uff0c\u90a3\u6b21\u589e\u5220\u6539\u64cd\u4f5c\u624d\u4f1a\u6210\u529f \u4f46\u662f\uff0c\u8fd9\u79cd\u5728\u4e00\u6b21\u589e\u5220\u6539\u65f6\u5f3a\u884cfsync translog \u53ef\u80fd\u4f1a\u5bfc\u81f4\u90e8\u5206\u64cd\u4f5c\u6bd4\u8f83\u8017\u65f6\uff0c\u4e5f\u53ef\u4ee5\u5141\u8bb8\u90e8\u5206\u6570\u636e\u4e22\u5931 \u8bbe\u7f6e\u5f02\u6b65fsync translog POST /my_index/_settings { \"index.translog.durability\": \"async\", \"index.translog.sync_interval\": \"5s\", }","title":"\u5341\u3001\u4f18\u5316\u5199\u5165\u6d41\u7a0b\u5b9e\u73b0durability\u53ef\u9760\u5b58\u50a8\uff08translog\uff0cflush\uff09"},{"location":"ElasticSearch/5\u3001ElasticSearch\u7d22\u5f15\u7ba1\u7406/#segment-mergeoptimize","text":"\u6bcf\u79d21\u4e2asegment file\uff0c\u6587\u4ef6\u8fc7\u591a\uff0c\u800c\u4e14\u6bcf\u6b21search\u90fd\u8981\u641c\u7d22\u6240\u6709\u7684segment\uff0c\u5f88\u8017\u65f6 \u9ed8\u8ba4\u4f1a\u5728\u540e\u53f0\u6267\u884csegment merge \u64cd\u4f5c\uff0c\u5728merge\u7684\u65f6\u5019\uff0c\u88ab\u6807\u8bb0\u4e3adeleted\u7684document\u4e5f\u4f1a\u88ab\u5f7b\u5e95\u7269\u7406\u5220\u9664 \u6bcf\u6b21merge \u64cd\u4f5c\u7684\u6d41\u7a0b \uff081\uff09\u9009\u62e9\u4e00\u4e9b\u6709\u76f8\u4f3c\u5927\u5c0f\u7684segment\uff0cmerge\u6210\u4e00\u4e2a\u5927\u7684segment \uff082\uff09\u5c06\u65b0\u7684segment flush\u5230\u78c1\u76d8\u4e0a \uff083\uff09\u5199\u4e00\u4e2a\u65b0\u7684commit point\uff0c\u5305\u62ec\u4e86\u65b0\u7684segment\uff0c\u5e76\u4e14\u6392\u9664\u65e7\u7684\u54ea\u4e9bsegment \uff084\uff09\u5c06\u65b0\u7684segment\u6253\u5f00\u4f9b\u641c\u7d22 \uff085\uff09\u5c06\u65e7\u7684segment\u5220\u9664 POST /my_index/_optimize?max_num_segments=1","title":"\u5341\u4e00\u3001\u5199\u5165\u6d41\u7a0b\u5b9e\u73b0\u6d77\u91cf\u78c1\u76d8\u6587\u4ef6\u5408\u5e76\uff08segment merge\uff0coptimize\uff09"},{"location":"ElasticSearch/6\u3001ElasticSearch\u7ed3\u6784\u5316\u641c\u7d22/","text":"\u4e00\u3001\u4f7f\u7528term filter\u6765\u641c\u7d22\u6570\u636e 1\u3001\u6839\u636e\u7528\u6237ID\u3001\u662f\u5426\u9690\u85cf\u3001\u5e16\u5b50ID\u3001\u53d1\u5e16\u65e5\u671f\u6765\u641c\u7d22\u5e16\u5b50 \uff081\uff09\u63d2\u5165\u4e00\u4e9b\u6d4b\u8bd5\u6570\u636e POST /forum/article/_bulk { \"index\": { \"_id\": 1 }} { \"articleID\" : \"XHDK-A-1293-#fJ3\", \"userID\" : 1, \"hidden\": false, \"postDate\": \"2017-01-01\" } { \"index\": { \"_id\": 2 }} { \"articleID\" : \"KDKE-B-9947-#kL5\", \"userID\" : 1, \"hidden\": false, \"postDate\": \"2017-01-02\" } { \"index\": { \"_id\": 3 }} { \"articleID\" : \"JODL-X-1937-#pV7\", \"userID\" : 2, \"hidden\": false, \"postDate\": \"2017-01-01\" } { \"index\": { \"_id\": 4 }} { \"articleID\" : \"QQPX-R-3956-#aD8\", \"userID\" : 2, \"hidden\": true, \"postDate\": \"2017-01-02\" } \u6574\u4e2aes\u662f\u652f\u6301json document\u683c\u5f0f\u7684\uff0c\u6240\u4ee5\u8bf4\u6269\u5c55\u6027\u548c\u7075\u6d3b\u6027\u975e\u5e38\u4e4b\u597d\u3002 \u5982\u679c\u540e\u7eed\u968f\u7740\u4e1a\u52a1\u9700\u6c42\u7684\u589e\u52a0\uff0c\u8981\u5728document\u4e2d\u589e\u52a0\u66f4\u591a\u7684field\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u968f\u65f6\u6dfb\u52a0field\u3002 \u4f46\u662f\u5982\u679c\u662f\u5728\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\uff0c\u6bd4\u5982mysql\uff0c\u6211\u4eec\u5efa\u7acb\u4e86\u4e00\u4e2a\u8868\uff0c\u73b0\u5728\u8981\u7ed9\u8868\u4e2d\u65b0\u589e\u4e00\u4e9bcolumn\uff0c\u5c31\u9700\u8981\u4fee\u6539\u8868\u7ed3\u6784 \u67e5\u770bmapping GET /forum/_mapping/article { \"forum\": { \"mappings\": { \"article\": { \"properties\": { \"articleID\": { \"type\": \"text\", \"fields\": { \"keyword\": { \"type\": \"keyword\", \"ignore_above\": 256 } } }, \"hidden\": { \"type\": \"boolean\" }, \"postDate\": { \"type\": \"date\" }, \"userID\": { \"type\": \"long\" } } } } } } \u73b0\u5728es 5.2\u7248\u672c\uff0ctype=text\uff0c\u9ed8\u8ba4\u4f1a\u8bbe\u7f6e\u4e24\u4e2afield \u4e00\u4e2a\u662ffield\u672c\u8eab\uff0c\u6bd4\u5982 articleID\uff0c\u5c31\u662f\u5206\u8bcd\u7684 \u8fd8\u6709\u4e00\u4e2a\u5c31\u662ffield.keyword\uff0c\u6bd4\u5982 articleID.keyword\uff0c\u9ed8\u8ba4\u4e0d\u5206\u8bcd\uff0c\u4f1a\u6700\u591a\u4fdd\u7559256\u4e2a\u5b57\u7b26 \uff082\uff09\u6839\u636e\u7528\u6237ID\u641c\u7d22\u5e16\u5b50 GET /forum/article/_search { \"query\" : { \"constant_score\" : { \"filter\" : { \"term\" : { \"userID\" : 1 } } } } } term filter/query\uff1a\u5bf9\u641c\u7d22\u6587\u672c\u4e0d\u5206\u8bcd\uff0c\u76f4\u63a5\u62ff\u53bb\u5012\u6392\u7d22\u5f15\u4e2d\u5339\u914d \u6bd4\u5982\u8bf4\uff0c \u5bf9\u641c\u7d22\u6587\u672c\u8fdb\u884c\u5206\u8bcd\uff0c\u201chelle world\u201d --> \u201chello\u201d\u548c\u201cworld\u201d\uff0c\u4e24\u4e2a\u8bcd\u5206\u522b\u53bb\u5012\u6392\u7d22\u5f15\u4e2d\u5339\u914d term\uff0c\u201chello world\u201d --> \u201chello world\u201d\uff0c\u76f4\u63a5\u53bb\u5012\u6392\u7d22\u5f15\u4e2d\u5339\u914d\u201chello world\u201d \uff083\uff09\u641c\u7d22\u6ca1\u6709\u9690\u85cf\u7684\u5e16\u5b50 GET /forum/article/_search { \"query\" : { \"constant_score\" : { \"filter\" : { \"term\" : { \"hidden\" : false } } } } } \uff084\uff09\u6839\u636e\u53d1\u5e16\u65e5\u671f\u641c\u7d22\u5e16\u5b50 GET /forum/article/_search { \"query\" : { \"constant_score\" : { \"filter\" : { \"term\" : { \"postDate\" : \"2017-01-01\" } } } } } \uff085\uff09\u6839\u636e\u5e16\u5b50ID\u641c\u7d22\u5e16\u5b50 # \u76f4\u63a5\u67e5\u8be2\uff0c\u67e5\u4e0d\u5230\u7ed3\u679c GET / forum / article / _search { \"query\" : { \"constant_score\" : { \"filter\" : { \"term\" : { \"articleID\" : \"XHDK-A-1293-#fJ3\" } } } } } { \"took\" : 1 , \"timed_out\" : false , \"_shards\" : { \"total\" : 5 , \"successful\" : 5 , \"failed\" : 0 } , \"hits\" : { \"total\" : 0 , \"max_score\" : null , \"hits\" : [] } } # \u4f7f\u7528 keyword\u67e5\u8be2 \uff0c\u53ef\u4ee5\u67e5\u8be2\u5230\u7ed3\u679c GET / forum / article / _search { \"query\" : { \"constant_score\" : { \"filter\" : { \"term\" : { \"articleID.keyword\" : \"XHDK-A-1293-#fJ3\" } } } } } { \"took\" : 2 , \"timed_out\" : false , \"_shards\" : { \"total\" : 5 , \"successful\" : 5 , \"failed\" : 0 } , \"hits\" : { \"total\" : 1 , \"max_score\" : 1 , \"hits\" : [ { \"_index\" : \"forum\" , \"_type\" : \"article\" , \"_id\" : \"1\" , \"_score\" : 1 , \"_source\" : { \"articleID\" : \"XHDK-A-1293-#fJ3\" , \"userID\" : 1 , \"hidden\" : false , \"postDate\" : \"2017-01-01\" } } ] } } articleID.keyword\uff0c\u662fes\u6700\u65b0\u7248\u672c\u5185\u7f6e\u5efa\u7acb\u7684field\uff0c\u5c31\u662f\u4e0d\u5206\u8bcd\u7684\u3002 \u6240\u4ee5\u4e00\u4e2aarticleID\u8fc7\u6765\u7684\u65f6\u5019\uff0c\u4f1a\u5efa\u7acb\u4e24\u6b21\u7d22\u5f15\uff0c \u4e00\u6b21\u662f\u81ea\u5df1\u672c\u8eab\uff0c\u662f\u8981\u5206\u8bcd\u7684\uff0c\u5206\u8bcd\u540e\u653e\u5165\u5012\u6392\u7d22\u5f15\uff1b \u53e6\u5916\u4e00\u6b21\u662f\u57fa\u4e8earticleID.keyword\uff0c\u4e0d\u5206\u8bcd\uff0c\u4fdd\u7559256\u4e2a\u5b57\u7b26\u6700\u591a\uff0c\u76f4\u63a5\u4e00\u4e2a\u5b57\u7b26\u4e32\u653e\u5165\u5012\u6392\u7d22\u5f15\u4e2d\u3002 \u6240\u4ee5term filter\uff0c\u5bf9text\u8fc7\u6ee4\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5185\u7f6e\u7684field.keyword\u6765\u8fdb\u884c\u5339\u914d\u3002 \u4f46\u662f\u6709\u4e2a\u95ee\u9898\uff0c\u9ed8\u8ba4\u5c31\u4fdd\u7559256\u4e2a\u5b57\u7b26\u3002 \u6240\u4ee5\u5c3d\u53ef\u80fd\u8fd8\u662f\u81ea\u5df1\u53bb\u624b\u52a8\u5efa\u7acb\u7d22\u5f15\uff0c\u6307\u5b9anot_analyzed\u5427\u3002\u5728\u6700\u65b0\u7248\u672c\u7684es\u4e2d\uff0c\u4e0d\u9700\u8981\u6307\u5b9anot_analyzed\u4e5f\u53ef\u4ee5\uff0c\u5c06type=keyword\u5373\u53ef\u3002 \uff086\uff09\u67e5\u770b\u5206\u8bcd GET /forum/_analyze { \"field\": \"articleID\", \"text\": \"XHDK-A-1293-#fJ3\" } \u9ed8\u8ba4\u662fanalyzed\u7684text\u7c7b\u578b\u7684field\uff0c\u5efa\u7acb\u5012\u6392\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5bf9\u6240\u6709\u7684articleID\u5206\u8bcd\uff0c \u5206\u8bcd\u4ee5\u540e\uff0c\u539f\u672c\u7684articleID\u5c31\u6ca1\u6709\u4e86\uff0c\u53ea\u6709\u5206\u8bcd\u540e\u7684\u5404\u4e2aword\u5b58\u5728\u4e8e\u5012\u6392\u7d22\u5f15\u4e2d\u3002 term\uff0c\u662f\u4e0d\u5bf9\u641c\u7d22\u6587\u672c\u5206\u8bcd\u7684\uff0cXHDK-A-1293-#fJ3 --> XHDK-A-1293-#fJ3\uff1b \u4f46\u662farticleID\u5efa\u7acb\u7d22\u5f15\u7684\u65f6\u5019\u8fdb\u884c\u4e86\u5206\u8bcd\uff0cXHDK-A-1293-#fJ3 --> xhdk\uff0ca\uff0c1293\uff0cfj3 \uff087\uff09\u91cd\u5efa\u7d22\u5f15 \u8bbe\u7f6e articleID.type: \"keyword\" DELETE /forum PUT /forum { \"mappings\": { \"article\": { \"properties\": { \"articleID\": { \"type\": \"keyword\" } } } } } POST /forum/article/_bulk { \"index\": { \"_id\": 1 }} { \"articleID\" : \"XHDK-A-1293-#fJ3\", \"userID\" : 1, \"hidden\": false, \"postDate\": \"2017-01-01\" } { \"index\": { \"_id\": 2 }} { \"articleID\" : \"KDKE-B-9947-#kL5\", \"userID\" : 1, \"hidden\": false, \"postDate\": \"2017-01-02\" } { \"index\": { \"_id\": 3 }} { \"articleID\" : \"JODL-X-1937-#pV7\", \"userID\" : 2, \"hidden\": false, \"postDate\": \"2017-01-01\" } { \"index\": { \"_id\": 4 }} { \"articleID\" : \"QQPX-R-3956-#aD8\", \"userID\" : 2, \"hidden\": true, \"postDate\": \"2017-01-02\" } \uff088\uff09\u91cd\u65b0\u6839\u636e\u5e16\u5b50ID\u548c\u53d1\u5e16\u65e5\u671f\u8fdb\u884c\u641c\u7d22 \u53ef\u4ee5\u641c\u7d22\u5230\u7ed3\u679c GET /forum/article/_search { \"query\" : { \"constant_score\" : { \"filter\" : { \"term\" : { \"articleID\" : \"XHDK-A-1293-#fJ3\" } } } } } 2\u3001\u68b3\u7406\u5b66\u5230\u7684\u77e5\u8bc6\u70b9 \uff081\uff09term filter\uff1a\u6839\u636eexact value\u8fdb\u884c\u641c\u7d22\uff0c\u6570\u5b57\u3001boolean\u3001date\u5929\u7136\u652f\u6301 \uff082\uff09text\u9700\u8981\u5efa\u7d22\u5f15\u65f6\u6307\u5b9a\u4e3a not_analyzed\uff0c\u624d\u80fd\u7528term query \uff083\uff09\u76f8\u5f53\u4e8eSQL\u4e2d\u7684\u5355\u4e2awhere\u6761\u4ef6 select * from forum . article where articleID = 'XHDK-A-1293-#fJ3' \u4e8c\u3001filter\u6267\u884c\u539f\u7406\u6df1\u5ea6\u5256\u6790\uff08bitset\u673a\u5236\u4e0ecaching\u673a\u5236\uff09 \uff081\uff09\u5728\u5012\u6392\u7d22\u5f15\u4e2d\u67e5\u627e\u641c\u7d22\u4e32\uff0c\u83b7\u53d6document list date\u6765\u4e3e\u4f8b word doc1 doc2 doc3 2017 - 01 - 01 * * 2017 - 02 - 02 * * 2017 - 03 - 03 * * * filter\uff1a2017-02-02 \u5230\u5012\u6392\u7d22\u5f15\u4e2d\u4e00\u627e\uff0c\u53d1\u73b02017-02-02\u5bf9\u5e94\u7684document list\u662fdoc2,doc3 \uff082\uff09\u4e3a\u6bcf\u4e2a\u5728\u5012\u6392\u7d22\u5f15\u4e2d\u641c\u7d22\u5230\u7684\u7ed3\u679c\uff0c\u6784\u5efa\u4e00\u4e2abitset\uff0c[0, 0, 0, 1, 0, 1] \u975e\u5e38\u91cd\u8981 \u4f7f\u7528\u627e\u5230\u7684doc list\uff0c\u6784\u5efa\u4e00\u4e2abitset\uff0c\u5c31\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f0\u62161\uff0c\u7528\u6765\u6807\u8bc6\u4e00\u4e2adoc\u5bf9\u4e00\u4e2afilter\u6761\u4ef6\u662f\u5426\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u5c31\u662f1\uff0c\u4e0d\u5339\u914d\u5c31\u662f0 [0, 1, 1] doc1\uff1a\u4e0d\u5339\u914d\u8fd9\u4e2afilter\u7684 doc2\u548cdo3\uff1a\u662f\u5339\u914d\u8fd9\u4e2afilter\u7684 \u5c3d\u53ef\u80fd\u7528\u7b80\u5355\u7684\u6570\u636e\u7ed3\u6784\u53bb\u5b9e\u73b0\u590d\u6742\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u8282\u7701\u5185\u5b58\u7a7a\u95f4\uff0c\u63d0\u5347\u6027\u80fd \uff083\uff09\u904d\u5386\u6bcf\u4e2a\u8fc7\u6ee4\u6761\u4ef6\u5bf9\u5e94\u7684bitset\uff0c\u4f18\u5148\u4ece\u6700\u7a00\u758f\u7684\u5f00\u59cb\u641c\u7d22\uff0c\u67e5\u627e\u6ee1\u8db3\u6240\u6709\u6761\u4ef6\u7684document \u540e\u9762\u4f1a\u8bb2\u89e3\uff0c\u4e00\u6b21\u6027\u5176\u5b9e\u53ef\u4ee5\u5728\u4e00\u4e2asearch\u8bf7\u6c42\u4e2d\uff0c\u53d1\u51fa\u591a\u4e2afilter\u6761\u4ef6\uff0c\u6bcf\u4e2afilter\u6761\u4ef6\u90fd\u4f1a\u5bf9\u5e94\u4e00\u4e2abitset \u904d\u5386\u6bcf\u4e2afilter\u6761\u4ef6\u5bf9\u5e94\u7684bitset\uff0c\u5148\u4ece\u6700\u7a00\u758f\u7684\u5f00\u59cb\u904d\u5386 [0, 0, 0, 1, 0, 0]\uff1a\u6bd4\u8f83\u7a00\u758f [0, 1, 0, 1, 0, 1] \u5148\u904d\u5386\u6bd4\u8f83\u7a00\u758f\u7684bitset\uff0c\u5c31\u53ef\u4ee5\u5148\u8fc7\u6ee4\u6389\u5c3d\u53ef\u80fd\u591a\u7684\u6570\u636e \u904d\u5386\u6240\u6709\u7684bitset\uff0c\u627e\u5230\u5339\u914d\u6240\u6709filter\u6761\u4ef6\u7684doc \u8bf7\u6c42\uff1afilter\uff0cpostDate=2017-01-01\uff0cuserID=1 postDate : [ 0 , 0 , 1 , 1 , 0 , 0 ] userID : [ 0 , 1 , 0 , 1 , 0 , 1 ] \u904d\u5386\u5b8c\u4e24\u4e2abitset\u4e4b\u540e\uff0c\u627e\u5230\u7684\u5339\u914d\u6240\u6709\u6761\u4ef6\u7684doc\uff0c\u5c31\u662fdoc4 \u5c31\u53ef\u4ee5\u5c06document\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de\u7ed9client\u4e86 \uff084\uff09caching bitset\uff0c\u8ddf\u8e2aquery\uff0c\u5728\u6700\u8fd1256\u4e2aquery\u4e2d\u8d85\u8fc7\u4e00\u5b9a\u6b21\u6570\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7f13\u5b58\u5176bitset\u3002 \u5bf9\u4e8e\u5c0fsegment\uff08<1000\uff0c\u6216<3%\uff09\uff0c\u4e0d\u7f13\u5b58bitset\u3002 \u6bd4\u5982postDate=2017-01-01\uff0c[0, 0, 1, 1, 0, 0]\uff0c\u53ef\u4ee5\u7f13\u5b58\u5728\u5185\u5b58\u4e2d\uff0c \u8fd9\u6837\u4e0b\u6b21\u5982\u679c\u518d\u6709\u8fd9\u4e2a\u6761\u4ef6\u8fc7\u6765\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u7528\u91cd\u65b0\u626b\u63cf\u5012\u6392\u7d22\u5f15\uff0c\u53cd\u590d\u751f\u6210bitset\uff0c\u53ef\u4ee5\u5927\u5e45\u5ea6\u63d0\u5347\u6027\u80fd\u3002 \u5728\u6700\u8fd1\u7684256\u4e2afilter\u4e2d\uff0c\u6709\u67d0\u4e2afilter\u8d85\u8fc7\u4e86\u4e00\u5b9a\u7684\u6b21\u6570\uff0c\u6b21\u6570\u4e0d\u56fa\u5b9a\uff0c\u5c31\u4f1a\u81ea\u52a8\u7f13\u5b58\u8fd9\u4e2afilter\u5bf9\u5e94\u7684bitset segment\uff08\u4e0a\u534a\u5b63\uff09\uff0cfilter\u9488\u5bf9\u5c0fsegment\u83b7\u53d6\u5230\u7684\u7ed3\u679c\uff0c\u53ef\u4ee5\u4e0d\u7f13\u5b58\uff0c segment\u8bb0\u5f55\u6570<1000\uff0c\u6216\u8005segment\u5927\u5c0f < index\u603b\u5927\u5c0f\u76843% segment\u6570\u636e\u91cf\u5f88\u5c0f\uff0c\u6b64\u65f6\u54ea\u6015\u662f\u626b\u63cf\u4e5f\u5f88\u5feb\uff1b segment\u4f1a\u5728\u540e\u53f0\u81ea\u52a8\u5408\u5e76\uff0c\u5c0fsegment\u5f88\u5feb\u5c31\u4f1a\u8ddf\u5176\u4ed6\u5c0fsegment\u5408\u5e76\u6210\u5927segment\uff0c \u6b64\u65f6\u5c31\u7f13\u5b58\u4e5f\u6ca1\u6709\u4ec0\u4e48\u610f\u4e49\uff0csegment\u5f88\u5feb\u5c31\u6d88\u5931\u4e86 \u9488\u5bf9\u4e00\u4e2a\u5c0fsegment\u7684bitset\uff0c[0, 0, 1, 0] filter\u6bd4query\u7684\u597d\u5904\u5c31\u5728\u4e8e\u4f1acaching\uff0c\u4f46\u662f\u4e4b\u524d\u4e0d\u77e5\u9053caching\u7684\u662f\u4ec0\u4e48\u4e1c\u897f\uff0c\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u4e00\u4e2afilter\u8fd4\u56de\u7684\u5b8c\u6574\u7684doc list\u6570\u636e\u7ed3\u679c\u3002\u800c\u662ffilter bitset\u7f13\u5b58\u8d77\u6765\u3002\u4e0b\u6b21\u4e0d\u7528\u626b\u63cf\u5012\u6392\u7d22\u5f15\u4e86\u3002 \uff085\uff09filter\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u6765\u8bf4\uff0c\u5728query\u4e4b\u524d\u6267\u884c\uff0c\u5148\u5c3d\u91cf\u8fc7\u6ee4\u6389\u5c3d\u53ef\u80fd\u591a\u7684\u6570\u636e query\uff1a\u662f\u4f1a\u8ba1\u7b97doc\u5bf9\u641c\u7d22\u6761\u4ef6\u7684relevance score\uff0c\u8fd8\u4f1a\u6839\u636e\u8fd9\u4e2ascore\u53bb\u6392\u5e8f filter\uff1a\u53ea\u662f\u7b80\u5355\u8fc7\u6ee4\u51fa\u60f3\u8981\u7684\u6570\u636e\uff0c\u4e0d\u8ba1\u7b97relevance score\uff0c\u4e5f\u4e0d\u6392\u5e8f \uff086\uff09\u5982\u679cdocument\u6709\u65b0\u589e\u6216\u4fee\u6539\uff0c\u90a3\u4e48cached bitset\u4f1a\u88ab\u81ea\u52a8\u66f4\u65b0 postDate=2017-01-01\uff0c[0, 0, 1, 0] document\uff0cid=5\uff0cpostDate=2017-01-01\uff0c\u4f1a\u81ea\u52a8\u66f4\u65b0\u5230postDate=2017-01-01\u8fd9\u4e2afilter\u7684bitset\u4e2d\uff0c \u5168\u81ea\u52a8\uff0c\u7f13\u5b58\u4f1a\u81ea\u52a8\u66f4\u65b0\u3002postDate=2017-01-01\u7684bitset\uff0c[0, 0, 1, 0, 1] document\uff0cid=1\uff0cpostDate=2016-12-30\uff0c\u4fee\u6539\u4e3apostDate-2017-01-01\uff0c\u6b64\u65f6\u4e5f\u4f1a\u81ea\u52a8\u66f4\u65b0bitset\uff0c [1, 0, 1, 0, 1] \uff087\uff09\u4ee5\u540e\u53ea\u8981\u662f\u6709\u76f8\u540c\u7684filter\u6761\u4ef6\u7684\uff0c\u4f1a\u76f4\u63a5\u6765\u4f7f\u7528\u8fd9\u4e2a\u8fc7\u6ee4\u6761\u4ef6\u5bf9\u5e94\u7684cached bitset \u4e09\u3001\u57fa\u4e8ebool\u7ec4\u5408\u591a\u4e2afilter\u6761\u4ef6\u6765\u641c\u7d22\u6570\u636e 1\u3001\u641c\u7d22\u53d1\u5e16\u65e5\u671f\u4e3a2017-01-01\uff0c\u6216\u8005\u5e16\u5b50ID\u4e3aXHDK-A-1293-#fJ3\u7684\u5e16\u5b50\uff0c \u540c\u65f6\u8981\u6c42\u5e16\u5b50\u7684\u53d1\u5e16\u65e5\u671f\u7edd\u5bf9\u4e0d\u4e3a2017-01-02 select * from forum . article where ( post_date = '2017-01-01' or article_id = 'XHDK-A-1293-#fJ3' ) and post_date != '2017-01-02' GET /forum/article/_search { \"query\": { \"constant_score\": { \"filter\": { \"bool\": { \"should\": [ {\"term\": { \"postDate\": \"2017-01-01\" }}, {\"term\": {\"articleID\": \"XHDK-A-1293-#fJ3\"}} ], \"must_not\": { \"term\": {\"postDate\": \"2017-01-02\"} } } } } } } filter\uff1a must\uff0c\uff0c\u5fc5\u987b\u5339\u914d should\uff0c\u53ef\u4ee5\u5339\u914d\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u5373\u53ef must_not, \u5fc5\u987b\u4e0d\u5339\u914d 2\u3001\u641c\u7d22\u5e16\u5b50ID\u4e3aXHDK-A-1293-#fJ3\uff0c\u6216\u8005\u662f\u5e16\u5b50ID\u4e3aJODL-X-1937-#pV7\u800c\u4e14\u53d1\u5e16\u65e5\u671f\u4e3a2017-01-01\u7684\u5e16\u5b50 select * from forum . article where article_id = 'XHDK-A-1293-#fJ3' or ( article_id = 'JODL-X-1937-#pV7' and post_date = '2017-01-01' ) GET /forum/article/_search { \"query\": { \"constant_score\": { \"filter\": { \"bool\": { \"should\": [ {\"term\": {\"articleID\": \"XHDK-A-1293-#fJ3\"}}, { \"bool\": { \"must\": [ {\"term\":{\"articleID\": \"JODL-X-1937-#pV7\"}}, {\"term\": {\"postDate\": \"2017-01-01\"}} ] } } ] } } } } } 3\u3001\u68b3\u7406\u5b66\u5230\u7684\u77e5\u8bc6\u70b9 \uff081\uff09bool\uff1amust\uff0cmust_not\uff0cshould\uff0c\u7ec4\u5408\u591a\u4e2a\u8fc7\u6ee4\u6761\u4ef6 \uff082\uff09bool\u53ef\u4ee5\u5d4c\u5957 \uff083\uff09\u76f8\u5f53\u4e8eSQL\u4e2d\u7684\u591a\u4e2aand\u6761\u4ef6\uff1a\u5f53\u4f60\u628a\u641c\u7d22\u8bed\u6cd5\u5b66\u597d\u4e86\u4ee5\u540e\uff0c\u57fa\u672c\u53ef\u4ee5\u5b9e\u73b0\u90e8\u5206\u5e38\u7528\u7684sql\u8bed\u6cd5\u5bf9\u5e94\u7684\u529f\u80fd \u56db\u3001\u4f7f\u7528terms\u641c\u7d22\u591a\u4e2a\u503c\u4ee5\u53ca\u591a\u503c\u641c\u7d22\u7ed3\u679c\u4f18\u5316 term: {\"field\": \"value\"} terms: {\"field\": [\"value1\", \"value2\"]} sql\u4e2d\u7684in select * from tbl where col in ( \"value1\" , \"value2\" ) 1\u3001\u4e3a\u5e16\u5b50\u6570\u636e\u589e\u52a0tag\u5b57\u6bb5 POST /forum/article/_bulk { \"update\": { \"_id\": \"1\"} } { \"doc\" : {\"tag\" : [\"java\", \"hadoop\"]} } { \"update\": { \"_id\": \"2\"} } { \"doc\" : {\"tag\" : [\"java\"]} } { \"update\": { \"_id\": \"3\"} } { \"doc\" : {\"tag\" : [\"hadoop\"]} } { \"update\": { \"_id\": \"4\"} } { \"doc\" : {\"tag\" : [\"java\", \"elasticsearch\"]} } 2\u3001\u641c\u7d22articleID\u4e3aKDKE-B-9947-#kL5\u6216QQPX-R-3956-#aD8\u7684\u5e16\u5b50\uff0c\u641c\u7d22tag\u4e2d\u5305\u542bjava\u7684\u5e16\u5b50 GET /forum/article/_search { \"query\": { \"constant_score\": { \"filter\": { \"terms\": { \"articleID\": [ \"KDKE-B-9947-#kL5\", \"QQPX-R-3956-#aD8\" ] } } } } } GET /forum/article/_search { \"query\" : { \"constant_score\" : { \"filter\" : { \"terms\" : { \"tag\" : [\"java\"] } } } } } \"took\": 2, \"timed_out\": false, \"_shards\": { \"total\": 5, \"successful\": 5, \"failed\": 0 }, \"hits\": { \"total\": 3, \"max_score\": 1, \"hits\": [ { \"_index\": \"forum\", \"_type\": \"article\", \"_id\": \"2\", \"_score\": 1, \"_source\": { \"articleID\": \"KDKE-B-9947-#kL5\", \"userID\": 1, \"hidden\": false, \"postDate\": \"2017-01-02\", \"tag\": [ \"java\" ] } }, { \"_index\": \"forum\", \"_type\": \"article\", \"_id\": \"4\", \"_score\": 1, \"_source\": { \"articleID\": \"QQPX-R-3956-#aD8\", \"userID\": 2, \"hidden\": true, \"postDate\": \"2017-01-02\", \"tag\": [ \"java\", \"elasticsearch\" ] } }, { \"_index\": \"forum\", \"_type\": \"article\", \"_id\": \"1\", \"_score\": 1, \"_source\": { \"articleID\": \"XHDK-A-1293-#fJ3\", \"userID\": 1, \"hidden\": false, \"postDate\": \"2017-01-01\", \"tag\": [ \"java\", \"hadoop\" ] } } ] } } 3\u3001\u4f18\u5316\u641c\u7d22\u7ed3\u679c\uff0c\u4ec5\u4ec5\u641c\u7d22tag\u53ea\u5305\u542bjava\u7684\u5e16\u5b50 POST /forum/article/_bulk { \"update\": { \"_id\": \"1\"} } { \"doc\" : {\"tag_cnt\" : 2} } { \"update\": { \"_id\": \"2\"} } { \"doc\" : {\"tag_cnt\" : 1} } { \"update\": { \"_id\": \"3\"} } { \"doc\" : {\"tag_cnt\" : 1} } { \"update\": { \"_id\": \"4\"} } { \"doc\" : {\"tag_cnt\" : 2} } GET /forum/article/_search { \"query\": { \"constant_score\": { \"filter\": { \"bool\": { \"must\": [ {\"term\": {\"tag_cnt\": 1}}, {\"terms\": {\"tag\": [\"java\"]}} ] } } } } } [\"java\", \"hadoop\", \"elasticsearch\"] 4\u3001\u5b66\u5230\u7684\u77e5\u8bc6\u70b9\u68b3\u7406 \uff081\uff09terms\u591a\u503c\u641c\u7d22 \uff082\uff09\u4f18\u5316terms\u591a\u503c\u641c\u7d22\u7684\u7ed3\u679c \uff083\uff09\u76f8\u5f53\u4e8eSQL\u4e2d\u7684in\u8bed\u53e5 \u4e94\u3001\u57fa\u4e8erange filter\u6765\u8fdb\u884c\u8303\u56f4\u8fc7\u6ee4 1\u3001\u4e3a\u5e16\u5b50\u6570\u636e\u589e\u52a0\u6d4f\u89c8\u91cf\u7684\u5b57\u6bb5 POST /forum/article/_bulk { \"update\": { \"_id\": \"1\"} } { \"doc\" : {\"view_cnt\" : 30} } { \"update\": { \"_id\": \"2\"} } { \"doc\" : {\"view_cnt\" : 50} } { \"update\": { \"_id\": \"3\"} } { \"doc\" : {\"view_cnt\" : 100} } { \"update\": { \"_id\": \"4\"} } { \"doc\" : {\"view_cnt\" : 80} } 2\u3001\u641c\u7d22\u6d4f\u89c8\u91cf\u572830~60\u4e4b\u95f4\u7684\u5e16\u5b50 GET /forum/article/_search { \"query\": { \"constant_score\": { \"filter\": { \"range\": { \"view_cnt\": { \"gt\": 30, \"lt\": 60 } } } } } } gt\u3001gte\u3001lt\u3001lte 3\u3001\u641c\u7d22\u53d1\u5e16\u65e5\u671f\u5728\u6700\u8fd11\u4e2a\u6708\u7684\u5e16\u5b50 POST /forum/article/_bulk { \"index\": { \"_id\": 5 }} { \"articleID\" : \"DHJK-B-1395-#Ky5\", \"userID\" : 3, \"hidden\": false, \"postDate\": \"2017-03-01\", \"tag\": [\"elasticsearch\"], \"tag_cnt\": 1, \"view_cnt\": 10 } GET /forum/article/_search { \"query\": { \"constant_score\": { \"filter\": { \"range\": { \"postDate\": { \"gt\": \"2017-03-10||-30d\" } } } } } } GET /forum/article/_search { \"query\": { \"constant_score\": { \"filter\": { \"range\": { \"postDate\": { \"gt\": \"now-30d\" } } } } } } 4\u3001\u68b3\u7406\u4e00\u4e0b\u5b66\u5230\u7684\u77e5\u8bc6\u70b9 \uff081\uff09range\uff0csql\u4e2d\u7684between\uff0c\u6216\u8005\u662f>=1\uff0c<=1 \uff082\uff09range\u505a\u8303\u56f4\u8fc7\u6ee4","title":"6\u3001ElasticSearch\u7ed3\u6784\u5316\u641c\u7d22"},{"location":"ElasticSearch/6\u3001ElasticSearch\u7ed3\u6784\u5316\u641c\u7d22/#term-filter","text":"1\u3001\u6839\u636e\u7528\u6237ID\u3001\u662f\u5426\u9690\u85cf\u3001\u5e16\u5b50ID\u3001\u53d1\u5e16\u65e5\u671f\u6765\u641c\u7d22\u5e16\u5b50 \uff081\uff09\u63d2\u5165\u4e00\u4e9b\u6d4b\u8bd5\u6570\u636e POST /forum/article/_bulk { \"index\": { \"_id\": 1 }} { \"articleID\" : \"XHDK-A-1293-#fJ3\", \"userID\" : 1, \"hidden\": false, \"postDate\": \"2017-01-01\" } { \"index\": { \"_id\": 2 }} { \"articleID\" : \"KDKE-B-9947-#kL5\", \"userID\" : 1, \"hidden\": false, \"postDate\": \"2017-01-02\" } { \"index\": { \"_id\": 3 }} { \"articleID\" : \"JODL-X-1937-#pV7\", \"userID\" : 2, \"hidden\": false, \"postDate\": \"2017-01-01\" } { \"index\": { \"_id\": 4 }} { \"articleID\" : \"QQPX-R-3956-#aD8\", \"userID\" : 2, \"hidden\": true, \"postDate\": \"2017-01-02\" } \u6574\u4e2aes\u662f\u652f\u6301json document\u683c\u5f0f\u7684\uff0c\u6240\u4ee5\u8bf4\u6269\u5c55\u6027\u548c\u7075\u6d3b\u6027\u975e\u5e38\u4e4b\u597d\u3002 \u5982\u679c\u540e\u7eed\u968f\u7740\u4e1a\u52a1\u9700\u6c42\u7684\u589e\u52a0\uff0c\u8981\u5728document\u4e2d\u589e\u52a0\u66f4\u591a\u7684field\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u968f\u65f6\u6dfb\u52a0field\u3002 \u4f46\u662f\u5982\u679c\u662f\u5728\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\uff0c\u6bd4\u5982mysql\uff0c\u6211\u4eec\u5efa\u7acb\u4e86\u4e00\u4e2a\u8868\uff0c\u73b0\u5728\u8981\u7ed9\u8868\u4e2d\u65b0\u589e\u4e00\u4e9bcolumn\uff0c\u5c31\u9700\u8981\u4fee\u6539\u8868\u7ed3\u6784 \u67e5\u770bmapping GET /forum/_mapping/article { \"forum\": { \"mappings\": { \"article\": { \"properties\": { \"articleID\": { \"type\": \"text\", \"fields\": { \"keyword\": { \"type\": \"keyword\", \"ignore_above\": 256 } } }, \"hidden\": { \"type\": \"boolean\" }, \"postDate\": { \"type\": \"date\" }, \"userID\": { \"type\": \"long\" } } } } } } \u73b0\u5728es 5.2\u7248\u672c\uff0ctype=text\uff0c\u9ed8\u8ba4\u4f1a\u8bbe\u7f6e\u4e24\u4e2afield \u4e00\u4e2a\u662ffield\u672c\u8eab\uff0c\u6bd4\u5982 articleID\uff0c\u5c31\u662f\u5206\u8bcd\u7684 \u8fd8\u6709\u4e00\u4e2a\u5c31\u662ffield.keyword\uff0c\u6bd4\u5982 articleID.keyword\uff0c\u9ed8\u8ba4\u4e0d\u5206\u8bcd\uff0c\u4f1a\u6700\u591a\u4fdd\u7559256\u4e2a\u5b57\u7b26 \uff082\uff09\u6839\u636e\u7528\u6237ID\u641c\u7d22\u5e16\u5b50 GET /forum/article/_search { \"query\" : { \"constant_score\" : { \"filter\" : { \"term\" : { \"userID\" : 1 } } } } } term filter/query\uff1a\u5bf9\u641c\u7d22\u6587\u672c\u4e0d\u5206\u8bcd\uff0c\u76f4\u63a5\u62ff\u53bb\u5012\u6392\u7d22\u5f15\u4e2d\u5339\u914d \u6bd4\u5982\u8bf4\uff0c \u5bf9\u641c\u7d22\u6587\u672c\u8fdb\u884c\u5206\u8bcd\uff0c\u201chelle world\u201d --> \u201chello\u201d\u548c\u201cworld\u201d\uff0c\u4e24\u4e2a\u8bcd\u5206\u522b\u53bb\u5012\u6392\u7d22\u5f15\u4e2d\u5339\u914d term\uff0c\u201chello world\u201d --> \u201chello world\u201d\uff0c\u76f4\u63a5\u53bb\u5012\u6392\u7d22\u5f15\u4e2d\u5339\u914d\u201chello world\u201d \uff083\uff09\u641c\u7d22\u6ca1\u6709\u9690\u85cf\u7684\u5e16\u5b50 GET /forum/article/_search { \"query\" : { \"constant_score\" : { \"filter\" : { \"term\" : { \"hidden\" : false } } } } } \uff084\uff09\u6839\u636e\u53d1\u5e16\u65e5\u671f\u641c\u7d22\u5e16\u5b50 GET /forum/article/_search { \"query\" : { \"constant_score\" : { \"filter\" : { \"term\" : { \"postDate\" : \"2017-01-01\" } } } } } \uff085\uff09\u6839\u636e\u5e16\u5b50ID\u641c\u7d22\u5e16\u5b50 # \u76f4\u63a5\u67e5\u8be2\uff0c\u67e5\u4e0d\u5230\u7ed3\u679c GET / forum / article / _search { \"query\" : { \"constant_score\" : { \"filter\" : { \"term\" : { \"articleID\" : \"XHDK-A-1293-#fJ3\" } } } } } { \"took\" : 1 , \"timed_out\" : false , \"_shards\" : { \"total\" : 5 , \"successful\" : 5 , \"failed\" : 0 } , \"hits\" : { \"total\" : 0 , \"max_score\" : null , \"hits\" : [] } } # \u4f7f\u7528 keyword\u67e5\u8be2 \uff0c\u53ef\u4ee5\u67e5\u8be2\u5230\u7ed3\u679c GET / forum / article / _search { \"query\" : { \"constant_score\" : { \"filter\" : { \"term\" : { \"articleID.keyword\" : \"XHDK-A-1293-#fJ3\" } } } } } { \"took\" : 2 , \"timed_out\" : false , \"_shards\" : { \"total\" : 5 , \"successful\" : 5 , \"failed\" : 0 } , \"hits\" : { \"total\" : 1 , \"max_score\" : 1 , \"hits\" : [ { \"_index\" : \"forum\" , \"_type\" : \"article\" , \"_id\" : \"1\" , \"_score\" : 1 , \"_source\" : { \"articleID\" : \"XHDK-A-1293-#fJ3\" , \"userID\" : 1 , \"hidden\" : false , \"postDate\" : \"2017-01-01\" } } ] } } articleID.keyword\uff0c\u662fes\u6700\u65b0\u7248\u672c\u5185\u7f6e\u5efa\u7acb\u7684field\uff0c\u5c31\u662f\u4e0d\u5206\u8bcd\u7684\u3002 \u6240\u4ee5\u4e00\u4e2aarticleID\u8fc7\u6765\u7684\u65f6\u5019\uff0c\u4f1a\u5efa\u7acb\u4e24\u6b21\u7d22\u5f15\uff0c \u4e00\u6b21\u662f\u81ea\u5df1\u672c\u8eab\uff0c\u662f\u8981\u5206\u8bcd\u7684\uff0c\u5206\u8bcd\u540e\u653e\u5165\u5012\u6392\u7d22\u5f15\uff1b \u53e6\u5916\u4e00\u6b21\u662f\u57fa\u4e8earticleID.keyword\uff0c\u4e0d\u5206\u8bcd\uff0c\u4fdd\u7559256\u4e2a\u5b57\u7b26\u6700\u591a\uff0c\u76f4\u63a5\u4e00\u4e2a\u5b57\u7b26\u4e32\u653e\u5165\u5012\u6392\u7d22\u5f15\u4e2d\u3002 \u6240\u4ee5term filter\uff0c\u5bf9text\u8fc7\u6ee4\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5185\u7f6e\u7684field.keyword\u6765\u8fdb\u884c\u5339\u914d\u3002 \u4f46\u662f\u6709\u4e2a\u95ee\u9898\uff0c\u9ed8\u8ba4\u5c31\u4fdd\u7559256\u4e2a\u5b57\u7b26\u3002 \u6240\u4ee5\u5c3d\u53ef\u80fd\u8fd8\u662f\u81ea\u5df1\u53bb\u624b\u52a8\u5efa\u7acb\u7d22\u5f15\uff0c\u6307\u5b9anot_analyzed\u5427\u3002\u5728\u6700\u65b0\u7248\u672c\u7684es\u4e2d\uff0c\u4e0d\u9700\u8981\u6307\u5b9anot_analyzed\u4e5f\u53ef\u4ee5\uff0c\u5c06type=keyword\u5373\u53ef\u3002 \uff086\uff09\u67e5\u770b\u5206\u8bcd GET /forum/_analyze { \"field\": \"articleID\", \"text\": \"XHDK-A-1293-#fJ3\" } \u9ed8\u8ba4\u662fanalyzed\u7684text\u7c7b\u578b\u7684field\uff0c\u5efa\u7acb\u5012\u6392\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5bf9\u6240\u6709\u7684articleID\u5206\u8bcd\uff0c \u5206\u8bcd\u4ee5\u540e\uff0c\u539f\u672c\u7684articleID\u5c31\u6ca1\u6709\u4e86\uff0c\u53ea\u6709\u5206\u8bcd\u540e\u7684\u5404\u4e2aword\u5b58\u5728\u4e8e\u5012\u6392\u7d22\u5f15\u4e2d\u3002 term\uff0c\u662f\u4e0d\u5bf9\u641c\u7d22\u6587\u672c\u5206\u8bcd\u7684\uff0cXHDK-A-1293-#fJ3 --> XHDK-A-1293-#fJ3\uff1b \u4f46\u662farticleID\u5efa\u7acb\u7d22\u5f15\u7684\u65f6\u5019\u8fdb\u884c\u4e86\u5206\u8bcd\uff0cXHDK-A-1293-#fJ3 --> xhdk\uff0ca\uff0c1293\uff0cfj3 \uff087\uff09\u91cd\u5efa\u7d22\u5f15 \u8bbe\u7f6e articleID.type: \"keyword\" DELETE /forum PUT /forum { \"mappings\": { \"article\": { \"properties\": { \"articleID\": { \"type\": \"keyword\" } } } } } POST /forum/article/_bulk { \"index\": { \"_id\": 1 }} { \"articleID\" : \"XHDK-A-1293-#fJ3\", \"userID\" : 1, \"hidden\": false, \"postDate\": \"2017-01-01\" } { \"index\": { \"_id\": 2 }} { \"articleID\" : \"KDKE-B-9947-#kL5\", \"userID\" : 1, \"hidden\": false, \"postDate\": \"2017-01-02\" } { \"index\": { \"_id\": 3 }} { \"articleID\" : \"JODL-X-1937-#pV7\", \"userID\" : 2, \"hidden\": false, \"postDate\": \"2017-01-01\" } { \"index\": { \"_id\": 4 }} { \"articleID\" : \"QQPX-R-3956-#aD8\", \"userID\" : 2, \"hidden\": true, \"postDate\": \"2017-01-02\" } \uff088\uff09\u91cd\u65b0\u6839\u636e\u5e16\u5b50ID\u548c\u53d1\u5e16\u65e5\u671f\u8fdb\u884c\u641c\u7d22 \u53ef\u4ee5\u641c\u7d22\u5230\u7ed3\u679c GET /forum/article/_search { \"query\" : { \"constant_score\" : { \"filter\" : { \"term\" : { \"articleID\" : \"XHDK-A-1293-#fJ3\" } } } } } 2\u3001\u68b3\u7406\u5b66\u5230\u7684\u77e5\u8bc6\u70b9 \uff081\uff09term filter\uff1a\u6839\u636eexact value\u8fdb\u884c\u641c\u7d22\uff0c\u6570\u5b57\u3001boolean\u3001date\u5929\u7136\u652f\u6301 \uff082\uff09text\u9700\u8981\u5efa\u7d22\u5f15\u65f6\u6307\u5b9a\u4e3a not_analyzed\uff0c\u624d\u80fd\u7528term query \uff083\uff09\u76f8\u5f53\u4e8eSQL\u4e2d\u7684\u5355\u4e2awhere\u6761\u4ef6 select * from forum . article where articleID = 'XHDK-A-1293-#fJ3'","title":"\u4e00\u3001\u4f7f\u7528term filter\u6765\u641c\u7d22\u6570\u636e"},{"location":"ElasticSearch/6\u3001ElasticSearch\u7ed3\u6784\u5316\u641c\u7d22/#filterbitsetcaching","text":"\uff081\uff09\u5728\u5012\u6392\u7d22\u5f15\u4e2d\u67e5\u627e\u641c\u7d22\u4e32\uff0c\u83b7\u53d6document list date\u6765\u4e3e\u4f8b word doc1 doc2 doc3 2017 - 01 - 01 * * 2017 - 02 - 02 * * 2017 - 03 - 03 * * * filter\uff1a2017-02-02 \u5230\u5012\u6392\u7d22\u5f15\u4e2d\u4e00\u627e\uff0c\u53d1\u73b02017-02-02\u5bf9\u5e94\u7684document list\u662fdoc2,doc3 \uff082\uff09\u4e3a\u6bcf\u4e2a\u5728\u5012\u6392\u7d22\u5f15\u4e2d\u641c\u7d22\u5230\u7684\u7ed3\u679c\uff0c\u6784\u5efa\u4e00\u4e2abitset\uff0c[0, 0, 0, 1, 0, 1] \u975e\u5e38\u91cd\u8981 \u4f7f\u7528\u627e\u5230\u7684doc list\uff0c\u6784\u5efa\u4e00\u4e2abitset\uff0c\u5c31\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f0\u62161\uff0c\u7528\u6765\u6807\u8bc6\u4e00\u4e2adoc\u5bf9\u4e00\u4e2afilter\u6761\u4ef6\u662f\u5426\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u5c31\u662f1\uff0c\u4e0d\u5339\u914d\u5c31\u662f0 [0, 1, 1] doc1\uff1a\u4e0d\u5339\u914d\u8fd9\u4e2afilter\u7684 doc2\u548cdo3\uff1a\u662f\u5339\u914d\u8fd9\u4e2afilter\u7684 \u5c3d\u53ef\u80fd\u7528\u7b80\u5355\u7684\u6570\u636e\u7ed3\u6784\u53bb\u5b9e\u73b0\u590d\u6742\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u8282\u7701\u5185\u5b58\u7a7a\u95f4\uff0c\u63d0\u5347\u6027\u80fd \uff083\uff09\u904d\u5386\u6bcf\u4e2a\u8fc7\u6ee4\u6761\u4ef6\u5bf9\u5e94\u7684bitset\uff0c\u4f18\u5148\u4ece\u6700\u7a00\u758f\u7684\u5f00\u59cb\u641c\u7d22\uff0c\u67e5\u627e\u6ee1\u8db3\u6240\u6709\u6761\u4ef6\u7684document \u540e\u9762\u4f1a\u8bb2\u89e3\uff0c\u4e00\u6b21\u6027\u5176\u5b9e\u53ef\u4ee5\u5728\u4e00\u4e2asearch\u8bf7\u6c42\u4e2d\uff0c\u53d1\u51fa\u591a\u4e2afilter\u6761\u4ef6\uff0c\u6bcf\u4e2afilter\u6761\u4ef6\u90fd\u4f1a\u5bf9\u5e94\u4e00\u4e2abitset \u904d\u5386\u6bcf\u4e2afilter\u6761\u4ef6\u5bf9\u5e94\u7684bitset\uff0c\u5148\u4ece\u6700\u7a00\u758f\u7684\u5f00\u59cb\u904d\u5386 [0, 0, 0, 1, 0, 0]\uff1a\u6bd4\u8f83\u7a00\u758f [0, 1, 0, 1, 0, 1] \u5148\u904d\u5386\u6bd4\u8f83\u7a00\u758f\u7684bitset\uff0c\u5c31\u53ef\u4ee5\u5148\u8fc7\u6ee4\u6389\u5c3d\u53ef\u80fd\u591a\u7684\u6570\u636e \u904d\u5386\u6240\u6709\u7684bitset\uff0c\u627e\u5230\u5339\u914d\u6240\u6709filter\u6761\u4ef6\u7684doc \u8bf7\u6c42\uff1afilter\uff0cpostDate=2017-01-01\uff0cuserID=1 postDate : [ 0 , 0 , 1 , 1 , 0 , 0 ] userID : [ 0 , 1 , 0 , 1 , 0 , 1 ] \u904d\u5386\u5b8c\u4e24\u4e2abitset\u4e4b\u540e\uff0c\u627e\u5230\u7684\u5339\u914d\u6240\u6709\u6761\u4ef6\u7684doc\uff0c\u5c31\u662fdoc4 \u5c31\u53ef\u4ee5\u5c06document\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de\u7ed9client\u4e86 \uff084\uff09caching bitset\uff0c\u8ddf\u8e2aquery\uff0c\u5728\u6700\u8fd1256\u4e2aquery\u4e2d\u8d85\u8fc7\u4e00\u5b9a\u6b21\u6570\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7f13\u5b58\u5176bitset\u3002 \u5bf9\u4e8e\u5c0fsegment\uff08<1000\uff0c\u6216<3%\uff09\uff0c\u4e0d\u7f13\u5b58bitset\u3002 \u6bd4\u5982postDate=2017-01-01\uff0c[0, 0, 1, 1, 0, 0]\uff0c\u53ef\u4ee5\u7f13\u5b58\u5728\u5185\u5b58\u4e2d\uff0c \u8fd9\u6837\u4e0b\u6b21\u5982\u679c\u518d\u6709\u8fd9\u4e2a\u6761\u4ef6\u8fc7\u6765\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u7528\u91cd\u65b0\u626b\u63cf\u5012\u6392\u7d22\u5f15\uff0c\u53cd\u590d\u751f\u6210bitset\uff0c\u53ef\u4ee5\u5927\u5e45\u5ea6\u63d0\u5347\u6027\u80fd\u3002 \u5728\u6700\u8fd1\u7684256\u4e2afilter\u4e2d\uff0c\u6709\u67d0\u4e2afilter\u8d85\u8fc7\u4e86\u4e00\u5b9a\u7684\u6b21\u6570\uff0c\u6b21\u6570\u4e0d\u56fa\u5b9a\uff0c\u5c31\u4f1a\u81ea\u52a8\u7f13\u5b58\u8fd9\u4e2afilter\u5bf9\u5e94\u7684bitset segment\uff08\u4e0a\u534a\u5b63\uff09\uff0cfilter\u9488\u5bf9\u5c0fsegment\u83b7\u53d6\u5230\u7684\u7ed3\u679c\uff0c\u53ef\u4ee5\u4e0d\u7f13\u5b58\uff0c segment\u8bb0\u5f55\u6570<1000\uff0c\u6216\u8005segment\u5927\u5c0f < index\u603b\u5927\u5c0f\u76843% segment\u6570\u636e\u91cf\u5f88\u5c0f\uff0c\u6b64\u65f6\u54ea\u6015\u662f\u626b\u63cf\u4e5f\u5f88\u5feb\uff1b segment\u4f1a\u5728\u540e\u53f0\u81ea\u52a8\u5408\u5e76\uff0c\u5c0fsegment\u5f88\u5feb\u5c31\u4f1a\u8ddf\u5176\u4ed6\u5c0fsegment\u5408\u5e76\u6210\u5927segment\uff0c \u6b64\u65f6\u5c31\u7f13\u5b58\u4e5f\u6ca1\u6709\u4ec0\u4e48\u610f\u4e49\uff0csegment\u5f88\u5feb\u5c31\u6d88\u5931\u4e86 \u9488\u5bf9\u4e00\u4e2a\u5c0fsegment\u7684bitset\uff0c[0, 0, 1, 0] filter\u6bd4query\u7684\u597d\u5904\u5c31\u5728\u4e8e\u4f1acaching\uff0c\u4f46\u662f\u4e4b\u524d\u4e0d\u77e5\u9053caching\u7684\u662f\u4ec0\u4e48\u4e1c\u897f\uff0c\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u4e00\u4e2afilter\u8fd4\u56de\u7684\u5b8c\u6574\u7684doc list\u6570\u636e\u7ed3\u679c\u3002\u800c\u662ffilter bitset\u7f13\u5b58\u8d77\u6765\u3002\u4e0b\u6b21\u4e0d\u7528\u626b\u63cf\u5012\u6392\u7d22\u5f15\u4e86\u3002 \uff085\uff09filter\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u6765\u8bf4\uff0c\u5728query\u4e4b\u524d\u6267\u884c\uff0c\u5148\u5c3d\u91cf\u8fc7\u6ee4\u6389\u5c3d\u53ef\u80fd\u591a\u7684\u6570\u636e query\uff1a\u662f\u4f1a\u8ba1\u7b97doc\u5bf9\u641c\u7d22\u6761\u4ef6\u7684relevance score\uff0c\u8fd8\u4f1a\u6839\u636e\u8fd9\u4e2ascore\u53bb\u6392\u5e8f filter\uff1a\u53ea\u662f\u7b80\u5355\u8fc7\u6ee4\u51fa\u60f3\u8981\u7684\u6570\u636e\uff0c\u4e0d\u8ba1\u7b97relevance score\uff0c\u4e5f\u4e0d\u6392\u5e8f \uff086\uff09\u5982\u679cdocument\u6709\u65b0\u589e\u6216\u4fee\u6539\uff0c\u90a3\u4e48cached bitset\u4f1a\u88ab\u81ea\u52a8\u66f4\u65b0 postDate=2017-01-01\uff0c[0, 0, 1, 0] document\uff0cid=5\uff0cpostDate=2017-01-01\uff0c\u4f1a\u81ea\u52a8\u66f4\u65b0\u5230postDate=2017-01-01\u8fd9\u4e2afilter\u7684bitset\u4e2d\uff0c \u5168\u81ea\u52a8\uff0c\u7f13\u5b58\u4f1a\u81ea\u52a8\u66f4\u65b0\u3002postDate=2017-01-01\u7684bitset\uff0c[0, 0, 1, 0, 1] document\uff0cid=1\uff0cpostDate=2016-12-30\uff0c\u4fee\u6539\u4e3apostDate-2017-01-01\uff0c\u6b64\u65f6\u4e5f\u4f1a\u81ea\u52a8\u66f4\u65b0bitset\uff0c [1, 0, 1, 0, 1] \uff087\uff09\u4ee5\u540e\u53ea\u8981\u662f\u6709\u76f8\u540c\u7684filter\u6761\u4ef6\u7684\uff0c\u4f1a\u76f4\u63a5\u6765\u4f7f\u7528\u8fd9\u4e2a\u8fc7\u6ee4\u6761\u4ef6\u5bf9\u5e94\u7684cached bitset","title":"\u4e8c\u3001filter\u6267\u884c\u539f\u7406\u6df1\u5ea6\u5256\u6790\uff08bitset\u673a\u5236\u4e0ecaching\u673a\u5236\uff09"},{"location":"ElasticSearch/6\u3001ElasticSearch\u7ed3\u6784\u5316\u641c\u7d22/#boolfilter","text":"1\u3001\u641c\u7d22\u53d1\u5e16\u65e5\u671f\u4e3a2017-01-01\uff0c\u6216\u8005\u5e16\u5b50ID\u4e3aXHDK-A-1293-#fJ3\u7684\u5e16\u5b50\uff0c \u540c\u65f6\u8981\u6c42\u5e16\u5b50\u7684\u53d1\u5e16\u65e5\u671f\u7edd\u5bf9\u4e0d\u4e3a2017-01-02 select * from forum . article where ( post_date = '2017-01-01' or article_id = 'XHDK-A-1293-#fJ3' ) and post_date != '2017-01-02' GET /forum/article/_search { \"query\": { \"constant_score\": { \"filter\": { \"bool\": { \"should\": [ {\"term\": { \"postDate\": \"2017-01-01\" }}, {\"term\": {\"articleID\": \"XHDK-A-1293-#fJ3\"}} ], \"must_not\": { \"term\": {\"postDate\": \"2017-01-02\"} } } } } } } filter\uff1a must\uff0c\uff0c\u5fc5\u987b\u5339\u914d should\uff0c\u53ef\u4ee5\u5339\u914d\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u5373\u53ef must_not, \u5fc5\u987b\u4e0d\u5339\u914d 2\u3001\u641c\u7d22\u5e16\u5b50ID\u4e3aXHDK-A-1293-#fJ3\uff0c\u6216\u8005\u662f\u5e16\u5b50ID\u4e3aJODL-X-1937-#pV7\u800c\u4e14\u53d1\u5e16\u65e5\u671f\u4e3a2017-01-01\u7684\u5e16\u5b50 select * from forum . article where article_id = 'XHDK-A-1293-#fJ3' or ( article_id = 'JODL-X-1937-#pV7' and post_date = '2017-01-01' ) GET /forum/article/_search { \"query\": { \"constant_score\": { \"filter\": { \"bool\": { \"should\": [ {\"term\": {\"articleID\": \"XHDK-A-1293-#fJ3\"}}, { \"bool\": { \"must\": [ {\"term\":{\"articleID\": \"JODL-X-1937-#pV7\"}}, {\"term\": {\"postDate\": \"2017-01-01\"}} ] } } ] } } } } } 3\u3001\u68b3\u7406\u5b66\u5230\u7684\u77e5\u8bc6\u70b9 \uff081\uff09bool\uff1amust\uff0cmust_not\uff0cshould\uff0c\u7ec4\u5408\u591a\u4e2a\u8fc7\u6ee4\u6761\u4ef6 \uff082\uff09bool\u53ef\u4ee5\u5d4c\u5957 \uff083\uff09\u76f8\u5f53\u4e8eSQL\u4e2d\u7684\u591a\u4e2aand\u6761\u4ef6\uff1a\u5f53\u4f60\u628a\u641c\u7d22\u8bed\u6cd5\u5b66\u597d\u4e86\u4ee5\u540e\uff0c\u57fa\u672c\u53ef\u4ee5\u5b9e\u73b0\u90e8\u5206\u5e38\u7528\u7684sql\u8bed\u6cd5\u5bf9\u5e94\u7684\u529f\u80fd","title":"\u4e09\u3001\u57fa\u4e8ebool\u7ec4\u5408\u591a\u4e2afilter\u6761\u4ef6\u6765\u641c\u7d22\u6570\u636e"},{"location":"ElasticSearch/6\u3001ElasticSearch\u7ed3\u6784\u5316\u641c\u7d22/#terms","text":"term: {\"field\": \"value\"} terms: {\"field\": [\"value1\", \"value2\"]} sql\u4e2d\u7684in select * from tbl where col in ( \"value1\" , \"value2\" ) 1\u3001\u4e3a\u5e16\u5b50\u6570\u636e\u589e\u52a0tag\u5b57\u6bb5 POST /forum/article/_bulk { \"update\": { \"_id\": \"1\"} } { \"doc\" : {\"tag\" : [\"java\", \"hadoop\"]} } { \"update\": { \"_id\": \"2\"} } { \"doc\" : {\"tag\" : [\"java\"]} } { \"update\": { \"_id\": \"3\"} } { \"doc\" : {\"tag\" : [\"hadoop\"]} } { \"update\": { \"_id\": \"4\"} } { \"doc\" : {\"tag\" : [\"java\", \"elasticsearch\"]} } 2\u3001\u641c\u7d22articleID\u4e3aKDKE-B-9947-#kL5\u6216QQPX-R-3956-#aD8\u7684\u5e16\u5b50\uff0c\u641c\u7d22tag\u4e2d\u5305\u542bjava\u7684\u5e16\u5b50 GET /forum/article/_search { \"query\": { \"constant_score\": { \"filter\": { \"terms\": { \"articleID\": [ \"KDKE-B-9947-#kL5\", \"QQPX-R-3956-#aD8\" ] } } } } } GET /forum/article/_search { \"query\" : { \"constant_score\" : { \"filter\" : { \"terms\" : { \"tag\" : [\"java\"] } } } } } \"took\": 2, \"timed_out\": false, \"_shards\": { \"total\": 5, \"successful\": 5, \"failed\": 0 }, \"hits\": { \"total\": 3, \"max_score\": 1, \"hits\": [ { \"_index\": \"forum\", \"_type\": \"article\", \"_id\": \"2\", \"_score\": 1, \"_source\": { \"articleID\": \"KDKE-B-9947-#kL5\", \"userID\": 1, \"hidden\": false, \"postDate\": \"2017-01-02\", \"tag\": [ \"java\" ] } }, { \"_index\": \"forum\", \"_type\": \"article\", \"_id\": \"4\", \"_score\": 1, \"_source\": { \"articleID\": \"QQPX-R-3956-#aD8\", \"userID\": 2, \"hidden\": true, \"postDate\": \"2017-01-02\", \"tag\": [ \"java\", \"elasticsearch\" ] } }, { \"_index\": \"forum\", \"_type\": \"article\", \"_id\": \"1\", \"_score\": 1, \"_source\": { \"articleID\": \"XHDK-A-1293-#fJ3\", \"userID\": 1, \"hidden\": false, \"postDate\": \"2017-01-01\", \"tag\": [ \"java\", \"hadoop\" ] } } ] } } 3\u3001\u4f18\u5316\u641c\u7d22\u7ed3\u679c\uff0c\u4ec5\u4ec5\u641c\u7d22tag\u53ea\u5305\u542bjava\u7684\u5e16\u5b50 POST /forum/article/_bulk { \"update\": { \"_id\": \"1\"} } { \"doc\" : {\"tag_cnt\" : 2} } { \"update\": { \"_id\": \"2\"} } { \"doc\" : {\"tag_cnt\" : 1} } { \"update\": { \"_id\": \"3\"} } { \"doc\" : {\"tag_cnt\" : 1} } { \"update\": { \"_id\": \"4\"} } { \"doc\" : {\"tag_cnt\" : 2} } GET /forum/article/_search { \"query\": { \"constant_score\": { \"filter\": { \"bool\": { \"must\": [ {\"term\": {\"tag_cnt\": 1}}, {\"terms\": {\"tag\": [\"java\"]}} ] } } } } } [\"java\", \"hadoop\", \"elasticsearch\"] 4\u3001\u5b66\u5230\u7684\u77e5\u8bc6\u70b9\u68b3\u7406 \uff081\uff09terms\u591a\u503c\u641c\u7d22 \uff082\uff09\u4f18\u5316terms\u591a\u503c\u641c\u7d22\u7684\u7ed3\u679c \uff083\uff09\u76f8\u5f53\u4e8eSQL\u4e2d\u7684in\u8bed\u53e5","title":"\u56db\u3001\u4f7f\u7528terms\u641c\u7d22\u591a\u4e2a\u503c\u4ee5\u53ca\u591a\u503c\u641c\u7d22\u7ed3\u679c\u4f18\u5316"},{"location":"ElasticSearch/6\u3001ElasticSearch\u7ed3\u6784\u5316\u641c\u7d22/#range-filter","text":"1\u3001\u4e3a\u5e16\u5b50\u6570\u636e\u589e\u52a0\u6d4f\u89c8\u91cf\u7684\u5b57\u6bb5 POST /forum/article/_bulk { \"update\": { \"_id\": \"1\"} } { \"doc\" : {\"view_cnt\" : 30} } { \"update\": { \"_id\": \"2\"} } { \"doc\" : {\"view_cnt\" : 50} } { \"update\": { \"_id\": \"3\"} } { \"doc\" : {\"view_cnt\" : 100} } { \"update\": { \"_id\": \"4\"} } { \"doc\" : {\"view_cnt\" : 80} } 2\u3001\u641c\u7d22\u6d4f\u89c8\u91cf\u572830~60\u4e4b\u95f4\u7684\u5e16\u5b50 GET /forum/article/_search { \"query\": { \"constant_score\": { \"filter\": { \"range\": { \"view_cnt\": { \"gt\": 30, \"lt\": 60 } } } } } } gt\u3001gte\u3001lt\u3001lte 3\u3001\u641c\u7d22\u53d1\u5e16\u65e5\u671f\u5728\u6700\u8fd11\u4e2a\u6708\u7684\u5e16\u5b50 POST /forum/article/_bulk { \"index\": { \"_id\": 5 }} { \"articleID\" : \"DHJK-B-1395-#Ky5\", \"userID\" : 3, \"hidden\": false, \"postDate\": \"2017-03-01\", \"tag\": [\"elasticsearch\"], \"tag_cnt\": 1, \"view_cnt\": 10 } GET /forum/article/_search { \"query\": { \"constant_score\": { \"filter\": { \"range\": { \"postDate\": { \"gt\": \"2017-03-10||-30d\" } } } } } } GET /forum/article/_search { \"query\": { \"constant_score\": { \"filter\": { \"range\": { \"postDate\": { \"gt\": \"now-30d\" } } } } } } 4\u3001\u68b3\u7406\u4e00\u4e0b\u5b66\u5230\u7684\u77e5\u8bc6\u70b9 \uff081\uff09range\uff0csql\u4e2d\u7684between\uff0c\u6216\u8005\u662f>=1\uff0c<=1 \uff082\uff09range\u505a\u8303\u56f4\u8fc7\u6ee4","title":"\u4e94\u3001\u57fa\u4e8erange filter\u6765\u8fdb\u884c\u8303\u56f4\u8fc7\u6ee4"},{"location":"ElasticSearch/7\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f/","text":"\u624b\u52a8\u63a7\u5236\u5168\u6587\u68c0\u7d22\u7ed3\u679c\u7684\u7cbe\u51c6\u5ea6 1\u3001\u4e3a\u5e16\u5b50\u6570\u636e\u589e\u52a0\u6807\u9898\u5b57\u6bb5 POST /forum/article/_bulk { \"update\": { \"_id\": \"1\"} } { \"doc\" : {\"title\" : \"this is java and elasticsearch blog\"} } { \"update\": { \"_id\": \"2\"} } { \"doc\" : {\"title\" : \"this is java blog\"} } { \"update\": { \"_id\": \"3\"} } { \"doc\" : {\"title\" : \"this is elasticsearch blog\"} } { \"update\": { \"_id\": \"4\"} } { \"doc\" : {\"title\" : \"this is java, elasticsearch, hadoop blog\"} } { \"update\": { \"_id\": \"5\"} } { \"doc\" : {\"title\" : \"this is spark blog\"} } 2\u3001\u641c\u7d22\u6807\u9898\u4e2d\u5305\u542bjava\u6216elasticsearch\u7684blog \u8fd9\u4e2a\uff0c\u5c31\u8ddf\u4e4b\u524d\u7684\u90a3\u4e2aterm query\uff0c\u4e0d\u4e00\u6837\u4e86\u3002\u4e0d\u662f\u641c\u7d22exact value\uff0c\u662f\u8fdb\u884cfull text\u5168\u6587\u68c0\u7d22\u3002 match query\uff0c\u662f\u8d1f\u8d23\u8fdb\u884c\u5168\u6587\u68c0\u7d22\u7684\u3002 \u5f53\u7136\uff0c\u5982\u679c\u8981\u68c0\u7d22\u7684field\uff0c\u662fnot_analyzed\u7c7b\u578b\u7684\uff0c\u90a3\u4e48match query\u4e5f\u76f8\u5f53\u4e8eterm query\u3002 GET /forum/article/_search { \"query\": { \"match\": { \"title\": \"java elasticsearch\" } } } 3\u3001\u641c\u7d22\u6807\u9898\u4e2d\u5305\u542bjava\u548celasticsearch\u7684blog \u641c\u7d22\u7ed3\u679c\u7cbe\u51c6\u63a7\u5236\u7684\u7b2c\u4e00\u6b65\uff1a \u7075\u6d3b\u4f7f\u7528and\u5173\u952e\u5b57\uff0c\u5982\u679c\u4f60\u662f\u5e0c\u671b\u6240\u6709\u7684\u641c\u7d22\u5173\u952e\u5b57\u90fd\u8981\u5339\u914d\u7684\uff0c \u90a3\u4e48\u5c31\u7528and\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5355\u7eafmatch query\u65e0\u6cd5\u5b9e\u73b0\u7684\u6548\u679c GET /forum/article/_search { \"query\": { \"match\": { \"title\": { \"query\": \"java elasticsearch\", \"operator\": \"and\" } } } } 4\u3001\u641c\u7d22\u5305\u542bjava\uff0celasticsearch\uff0cspark\uff0chadoop\uff0c4\u4e2a\u5173\u952e\u5b57\u4e2d\uff0c\u81f3\u5c113\u4e2a\u7684blog \u63a7\u5236\u641c\u7d22\u7ed3\u679c\u7684\u7cbe\u51c6\u5ea6\u7684\u7b2c\u4e8c\u6b65\uff1a \u6307\u5b9a\u4e00\u4e9b\u5173\u952e\u5b57\u4e2d\uff0c\u5fc5\u987b\u81f3\u5c11\u5339\u914d\u5176\u4e2d\u7684\u591a\u5c11\u4e2a\u5173\u952e\u5b57\uff0c\u624d\u80fd\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de GET /forum/article/_search { \"query\": { \"match\": { \"title\": { \"query\": \"java elasticsearch spark hadoop\", \"minimum_should_match\": \"75%\" } } } } 5\u3001\u7528bool\u7ec4\u5408\u591a\u4e2a\u641c\u7d22\u6761\u4ef6\uff0c\u6765\u641c\u7d22title GET /forum/article/_search { \"query\": { \"bool\": { \"must\": { \"match\": { \"title\": \"java\" }}, \"must_not\": { \"match\": { \"title\": \"spark\" }}, \"should\": [ { \"match\": { \"title\": \"hadoop\" }}, { \"match\": { \"title\": \"elasticsearch\" }} ] } } } 6\u3001bool\u7ec4\u5408\u591a\u4e2a\u641c\u7d22\u6761\u4ef6\uff0c\u5982\u4f55\u8ba1\u7b97relevance score must\u548cshould\u641c\u7d22\u5bf9\u5e94\u7684\u5206\u6570\uff0c\u52a0\u8d77\u6765\uff0c\u9664\u4ee5must\u548cshould\u7684\u603b\u6570 \u6392\u540d\u7b2c\u4e00\uff1ajava\uff0c\u540c\u65f6\u5305\u542bshould\u4e2d\u6240\u6709\u7684\u5173\u952e\u5b57\uff0chadoop\uff0celasticsearch \u6392\u540d\u7b2c\u4e8c\uff1ajava\uff0c\u540c\u65f6\u5305\u542bshould\u4e2d\u7684elasticsearch \u6392\u540d\u7b2c\u4e09\uff1ajava\uff0c\u4e0d\u5305\u542bshould\u4e2d\u7684\u4efb\u4f55\u5173\u952e\u5b57 should\u662f\u53ef\u4ee5\u5f71\u54cd\u76f8\u5173\u5ea6\u5206\u6570\u7684 must\u662f\u786e\u4fdd\u8bf4\uff0c\u8c01\u5fc5\u987b\u6709\u8fd9\u4e2a\u5173\u952e\u5b57\uff0c\u540c\u65f6\u4f1a\u6839\u636e\u8fd9\u4e2amust\u7684\u6761\u4ef6\u53bb\u8ba1\u7b97\u51fadocument\u5bf9\u8fd9\u4e2a\u641c\u7d22\u6761\u4ef6\u7684relevance score \u5728\u6ee1\u8db3must\u7684\u57fa\u7840\u4e4b\u4e0a\uff0cshould\u4e2d\u7684\u6761\u4ef6\uff0c\u4e0d\u5339\u914d\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\u5982\u679c\u5339\u914d\u7684\u66f4\u591a\uff0c \u90a3\u4e48document\u7684relevance score\u5c31\u4f1a\u66f4\u9ad8 7\u3001\u641c\u7d22java\uff0chadoop\uff0cspark\uff0celasticsearch\uff0c\u81f3\u5c11\u5305\u542b\u5176\u4e2d3\u4e2a\u5173\u952e\u5b57 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cshould\u662f\u53ef\u4ee5\u4e0d\u5339\u914d\u4efb\u4f55\u4e00\u4e2a\u7684\uff0c \u6bd4\u5982\u4e0a\u9762\u7684\u641c\u7d22\u4e2d\uff0cthis is java blog\uff0c\u5c31\u4e0d\u5339\u914d\u4efb\u4f55\u4e00\u4e2ashould\u6761\u4ef6 \u4f46\u662f\u6709\u4e2a\u4f8b\u5916\u7684\u60c5\u51b5\uff0c\u5982\u679c\u6ca1\u6709must\u7684\u8bdd\uff0c\u90a3\u4e48should\u4e2d\u5fc5\u987b\u81f3\u5c11\u5339\u914d\u4e00\u4e2a\u624d\u53ef\u4ee5 \u6bd4\u5982\u4e0b\u9762\u7684\u641c\u7d22\uff0cshould\u4e2d\u67094\u4e2a\u6761\u4ef6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ea\u8981\u6ee1\u8db3\u5176\u4e2d\u4e00\u4e2a\u6761\u4ef6\uff0c\u5c31\u53ef\u4ee5\u5339\u914d\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de \u4f46\u662f\u53ef\u4ee5\u7cbe\u51c6\u63a7\u5236\uff0cshould\u76844\u4e2a\u6761\u4ef6\u4e2d\uff0c\u81f3\u5c11\u5339\u914d\u51e0\u4e2a\u624d\u80fd\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de GET /forum/article/_search { \"query\": { \"bool\": { \"should\": [ {\"match\": { \"title\": \"java\" }}, {\"match\": { \"title\": \"elasticsearch\"}}, {\"match\": { \"title\": \"hadoop\"}}, {\"match\": { \"title\": \"spark\"}} ], \"minimum_should_match\": 3 } } } \u68b3\u7406\u4e00\u4e0b\u5b66\u5230\u7684\u77e5\u8bc6\u70b9 1\u3001\u5168\u6587\u68c0\u7d22\u7684\u65f6\u5019\uff0c\u8fdb\u884c\u591a\u4e2a\u503c\u7684\u68c0\u7d22\uff0c\u6709\u4e24\u79cd\u505a\u6cd5\uff0cmatch query\uff1bshould 2\u3001\u63a7\u5236\u641c\u7d22\u7ed3\u679c\u7cbe\u51c6\u5ea6\uff1aand operator\uff0cminimum_should_match \u57fa\u4e8eterm+bool\u5b9e\u73b0\u7684multiword\u641c\u7d22\u5e95\u5c42\u539f\u7406\u5256\u6790 1\u3001\u666e\u901amatch\u5982\u4f55\u8f6c\u6362\u4e3aterm+should { \"match\" : { \"title\" : \"java elasticsearch\" } } \u4f7f\u7528\u8bf8\u5982\u4e0a\u9762\u7684match query\u8fdb\u884c\u591a\u503c\u641c\u7d22\u7684\u65f6\u5019\uff0ces\u4f1a\u5728\u5e95\u5c42\u81ea\u52a8\u5c06\u8fd9\u4e2amatch query\u8f6c\u6362\u4e3abool\u7684\u8bed\u6cd5 bool should\uff0c\u6307\u5b9a\u591a\u4e2a\u641c\u7d22\u8bcd\uff0c\u540c\u65f6\u4f7f\u7528term query { \"bool\" : { \"should\" : [ { \"term\" : { \"title\" : \"java\" }} , { \"term\" : { \"title\" : \"elasticsearch\" }} ] } } 2\u3001and match\u5982\u4f55\u8f6c\u6362\u4e3aterm+must { \"match\" : { \"title\" : { \"query\" : \"java elasticsearch\" , \"operator\" : \"and\" } } } { \"bool\" : { \"must\" : [ { \"term\" : { \"title\" : \"java\" }} , { \"term\" : { \"title\" : \"elasticsearch\" }} ] } } 3\u3001minimum_should_match\u5982\u4f55\u8f6c\u6362 { \"match\" : { \"title\" : { \"query\" : \"java elasticsearch hadoop spark\" , \"minimum_should_match\" : \"75%\" } } } { \"bool\" : { \"should\" : [ { \"term\" : { \"title\" : \"java\" }} , { \"term\" : { \"title\" : \"elasticsearch\" }} , { \"term\" : { \"title\" : \"hadoop\" }} , { \"term\" : { \"title\" : \"spark\" }} ], \"minimum_should_match\" : 3 } } \u8f6c\u6362\u8fc7\u7a0b\uff1a match query --> bool + term \u57fa\u4e8eboost\u7684\u7ec6\u7c92\u5ea6\u641c\u7d22\u6761\u4ef6\u6743\u91cd\u63a7\u5236 \u9700\u6c42\uff1a \u641c\u7d22\u6807\u9898\u4e2d\u5305\u542bjava\u7684\u5e16\u5b50\uff0c \u540c\u65f6\u5462\uff0c\u5982\u679c\u6807\u9898\u4e2d\u5305\u542bhadoop\u6216elasticsearch\u5c31\u4f18\u5148\u641c\u7d22\u51fa\u6765\uff0c \u540c\u65f6\u5462\uff0c\u5982\u679c\u4e00\u4e2a\u5e16\u5b50\u5305\u542bjava hadoop\uff0c \u4e00\u4e2a\u5e16\u5b50\u5305\u542bjava elasticsearch\uff0c\u5305\u542bhadoop\u7684\u5e16\u5b50\u8981\u6bd4elasticsearch\u4f18\u5148\u641c\u7d22\u51fa\u6765 \u77e5\u8bc6\u70b9\uff0c\u641c\u7d22\u6761\u4ef6\u7684\u6743\u91cd\uff0cboost\uff0c\u53ef\u4ee5\u5c06\u67d0\u4e2a\u641c\u7d22\u6761\u4ef6\u7684\u6743\u91cd\u52a0\u5927\uff0c \u6b64\u65f6\u5f53\u5339\u914d\u8fd9\u4e2a\u641c\u7d22\u6761\u4ef6\u548c\u5339\u914d\u53e6\u4e00\u4e2a\u641c\u7d22\u6761\u4ef6\u7684document\uff0c\u8ba1\u7b97relevance score\u65f6\uff0c \u5339\u914d\u6743\u91cd\u66f4\u5927\u7684\u641c\u7d22\u6761\u4ef6\u7684document\uff0crelevance score\u4f1a\u66f4\u9ad8\uff0c\u5f53\u7136\u4e5f\u5c31\u4f1a\u4f18\u5148\u88ab\u8fd4\u56de\u56de\u6765 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u641c\u7d22\u6761\u4ef6\u7684\u6743\u91cd\u90fd\u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f1 GET /forum/article/_search { \"query\": { \"bool\": { \"must\": [ { \"match\": { \"title\": \"blog\" } } ], \"should\": [ { \"match\": { \"title\": { \"query\": \"java\" } } }, { \"match\": { \"title\": { \"query\": \"hadoop\" } } }, { \"match\": { \"title\": { \"query\": \"elasticsearch\" } } }, { \"match\": { \"title\": { \"query\": \"spark\", \"boost\": 5 } } } ] } } } \u591ashard\u573a\u666f\u4e0brelevance score\u4e0d\u51c6\u786e\u95ee\u9898\u5927\u63ed\u79d8 1\u3001\u591ashard\u573a\u666f\u4e0brelevance score\u4e0d\u51c6\u786e\u95ee\u9898\u5927\u63ed\u79d8 \u5982\u679c\u4f60\u7684\u4e00\u4e2aindex\u6709\u591a\u4e2ashard\u7684\u8bdd\uff0c\u53ef\u80fd\u641c\u7d22\u7ed3\u679c\u4f1a\u4e0d\u51c6\u786e 2\u3001\u5982\u4f55\u89e3\u51b3\u8be5\u95ee\u9898\uff1f \uff081\uff09\u751f\u4ea7\u73af\u5883\u4e0b\uff0c\u6570\u636e\u91cf\u5927\uff0c\u5c3d\u53ef\u80fd\u5b9e\u73b0\u5747\u5300\u5206\u914d \u6570\u636e\u91cf\u5f88\u5927\u7684\u8bdd\uff0c\u5176\u5b9e\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5728\u6982\u7387\u5b66\u7684\u80cc\u666f\u4e0b\uff0ces\u90fd\u662f\u5728\u591a\u4e2ashard\u4e2d\u5747\u5300\u8def\u7531\u6570\u636e\u7684\uff0c \u8def\u7531\u7684\u65f6\u5019\u6839\u636e_id\uff0c\u8d1f\u8f7d\u5747\u8861 \u6bd4\u5982\u8bf4\u670910\u4e2adocument\uff0ctitle\u90fd\u5305\u542bjava\uff0c\u4e00\u5171\u67095\u4e2ashard\uff0c\u90a3\u4e48\u5728\u6982\u7387\u5b66\u7684\u80cc\u666f\u4e0b\uff0c \u5982\u679c\u8d1f\u8f7d\u5747\u8861\u7684\u8bdd\uff0c\u5176\u5b9e\u6bcf\u4e2ashard\u90fd\u5e94\u8be5\u67092\u4e2adoc\uff0ctitle\u5305\u542bjava \u5982\u679c\u8bf4\u6570\u636e\u5206\u5e03\u5747\u5300\u7684\u8bdd\uff0c\u5176\u5b9e\u5c31\u6ca1\u6709\u521a\u624d\u8bf4\u7684\u90a3\u4e2a\u95ee\u9898\u4e86 \uff082\uff09\u6d4b\u8bd5\u73af\u5883\u4e0b\uff0c\u5c06\u7d22\u5f15\u7684primary shard\u8bbe\u7f6e\u4e3a1\u4e2a\uff0cnumber_of_shards=1\uff0cindex settings \u5982\u679c\u8bf4\u53ea\u6709\u4e00\u4e2ashard\uff0c\u90a3\u4e48\u5f53\u7136\uff0c\u6240\u6709\u7684document\u90fd\u5728\u8fd9\u4e2ashard\u91cc\u9762\uff0c\u5c31\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\u4e86 \uff083\uff09\u6d4b\u8bd5\u73af\u5883\u4e0b\uff0c\u641c\u7d22\u9644\u5e26search_type=dfs_query_then_fetch\u53c2\u6570\uff0c\u4f1a\u5c06local IDF\u53d6\u51fa\u6765\u8ba1\u7b97global IDF \u8ba1\u7b97\u4e00\u4e2adoc\u7684\u76f8\u5173\u5ea6\u5206\u6570\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5c06\u6240\u6709shard\u5bf9\u7684local IDF\u8ba1\u7b97\u4e00\u4e0b\uff0c\u83b7\u53d6\u51fa\u6765\uff0c \u5728\u672c\u5730\u8fdb\u884cglobal IDF\u5206\u6570\u7684\u8ba1\u7b97\uff0c\u4f1a\u5c06\u6240\u6709shard\u7684doc\u4f5c\u4e3a\u4e0a\u4e0b\u6587\u6765\u8fdb\u884c\u8ba1\u7b97\uff0c\u4e5f\u80fd\u786e\u4fdd\u51c6\u786e\u6027\u3002 \u4f46\u662fproduction\u751f\u4ea7\u73af\u5883\u4e0b\uff0c\u4e0d\u63a8\u8350\u8fd9\u4e2a\u53c2\u6570\uff0c\u56e0\u4e3a\u6027\u80fd\u5f88\u5dee\u3002 \u57fa\u4e8edis_max\u5b9e\u73b0best fields\u7b56\u7565\u8fdb\u884c\u591a\u5b57\u6bb5\u641c\u7d22 1\u3001\u4e3a\u5e16\u5b50\u6570\u636e\u589e\u52a0content\u5b57\u6bb5 POST /forum/article/_bulk { \"index\": { \"_id\": \"1\"} } {\"title\" : \"this is java and elasticsearch blog\"} { \"index\": { \"_id\": \"2\"} } {\"title\" : \"this is java blog\"} { \"index\": { \"_id\": \"3\"} } {\"title\" : \"this is elasticsearch blog\"} { \"index\": { \"_id\": \"4\"} } {\"title\" : \"this is java, elasticsearch, hadoop blog\"} { \"index\": { \"_id\": \"5\"} } {\"title\" : \"this is spark blog\"} POST /forum/article/_bulk { \"update\": { \"_id\": \"1\"} } { \"doc\" : {\"content\" : \"i like to write best elasticsearch article\"} } { \"update\": { \"_id\": \"2\"} } { \"doc\" : {\"content\" : \"i think java is the best programming language\"} } { \"update\": { \"_id\": \"3\"} } { \"doc\" : {\"content\" : \"i am only an elasticsearch beginner\"} } { \"update\": { \"_id\": \"4\"} } { \"doc\" : {\"content\" : \"elasticsearch and hadoop are all very good solution, i am a beginner\"} } { \"update\": { \"_id\": \"5\"} } { \"doc\" : {\"content\" : \"spark is best big data solution based on scala ,an programming language similar to java\"} } 2\u3001\u641c\u7d22title\u6216content\u4e2d\u5305\u542bjava\u6216solution\u7684\u5e16\u5b50 \u4e0b\u9762\u8fd9\u4e2a\u5c31\u662fmulti-field\u641c\u7d22\uff0c\u591a\u5b57\u6bb5\u641c\u7d22 GET /forum/article/_search { \"query\": { \"bool\": { \"should\": [ { \"match\": { \"title\": \"java solution\" }}, { \"match\": { \"content\": \"java solution\" }} ] } } } 3\u3001\u7ed3\u679c\u5206\u6790 \u671f\u671b\u7684\u662fdoc5\uff0c\u7ed3\u679c\u662fdoc2,doc4\u6392\u5728\u4e86\u524d\u9762 \u8ba1\u7b97\u6bcf\u4e2adocument\u7684relevance score\uff1a\u6bcf\u4e2aquery\u7684\u5206\u6570\uff0c\u4e58\u4ee5matched query\u6570\u91cf\uff0c\u9664\u4ee5\u603bquery\u6570\u91cf \u7b97\u4e00\u4e0bdoc4\u7684\u5206\u6570 { \"match\": { \"title\": \"java solution\" }}\uff0c\u9488\u5bf9doc4\uff0c\u662f\u6709\u4e00\u4e2a\u5206\u6570\u7684 { \"match\": { \"content\": \"java solution\" }}\uff0c\u9488\u5bf9doc4\uff0c\u4e5f\u662f\u6709\u4e00\u4e2a\u5206\u6570\u7684 \u6240\u4ee5\u662f\u4e24\u4e2a\u5206\u6570\u52a0\u8d77\u6765\uff0c\u6bd4\u5982\u8bf4\uff0c1.1 + 1.2 = 2.3 matched query\u6570\u91cf = 2 \u603bquery\u6570\u91cf = 2 2.3 * 2 / 2 = 2.3 \u7b97\u4e00\u4e0bdoc5\u7684\u5206\u6570 { \"match\": { \"title\": \"java solution\" }}\uff0c\u9488\u5bf9doc5\uff0c\u662f\u6ca1\u6709\u5206\u6570\u7684 { \"match\": { \"content\": \"java solution\" }}\uff0c\u9488\u5bf9doc5\uff0c\u662f\u6709\u4e00\u4e2a\u5206\u6570\u7684 \u6240\u4ee5\u8bf4\uff0c\u53ea\u6709\u4e00\u4e2aquery\u662f\u6709\u5206\u6570\u7684\uff0c\u6bd4\u59822.3 matched query\u6570\u91cf = 1 \u603bquery\u6570\u91cf = 2 2.3 * 1 / 2 = 1.15 doc5\u7684\u5206\u6570 = 1.15 < doc4\u7684\u5206\u6570 = 2.3 4\u3001best fields\u7b56\u7565\uff0cdis_max best fields\u7b56\u7565\uff0c\u5c31\u662f\u8bf4\uff0c\u641c\u7d22\u5230\u7684\u7ed3\u679c\uff0c\u5e94\u8be5\u662f\u67d0\u4e00\u4e2afield\u4e2d\u5339\u914d\u5230\u4e86\u5c3d\u53ef\u80fd\u591a\u7684\u5173\u952e\u8bcd\uff0c\u88ab\u6392\u5728\u524d\u9762\uff1b\u800c\u4e0d\u662f\u5c3d\u53ef\u80fd\u591a\u7684field\u5339\u914d\u5230\u4e86\u5c11\u6570\u7684\u5173\u952e\u8bcd\uff0c\u6392\u5728\u4e86\u524d\u9762 dis_max\u8bed\u6cd5\uff0c\u76f4\u63a5\u53d6\u591a\u4e2aquery\u4e2d\uff0c\u5206\u6570\u6700\u9ad8\u7684\u90a3\u4e00\u4e2aquery\u7684\u5206\u6570\u5373\u53ef { \"match\": { \"title\": \"java solution\" }}\uff0c\u9488\u5bf9doc4\uff0c\u662f\u6709\u4e00\u4e2a\u5206\u6570\u7684\uff0c1.1 { \"match\": { \"content\": \"java solution\" }}\uff0c\u9488\u5bf9doc4\uff0c\u4e5f\u662f\u6709\u4e00\u4e2a\u5206\u6570\u7684\uff0c1.2 \u53d6\u6700\u5927\u5206\u6570\uff0c1.2 { \"match\": { \"title\": \"java solution\" }}\uff0c\u9488\u5bf9doc5\uff0c\u662f\u6ca1\u6709\u5206\u6570\u7684 { \"match\": { \"content\": \"java solution\" }}\uff0c\u9488\u5bf9doc5\uff0c\u662f\u6709\u4e00\u4e2a\u5206\u6570\u7684\uff0c2.3 \u53d6\u6700\u5927\u5206\u6570\uff0c2.3 \u7136\u540edoc4\u7684\u5206\u6570 = 1.2 < doc5\u7684\u5206\u6570 = 2.3\uff0c\u6240\u4ee5doc5\u5c31\u53ef\u4ee5\u6392\u5728\u66f4\u524d\u9762\u7684\u5730\u65b9\uff0c\u7b26\u5408\u6211\u4eec\u7684\u9700\u8981 GET /forum/article/_search { \"query\": { \"dis_max\": { \"queries\": [ {\"match\": {\"title\": \"java solution\"}}, {\"match\": {\"content\": \"java solution\"}} ] } } } \u57fa\u4e8etie_breaker\u53c2\u6570\u4f18\u5316dis_max\u641c\u7d22\u6548\u679c 1\u3001\u641c\u7d22title\u6216content\u4e2d\u5305\u542bjava beginner\u7684\u5e16\u5b50 GET /forum/article/_search { \"query\": { \"dis_max\": { \"queries\": [ { \"match\": { \"title\": \"java beginner\" }}, { \"match\": { \"body\": \"java beginner\" }} ] } } } \u6709\u4e9b\u573a\u666f\u4e0d\u662f\u592a\u597d\u590d\u73b0\u7684\uff0c\u56e0\u4e3a\u662f\u8fd9\u6837\uff0c\u4f60\u9700\u8981\u5c1d\u8bd5\u53bb\u6784\u9020\u4e0d\u540c\u7684\u6587\u672c\uff0c\u7136\u540e\u53bb\u6784\u9020\u4e00\u4e9b\u641c\u7d22\u51fa\u6765\uff0c\u53bb\u8fbe\u5230\u4f60\u8981\u7684\u4e00\u4e2a\u6548\u679c \u53ef\u80fd\u5728\u5b9e\u9645\u573a\u666f\u4e2d\u51fa\u73b0\u7684\u4e00\u4e2a\u60c5\u51b5\u662f\u8fd9\u6837\u7684\uff1a \uff081\uff09\u67d0\u4e2a\u5e16\u5b50\uff0cdoc1\uff0ctitle\u4e2d\u5305\u542bjava\uff0ccontent\u4e0d\u5305\u542bjava beginner\u4efb\u4f55\u4e00\u4e2a\u5173\u952e\u8bcd \uff082\uff09\u67d0\u4e2a\u5e16\u5b50\uff0cdoc2\uff0ccontent\u4e2d\u5305\u542bbeginner\uff0ctitle\u4e2d\u4e0d\u5305\u542b\u4efb\u4f55\u4e00\u4e2a\u5173\u952e\u8bcd \uff083\uff09\u67d0\u4e2a\u5e16\u5b50\uff0cdoc3\uff0ctitle\u4e2d\u5305\u542bjava\uff0ccontent\u4e2d\u5305\u542bbeginner \uff084\uff09\u6700\u7ec8\u641c\u7d22\uff0c\u53ef\u80fd\u51fa\u6765\u7684\u7ed3\u679c\u662f\uff0cdoc1\u548cdoc2\u6392\u5728doc3\u7684\u524d\u9762\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u671f\u671b\u7684doc3\u6392\u5728\u6700\u524d\u9762 dis_max\uff0c\u53ea\u662f\u53d6\u5206\u6570\u6700\u9ad8\u7684\u90a3\u4e2aquery\u7684\u5206\u6570\u800c\u5df2\u3002 2\u3001dis_max\u53ea\u53d6\u67d0\u4e00\u4e2aquery\u6700\u5927\u7684\u5206\u6570\uff0c\u5b8c\u5168\u4e0d\u8003\u8651\u5176\u4ed6query\u7684\u5206\u6570 3\u3001\u4f7f\u7528tie_breaker\u5c06\u5176\u4ed6query\u7684\u5206\u6570\u4e5f\u8003\u8651\u8fdb\u53bb tie_breaker\u53c2\u6570\u7684\u610f\u4e49\uff0c\u5728\u4e8e\u8bf4\uff0c\u5c06\u5176\u4ed6query\u7684\u5206\u6570\uff0c\u4e58\u4ee5tie_breaker\uff0c\u7136\u540e\u7efc\u5408\u4e0e\u6700\u9ad8\u5206\u6570\u7684\u90a3\u4e2aquery\u7684\u5206\u6570\uff0c\u7efc\u5408\u5728\u4e00\u8d77\u8fdb\u884c\u8ba1\u7b97 \u9664\u4e86\u53d6\u6700\u9ad8\u5206\u4ee5\u5916\uff0c\u8fd8\u4f1a\u8003\u8651\u5176\u4ed6\u7684query\u7684\u5206\u6570 tie_breaker\u7684\u503c\uff0c\u57280~1\u4e4b\u95f4\uff0c\u662f\u4e2a\u5c0f\u6570\uff0c\u5c31ok GET /forum/article/_search { \"query\": { \"dis_max\": { \"queries\": [ { \"match\": { \"title\": \"java beginner\" }}, { \"match\": { \"body\": \"java beginner\" }} ], \"tie_breaker\": 0.3 } } } \u57fa\u4e8emulti_match\u8bed\u6cd5\u5b9e\u73b0dis_max+tie_breaker GET /forum/article/_search { \"query\": { \"multi_match\": { \"query\": \"java solution\", \"type\": \"best_fields\", \"fields\": [\"title^2\", \"content\"], \"tie_breaker\": 0.3, \"minimum_should_match\": \"50%\" } } } GET /forum/article/_search { \"query\": { \"dis_max\": { \"queries\": [ { \"match\": { \"title\": { \"query\": \"java beginner\", \"minimum_should_match\": \"50%\", \"boost\": 2 } } }, { \"match\": { \"body\": { \"query\": \"java beginner\", \"minimum_should_match\": \"30%\" } } } ], \"tie_breaker\": 0.3 } } } minimum_should_match\uff0c\u4e3b\u8981\u662f\u7528\u6765\u5e72\u561b\u7684\uff1f \u53bb\u957f\u5c3e\uff0clong tail \u957f\u5c3e\uff0c\u6bd4\u5982\u4f60\u641c\u7d225\u4e2a\u5173\u952e\u8bcd\uff0c\u4f46\u662f\u5f88\u591a\u7ed3\u679c\u662f\u53ea\u5339\u914d1\u4e2a\u5173\u952e\u8bcd\u7684\uff0c\u5176\u5b9e\u8ddf\u4f60\u60f3\u8981\u7684\u7ed3\u679c\u76f8\u5dee\u751a\u8fdc\uff0c\u8fd9\u4e9b\u7ed3\u679c\u5c31\u662f\u957f\u5c3e minimum_should_match\uff0c\u63a7\u5236\u641c\u7d22\u7ed3\u679c\u7684\u7cbe\u51c6\u5ea6\uff0c\u53ea\u6709\u5339\u914d\u4e00\u5b9a\u6570\u91cf\u7684\u5173\u952e\u8bcd\u7684\u6570\u636e\uff0c\u624d\u80fd\u8fd4\u56de \u57fa\u4e8emulti_match+most fiels\u7b56\u7565\u8fdb\u884cmulti-field\u641c\u7d22 \u4ecebest-fields\u6362\u6210most-fields\u7b56\u7565 best-fields\u7b56\u7565\uff0c\u4e3b\u8981\u662f\u8bf4\u5c06\u67d0\u4e00\u4e2afield\u5339\u914d\u5c3d\u53ef\u80fd\u591a\u7684\u5173\u952e\u8bcd\u7684doc\u4f18\u5148\u8fd4\u56de\u56de\u6765 most-fields\u7b56\u7565\uff0c\u4e3b\u8981\u662f\u8bf4\u5c3d\u53ef\u80fd\u8fd4\u56de\u66f4\u591afield\u5339\u914d\u5230\u67d0\u4e2a\u5173\u952e\u8bcd\u7684doc\uff0c\u4f18\u5148\u8fd4\u56de\u56de\u6765 POST /forum/_mapping/article { \"properties\": { \"sub_title\": { \"type\": \"string\", \"analyzer\": \"english\", \"fields\": { \"std\": { \"type\": \"string\", \"analyzer\": \"standard\" } } } } } POST /forum/article/_bulk { \"update\": { \"_id\": \"1\"} } { \"doc\" : {\"sub_title\" : \"learning more courses\"} } { \"update\": { \"_id\": \"2\"} } { \"doc\" : {\"sub_title\" : \"learned a lot of course\"} } { \"update\": { \"_id\": \"3\"} } { \"doc\" : {\"sub_title\" : \"we have a lot of fun\"} } { \"update\": { \"_id\": \"4\"} } { \"doc\" : {\"sub_title\" : \"both of them are good\"} } { \"update\": { \"_id\": \"5\"} } { \"doc\" : {\"sub_title\" : \"haha, hello world\"} } GET /forum/article/_search { \"query\": { \"match\": { \"sub_title\": \"learning courses\" } } } sub_title\u7528\u7684\u662fenligsh analyzer\uff0c\u6240\u4ee5\u8fd8\u539f\u4e86\u5355\u8bcd \u4e3a\u4ec0\u4e48\uff0c\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u7528\u7684\u662f\u7c7b\u4f3c\u4e8eenglish analyzer\u8fd9\u79cd\u5206\u8bcd\u5668\u7684\u8bdd\uff0c\u5c31\u4f1a\u5c06\u5355\u8bcd\u8fd8\u539f\u4e3a\u5176\u6700\u57fa\u672c\u7684\u5f62\u6001\uff0cstemmer learning --> learn learned --> learn courses --> course sub_titile: learning coureses --> learn course { \"doc\" : {\"sub_title\" : \"learned a lot of course\"} }\uff0c \u5c31\u6392\u5728\u4e86{ \"doc\" : {\"sub_title\" : \"learning more courses\"} }\u7684\u524d\u9762 GET /forum/article/_search { \"query\": { \"multi_match\": { \"query\": \"learning courses\", \"type\": \"most_fields\", \"fields\": [ \"sub_title\", \"sub_title.std\" ] } } } \u4e0d\u53ea\u662fTF/IDF\u7b97\u6cd5\u3002\u56e0\u4e3a\u4e0d\u540c\u7684query\uff0c\u4e0d\u540c\u7684\u8bed\u6cd5\uff0c\u90fd\u6709\u4e0d\u540c\u7684\u8ba1\u7b97score\u7684\u7ec6\u8282\u3002 \u4e0ebest_fields\u7684\u533a\u522b \uff081\uff09best_fields\uff0c\u662f\u5bf9\u591a\u4e2afield\u8fdb\u884c\u641c\u7d22\uff0c\u6311\u9009\u67d0\u4e2afield\u5339\u914d\u5ea6\u6700\u9ad8\u7684\u90a3\u4e2a\u5206\u6570\uff0c \u540c\u65f6\u5728\u591a\u4e2aquery\u6700\u9ad8\u5206\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8003\u8651\u5176\u4ed6query\u7684\u5206\u6570\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u4f60\u5bf9\u591a\u4e2afield\u8fdb\u884c\u641c\u7d22\uff0c\u5c31\u60f3\u641c\u7d22\u5230\u67d0\u4e00\u4e2afield\u5c3d\u53ef\u80fd\u5305\u542b\u66f4\u591a\u5173\u952e\u5b57\u7684\u6570\u636e \u4f18\u70b9\uff1a\u901a\u8fc7best_fields\u7b56\u7565\uff0c\u4ee5\u53ca\u7efc\u5408\u8003\u8651\u5176\u4ed6field\uff0c\u8fd8\u6709minimum_should_match\u652f\u6301\uff0c \u53ef\u4ee5\u5c3d\u53ef\u80fd\u7cbe\u51c6\u5730\u5c06\u5339\u914d\u7684\u7ed3\u679c\u63a8\u9001\u5230\u6700\u524d\u9762 \u7f3a\u70b9\uff1a\u9664\u4e86\u90a3\u4e9b\u7cbe\u51c6\u5339\u914d\u7684\u7ed3\u679c\uff0c\u5176\u4ed6\u5dee\u4e0d\u591a\u5927\u7684\u7ed3\u679c\uff0c\u6392\u5e8f\u7ed3\u679c\u4e0d\u662f\u592a\u5747\u5300\uff0c\u6ca1\u6709\u4ec0\u4e48\u533a\u5206\u5ea6\u4e86 \u5b9e\u9645\u7684\u4f8b\u5b50\uff1a\u767e\u5ea6\u4e4b\u7c7b\u7684\u641c\u7d22\u5f15\u64ce\uff0c\u6700\u5339\u914d\u7684\u5230\u6700\u524d\u9762\uff0c\u4f46\u662f\u5176\u4ed6\u7684\u5c31\u6ca1\u4ec0\u4e48\u533a\u5206\u5ea6\u4e86 \uff082\uff09most_fields\uff0c\u7efc\u5408\u591a\u4e2afield\u4e00\u8d77\u8fdb\u884c\u641c\u7d22\uff0c\u5c3d\u53ef\u80fd\u591a\u5730\u8ba9\u6240\u6709field\u7684query\u53c2\u4e0e\u5230\u603b\u5206\u6570\u7684\u8ba1\u7b97\u4e2d\u6765\uff0c \u6b64\u65f6\u5c31\u4f1a\u662f\u4e2a\u5927\u6742\u70e9\uff0c\u51fa\u73b0\u7c7b\u4f3cbest_fields\u6848\u4f8b\u6700\u5f00\u59cb\u7684\u90a3\u4e2a\u7ed3\u679c\uff0c\u7ed3\u679c\u4e0d\u4e00\u5b9a\u7cbe\u51c6\uff0c \u67d0\u4e00\u4e2adocument\u7684\u4e00\u4e2afield\u5305\u542b\u66f4\u591a\u7684\u5173\u952e\u5b57\uff0c\u4f46\u662f\u56e0\u4e3a\u5176\u4ed6document\u6709\u66f4\u591afield\u5339\u914d\u5230\u4e86\uff0c \u6240\u4ee5\u6392\u5728\u4e86\u524d\u9762\uff1b\u6240\u4ee5\u9700\u8981\u5efa\u7acb\u7c7b\u4f3csub_title.std\u8fd9\u6837\u7684field\uff0c\u5c3d\u53ef\u80fd\u8ba9\u67d0\u4e00\u4e2afield\u7cbe\u51c6\u5339\u914dquery string\uff0c \u8d21\u732e\u66f4\u9ad8\u7684\u5206\u6570\uff0c\u5c06\u66f4\u7cbe\u51c6\u5339\u914d\u7684\u6570\u636e\u6392\u5230\u524d\u9762 \u4f18\u70b9\uff1a\u5c06\u5c3d\u53ef\u80fd\u5339\u914d\u66f4\u591afield\u7684\u7ed3\u679c\u63a8\u9001\u5230\u6700\u524d\u9762\uff0c\u6574\u4e2a\u6392\u5e8f\u7ed3\u679c\u662f\u6bd4\u8f83\u5747\u5300\u7684 \u7f3a\u70b9\uff1a\u53ef\u80fd\u90a3\u4e9b\u7cbe\u51c6\u5339\u914d\u7684\u7ed3\u679c\uff0c\u65e0\u6cd5\u63a8\u9001\u5230\u6700\u524d\u9762 \u5b9e\u9645\u7684\u4f8b\u5b50\uff1awiki\uff0c\u660e\u663e\u7684most_fields\u7b56\u7565\uff0c\u641c\u7d22\u7ed3\u679c\u6bd4\u8f83\u5747\u5300\uff0c\u4f46\u662f\u7684\u786e\u8981\u7ffb\u597d\u51e0\u9875\u624d\u80fd\u627e\u5230\u6700\u5339\u914d\u7684\u7ed3\u679c \u4f7f\u7528most_fields\u7b56\u7565\u8fdb\u884ccross-fields search\u5f0a\u7aef\u5927\u63ed\u79d8 cross-fields\u641c\u7d22\uff0c\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6\uff0c\u8de8\u4e86\u591a\u4e2afield\u3002\u6bd4\u5982\u4e00\u4e2a\u4eba\uff0c\u6807\u8bc6\uff0c\u662f\u59d3\u540d\uff1b \u4e00\u4e2a\u5efa\u7b51\uff0c\u5b83\u7684\u6807\u8bc6\u662f\u5730\u5740\u3002\u59d3\u540d\u53ef\u4ee5\u6563\u843d\u5728\u591a\u4e2afield\u4e2d\uff0c \u6bd4\u5982first_name\u548clast_name\u4e2d\uff0c\u5730\u5740\u53ef\u4ee5\u6563\u843d\u5728country\uff0cprovince\uff0ccity\u4e2d\u3002 \u8de8\u591a\u4e2afield\u641c\u7d22\u4e00\u4e2a\u6807\u8bc6\uff0c\u6bd4\u5982\u641c\u7d22\u4e00\u4e2a\u4eba\u540d\uff0c\u6216\u8005\u4e00\u4e2a\u5730\u5740\uff0c\u5c31\u662fcross-fields\u641c\u7d22 \u521d\u6b65\u6765\u8bf4\uff0c\u5982\u679c\u8981\u5b9e\u73b0\uff0c\u53ef\u80fd\u7528most_fields\u6bd4\u8f83\u5408\u9002\u3002 \u56e0\u4e3abest_fields\u662f\u4f18\u5148\u641c\u7d22\u5355\u4e2afield\u6700\u5339\u914d\u7684\u7ed3\u679c\uff0ccross-fields\u672c\u8eab\u5c31\u4e0d\u662f\u4e00\u4e2afield\u7684\u95ee\u9898\u4e86\u3002 POST /forum/article/_bulk { \"update\": { \"_id\": \"1\"} } { \"doc\" : {\"author_first_name\" : \"Peter\", \"author_last_name\" : \"Smith\"} } { \"update\": { \"_id\": \"2\"} } { \"doc\" : {\"author_first_name\" : \"Smith\", \"author_last_name\" : \"Williams\"} } { \"update\": { \"_id\": \"3\"} } { \"doc\" : {\"author_first_name\" : \"Jack\", \"author_last_name\" : \"Ma\"} } { \"update\": { \"_id\": \"4\"} } { \"doc\" : {\"author_first_name\" : \"Robbin\", \"author_last_name\" : \"Li\"} } { \"update\": { \"_id\": \"5\"} } { \"doc\" : {\"author_first_name\" : \"Tonny\", \"author_last_name\" : \"Peter Smith\"} } GET /forum/article/_search { \"query\": { \"multi_match\": { \"query\": \"Peter Smith\", \"type\": \"most_fields\", \"fields\": [ \"author_first_name\", \"author_last_name\" ] } } } Peter Smith\uff0c\u5339\u914dauthor_first_name\uff0c\u5339\u914d\u5230\u4e86Smith\uff0c\u8fd9\u65f6\u5019\u5b83\u7684\u5206\u6570\u5f88\u9ad8\uff0c\u4e3a\u4ec0\u4e48\u554a\uff1f\uff1f\uff1f \u56e0\u4e3aIDF\u5206\u6570\u9ad8\uff0cIDF\u5206\u6570\u8981\u9ad8\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5339\u914d\u5230\u7684term\uff08Smith\uff09\uff0c\u5728\u6240\u6709doc\u4e2d\u7684\u51fa\u73b0\u9891\u7387\u8981\u4f4e\uff0cauthor_first_name field\u4e2d\uff0cSmith\u5c31\u51fa\u73b0\u8fc71\u6b21 Peter Smith\u8fd9\u4e2a\u4eba\uff0cdoc 1\uff0cSmith\u5728author_last_name\u4e2d\uff0c\u4f46\u662fauthor_last_name\u51fa\u73b0\u4e86\u4e24\u6b21Smith\uff0c\u6240\u4ee5\u5bfc\u81f4doc 1\u7684IDF\u5206\u6570\u8f83\u4f4e \u95ee\u98981\uff1a\u53ea\u662f\u627e\u5230\u5c3d\u53ef\u80fd\u591a\u7684field\u5339\u914d\u7684doc\uff0c\u800c\u4e0d\u662f\u67d0\u4e2afield\u5b8c\u5168\u5339\u914d\u7684doc \u95ee\u98982\uff1amost_fields\uff0c\u6ca1\u529e\u6cd5\u7528minimum_should_match\u53bb\u6389\u957f\u5c3e\u6570\u636e\uff0c\u5c31\u662f\u5339\u914d\u7684\u7279\u522b\u5c11\u7684\u7ed3\u679c \u95ee\u98983\uff1aTF/IDF\u7b97\u6cd5\uff0c\u6bd4\u5982Peter Smith\u548cSmith Williams\uff0c\u641c\u7d22Peter Smith\u7684\u65f6\u5019\uff0c\u7531\u4e8efirst_name\u4e2d\u5f88\u5c11\u6709Smith\u7684\uff0c\u6240\u4ee5query\u5728\u6240\u6709document\u4e2d\u7684\u9891\u7387\u5f88\u4f4e\uff0c\u5f97\u5230\u7684\u5206\u6570\u5f88\u9ad8\uff0c\u53ef\u80fdSmith Williams\u53cd\u800c\u4f1a\u6392\u5728Peter Smith\u524d\u9762 \u4f7f\u7528copy_to\u5b9a\u5236\u7ec4\u5408field\u89e3\u51b3cross-fields\u641c\u7d22\u5f0a\u7aef \u7528most_fields\u7b56\u7565\uff0c\u53bb\u5b9e\u73b0cross-fields\u641c\u7d22\uff0c\u67093\u5927\u5f0a\u7aef\uff0c\u800c\u4e14\u641c\u7d22\u7ed3\u679c\u4e5f\u663e\u793a\u51fa\u4e86\u8fd93\u5927\u5f0a\u7aef \u7b2c\u4e00\u4e2a\u529e\u6cd5\uff1a\u7528copy_to\uff0c\u5c06\u591a\u4e2afield\u7ec4\u5408\u6210\u4e00\u4e2afield \u95ee\u9898\u5176\u5b9e\u5c31\u51fa\u5728\u6709\u591a\u4e2afield\uff0c\u6709\u591a\u4e2afield\u4ee5\u540e\uff0c\u5c31\u5f88\u5c34\u5c2c\uff0c\u6211\u4eec\u53ea\u8981\u60f3\u529e\u6cd5\u5c06\u4e00\u4e2a\u6807\u8bc6\u8de8\u5728\u591a\u4e2afield\u7684\u60c5\u51b5\uff0c \u5408\u5e76\u6210\u4e00\u4e2afield\u5373\u53ef\u3002\u6bd4\u5982\u8bf4\uff0c\u4e00\u4e2a\u4eba\u540d\uff0c\u672c\u6765\u662ffirst_name\uff0clast_name\uff0c\u73b0\u5728\u5408\u5e76\u6210\u4e00\u4e2afull_name\uff0c\u4e0d\u5c31ok\u4e86\u5417\u3002\u3002\u3002\u3002\u3002 PUT /forum/_mapping/article { \"properties\": { \"new_author_first_name\": { \"type\": \"string\", \"copy_to\": \"new_author_full_name\" }, \"new_author_last_name\": { \"type\": \"string\", \"copy_to\": \"new_author_full_name\" }, \"new_author_full_name\": { \"type\": \"string\" } } } \u7528\u4e86\u8fd9\u4e2acopy_to\u8bed\u6cd5\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5c06\u591a\u4e2a\u5b57\u6bb5\u7684\u503c\u62f7\u8d1d\u5230\u4e00\u4e2a\u5b57\u6bb5\u4e2d\uff0c\u5e76\u5efa\u7acb\u5012\u6392\u7d22\u5f15 POST /forum/article/_bulk { \"update\": { \"_id\": \"1\"} } { \"doc\" : {\"new_author_first_name\" : \"Peter\", \"new_author_last_name\" : \"Smith\"} } --> Peter Smith { \"update\": { \"_id\": \"2\"} } { \"doc\" : {\"new_author_first_name\" : \"Smith\", \"new_author_last_name\" : \"Williams\"} } --> Smith Williams { \"update\": { \"_id\": \"3\"} } { \"doc\" : {\"new_author_first_name\" : \"Jack\", \"new_author_last_name\" : \"Ma\"} } --> Jack Ma { \"update\": { \"_id\": \"4\"} } { \"doc\" : {\"new_author_first_name\" : \"Robbin\", \"new_author_last_name\" : \"Li\"} } --> Robbin Li { \"update\": { \"_id\": \"5\"} } { \"doc\" : {\"new_author_first_name\" : \"Tonny\", \"new_author_last_name\" : \"Peter Smith\"} } --> Tonny Peter Smith GET /forum/article/_search { \"query\": { \"match\": { \"new_author_full_name\": \"Peter Smith\" } } } \u6bd4\u5982\u5b98\u7f51\u4e5f\u4f1a\u7ed9\u4e00\u4e9b\u4f8b\u5b50\uff0c\u8bf4\u7528\u4ec0\u4e48\u4ec0\u4e48\u6587\u672c\uff0c\u600e\u4e48\u600e\u4e48\u641c\u7d22\uff0c\u662f\u600e\u4e48\u600e\u4e48\u6837\u7684\u6548\u679c\u3002 es\u7248\u672c\u5728\u4e0d\u65ad\u8fed\u4ee3\uff0c\u8fd9\u4e2a\u6253\u5206\u7684\u7b97\u6cd5\u4e5f\u5728\u4e0d\u65ad\u7684\u8fed\u4ee3\u3002 \u6240\u4ee5\u6211\u4eec\u5176\u5b9e\u5f88\u96be\u8bf4\uff0c\u5bf9\u7c7b\u4f3c\u8fd9\u51e0\u8bb2\u8bb2\u89e3\u7684best_fields\uff0cmost_fields\uff0ccross_fields\uff0c\u5b8c\u5168\u590d\u73b0\u51fa\u6765\u5e94\u6709\u7684\u573a\u666f\u548c\u6548\u679c\u3002 \u66f4\u591a\u7684\u628a\u539f\u7406\u548c\u77e5\u8bc6\u70b9\u7ed9\u5927\u5bb6\u8bb2\u89e3\u6e05\u695a\uff0c\u5e26\u7740\u5927\u5bb6\u6f14\u7ec3\u4e00\u904d\u600e\u4e48\u64cd\u4f5c\u7684\uff0c\u505a\u4e00\u4e0b\u5b9e\u9a8c \u671f\u671b\u7684\u662f\u8bf4\uff0c\u6bd4\u5982\u5927\u5bb6\u81ea\u5df1\u5728\u5f00\u53d1\u641c\u7d22\u5e94\u7528\u7684\u65f6\u5019\uff0c\u78b0\u5230\u9700\u8981best_fields\u7684\u573a\u666f\uff0c \u77e5\u9053\u600e\u4e48\u505a\uff0c\u77e5\u9053best_fields\u7684\u539f\u7406\uff0c\u53ef\u4ee5\u8fbe\u5230\u4ec0\u4e48\u6548\u679c\uff1b \u78b0\u5230most_fields\u7684\u573a\u666f\uff0c\u77e5\u9053\u600e\u4e48\u505a\uff0c\u4ee5\u53ca\u539f\u7406\uff1b \u78b0\u5230\u641c\u641ccross_fields\u6807\u8bc6\u7684\u573a\u666f\uff0c\u77e5\u9053\u600e\u4e48\u505a\uff0c\u77e5\u9053\u539f\u7406\u662f\u4ec0\u4e48\uff0c\u6548\u679c\u662f\u4ec0\u4e48\u3002\u3002\u3002\u3002 \u95ee\u98981\uff1a\u53ea\u662f\u627e\u5230\u5c3d\u53ef\u80fd\u591a\u7684field\u5339\u914d\u7684doc\uff0c\u800c\u4e0d\u662f\u67d0\u4e2afield\u5b8c\u5168\u5339\u914d\u7684doc --> \u89e3\u51b3\uff0c\u6700\u5339\u914d\u7684document\u88ab\u6700\u5148\u8fd4\u56de \u95ee\u98982\uff1amost_fields\uff0c\u6ca1\u529e\u6cd5\u7528minimum_should_match\u53bb\u6389\u957f\u5c3e\u6570\u636e\uff0c\u5c31\u662f\u5339\u914d\u7684\u7279\u522b\u5c11\u7684\u7ed3\u679c --> \u89e3\u51b3\uff0c\u53ef\u4ee5\u4f7f\u7528minimum_should_match\u53bb\u6389\u957f\u5c3e\u6570\u636e \u95ee\u98983\uff1aTF/IDF\u7b97\u6cd5\uff0c\u6bd4\u5982Peter Smith\u548cSmith Williams\uff0c \u641c\u7d22Peter Smith\u7684\u65f6\u5019\uff0c\u7531\u4e8efirst_name\u4e2d\u5f88\u5c11\u6709Smith\u7684\uff0c \u6240\u4ee5query\u5728\u6240\u6709document\u4e2d\u7684\u9891\u7387\u5f88\u4f4e\uff0c\u5f97\u5230\u7684\u5206\u6570\u5f88\u9ad8\uff0c \u53ef\u80fdSmith Williams\u53cd\u800c\u4f1a\u6392\u5728Peter Smith\u524d\u9762 --> \u89e3\u51b3\uff0cSmith\u548cPeter\u5728\u4e00\u4e2afield\u4e86\uff0c\u6240\u4ee5\u5728\u6240\u6709document\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u662f\u5747\u5300\u7684\uff0c\u4e0d\u4f1a\u6709\u6781\u7aef\u7684\u504f\u5dee \u4f7f\u7528\u539f\u751fcross-fiels\u6280\u672f\u89e3\u51b3\u641c\u7d22\u5f0a\u7aef \u8bfe\u7a0b\u5927\u7eb2 GET /forum/article/_search { \"query\": { \"multi_match\": { \"query\": \"Peter Smith\", \"type\": \"cross_fields\", \"operator\": \"and\", \"fields\": [\"author_first_name\", \"author_last_name\"] } } } \u95ee\u98981\uff1a\u53ea\u662f\u627e\u5230\u5c3d\u53ef\u80fd\u591a\u7684field\u5339\u914d\u7684doc\uff0c\u800c\u4e0d\u662f\u67d0\u4e2afield\u5b8c\u5168\u5339\u914d\u7684doc --> \u89e3\u51b3\uff0c\u8981\u6c42\u6bcf\u4e2aterm\u90fd\u5fc5\u987b\u5728\u4efb\u4f55\u4e00\u4e2afield\u4e2d\u51fa\u73b0 Peter\uff0cSmith \u8981\u6c42Peter\u5fc5\u987b\u5728author_first_name\u6216author_last_name\u4e2d\u51fa\u73b0 \u8981\u6c42Smith\u5fc5\u987b\u5728author_first_name\u6216author_last_name\u4e2d\u51fa\u73b0 Peter Smith\u53ef\u80fd\u662f\u6a2a\u8de8\u5728\u591a\u4e2afield\u4e2d\u7684\uff0c\u6240\u4ee5\u5fc5\u987b\u8981\u6c42\u6bcf\u4e2aterm\u90fd\u5728\u67d0\u4e2afield\u4e2d\u51fa\u73b0\uff0c \u7ec4\u5408\u8d77\u6765\u624d\u80fd\u7ec4\u6210\u6211\u4eec\u60f3\u8981\u7684\u6807\u8bc6\uff0c\u5b8c\u6574\u7684\u4eba\u540d \u539f\u6765most_fiels\uff0c\u53ef\u80fd\u50cfSmith Williams\u4e5f\u53ef\u80fd\u4f1a\u51fa\u73b0\uff0c \u56e0\u4e3amost_fields\u8981\u6c42\u53ea\u662f\u4efb\u4f55\u4e00\u4e2afield\u5339\u914d\u4e86\u5c31\u53ef\u4ee5\uff0c\u5339\u914d\u7684field\u8d8a\u591a\uff0c\u5206\u6570\u8d8a\u9ad8 \u95ee\u98982\uff1amost_fields\uff0c\u6ca1\u529e\u6cd5\u7528minimum_should_match\u53bb\u6389\u957f\u5c3e\u6570\u636e\uff0c\u5c31\u662f\u5339\u914d\u7684\u7279\u522b\u5c11\u7684\u7ed3\u679c --> \u89e3\u51b3\uff0c\u65e2\u7136\u6bcf\u4e2aterm\u90fd\u8981\u6c42\u51fa\u73b0\uff0c\u957f\u5c3e\u80af\u5b9a\u88ab\u53bb\u9664\u6389\u4e86 java hadoop spark --> \u8fd93\u4e2aterm\u90fd\u5fc5\u987b\u5728\u4efb\u4f55\u4e00\u4e2afield\u51fa\u73b0\u4e86 \u6bd4\u5982\u6709\u7684document\uff0c\u53ea\u6709\u4e00\u4e2afield\u4e2d\u5305\u542b\u4e00\u4e2ajava\uff0c\u90a3\u5c31\u88ab\u5e72\u6389\u4e86\uff0c\u4f5c\u4e3a\u957f\u5c3e\u5c31\u6ca1\u4e86 \u95ee\u98983\uff1aTF/IDF\u7b97\u6cd5\uff0c\u6bd4\u5982Peter Smith\u548cSmith Williams\uff0c \u641c\u7d22Peter Smith\u7684\u65f6\u5019\uff0c\u7531\u4e8efirst_name\u4e2d\u5f88\u5c11\u6709Smith\u7684\uff0c \u6240\u4ee5query\u5728\u6240\u6709document\u4e2d\u7684\u9891\u7387\u5f88\u4f4e\uff0c\u5f97\u5230\u7684\u5206\u6570\u5f88\u9ad8\uff0c \u53ef\u80fdSmith Williams\u53cd\u800c\u4f1a\u6392\u5728Peter Smith\u524d\u9762 --> \u8ba1\u7b97IDF\u7684\u65f6\u5019\uff0c\u5c06\u6bcf\u4e2aquery\u5728\u6bcf\u4e2afield\u4e2d\u7684IDF\u90fd\u53d6\u51fa\u6765\uff0c\u53d6\u6700\u5c0f\u503c\uff0c\u5c31\u4e0d\u4f1a\u51fa\u73b0\u6781\u7aef\u60c5\u51b5\u4e0b\u7684\u6781\u5927\u503c\u4e86 Peter Smith Peter Smith Smith\uff0c\u5728author_first_name\u8fd9\u4e2afield\u4e2d\uff0c\u5728\u6240\u6709doc\u7684\u8fd9\u4e2aField\u4e2d\uff0c\u51fa\u73b0\u7684\u9891\u7387\u5f88\u4f4e\uff0c\u5bfc\u81f4IDF\u5206\u6570\u5f88\u9ad8\uff1b Smith\u5728\u6240\u6709doc\u7684author_last_name field\u4e2d\u7684\u9891\u7387\u7b97\u51fa\u4e00\u4e2aIDF\u5206\u6570\uff0c \u56e0\u4e3a\u4e00\u822c\u6765\u8bf4last_name\u4e2d\u7684Smith\u9891\u7387\u90fd\u8f83\u9ad8\uff0c\u6240\u4ee5IDF\u5206\u6570\u662f\u6b63\u5e38\u7684\uff0c\u4e0d\u4f1a\u592a\u9ad8\uff1b \u7136\u540e\u5bf9\u4e8eSmith\u6765\u8bf4\uff0c\u4f1a\u53d6\u4e24\u4e2aIDF\u5206\u6570\u4e2d\uff0c\u8f83\u5c0f\u7684\u90a3\u4e2a\u5206\u6570\u3002\u5c31\u4e0d\u4f1a\u51fa\u73b0IDF\u5206\u8fc7\u9ad8\u7684\u60c5\u51b5\u3002","title":"7\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f"},{"location":"ElasticSearch/7\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f/#_1","text":"1\u3001\u4e3a\u5e16\u5b50\u6570\u636e\u589e\u52a0\u6807\u9898\u5b57\u6bb5 POST /forum/article/_bulk { \"update\": { \"_id\": \"1\"} } { \"doc\" : {\"title\" : \"this is java and elasticsearch blog\"} } { \"update\": { \"_id\": \"2\"} } { \"doc\" : {\"title\" : \"this is java blog\"} } { \"update\": { \"_id\": \"3\"} } { \"doc\" : {\"title\" : \"this is elasticsearch blog\"} } { \"update\": { \"_id\": \"4\"} } { \"doc\" : {\"title\" : \"this is java, elasticsearch, hadoop blog\"} } { \"update\": { \"_id\": \"5\"} } { \"doc\" : {\"title\" : \"this is spark blog\"} } 2\u3001\u641c\u7d22\u6807\u9898\u4e2d\u5305\u542bjava\u6216elasticsearch\u7684blog \u8fd9\u4e2a\uff0c\u5c31\u8ddf\u4e4b\u524d\u7684\u90a3\u4e2aterm query\uff0c\u4e0d\u4e00\u6837\u4e86\u3002\u4e0d\u662f\u641c\u7d22exact value\uff0c\u662f\u8fdb\u884cfull text\u5168\u6587\u68c0\u7d22\u3002 match query\uff0c\u662f\u8d1f\u8d23\u8fdb\u884c\u5168\u6587\u68c0\u7d22\u7684\u3002 \u5f53\u7136\uff0c\u5982\u679c\u8981\u68c0\u7d22\u7684field\uff0c\u662fnot_analyzed\u7c7b\u578b\u7684\uff0c\u90a3\u4e48match query\u4e5f\u76f8\u5f53\u4e8eterm query\u3002 GET /forum/article/_search { \"query\": { \"match\": { \"title\": \"java elasticsearch\" } } } 3\u3001\u641c\u7d22\u6807\u9898\u4e2d\u5305\u542bjava\u548celasticsearch\u7684blog \u641c\u7d22\u7ed3\u679c\u7cbe\u51c6\u63a7\u5236\u7684\u7b2c\u4e00\u6b65\uff1a \u7075\u6d3b\u4f7f\u7528and\u5173\u952e\u5b57\uff0c\u5982\u679c\u4f60\u662f\u5e0c\u671b\u6240\u6709\u7684\u641c\u7d22\u5173\u952e\u5b57\u90fd\u8981\u5339\u914d\u7684\uff0c \u90a3\u4e48\u5c31\u7528and\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5355\u7eafmatch query\u65e0\u6cd5\u5b9e\u73b0\u7684\u6548\u679c GET /forum/article/_search { \"query\": { \"match\": { \"title\": { \"query\": \"java elasticsearch\", \"operator\": \"and\" } } } } 4\u3001\u641c\u7d22\u5305\u542bjava\uff0celasticsearch\uff0cspark\uff0chadoop\uff0c4\u4e2a\u5173\u952e\u5b57\u4e2d\uff0c\u81f3\u5c113\u4e2a\u7684blog \u63a7\u5236\u641c\u7d22\u7ed3\u679c\u7684\u7cbe\u51c6\u5ea6\u7684\u7b2c\u4e8c\u6b65\uff1a \u6307\u5b9a\u4e00\u4e9b\u5173\u952e\u5b57\u4e2d\uff0c\u5fc5\u987b\u81f3\u5c11\u5339\u914d\u5176\u4e2d\u7684\u591a\u5c11\u4e2a\u5173\u952e\u5b57\uff0c\u624d\u80fd\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de GET /forum/article/_search { \"query\": { \"match\": { \"title\": { \"query\": \"java elasticsearch spark hadoop\", \"minimum_should_match\": \"75%\" } } } } 5\u3001\u7528bool\u7ec4\u5408\u591a\u4e2a\u641c\u7d22\u6761\u4ef6\uff0c\u6765\u641c\u7d22title GET /forum/article/_search { \"query\": { \"bool\": { \"must\": { \"match\": { \"title\": \"java\" }}, \"must_not\": { \"match\": { \"title\": \"spark\" }}, \"should\": [ { \"match\": { \"title\": \"hadoop\" }}, { \"match\": { \"title\": \"elasticsearch\" }} ] } } } 6\u3001bool\u7ec4\u5408\u591a\u4e2a\u641c\u7d22\u6761\u4ef6\uff0c\u5982\u4f55\u8ba1\u7b97relevance score must\u548cshould\u641c\u7d22\u5bf9\u5e94\u7684\u5206\u6570\uff0c\u52a0\u8d77\u6765\uff0c\u9664\u4ee5must\u548cshould\u7684\u603b\u6570 \u6392\u540d\u7b2c\u4e00\uff1ajava\uff0c\u540c\u65f6\u5305\u542bshould\u4e2d\u6240\u6709\u7684\u5173\u952e\u5b57\uff0chadoop\uff0celasticsearch \u6392\u540d\u7b2c\u4e8c\uff1ajava\uff0c\u540c\u65f6\u5305\u542bshould\u4e2d\u7684elasticsearch \u6392\u540d\u7b2c\u4e09\uff1ajava\uff0c\u4e0d\u5305\u542bshould\u4e2d\u7684\u4efb\u4f55\u5173\u952e\u5b57 should\u662f\u53ef\u4ee5\u5f71\u54cd\u76f8\u5173\u5ea6\u5206\u6570\u7684 must\u662f\u786e\u4fdd\u8bf4\uff0c\u8c01\u5fc5\u987b\u6709\u8fd9\u4e2a\u5173\u952e\u5b57\uff0c\u540c\u65f6\u4f1a\u6839\u636e\u8fd9\u4e2amust\u7684\u6761\u4ef6\u53bb\u8ba1\u7b97\u51fadocument\u5bf9\u8fd9\u4e2a\u641c\u7d22\u6761\u4ef6\u7684relevance score \u5728\u6ee1\u8db3must\u7684\u57fa\u7840\u4e4b\u4e0a\uff0cshould\u4e2d\u7684\u6761\u4ef6\uff0c\u4e0d\u5339\u914d\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\u5982\u679c\u5339\u914d\u7684\u66f4\u591a\uff0c \u90a3\u4e48document\u7684relevance score\u5c31\u4f1a\u66f4\u9ad8 7\u3001\u641c\u7d22java\uff0chadoop\uff0cspark\uff0celasticsearch\uff0c\u81f3\u5c11\u5305\u542b\u5176\u4e2d3\u4e2a\u5173\u952e\u5b57 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cshould\u662f\u53ef\u4ee5\u4e0d\u5339\u914d\u4efb\u4f55\u4e00\u4e2a\u7684\uff0c \u6bd4\u5982\u4e0a\u9762\u7684\u641c\u7d22\u4e2d\uff0cthis is java blog\uff0c\u5c31\u4e0d\u5339\u914d\u4efb\u4f55\u4e00\u4e2ashould\u6761\u4ef6 \u4f46\u662f\u6709\u4e2a\u4f8b\u5916\u7684\u60c5\u51b5\uff0c\u5982\u679c\u6ca1\u6709must\u7684\u8bdd\uff0c\u90a3\u4e48should\u4e2d\u5fc5\u987b\u81f3\u5c11\u5339\u914d\u4e00\u4e2a\u624d\u53ef\u4ee5 \u6bd4\u5982\u4e0b\u9762\u7684\u641c\u7d22\uff0cshould\u4e2d\u67094\u4e2a\u6761\u4ef6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ea\u8981\u6ee1\u8db3\u5176\u4e2d\u4e00\u4e2a\u6761\u4ef6\uff0c\u5c31\u53ef\u4ee5\u5339\u914d\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de \u4f46\u662f\u53ef\u4ee5\u7cbe\u51c6\u63a7\u5236\uff0cshould\u76844\u4e2a\u6761\u4ef6\u4e2d\uff0c\u81f3\u5c11\u5339\u914d\u51e0\u4e2a\u624d\u80fd\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de GET /forum/article/_search { \"query\": { \"bool\": { \"should\": [ {\"match\": { \"title\": \"java\" }}, {\"match\": { \"title\": \"elasticsearch\"}}, {\"match\": { \"title\": \"hadoop\"}}, {\"match\": { \"title\": \"spark\"}} ], \"minimum_should_match\": 3 } } } \u68b3\u7406\u4e00\u4e0b\u5b66\u5230\u7684\u77e5\u8bc6\u70b9 1\u3001\u5168\u6587\u68c0\u7d22\u7684\u65f6\u5019\uff0c\u8fdb\u884c\u591a\u4e2a\u503c\u7684\u68c0\u7d22\uff0c\u6709\u4e24\u79cd\u505a\u6cd5\uff0cmatch query\uff1bshould 2\u3001\u63a7\u5236\u641c\u7d22\u7ed3\u679c\u7cbe\u51c6\u5ea6\uff1aand operator\uff0cminimum_should_match","title":"\u624b\u52a8\u63a7\u5236\u5168\u6587\u68c0\u7d22\u7ed3\u679c\u7684\u7cbe\u51c6\u5ea6"},{"location":"ElasticSearch/7\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f/#termboolmultiword","text":"1\u3001\u666e\u901amatch\u5982\u4f55\u8f6c\u6362\u4e3aterm+should { \"match\" : { \"title\" : \"java elasticsearch\" } } \u4f7f\u7528\u8bf8\u5982\u4e0a\u9762\u7684match query\u8fdb\u884c\u591a\u503c\u641c\u7d22\u7684\u65f6\u5019\uff0ces\u4f1a\u5728\u5e95\u5c42\u81ea\u52a8\u5c06\u8fd9\u4e2amatch query\u8f6c\u6362\u4e3abool\u7684\u8bed\u6cd5 bool should\uff0c\u6307\u5b9a\u591a\u4e2a\u641c\u7d22\u8bcd\uff0c\u540c\u65f6\u4f7f\u7528term query { \"bool\" : { \"should\" : [ { \"term\" : { \"title\" : \"java\" }} , { \"term\" : { \"title\" : \"elasticsearch\" }} ] } } 2\u3001and match\u5982\u4f55\u8f6c\u6362\u4e3aterm+must { \"match\" : { \"title\" : { \"query\" : \"java elasticsearch\" , \"operator\" : \"and\" } } } { \"bool\" : { \"must\" : [ { \"term\" : { \"title\" : \"java\" }} , { \"term\" : { \"title\" : \"elasticsearch\" }} ] } } 3\u3001minimum_should_match\u5982\u4f55\u8f6c\u6362 { \"match\" : { \"title\" : { \"query\" : \"java elasticsearch hadoop spark\" , \"minimum_should_match\" : \"75%\" } } } { \"bool\" : { \"should\" : [ { \"term\" : { \"title\" : \"java\" }} , { \"term\" : { \"title\" : \"elasticsearch\" }} , { \"term\" : { \"title\" : \"hadoop\" }} , { \"term\" : { \"title\" : \"spark\" }} ], \"minimum_should_match\" : 3 } } \u8f6c\u6362\u8fc7\u7a0b\uff1a match query --> bool + term","title":"\u57fa\u4e8eterm+bool\u5b9e\u73b0\u7684multiword\u641c\u7d22\u5e95\u5c42\u539f\u7406\u5256\u6790"},{"location":"ElasticSearch/7\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f/#boost","text":"\u9700\u6c42\uff1a \u641c\u7d22\u6807\u9898\u4e2d\u5305\u542bjava\u7684\u5e16\u5b50\uff0c \u540c\u65f6\u5462\uff0c\u5982\u679c\u6807\u9898\u4e2d\u5305\u542bhadoop\u6216elasticsearch\u5c31\u4f18\u5148\u641c\u7d22\u51fa\u6765\uff0c \u540c\u65f6\u5462\uff0c\u5982\u679c\u4e00\u4e2a\u5e16\u5b50\u5305\u542bjava hadoop\uff0c \u4e00\u4e2a\u5e16\u5b50\u5305\u542bjava elasticsearch\uff0c\u5305\u542bhadoop\u7684\u5e16\u5b50\u8981\u6bd4elasticsearch\u4f18\u5148\u641c\u7d22\u51fa\u6765 \u77e5\u8bc6\u70b9\uff0c\u641c\u7d22\u6761\u4ef6\u7684\u6743\u91cd\uff0cboost\uff0c\u53ef\u4ee5\u5c06\u67d0\u4e2a\u641c\u7d22\u6761\u4ef6\u7684\u6743\u91cd\u52a0\u5927\uff0c \u6b64\u65f6\u5f53\u5339\u914d\u8fd9\u4e2a\u641c\u7d22\u6761\u4ef6\u548c\u5339\u914d\u53e6\u4e00\u4e2a\u641c\u7d22\u6761\u4ef6\u7684document\uff0c\u8ba1\u7b97relevance score\u65f6\uff0c \u5339\u914d\u6743\u91cd\u66f4\u5927\u7684\u641c\u7d22\u6761\u4ef6\u7684document\uff0crelevance score\u4f1a\u66f4\u9ad8\uff0c\u5f53\u7136\u4e5f\u5c31\u4f1a\u4f18\u5148\u88ab\u8fd4\u56de\u56de\u6765 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u641c\u7d22\u6761\u4ef6\u7684\u6743\u91cd\u90fd\u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f1 GET /forum/article/_search { \"query\": { \"bool\": { \"must\": [ { \"match\": { \"title\": \"blog\" } } ], \"should\": [ { \"match\": { \"title\": { \"query\": \"java\" } } }, { \"match\": { \"title\": { \"query\": \"hadoop\" } } }, { \"match\": { \"title\": { \"query\": \"elasticsearch\" } } }, { \"match\": { \"title\": { \"query\": \"spark\", \"boost\": 5 } } } ] } } }","title":"\u57fa\u4e8eboost\u7684\u7ec6\u7c92\u5ea6\u641c\u7d22\u6761\u4ef6\u6743\u91cd\u63a7\u5236"},{"location":"ElasticSearch/7\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f/#shardrelevance-score","text":"1\u3001\u591ashard\u573a\u666f\u4e0brelevance score\u4e0d\u51c6\u786e\u95ee\u9898\u5927\u63ed\u79d8 \u5982\u679c\u4f60\u7684\u4e00\u4e2aindex\u6709\u591a\u4e2ashard\u7684\u8bdd\uff0c\u53ef\u80fd\u641c\u7d22\u7ed3\u679c\u4f1a\u4e0d\u51c6\u786e 2\u3001\u5982\u4f55\u89e3\u51b3\u8be5\u95ee\u9898\uff1f \uff081\uff09\u751f\u4ea7\u73af\u5883\u4e0b\uff0c\u6570\u636e\u91cf\u5927\uff0c\u5c3d\u53ef\u80fd\u5b9e\u73b0\u5747\u5300\u5206\u914d \u6570\u636e\u91cf\u5f88\u5927\u7684\u8bdd\uff0c\u5176\u5b9e\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5728\u6982\u7387\u5b66\u7684\u80cc\u666f\u4e0b\uff0ces\u90fd\u662f\u5728\u591a\u4e2ashard\u4e2d\u5747\u5300\u8def\u7531\u6570\u636e\u7684\uff0c \u8def\u7531\u7684\u65f6\u5019\u6839\u636e_id\uff0c\u8d1f\u8f7d\u5747\u8861 \u6bd4\u5982\u8bf4\u670910\u4e2adocument\uff0ctitle\u90fd\u5305\u542bjava\uff0c\u4e00\u5171\u67095\u4e2ashard\uff0c\u90a3\u4e48\u5728\u6982\u7387\u5b66\u7684\u80cc\u666f\u4e0b\uff0c \u5982\u679c\u8d1f\u8f7d\u5747\u8861\u7684\u8bdd\uff0c\u5176\u5b9e\u6bcf\u4e2ashard\u90fd\u5e94\u8be5\u67092\u4e2adoc\uff0ctitle\u5305\u542bjava \u5982\u679c\u8bf4\u6570\u636e\u5206\u5e03\u5747\u5300\u7684\u8bdd\uff0c\u5176\u5b9e\u5c31\u6ca1\u6709\u521a\u624d\u8bf4\u7684\u90a3\u4e2a\u95ee\u9898\u4e86 \uff082\uff09\u6d4b\u8bd5\u73af\u5883\u4e0b\uff0c\u5c06\u7d22\u5f15\u7684primary shard\u8bbe\u7f6e\u4e3a1\u4e2a\uff0cnumber_of_shards=1\uff0cindex settings \u5982\u679c\u8bf4\u53ea\u6709\u4e00\u4e2ashard\uff0c\u90a3\u4e48\u5f53\u7136\uff0c\u6240\u6709\u7684document\u90fd\u5728\u8fd9\u4e2ashard\u91cc\u9762\uff0c\u5c31\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\u4e86 \uff083\uff09\u6d4b\u8bd5\u73af\u5883\u4e0b\uff0c\u641c\u7d22\u9644\u5e26search_type=dfs_query_then_fetch\u53c2\u6570\uff0c\u4f1a\u5c06local IDF\u53d6\u51fa\u6765\u8ba1\u7b97global IDF \u8ba1\u7b97\u4e00\u4e2adoc\u7684\u76f8\u5173\u5ea6\u5206\u6570\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5c06\u6240\u6709shard\u5bf9\u7684local IDF\u8ba1\u7b97\u4e00\u4e0b\uff0c\u83b7\u53d6\u51fa\u6765\uff0c \u5728\u672c\u5730\u8fdb\u884cglobal IDF\u5206\u6570\u7684\u8ba1\u7b97\uff0c\u4f1a\u5c06\u6240\u6709shard\u7684doc\u4f5c\u4e3a\u4e0a\u4e0b\u6587\u6765\u8fdb\u884c\u8ba1\u7b97\uff0c\u4e5f\u80fd\u786e\u4fdd\u51c6\u786e\u6027\u3002 \u4f46\u662fproduction\u751f\u4ea7\u73af\u5883\u4e0b\uff0c\u4e0d\u63a8\u8350\u8fd9\u4e2a\u53c2\u6570\uff0c\u56e0\u4e3a\u6027\u80fd\u5f88\u5dee\u3002","title":"\u591ashard\u573a\u666f\u4e0brelevance score\u4e0d\u51c6\u786e\u95ee\u9898\u5927\u63ed\u79d8"},{"location":"ElasticSearch/7\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f/#dis_maxbest-fields","text":"1\u3001\u4e3a\u5e16\u5b50\u6570\u636e\u589e\u52a0content\u5b57\u6bb5 POST /forum/article/_bulk { \"index\": { \"_id\": \"1\"} } {\"title\" : \"this is java and elasticsearch blog\"} { \"index\": { \"_id\": \"2\"} } {\"title\" : \"this is java blog\"} { \"index\": { \"_id\": \"3\"} } {\"title\" : \"this is elasticsearch blog\"} { \"index\": { \"_id\": \"4\"} } {\"title\" : \"this is java, elasticsearch, hadoop blog\"} { \"index\": { \"_id\": \"5\"} } {\"title\" : \"this is spark blog\"} POST /forum/article/_bulk { \"update\": { \"_id\": \"1\"} } { \"doc\" : {\"content\" : \"i like to write best elasticsearch article\"} } { \"update\": { \"_id\": \"2\"} } { \"doc\" : {\"content\" : \"i think java is the best programming language\"} } { \"update\": { \"_id\": \"3\"} } { \"doc\" : {\"content\" : \"i am only an elasticsearch beginner\"} } { \"update\": { \"_id\": \"4\"} } { \"doc\" : {\"content\" : \"elasticsearch and hadoop are all very good solution, i am a beginner\"} } { \"update\": { \"_id\": \"5\"} } { \"doc\" : {\"content\" : \"spark is best big data solution based on scala ,an programming language similar to java\"} } 2\u3001\u641c\u7d22title\u6216content\u4e2d\u5305\u542bjava\u6216solution\u7684\u5e16\u5b50 \u4e0b\u9762\u8fd9\u4e2a\u5c31\u662fmulti-field\u641c\u7d22\uff0c\u591a\u5b57\u6bb5\u641c\u7d22 GET /forum/article/_search { \"query\": { \"bool\": { \"should\": [ { \"match\": { \"title\": \"java solution\" }}, { \"match\": { \"content\": \"java solution\" }} ] } } } 3\u3001\u7ed3\u679c\u5206\u6790 \u671f\u671b\u7684\u662fdoc5\uff0c\u7ed3\u679c\u662fdoc2,doc4\u6392\u5728\u4e86\u524d\u9762 \u8ba1\u7b97\u6bcf\u4e2adocument\u7684relevance score\uff1a\u6bcf\u4e2aquery\u7684\u5206\u6570\uff0c\u4e58\u4ee5matched query\u6570\u91cf\uff0c\u9664\u4ee5\u603bquery\u6570\u91cf \u7b97\u4e00\u4e0bdoc4\u7684\u5206\u6570 { \"match\": { \"title\": \"java solution\" }}\uff0c\u9488\u5bf9doc4\uff0c\u662f\u6709\u4e00\u4e2a\u5206\u6570\u7684 { \"match\": { \"content\": \"java solution\" }}\uff0c\u9488\u5bf9doc4\uff0c\u4e5f\u662f\u6709\u4e00\u4e2a\u5206\u6570\u7684 \u6240\u4ee5\u662f\u4e24\u4e2a\u5206\u6570\u52a0\u8d77\u6765\uff0c\u6bd4\u5982\u8bf4\uff0c1.1 + 1.2 = 2.3 matched query\u6570\u91cf = 2 \u603bquery\u6570\u91cf = 2 2.3 * 2 / 2 = 2.3 \u7b97\u4e00\u4e0bdoc5\u7684\u5206\u6570 { \"match\": { \"title\": \"java solution\" }}\uff0c\u9488\u5bf9doc5\uff0c\u662f\u6ca1\u6709\u5206\u6570\u7684 { \"match\": { \"content\": \"java solution\" }}\uff0c\u9488\u5bf9doc5\uff0c\u662f\u6709\u4e00\u4e2a\u5206\u6570\u7684 \u6240\u4ee5\u8bf4\uff0c\u53ea\u6709\u4e00\u4e2aquery\u662f\u6709\u5206\u6570\u7684\uff0c\u6bd4\u59822.3 matched query\u6570\u91cf = 1 \u603bquery\u6570\u91cf = 2 2.3 * 1 / 2 = 1.15 doc5\u7684\u5206\u6570 = 1.15 < doc4\u7684\u5206\u6570 = 2.3 4\u3001best fields\u7b56\u7565\uff0cdis_max best fields\u7b56\u7565\uff0c\u5c31\u662f\u8bf4\uff0c\u641c\u7d22\u5230\u7684\u7ed3\u679c\uff0c\u5e94\u8be5\u662f\u67d0\u4e00\u4e2afield\u4e2d\u5339\u914d\u5230\u4e86\u5c3d\u53ef\u80fd\u591a\u7684\u5173\u952e\u8bcd\uff0c\u88ab\u6392\u5728\u524d\u9762\uff1b\u800c\u4e0d\u662f\u5c3d\u53ef\u80fd\u591a\u7684field\u5339\u914d\u5230\u4e86\u5c11\u6570\u7684\u5173\u952e\u8bcd\uff0c\u6392\u5728\u4e86\u524d\u9762 dis_max\u8bed\u6cd5\uff0c\u76f4\u63a5\u53d6\u591a\u4e2aquery\u4e2d\uff0c\u5206\u6570\u6700\u9ad8\u7684\u90a3\u4e00\u4e2aquery\u7684\u5206\u6570\u5373\u53ef { \"match\": { \"title\": \"java solution\" }}\uff0c\u9488\u5bf9doc4\uff0c\u662f\u6709\u4e00\u4e2a\u5206\u6570\u7684\uff0c1.1 { \"match\": { \"content\": \"java solution\" }}\uff0c\u9488\u5bf9doc4\uff0c\u4e5f\u662f\u6709\u4e00\u4e2a\u5206\u6570\u7684\uff0c1.2 \u53d6\u6700\u5927\u5206\u6570\uff0c1.2 { \"match\": { \"title\": \"java solution\" }}\uff0c\u9488\u5bf9doc5\uff0c\u662f\u6ca1\u6709\u5206\u6570\u7684 { \"match\": { \"content\": \"java solution\" }}\uff0c\u9488\u5bf9doc5\uff0c\u662f\u6709\u4e00\u4e2a\u5206\u6570\u7684\uff0c2.3 \u53d6\u6700\u5927\u5206\u6570\uff0c2.3 \u7136\u540edoc4\u7684\u5206\u6570 = 1.2 < doc5\u7684\u5206\u6570 = 2.3\uff0c\u6240\u4ee5doc5\u5c31\u53ef\u4ee5\u6392\u5728\u66f4\u524d\u9762\u7684\u5730\u65b9\uff0c\u7b26\u5408\u6211\u4eec\u7684\u9700\u8981 GET /forum/article/_search { \"query\": { \"dis_max\": { \"queries\": [ {\"match\": {\"title\": \"java solution\"}}, {\"match\": {\"content\": \"java solution\"}} ] } } }","title":"\u57fa\u4e8edis_max\u5b9e\u73b0best fields\u7b56\u7565\u8fdb\u884c\u591a\u5b57\u6bb5\u641c\u7d22"},{"location":"ElasticSearch/7\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f/#tie_breakerdis_max","text":"1\u3001\u641c\u7d22title\u6216content\u4e2d\u5305\u542bjava beginner\u7684\u5e16\u5b50 GET /forum/article/_search { \"query\": { \"dis_max\": { \"queries\": [ { \"match\": { \"title\": \"java beginner\" }}, { \"match\": { \"body\": \"java beginner\" }} ] } } } \u6709\u4e9b\u573a\u666f\u4e0d\u662f\u592a\u597d\u590d\u73b0\u7684\uff0c\u56e0\u4e3a\u662f\u8fd9\u6837\uff0c\u4f60\u9700\u8981\u5c1d\u8bd5\u53bb\u6784\u9020\u4e0d\u540c\u7684\u6587\u672c\uff0c\u7136\u540e\u53bb\u6784\u9020\u4e00\u4e9b\u641c\u7d22\u51fa\u6765\uff0c\u53bb\u8fbe\u5230\u4f60\u8981\u7684\u4e00\u4e2a\u6548\u679c \u53ef\u80fd\u5728\u5b9e\u9645\u573a\u666f\u4e2d\u51fa\u73b0\u7684\u4e00\u4e2a\u60c5\u51b5\u662f\u8fd9\u6837\u7684\uff1a \uff081\uff09\u67d0\u4e2a\u5e16\u5b50\uff0cdoc1\uff0ctitle\u4e2d\u5305\u542bjava\uff0ccontent\u4e0d\u5305\u542bjava beginner\u4efb\u4f55\u4e00\u4e2a\u5173\u952e\u8bcd \uff082\uff09\u67d0\u4e2a\u5e16\u5b50\uff0cdoc2\uff0ccontent\u4e2d\u5305\u542bbeginner\uff0ctitle\u4e2d\u4e0d\u5305\u542b\u4efb\u4f55\u4e00\u4e2a\u5173\u952e\u8bcd \uff083\uff09\u67d0\u4e2a\u5e16\u5b50\uff0cdoc3\uff0ctitle\u4e2d\u5305\u542bjava\uff0ccontent\u4e2d\u5305\u542bbeginner \uff084\uff09\u6700\u7ec8\u641c\u7d22\uff0c\u53ef\u80fd\u51fa\u6765\u7684\u7ed3\u679c\u662f\uff0cdoc1\u548cdoc2\u6392\u5728doc3\u7684\u524d\u9762\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u671f\u671b\u7684doc3\u6392\u5728\u6700\u524d\u9762 dis_max\uff0c\u53ea\u662f\u53d6\u5206\u6570\u6700\u9ad8\u7684\u90a3\u4e2aquery\u7684\u5206\u6570\u800c\u5df2\u3002 2\u3001dis_max\u53ea\u53d6\u67d0\u4e00\u4e2aquery\u6700\u5927\u7684\u5206\u6570\uff0c\u5b8c\u5168\u4e0d\u8003\u8651\u5176\u4ed6query\u7684\u5206\u6570 3\u3001\u4f7f\u7528tie_breaker\u5c06\u5176\u4ed6query\u7684\u5206\u6570\u4e5f\u8003\u8651\u8fdb\u53bb tie_breaker\u53c2\u6570\u7684\u610f\u4e49\uff0c\u5728\u4e8e\u8bf4\uff0c\u5c06\u5176\u4ed6query\u7684\u5206\u6570\uff0c\u4e58\u4ee5tie_breaker\uff0c\u7136\u540e\u7efc\u5408\u4e0e\u6700\u9ad8\u5206\u6570\u7684\u90a3\u4e2aquery\u7684\u5206\u6570\uff0c\u7efc\u5408\u5728\u4e00\u8d77\u8fdb\u884c\u8ba1\u7b97 \u9664\u4e86\u53d6\u6700\u9ad8\u5206\u4ee5\u5916\uff0c\u8fd8\u4f1a\u8003\u8651\u5176\u4ed6\u7684query\u7684\u5206\u6570 tie_breaker\u7684\u503c\uff0c\u57280~1\u4e4b\u95f4\uff0c\u662f\u4e2a\u5c0f\u6570\uff0c\u5c31ok GET /forum/article/_search { \"query\": { \"dis_max\": { \"queries\": [ { \"match\": { \"title\": \"java beginner\" }}, { \"match\": { \"body\": \"java beginner\" }} ], \"tie_breaker\": 0.3 } } }","title":"\u57fa\u4e8etie_breaker\u53c2\u6570\u4f18\u5316dis_max\u641c\u7d22\u6548\u679c"},{"location":"ElasticSearch/7\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f/#multi_matchdis_maxtie_breaker","text":"GET /forum/article/_search { \"query\": { \"multi_match\": { \"query\": \"java solution\", \"type\": \"best_fields\", \"fields\": [\"title^2\", \"content\"], \"tie_breaker\": 0.3, \"minimum_should_match\": \"50%\" } } } GET /forum/article/_search { \"query\": { \"dis_max\": { \"queries\": [ { \"match\": { \"title\": { \"query\": \"java beginner\", \"minimum_should_match\": \"50%\", \"boost\": 2 } } }, { \"match\": { \"body\": { \"query\": \"java beginner\", \"minimum_should_match\": \"30%\" } } } ], \"tie_breaker\": 0.3 } } } minimum_should_match\uff0c\u4e3b\u8981\u662f\u7528\u6765\u5e72\u561b\u7684\uff1f \u53bb\u957f\u5c3e\uff0clong tail \u957f\u5c3e\uff0c\u6bd4\u5982\u4f60\u641c\u7d225\u4e2a\u5173\u952e\u8bcd\uff0c\u4f46\u662f\u5f88\u591a\u7ed3\u679c\u662f\u53ea\u5339\u914d1\u4e2a\u5173\u952e\u8bcd\u7684\uff0c\u5176\u5b9e\u8ddf\u4f60\u60f3\u8981\u7684\u7ed3\u679c\u76f8\u5dee\u751a\u8fdc\uff0c\u8fd9\u4e9b\u7ed3\u679c\u5c31\u662f\u957f\u5c3e minimum_should_match\uff0c\u63a7\u5236\u641c\u7d22\u7ed3\u679c\u7684\u7cbe\u51c6\u5ea6\uff0c\u53ea\u6709\u5339\u914d\u4e00\u5b9a\u6570\u91cf\u7684\u5173\u952e\u8bcd\u7684\u6570\u636e\uff0c\u624d\u80fd\u8fd4\u56de","title":"\u57fa\u4e8emulti_match\u8bed\u6cd5\u5b9e\u73b0dis_max+tie_breaker"},{"location":"ElasticSearch/7\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f/#multi_matchmost-fielsmulti-field","text":"\u4ecebest-fields\u6362\u6210most-fields\u7b56\u7565 best-fields\u7b56\u7565\uff0c\u4e3b\u8981\u662f\u8bf4\u5c06\u67d0\u4e00\u4e2afield\u5339\u914d\u5c3d\u53ef\u80fd\u591a\u7684\u5173\u952e\u8bcd\u7684doc\u4f18\u5148\u8fd4\u56de\u56de\u6765 most-fields\u7b56\u7565\uff0c\u4e3b\u8981\u662f\u8bf4\u5c3d\u53ef\u80fd\u8fd4\u56de\u66f4\u591afield\u5339\u914d\u5230\u67d0\u4e2a\u5173\u952e\u8bcd\u7684doc\uff0c\u4f18\u5148\u8fd4\u56de\u56de\u6765 POST /forum/_mapping/article { \"properties\": { \"sub_title\": { \"type\": \"string\", \"analyzer\": \"english\", \"fields\": { \"std\": { \"type\": \"string\", \"analyzer\": \"standard\" } } } } } POST /forum/article/_bulk { \"update\": { \"_id\": \"1\"} } { \"doc\" : {\"sub_title\" : \"learning more courses\"} } { \"update\": { \"_id\": \"2\"} } { \"doc\" : {\"sub_title\" : \"learned a lot of course\"} } { \"update\": { \"_id\": \"3\"} } { \"doc\" : {\"sub_title\" : \"we have a lot of fun\"} } { \"update\": { \"_id\": \"4\"} } { \"doc\" : {\"sub_title\" : \"both of them are good\"} } { \"update\": { \"_id\": \"5\"} } { \"doc\" : {\"sub_title\" : \"haha, hello world\"} } GET /forum/article/_search { \"query\": { \"match\": { \"sub_title\": \"learning courses\" } } } sub_title\u7528\u7684\u662fenligsh analyzer\uff0c\u6240\u4ee5\u8fd8\u539f\u4e86\u5355\u8bcd \u4e3a\u4ec0\u4e48\uff0c\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u7528\u7684\u662f\u7c7b\u4f3c\u4e8eenglish analyzer\u8fd9\u79cd\u5206\u8bcd\u5668\u7684\u8bdd\uff0c\u5c31\u4f1a\u5c06\u5355\u8bcd\u8fd8\u539f\u4e3a\u5176\u6700\u57fa\u672c\u7684\u5f62\u6001\uff0cstemmer learning --> learn learned --> learn courses --> course sub_titile: learning coureses --> learn course { \"doc\" : {\"sub_title\" : \"learned a lot of course\"} }\uff0c \u5c31\u6392\u5728\u4e86{ \"doc\" : {\"sub_title\" : \"learning more courses\"} }\u7684\u524d\u9762 GET /forum/article/_search { \"query\": { \"multi_match\": { \"query\": \"learning courses\", \"type\": \"most_fields\", \"fields\": [ \"sub_title\", \"sub_title.std\" ] } } } \u4e0d\u53ea\u662fTF/IDF\u7b97\u6cd5\u3002\u56e0\u4e3a\u4e0d\u540c\u7684query\uff0c\u4e0d\u540c\u7684\u8bed\u6cd5\uff0c\u90fd\u6709\u4e0d\u540c\u7684\u8ba1\u7b97score\u7684\u7ec6\u8282\u3002 \u4e0ebest_fields\u7684\u533a\u522b \uff081\uff09best_fields\uff0c\u662f\u5bf9\u591a\u4e2afield\u8fdb\u884c\u641c\u7d22\uff0c\u6311\u9009\u67d0\u4e2afield\u5339\u914d\u5ea6\u6700\u9ad8\u7684\u90a3\u4e2a\u5206\u6570\uff0c \u540c\u65f6\u5728\u591a\u4e2aquery\u6700\u9ad8\u5206\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8003\u8651\u5176\u4ed6query\u7684\u5206\u6570\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u4f60\u5bf9\u591a\u4e2afield\u8fdb\u884c\u641c\u7d22\uff0c\u5c31\u60f3\u641c\u7d22\u5230\u67d0\u4e00\u4e2afield\u5c3d\u53ef\u80fd\u5305\u542b\u66f4\u591a\u5173\u952e\u5b57\u7684\u6570\u636e \u4f18\u70b9\uff1a\u901a\u8fc7best_fields\u7b56\u7565\uff0c\u4ee5\u53ca\u7efc\u5408\u8003\u8651\u5176\u4ed6field\uff0c\u8fd8\u6709minimum_should_match\u652f\u6301\uff0c \u53ef\u4ee5\u5c3d\u53ef\u80fd\u7cbe\u51c6\u5730\u5c06\u5339\u914d\u7684\u7ed3\u679c\u63a8\u9001\u5230\u6700\u524d\u9762 \u7f3a\u70b9\uff1a\u9664\u4e86\u90a3\u4e9b\u7cbe\u51c6\u5339\u914d\u7684\u7ed3\u679c\uff0c\u5176\u4ed6\u5dee\u4e0d\u591a\u5927\u7684\u7ed3\u679c\uff0c\u6392\u5e8f\u7ed3\u679c\u4e0d\u662f\u592a\u5747\u5300\uff0c\u6ca1\u6709\u4ec0\u4e48\u533a\u5206\u5ea6\u4e86 \u5b9e\u9645\u7684\u4f8b\u5b50\uff1a\u767e\u5ea6\u4e4b\u7c7b\u7684\u641c\u7d22\u5f15\u64ce\uff0c\u6700\u5339\u914d\u7684\u5230\u6700\u524d\u9762\uff0c\u4f46\u662f\u5176\u4ed6\u7684\u5c31\u6ca1\u4ec0\u4e48\u533a\u5206\u5ea6\u4e86 \uff082\uff09most_fields\uff0c\u7efc\u5408\u591a\u4e2afield\u4e00\u8d77\u8fdb\u884c\u641c\u7d22\uff0c\u5c3d\u53ef\u80fd\u591a\u5730\u8ba9\u6240\u6709field\u7684query\u53c2\u4e0e\u5230\u603b\u5206\u6570\u7684\u8ba1\u7b97\u4e2d\u6765\uff0c \u6b64\u65f6\u5c31\u4f1a\u662f\u4e2a\u5927\u6742\u70e9\uff0c\u51fa\u73b0\u7c7b\u4f3cbest_fields\u6848\u4f8b\u6700\u5f00\u59cb\u7684\u90a3\u4e2a\u7ed3\u679c\uff0c\u7ed3\u679c\u4e0d\u4e00\u5b9a\u7cbe\u51c6\uff0c \u67d0\u4e00\u4e2adocument\u7684\u4e00\u4e2afield\u5305\u542b\u66f4\u591a\u7684\u5173\u952e\u5b57\uff0c\u4f46\u662f\u56e0\u4e3a\u5176\u4ed6document\u6709\u66f4\u591afield\u5339\u914d\u5230\u4e86\uff0c \u6240\u4ee5\u6392\u5728\u4e86\u524d\u9762\uff1b\u6240\u4ee5\u9700\u8981\u5efa\u7acb\u7c7b\u4f3csub_title.std\u8fd9\u6837\u7684field\uff0c\u5c3d\u53ef\u80fd\u8ba9\u67d0\u4e00\u4e2afield\u7cbe\u51c6\u5339\u914dquery string\uff0c \u8d21\u732e\u66f4\u9ad8\u7684\u5206\u6570\uff0c\u5c06\u66f4\u7cbe\u51c6\u5339\u914d\u7684\u6570\u636e\u6392\u5230\u524d\u9762 \u4f18\u70b9\uff1a\u5c06\u5c3d\u53ef\u80fd\u5339\u914d\u66f4\u591afield\u7684\u7ed3\u679c\u63a8\u9001\u5230\u6700\u524d\u9762\uff0c\u6574\u4e2a\u6392\u5e8f\u7ed3\u679c\u662f\u6bd4\u8f83\u5747\u5300\u7684 \u7f3a\u70b9\uff1a\u53ef\u80fd\u90a3\u4e9b\u7cbe\u51c6\u5339\u914d\u7684\u7ed3\u679c\uff0c\u65e0\u6cd5\u63a8\u9001\u5230\u6700\u524d\u9762 \u5b9e\u9645\u7684\u4f8b\u5b50\uff1awiki\uff0c\u660e\u663e\u7684most_fields\u7b56\u7565\uff0c\u641c\u7d22\u7ed3\u679c\u6bd4\u8f83\u5747\u5300\uff0c\u4f46\u662f\u7684\u786e\u8981\u7ffb\u597d\u51e0\u9875\u624d\u80fd\u627e\u5230\u6700\u5339\u914d\u7684\u7ed3\u679c","title":"\u57fa\u4e8emulti_match+most fiels\u7b56\u7565\u8fdb\u884cmulti-field\u641c\u7d22"},{"location":"ElasticSearch/7\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f/#most_fieldscross-fields-search","text":"cross-fields\u641c\u7d22\uff0c\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6\uff0c\u8de8\u4e86\u591a\u4e2afield\u3002\u6bd4\u5982\u4e00\u4e2a\u4eba\uff0c\u6807\u8bc6\uff0c\u662f\u59d3\u540d\uff1b \u4e00\u4e2a\u5efa\u7b51\uff0c\u5b83\u7684\u6807\u8bc6\u662f\u5730\u5740\u3002\u59d3\u540d\u53ef\u4ee5\u6563\u843d\u5728\u591a\u4e2afield\u4e2d\uff0c \u6bd4\u5982first_name\u548clast_name\u4e2d\uff0c\u5730\u5740\u53ef\u4ee5\u6563\u843d\u5728country\uff0cprovince\uff0ccity\u4e2d\u3002 \u8de8\u591a\u4e2afield\u641c\u7d22\u4e00\u4e2a\u6807\u8bc6\uff0c\u6bd4\u5982\u641c\u7d22\u4e00\u4e2a\u4eba\u540d\uff0c\u6216\u8005\u4e00\u4e2a\u5730\u5740\uff0c\u5c31\u662fcross-fields\u641c\u7d22 \u521d\u6b65\u6765\u8bf4\uff0c\u5982\u679c\u8981\u5b9e\u73b0\uff0c\u53ef\u80fd\u7528most_fields\u6bd4\u8f83\u5408\u9002\u3002 \u56e0\u4e3abest_fields\u662f\u4f18\u5148\u641c\u7d22\u5355\u4e2afield\u6700\u5339\u914d\u7684\u7ed3\u679c\uff0ccross-fields\u672c\u8eab\u5c31\u4e0d\u662f\u4e00\u4e2afield\u7684\u95ee\u9898\u4e86\u3002 POST /forum/article/_bulk { \"update\": { \"_id\": \"1\"} } { \"doc\" : {\"author_first_name\" : \"Peter\", \"author_last_name\" : \"Smith\"} } { \"update\": { \"_id\": \"2\"} } { \"doc\" : {\"author_first_name\" : \"Smith\", \"author_last_name\" : \"Williams\"} } { \"update\": { \"_id\": \"3\"} } { \"doc\" : {\"author_first_name\" : \"Jack\", \"author_last_name\" : \"Ma\"} } { \"update\": { \"_id\": \"4\"} } { \"doc\" : {\"author_first_name\" : \"Robbin\", \"author_last_name\" : \"Li\"} } { \"update\": { \"_id\": \"5\"} } { \"doc\" : {\"author_first_name\" : \"Tonny\", \"author_last_name\" : \"Peter Smith\"} } GET /forum/article/_search { \"query\": { \"multi_match\": { \"query\": \"Peter Smith\", \"type\": \"most_fields\", \"fields\": [ \"author_first_name\", \"author_last_name\" ] } } } Peter Smith\uff0c\u5339\u914dauthor_first_name\uff0c\u5339\u914d\u5230\u4e86Smith\uff0c\u8fd9\u65f6\u5019\u5b83\u7684\u5206\u6570\u5f88\u9ad8\uff0c\u4e3a\u4ec0\u4e48\u554a\uff1f\uff1f\uff1f \u56e0\u4e3aIDF\u5206\u6570\u9ad8\uff0cIDF\u5206\u6570\u8981\u9ad8\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5339\u914d\u5230\u7684term\uff08Smith\uff09\uff0c\u5728\u6240\u6709doc\u4e2d\u7684\u51fa\u73b0\u9891\u7387\u8981\u4f4e\uff0cauthor_first_name field\u4e2d\uff0cSmith\u5c31\u51fa\u73b0\u8fc71\u6b21 Peter Smith\u8fd9\u4e2a\u4eba\uff0cdoc 1\uff0cSmith\u5728author_last_name\u4e2d\uff0c\u4f46\u662fauthor_last_name\u51fa\u73b0\u4e86\u4e24\u6b21Smith\uff0c\u6240\u4ee5\u5bfc\u81f4doc 1\u7684IDF\u5206\u6570\u8f83\u4f4e \u95ee\u98981\uff1a\u53ea\u662f\u627e\u5230\u5c3d\u53ef\u80fd\u591a\u7684field\u5339\u914d\u7684doc\uff0c\u800c\u4e0d\u662f\u67d0\u4e2afield\u5b8c\u5168\u5339\u914d\u7684doc \u95ee\u98982\uff1amost_fields\uff0c\u6ca1\u529e\u6cd5\u7528minimum_should_match\u53bb\u6389\u957f\u5c3e\u6570\u636e\uff0c\u5c31\u662f\u5339\u914d\u7684\u7279\u522b\u5c11\u7684\u7ed3\u679c \u95ee\u98983\uff1aTF/IDF\u7b97\u6cd5\uff0c\u6bd4\u5982Peter Smith\u548cSmith Williams\uff0c\u641c\u7d22Peter Smith\u7684\u65f6\u5019\uff0c\u7531\u4e8efirst_name\u4e2d\u5f88\u5c11\u6709Smith\u7684\uff0c\u6240\u4ee5query\u5728\u6240\u6709document\u4e2d\u7684\u9891\u7387\u5f88\u4f4e\uff0c\u5f97\u5230\u7684\u5206\u6570\u5f88\u9ad8\uff0c\u53ef\u80fdSmith Williams\u53cd\u800c\u4f1a\u6392\u5728Peter Smith\u524d\u9762","title":"\u4f7f\u7528most_fields\u7b56\u7565\u8fdb\u884ccross-fields search\u5f0a\u7aef\u5927\u63ed\u79d8"},{"location":"ElasticSearch/7\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f/#copy_tofieldcross-fields","text":"\u7528most_fields\u7b56\u7565\uff0c\u53bb\u5b9e\u73b0cross-fields\u641c\u7d22\uff0c\u67093\u5927\u5f0a\u7aef\uff0c\u800c\u4e14\u641c\u7d22\u7ed3\u679c\u4e5f\u663e\u793a\u51fa\u4e86\u8fd93\u5927\u5f0a\u7aef \u7b2c\u4e00\u4e2a\u529e\u6cd5\uff1a\u7528copy_to\uff0c\u5c06\u591a\u4e2afield\u7ec4\u5408\u6210\u4e00\u4e2afield \u95ee\u9898\u5176\u5b9e\u5c31\u51fa\u5728\u6709\u591a\u4e2afield\uff0c\u6709\u591a\u4e2afield\u4ee5\u540e\uff0c\u5c31\u5f88\u5c34\u5c2c\uff0c\u6211\u4eec\u53ea\u8981\u60f3\u529e\u6cd5\u5c06\u4e00\u4e2a\u6807\u8bc6\u8de8\u5728\u591a\u4e2afield\u7684\u60c5\u51b5\uff0c \u5408\u5e76\u6210\u4e00\u4e2afield\u5373\u53ef\u3002\u6bd4\u5982\u8bf4\uff0c\u4e00\u4e2a\u4eba\u540d\uff0c\u672c\u6765\u662ffirst_name\uff0clast_name\uff0c\u73b0\u5728\u5408\u5e76\u6210\u4e00\u4e2afull_name\uff0c\u4e0d\u5c31ok\u4e86\u5417\u3002\u3002\u3002\u3002\u3002 PUT /forum/_mapping/article { \"properties\": { \"new_author_first_name\": { \"type\": \"string\", \"copy_to\": \"new_author_full_name\" }, \"new_author_last_name\": { \"type\": \"string\", \"copy_to\": \"new_author_full_name\" }, \"new_author_full_name\": { \"type\": \"string\" } } } \u7528\u4e86\u8fd9\u4e2acopy_to\u8bed\u6cd5\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5c06\u591a\u4e2a\u5b57\u6bb5\u7684\u503c\u62f7\u8d1d\u5230\u4e00\u4e2a\u5b57\u6bb5\u4e2d\uff0c\u5e76\u5efa\u7acb\u5012\u6392\u7d22\u5f15 POST /forum/article/_bulk { \"update\": { \"_id\": \"1\"} } { \"doc\" : {\"new_author_first_name\" : \"Peter\", \"new_author_last_name\" : \"Smith\"} } --> Peter Smith { \"update\": { \"_id\": \"2\"} } { \"doc\" : {\"new_author_first_name\" : \"Smith\", \"new_author_last_name\" : \"Williams\"} } --> Smith Williams { \"update\": { \"_id\": \"3\"} } { \"doc\" : {\"new_author_first_name\" : \"Jack\", \"new_author_last_name\" : \"Ma\"} } --> Jack Ma { \"update\": { \"_id\": \"4\"} } { \"doc\" : {\"new_author_first_name\" : \"Robbin\", \"new_author_last_name\" : \"Li\"} } --> Robbin Li { \"update\": { \"_id\": \"5\"} } { \"doc\" : {\"new_author_first_name\" : \"Tonny\", \"new_author_last_name\" : \"Peter Smith\"} } --> Tonny Peter Smith GET /forum/article/_search { \"query\": { \"match\": { \"new_author_full_name\": \"Peter Smith\" } } } \u6bd4\u5982\u5b98\u7f51\u4e5f\u4f1a\u7ed9\u4e00\u4e9b\u4f8b\u5b50\uff0c\u8bf4\u7528\u4ec0\u4e48\u4ec0\u4e48\u6587\u672c\uff0c\u600e\u4e48\u600e\u4e48\u641c\u7d22\uff0c\u662f\u600e\u4e48\u600e\u4e48\u6837\u7684\u6548\u679c\u3002 es\u7248\u672c\u5728\u4e0d\u65ad\u8fed\u4ee3\uff0c\u8fd9\u4e2a\u6253\u5206\u7684\u7b97\u6cd5\u4e5f\u5728\u4e0d\u65ad\u7684\u8fed\u4ee3\u3002 \u6240\u4ee5\u6211\u4eec\u5176\u5b9e\u5f88\u96be\u8bf4\uff0c\u5bf9\u7c7b\u4f3c\u8fd9\u51e0\u8bb2\u8bb2\u89e3\u7684best_fields\uff0cmost_fields\uff0ccross_fields\uff0c\u5b8c\u5168\u590d\u73b0\u51fa\u6765\u5e94\u6709\u7684\u573a\u666f\u548c\u6548\u679c\u3002 \u66f4\u591a\u7684\u628a\u539f\u7406\u548c\u77e5\u8bc6\u70b9\u7ed9\u5927\u5bb6\u8bb2\u89e3\u6e05\u695a\uff0c\u5e26\u7740\u5927\u5bb6\u6f14\u7ec3\u4e00\u904d\u600e\u4e48\u64cd\u4f5c\u7684\uff0c\u505a\u4e00\u4e0b\u5b9e\u9a8c \u671f\u671b\u7684\u662f\u8bf4\uff0c\u6bd4\u5982\u5927\u5bb6\u81ea\u5df1\u5728\u5f00\u53d1\u641c\u7d22\u5e94\u7528\u7684\u65f6\u5019\uff0c\u78b0\u5230\u9700\u8981best_fields\u7684\u573a\u666f\uff0c \u77e5\u9053\u600e\u4e48\u505a\uff0c\u77e5\u9053best_fields\u7684\u539f\u7406\uff0c\u53ef\u4ee5\u8fbe\u5230\u4ec0\u4e48\u6548\u679c\uff1b \u78b0\u5230most_fields\u7684\u573a\u666f\uff0c\u77e5\u9053\u600e\u4e48\u505a\uff0c\u4ee5\u53ca\u539f\u7406\uff1b \u78b0\u5230\u641c\u641ccross_fields\u6807\u8bc6\u7684\u573a\u666f\uff0c\u77e5\u9053\u600e\u4e48\u505a\uff0c\u77e5\u9053\u539f\u7406\u662f\u4ec0\u4e48\uff0c\u6548\u679c\u662f\u4ec0\u4e48\u3002\u3002\u3002\u3002 \u95ee\u98981\uff1a\u53ea\u662f\u627e\u5230\u5c3d\u53ef\u80fd\u591a\u7684field\u5339\u914d\u7684doc\uff0c\u800c\u4e0d\u662f\u67d0\u4e2afield\u5b8c\u5168\u5339\u914d\u7684doc --> \u89e3\u51b3\uff0c\u6700\u5339\u914d\u7684document\u88ab\u6700\u5148\u8fd4\u56de \u95ee\u98982\uff1amost_fields\uff0c\u6ca1\u529e\u6cd5\u7528minimum_should_match\u53bb\u6389\u957f\u5c3e\u6570\u636e\uff0c\u5c31\u662f\u5339\u914d\u7684\u7279\u522b\u5c11\u7684\u7ed3\u679c --> \u89e3\u51b3\uff0c\u53ef\u4ee5\u4f7f\u7528minimum_should_match\u53bb\u6389\u957f\u5c3e\u6570\u636e \u95ee\u98983\uff1aTF/IDF\u7b97\u6cd5\uff0c\u6bd4\u5982Peter Smith\u548cSmith Williams\uff0c \u641c\u7d22Peter Smith\u7684\u65f6\u5019\uff0c\u7531\u4e8efirst_name\u4e2d\u5f88\u5c11\u6709Smith\u7684\uff0c \u6240\u4ee5query\u5728\u6240\u6709document\u4e2d\u7684\u9891\u7387\u5f88\u4f4e\uff0c\u5f97\u5230\u7684\u5206\u6570\u5f88\u9ad8\uff0c \u53ef\u80fdSmith Williams\u53cd\u800c\u4f1a\u6392\u5728Peter Smith\u524d\u9762 --> \u89e3\u51b3\uff0cSmith\u548cPeter\u5728\u4e00\u4e2afield\u4e86\uff0c\u6240\u4ee5\u5728\u6240\u6709document\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u662f\u5747\u5300\u7684\uff0c\u4e0d\u4f1a\u6709\u6781\u7aef\u7684\u504f\u5dee","title":"\u4f7f\u7528copy_to\u5b9a\u5236\u7ec4\u5408field\u89e3\u51b3cross-fields\u641c\u7d22\u5f0a\u7aef"},{"location":"ElasticSearch/7\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f/#cross-fiels","text":"\u8bfe\u7a0b\u5927\u7eb2 GET /forum/article/_search { \"query\": { \"multi_match\": { \"query\": \"Peter Smith\", \"type\": \"cross_fields\", \"operator\": \"and\", \"fields\": [\"author_first_name\", \"author_last_name\"] } } } \u95ee\u98981\uff1a\u53ea\u662f\u627e\u5230\u5c3d\u53ef\u80fd\u591a\u7684field\u5339\u914d\u7684doc\uff0c\u800c\u4e0d\u662f\u67d0\u4e2afield\u5b8c\u5168\u5339\u914d\u7684doc --> \u89e3\u51b3\uff0c\u8981\u6c42\u6bcf\u4e2aterm\u90fd\u5fc5\u987b\u5728\u4efb\u4f55\u4e00\u4e2afield\u4e2d\u51fa\u73b0 Peter\uff0cSmith \u8981\u6c42Peter\u5fc5\u987b\u5728author_first_name\u6216author_last_name\u4e2d\u51fa\u73b0 \u8981\u6c42Smith\u5fc5\u987b\u5728author_first_name\u6216author_last_name\u4e2d\u51fa\u73b0 Peter Smith\u53ef\u80fd\u662f\u6a2a\u8de8\u5728\u591a\u4e2afield\u4e2d\u7684\uff0c\u6240\u4ee5\u5fc5\u987b\u8981\u6c42\u6bcf\u4e2aterm\u90fd\u5728\u67d0\u4e2afield\u4e2d\u51fa\u73b0\uff0c \u7ec4\u5408\u8d77\u6765\u624d\u80fd\u7ec4\u6210\u6211\u4eec\u60f3\u8981\u7684\u6807\u8bc6\uff0c\u5b8c\u6574\u7684\u4eba\u540d \u539f\u6765most_fiels\uff0c\u53ef\u80fd\u50cfSmith Williams\u4e5f\u53ef\u80fd\u4f1a\u51fa\u73b0\uff0c \u56e0\u4e3amost_fields\u8981\u6c42\u53ea\u662f\u4efb\u4f55\u4e00\u4e2afield\u5339\u914d\u4e86\u5c31\u53ef\u4ee5\uff0c\u5339\u914d\u7684field\u8d8a\u591a\uff0c\u5206\u6570\u8d8a\u9ad8 \u95ee\u98982\uff1amost_fields\uff0c\u6ca1\u529e\u6cd5\u7528minimum_should_match\u53bb\u6389\u957f\u5c3e\u6570\u636e\uff0c\u5c31\u662f\u5339\u914d\u7684\u7279\u522b\u5c11\u7684\u7ed3\u679c --> \u89e3\u51b3\uff0c\u65e2\u7136\u6bcf\u4e2aterm\u90fd\u8981\u6c42\u51fa\u73b0\uff0c\u957f\u5c3e\u80af\u5b9a\u88ab\u53bb\u9664\u6389\u4e86 java hadoop spark --> \u8fd93\u4e2aterm\u90fd\u5fc5\u987b\u5728\u4efb\u4f55\u4e00\u4e2afield\u51fa\u73b0\u4e86 \u6bd4\u5982\u6709\u7684document\uff0c\u53ea\u6709\u4e00\u4e2afield\u4e2d\u5305\u542b\u4e00\u4e2ajava\uff0c\u90a3\u5c31\u88ab\u5e72\u6389\u4e86\uff0c\u4f5c\u4e3a\u957f\u5c3e\u5c31\u6ca1\u4e86 \u95ee\u98983\uff1aTF/IDF\u7b97\u6cd5\uff0c\u6bd4\u5982Peter Smith\u548cSmith Williams\uff0c \u641c\u7d22Peter Smith\u7684\u65f6\u5019\uff0c\u7531\u4e8efirst_name\u4e2d\u5f88\u5c11\u6709Smith\u7684\uff0c \u6240\u4ee5query\u5728\u6240\u6709document\u4e2d\u7684\u9891\u7387\u5f88\u4f4e\uff0c\u5f97\u5230\u7684\u5206\u6570\u5f88\u9ad8\uff0c \u53ef\u80fdSmith Williams\u53cd\u800c\u4f1a\u6392\u5728Peter Smith\u524d\u9762 --> \u8ba1\u7b97IDF\u7684\u65f6\u5019\uff0c\u5c06\u6bcf\u4e2aquery\u5728\u6bcf\u4e2afield\u4e2d\u7684IDF\u90fd\u53d6\u51fa\u6765\uff0c\u53d6\u6700\u5c0f\u503c\uff0c\u5c31\u4e0d\u4f1a\u51fa\u73b0\u6781\u7aef\u60c5\u51b5\u4e0b\u7684\u6781\u5927\u503c\u4e86 Peter Smith Peter Smith Smith\uff0c\u5728author_first_name\u8fd9\u4e2afield\u4e2d\uff0c\u5728\u6240\u6709doc\u7684\u8fd9\u4e2aField\u4e2d\uff0c\u51fa\u73b0\u7684\u9891\u7387\u5f88\u4f4e\uff0c\u5bfc\u81f4IDF\u5206\u6570\u5f88\u9ad8\uff1b Smith\u5728\u6240\u6709doc\u7684author_last_name field\u4e2d\u7684\u9891\u7387\u7b97\u51fa\u4e00\u4e2aIDF\u5206\u6570\uff0c \u56e0\u4e3a\u4e00\u822c\u6765\u8bf4last_name\u4e2d\u7684Smith\u9891\u7387\u90fd\u8f83\u9ad8\uff0c\u6240\u4ee5IDF\u5206\u6570\u662f\u6b63\u5e38\u7684\uff0c\u4e0d\u4f1a\u592a\u9ad8\uff1b \u7136\u540e\u5bf9\u4e8eSmith\u6765\u8bf4\uff0c\u4f1a\u53d6\u4e24\u4e2aIDF\u5206\u6570\u4e2d\uff0c\u8f83\u5c0f\u7684\u90a3\u4e2a\u5206\u6570\u3002\u5c31\u4e0d\u4f1a\u51fa\u73b0IDF\u5206\u8fc7\u9ad8\u7684\u60c5\u51b5\u3002","title":"\u4f7f\u7528\u539f\u751fcross-fiels\u6280\u672f\u89e3\u51b3\u641c\u7d22\u5f0a\u7aef"},{"location":"ElasticSearch/8\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f2/","text":"\u5728\u6848\u4f8b\u5b9e\u6218\u4e2d\u638c\u63e1phrase matching\u641c\u7d22\u6280\u672f \u8fd1\u4f3c\u5339\u914d 1\u3001\u4ec0\u4e48\u662f\u8fd1\u4f3c\u5339\u914d \u4e24\u4e2a\u53e5\u5b50 java is my favourite programming language, and I also think spark is a very good big data system. java spark are very related, because scala is spark's programming language and scala is also based on jvm like java. match query\uff0c\u641c\u7d22java spark { \"match\": { \"content\": \"java spark\" } } match query\uff0c\u53ea\u80fd\u641c\u7d22\u5230\u5305\u542bjava\u548cspark\u7684document\uff0c\u4f46\u662f\u4e0d\u77e5\u9053java\u548cspark\u662f\u4e0d\u662f\u79bb\u7684\u5f88\u8fd1 \u5305\u542bjava\u6216\u5305\u542bspark\uff0c\u6216\u5305\u542bjava\u548cspark\u7684doc\uff0c\u90fd\u4f1a\u88ab\u8fd4\u56de\u56de\u6765\u3002\u6211\u4eec\u5176\u5b9e\u5e76\u4e0d\u77e5\u9053\u54ea\u4e2adoc\uff0cjava\u548cspark\u8ddd\u79bb\u7684\u6bd4\u8f83\u8fd1\u3002\u5982\u679c\u6211\u4eec\u5c31\u662f\u5e0c\u671b\u641c\u7d22java spark\uff0c\u4e2d\u95f4\u4e0d\u80fd\u63d2\u5165\u4efb\u4f55\u5176\u4ed6\u7684\u5b57\u7b26\uff0c\u90a3\u8fd9\u4e2a\u65f6\u5019match\u53bb\u505a\u5168\u6587\u68c0\u7d22\uff0c\u80fd\u641e\u5b9a\u6211\u4eec\u7684\u9700\u6c42\u5417\uff1f\u7b54\u6848\u662f\uff0c\u641e\u4e0d\u5b9a\u3002 \u5982\u679c\u6211\u4eec\u8981\u5c3d\u91cf\u8ba9java\u548cspark\u79bb\u7684\u5f88\u8fd1\u7684document\u4f18\u5148\u8fd4\u56de\uff0c\u8981\u7ed9\u5b83\u4e00\u4e2a\u66f4\u9ad8\u7684relevance score\uff0c\u8fd9\u5c31\u6d89\u53ca\u5230\u4e86proximity match\uff0c\u8fd1\u4f3c\u5339\u914d \u5982\u679c\u8bf4\uff0c\u8981\u5b9e\u73b0\u4e24\u4e2a\u9700\u6c42\uff1a 1\u3001java spark\uff0c\u5c31\u9760\u5728\u4e00\u8d77\uff0c\u4e2d\u95f4\u4e0d\u80fd\u63d2\u5165\u4efb\u4f55\u5176\u4ed6\u5b57\u7b26\uff0c\u5c31\u8981\u641c\u7d22\u51fa\u6765\u8fd9\u79cddoc 2\u3001java spark\uff0c\u4f46\u662f\u8981\u6c42\uff0cjava\u548cspark\u4e24\u4e2a\u5355\u8bcd\u9760\u7684\u8d8a\u8fd1\uff0cdoc\u7684\u5206\u6570\u8d8a\u9ad8\uff0c\u6392\u540d\u8d8a\u9760\u524d \u8981\u5b9e\u73b0\u4e0a\u8ff0\u4e24\u4e2a\u9700\u6c42\uff0c\u7528match\u505a\u5168\u6587\u68c0\u7d22\uff0c\u662f\u641e\u4e0d\u5b9a\u7684\uff0c\u5fc5\u987b\u5f97\u7528proximity match\uff0c\u8fd1\u4f3c\u5339\u914d phrase match\uff0cproximity match\uff1a\u77ed\u8bed\u5339\u914d\uff0c\u8fd1\u4f3c\u5339\u914d \u8fd9\u4e00\u8bb2\uff0c\u8981\u5b66\u4e60\u7684\u662fphrase match\uff0c\u5c31\u662f\u4ec5\u4ec5\u641c\u7d22\u51fajava\u548cspark\u9760\u5728\u4e00\u8d77\u7684\u90a3\u4e9bdoc\uff0c\u6bd4\u5982\u6709\u4e2adoc\uff0c\u662fjava use'd spark\uff0c\u4e0d\u884c\u3002\u5fc5\u987b\u662f\u6bd4\u5982java spark are very good friends\uff0c\u662f\u53ef\u4ee5\u641c\u7d22\u51fa\u6765\u7684\u3002 phrase match\uff0c\u5c31\u662f\u8981\u53bb\u5c06\u591a\u4e2aterm\u4f5c\u4e3a\u4e00\u4e2a\u77ed\u8bed\uff0c\u4e00\u8d77\u53bb\u641c\u7d22\uff0c\u53ea\u6709\u5305\u542b\u8fd9\u4e2a\u77ed\u8bed\u7684doc\u624d\u4f1a\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de\u3002\u4e0d\u50cf\u662fmatch\uff0cjava spark\uff0cjava\u7684doc\u4e5f\u4f1a\u8fd4\u56de\uff0cspark\u7684doc\u4e5f\u4f1a\u8fd4\u56de\u3002 2\u3001match_phrase GET /forum/article/_search { \"query\": { \"match\": { \"content\": \"java spark\" } } } \u5355\u5355\u5305\u542bjava\u7684doc\u4e5f\u8fd4\u56de\u4e86\uff0c\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c POST /forum/article/5/_update { \"doc\": { \"content\": \"spark is best big data solution based on scala ,an programming language similar to java spark\" } } \u5c06\u4e00\u4e2adoc\u7684content\u8bbe\u7f6e\u4e3a\u6070\u5de7\u5305\u542bjava spark\u8fd9\u4e2a\u77ed\u8bed match_phrase\u8bed\u6cd5 GET /forum/article/_search { \"query\": { \"match_phrase\": { \"content\": \"java spark\" } } } \u6210\u529f\u4e86\uff0c\u53ea\u6709\u5305\u542bjava spark\u8fd9\u4e2a\u77ed\u8bed\u7684doc\u624d\u8fd4\u56de\u4e86\uff0c\u53ea\u5305\u542bjava\u7684doc\u4e0d\u4f1a\u8fd4\u56de 3\u3001term position hello world, java spark doc1 hi, spark java doc2 hello doc1(0) wolrd doc1(1) java doc1(2) doc2(2) spark doc1(3) doc2(1) \u4e86\u89e3\u4ec0\u4e48\u662f\u5206\u8bcd\u540e\u7684position GET _analyze { \"text\" : \"hello world, java spark\" , \"analyzer\" : \"standard\" } 4\u3001match_phrase\u7684\u57fa\u672c\u539f\u7406 \u7d22\u5f15\u4e2d\u7684position\uff0cmatch_phrase hello world, java spark doc1 hi, spark java doc2 hello doc1(0) wolrd doc1(1) java doc1(2) doc2(2) spark doc1(3) doc2(1) java spark --> match phrase java spark --> java\u548cspark java --> doc1(2) doc2(2) spark --> doc1(3) doc2(1) \u8981\u627e\u5230\u6bcf\u4e2aterm\u90fd\u5728\u7684\u4e00\u4e2a\u5171\u6709\u7684\u90a3\u4e9bdoc\uff0c\u5c31\u662f\u8981\u6c42\u4e00\u4e2adoc\uff0c\u5fc5\u987b\u5305\u542b\u6bcf\u4e2aterm\uff0c\u624d\u80fd\u62ff\u51fa\u6765\u7ee7\u7eed\u8ba1\u7b97 doc1 --> java\u548cspark --> spark position\u6070\u5de7\u6bd4java\u59271 --> java\u7684position\u662f2\uff0cspark\u7684position\u662f3\uff0c\u6070\u597d\u6ee1\u8db3\u6761\u4ef6 doc1\u7b26\u5408\u6761\u4ef6 doc2 --> java\u548cspark --> java position\u662f2\uff0cspark position\u662f1\uff0cspark position\u6bd4java position\u5c0f1\uff0c\u800c\u4e0d\u662f\u59271 --> \u5149\u662fposition\u5c31\u4e0d\u6ee1\u8db3\uff0c\u90a3\u4e48doc2\u4e0d\u5339\u914d \u5fc5\u987b\u7406\u89e3\u8fd9\u5757\u539f\u7406\uff01\uff01\uff01\uff01 \u56e0\u4e3a\u540e\u9762\u7684proximity match\u5c31\u662f\u539f\u7406\u8ddf\u8fd9\u4e2a\u4e00\u6a21\u4e00\u6837\uff01\uff01\uff01 \u57fa\u4e8eslop\u53c2\u6570\u5b9e\u73b0\u8fd1\u4f3c\u5339\u914d\u4ee5\u53ca\u539f\u7406\u5256\u6790\u548c\u76f8\u5173\u5b9e\u9a8c GET /forum/article/_search { \"query\": { \"match_phrase\": { \"title\": { \"query\": \"java spark\", \"slop\": 1 } } } } slop\u7684\u542b\u4e49\u662f\u4ec0\u4e48\uff1f query string\uff0c\u641c\u7d22\u6587\u672c\uff0c\u4e2d\u7684\u51e0\u4e2aterm\uff0c\u8981\u7ecf\u8fc7\u51e0\u6b21\u79fb\u52a8\u624d\u80fd\u4e0e\u4e00\u4e2adocument\u5339\u914d\uff0c\u8fd9\u4e2a\u79fb\u52a8\u7684\u6b21\u6570\uff0c\u5c31\u662fslop \u5b9e\u9645\u4e3e\u4f8b\uff0c\u4e00\u4e2aquery string\u7ecf\u8fc7\u51e0\u6b21\u79fb\u52a8\u4e4b\u540e\u53ef\u4ee5\u5339\u914d\u5230\u4e00\u4e2adocument\uff0c\u7136\u540e\u8bbe\u7f6eslop hello world, java is very good, spark is also very good. java spark\uff0cmatch phrase\uff0c\u641c\u4e0d\u5230 \u5982\u679c\u6211\u4eec\u6307\u5b9a\u4e86slop\uff0c\u90a3\u4e48\u5c31\u5141\u8bb8java spark\u8fdb\u884c\u79fb\u52a8\uff0c\u6765\u5c1d\u8bd5\u4e0edoc\u8fdb\u884c\u5339\u914d java is very good spark is java spark java --> spark java --> spark java --> spark \u8fd9\u91cc\u7684slop\uff0c\u5c31\u662f3\uff0c\u56e0\u4e3ajava spark\u8fd9\u4e2a\u77ed\u8bed\uff0cspark\u79fb\u52a8\u4e863\u6b21\uff0c\u5c31\u53ef\u4ee5\u8ddf\u4e00\u4e2adoc\u5339\u914d\u4e0a\u4e86 slop\u7684\u542b\u4e49\uff0c\u4e0d\u4ec5\u4ec5\u662f\u8bf4\u4e00\u4e2aquery string terms\u79fb\u52a8\u51e0\u6b21\uff0c\u8ddf\u4e00\u4e2adoc\u5339\u914d\u4e0a\u3002\u4e00\u4e2aquery string terms\uff0c\u6700\u591a\u53ef\u4ee5\u79fb\u52a8\u51e0\u6b21\u53bb\u5c1d\u8bd5\u8ddf\u4e00\u4e2adoc\u5339\u914d\u4e0a slop\uff0c\u8bbe\u7f6e\u7684\u662f3\uff0c\u90a3\u4e48\u5c31ok GET /forum/article/_search { \"query\": { \"match_phrase\": { \"title\": { \"query\": \"java spark\", \"slop\": 3 } } } } \u5c31\u53ef\u4ee5\u628a\u521a\u624d\u90a3\u4e2adoc\u5339\u914d\u4e0a\uff0c\u90a3\u4e2adoc\u4f1a\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de \u4f46\u662f\u5982\u679cslop\u8bbe\u7f6e\u7684\u662f2\uff0c\u90a3\u4e48java spark\uff0cspark\u6700\u591a\u53ea\u80fd\u79fb\u52a82\u6b21\uff0c\u6b64\u65f6\u8ddfdoc\u662f\u5339\u914d\u4e0d\u4e0a\u7684\uff0c\u90a3\u4e2adoc\u662f\u4e0d\u4f1a\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de\u7684 \u505a\u5b9e\u9a8c\uff0c\u9a8c\u8bc1slop\u7684\u542b\u4e49 GET /forum/article/_search { \"query\": { \"match_phrase\": { \"content\": { \"query\": \"spark data\", \"slop\": 3 } } } } spark is best big data solution based on scala ,an programming language similar to java spark spark data --> data --> data spark --> data GET /forum/article/_search { \"query\": { \"match_phrase\": { \"content\": { \"query\": \"data spark\", \"slop\": 5 } } } } spark is best big data data spark --> data/spark spark <--data spark --> data spark --> data spark --> data slop\u641c\u7d22\u4e0b\uff0c\u5173\u952e\u8bcd\u79bb\u7684\u8d8a\u8fd1\uff0crelevance score\u5c31\u4f1a\u8d8a\u9ad8\uff0c\u505a\u5b9e\u9a8c\u8bf4\u660e\u3002\u3002\u3002 GET /forum/article/_search { \"query\": { \"match_phrase\": { \"content\": { \"query\": \"java best\", \"slop\": 15 } } } } \u5176\u5b9e\uff0c\u52a0\u4e86slop\u7684phrase match\uff0c\u5c31\u662fproximity match\uff0c\u8fd1\u4f3c\u5339\u914d 1\u3001java spark\uff0c\u77ed\u8bed\uff0cdoc\uff0cphrase match 2\u3001java spark\uff0c\u53ef\u4ee5\u6709\u4e00\u5b9a\u7684\u8ddd\u79bb\uff0c\u4f46\u662f\u9760\u7684\u8d8a\u8fd1\uff0c\u8d8a\u5148\u641c\u7d22\u51fa\u6765\uff0cproximity match \u6df7\u5408\u4f7f\u7528match\u548c\u8fd1\u4f3c\u5339\u914d\u5b9e\u73b0\u53ec\u56de\u7387\u4e0e\u7cbe\u51c6\u5ea6\u7684\u5e73\u8861 \u53ec\u56de\u7387 \u6bd4\u5982\u4f60\u641c\u7d22\u4e00\u4e2ajava spark\uff0c\u603b\u5171\u6709100\u4e2adoc\uff0c\u80fd\u8fd4\u56de\u591a\u5c11\u4e2adoc\u4f5c\u4e3a\u7ed3\u679c\uff0c\u5c31\u662f\u53ec\u56de\u7387\uff0crecall \u7cbe\u51c6\u5ea6 \u6bd4\u5982\u4f60\u641c\u7d22\u4e00\u4e2ajava spark\uff0c\u80fd\u4e0d\u80fd\u5c3d\u53ef\u80fd\u8ba9\u5305\u542bjava spark\uff0c\u6216\u8005\u662fjava\u548cspark\u79bb\u7684\u5f88\u8fd1\u7684doc\uff0c\u6392\u5728\u6700\u524d\u9762\uff0cprecision \u76f4\u63a5\u7528match_phrase\u77ed\u8bed\u641c\u7d22\uff0c\u4f1a\u5bfc\u81f4\u5fc5\u987b\u6240\u6709term\u90fd\u5728doc field\u4e2d\u51fa\u73b0\uff0c\u800c\u4e14\u8ddd\u79bb\u5728slop\u9650\u5b9a\u8303\u56f4\u5185\uff0c\u624d\u80fd\u5339\u914d\u4e0a match phrase\uff0cproximity match\uff0c\u8981\u6c42doc\u5fc5\u987b\u5305\u542b\u6240\u6709\u7684term\uff0c\u624d\u80fd\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de\uff1b \u5982\u679c\u67d0\u4e00\u4e2adoc\u53ef\u80fd\u5c31\u662f\u6709\u67d0\u4e2aterm\u6ca1\u6709\u5305\u542b\uff0c\u90a3\u4e48\u5c31\u65e0\u6cd5\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de java spark --> hello world java --> \u5c31\u4e0d\u80fd\u8fd4\u56de\u4e86 java spark --> hello world, java spark --> \u624d\u53ef\u4ee5\u8fd4\u56de \u8fd1\u4f3c\u5339\u914d\u7684\u65f6\u5019\uff0c\u53ec\u56de\u7387\u6bd4\u8f83\u4f4e\uff0c\u7cbe\u51c6\u5ea6\u592a\u9ad8\u4e86 \u4f46\u662f\u6709\u65f6\u53ef\u80fd\u6211\u4eec\u5e0c\u671b\u7684\u662f\u5339\u914d\u5230\u51e0\u4e2aterm\u4e2d\u7684\u90e8\u5206\uff0c\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u7ed3\u679c\u51fa\u6765\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u53ec\u56de\u7387\u3002 \u540c\u65f6\u6211\u4eec\u4e5f\u5e0c\u671b\u7528\u4e0amatch_phrase\u6839\u636e\u8ddd\u79bb\u63d0\u5347\u5206\u6570\u7684\u529f\u80fd\uff0c\u8ba9\u51e0\u4e2aterm\u8ddd\u79bb\u8d8a\u8fd1\u5206\u6570\u5c31\u8d8a\u9ad8\uff0c\u4f18\u5148\u8fd4\u56de \u5c31\u662f\u4f18\u5148\u6ee1\u8db3\u53ec\u56de\u7387\uff0c\u610f\u601d\uff0cjava spark\uff0c\u5305\u542bjava\u7684\u4e5f\u8fd4\u56de\uff0c\u5305\u542bspark\u7684\u4e5f\u8fd4\u56de\uff0c\u5305\u542bjava\u548cspark\u7684\u4e5f\u8fd4\u56de\uff1b \u540c\u65f6\u517c\u987e\u7cbe\u51c6\u5ea6\uff0c\u5c31\u662f\u5305\u542bjava\u548cspark\uff0c\u540c\u65f6java\u548cspark\u79bb\u7684\u8d8a\u8fd1\u7684doc\u6392\u5728\u6700\u524d\u9762 \u6b64\u65f6\u53ef\u4ee5\u7528bool\u7ec4\u5408match query\u548cmatch_phrase query\u4e00\u8d77\uff0c\u6765\u5b9e\u73b0\u4e0a\u8ff0\u6548\u679c GET /forum/article/_search { \"query\": { \"bool\": { \"must\": { \"match\": { \"title\": { \"query\": \"java spark\" --> java\u6216spark\u6216java spark\uff0cjava\u548cspark\u9760\u524d\uff0c\u4f46\u662f\u6ca1\u6cd5\u533a\u5206java\u548cspark\u7684\u8ddd\u79bb\uff0c\u4e5f\u8bb8java\u548cspark\u9760\u7684\u5f88\u8fd1\uff0c\u4f46\u662f\u6ca1\u6cd5\u6392\u5728\u6700\u524d\u9762 } } }, \"should\": { \"match_phrase\": { --> \u5728slop\u4ee5\u5185\uff0c\u5982\u679cjava spark\u80fd\u5339\u914d\u4e0a\u4e00\u4e2adoc\uff0c\u90a3\u4e48\u5c31\u4f1a\u5bf9doc\u8d21\u732e\u81ea\u5df1\u7684relevance score\uff0c\u5982\u679cjava\u548cspark\u9760\u7684\u8d8a\u8fd1\uff0c\u90a3\u4e48\u5c31\u5206\u6570\u8d8a\u9ad8 \"title\": { \"query\": \"java spark\", \"slop\": 50 } } } } } } POST /forum/article/_bulk {\"index\": {\"_id\": 1}} {\"content\": \"i think java is the best programming language\"} {\"index\": {\"_id\": 2}} {\"content\": \"spark is best big data solution based on scala ,an programming language similar to java spark\"} # \u53ec\u56de\u7387 GET /forum/article/_search { \"query\": { \"bool\": { \"must\": [ { \"match\": { \"content\": \"java spark\" } } ] } } } # \u7cbe\u51c6\u5ea6\uff0c\u63d0\u5347\u76f8\u5173\u5ea6\u5206\u6570relevance score GET /forum/article/_search { \"query\": { \"bool\": { \"must\": [ { \"match\": { \"content\": \"java spark\" } } ], \"should\": [ { \"match_phrase\": { \"content\": { \"query\": \"java spark\", \"slop\": 50 } } } ] } } } \u4f7f\u7528rescoring\u673a\u5236\u4f18\u5316\u8fd1\u4f3c\u5339\u914d\u641c\u7d22\u7684\u6027\u80fd match\u548cphrase match(proximity match)\u533a\u522b match --> \u53ea\u8981\u7b80\u5355\u7684\u5339\u914d\u5230\u4e86\u4e00\u4e2aterm\uff0c\u5c31\u53ef\u4ee5\u7406\u89e3\u5c06term\u5bf9\u5e94\u7684doc\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de\uff0c\u626b\u63cf\u5012\u6392\u7d22\u5f15\uff0c\u626b\u63cf\u5230\u4e86\u5c31ok phrase match --> \u9996\u5148\u626b\u63cf\u5230\u6240\u6709term\u7684doc list; \u627e\u5230\u5305\u542b\u6240\u6709term\u7684doc list; \u7136\u540e\u5bf9\u6bcf\u4e2adoc\u90fd\u8ba1\u7b97\u6bcf\u4e2aterm\u7684position\uff0c\u662f\u5426\u7b26\u5408\u6307\u5b9a\u7684\u8303\u56f4; slop\uff0c\u9700\u8981\u8fdb\u884c\u590d\u6742\u7684\u8fd0\u7b97\uff0c\u6765\u5224\u65ad\u80fd\u5426\u901a\u8fc7slop\u79fb\u52a8\uff0c\u5339\u914d\u4e00\u4e2adoc match query\u7684\u6027\u80fd\u6bd4phrase match\u548cproximity match\uff08\u6709slop\uff09\u8981\u9ad8\u5f88\u591a\u3002 \u56e0\u4e3a\u540e\u4e24\u8005\u90fd\u8981\u8ba1\u7b97position\u7684\u8ddd\u79bb\u3002 match query\u6bd4phrase match\u7684\u6027\u80fd\u8981\u9ad810\u500d\uff0c\u6bd4proximity match\u7684\u6027\u80fd\u8981\u9ad820\u500d\u3002 \u4f46\u662f\u522b\u592a\u62c5\u5fc3\uff0c\u56e0\u4e3aes\u7684\u6027\u80fd\u4e00\u822c\u90fd\u5728\u6beb\u79d2\u7ea7\u522b\uff0cmatch query\u4e00\u822c\u5c31\u5728\u51e0\u6beb\u79d2\uff0c\u6216\u8005\u51e0\u5341\u6beb\u79d2\uff0c \u800cphrase match\u548cproximity match\u7684\u6027\u80fd\u5728\u51e0\u5341\u6beb\u79d2\u5230\u51e0\u767e\u6beb\u79d2\u4e4b\u95f4\uff0c\u6240\u4ee5\u4e5f\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002 \u4f18\u5316proximity match\u7684\u6027\u80fd\uff0c\u4e00\u822c\u5c31\u662f\u51cf\u5c11\u8981\u8fdb\u884cproximity match\u641c\u7d22\u7684document\u6570\u91cf\u3002 \u4e3b\u8981\u601d\u8def\u5c31\u662f\uff0c\u7528match query\u5148\u8fc7\u6ee4\u51fa\u9700\u8981\u7684\u6570\u636e\uff0c\u7136\u540e\u518d\u7528proximity match\u6765\u6839\u636eterm\u8ddd\u79bb\u63d0\u9ad8doc\u7684\u5206\u6570\uff0c \u540c\u65f6proximity match\u53ea\u9488\u5bf9\u6bcf\u4e2ashard\u7684\u5206\u6570\u6392\u540d\u524dn\u4e2adoc\u8d77\u4f5c\u7528\uff0c\u6765\u91cd\u65b0\u8c03\u6574\u5b83\u4eec\u7684\u5206\u6570\uff0c \u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e4b\u4e3arescoring\uff0c\u91cd\u8ba1\u5206\u3002 \u56e0\u4e3a\u4e00\u822c\u7528\u6237\u4f1a\u5206\u9875\u67e5\u8be2\uff0c\u53ea\u4f1a\u770b\u5230\u524d\u51e0\u9875\u7684\u6570\u636e\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5bf9\u6240\u6709\u7ed3\u679c\u8fdb\u884cproximity match\u64cd\u4f5c\u3002 \u7528\u6211\u4eec\u521a\u624d\u7684\u8bf4\u6cd5\uff0cmatch + proximity match\u540c\u65f6\u5b9e\u73b0\u53ec\u56de\u7387\u548c\u7cbe\u51c6\u5ea6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cmatch\u4e5f\u8bb8\u5339\u914d\u4e861000\u4e2adoc\uff0cproximity match\u5168\u90fd\u9700\u8981\u5bf9\u6bcf\u4e2adoc\u8fdb\u884c\u4e00\u904d\u8fd0\u7b97\uff0c \u5224\u65ad\u80fd\u5426slop\u79fb\u52a8\u5339\u914d\u4e0a\uff0c\u7136\u540e\u53bb\u8d21\u732e\u81ea\u5df1\u7684\u5206\u6570 \u4f46\u662f\u5f88\u591a\u60c5\u51b5\u4e0b\uff0cmatch\u51fa\u6765\u4e5f\u8bb81000\u4e2adoc\uff0c\u5176\u5b9e\u7528\u6237\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u662f\u5206\u9875\u67e5\u8be2\u7684\uff0c \u6240\u4ee5\u53ef\u80fd\u6700\u591a\u53ea\u4f1a\u770b\u524d\u51e0\u9875\uff0c\u6bd4\u5982\u4e00\u9875\u662f10\u6761\uff0c\u6700\u591a\u4e5f\u8bb8\u5c31\u770b5\u9875\uff0c\u5c31\u662f50\u6761 proximity match\u53ea\u8981\u5bf9\u524d50\u4e2adoc\u8fdb\u884cslop\u79fb\u52a8\u53bb\u5339\u914d\uff0c\u53bb\u8d21\u732e\u81ea\u5df1\u7684\u5206\u6570\u5373\u53ef\uff0c \u4e0d\u9700\u8981\u5bf9\u5168\u90e81000\u4e2adoc\u90fd\u53bb\u8fdb\u884c\u8ba1\u7b97\u548c\u8d21\u732e\u5206\u6570 rescore\uff1a\u91cd\u6253\u5206 match\uff1a1000\u4e2adoc\uff0c\u5176\u5b9e\u8fd9\u65f6\u5019\u6bcf\u4e2adoc\u90fd\u6709\u4e00\u4e2a\u5206\u6570\u4e86; proximity match\uff0c\u524d50\u4e2adoc\uff0c\u8fdb\u884crescore\uff0c\u91cd\u6253\u5206\uff0c\u5373\u53ef; \u8ba9\u524d50\u4e2adoc\uff0cterm\u4e3e\u4f8b\u8d8a\u8fd1\u7684\uff0c\u6392\u5728\u8d8a\u524d\u9762 GET /forum/article/_search { \"query\": { \"match\": { \"content\": \"java spark\" } }, \"rescore\": { \"window_size\": 50, \"query\": { \"rescore_query\": { \"match_phrase\": { \"content\": { \"query\": \"java spark\", \"slop\": 50 } } } } } }","title":"8\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f2"},{"location":"ElasticSearch/8\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f2/#phrase-matching","text":"\u8fd1\u4f3c\u5339\u914d 1\u3001\u4ec0\u4e48\u662f\u8fd1\u4f3c\u5339\u914d \u4e24\u4e2a\u53e5\u5b50 java is my favourite programming language, and I also think spark is a very good big data system. java spark are very related, because scala is spark's programming language and scala is also based on jvm like java. match query\uff0c\u641c\u7d22java spark { \"match\": { \"content\": \"java spark\" } } match query\uff0c\u53ea\u80fd\u641c\u7d22\u5230\u5305\u542bjava\u548cspark\u7684document\uff0c\u4f46\u662f\u4e0d\u77e5\u9053java\u548cspark\u662f\u4e0d\u662f\u79bb\u7684\u5f88\u8fd1 \u5305\u542bjava\u6216\u5305\u542bspark\uff0c\u6216\u5305\u542bjava\u548cspark\u7684doc\uff0c\u90fd\u4f1a\u88ab\u8fd4\u56de\u56de\u6765\u3002\u6211\u4eec\u5176\u5b9e\u5e76\u4e0d\u77e5\u9053\u54ea\u4e2adoc\uff0cjava\u548cspark\u8ddd\u79bb\u7684\u6bd4\u8f83\u8fd1\u3002\u5982\u679c\u6211\u4eec\u5c31\u662f\u5e0c\u671b\u641c\u7d22java spark\uff0c\u4e2d\u95f4\u4e0d\u80fd\u63d2\u5165\u4efb\u4f55\u5176\u4ed6\u7684\u5b57\u7b26\uff0c\u90a3\u8fd9\u4e2a\u65f6\u5019match\u53bb\u505a\u5168\u6587\u68c0\u7d22\uff0c\u80fd\u641e\u5b9a\u6211\u4eec\u7684\u9700\u6c42\u5417\uff1f\u7b54\u6848\u662f\uff0c\u641e\u4e0d\u5b9a\u3002 \u5982\u679c\u6211\u4eec\u8981\u5c3d\u91cf\u8ba9java\u548cspark\u79bb\u7684\u5f88\u8fd1\u7684document\u4f18\u5148\u8fd4\u56de\uff0c\u8981\u7ed9\u5b83\u4e00\u4e2a\u66f4\u9ad8\u7684relevance score\uff0c\u8fd9\u5c31\u6d89\u53ca\u5230\u4e86proximity match\uff0c\u8fd1\u4f3c\u5339\u914d \u5982\u679c\u8bf4\uff0c\u8981\u5b9e\u73b0\u4e24\u4e2a\u9700\u6c42\uff1a 1\u3001java spark\uff0c\u5c31\u9760\u5728\u4e00\u8d77\uff0c\u4e2d\u95f4\u4e0d\u80fd\u63d2\u5165\u4efb\u4f55\u5176\u4ed6\u5b57\u7b26\uff0c\u5c31\u8981\u641c\u7d22\u51fa\u6765\u8fd9\u79cddoc 2\u3001java spark\uff0c\u4f46\u662f\u8981\u6c42\uff0cjava\u548cspark\u4e24\u4e2a\u5355\u8bcd\u9760\u7684\u8d8a\u8fd1\uff0cdoc\u7684\u5206\u6570\u8d8a\u9ad8\uff0c\u6392\u540d\u8d8a\u9760\u524d \u8981\u5b9e\u73b0\u4e0a\u8ff0\u4e24\u4e2a\u9700\u6c42\uff0c\u7528match\u505a\u5168\u6587\u68c0\u7d22\uff0c\u662f\u641e\u4e0d\u5b9a\u7684\uff0c\u5fc5\u987b\u5f97\u7528proximity match\uff0c\u8fd1\u4f3c\u5339\u914d phrase match\uff0cproximity match\uff1a\u77ed\u8bed\u5339\u914d\uff0c\u8fd1\u4f3c\u5339\u914d \u8fd9\u4e00\u8bb2\uff0c\u8981\u5b66\u4e60\u7684\u662fphrase match\uff0c\u5c31\u662f\u4ec5\u4ec5\u641c\u7d22\u51fajava\u548cspark\u9760\u5728\u4e00\u8d77\u7684\u90a3\u4e9bdoc\uff0c\u6bd4\u5982\u6709\u4e2adoc\uff0c\u662fjava use'd spark\uff0c\u4e0d\u884c\u3002\u5fc5\u987b\u662f\u6bd4\u5982java spark are very good friends\uff0c\u662f\u53ef\u4ee5\u641c\u7d22\u51fa\u6765\u7684\u3002 phrase match\uff0c\u5c31\u662f\u8981\u53bb\u5c06\u591a\u4e2aterm\u4f5c\u4e3a\u4e00\u4e2a\u77ed\u8bed\uff0c\u4e00\u8d77\u53bb\u641c\u7d22\uff0c\u53ea\u6709\u5305\u542b\u8fd9\u4e2a\u77ed\u8bed\u7684doc\u624d\u4f1a\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de\u3002\u4e0d\u50cf\u662fmatch\uff0cjava spark\uff0cjava\u7684doc\u4e5f\u4f1a\u8fd4\u56de\uff0cspark\u7684doc\u4e5f\u4f1a\u8fd4\u56de\u3002 2\u3001match_phrase GET /forum/article/_search { \"query\": { \"match\": { \"content\": \"java spark\" } } } \u5355\u5355\u5305\u542bjava\u7684doc\u4e5f\u8fd4\u56de\u4e86\uff0c\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u679c POST /forum/article/5/_update { \"doc\": { \"content\": \"spark is best big data solution based on scala ,an programming language similar to java spark\" } } \u5c06\u4e00\u4e2adoc\u7684content\u8bbe\u7f6e\u4e3a\u6070\u5de7\u5305\u542bjava spark\u8fd9\u4e2a\u77ed\u8bed match_phrase\u8bed\u6cd5 GET /forum/article/_search { \"query\": { \"match_phrase\": { \"content\": \"java spark\" } } } \u6210\u529f\u4e86\uff0c\u53ea\u6709\u5305\u542bjava spark\u8fd9\u4e2a\u77ed\u8bed\u7684doc\u624d\u8fd4\u56de\u4e86\uff0c\u53ea\u5305\u542bjava\u7684doc\u4e0d\u4f1a\u8fd4\u56de 3\u3001term position hello world, java spark doc1 hi, spark java doc2 hello doc1(0) wolrd doc1(1) java doc1(2) doc2(2) spark doc1(3) doc2(1) \u4e86\u89e3\u4ec0\u4e48\u662f\u5206\u8bcd\u540e\u7684position GET _analyze { \"text\" : \"hello world, java spark\" , \"analyzer\" : \"standard\" } 4\u3001match_phrase\u7684\u57fa\u672c\u539f\u7406 \u7d22\u5f15\u4e2d\u7684position\uff0cmatch_phrase hello world, java spark doc1 hi, spark java doc2 hello doc1(0) wolrd doc1(1) java doc1(2) doc2(2) spark doc1(3) doc2(1) java spark --> match phrase java spark --> java\u548cspark java --> doc1(2) doc2(2) spark --> doc1(3) doc2(1) \u8981\u627e\u5230\u6bcf\u4e2aterm\u90fd\u5728\u7684\u4e00\u4e2a\u5171\u6709\u7684\u90a3\u4e9bdoc\uff0c\u5c31\u662f\u8981\u6c42\u4e00\u4e2adoc\uff0c\u5fc5\u987b\u5305\u542b\u6bcf\u4e2aterm\uff0c\u624d\u80fd\u62ff\u51fa\u6765\u7ee7\u7eed\u8ba1\u7b97 doc1 --> java\u548cspark --> spark position\u6070\u5de7\u6bd4java\u59271 --> java\u7684position\u662f2\uff0cspark\u7684position\u662f3\uff0c\u6070\u597d\u6ee1\u8db3\u6761\u4ef6 doc1\u7b26\u5408\u6761\u4ef6 doc2 --> java\u548cspark --> java position\u662f2\uff0cspark position\u662f1\uff0cspark position\u6bd4java position\u5c0f1\uff0c\u800c\u4e0d\u662f\u59271 --> \u5149\u662fposition\u5c31\u4e0d\u6ee1\u8db3\uff0c\u90a3\u4e48doc2\u4e0d\u5339\u914d \u5fc5\u987b\u7406\u89e3\u8fd9\u5757\u539f\u7406\uff01\uff01\uff01\uff01 \u56e0\u4e3a\u540e\u9762\u7684proximity match\u5c31\u662f\u539f\u7406\u8ddf\u8fd9\u4e2a\u4e00\u6a21\u4e00\u6837\uff01\uff01\uff01","title":"\u5728\u6848\u4f8b\u5b9e\u6218\u4e2d\u638c\u63e1phrase matching\u641c\u7d22\u6280\u672f"},{"location":"ElasticSearch/8\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f2/#slop","text":"GET /forum/article/_search { \"query\": { \"match_phrase\": { \"title\": { \"query\": \"java spark\", \"slop\": 1 } } } } slop\u7684\u542b\u4e49\u662f\u4ec0\u4e48\uff1f query string\uff0c\u641c\u7d22\u6587\u672c\uff0c\u4e2d\u7684\u51e0\u4e2aterm\uff0c\u8981\u7ecf\u8fc7\u51e0\u6b21\u79fb\u52a8\u624d\u80fd\u4e0e\u4e00\u4e2adocument\u5339\u914d\uff0c\u8fd9\u4e2a\u79fb\u52a8\u7684\u6b21\u6570\uff0c\u5c31\u662fslop \u5b9e\u9645\u4e3e\u4f8b\uff0c\u4e00\u4e2aquery string\u7ecf\u8fc7\u51e0\u6b21\u79fb\u52a8\u4e4b\u540e\u53ef\u4ee5\u5339\u914d\u5230\u4e00\u4e2adocument\uff0c\u7136\u540e\u8bbe\u7f6eslop hello world, java is very good, spark is also very good. java spark\uff0cmatch phrase\uff0c\u641c\u4e0d\u5230 \u5982\u679c\u6211\u4eec\u6307\u5b9a\u4e86slop\uff0c\u90a3\u4e48\u5c31\u5141\u8bb8java spark\u8fdb\u884c\u79fb\u52a8\uff0c\u6765\u5c1d\u8bd5\u4e0edoc\u8fdb\u884c\u5339\u914d java is very good spark is java spark java --> spark java --> spark java --> spark \u8fd9\u91cc\u7684slop\uff0c\u5c31\u662f3\uff0c\u56e0\u4e3ajava spark\u8fd9\u4e2a\u77ed\u8bed\uff0cspark\u79fb\u52a8\u4e863\u6b21\uff0c\u5c31\u53ef\u4ee5\u8ddf\u4e00\u4e2adoc\u5339\u914d\u4e0a\u4e86 slop\u7684\u542b\u4e49\uff0c\u4e0d\u4ec5\u4ec5\u662f\u8bf4\u4e00\u4e2aquery string terms\u79fb\u52a8\u51e0\u6b21\uff0c\u8ddf\u4e00\u4e2adoc\u5339\u914d\u4e0a\u3002\u4e00\u4e2aquery string terms\uff0c\u6700\u591a\u53ef\u4ee5\u79fb\u52a8\u51e0\u6b21\u53bb\u5c1d\u8bd5\u8ddf\u4e00\u4e2adoc\u5339\u914d\u4e0a slop\uff0c\u8bbe\u7f6e\u7684\u662f3\uff0c\u90a3\u4e48\u5c31ok GET /forum/article/_search { \"query\": { \"match_phrase\": { \"title\": { \"query\": \"java spark\", \"slop\": 3 } } } } \u5c31\u53ef\u4ee5\u628a\u521a\u624d\u90a3\u4e2adoc\u5339\u914d\u4e0a\uff0c\u90a3\u4e2adoc\u4f1a\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de \u4f46\u662f\u5982\u679cslop\u8bbe\u7f6e\u7684\u662f2\uff0c\u90a3\u4e48java spark\uff0cspark\u6700\u591a\u53ea\u80fd\u79fb\u52a82\u6b21\uff0c\u6b64\u65f6\u8ddfdoc\u662f\u5339\u914d\u4e0d\u4e0a\u7684\uff0c\u90a3\u4e2adoc\u662f\u4e0d\u4f1a\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de\u7684 \u505a\u5b9e\u9a8c\uff0c\u9a8c\u8bc1slop\u7684\u542b\u4e49 GET /forum/article/_search { \"query\": { \"match_phrase\": { \"content\": { \"query\": \"spark data\", \"slop\": 3 } } } } spark is best big data solution based on scala ,an programming language similar to java spark spark data --> data --> data spark --> data GET /forum/article/_search { \"query\": { \"match_phrase\": { \"content\": { \"query\": \"data spark\", \"slop\": 5 } } } } spark is best big data data spark --> data/spark spark <--data spark --> data spark --> data spark --> data slop\u641c\u7d22\u4e0b\uff0c\u5173\u952e\u8bcd\u79bb\u7684\u8d8a\u8fd1\uff0crelevance score\u5c31\u4f1a\u8d8a\u9ad8\uff0c\u505a\u5b9e\u9a8c\u8bf4\u660e\u3002\u3002\u3002 GET /forum/article/_search { \"query\": { \"match_phrase\": { \"content\": { \"query\": \"java best\", \"slop\": 15 } } } } \u5176\u5b9e\uff0c\u52a0\u4e86slop\u7684phrase match\uff0c\u5c31\u662fproximity match\uff0c\u8fd1\u4f3c\u5339\u914d 1\u3001java spark\uff0c\u77ed\u8bed\uff0cdoc\uff0cphrase match 2\u3001java spark\uff0c\u53ef\u4ee5\u6709\u4e00\u5b9a\u7684\u8ddd\u79bb\uff0c\u4f46\u662f\u9760\u7684\u8d8a\u8fd1\uff0c\u8d8a\u5148\u641c\u7d22\u51fa\u6765\uff0cproximity match","title":"\u57fa\u4e8eslop\u53c2\u6570\u5b9e\u73b0\u8fd1\u4f3c\u5339\u914d\u4ee5\u53ca\u539f\u7406\u5256\u6790\u548c\u76f8\u5173\u5b9e\u9a8c"},{"location":"ElasticSearch/8\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f2/#match","text":"\u53ec\u56de\u7387 \u6bd4\u5982\u4f60\u641c\u7d22\u4e00\u4e2ajava spark\uff0c\u603b\u5171\u6709100\u4e2adoc\uff0c\u80fd\u8fd4\u56de\u591a\u5c11\u4e2adoc\u4f5c\u4e3a\u7ed3\u679c\uff0c\u5c31\u662f\u53ec\u56de\u7387\uff0crecall \u7cbe\u51c6\u5ea6 \u6bd4\u5982\u4f60\u641c\u7d22\u4e00\u4e2ajava spark\uff0c\u80fd\u4e0d\u80fd\u5c3d\u53ef\u80fd\u8ba9\u5305\u542bjava spark\uff0c\u6216\u8005\u662fjava\u548cspark\u79bb\u7684\u5f88\u8fd1\u7684doc\uff0c\u6392\u5728\u6700\u524d\u9762\uff0cprecision \u76f4\u63a5\u7528match_phrase\u77ed\u8bed\u641c\u7d22\uff0c\u4f1a\u5bfc\u81f4\u5fc5\u987b\u6240\u6709term\u90fd\u5728doc field\u4e2d\u51fa\u73b0\uff0c\u800c\u4e14\u8ddd\u79bb\u5728slop\u9650\u5b9a\u8303\u56f4\u5185\uff0c\u624d\u80fd\u5339\u914d\u4e0a match phrase\uff0cproximity match\uff0c\u8981\u6c42doc\u5fc5\u987b\u5305\u542b\u6240\u6709\u7684term\uff0c\u624d\u80fd\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de\uff1b \u5982\u679c\u67d0\u4e00\u4e2adoc\u53ef\u80fd\u5c31\u662f\u6709\u67d0\u4e2aterm\u6ca1\u6709\u5305\u542b\uff0c\u90a3\u4e48\u5c31\u65e0\u6cd5\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de java spark --> hello world java --> \u5c31\u4e0d\u80fd\u8fd4\u56de\u4e86 java spark --> hello world, java spark --> \u624d\u53ef\u4ee5\u8fd4\u56de \u8fd1\u4f3c\u5339\u914d\u7684\u65f6\u5019\uff0c\u53ec\u56de\u7387\u6bd4\u8f83\u4f4e\uff0c\u7cbe\u51c6\u5ea6\u592a\u9ad8\u4e86 \u4f46\u662f\u6709\u65f6\u53ef\u80fd\u6211\u4eec\u5e0c\u671b\u7684\u662f\u5339\u914d\u5230\u51e0\u4e2aterm\u4e2d\u7684\u90e8\u5206\uff0c\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u7ed3\u679c\u51fa\u6765\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u53ec\u56de\u7387\u3002 \u540c\u65f6\u6211\u4eec\u4e5f\u5e0c\u671b\u7528\u4e0amatch_phrase\u6839\u636e\u8ddd\u79bb\u63d0\u5347\u5206\u6570\u7684\u529f\u80fd\uff0c\u8ba9\u51e0\u4e2aterm\u8ddd\u79bb\u8d8a\u8fd1\u5206\u6570\u5c31\u8d8a\u9ad8\uff0c\u4f18\u5148\u8fd4\u56de \u5c31\u662f\u4f18\u5148\u6ee1\u8db3\u53ec\u56de\u7387\uff0c\u610f\u601d\uff0cjava spark\uff0c\u5305\u542bjava\u7684\u4e5f\u8fd4\u56de\uff0c\u5305\u542bspark\u7684\u4e5f\u8fd4\u56de\uff0c\u5305\u542bjava\u548cspark\u7684\u4e5f\u8fd4\u56de\uff1b \u540c\u65f6\u517c\u987e\u7cbe\u51c6\u5ea6\uff0c\u5c31\u662f\u5305\u542bjava\u548cspark\uff0c\u540c\u65f6java\u548cspark\u79bb\u7684\u8d8a\u8fd1\u7684doc\u6392\u5728\u6700\u524d\u9762 \u6b64\u65f6\u53ef\u4ee5\u7528bool\u7ec4\u5408match query\u548cmatch_phrase query\u4e00\u8d77\uff0c\u6765\u5b9e\u73b0\u4e0a\u8ff0\u6548\u679c GET /forum/article/_search { \"query\": { \"bool\": { \"must\": { \"match\": { \"title\": { \"query\": \"java spark\" --> java\u6216spark\u6216java spark\uff0cjava\u548cspark\u9760\u524d\uff0c\u4f46\u662f\u6ca1\u6cd5\u533a\u5206java\u548cspark\u7684\u8ddd\u79bb\uff0c\u4e5f\u8bb8java\u548cspark\u9760\u7684\u5f88\u8fd1\uff0c\u4f46\u662f\u6ca1\u6cd5\u6392\u5728\u6700\u524d\u9762 } } }, \"should\": { \"match_phrase\": { --> \u5728slop\u4ee5\u5185\uff0c\u5982\u679cjava spark\u80fd\u5339\u914d\u4e0a\u4e00\u4e2adoc\uff0c\u90a3\u4e48\u5c31\u4f1a\u5bf9doc\u8d21\u732e\u81ea\u5df1\u7684relevance score\uff0c\u5982\u679cjava\u548cspark\u9760\u7684\u8d8a\u8fd1\uff0c\u90a3\u4e48\u5c31\u5206\u6570\u8d8a\u9ad8 \"title\": { \"query\": \"java spark\", \"slop\": 50 } } } } } } POST /forum/article/_bulk {\"index\": {\"_id\": 1}} {\"content\": \"i think java is the best programming language\"} {\"index\": {\"_id\": 2}} {\"content\": \"spark is best big data solution based on scala ,an programming language similar to java spark\"} # \u53ec\u56de\u7387 GET /forum/article/_search { \"query\": { \"bool\": { \"must\": [ { \"match\": { \"content\": \"java spark\" } } ] } } } # \u7cbe\u51c6\u5ea6\uff0c\u63d0\u5347\u76f8\u5173\u5ea6\u5206\u6570relevance score GET /forum/article/_search { \"query\": { \"bool\": { \"must\": [ { \"match\": { \"content\": \"java spark\" } } ], \"should\": [ { \"match_phrase\": { \"content\": { \"query\": \"java spark\", \"slop\": 50 } } } ] } } }","title":"\u6df7\u5408\u4f7f\u7528match\u548c\u8fd1\u4f3c\u5339\u914d\u5b9e\u73b0\u53ec\u56de\u7387\u4e0e\u7cbe\u51c6\u5ea6\u7684\u5e73\u8861"},{"location":"ElasticSearch/8\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f2/#rescoring","text":"match\u548cphrase match(proximity match)\u533a\u522b match --> \u53ea\u8981\u7b80\u5355\u7684\u5339\u914d\u5230\u4e86\u4e00\u4e2aterm\uff0c\u5c31\u53ef\u4ee5\u7406\u89e3\u5c06term\u5bf9\u5e94\u7684doc\u4f5c\u4e3a\u7ed3\u679c\u8fd4\u56de\uff0c\u626b\u63cf\u5012\u6392\u7d22\u5f15\uff0c\u626b\u63cf\u5230\u4e86\u5c31ok phrase match --> \u9996\u5148\u626b\u63cf\u5230\u6240\u6709term\u7684doc list; \u627e\u5230\u5305\u542b\u6240\u6709term\u7684doc list; \u7136\u540e\u5bf9\u6bcf\u4e2adoc\u90fd\u8ba1\u7b97\u6bcf\u4e2aterm\u7684position\uff0c\u662f\u5426\u7b26\u5408\u6307\u5b9a\u7684\u8303\u56f4; slop\uff0c\u9700\u8981\u8fdb\u884c\u590d\u6742\u7684\u8fd0\u7b97\uff0c\u6765\u5224\u65ad\u80fd\u5426\u901a\u8fc7slop\u79fb\u52a8\uff0c\u5339\u914d\u4e00\u4e2adoc match query\u7684\u6027\u80fd\u6bd4phrase match\u548cproximity match\uff08\u6709slop\uff09\u8981\u9ad8\u5f88\u591a\u3002 \u56e0\u4e3a\u540e\u4e24\u8005\u90fd\u8981\u8ba1\u7b97position\u7684\u8ddd\u79bb\u3002 match query\u6bd4phrase match\u7684\u6027\u80fd\u8981\u9ad810\u500d\uff0c\u6bd4proximity match\u7684\u6027\u80fd\u8981\u9ad820\u500d\u3002 \u4f46\u662f\u522b\u592a\u62c5\u5fc3\uff0c\u56e0\u4e3aes\u7684\u6027\u80fd\u4e00\u822c\u90fd\u5728\u6beb\u79d2\u7ea7\u522b\uff0cmatch query\u4e00\u822c\u5c31\u5728\u51e0\u6beb\u79d2\uff0c\u6216\u8005\u51e0\u5341\u6beb\u79d2\uff0c \u800cphrase match\u548cproximity match\u7684\u6027\u80fd\u5728\u51e0\u5341\u6beb\u79d2\u5230\u51e0\u767e\u6beb\u79d2\u4e4b\u95f4\uff0c\u6240\u4ee5\u4e5f\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002 \u4f18\u5316proximity match\u7684\u6027\u80fd\uff0c\u4e00\u822c\u5c31\u662f\u51cf\u5c11\u8981\u8fdb\u884cproximity match\u641c\u7d22\u7684document\u6570\u91cf\u3002 \u4e3b\u8981\u601d\u8def\u5c31\u662f\uff0c\u7528match query\u5148\u8fc7\u6ee4\u51fa\u9700\u8981\u7684\u6570\u636e\uff0c\u7136\u540e\u518d\u7528proximity match\u6765\u6839\u636eterm\u8ddd\u79bb\u63d0\u9ad8doc\u7684\u5206\u6570\uff0c \u540c\u65f6proximity match\u53ea\u9488\u5bf9\u6bcf\u4e2ashard\u7684\u5206\u6570\u6392\u540d\u524dn\u4e2adoc\u8d77\u4f5c\u7528\uff0c\u6765\u91cd\u65b0\u8c03\u6574\u5b83\u4eec\u7684\u5206\u6570\uff0c \u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e4b\u4e3arescoring\uff0c\u91cd\u8ba1\u5206\u3002 \u56e0\u4e3a\u4e00\u822c\u7528\u6237\u4f1a\u5206\u9875\u67e5\u8be2\uff0c\u53ea\u4f1a\u770b\u5230\u524d\u51e0\u9875\u7684\u6570\u636e\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5bf9\u6240\u6709\u7ed3\u679c\u8fdb\u884cproximity match\u64cd\u4f5c\u3002 \u7528\u6211\u4eec\u521a\u624d\u7684\u8bf4\u6cd5\uff0cmatch + proximity match\u540c\u65f6\u5b9e\u73b0\u53ec\u56de\u7387\u548c\u7cbe\u51c6\u5ea6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cmatch\u4e5f\u8bb8\u5339\u914d\u4e861000\u4e2adoc\uff0cproximity match\u5168\u90fd\u9700\u8981\u5bf9\u6bcf\u4e2adoc\u8fdb\u884c\u4e00\u904d\u8fd0\u7b97\uff0c \u5224\u65ad\u80fd\u5426slop\u79fb\u52a8\u5339\u914d\u4e0a\uff0c\u7136\u540e\u53bb\u8d21\u732e\u81ea\u5df1\u7684\u5206\u6570 \u4f46\u662f\u5f88\u591a\u60c5\u51b5\u4e0b\uff0cmatch\u51fa\u6765\u4e5f\u8bb81000\u4e2adoc\uff0c\u5176\u5b9e\u7528\u6237\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u662f\u5206\u9875\u67e5\u8be2\u7684\uff0c \u6240\u4ee5\u53ef\u80fd\u6700\u591a\u53ea\u4f1a\u770b\u524d\u51e0\u9875\uff0c\u6bd4\u5982\u4e00\u9875\u662f10\u6761\uff0c\u6700\u591a\u4e5f\u8bb8\u5c31\u770b5\u9875\uff0c\u5c31\u662f50\u6761 proximity match\u53ea\u8981\u5bf9\u524d50\u4e2adoc\u8fdb\u884cslop\u79fb\u52a8\u53bb\u5339\u914d\uff0c\u53bb\u8d21\u732e\u81ea\u5df1\u7684\u5206\u6570\u5373\u53ef\uff0c \u4e0d\u9700\u8981\u5bf9\u5168\u90e81000\u4e2adoc\u90fd\u53bb\u8fdb\u884c\u8ba1\u7b97\u548c\u8d21\u732e\u5206\u6570 rescore\uff1a\u91cd\u6253\u5206 match\uff1a1000\u4e2adoc\uff0c\u5176\u5b9e\u8fd9\u65f6\u5019\u6bcf\u4e2adoc\u90fd\u6709\u4e00\u4e2a\u5206\u6570\u4e86; proximity match\uff0c\u524d50\u4e2adoc\uff0c\u8fdb\u884crescore\uff0c\u91cd\u6253\u5206\uff0c\u5373\u53ef; \u8ba9\u524d50\u4e2adoc\uff0cterm\u4e3e\u4f8b\u8d8a\u8fd1\u7684\uff0c\u6392\u5728\u8d8a\u524d\u9762 GET /forum/article/_search { \"query\": { \"match\": { \"content\": \"java spark\" } }, \"rescore\": { \"window_size\": 50, \"query\": { \"rescore_query\": { \"match_phrase\": { \"content\": { \"query\": \"java spark\", \"slop\": 50 } } } } } }","title":"\u4f7f\u7528rescoring\u673a\u5236\u4f18\u5316\u8fd1\u4f3c\u5339\u914d\u641c\u7d22\u7684\u6027\u80fd"},{"location":"ElasticSearch/9\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f3/","text":"\u524d\u7f00\u641c\u7d22\u3001\u901a\u914d\u7b26\u641c\u7d22\u3001\u6b63\u5219\u641c\u7d22\u7b49\u6280\u672f 1\u3001\u524d\u7f00\u641c\u7d22 C3D0-KD345 C3K5-DFG65 C4I8-UI365 C3 --> \u4e0a\u9762\u8fd9\u4e24\u4e2a\u90fd\u641c\u7d22\u51fa\u6765 --> \u6839\u636e\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u53bb\u641c\u7d22 \u4e0d\u7528\u5e16\u5b50\u7684\u6848\u4f8b\u80cc\u666f\uff0c\u56e0\u4e3a\u6bd4\u8f83\u7b80\u5355\uff0c\u76f4\u63a5\u7528\u81ea\u5df1\u624b\u52a8\u5efa\u7684\u65b0\u7d22\u5f15\uff0c\u7ed9\u5927\u5bb6\u6f14\u793a\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86 PUT my_index { \"mappings\" : { \"my_type\" : { \"properties\" : { \"title\" : { \"type\" : \"keyword\" } } } } } GET my_index / my_type / _search { \"query\" : { \"prefix\" : { \"title\" : { \"value\" : \"C3\" } } } } 2\u3001\u524d\u7f00\u641c\u7d22\u7684\u539f\u7406 prefix query\u4e0d\u8ba1\u7b97relevance score\uff0c\u4e0eprefix filter\u552f\u4e00\u7684\u533a\u522b\u5c31\u662f\uff0cfilter\u4f1acache bitset \u626b\u63cf\u6574\u4e2a\u5012\u6392\u7d22\u5f15\uff0c\u4e3e\u4f8b\u8bf4\u660e \u524d\u7f00\u8d8a\u77ed\uff0c\u8981\u5904\u7406\u7684doc\u8d8a\u591a\uff0c\u6027\u80fd\u8d8a\u5dee\uff0c\u5c3d\u53ef\u80fd\u7528\u957f\u524d\u7f00\u641c\u7d22 \u524d\u7f00\u641c\u7d22\uff0c\u5b83\u662f\u600e\u4e48\u6267\u884c\u7684\uff1f\u6027\u80fd\u4e3a\u4ec0\u4e48\u5dee\u5462\uff1f match C3-D0-KD345 C3-K5-DFG65 C4-I8-UI365 \u5168\u6587\u68c0\u7d22 \u6bcf\u4e2a\u5b57\u7b26\u4e32\u90fd\u9700\u8981\u88ab\u5206\u8bcd c3 doc1,doc2 d0 kd345 k5 dfg65 c4 i8 ui365 c3 --> \u626b\u63cf\u5012\u6392\u7d22\u5f15 --> \u4e00\u65e6\u626b\u63cf\u5230c3\uff0c\u5c31\u53ef\u4ee5\u505c\u4e86\uff0c\u56e0\u4e3a\u5e26c3\u7684\u5c312\u4e2adoc\uff0c\u5df2\u7ecf\u627e\u5230\u4e86 --> \u6ca1\u6709\u5fc5\u8981\u7ee7\u7eed\u53bb\u641c\u7d22\u5176\u4ed6\u7684term\u4e86 match\u6027\u80fd\u5f80\u5f80\u662f\u5f88\u9ad8\u7684 \u4e0d\u5206\u8bcd C3-D0-KD345 C3-K5-DFG65 C4-I8-UI365 c3 --> \u5148\u626b\u63cf\u5230\u4e86C3-D0-KD345\uff0c\u5f88\u68d2\uff0c\u627e\u5230\u4e86\u4e00\u4e2a\u524d\u7f00\u5e26c3\u7684\u5b57\u7b26\u4e32 --> \u8fd8\u662f\u8981\u7ee7\u7eed\u641c\u7d22\u7684\uff0c\u56e0\u4e3a\u540e\u9762\u8fd8\u6709\u4e00\u4e2aC3-K5-DFG65\uff0c\u4e5f\u8bb8\u8fd8\u6709\u5176\u4ed6\u5f88\u591a\u7684\u524d\u7f00\u5e26c3\u7684\u5b57\u7b26\u4e32 --> \u4f60\u626b\u63cf\u5230\u4e86\u4e00\u4e2a\u524d\u7f00\u5339\u914d\u7684term\uff0c\u4e0d\u80fd\u505c\uff0c\u5fc5\u987b\u7ee7\u7eed\u641c\u7d22 --> \u76f4\u5230\u626b\u63cf\u5b8c\u6574\u4e2a\u7684\u5012\u6392\u7d22\u5f15\uff0c\u624d\u80fd\u7ed3\u675f \u56e0\u4e3a\u5b9e\u9645\u573a\u666f\u4e2d\uff0c\u53ef\u80fd\u6709\u4e9b\u573a\u666f\u662f\u5168\u6587\u68c0\u7d22\u89e3\u51b3\u4e0d\u4e86\u7684 C3D0-KD345 C3K5-DFG65 C4I8-UI365 c3d0 kd345 c3 --> match --> \u626b\u63cf\u6574\u4e2a\u5012\u6392\u7d22\u5f15\uff0c\u80fd\u627e\u5230\u5417 c3 --> \u53ea\u80fd\u7528prefix prefix\u6027\u80fd\u5f88\u5dee 3\u3001\u901a\u914d\u7b26\u641c\u7d22 \u8ddf\u524d\u7f00\u641c\u7d22\u7c7b\u4f3c\uff0c\u529f\u80fd\u66f4\u52a0\u5f3a\u5927 C3D0-KD345 C3K5-DFG65 C4I8-UI365 5\u5b57\u7b26-D\u4efb\u610f\u4e2a\u5b57\u7b265 5 ?-* 5 \uff1a\u901a\u914d\u7b26\u53bb\u8868\u8fbe\u66f4\u52a0\u590d\u6742\u7684\u6a21\u7cca\u641c\u7d22\u7684\u8bed\u4e49 GET my_index / my_type / _search { \"query\" : { \"wildcard\" : { \"title\" : { \"value\" : \"C?K*5\" } } } } ? \uff1a\u4efb\u610f\u5b57\u7b26 * \uff1a 0 \u4e2a\u6216\u4efb\u610f\u591a\u4e2a\u5b57\u7b26 \u6027\u80fd\u4e00\u6837\u5dee\uff0c\u5fc5\u987b\u626b\u63cf\u6574\u4e2a\u5012\u6392\u7d22\u5f15\uff0c\u624dok 4\u3001\u6b63\u5219\u641c\u7d22 GET /my_index/my_type/_search { \"query\": { \"regexp\": { \"title\": \"C[0-9].+\" } } } C[0-9].+ [0-9]\uff1a\u6307\u5b9a\u8303\u56f4\u5185\u7684\u6570\u5b57 [a-z]\uff1a\u6307\u5b9a\u8303\u56f4\u5185\u7684\u5b57\u6bcd .\uff1a\u4e00\u4e2a\u5b57\u7b26 +\uff1a\u524d\u9762\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u4ee5\u51fa\u73b0\u4e00\u6b21\u6216\u591a\u6b21 wildcard\u548cregexp\uff0c\u4e0eprefix\u539f\u7406\u4e00\u81f4\uff0c\u90fd\u4f1a\u626b\u63cf\u6574\u4e2a\u7d22\u5f15\uff0c\u6027\u80fd\u5f88\u5dee \u4e3b\u8981\u662f\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u4e00\u4e9b\u9ad8\u7ea7\u7684\u641c\u7d22\u8bed\u6cd5\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u80fd\u4e0d\u7528\u5c3d\u91cf\u522b\u7528\u3002\u6027\u80fd\u592a\u5dee\u4e86\u3002","title":"9\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f3"},{"location":"ElasticSearch/9\u3001ElasticSearch\u6df1\u5ea6\u63a2\u79d8\u641c\u7d22\u6280\u672f3/#_1","text":"1\u3001\u524d\u7f00\u641c\u7d22 C3D0-KD345 C3K5-DFG65 C4I8-UI365 C3 --> \u4e0a\u9762\u8fd9\u4e24\u4e2a\u90fd\u641c\u7d22\u51fa\u6765 --> \u6839\u636e\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u53bb\u641c\u7d22 \u4e0d\u7528\u5e16\u5b50\u7684\u6848\u4f8b\u80cc\u666f\uff0c\u56e0\u4e3a\u6bd4\u8f83\u7b80\u5355\uff0c\u76f4\u63a5\u7528\u81ea\u5df1\u624b\u52a8\u5efa\u7684\u65b0\u7d22\u5f15\uff0c\u7ed9\u5927\u5bb6\u6f14\u793a\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86 PUT my_index { \"mappings\" : { \"my_type\" : { \"properties\" : { \"title\" : { \"type\" : \"keyword\" } } } } } GET my_index / my_type / _search { \"query\" : { \"prefix\" : { \"title\" : { \"value\" : \"C3\" } } } } 2\u3001\u524d\u7f00\u641c\u7d22\u7684\u539f\u7406 prefix query\u4e0d\u8ba1\u7b97relevance score\uff0c\u4e0eprefix filter\u552f\u4e00\u7684\u533a\u522b\u5c31\u662f\uff0cfilter\u4f1acache bitset \u626b\u63cf\u6574\u4e2a\u5012\u6392\u7d22\u5f15\uff0c\u4e3e\u4f8b\u8bf4\u660e \u524d\u7f00\u8d8a\u77ed\uff0c\u8981\u5904\u7406\u7684doc\u8d8a\u591a\uff0c\u6027\u80fd\u8d8a\u5dee\uff0c\u5c3d\u53ef\u80fd\u7528\u957f\u524d\u7f00\u641c\u7d22 \u524d\u7f00\u641c\u7d22\uff0c\u5b83\u662f\u600e\u4e48\u6267\u884c\u7684\uff1f\u6027\u80fd\u4e3a\u4ec0\u4e48\u5dee\u5462\uff1f match C3-D0-KD345 C3-K5-DFG65 C4-I8-UI365 \u5168\u6587\u68c0\u7d22 \u6bcf\u4e2a\u5b57\u7b26\u4e32\u90fd\u9700\u8981\u88ab\u5206\u8bcd c3 doc1,doc2 d0 kd345 k5 dfg65 c4 i8 ui365 c3 --> \u626b\u63cf\u5012\u6392\u7d22\u5f15 --> \u4e00\u65e6\u626b\u63cf\u5230c3\uff0c\u5c31\u53ef\u4ee5\u505c\u4e86\uff0c\u56e0\u4e3a\u5e26c3\u7684\u5c312\u4e2adoc\uff0c\u5df2\u7ecf\u627e\u5230\u4e86 --> \u6ca1\u6709\u5fc5\u8981\u7ee7\u7eed\u53bb\u641c\u7d22\u5176\u4ed6\u7684term\u4e86 match\u6027\u80fd\u5f80\u5f80\u662f\u5f88\u9ad8\u7684 \u4e0d\u5206\u8bcd C3-D0-KD345 C3-K5-DFG65 C4-I8-UI365 c3 --> \u5148\u626b\u63cf\u5230\u4e86C3-D0-KD345\uff0c\u5f88\u68d2\uff0c\u627e\u5230\u4e86\u4e00\u4e2a\u524d\u7f00\u5e26c3\u7684\u5b57\u7b26\u4e32 --> \u8fd8\u662f\u8981\u7ee7\u7eed\u641c\u7d22\u7684\uff0c\u56e0\u4e3a\u540e\u9762\u8fd8\u6709\u4e00\u4e2aC3-K5-DFG65\uff0c\u4e5f\u8bb8\u8fd8\u6709\u5176\u4ed6\u5f88\u591a\u7684\u524d\u7f00\u5e26c3\u7684\u5b57\u7b26\u4e32 --> \u4f60\u626b\u63cf\u5230\u4e86\u4e00\u4e2a\u524d\u7f00\u5339\u914d\u7684term\uff0c\u4e0d\u80fd\u505c\uff0c\u5fc5\u987b\u7ee7\u7eed\u641c\u7d22 --> \u76f4\u5230\u626b\u63cf\u5b8c\u6574\u4e2a\u7684\u5012\u6392\u7d22\u5f15\uff0c\u624d\u80fd\u7ed3\u675f \u56e0\u4e3a\u5b9e\u9645\u573a\u666f\u4e2d\uff0c\u53ef\u80fd\u6709\u4e9b\u573a\u666f\u662f\u5168\u6587\u68c0\u7d22\u89e3\u51b3\u4e0d\u4e86\u7684 C3D0-KD345 C3K5-DFG65 C4I8-UI365 c3d0 kd345 c3 --> match --> \u626b\u63cf\u6574\u4e2a\u5012\u6392\u7d22\u5f15\uff0c\u80fd\u627e\u5230\u5417 c3 --> \u53ea\u80fd\u7528prefix prefix\u6027\u80fd\u5f88\u5dee 3\u3001\u901a\u914d\u7b26\u641c\u7d22 \u8ddf\u524d\u7f00\u641c\u7d22\u7c7b\u4f3c\uff0c\u529f\u80fd\u66f4\u52a0\u5f3a\u5927 C3D0-KD345 C3K5-DFG65 C4I8-UI365 5\u5b57\u7b26-D\u4efb\u610f\u4e2a\u5b57\u7b265 5 ?-* 5 \uff1a\u901a\u914d\u7b26\u53bb\u8868\u8fbe\u66f4\u52a0\u590d\u6742\u7684\u6a21\u7cca\u641c\u7d22\u7684\u8bed\u4e49 GET my_index / my_type / _search { \"query\" : { \"wildcard\" : { \"title\" : { \"value\" : \"C?K*5\" } } } } ? \uff1a\u4efb\u610f\u5b57\u7b26 * \uff1a 0 \u4e2a\u6216\u4efb\u610f\u591a\u4e2a\u5b57\u7b26 \u6027\u80fd\u4e00\u6837\u5dee\uff0c\u5fc5\u987b\u626b\u63cf\u6574\u4e2a\u5012\u6392\u7d22\u5f15\uff0c\u624dok 4\u3001\u6b63\u5219\u641c\u7d22 GET /my_index/my_type/_search { \"query\": { \"regexp\": { \"title\": \"C[0-9].+\" } } } C[0-9].+ [0-9]\uff1a\u6307\u5b9a\u8303\u56f4\u5185\u7684\u6570\u5b57 [a-z]\uff1a\u6307\u5b9a\u8303\u56f4\u5185\u7684\u5b57\u6bcd .\uff1a\u4e00\u4e2a\u5b57\u7b26 +\uff1a\u524d\u9762\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u4ee5\u51fa\u73b0\u4e00\u6b21\u6216\u591a\u6b21 wildcard\u548cregexp\uff0c\u4e0eprefix\u539f\u7406\u4e00\u81f4\uff0c\u90fd\u4f1a\u626b\u63cf\u6574\u4e2a\u7d22\u5f15\uff0c\u6027\u80fd\u5f88\u5dee \u4e3b\u8981\u662f\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u4e00\u4e9b\u9ad8\u7ea7\u7684\u641c\u7d22\u8bed\u6cd5\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u80fd\u4e0d\u7528\u5c3d\u91cf\u522b\u7528\u3002\u6027\u80fd\u592a\u5dee\u4e86\u3002","title":"\u524d\u7f00\u641c\u7d22\u3001\u901a\u914d\u7b26\u641c\u7d22\u3001\u6b63\u5219\u641c\u7d22\u7b49\u6280\u672f"},{"location":"ElasticSearch/es/","text":"2.x\u7248\u672c\u7684es string\u5b57\u6bb5 5.x\u7248\u672c\u7684es string\u5b57\u6bb5 \u88ab\u62c6\u5206\u6210\u4e24\u79cd\u65b0\u7684\u6570\u636e\u7c7b\u578b: text(\u5206\u8bcd)\u7528\u4e8e\u5168\u6587\u641c\u7d22\u7684 keyword\uff08\u4e0d\u5206\u8bcd\uff09\u7528\u4e8e\u5173\u952e\u8bcd\u641c\u7d22 \u522b\u540d\u8bbe\u7f6e # \u83b7\u53d6\u6240\u6709\u522b\u540d GET _cat / aliases ? v # \u83b7\u53d6 _index_name\u6a21\u5f0f\u5185\u6240\u6709\u6307\u5b9a\u522b\u540d\u4e3a_alias_name\u6a21\u5f0f\u7684index GET / _index_name / _alias | _aliases / _alias_name _alias\u548c_aliases\u7684\u533a\u522b\u4e3a\u82e5\u6307\u5b9a\u4e3a_aliases\u5728\u67e5\u8be2\u65f6\u82e5_index\u672a\u6307\u5b9a\u6ee1\u8db3\u8981\u6c42\u7684\u522b\u540d\u5728\u8fd4\u56de\u7ed3\u679c\u4e2d\u662f\u5426\u5305\u542b\u4f46aliasese\u5c5e\u6027\u4e3a\u7a7a , \u4f7f\u7528 _alias\u65f6\u4e0d\u5305\u542b\u8be5index # \u8bbe\u7f6e\u522b\u540d PUT / index_name / _alias / alias_name # \u5220\u9664\u522b\u540d DELETE / index_name / _alias / alias_name","title":"Es"},{"location":"Java/","text":"Java Java \u5b66\u4e60\u8def\u7ebf \u9636\u6bb5 1\uff1aJava \u8bed\u8a00\u57fa\u7840 \u9636\u6bb5 2\uff1a\u6570\u636e\u5e93\u5f00\u53d1 \u9636\u6bb5 3\uff1aJava Web \u5f00\u53d1\u57fa\u7840 \u9636\u6bb5 4\uff1aJava \u5f00\u53d1\u6846\u67b6 \u9636\u6bb5 5\uff1aJava \u5f00\u53d1\u5de5\u5177 \u9636\u6bb5 6\uff1aJava \u9762\u8bd5\u6280\u5de7 \u5176\u4ed6 JavaGUI javaFX \u573a\u666f\u7f16\u8f91\u5668 Java \u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4b Timer Java \u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4b Quartz Java \u6ce8\u89e3 Annotation SpringData Hibernate Spring Boot","title":"Java"},{"location":"Java/#java","text":"","title":"Java"},{"location":"Java/#java_1","text":"\u9636\u6bb5 1\uff1aJava \u8bed\u8a00\u57fa\u7840 \u9636\u6bb5 2\uff1a\u6570\u636e\u5e93\u5f00\u53d1 \u9636\u6bb5 3\uff1aJava Web \u5f00\u53d1\u57fa\u7840 \u9636\u6bb5 4\uff1aJava \u5f00\u53d1\u6846\u67b6 \u9636\u6bb5 5\uff1aJava \u5f00\u53d1\u5de5\u5177 \u9636\u6bb5 6\uff1aJava \u9762\u8bd5\u6280\u5de7","title":"Java \u5b66\u4e60\u8def\u7ebf"},{"location":"Java/#_1","text":"JavaGUI javaFX \u573a\u666f\u7f16\u8f91\u5668 Java \u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4b Timer Java \u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4b Quartz Java \u6ce8\u89e3 Annotation SpringData Hibernate Spring Boot","title":"\u5176\u4ed6"},{"location":"Java/Hibernate/","text":"Hibernate \u5b66\u4e60\u7b14\u8bb0 \u5c1a\u7845\u8c37\u4f5f\u521a Hibernate \u6846\u67b6\u5168\u5957\u6559\u7a0b \u7b80\u4ecb Hibernate: http://hibernate.org/ Hibernate \u6559\u7a0b\uff1a https://www.w3cschool.cn/hibernate/ \u4e00\u4e2a Java \u9886\u57df\u7684\u6301\u4e45\u5316 ORM \u6846\u67b6 \u6301\u4e45\u5316\uff1a\u628a\u5bf9\u8c61\u6c38\u4e45\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d ORM\uff1a Object Relation Mapping \u5bf9\u8c61\u5173\u7cfb\u6620\u5c04 ORM \u4e3b\u8981\u89e3\u51b3\u5bf9\u8c61-\u5173\u7cfb\u6620\u5c04 \u9762\u5411\u5bf9\u8c61 \u9762\u5411\u5173\u7cfb \u7c7b \u8868 \u5bf9\u8c61 \u8868\u8bb0\u5f55\uff08\u884c\uff09 \u5c5e\u6027 \u8868\u5b57\u6bb5\uff08\u5217\uff09 ORM \u601d\u60f3\uff1a \u5c06\u5173\u7cfb\u6570\u636e\u5e93\u8868\u4e2d\u7684\u8bb0\u5f55\u6620\u5c04\u79f0\u4e3a\u5bf9\u8c61\uff0c\u4ee5\u5bf9\u8c61\u7684\u5f62\u5f0f\u5c55\u73b0 \u628a\u5bf9\u6570\u636e\u5e93\u7684\u64cd\u4f5c\u8f6c\u5316\u4e3a\u5bf9\u5bf9\u8c61\u7684\u64cd\u4f5c ORM \u91c7\u7528\u5143\u6570\u636e\u6765\u63cf\u8ff0\u5bf9\u8c61-\u5173\u7cfb\u6620\u5c04\u7ec6\u8282\uff0c\u5143\u6570\u636e\u901a\u5e38\u91c7\u7528 XML \u683c\u5f0f \u6d41\u884c\u7684 ORM \u6846\u67b6 Hibernate \u91c7\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u64cd\u4f5c\u5173\u7cfb\u6570\u636e\u5e93 MyBatis \u7075\u6d3b\u5ea6\u9ad8\uff0c\u8fd0\u884c\u901f\u5ea6\u5feb\uff0c\u5f00\u53d1\u901f\u5ea6\u6162 TopLink OJB eclipse \u73af\u5883 Hibernatetools \u63d2\u4ef6 \u4f9d\u8d56 antlr dom4j hibernate - commons - annotations hibernate - core hibernate - jpa javassist jboss - logging jboss - transaction - api mysql - connector - java Hibernate \u5f00\u53d1\u6b65\u9aa4 \u5b98\u7f51\u793a\u4f8b https://docs.jboss.org/hibernate/orm/5.4/quickstart/html_single/ \u521b\u5efa Hibrenate \u914d\u7f6e\u6587\u4ef6 \u521b\u5efa\u6301\u4e45\u5316\u7c7b \u521b\u5efa\u5bf9\u8c61-\u5173\u7cfb\u6620\u5c04\u6587\u4ef6 \u901a\u8fc7 Hibrenate API \u7f16\u5199\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u4ee3\u7801 \u53c2\u8003 IntelliJ IDEA \u4e0b\u81ea\u52a8\u751f\u6210 Hibernate \u6620\u5c04\u6587\u4ef6\u4ee5\u53ca\u5b9e\u4f53\u7c7b \u4fdd\u5b58\u6570\u636e\u6b65\u9aa4 1 . \u521b\u5efa\u4e00\u4e2a SessionFactory\u5bf9\u8c61 2 . \u521b\u5efa\u4e00\u4e2a Session\u5bf9\u8c61 3 . \u5f00\u59cb\u4e8b\u52a1 4 . \u6267\u884c\u4fdd\u5b58\u64cd\u4f5c 5 . \u63d0\u4ea4\u4e8b\u52a1 6 . \u5173\u95ed Session\u5bf9\u8c61 7 . \u5173\u95ed SessionFactory\u5bf9\u8c61 \u4ee3\u7801\u793a\u4f8b \u4f9d\u8d56 pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> com.mouday </groupId> <artifactId> hibernate-demo </artifactId> <version> 1.0-SNAPSHOT </version> <build> <resources> <!--\u7f16\u8bd1src/main/java\u76ee\u5f55\u4e0b\u7684xml\u6587\u4ef6--> <resource> <directory> src/main/java </directory> <includes> <include> **/*.xml </include> </includes> <filtering> true </filtering> </resource> </resources> </build> <dependencies> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.20 </version> </dependency> <dependency> <groupId> org.hibernate </groupId> <artifactId> hibernate-core </artifactId> <version> 5.4.10.Final </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.11 </version> <scope> test </scope> </dependency> </dependencies> </project> \u914d\u7f6e\u6587\u4ef6 src/main/resources/hibernate.cfg.xml <?xml version='1.0' encoding='utf-8'?> <!DOCTYPE hibernate-configuration PUBLIC \"-//Hibernate/Hibernate Configuration DTD//EN\" \"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd\"> <hibernate-configuration> <session-factory> <!--\u914d\u7f6e\u6570\u636e\u5e93\u57fa\u672c\u4fe1\u606f--> <property name= \"connection.url\" > jdbc:mysql://localhost:3306/data </property> <property name= \"connection.driver_class\" > com.mysql.cj.jdbc.Driver </property> <property name= \"connection.username\" > root </property> <property name= \"connection.password\" > 123456 </property> <!--\u914d\u7f6eHibernate\u57fa\u672c\u4fe1\u606f--> <!--\u6570\u636e\u5e93\u65b9\u8a00--> <property name= \"dialect\" > org.hibernate.dialect.MySQLDialect </property> <!--\u6253\u5370sql--> <property name= \"show_sql\" > true </property> <!--sql\u683c\u5f0f\u5316--> <property name= \"format_sql\" > true </property> <!-- \u81ea\u52a8\u751f\u6210\u6570\u636e\u8868\u7684\u7b56\u7565 --> <property name= \"hibernate.hbm2ddl.auto\" > update </property> <!--\u5173\u8054\u6620\u5c04\u6587\u4ef6--> <mapping resource= \"com/mouday/entity/Person.hbm.xml\" /> <mapping class= \"com.mouday.entity.Person\" /> </session-factory> </hibernate-configuration> \u5efa\u8868\u8bed\u53e5 CREATE TABLE ` person ` ( ` id ` int ( 11 ) NOT NULL AUTO_INCREMENT , ` name ` varchar ( 255 ) DEFAULT '' , ` birth ` date DEFAULT NULL , PRIMARY KEY ( ` id ` ) ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '\u4eba\u7269' \u6620\u5c04\u6587\u4ef6 src/main/java/com/mouday/entity/Person.hbm.xml <?xml version='1.0' encoding='utf-8'?> <!DOCTYPE hibernate-mapping PUBLIC \"-//Hibernate/Hibernate Mapping DTD 3.0//EN\" \"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd\"> <hibernate-mapping> <class name= \"com.mouday.entity.Person\" table= \"person\" schema= \"data\" > <id name= \"id\" > <column name= \"id\" sql-type= \"int(11)\" /> <!--\u6307\u5b9a\u4e3b\u952e\u751f\u6210\u65b9\u5f0f\u4e3a\u6570\u636e\u5e93\u5e95\u5c42\u751f\u6210\u65b9\u5f0f--> <generator class= \"native\" /> </id> <property name= \"name\" > <column name= \"name\" sql-type= \"varchar(255)\" not-null= \"true\" /> </property> <property name= \"birth\" > <column name= \"birth\" sql-type= \"date\" not-null= \"true\" /> </property> </class> </hibernate-mapping> \u5b9e\u4f53\u7c7b src/main/java/com/mouday/entity/Person.java package com.mouday.entity ; import java.util.Date ; public class Person { private int id ; private String name ; private Date birth ; public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public Date getBirth () { return birth ; } public void setBirth ( Date birth ) { this . birth = birth ; } @Override public String toString () { return \"Person{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", birth=\" + birth + '}' ; } } \u4fdd\u5b58\u6570\u636e src/test/java/com/mouday/PersonTest.java package com.mouday ; import com.mouday.entity.Person ; import org.hibernate.Session ; import org.hibernate.SessionFactory ; import org.hibernate.Transaction ; import org.hibernate.boot.MetadataSources ; import org.hibernate.boot.registry.StandardServiceRegistry ; import org.hibernate.boot.registry.StandardServiceRegistryBuilder ; import org.hibernate.cfg.Configuration ; import org.junit.Test ; import java.util.Date ; public class PersonTest { @Test public void testPerson () { // 1. \u521b\u5efa\u4e00\u4e2aSessionFactory\u5bf9\u8c61 // \u9ed8\u8ba4 \"hibernate.cfg.xml\" Configuration configuration = new Configuration (). configure (); SessionFactory sessionFactory = configuration . buildSessionFactory (); // \u5b98\u7f51\u793a\u4f8b // StandardServiceRegistry registry = new StandardServiceRegistryBuilder().configure().build(); // SessionFactory sessionFactory = new MetadataSources(registry).buildMetadata().buildSessionFactory(); // 2. \u521b\u5efa\u4e00\u4e2aSession\u5bf9\u8c61 Session session = sessionFactory . openSession (); // 3. \u5f00\u59cb\u4e8b\u52a1 Transaction transaction = session . beginTransaction (); // 4. \u6267\u884c\u4fdd\u5b58\u64cd\u4f5c Person person = new Person (); person . setName ( \"Tom\" ); person . setBirth ( new Date ()); session . save ( person ); // \u83b7\u53d6\u64cd\u4f5c // Person person = session.get(Person.class, 1); // System.out.println(person); //Person{id=1, name='Tom', birth=2020-07-19} // 5. \u63d0\u4ea4\u4e8b\u52a1 transaction . commit (); // 6. \u5173\u95edSession\u5bf9\u8c61 session . close (); // 7. \u5173\u95edSessionFactory\u5bf9\u8c61 sessionFactory . close (); } } \u6301\u4e45\u5316 Java \u7c7b \u63d0\u4f9b\u4e00\u4e2a\u65e0\u53c2\u6784\u9020\u5668 \u63d0\u4f9b\u4e00\u4e2a\u6807\u8bc6\u5c5e\u6027 \u4e3a\u7c7b\u7684\u6301\u4e45\u5316\u5b57\u6bb5\u58f0\u660e\u65b9\u6cd5 \u4f7f\u7528\u8d39 final \u7c7b \u91cd\u5199 equals \u548c hashCode \u65b9\u6cd5 Hibenate \u4f4e\u4fb5\u5165\u5f0f\u8bbe\u8ba1\uff1a Hibernate \u6301\u4e45\u5316\u7c7b\u4e0d\u8981\u6c42\u6301\u4e45\u5316\u7c7b\u7ee7\u627f\u4efb\u4f55\u7236\u7c7b\u6216\u5b9e\u73b0\u63a5\u53e3\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u4ee3\u7801\u4e0d\u88ab\u6c61\u67d3\u3002 Configuration \u914d\u7f6e\u7ba1\u7406 SessionFactory \u4e00\u4e2a\u5e94\u7528\u53ea\u521d\u59cb\u5316\u4e00\u4e2a Session \u5355\u7ebf\u7a0b\u5bf9\u8c61 Transaction \u4e8b\u52a1\u4ee3\u8868\u4e00\u6b21\u539f\u5b50\u64cd\u4f5c \u914d\u7f6e\u53c2\u6570 hbm2ddl.auto \u53ef\u4ee5\u5b9e\u73b0\u6b63\u5411\u5de5\u7a0b \u7531 java \u4ee3\u7801\u751f\u6210\u6570\u636e\u5e93\u811a\u672c\uff0c\u751f\u6210\u5177\u4f53\u7684\u8868\u7ed3\u6784 \u53d6\u503c\uff1a create \u6bcf\u6b21\u8fd0\u884c\u90fd\u4f1a\u5220\u9664\u539f\u8868\uff0c\u751f\u6210\u65b0\u7684\u8868 create - drop \u81ea\u52a8\u751f\u6210\u8868\uff0c SessionFactory \u4e00\u5173\u95ed\u5c31\u81ea\u52a8\u5220\u9664 update \u4f1a\u6839\u636e . hbm . xml \u6587\u4ef6\u81ea\u52a8\u751f\u6210\u8868\uff0c\u82e5\u7ed3\u6784\u4e0d\u540c\uff0c\u4f1a\u81ea\u52a8\u66f4\u65b0\u6570\u636e\u8868\u7ed3\u6784 \u4f46\u4e0d\u4f1a\u5220\u9664\u5df2\u6709\u7684\u884c\u548c\u5217 validate \uff1a\u548c\u6570\u636e\u5e93\u4e2d\u7684\u8868\u8fdb\u884c\u6bd4\u8f83\uff0c\u82e5\u5217\u6570\u636e\u4e0d\u5b58\u5728\u5219\u629b\u51fa\u5f02\u5e38 Session \u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u4fdd\u5b58\uff0c\u66f4\u65b0\uff0c\u5220\u9664\u548c\u52a0\u8f7d Java \u5bf9\u8c61\u7684\u65b9\u6cd5 Session \u7f13\u5b58\u7684\u56db\u79cd\u72b6\u6001\uff1a \u6301\u4e45\u5316 \u4e34\u65f6 \u6e38\u79bb \u5220\u9664 Session \u7f13\u5b58\u53ef\u4ee5\u51cf\u5c11 Hibernate \u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u9891\u7387 flush \u4f7f\u6570\u636e\u5e93\u8868\u4e2d\u7684\u8bb0\u5f55\u548c Session \u7f13\u5b58\u4e2d\u7684\u5bf9\u8c61\u72b6\u6001\u4fdd\u6301\u4e00\u81f4\uff0c\u4e3a\u4e86\u4fdd\u6301\u4e00\u81f4\uff0c\u53ef\u80fd\u4f1a\u53d1\u9001\u5bf9\u5e94\u7684 sql refresh \u5f3a\u5236\u53d1\u9001 select \u8bed\u53e5 clear \u6e05\u7406\u7f13\u5b58 \u53ef\u8bbe\u7f6e\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b 2020.7.19 \u63a5\u4e0b\u6765\u5b66\u4e60\u7b2c 6 \u96c6","title":"Hibernate \u5b66\u4e60\u7b14\u8bb0"},{"location":"Java/Hibernate/#hibernate","text":"\u5c1a\u7845\u8c37\u4f5f\u521a Hibernate \u6846\u67b6\u5168\u5957\u6559\u7a0b","title":"Hibernate \u5b66\u4e60\u7b14\u8bb0"},{"location":"Java/Hibernate/#_1","text":"Hibernate: http://hibernate.org/ Hibernate \u6559\u7a0b\uff1a https://www.w3cschool.cn/hibernate/ \u4e00\u4e2a Java \u9886\u57df\u7684\u6301\u4e45\u5316 ORM \u6846\u67b6 \u6301\u4e45\u5316\uff1a\u628a\u5bf9\u8c61\u6c38\u4e45\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d ORM\uff1a Object Relation Mapping \u5bf9\u8c61\u5173\u7cfb\u6620\u5c04 ORM \u4e3b\u8981\u89e3\u51b3\u5bf9\u8c61-\u5173\u7cfb\u6620\u5c04 \u9762\u5411\u5bf9\u8c61 \u9762\u5411\u5173\u7cfb \u7c7b \u8868 \u5bf9\u8c61 \u8868\u8bb0\u5f55\uff08\u884c\uff09 \u5c5e\u6027 \u8868\u5b57\u6bb5\uff08\u5217\uff09 ORM \u601d\u60f3\uff1a \u5c06\u5173\u7cfb\u6570\u636e\u5e93\u8868\u4e2d\u7684\u8bb0\u5f55\u6620\u5c04\u79f0\u4e3a\u5bf9\u8c61\uff0c\u4ee5\u5bf9\u8c61\u7684\u5f62\u5f0f\u5c55\u73b0 \u628a\u5bf9\u6570\u636e\u5e93\u7684\u64cd\u4f5c\u8f6c\u5316\u4e3a\u5bf9\u5bf9\u8c61\u7684\u64cd\u4f5c ORM \u91c7\u7528\u5143\u6570\u636e\u6765\u63cf\u8ff0\u5bf9\u8c61-\u5173\u7cfb\u6620\u5c04\u7ec6\u8282\uff0c\u5143\u6570\u636e\u901a\u5e38\u91c7\u7528 XML \u683c\u5f0f \u6d41\u884c\u7684 ORM \u6846\u67b6 Hibernate \u91c7\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u64cd\u4f5c\u5173\u7cfb\u6570\u636e\u5e93 MyBatis \u7075\u6d3b\u5ea6\u9ad8\uff0c\u8fd0\u884c\u901f\u5ea6\u5feb\uff0c\u5f00\u53d1\u901f\u5ea6\u6162 TopLink OJB eclipse \u73af\u5883 Hibernatetools \u63d2\u4ef6 \u4f9d\u8d56 antlr dom4j hibernate - commons - annotations hibernate - core hibernate - jpa javassist jboss - logging jboss - transaction - api mysql - connector - java","title":"\u7b80\u4ecb"},{"location":"Java/Hibernate/#hibernate_1","text":"\u5b98\u7f51\u793a\u4f8b https://docs.jboss.org/hibernate/orm/5.4/quickstart/html_single/ \u521b\u5efa Hibrenate \u914d\u7f6e\u6587\u4ef6 \u521b\u5efa\u6301\u4e45\u5316\u7c7b \u521b\u5efa\u5bf9\u8c61-\u5173\u7cfb\u6620\u5c04\u6587\u4ef6 \u901a\u8fc7 Hibrenate API \u7f16\u5199\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u4ee3\u7801 \u53c2\u8003 IntelliJ IDEA \u4e0b\u81ea\u52a8\u751f\u6210 Hibernate \u6620\u5c04\u6587\u4ef6\u4ee5\u53ca\u5b9e\u4f53\u7c7b \u4fdd\u5b58\u6570\u636e\u6b65\u9aa4 1 . \u521b\u5efa\u4e00\u4e2a SessionFactory\u5bf9\u8c61 2 . \u521b\u5efa\u4e00\u4e2a Session\u5bf9\u8c61 3 . \u5f00\u59cb\u4e8b\u52a1 4 . \u6267\u884c\u4fdd\u5b58\u64cd\u4f5c 5 . \u63d0\u4ea4\u4e8b\u52a1 6 . \u5173\u95ed Session\u5bf9\u8c61 7 . \u5173\u95ed SessionFactory\u5bf9\u8c61 \u4ee3\u7801\u793a\u4f8b \u4f9d\u8d56 pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> com.mouday </groupId> <artifactId> hibernate-demo </artifactId> <version> 1.0-SNAPSHOT </version> <build> <resources> <!--\u7f16\u8bd1src/main/java\u76ee\u5f55\u4e0b\u7684xml\u6587\u4ef6--> <resource> <directory> src/main/java </directory> <includes> <include> **/*.xml </include> </includes> <filtering> true </filtering> </resource> </resources> </build> <dependencies> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.20 </version> </dependency> <dependency> <groupId> org.hibernate </groupId> <artifactId> hibernate-core </artifactId> <version> 5.4.10.Final </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.11 </version> <scope> test </scope> </dependency> </dependencies> </project> \u914d\u7f6e\u6587\u4ef6 src/main/resources/hibernate.cfg.xml <?xml version='1.0' encoding='utf-8'?> <!DOCTYPE hibernate-configuration PUBLIC \"-//Hibernate/Hibernate Configuration DTD//EN\" \"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd\"> <hibernate-configuration> <session-factory> <!--\u914d\u7f6e\u6570\u636e\u5e93\u57fa\u672c\u4fe1\u606f--> <property name= \"connection.url\" > jdbc:mysql://localhost:3306/data </property> <property name= \"connection.driver_class\" > com.mysql.cj.jdbc.Driver </property> <property name= \"connection.username\" > root </property> <property name= \"connection.password\" > 123456 </property> <!--\u914d\u7f6eHibernate\u57fa\u672c\u4fe1\u606f--> <!--\u6570\u636e\u5e93\u65b9\u8a00--> <property name= \"dialect\" > org.hibernate.dialect.MySQLDialect </property> <!--\u6253\u5370sql--> <property name= \"show_sql\" > true </property> <!--sql\u683c\u5f0f\u5316--> <property name= \"format_sql\" > true </property> <!-- \u81ea\u52a8\u751f\u6210\u6570\u636e\u8868\u7684\u7b56\u7565 --> <property name= \"hibernate.hbm2ddl.auto\" > update </property> <!--\u5173\u8054\u6620\u5c04\u6587\u4ef6--> <mapping resource= \"com/mouday/entity/Person.hbm.xml\" /> <mapping class= \"com.mouday.entity.Person\" /> </session-factory> </hibernate-configuration> \u5efa\u8868\u8bed\u53e5 CREATE TABLE ` person ` ( ` id ` int ( 11 ) NOT NULL AUTO_INCREMENT , ` name ` varchar ( 255 ) DEFAULT '' , ` birth ` date DEFAULT NULL , PRIMARY KEY ( ` id ` ) ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '\u4eba\u7269' \u6620\u5c04\u6587\u4ef6 src/main/java/com/mouday/entity/Person.hbm.xml <?xml version='1.0' encoding='utf-8'?> <!DOCTYPE hibernate-mapping PUBLIC \"-//Hibernate/Hibernate Mapping DTD 3.0//EN\" \"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd\"> <hibernate-mapping> <class name= \"com.mouday.entity.Person\" table= \"person\" schema= \"data\" > <id name= \"id\" > <column name= \"id\" sql-type= \"int(11)\" /> <!--\u6307\u5b9a\u4e3b\u952e\u751f\u6210\u65b9\u5f0f\u4e3a\u6570\u636e\u5e93\u5e95\u5c42\u751f\u6210\u65b9\u5f0f--> <generator class= \"native\" /> </id> <property name= \"name\" > <column name= \"name\" sql-type= \"varchar(255)\" not-null= \"true\" /> </property> <property name= \"birth\" > <column name= \"birth\" sql-type= \"date\" not-null= \"true\" /> </property> </class> </hibernate-mapping> \u5b9e\u4f53\u7c7b src/main/java/com/mouday/entity/Person.java package com.mouday.entity ; import java.util.Date ; public class Person { private int id ; private String name ; private Date birth ; public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public Date getBirth () { return birth ; } public void setBirth ( Date birth ) { this . birth = birth ; } @Override public String toString () { return \"Person{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", birth=\" + birth + '}' ; } } \u4fdd\u5b58\u6570\u636e src/test/java/com/mouday/PersonTest.java package com.mouday ; import com.mouday.entity.Person ; import org.hibernate.Session ; import org.hibernate.SessionFactory ; import org.hibernate.Transaction ; import org.hibernate.boot.MetadataSources ; import org.hibernate.boot.registry.StandardServiceRegistry ; import org.hibernate.boot.registry.StandardServiceRegistryBuilder ; import org.hibernate.cfg.Configuration ; import org.junit.Test ; import java.util.Date ; public class PersonTest { @Test public void testPerson () { // 1. \u521b\u5efa\u4e00\u4e2aSessionFactory\u5bf9\u8c61 // \u9ed8\u8ba4 \"hibernate.cfg.xml\" Configuration configuration = new Configuration (). configure (); SessionFactory sessionFactory = configuration . buildSessionFactory (); // \u5b98\u7f51\u793a\u4f8b // StandardServiceRegistry registry = new StandardServiceRegistryBuilder().configure().build(); // SessionFactory sessionFactory = new MetadataSources(registry).buildMetadata().buildSessionFactory(); // 2. \u521b\u5efa\u4e00\u4e2aSession\u5bf9\u8c61 Session session = sessionFactory . openSession (); // 3. \u5f00\u59cb\u4e8b\u52a1 Transaction transaction = session . beginTransaction (); // 4. \u6267\u884c\u4fdd\u5b58\u64cd\u4f5c Person person = new Person (); person . setName ( \"Tom\" ); person . setBirth ( new Date ()); session . save ( person ); // \u83b7\u53d6\u64cd\u4f5c // Person person = session.get(Person.class, 1); // System.out.println(person); //Person{id=1, name='Tom', birth=2020-07-19} // 5. \u63d0\u4ea4\u4e8b\u52a1 transaction . commit (); // 6. \u5173\u95edSession\u5bf9\u8c61 session . close (); // 7. \u5173\u95edSessionFactory\u5bf9\u8c61 sessionFactory . close (); } }","title":"Hibernate \u5f00\u53d1\u6b65\u9aa4"},{"location":"Java/Hibernate/#java","text":"\u63d0\u4f9b\u4e00\u4e2a\u65e0\u53c2\u6784\u9020\u5668 \u63d0\u4f9b\u4e00\u4e2a\u6807\u8bc6\u5c5e\u6027 \u4e3a\u7c7b\u7684\u6301\u4e45\u5316\u5b57\u6bb5\u58f0\u660e\u65b9\u6cd5 \u4f7f\u7528\u8d39 final \u7c7b \u91cd\u5199 equals \u548c hashCode \u65b9\u6cd5 Hibenate \u4f4e\u4fb5\u5165\u5f0f\u8bbe\u8ba1\uff1a Hibernate \u6301\u4e45\u5316\u7c7b\u4e0d\u8981\u6c42\u6301\u4e45\u5316\u7c7b\u7ee7\u627f\u4efb\u4f55\u7236\u7c7b\u6216\u5b9e\u73b0\u63a5\u53e3\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u4ee3\u7801\u4e0d\u88ab\u6c61\u67d3\u3002 Configuration \u914d\u7f6e\u7ba1\u7406 SessionFactory \u4e00\u4e2a\u5e94\u7528\u53ea\u521d\u59cb\u5316\u4e00\u4e2a Session \u5355\u7ebf\u7a0b\u5bf9\u8c61 Transaction \u4e8b\u52a1\u4ee3\u8868\u4e00\u6b21\u539f\u5b50\u64cd\u4f5c \u914d\u7f6e\u53c2\u6570 hbm2ddl.auto \u53ef\u4ee5\u5b9e\u73b0\u6b63\u5411\u5de5\u7a0b \u7531 java \u4ee3\u7801\u751f\u6210\u6570\u636e\u5e93\u811a\u672c\uff0c\u751f\u6210\u5177\u4f53\u7684\u8868\u7ed3\u6784 \u53d6\u503c\uff1a create \u6bcf\u6b21\u8fd0\u884c\u90fd\u4f1a\u5220\u9664\u539f\u8868\uff0c\u751f\u6210\u65b0\u7684\u8868 create - drop \u81ea\u52a8\u751f\u6210\u8868\uff0c SessionFactory \u4e00\u5173\u95ed\u5c31\u81ea\u52a8\u5220\u9664 update \u4f1a\u6839\u636e . hbm . xml \u6587\u4ef6\u81ea\u52a8\u751f\u6210\u8868\uff0c\u82e5\u7ed3\u6784\u4e0d\u540c\uff0c\u4f1a\u81ea\u52a8\u66f4\u65b0\u6570\u636e\u8868\u7ed3\u6784 \u4f46\u4e0d\u4f1a\u5220\u9664\u5df2\u6709\u7684\u884c\u548c\u5217 validate \uff1a\u548c\u6570\u636e\u5e93\u4e2d\u7684\u8868\u8fdb\u884c\u6bd4\u8f83\uff0c\u82e5\u5217\u6570\u636e\u4e0d\u5b58\u5728\u5219\u629b\u51fa\u5f02\u5e38 Session \u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u4fdd\u5b58\uff0c\u66f4\u65b0\uff0c\u5220\u9664\u548c\u52a0\u8f7d Java \u5bf9\u8c61\u7684\u65b9\u6cd5 Session \u7f13\u5b58\u7684\u56db\u79cd\u72b6\u6001\uff1a \u6301\u4e45\u5316 \u4e34\u65f6 \u6e38\u79bb \u5220\u9664 Session \u7f13\u5b58\u53ef\u4ee5\u51cf\u5c11 Hibernate \u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u9891\u7387 flush \u4f7f\u6570\u636e\u5e93\u8868\u4e2d\u7684\u8bb0\u5f55\u548c Session \u7f13\u5b58\u4e2d\u7684\u5bf9\u8c61\u72b6\u6001\u4fdd\u6301\u4e00\u81f4\uff0c\u4e3a\u4e86\u4fdd\u6301\u4e00\u81f4\uff0c\u53ef\u80fd\u4f1a\u53d1\u9001\u5bf9\u5e94\u7684 sql refresh \u5f3a\u5236\u53d1\u9001 select \u8bed\u53e5 clear \u6e05\u7406\u7f13\u5b58 \u53ef\u8bbe\u7f6e\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b 2020.7.19 \u63a5\u4e0b\u6765\u5b66\u4e60\u7b2c 6 \u96c6","title":"\u6301\u4e45\u5316 Java \u7c7b"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bQuartz/","text":"Java \u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4b Quartz \u7bc7 \u5b98\u7f51 http://www.quartz-scheduler.org/ \u7279\u70b9 \u5f3a\u5927\u7684\u8c03\u5ea6\u529f\u80fd \u7075\u6d3b\u7684\u5e94\u7528\u65b9\u5f0f \u5206\u5e03\u5f0f\u548c\u96c6\u7fa4\u80fd\u529b \u4e3b\u8981\u7528\u5230\u7684\u8bbe\u8ba1\u6a21\u5f0f Builder \u6a21\u5f0f Factory \u6a21\u5f0f \u7ec4\u4ef6\u6a21\u5f0f \u94fe\u5f0f\u5199\u6cd5 \u4e09\u4e2a\u6838\u5fc3\u6982\u5ff5 \u8c03\u5ea6\u5668 \u4efb\u52a1 \u89e6\u53d1\u5668 Quartz \u4f53\u7cfb\u7ed3\u6784 JobDetail scheduler trigger - SimpleTrigger - CronTrigger \u91cd\u8981\u7ec4\u6210 Job JobDetail JobBuilder JobStore Trigger TriggerBuilder ThreadPool Scheduler Calendar \u76d1\u542c\u5668 JobListener TriggerListener SchedulerListener Quartz \u5b9e\u4f8b \u4f9d\u8d56 <dependency> <groupId> org.quartz-scheduler </groupId> <artifactId> quartz </artifactId> <version> 2.3.2 </version> </dependency> <dependency> <groupId> org.slf4j </groupId> <artifactId> slf4j-simple </artifactId> <version> 1.7.25 </version> <scope> compile </scope> </dependency> \u5b9a\u4e49\u4efb\u52a1 MyJob.java package timer ; import org.quartz.Job ; import org.quartz.JobExecutionContext ; import org.quartz.JobExecutionException ; import java.text.SimpleDateFormat ; import java.util.Date ; public class MyJob implements Job { @Override public void execute ( JobExecutionContext jobExecutionContext ) throws JobExecutionException { SimpleDateFormat dateFormat = new SimpleDateFormat ( \"yyyy-MM-dd HH:mm:ss\" ); System . out . println ( dateFormat . format ( new Date ())); } } \u8c03\u5ea6\u4efb\u52a1 QuartzDemo.java package timer ; import org.quartz.* ; import org.quartz.impl.StdSchedulerFactory ; public class QuartzDemo { public static void main ( String [] args ) throws SchedulerException { // \u521b\u5efaJobDetail JobDetail jobDetail = JobBuilder . newJob ( MyJob . class ) . withIdentity ( \"myJob\" , \"group1\" ) . build (); // \u6bcf2s\u6267\u884c\u4e00\u6b21\uff0c\u65e0\u9650\u5faa\u73af SimpleScheduleBuilder scheduleBuilder = SimpleScheduleBuilder . simpleSchedule () . withIntervalInSeconds ( 2 ) . repeatForever (); // \u521b\u5efaTrigger Trigger trigger = TriggerBuilder . newTrigger () . withIdentity ( \"myTrigger\" , \"group1\" ) . startNow () . withSchedule ( scheduleBuilder ) . build (); // \u901a\u8fc7\u5de5\u5382\u65b9\u6cd5\u521b\u5efaScheduler\u5b9e\u4f8b SchedulerFactory factory = new StdSchedulerFactory (); Scheduler scheduler = factory . getScheduler (); scheduler . start (); scheduler . scheduleJob ( jobDetail , trigger ); } } Job \u548c JobDetail 1\u3001Job \u6e90\u7801\uff1a package org.quartz ; public interface Job { void execute ( JobExecutionContext context ) throws JobExecutionException ; } 2\u3001Job \u7684\u751f\u547d\u5468\u671f\uff1a \u6bcf\u6b21\u8c03\u5ea6\u5668\u6267\u884c Job \u65f6\uff0c\u8c03\u7528 execute \u65b9\u6cd5\u524d\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Job \u5b9e\u4f8b \u8c03\u7528\u5b8c\u6210\u540e\uff0c\u5173\u8054\u7684 Job \u5bf9\u8c61\u5b9e\u4f8b\u4f1a\u88ab\u91ca\u653e\uff0c\u91ca\u653e\u7684\u5b9e\u4f8b\u4f1a\u88ab\u5783\u573e\u56de\u6536\u673a\u5236\u56de\u6536 3\u3001JobDetail\uff1a JobDetail \u4e3a Job \u5b9e\u4f8b\u63d0\u4f9b\u4e86\u8bb8\u591a\u8bbe\u7f6e\u5c5e\u6027\uff0c\u4ee5\u53ca JobDataMap \u6210\u5458\u53d8\u91cf\u5c5e\u6027\uff0c \u5b83\u7528\u6765\u5b58\u50a8\u7279\u5b9a Job \u5b9e\u4f8b\u7684\u72b6\u6001\u4fe1\u606f\uff0c\u8c03\u5ea6\u5668\u9700\u8981\u501f\u52a9 JobDetail \u5bf9\u8c61\u6765\u6dfb\u52a0 Job \u5b9e\u4f8b 4\u3001JobDetail \u91cd\u8981\u5c5e\u6027 name group \u9ed8\u8ba4\u503c DEFAULT jobClass jobDataMap // \u521b\u5efaJobDetail JobDetail jobDetail = JobBuilder . newJob ( MyJob . class ) . withIdentity ( \"myJob\" , \"group1\" ) . build (); // \u6253\u5370jobDetail\u5c5e\u6027 System . out . println ( jobDetail . getKey (). getName ()); // myJob System . out . println ( jobDetail . getKey (). getGroup ()); // group1 System . out . println ( jobDetail . getJobClass (). getName ()); // timer.MyJob JobExecutionContext & JobDataMap 1\u3001JobExecutionContext\uff1a Scheduler \u7ed9 Job \u4f20\u9012\u53c2\u6570 2\u3001JobDataMap: \u53ef\u4ee5\u88c5\u8f7d\u4efb\u4f55\u53ef\u5e8f\u5217\u5316\u7684\u6570\u636e\u5bf9\u8c61 \u5b9e\u73b0\u4e86 Map \u63a5\u53e3 \u8bbe\u7f6e JobDataMap \u90e8\u5206\u4ee3\u7801 // \u521b\u5efaJobDetail JobDetail jobDetail = JobBuilder . newJob ( MyJob . class ) . withIdentity ( \"myJob\" , \"group1\" ) . usingJobData ( \"name\" , \"jobDetail\" ) . build (); // \u6bcf2s\u6267\u884c\u4e00\u6b21\uff0c\u65e0\u9650\u5faa\u73af SimpleScheduleBuilder scheduleBuilder = SimpleScheduleBuilder . simpleSchedule () . withIntervalInSeconds ( 2 ) . repeatForever (); // \u521b\u5efaTrigger Trigger trigger = TriggerBuilder . newTrigger () . withIdentity ( \"myTrigger\" , \"group1\" ) . startNow () . usingJobData ( \"name\" , \"trigger\" ) . withSchedule ( scheduleBuilder ) . build (); \u83b7\u53d6 JobDataMap \u65b9\u6cd5\u4e00\uff1a\u76f4\u63a5\u4ece JobDataMap \u5bf9\u8c61\u4e2d\u83b7\u53d6 package timer ; import org.quartz.* ; import java.text.SimpleDateFormat ; import java.util.Date ; public class MyJob implements Job { @Override public void execute ( JobExecutionContext jobExecutionContext ) throws JobExecutionException { // \u83b7\u53d6 jobkey JobKey jobKey = jobExecutionContext . getJobDetail (). getKey (); System . out . println ( jobKey . getName ()); // myJob System . out . println ( jobKey . getGroup ()); // group1 // \u83b7\u53d6JobDetail\u7684DataMap JobDataMap jobDetailDataMap = jobExecutionContext . getJobDetail (). getJobDataMap (); System . out . println ( jobDetailDataMap . getString ( \"name\" )); // jobDetail // \u83b7\u53d6Trigger\u7684DataMap JobDataMap triggerDataMap = jobExecutionContext . getTrigger (). getJobDataMap (); System . out . println ( triggerDataMap . getString ( \"name\" )); // trigger // \u83b7\u53d6\u5408\u5e76\u540e\u7684DataMap JobDataMap dataMap = jobExecutionContext . getMergedJobDataMap (); System . out . println ( dataMap . getString ( \"name\" )); // trigger } } \u65b9\u6cd5\u4e8c\uff1a\u5b9a\u4e49\u540c\u540d\u53d8\u91cf\u83b7\u53d6 package timer ; import org.quartz.Job ; import org.quartz.JobExecutionContext ; import org.quartz.JobExecutionException ; public class MyJob implements Job { private String name ; public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } @Override public void execute ( JobExecutionContext jobExecutionContext ) throws JobExecutionException { System . out . println ( this . name ); } } Trigger Trigger \u662f\u89e6\u53d1\u5668\uff0c\u7528\u6765\u544a\u8bc9\u8c03\u5ea6\u7a0b\u5e8f\u4f5c\u4e1a\u4ec0\u4e48\u65f6\u5019\u89e6\u53d1 \u89e6\u53d1\u5668\u901a\u7528\u5c5e\u6027 JobKey \uff1a Job \u5b9e\u4f8b\u7684\u6807\u8bc6\uff0c\u89e6\u53d1\u5668\u88ab\u89e6\u53d1\u65f6\uff0c\u6307\u5b9a\u7684 job \u5b9e\u4f8b\u4f1a\u6267\u884c StartTime \uff1a\u89e6\u53d1\u5668\u7684\u65f6\u95f4\u8868\u9996\u6b21\u88ab\u89e6\u53d1\u7684\u65f6\u95f4\uff0c\u7c7b\u578b\u662f Java . util . Date EndTime \uff1a\u89e6\u53d1\u5668\u4e0d\u518d\u88ab\u89e6\u53d1\u7684\u65f6\u95f4 Java . util . Date \u8bbe\u7f6e\u90e8\u5206\u4ee3\u7801 // \u83b7\u53d63\u79d2\u540e\u7684\u65f6\u95f4 Date startDate = new Date (); startDate . setTime ( startDate . getTime () + 3000 ); // \u83b7\u53d66\u79d2\u540e\u7684\u65f6\u95f4 Date endDate = new Date (); endDate . setTime ( endDate . getTime () + 3000 ); // \u521b\u5efaTrigger Trigger trigger = TriggerBuilder . newTrigger () . withIdentity ( \"myTrigger\" , \"group1\" ) . startAt ( startDate ) . endAt ( endDate ) . usingJobData ( \"name\" , \"trigger\" ) . withSchedule ( scheduleBuilder ) . build (); Job \u4e2d\u83b7\u53d6 Trigger \u6570\u636e package timer ; import org.quartz.Job ; import org.quartz.JobExecutionContext ; import org.quartz.JobExecutionException ; import org.quartz.Trigger ; import java.text.SimpleDateFormat ; public class MyJob implements Job { @Override public void execute ( JobExecutionContext jobExecutionContext ) throws JobExecutionException { SimpleDateFormat dateFormat = new SimpleDateFormat ( \"yyyy-MM-dd HH:mm:ss\" ); Trigger trigger = jobExecutionContext . getTrigger (); // \u83b7\u53d6\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4 System . out . println ( dateFormat . format ( trigger . getStartTime ())); System . out . println ( dateFormat . format ( trigger . getEndTime ())); // \u83b7\u53d6JobKey System . out . println ( trigger . getJobKey (). getName ()); System . out . println ( trigger . getJobKey (). getGroup ()); } } SimpleTrigger \u6307\u5b9a\u65f6\u95f4\u6bb5\u5185\u6267\u884c\u4e00\u6b21\u4f5c\u4e1a\u4efb\u52a1 \u6216\u8005\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u5185\u591a\u6b21\u6267\u884c\u4f5c\u4e1a\u4efb\u52a1 \u4efb\u52a1 package timer ; import org.quartz.Job ; import org.quartz.JobExecutionContext ; import org.quartz.JobExecutionException ; import java.text.SimpleDateFormat ; import java.util.Date ; public class MyJob implements Job { @Override public void execute ( JobExecutionContext jobExecutionContext ) throws JobExecutionException { SimpleDateFormat dateFormat = new SimpleDateFormat ( \"yyyy-MM-dd HH:mm:ss\" ); System . out . println ( dateFormat . format ( new Date ())); } } \u793a\u4f8b 1 // \u83b7\u53d63\u79d2\u540e\u7684\u65f6\u95f4 Date startDate = new Date (); startDate . setTime ( startDate . getTime () + 3000 ); // 3\u79d2\u949f\u4e4b\u540e\u6267\u884c\u4e00\u6b21 Trigger trigger = TriggerBuilder . newTrigger () . withIdentity ( \"myTrigger\" , \"group1\" ) . startAt ( startDate ) . build (); \u793a\u4f8b 2 // \u83b7\u53d63\u79d2\u540e\u7684\u65f6\u95f4 Date startDate = new Date (); startDate . setTime ( startDate . getTime () + 3000 ); // \u6bcf2s\u6267\u884c\u4e00\u6b21\uff0c\u65e0\u9650\u5faa\u73af SimpleScheduleBuilder scheduleBuilder = SimpleScheduleBuilder . simpleSchedule () . withIntervalInSeconds ( 2 ) . withRepeatCount ( 3 ); // 3s\u4e4b\u540e\u6267\u884c\u7b2c\u4e00\u6b21\uff0c\u4e4b\u540e\u6bcf\u96942s\u6267\u884c\u4e00\u6b21\uff0c\u91cd\u590d3\u6b21 Trigger trigger = TriggerBuilder . newTrigger () . withIdentity ( \"myTrigger\" , \"group1\" ) . startAt ( startDate ) . withSchedule ( scheduleBuilder ) . build (); \u793a\u4f8b 3 // \u83b7\u53d63\u79d2\u540e\u7684\u65f6\u95f4 Date startDate = new Date (); startDate . setTime ( startDate . getTime () + 3000L ); // \u83b7\u53d66\u79d2\u540e\u7684\u65f6\u95f4 Date endDate = new Date (); endDate . setTime ( endDate . getTime () + 6000L ); // \u6bcf2s\u6267\u884c\u4e00\u6b21\uff0c\u65e0\u9650\u5faa\u73af SimpleScheduleBuilder scheduleBuilder = SimpleScheduleBuilder . simpleSchedule () . withIntervalInSeconds ( 2 ) . withRepeatCount ( 3 ); // 3s\u4e4b\u540e\u6267\u884c\u7b2c\u4e00\u6b21\uff0c\u4e4b\u540e\u6bcf\u96942s\u6267\u884c\u4e00\u6b21\uff0c6\u79d2\u4e4b\u540e\u7ed3\u675f Trigger trigger = TriggerBuilder . newTrigger () . withIdentity ( \"myTrigger\" , \"group1\" ) . startAt ( startDate ) . endAt ( endDate ) . withSchedule ( scheduleBuilder ) . build (); \u6ce8\u610f\uff1a \u91cd\u590d\u6b21\u6570\u53ef\u4ee5\u4e3a 0\u3001\u6b63\u6574\u6570\u3001SimpleTrigger.REPEAT_INDEFINITELY \u91cd\u590d\u6267\u884c\u95f4\u9694\u5fc5\u987b\u4e3a 0 \u6216\u957f\u6574\u6570 \u4e00\u65e6\u6267\u884c\u4e86 endTime \u53c2\u6570\uff0c\u90a3\u4e48\u4f1a\u8986\u76d6\u91cd\u590d\u6b21\u6570\u53c2\u6570\u7684\u6548\u679c CronTrigger \u57fa\u4e8e\u65e5\u5386\u7684\u4f5c\u4e1a\u8c03\u5ea6\u5668\uff0c\u800c\u4e0d\u662f\u50cf SimpleTrigger \u90a3\u6837\u7cbe\u786e\u6307\u5b9a\u65f6\u95f4\u95f4\u9694\uff0c\u8f83\u4e3a\u5e38\u7528 \u683c\u5f0f\uff1a \u79d2 \u5206 \u65f6 \u65e5 \u6708 \u5468 \u5e74 \u7279\u6b8a\u7b26\u53f7\u8bf4\u660e , \u6216 10 , 12 - \u533a\u95f4 10 - 12 / \u6bcf */ 5 * \u6240\u6709\u503c * ? \u4e0d\u6307\u5b9a \u63d0\u793a L \u548c W \u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528 \u5468\u5b57\u6bb5\u4e0d\u533a\u5206\u5927\u5c0f\u5199 mon \u4e0e MON \u76f8\u540c \u5229\u7528\u5728\u7ebf\u751f\u6210\u5de5\u5177 \u793a\u4f8b // \u6bcf2\u79d2\u6267\u884c\u4e00\u6b21 Trigger trigger = TriggerBuilder . newTrigger () . withIdentity ( \"myTrigger\" , \"group1\" ) . withSchedule ( CronScheduleBuilder . cronSchedule ( \"*/2 * * * * ? *\" )) . build (); Scheduler StdSchedulerFactory \u914d\u7f6e\u53c2\u6570\u4e00\u822c\u5b58\u50a8\u5728 quartz.properties \u4e3b\u8981\u51fd\u6570 // \u5c06job\u548ctrigger\u6ce8\u518c\u5230scheduler Date scheduleJob ( JobDetail jobDetail , Trigger trigger ) // \u542f\u52a8 void start () // \u6682\u505c void standby () // \u5173\u95ed // true \u7b49\u5f85\u6240\u6709\u4efb\u52a1\u6267\u884c\u5b8c\u6210\u518d\u5173\u95ed // false \u76f4\u63a5\u5173\u95ed void shutdown () quartz.properties \u6587\u6863\u4f4d\u7f6e\u548c\u52a0\u8f7d\u987a\u5e8f jar \u5305\u4e0b\u6709\u9ed8\u8ba4\u914d\u7f6e \u7ec4\u6210\u90e8\u5206 \u8c03\u5ea6\u5668\u5c5e\u6027 \u7ebf\u7a0b\u6c60\u5c5e\u6027 \u4f5c\u4e1a\u5b58\u50a8\u4f4d\u7f6e \u63d2\u4ef6\u914d\u7f6e SpringMVC \u6574\u5408 Quartz \u65b0\u5efa maven webapp \u4f9d\u8d56 webmvc context aop core \u914d\u7f6e Quartz \u7684\u4e24\u79cd\u65b9\u5f0f\uff1a MethodInvokingJobDetailFactoryBean \u9002\u5408\u8c03\u7528\u7279\u5b9a bean \u65b9\u6cd5\u65f6\u5f88\u65b9\u4fbf JobDetailFactoryBean \u652f\u6301\u4f20\u5165\u4e00\u4e9b\u53c2\u6570 \u9879\u76ee\u7ed3\u6784 $ tree -I target . \u251c\u2500\u2500 pom.xml \u251c\u2500\u2500 src \u2502 \u2514\u2500\u2500 main \u2502 \u251c\u2500\u2500 java \u2502 \u2502 \u2514\u2500\u2500 com \u2502 \u2502 \u2514\u2500\u2500 mouday \u2502 \u2502 \u251c\u2500\u2500 controller \u2502 \u2502 \u2502 \u2514\u2500\u2500 IndexController.java \u2502 \u2502 \u2514\u2500\u2500 quartz \u2502 \u2502 \u251c\u2500\u2500 ComplexJob.java \u2502 \u2502 \u2514\u2500\u2500 SimpleJob.java \u2502 \u251c\u2500\u2500 resources \u2502 \u2502 \u2514\u2500\u2500 dispatcher-servlet.xml \u2502 \u2514\u2500\u2500 webapp \u2502 \u251c\u2500\u2500 WEB-INF \u2502 \u2502 \u2514\u2500\u2500 web.xml \u2502 \u2514\u2500\u2500 index.jsp 1\u3001pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> org.example </groupId> <artifactId> spring-mvc-demo </artifactId> <version> 1.0-SNAPSHOT </version> <properties> <project.build.sourceEncoding> UTF-8 </project.build.sourceEncoding> <spring.version> 5.2.6.RELEASE </spring.version> </properties> <build> <finalName> springquartz </finalName> <plugins> <!-- tomcat7\u63d2\u4ef6 maven \u547d\u4ee4 tomcat7:run \u542f\u52a8\u9879\u76ee--> <plugin> <groupId> org.apache.tomcat.maven </groupId> <artifactId> tomcat7-maven-plugin </artifactId> <version> 2.2 </version> <configuration> <port> 8080 </port> <path> / </path> <uriEncoding> UTF-8 </uriEncoding> <!--\u6dfb\u52a0\u5ffd\u7565war\u5305\u68c0\u67e5\u6807\u7b7e\uff0c\u5219\u53ef\u4ee5\u8ba9tomcat7\uff1arun\u6307\u4ee4\u6b63\u5e38\u542f\u52a8tomcat--> <ignorePackaging> true </ignorePackaging> <contextFile> src/main/webapp/WEB-INF/web.xml </contextFile> <contextReloadable> true </contextReloadable> </configuration> </plugin> </plugins> </build> <dependencies> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-core </artifactId> <version> ${spring.version} </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-beans </artifactId> <version> ${spring.version} </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-context </artifactId> <version> ${spring.version} </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-context-support </artifactId> <version> ${spring.version} </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-tx </artifactId> <version> ${spring.version} </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-web </artifactId> <version> ${spring.version} </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-webmvc </artifactId> <version> ${spring.version} </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-aop </artifactId> <version> ${spring.version} </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-expression </artifactId> <version> ${spring.version} </version> </dependency> <dependency> <groupId> commons-logging </groupId> <artifactId> commons-logging </artifactId> <version> 1.2 </version> </dependency> <dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 4.0.1 </version> <scope> provided </scope> </dependency> <dependency> <groupId> jstl </groupId> <artifactId> jstl </artifactId> <version> 1.2 </version> </dependency> <!-- \u9700\u8981 context-support tx \u7684\u652f\u6301--> <dependency> <groupId> org.quartz-scheduler </groupId> <artifactId> quartz </artifactId> <version> 2.3.2 </version> </dependency> <dependency> <groupId> org.slf4j </groupId> <artifactId> slf4j-simple </artifactId> <version> 1.7.25 </version> <scope> compile </scope> </dependency> </dependencies> </project> 2\u3001src/main/webapp/index.jsp <html> <body> <h2> Hello World! </h2> </body> </html> 3\u3001src/main/webapp/WEB-INF/web.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version= \"4.0\" > <!-- \u914d\u7f6e\u5206\u53d1\u5668 \u9ed8\u8ba4\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\uff1a\u540d\u5b57-servlet.xml --> <servlet> <servlet-name> dispatcher </servlet-name> <servlet-class> org.springframework.web.servlet.DispatcherServlet </servlet-class> <!-- \u6307\u5b9a\u914d\u7f6e\u6587\u4ef6 --> <init-param> <param-name> contextConfigLocation </param-name> <param-value> classpath:dispatcher-servlet.xml </param-value> </init-param> <!-- \u8868\u793a\u5bb9\u5668\u518d\u542f\u52a8\u65f6\u7acb\u5373\u52a0\u8f7dservlet --> <load-on-startup> 1 </load-on-startup> </servlet> <servlet-mapping> <servlet-name> dispatcher </servlet-name> <!-- \u5904\u7406\u6240\u6709URL --> <url-pattern> / </url-pattern> </servlet-mapping> <welcome-file-list> <welcome-file> index.jsp </welcome-file> </welcome-file-list> </web-app> 4\u3001src/main/resources/dispatcher-servlet.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p= \"http://www.springframework.org/schema/p\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:mvc= \"http://www.springframework.org/schema/mvc\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd \" > <!--\u9632\u6b62\u4e2d\u6587\u4e71\u7801--> <bean class= \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter\" > <property name= \"messageConverters\" > <list> <bean class= \"org.springframework.http.converter.StringHttpMessageConverter\" > <property name= \"supportedMediaTypes\" > <list> <value> text/html; charset=utf-8 </value> </list> </property> </bean> </list> </property> </bean> <!-- \u6dfb\u52a0\u6ce8\u89e3\u9a71\u52a8--> <mvc:annotation-driven/> <!-- \u9ed8\u8ba4\u626b\u63cf\u5305\u8def\u5f84--> <context:component-scan base-package= \"com.mouday\" /> <!-- view-controller \u53ef\u4ee5\u76f4\u63a5\u4e0d\u901a\u8fc7controller\u5904\u7406request\uff0c\u8f6c\u53d1\u5230view--> <mvc:view-controller path= \"/\" view-name= \"index\" /> <!-- \u6e32\u67d3\u5668--> <bean id= \"jspViewResolver\" class= \"org.springframework.web.servlet.view.UrlBasedViewResolver\" > <property name= \"viewClass\" value= \"org.springframework.web.servlet.view.JstlView\" /> <!-- \u7ed3\u679c\u89c6\u56fe\u7684\u524d\u7f00--> <property name= \"prefix\" value= \"/\" /> <!-- \u7ed3\u679c\u89c6\u56fe\u7684\u540e\u7f00--> <property name= \"suffix\" value= \".jsp\" /> </bean> <!--\u914d\u7f6eQuartz--> <bean id= \"simpleJobDetail\" class= \"org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean\" > <property name= \"targetObject\" ref= \"simpleJob\" /> <property name= \"targetMethod\" value= \"sayHello\" /> </bean> <bean id= \"complexJobDetail\" class= \"org.springframework.scheduling.quartz.JobDetailFactoryBean\" > <property name= \"jobClass\" value= \"com.mouday.quartz.ComplexJob\" /> <property name= \"jobDataMap\" > <map> <entry key= \"name\" value= \"Tom\" /> </map> </property> <property name= \"Durability\" value= \"true\" /> </bean> <!--\u4e00s\u4e4b\u540e\u6267\u884c\uff0c\u6bcf\u96942s\u6267\u884c\u4e00\u6b21--> <bean id= \"simpleTrigger\" class= \"org.springframework.scheduling.quartz.SimpleTriggerFactoryBean\" > <property name= \"jobDetail\" ref= \"simpleJobDetail\" /> <property name= \"startDelay\" value= \"1000\" /> <property name= \"repeatInterval\" value= \"2000\" /> </bean> <bean id= \"cronTrigger\" class= \"org.springframework.scheduling.quartz.CronTriggerFactoryBean\" > <property name= \"jobDetail\" ref= \"complexJobDetail\" /> <property name= \"cronExpression\" value= \"0/3 * * * * ? *\" /> </bean> <bean class= \"org.springframework.scheduling.quartz.SchedulerFactoryBean\" > <property name= \"jobDetails\" > <list> <ref bean= \"simpleJobDetail\" /> <ref bean= \"complexJobDetail\" /> </list> </property> <property name= \"triggers\" > <list> <ref bean= \"simpleTrigger\" /> <ref bean= \"cronTrigger\" /> </list> </property> </bean> </beans> 5\u3001src/main/java/com/mouday/controller/IndexController.java package com.mouday.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.RequestParam ; import org.springframework.web.bind.annotation.ResponseBody ; /** * \u4ec5\u7528\u4e8eSpringMVC\u670d\u52a1\u6d4b\u8bd5 */ @Controller public class IndexController { @GetMapping ( \"/login\" ) @ResponseBody public String login ( @RequestParam ( value = \"name\" , required = false ) String name , @RequestParam ( value = \"password\" , required = false ) String password ) { return \"name:\" + name + \" password:\" + password ; } } 6\u3001src/main/java/com/mouday/quartz/SimpleJob.java package com.mouday.quartz ; import org.springframework.stereotype.Component ; import java.text.SimpleDateFormat ; import java.util.Date ; @Component ( \"simpleJob\" ) public class SimpleJob { public void sayHello (){ SimpleDateFormat dateFormat = new SimpleDateFormat ( \"yyyy-MM-dd HH:mm:ss\" ); System . out . println ( \"SimpleJob \" + dateFormat . format ( new Date ()) ); } } 7\u3001src/main/java/com/mouday/quartz/ComplexJob.java package com.mouday.quartz ; import org.quartz.JobExecutionContext ; import org.quartz.JobExecutionException ; import org.springframework.scheduling.quartz.QuartzJobBean ; import java.text.SimpleDateFormat ; import java.util.Date ; public class ComplexJob extends QuartzJobBean { private String name ; public void setName ( String name ) { this . name = name ; } protected void executeInternal ( JobExecutionContext jobExecutionContext ) throws JobExecutionException { SimpleDateFormat dateFormat = new SimpleDateFormat ( \"yyyy-MM-dd HH:mm:ss\" ); System . out . println ( \"ComplexJob name: \" + this . name + \" \" + dateFormat . format ( new Date ())); } } \u603b\u7ed3 Timer \u4f18\u7f3a\u70b9 Quartz \u4e09\u5927\u8981\u7d20 Quartz&Spring \u878d\u5408","title":"Java \u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4b Quartz \u7bc7"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bQuartz/#java-quartz","text":"\u5b98\u7f51 http://www.quartz-scheduler.org/ \u7279\u70b9 \u5f3a\u5927\u7684\u8c03\u5ea6\u529f\u80fd \u7075\u6d3b\u7684\u5e94\u7528\u65b9\u5f0f \u5206\u5e03\u5f0f\u548c\u96c6\u7fa4\u80fd\u529b \u4e3b\u8981\u7528\u5230\u7684\u8bbe\u8ba1\u6a21\u5f0f Builder \u6a21\u5f0f Factory \u6a21\u5f0f \u7ec4\u4ef6\u6a21\u5f0f \u94fe\u5f0f\u5199\u6cd5 \u4e09\u4e2a\u6838\u5fc3\u6982\u5ff5 \u8c03\u5ea6\u5668 \u4efb\u52a1 \u89e6\u53d1\u5668 Quartz \u4f53\u7cfb\u7ed3\u6784 JobDetail scheduler trigger - SimpleTrigger - CronTrigger \u91cd\u8981\u7ec4\u6210 Job JobDetail JobBuilder JobStore Trigger TriggerBuilder ThreadPool Scheduler Calendar \u76d1\u542c\u5668 JobListener TriggerListener SchedulerListener","title":"Java \u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4b Quartz \u7bc7"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bQuartz/#quartz","text":"\u4f9d\u8d56 <dependency> <groupId> org.quartz-scheduler </groupId> <artifactId> quartz </artifactId> <version> 2.3.2 </version> </dependency> <dependency> <groupId> org.slf4j </groupId> <artifactId> slf4j-simple </artifactId> <version> 1.7.25 </version> <scope> compile </scope> </dependency> \u5b9a\u4e49\u4efb\u52a1 MyJob.java package timer ; import org.quartz.Job ; import org.quartz.JobExecutionContext ; import org.quartz.JobExecutionException ; import java.text.SimpleDateFormat ; import java.util.Date ; public class MyJob implements Job { @Override public void execute ( JobExecutionContext jobExecutionContext ) throws JobExecutionException { SimpleDateFormat dateFormat = new SimpleDateFormat ( \"yyyy-MM-dd HH:mm:ss\" ); System . out . println ( dateFormat . format ( new Date ())); } } \u8c03\u5ea6\u4efb\u52a1 QuartzDemo.java package timer ; import org.quartz.* ; import org.quartz.impl.StdSchedulerFactory ; public class QuartzDemo { public static void main ( String [] args ) throws SchedulerException { // \u521b\u5efaJobDetail JobDetail jobDetail = JobBuilder . newJob ( MyJob . class ) . withIdentity ( \"myJob\" , \"group1\" ) . build (); // \u6bcf2s\u6267\u884c\u4e00\u6b21\uff0c\u65e0\u9650\u5faa\u73af SimpleScheduleBuilder scheduleBuilder = SimpleScheduleBuilder . simpleSchedule () . withIntervalInSeconds ( 2 ) . repeatForever (); // \u521b\u5efaTrigger Trigger trigger = TriggerBuilder . newTrigger () . withIdentity ( \"myTrigger\" , \"group1\" ) . startNow () . withSchedule ( scheduleBuilder ) . build (); // \u901a\u8fc7\u5de5\u5382\u65b9\u6cd5\u521b\u5efaScheduler\u5b9e\u4f8b SchedulerFactory factory = new StdSchedulerFactory (); Scheduler scheduler = factory . getScheduler (); scheduler . start (); scheduler . scheduleJob ( jobDetail , trigger ); } }","title":"Quartz \u5b9e\u4f8b"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bQuartz/#job-jobdetail","text":"1\u3001Job \u6e90\u7801\uff1a package org.quartz ; public interface Job { void execute ( JobExecutionContext context ) throws JobExecutionException ; } 2\u3001Job \u7684\u751f\u547d\u5468\u671f\uff1a \u6bcf\u6b21\u8c03\u5ea6\u5668\u6267\u884c Job \u65f6\uff0c\u8c03\u7528 execute \u65b9\u6cd5\u524d\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Job \u5b9e\u4f8b \u8c03\u7528\u5b8c\u6210\u540e\uff0c\u5173\u8054\u7684 Job \u5bf9\u8c61\u5b9e\u4f8b\u4f1a\u88ab\u91ca\u653e\uff0c\u91ca\u653e\u7684\u5b9e\u4f8b\u4f1a\u88ab\u5783\u573e\u56de\u6536\u673a\u5236\u56de\u6536 3\u3001JobDetail\uff1a JobDetail \u4e3a Job \u5b9e\u4f8b\u63d0\u4f9b\u4e86\u8bb8\u591a\u8bbe\u7f6e\u5c5e\u6027\uff0c\u4ee5\u53ca JobDataMap \u6210\u5458\u53d8\u91cf\u5c5e\u6027\uff0c \u5b83\u7528\u6765\u5b58\u50a8\u7279\u5b9a Job \u5b9e\u4f8b\u7684\u72b6\u6001\u4fe1\u606f\uff0c\u8c03\u5ea6\u5668\u9700\u8981\u501f\u52a9 JobDetail \u5bf9\u8c61\u6765\u6dfb\u52a0 Job \u5b9e\u4f8b 4\u3001JobDetail \u91cd\u8981\u5c5e\u6027 name group \u9ed8\u8ba4\u503c DEFAULT jobClass jobDataMap // \u521b\u5efaJobDetail JobDetail jobDetail = JobBuilder . newJob ( MyJob . class ) . withIdentity ( \"myJob\" , \"group1\" ) . build (); // \u6253\u5370jobDetail\u5c5e\u6027 System . out . println ( jobDetail . getKey (). getName ()); // myJob System . out . println ( jobDetail . getKey (). getGroup ()); // group1 System . out . println ( jobDetail . getJobClass (). getName ()); // timer.MyJob","title":"Job \u548c JobDetail"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bQuartz/#jobexecutioncontext-jobdatamap","text":"1\u3001JobExecutionContext\uff1a Scheduler \u7ed9 Job \u4f20\u9012\u53c2\u6570 2\u3001JobDataMap: \u53ef\u4ee5\u88c5\u8f7d\u4efb\u4f55\u53ef\u5e8f\u5217\u5316\u7684\u6570\u636e\u5bf9\u8c61 \u5b9e\u73b0\u4e86 Map \u63a5\u53e3 \u8bbe\u7f6e JobDataMap \u90e8\u5206\u4ee3\u7801 // \u521b\u5efaJobDetail JobDetail jobDetail = JobBuilder . newJob ( MyJob . class ) . withIdentity ( \"myJob\" , \"group1\" ) . usingJobData ( \"name\" , \"jobDetail\" ) . build (); // \u6bcf2s\u6267\u884c\u4e00\u6b21\uff0c\u65e0\u9650\u5faa\u73af SimpleScheduleBuilder scheduleBuilder = SimpleScheduleBuilder . simpleSchedule () . withIntervalInSeconds ( 2 ) . repeatForever (); // \u521b\u5efaTrigger Trigger trigger = TriggerBuilder . newTrigger () . withIdentity ( \"myTrigger\" , \"group1\" ) . startNow () . usingJobData ( \"name\" , \"trigger\" ) . withSchedule ( scheduleBuilder ) . build (); \u83b7\u53d6 JobDataMap \u65b9\u6cd5\u4e00\uff1a\u76f4\u63a5\u4ece JobDataMap \u5bf9\u8c61\u4e2d\u83b7\u53d6 package timer ; import org.quartz.* ; import java.text.SimpleDateFormat ; import java.util.Date ; public class MyJob implements Job { @Override public void execute ( JobExecutionContext jobExecutionContext ) throws JobExecutionException { // \u83b7\u53d6 jobkey JobKey jobKey = jobExecutionContext . getJobDetail (). getKey (); System . out . println ( jobKey . getName ()); // myJob System . out . println ( jobKey . getGroup ()); // group1 // \u83b7\u53d6JobDetail\u7684DataMap JobDataMap jobDetailDataMap = jobExecutionContext . getJobDetail (). getJobDataMap (); System . out . println ( jobDetailDataMap . getString ( \"name\" )); // jobDetail // \u83b7\u53d6Trigger\u7684DataMap JobDataMap triggerDataMap = jobExecutionContext . getTrigger (). getJobDataMap (); System . out . println ( triggerDataMap . getString ( \"name\" )); // trigger // \u83b7\u53d6\u5408\u5e76\u540e\u7684DataMap JobDataMap dataMap = jobExecutionContext . getMergedJobDataMap (); System . out . println ( dataMap . getString ( \"name\" )); // trigger } } \u65b9\u6cd5\u4e8c\uff1a\u5b9a\u4e49\u540c\u540d\u53d8\u91cf\u83b7\u53d6 package timer ; import org.quartz.Job ; import org.quartz.JobExecutionContext ; import org.quartz.JobExecutionException ; public class MyJob implements Job { private String name ; public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } @Override public void execute ( JobExecutionContext jobExecutionContext ) throws JobExecutionException { System . out . println ( this . name ); } }","title":"JobExecutionContext &amp; JobDataMap"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bQuartz/#trigger","text":"Trigger \u662f\u89e6\u53d1\u5668\uff0c\u7528\u6765\u544a\u8bc9\u8c03\u5ea6\u7a0b\u5e8f\u4f5c\u4e1a\u4ec0\u4e48\u65f6\u5019\u89e6\u53d1 \u89e6\u53d1\u5668\u901a\u7528\u5c5e\u6027 JobKey \uff1a Job \u5b9e\u4f8b\u7684\u6807\u8bc6\uff0c\u89e6\u53d1\u5668\u88ab\u89e6\u53d1\u65f6\uff0c\u6307\u5b9a\u7684 job \u5b9e\u4f8b\u4f1a\u6267\u884c StartTime \uff1a\u89e6\u53d1\u5668\u7684\u65f6\u95f4\u8868\u9996\u6b21\u88ab\u89e6\u53d1\u7684\u65f6\u95f4\uff0c\u7c7b\u578b\u662f Java . util . Date EndTime \uff1a\u89e6\u53d1\u5668\u4e0d\u518d\u88ab\u89e6\u53d1\u7684\u65f6\u95f4 Java . util . Date \u8bbe\u7f6e\u90e8\u5206\u4ee3\u7801 // \u83b7\u53d63\u79d2\u540e\u7684\u65f6\u95f4 Date startDate = new Date (); startDate . setTime ( startDate . getTime () + 3000 ); // \u83b7\u53d66\u79d2\u540e\u7684\u65f6\u95f4 Date endDate = new Date (); endDate . setTime ( endDate . getTime () + 3000 ); // \u521b\u5efaTrigger Trigger trigger = TriggerBuilder . newTrigger () . withIdentity ( \"myTrigger\" , \"group1\" ) . startAt ( startDate ) . endAt ( endDate ) . usingJobData ( \"name\" , \"trigger\" ) . withSchedule ( scheduleBuilder ) . build (); Job \u4e2d\u83b7\u53d6 Trigger \u6570\u636e package timer ; import org.quartz.Job ; import org.quartz.JobExecutionContext ; import org.quartz.JobExecutionException ; import org.quartz.Trigger ; import java.text.SimpleDateFormat ; public class MyJob implements Job { @Override public void execute ( JobExecutionContext jobExecutionContext ) throws JobExecutionException { SimpleDateFormat dateFormat = new SimpleDateFormat ( \"yyyy-MM-dd HH:mm:ss\" ); Trigger trigger = jobExecutionContext . getTrigger (); // \u83b7\u53d6\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4 System . out . println ( dateFormat . format ( trigger . getStartTime ())); System . out . println ( dateFormat . format ( trigger . getEndTime ())); // \u83b7\u53d6JobKey System . out . println ( trigger . getJobKey (). getName ()); System . out . println ( trigger . getJobKey (). getGroup ()); } }","title":"Trigger"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bQuartz/#simpletrigger","text":"\u6307\u5b9a\u65f6\u95f4\u6bb5\u5185\u6267\u884c\u4e00\u6b21\u4f5c\u4e1a\u4efb\u52a1 \u6216\u8005\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u5185\u591a\u6b21\u6267\u884c\u4f5c\u4e1a\u4efb\u52a1 \u4efb\u52a1 package timer ; import org.quartz.Job ; import org.quartz.JobExecutionContext ; import org.quartz.JobExecutionException ; import java.text.SimpleDateFormat ; import java.util.Date ; public class MyJob implements Job { @Override public void execute ( JobExecutionContext jobExecutionContext ) throws JobExecutionException { SimpleDateFormat dateFormat = new SimpleDateFormat ( \"yyyy-MM-dd HH:mm:ss\" ); System . out . println ( dateFormat . format ( new Date ())); } } \u793a\u4f8b 1 // \u83b7\u53d63\u79d2\u540e\u7684\u65f6\u95f4 Date startDate = new Date (); startDate . setTime ( startDate . getTime () + 3000 ); // 3\u79d2\u949f\u4e4b\u540e\u6267\u884c\u4e00\u6b21 Trigger trigger = TriggerBuilder . newTrigger () . withIdentity ( \"myTrigger\" , \"group1\" ) . startAt ( startDate ) . build (); \u793a\u4f8b 2 // \u83b7\u53d63\u79d2\u540e\u7684\u65f6\u95f4 Date startDate = new Date (); startDate . setTime ( startDate . getTime () + 3000 ); // \u6bcf2s\u6267\u884c\u4e00\u6b21\uff0c\u65e0\u9650\u5faa\u73af SimpleScheduleBuilder scheduleBuilder = SimpleScheduleBuilder . simpleSchedule () . withIntervalInSeconds ( 2 ) . withRepeatCount ( 3 ); // 3s\u4e4b\u540e\u6267\u884c\u7b2c\u4e00\u6b21\uff0c\u4e4b\u540e\u6bcf\u96942s\u6267\u884c\u4e00\u6b21\uff0c\u91cd\u590d3\u6b21 Trigger trigger = TriggerBuilder . newTrigger () . withIdentity ( \"myTrigger\" , \"group1\" ) . startAt ( startDate ) . withSchedule ( scheduleBuilder ) . build (); \u793a\u4f8b 3 // \u83b7\u53d63\u79d2\u540e\u7684\u65f6\u95f4 Date startDate = new Date (); startDate . setTime ( startDate . getTime () + 3000L ); // \u83b7\u53d66\u79d2\u540e\u7684\u65f6\u95f4 Date endDate = new Date (); endDate . setTime ( endDate . getTime () + 6000L ); // \u6bcf2s\u6267\u884c\u4e00\u6b21\uff0c\u65e0\u9650\u5faa\u73af SimpleScheduleBuilder scheduleBuilder = SimpleScheduleBuilder . simpleSchedule () . withIntervalInSeconds ( 2 ) . withRepeatCount ( 3 ); // 3s\u4e4b\u540e\u6267\u884c\u7b2c\u4e00\u6b21\uff0c\u4e4b\u540e\u6bcf\u96942s\u6267\u884c\u4e00\u6b21\uff0c6\u79d2\u4e4b\u540e\u7ed3\u675f Trigger trigger = TriggerBuilder . newTrigger () . withIdentity ( \"myTrigger\" , \"group1\" ) . startAt ( startDate ) . endAt ( endDate ) . withSchedule ( scheduleBuilder ) . build (); \u6ce8\u610f\uff1a \u91cd\u590d\u6b21\u6570\u53ef\u4ee5\u4e3a 0\u3001\u6b63\u6574\u6570\u3001SimpleTrigger.REPEAT_INDEFINITELY \u91cd\u590d\u6267\u884c\u95f4\u9694\u5fc5\u987b\u4e3a 0 \u6216\u957f\u6574\u6570 \u4e00\u65e6\u6267\u884c\u4e86 endTime \u53c2\u6570\uff0c\u90a3\u4e48\u4f1a\u8986\u76d6\u91cd\u590d\u6b21\u6570\u53c2\u6570\u7684\u6548\u679c","title":"SimpleTrigger"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bQuartz/#crontrigger","text":"\u57fa\u4e8e\u65e5\u5386\u7684\u4f5c\u4e1a\u8c03\u5ea6\u5668\uff0c\u800c\u4e0d\u662f\u50cf SimpleTrigger \u90a3\u6837\u7cbe\u786e\u6307\u5b9a\u65f6\u95f4\u95f4\u9694\uff0c\u8f83\u4e3a\u5e38\u7528 \u683c\u5f0f\uff1a \u79d2 \u5206 \u65f6 \u65e5 \u6708 \u5468 \u5e74 \u7279\u6b8a\u7b26\u53f7\u8bf4\u660e , \u6216 10 , 12 - \u533a\u95f4 10 - 12 / \u6bcf */ 5 * \u6240\u6709\u503c * ? \u4e0d\u6307\u5b9a \u63d0\u793a L \u548c W \u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528 \u5468\u5b57\u6bb5\u4e0d\u533a\u5206\u5927\u5c0f\u5199 mon \u4e0e MON \u76f8\u540c \u5229\u7528\u5728\u7ebf\u751f\u6210\u5de5\u5177 \u793a\u4f8b // \u6bcf2\u79d2\u6267\u884c\u4e00\u6b21 Trigger trigger = TriggerBuilder . newTrigger () . withIdentity ( \"myTrigger\" , \"group1\" ) . withSchedule ( CronScheduleBuilder . cronSchedule ( \"*/2 * * * * ? *\" )) . build ();","title":"CronTrigger"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bQuartz/#scheduler","text":"StdSchedulerFactory \u914d\u7f6e\u53c2\u6570\u4e00\u822c\u5b58\u50a8\u5728 quartz.properties \u4e3b\u8981\u51fd\u6570 // \u5c06job\u548ctrigger\u6ce8\u518c\u5230scheduler Date scheduleJob ( JobDetail jobDetail , Trigger trigger ) // \u542f\u52a8 void start () // \u6682\u505c void standby () // \u5173\u95ed // true \u7b49\u5f85\u6240\u6709\u4efb\u52a1\u6267\u884c\u5b8c\u6210\u518d\u5173\u95ed // false \u76f4\u63a5\u5173\u95ed void shutdown ()","title":"Scheduler"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bQuartz/#quartzproperties","text":"\u6587\u6863\u4f4d\u7f6e\u548c\u52a0\u8f7d\u987a\u5e8f jar \u5305\u4e0b\u6709\u9ed8\u8ba4\u914d\u7f6e \u7ec4\u6210\u90e8\u5206 \u8c03\u5ea6\u5668\u5c5e\u6027 \u7ebf\u7a0b\u6c60\u5c5e\u6027 \u4f5c\u4e1a\u5b58\u50a8\u4f4d\u7f6e \u63d2\u4ef6\u914d\u7f6e","title":"quartz.properties"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bQuartz/#springmvc-quartz","text":"\u65b0\u5efa maven webapp \u4f9d\u8d56 webmvc context aop core \u914d\u7f6e Quartz \u7684\u4e24\u79cd\u65b9\u5f0f\uff1a MethodInvokingJobDetailFactoryBean \u9002\u5408\u8c03\u7528\u7279\u5b9a bean \u65b9\u6cd5\u65f6\u5f88\u65b9\u4fbf JobDetailFactoryBean \u652f\u6301\u4f20\u5165\u4e00\u4e9b\u53c2\u6570 \u9879\u76ee\u7ed3\u6784 $ tree -I target . \u251c\u2500\u2500 pom.xml \u251c\u2500\u2500 src \u2502 \u2514\u2500\u2500 main \u2502 \u251c\u2500\u2500 java \u2502 \u2502 \u2514\u2500\u2500 com \u2502 \u2502 \u2514\u2500\u2500 mouday \u2502 \u2502 \u251c\u2500\u2500 controller \u2502 \u2502 \u2502 \u2514\u2500\u2500 IndexController.java \u2502 \u2502 \u2514\u2500\u2500 quartz \u2502 \u2502 \u251c\u2500\u2500 ComplexJob.java \u2502 \u2502 \u2514\u2500\u2500 SimpleJob.java \u2502 \u251c\u2500\u2500 resources \u2502 \u2502 \u2514\u2500\u2500 dispatcher-servlet.xml \u2502 \u2514\u2500\u2500 webapp \u2502 \u251c\u2500\u2500 WEB-INF \u2502 \u2502 \u2514\u2500\u2500 web.xml \u2502 \u2514\u2500\u2500 index.jsp 1\u3001pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> org.example </groupId> <artifactId> spring-mvc-demo </artifactId> <version> 1.0-SNAPSHOT </version> <properties> <project.build.sourceEncoding> UTF-8 </project.build.sourceEncoding> <spring.version> 5.2.6.RELEASE </spring.version> </properties> <build> <finalName> springquartz </finalName> <plugins> <!-- tomcat7\u63d2\u4ef6 maven \u547d\u4ee4 tomcat7:run \u542f\u52a8\u9879\u76ee--> <plugin> <groupId> org.apache.tomcat.maven </groupId> <artifactId> tomcat7-maven-plugin </artifactId> <version> 2.2 </version> <configuration> <port> 8080 </port> <path> / </path> <uriEncoding> UTF-8 </uriEncoding> <!--\u6dfb\u52a0\u5ffd\u7565war\u5305\u68c0\u67e5\u6807\u7b7e\uff0c\u5219\u53ef\u4ee5\u8ba9tomcat7\uff1arun\u6307\u4ee4\u6b63\u5e38\u542f\u52a8tomcat--> <ignorePackaging> true </ignorePackaging> <contextFile> src/main/webapp/WEB-INF/web.xml </contextFile> <contextReloadable> true </contextReloadable> </configuration> </plugin> </plugins> </build> <dependencies> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-core </artifactId> <version> ${spring.version} </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-beans </artifactId> <version> ${spring.version} </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-context </artifactId> <version> ${spring.version} </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-context-support </artifactId> <version> ${spring.version} </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-tx </artifactId> <version> ${spring.version} </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-web </artifactId> <version> ${spring.version} </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-webmvc </artifactId> <version> ${spring.version} </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-aop </artifactId> <version> ${spring.version} </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-expression </artifactId> <version> ${spring.version} </version> </dependency> <dependency> <groupId> commons-logging </groupId> <artifactId> commons-logging </artifactId> <version> 1.2 </version> </dependency> <dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 4.0.1 </version> <scope> provided </scope> </dependency> <dependency> <groupId> jstl </groupId> <artifactId> jstl </artifactId> <version> 1.2 </version> </dependency> <!-- \u9700\u8981 context-support tx \u7684\u652f\u6301--> <dependency> <groupId> org.quartz-scheduler </groupId> <artifactId> quartz </artifactId> <version> 2.3.2 </version> </dependency> <dependency> <groupId> org.slf4j </groupId> <artifactId> slf4j-simple </artifactId> <version> 1.7.25 </version> <scope> compile </scope> </dependency> </dependencies> </project> 2\u3001src/main/webapp/index.jsp <html> <body> <h2> Hello World! </h2> </body> </html> 3\u3001src/main/webapp/WEB-INF/web.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version= \"4.0\" > <!-- \u914d\u7f6e\u5206\u53d1\u5668 \u9ed8\u8ba4\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\uff1a\u540d\u5b57-servlet.xml --> <servlet> <servlet-name> dispatcher </servlet-name> <servlet-class> org.springframework.web.servlet.DispatcherServlet </servlet-class> <!-- \u6307\u5b9a\u914d\u7f6e\u6587\u4ef6 --> <init-param> <param-name> contextConfigLocation </param-name> <param-value> classpath:dispatcher-servlet.xml </param-value> </init-param> <!-- \u8868\u793a\u5bb9\u5668\u518d\u542f\u52a8\u65f6\u7acb\u5373\u52a0\u8f7dservlet --> <load-on-startup> 1 </load-on-startup> </servlet> <servlet-mapping> <servlet-name> dispatcher </servlet-name> <!-- \u5904\u7406\u6240\u6709URL --> <url-pattern> / </url-pattern> </servlet-mapping> <welcome-file-list> <welcome-file> index.jsp </welcome-file> </welcome-file-list> </web-app> 4\u3001src/main/resources/dispatcher-servlet.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p= \"http://www.springframework.org/schema/p\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:mvc= \"http://www.springframework.org/schema/mvc\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd \" > <!--\u9632\u6b62\u4e2d\u6587\u4e71\u7801--> <bean class= \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter\" > <property name= \"messageConverters\" > <list> <bean class= \"org.springframework.http.converter.StringHttpMessageConverter\" > <property name= \"supportedMediaTypes\" > <list> <value> text/html; charset=utf-8 </value> </list> </property> </bean> </list> </property> </bean> <!-- \u6dfb\u52a0\u6ce8\u89e3\u9a71\u52a8--> <mvc:annotation-driven/> <!-- \u9ed8\u8ba4\u626b\u63cf\u5305\u8def\u5f84--> <context:component-scan base-package= \"com.mouday\" /> <!-- view-controller \u53ef\u4ee5\u76f4\u63a5\u4e0d\u901a\u8fc7controller\u5904\u7406request\uff0c\u8f6c\u53d1\u5230view--> <mvc:view-controller path= \"/\" view-name= \"index\" /> <!-- \u6e32\u67d3\u5668--> <bean id= \"jspViewResolver\" class= \"org.springframework.web.servlet.view.UrlBasedViewResolver\" > <property name= \"viewClass\" value= \"org.springframework.web.servlet.view.JstlView\" /> <!-- \u7ed3\u679c\u89c6\u56fe\u7684\u524d\u7f00--> <property name= \"prefix\" value= \"/\" /> <!-- \u7ed3\u679c\u89c6\u56fe\u7684\u540e\u7f00--> <property name= \"suffix\" value= \".jsp\" /> </bean> <!--\u914d\u7f6eQuartz--> <bean id= \"simpleJobDetail\" class= \"org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean\" > <property name= \"targetObject\" ref= \"simpleJob\" /> <property name= \"targetMethod\" value= \"sayHello\" /> </bean> <bean id= \"complexJobDetail\" class= \"org.springframework.scheduling.quartz.JobDetailFactoryBean\" > <property name= \"jobClass\" value= \"com.mouday.quartz.ComplexJob\" /> <property name= \"jobDataMap\" > <map> <entry key= \"name\" value= \"Tom\" /> </map> </property> <property name= \"Durability\" value= \"true\" /> </bean> <!--\u4e00s\u4e4b\u540e\u6267\u884c\uff0c\u6bcf\u96942s\u6267\u884c\u4e00\u6b21--> <bean id= \"simpleTrigger\" class= \"org.springframework.scheduling.quartz.SimpleTriggerFactoryBean\" > <property name= \"jobDetail\" ref= \"simpleJobDetail\" /> <property name= \"startDelay\" value= \"1000\" /> <property name= \"repeatInterval\" value= \"2000\" /> </bean> <bean id= \"cronTrigger\" class= \"org.springframework.scheduling.quartz.CronTriggerFactoryBean\" > <property name= \"jobDetail\" ref= \"complexJobDetail\" /> <property name= \"cronExpression\" value= \"0/3 * * * * ? *\" /> </bean> <bean class= \"org.springframework.scheduling.quartz.SchedulerFactoryBean\" > <property name= \"jobDetails\" > <list> <ref bean= \"simpleJobDetail\" /> <ref bean= \"complexJobDetail\" /> </list> </property> <property name= \"triggers\" > <list> <ref bean= \"simpleTrigger\" /> <ref bean= \"cronTrigger\" /> </list> </property> </bean> </beans> 5\u3001src/main/java/com/mouday/controller/IndexController.java package com.mouday.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.RequestParam ; import org.springframework.web.bind.annotation.ResponseBody ; /** * \u4ec5\u7528\u4e8eSpringMVC\u670d\u52a1\u6d4b\u8bd5 */ @Controller public class IndexController { @GetMapping ( \"/login\" ) @ResponseBody public String login ( @RequestParam ( value = \"name\" , required = false ) String name , @RequestParam ( value = \"password\" , required = false ) String password ) { return \"name:\" + name + \" password:\" + password ; } } 6\u3001src/main/java/com/mouday/quartz/SimpleJob.java package com.mouday.quartz ; import org.springframework.stereotype.Component ; import java.text.SimpleDateFormat ; import java.util.Date ; @Component ( \"simpleJob\" ) public class SimpleJob { public void sayHello (){ SimpleDateFormat dateFormat = new SimpleDateFormat ( \"yyyy-MM-dd HH:mm:ss\" ); System . out . println ( \"SimpleJob \" + dateFormat . format ( new Date ()) ); } } 7\u3001src/main/java/com/mouday/quartz/ComplexJob.java package com.mouday.quartz ; import org.quartz.JobExecutionContext ; import org.quartz.JobExecutionException ; import org.springframework.scheduling.quartz.QuartzJobBean ; import java.text.SimpleDateFormat ; import java.util.Date ; public class ComplexJob extends QuartzJobBean { private String name ; public void setName ( String name ) { this . name = name ; } protected void executeInternal ( JobExecutionContext jobExecutionContext ) throws JobExecutionException { SimpleDateFormat dateFormat = new SimpleDateFormat ( \"yyyy-MM-dd HH:mm:ss\" ); System . out . println ( \"ComplexJob name: \" + this . name + \" \" + dateFormat . format ( new Date ())); } }","title":"SpringMVC \u6574\u5408 Quartz"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bQuartz/#_1","text":"Timer \u4f18\u7f3a\u70b9 Quartz \u4e09\u5927\u8981\u7d20 Quartz&Spring \u878d\u5408","title":"\u603b\u7ed3"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bTimer/","text":"Java \u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4b Timer \u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6 \u5b9a\u4e49\uff1a \u57fa\u4e8e\u7ed9\u5b9a\u7684\u65f6\u95f4\u70b9\uff0c\u7ed9\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u6216\u8005\u7ed9\u5b9a\u7684\u6267\u884c\u6b21\u6570\u81ea\u52a8\u6267\u884c\u7684\u4efb\u52a1 Timer \u548c Quartz Timer\uff1a \u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u540e\u53f0\u7ebf\u7a0b\u5bf9\u591a\u4e2a\u4e1a\u52a1\u7ebf\u7a0b\u8fdb\u884c\u5b9a\u65f6\u5b9a\u9891\u7387\u7684\u8c03\u5ea6 \u4e3b\u8981\u6784\u4ef6 Timer - \u5b9a\u65f6\u8c03\u7528 -> TimerTask \u5b9a\u65f6\u51fd\u6570\u7684\u7528\u6cd5 // \u5ef6\u65f6\u6267\u884c\u4e00\u6b21 public void schedule ( TimerTask task , long delay ) // \u5b9a\u65f6\u6267\u884c\u4e00\u6b21 public void schedule ( TimerTask task , Date time ) // \u5ef6\u65f6\u95f4\u9694\u6267\u884c public void schedule ( TimerTask task , long delay , long period ) // \u5b9a\u65f6\u95f4\u9694\u6267\u884c public void schedule ( TimerTask task , Date firstTime , long period ) // \u5ef6\u65f6\u95f4\u9694\u6267\u884c public void scheduleAtFixedRate ( TimerTask task , long delay , long period ) // \u5b9a\u65f6\u95f4\u9694\u6267\u884c public void scheduleAtFixedRate ( TimerTask task , Date firstTime , long period ) \u4ee3\u7801\u5b9e\u4f8b package timer ; import java.text.SimpleDateFormat ; import java.util.Calendar ; import java.util.Timer ; import java.util.TimerTask ; class Util { public static String getCurrentDateTime () { Calendar calendar = Calendar . getInstance (); SimpleDateFormat dateFormat = new SimpleDateFormat ( \"yyyy-MM-dd HH:mm:ss\" ); return dateFormat . format ( calendar . getTime ()); } } class MyTimerTask extends TimerTask { @Override public void run () { System . out . println ( \"MyTimerTask is Running \" + Util . getCurrentDateTime ()); } } public class TimerDemo { public static void main ( String [] args ) { Timer timer = new Timer (); // \u5ef6\u65f60s\u4e4b\u540e\uff0c\u6bcf\u96941s\u6267\u884c\u4e00\u6b21 timer . schedule ( new MyTimerTask (), 0 L , 1000L ); } } \u6267\u884c\u7ed3\u679c MyTimerTask is Running 2020 - 06 - 22 22 : 49 : 45 MyTimerTask is Running 2020 - 06 - 22 22 : 49 : 46 MyTimerTask is Running 2020 - 06 - 22 22 : 49 : 47 ... \u5176\u4ed6\u51fd\u6570 TimerTask . cancel () \u53d6\u6d88\u3010\u5f53\u524d\u3011 TimerTask \u91cc\u7684\u4efb\u52a1 TimerTask . scheduledExecutionTime () \u8fd4\u56de\u6b64\u4efb\u52a1\u6700\u8fd1\u5b9e\u9645\u6267\u884c\u7684\u5df2\u5b89\u6392\u6267\u884c\u7684\u65f6\u95f4 Timer . cancel () \u7ec8\u6b62\u6b64\u8ba1\u65f6\u5668\uff0c\u4e22\u5f03\u3010\u6240\u6709\u3011\u5f53\u524d\u5df2\u5b89\u6392\u7684\u4efb\u52a1 Timer . purge () \u4ece\u6b64\u8ba1\u65f6\u5668\u7684\u4efb\u52a1\u961f\u5217\u4e2d\u79fb\u9664\u6240\u6709\u5df2\u53d6\u6d88\u7684\u4efb\u52a1\uff0c\u8fd4\u56de\u79fb\u9664\u6570\u91cf \u533a\u522b schedule \u548c scheduleAtFixedRate 1\u3001\u9996\u6b21\u8ba1\u5212\u6267\u884c\u7684\u65f6\u95f4\u65e9\u4e8e\u5f53\u524d\u7684\u65f6\u95f4 schedule fixed-delay \u5982\u679c\u7b2c\u4e00\u6b21\u6267\u884c\u65f6\u95f4\u88ab delay \u4e86\uff0c\u968f\u540e\u7684\u6267\u884c\u65f6\u95f4\u6309\u7167\u4e0a\u4e00\u6b21\u5b9e\u9645\u6267\u884c\u3010\u5b8c\u6210\u7684\u65f6\u95f4\u70b9\u3011\u8fdb\u884c\u8ba1\u7b97 scheduleAtFixedRate fixed-rate \u5982\u679c\u7b2c\u4e00\u6b21\u6267\u884c\u65f6\u95f4\u88ab delay \u4e86\uff0c\u968f\u540e\u7684\u6267\u884c\u65f6\u95f4\u6309\u7167\u4e0a\u4e00\u6b21\u3010\u5f00\u59cb\u7684\u65f6\u95f4\u70b9\u3011\u8fdb\u884c\u8ba1\u7b97\uff0c\u5e76\u4e14\u4e3a\u4e86\u8d76\u4e0a\u8fdb\u5ea6\u4f1a\u591a\u6b21\u6267\u884c\u4efb\u52a1\uff0c\u56e0\u6b64 TimerTask \u4e2d\u7684\u6267\u884c\u4f53\u9700\u8981\u8003\u8651\u540c\u6b65 \u4ee3\u7801\u793a\u4f8b package timer ; import java.text.SimpleDateFormat ; import java.util.Calendar ; import java.util.Date ; import java.util.Timer ; import java.util.TimerTask ; public class TimerDemo { public static void main ( String [] args ) { Timer timer = new Timer (); SimpleDateFormat dateFormat = new SimpleDateFormat ( \"yyyy-MM-dd HH:mm:ss\" ); Calendar calendar = Calendar . getInstance (); calendar . add ( Calendar . SECOND , - 10 ); timer . schedule ( new TimerTask () { @Override public void run () { System . out . println ( dateFormat . format ( new Date ())); } }, calendar . getTime (), 2000L ); } } \u6267\u884c\u7ed3\u679c timer . schedule 2020 - 06 - 22 23 : 16 : 56 2020 - 06 - 22 23 : 16 : 58 2020 - 06 - 22 23 : 17 : 00 timer . scheduleAtFixedRate 2020 - 06 - 22 23 : 18 : 19 2020 - 06 - 22 23 : 18 : 19 2020 - 06 - 22 23 : 18 : 19 2\u3001\u4efb\u52a1\u6267\u884c\u6240\u9700\u65f6\u95f4\u8d85\u51fa\u4efb\u52a1\u7684\u6267\u884c\u5468\u671f\u95f4\u9694 schedule \u4e0b\u6b21\u6267\u884c\u65f6\u95f4\u76f8\u5bf9\u4e8e\u4e0a\u4e00\u6b21\u5b9e\u9645\u6267\u884c\u3010\u5b8c\u6210\u7684\u65f6\u95f4\u70b9\u3011\uff0c\u56e0\u6b64\u6267\u884c\u65f6\u95f4\u4f1a\u4e0d\u65ad\u5ef6\u540e scheduleAtFixedRate \u4e0b\u4e00\u6b21\u6267\u884c\u65f6\u95f4\u76f8\u5bf9\u4e8e\u4e0a\u4e00\u6b21\u3010\u5f00\u59cb\u7684\u65f6\u95f4\u70b9\u3011\uff0c\u56e0\u6b64\u6267\u884c\u65f6\u95f4\u4e00\u822c\u4e0d\u4f1a\u5ef6\u540e\uff0c\u56e0\u6b64\u5b58\u5728\u5e76\u53d1\u6027 package timer ; import java.text.SimpleDateFormat ; import java.util.Date ; import java.util.Timer ; import java.util.TimerTask ; public class TimerDemo { public static void main ( String [] args ) { Timer timer = new Timer (); SimpleDateFormat dateFormat = new SimpleDateFormat ( \"yyyy-MM-dd HH:mm:ss\" ); timer . scheduleAtFixedRate ( new TimerTask () { @Override public void run () { try { Thread . sleep ( 3000L ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( dateFormat . format ( new Date ())); } }, 0 L , 1000L ); } } timer . schedule 2020 - 06 - 22 23 : 24 : 08 2020 - 06 - 22 23 : 24 : 11 2020 - 06 - 22 23 : 24 : 14 timer . scheduleAtFixedRate 2020 - 06 - 22 23 : 25 : 18 2020 - 06 - 22 23 : 25 : 21 2020 - 06 - 22 23 : 25 : 24 Timer \u7efc\u5408\u5e94\u7528 \u6267\u884c 5 \u6b21\u4efb\u52a1\uff0c\u5c31\u505c\u6b62\u5b9a\u65f6\u5668\uff0c\u5e76\u9000\u51fa\u7a0b\u5e8f package timer ; import java.text.SimpleDateFormat ; import java.util.Date ; import java.util.Timer ; import java.util.TimerTask ; // \u81ea\u5b9a\u4e49\u4efb\u52a1 class MyTimerTask extends TimerTask { private SimpleDateFormat dateFormat = new SimpleDateFormat ( \"yyyy-MM-dd HH:mm:ss\" ); private int count = 0 ; private Timer timer ; public MyTimerTask ( Timer timer ) { this . timer = timer ; } @Override public void run () { System . out . println ( dateFormat . format ( new Date ())); // \u5224\u65ad\u6267\u884c\u6ee15\u6b21\u5c31\u505c\u6b62 this . count ++; if ( this . count >= 5 ) { // \u505c\u6b62\u5f53\u524d\u4efb\u52a1 this . cancel (); // \u505c\u6b62\u5b9a\u65f6\u5668\uff0c\u5e76\u9000\u51fa\u7a0b\u5e8f this . timer . cancel (); } } } public class TimerDemo { public static void main ( String [] args ) { Timer timer = new Timer (); timer . schedule ( new MyTimerTask ( timer ), 0 L , 1000L ); } } \u6253\u5370\u7ed3\u679c 2020 - 06 - 23 20 : 46 : 11 2020 - 06 - 23 20 : 46 : 12 2020 - 06 - 23 20 : 46 : 13 2020 - 06 - 23 20 : 46 : 14 2020 - 06 - 23 20 : 46 : 15 Timer \u7f3a\u9677 1\u3001\u7ba1\u7406\u5e76\u53d1\u4efb\u52a1\u7684\u7f3a\u9677 Timer \u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53bb\u6267\u884c\u5b9a\u65f6\u4efb\u52a1\uff0c\u5982\u679c\u5b58\u5728\u591a\u4e2a\u4efb\u52a1\uff0c\u4e14\u4efb\u52a1\u65f6\u95f4\u8fc7\u957f\uff0c\u4f1a\u5bfc\u81f4\u6267\u884c\u6548\u679c\u4e0e\u9884\u671f\u4e0d\u7b26 2\u3001\u5f53\u4efb\u52a1\u629b\u51fa\u5f02\u5e38\u65f6\u7684\u7f3a\u9677 \u5982\u679c TimerTask \u629b\u51fa RuntimeException\uff0cTimer \u4f1a\u505c\u6b62\u6240\u6709\u4efb\u52a1\u7684\u8fd0\u884c 3\u3001\u4ee5\u4e0b\u573a\u666f\u4e0d\u5efa\u8bae\u4f7f\u7528 \u5bf9\u65f6\u6548\u6027\u8981\u6c42\u8f83\u9ad8\u7684\u591a\u4efb\u52a1\u5e76\u53d1\u4f5c\u4e1a \u5bf9\u590d\u6742\u7684\u4efb\u52a1\u7684\u8c03\u5ea6","title":"Java \u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4b Timer"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bTimer/#java-timer","text":"","title":"Java \u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4b Timer"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bTimer/#_1","text":"\u5b9a\u4e49\uff1a \u57fa\u4e8e\u7ed9\u5b9a\u7684\u65f6\u95f4\u70b9\uff0c\u7ed9\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u6216\u8005\u7ed9\u5b9a\u7684\u6267\u884c\u6b21\u6570\u81ea\u52a8\u6267\u884c\u7684\u4efb\u52a1 Timer \u548c Quartz Timer\uff1a \u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u540e\u53f0\u7ebf\u7a0b\u5bf9\u591a\u4e2a\u4e1a\u52a1\u7ebf\u7a0b\u8fdb\u884c\u5b9a\u65f6\u5b9a\u9891\u7387\u7684\u8c03\u5ea6 \u4e3b\u8981\u6784\u4ef6 Timer - \u5b9a\u65f6\u8c03\u7528 -> TimerTask","title":"\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bTimer/#_2","text":"// \u5ef6\u65f6\u6267\u884c\u4e00\u6b21 public void schedule ( TimerTask task , long delay ) // \u5b9a\u65f6\u6267\u884c\u4e00\u6b21 public void schedule ( TimerTask task , Date time ) // \u5ef6\u65f6\u95f4\u9694\u6267\u884c public void schedule ( TimerTask task , long delay , long period ) // \u5b9a\u65f6\u95f4\u9694\u6267\u884c public void schedule ( TimerTask task , Date firstTime , long period ) // \u5ef6\u65f6\u95f4\u9694\u6267\u884c public void scheduleAtFixedRate ( TimerTask task , long delay , long period ) // \u5b9a\u65f6\u95f4\u9694\u6267\u884c public void scheduleAtFixedRate ( TimerTask task , Date firstTime , long period ) \u4ee3\u7801\u5b9e\u4f8b package timer ; import java.text.SimpleDateFormat ; import java.util.Calendar ; import java.util.Timer ; import java.util.TimerTask ; class Util { public static String getCurrentDateTime () { Calendar calendar = Calendar . getInstance (); SimpleDateFormat dateFormat = new SimpleDateFormat ( \"yyyy-MM-dd HH:mm:ss\" ); return dateFormat . format ( calendar . getTime ()); } } class MyTimerTask extends TimerTask { @Override public void run () { System . out . println ( \"MyTimerTask is Running \" + Util . getCurrentDateTime ()); } } public class TimerDemo { public static void main ( String [] args ) { Timer timer = new Timer (); // \u5ef6\u65f60s\u4e4b\u540e\uff0c\u6bcf\u96941s\u6267\u884c\u4e00\u6b21 timer . schedule ( new MyTimerTask (), 0 L , 1000L ); } } \u6267\u884c\u7ed3\u679c MyTimerTask is Running 2020 - 06 - 22 22 : 49 : 45 MyTimerTask is Running 2020 - 06 - 22 22 : 49 : 46 MyTimerTask is Running 2020 - 06 - 22 22 : 49 : 47 ...","title":"\u5b9a\u65f6\u51fd\u6570\u7684\u7528\u6cd5"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bTimer/#_3","text":"TimerTask . cancel () \u53d6\u6d88\u3010\u5f53\u524d\u3011 TimerTask \u91cc\u7684\u4efb\u52a1 TimerTask . scheduledExecutionTime () \u8fd4\u56de\u6b64\u4efb\u52a1\u6700\u8fd1\u5b9e\u9645\u6267\u884c\u7684\u5df2\u5b89\u6392\u6267\u884c\u7684\u65f6\u95f4 Timer . cancel () \u7ec8\u6b62\u6b64\u8ba1\u65f6\u5668\uff0c\u4e22\u5f03\u3010\u6240\u6709\u3011\u5f53\u524d\u5df2\u5b89\u6392\u7684\u4efb\u52a1 Timer . purge () \u4ece\u6b64\u8ba1\u65f6\u5668\u7684\u4efb\u52a1\u961f\u5217\u4e2d\u79fb\u9664\u6240\u6709\u5df2\u53d6\u6d88\u7684\u4efb\u52a1\uff0c\u8fd4\u56de\u79fb\u9664\u6570\u91cf","title":"\u5176\u4ed6\u51fd\u6570"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bTimer/#_4","text":"schedule \u548c scheduleAtFixedRate 1\u3001\u9996\u6b21\u8ba1\u5212\u6267\u884c\u7684\u65f6\u95f4\u65e9\u4e8e\u5f53\u524d\u7684\u65f6\u95f4 schedule fixed-delay \u5982\u679c\u7b2c\u4e00\u6b21\u6267\u884c\u65f6\u95f4\u88ab delay \u4e86\uff0c\u968f\u540e\u7684\u6267\u884c\u65f6\u95f4\u6309\u7167\u4e0a\u4e00\u6b21\u5b9e\u9645\u6267\u884c\u3010\u5b8c\u6210\u7684\u65f6\u95f4\u70b9\u3011\u8fdb\u884c\u8ba1\u7b97 scheduleAtFixedRate fixed-rate \u5982\u679c\u7b2c\u4e00\u6b21\u6267\u884c\u65f6\u95f4\u88ab delay \u4e86\uff0c\u968f\u540e\u7684\u6267\u884c\u65f6\u95f4\u6309\u7167\u4e0a\u4e00\u6b21\u3010\u5f00\u59cb\u7684\u65f6\u95f4\u70b9\u3011\u8fdb\u884c\u8ba1\u7b97\uff0c\u5e76\u4e14\u4e3a\u4e86\u8d76\u4e0a\u8fdb\u5ea6\u4f1a\u591a\u6b21\u6267\u884c\u4efb\u52a1\uff0c\u56e0\u6b64 TimerTask \u4e2d\u7684\u6267\u884c\u4f53\u9700\u8981\u8003\u8651\u540c\u6b65 \u4ee3\u7801\u793a\u4f8b package timer ; import java.text.SimpleDateFormat ; import java.util.Calendar ; import java.util.Date ; import java.util.Timer ; import java.util.TimerTask ; public class TimerDemo { public static void main ( String [] args ) { Timer timer = new Timer (); SimpleDateFormat dateFormat = new SimpleDateFormat ( \"yyyy-MM-dd HH:mm:ss\" ); Calendar calendar = Calendar . getInstance (); calendar . add ( Calendar . SECOND , - 10 ); timer . schedule ( new TimerTask () { @Override public void run () { System . out . println ( dateFormat . format ( new Date ())); } }, calendar . getTime (), 2000L ); } } \u6267\u884c\u7ed3\u679c timer . schedule 2020 - 06 - 22 23 : 16 : 56 2020 - 06 - 22 23 : 16 : 58 2020 - 06 - 22 23 : 17 : 00 timer . scheduleAtFixedRate 2020 - 06 - 22 23 : 18 : 19 2020 - 06 - 22 23 : 18 : 19 2020 - 06 - 22 23 : 18 : 19 2\u3001\u4efb\u52a1\u6267\u884c\u6240\u9700\u65f6\u95f4\u8d85\u51fa\u4efb\u52a1\u7684\u6267\u884c\u5468\u671f\u95f4\u9694 schedule \u4e0b\u6b21\u6267\u884c\u65f6\u95f4\u76f8\u5bf9\u4e8e\u4e0a\u4e00\u6b21\u5b9e\u9645\u6267\u884c\u3010\u5b8c\u6210\u7684\u65f6\u95f4\u70b9\u3011\uff0c\u56e0\u6b64\u6267\u884c\u65f6\u95f4\u4f1a\u4e0d\u65ad\u5ef6\u540e scheduleAtFixedRate \u4e0b\u4e00\u6b21\u6267\u884c\u65f6\u95f4\u76f8\u5bf9\u4e8e\u4e0a\u4e00\u6b21\u3010\u5f00\u59cb\u7684\u65f6\u95f4\u70b9\u3011\uff0c\u56e0\u6b64\u6267\u884c\u65f6\u95f4\u4e00\u822c\u4e0d\u4f1a\u5ef6\u540e\uff0c\u56e0\u6b64\u5b58\u5728\u5e76\u53d1\u6027 package timer ; import java.text.SimpleDateFormat ; import java.util.Date ; import java.util.Timer ; import java.util.TimerTask ; public class TimerDemo { public static void main ( String [] args ) { Timer timer = new Timer (); SimpleDateFormat dateFormat = new SimpleDateFormat ( \"yyyy-MM-dd HH:mm:ss\" ); timer . scheduleAtFixedRate ( new TimerTask () { @Override public void run () { try { Thread . sleep ( 3000L ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( dateFormat . format ( new Date ())); } }, 0 L , 1000L ); } } timer . schedule 2020 - 06 - 22 23 : 24 : 08 2020 - 06 - 22 23 : 24 : 11 2020 - 06 - 22 23 : 24 : 14 timer . scheduleAtFixedRate 2020 - 06 - 22 23 : 25 : 18 2020 - 06 - 22 23 : 25 : 21 2020 - 06 - 22 23 : 25 : 24","title":"\u533a\u522b"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bTimer/#timer","text":"\u6267\u884c 5 \u6b21\u4efb\u52a1\uff0c\u5c31\u505c\u6b62\u5b9a\u65f6\u5668\uff0c\u5e76\u9000\u51fa\u7a0b\u5e8f package timer ; import java.text.SimpleDateFormat ; import java.util.Date ; import java.util.Timer ; import java.util.TimerTask ; // \u81ea\u5b9a\u4e49\u4efb\u52a1 class MyTimerTask extends TimerTask { private SimpleDateFormat dateFormat = new SimpleDateFormat ( \"yyyy-MM-dd HH:mm:ss\" ); private int count = 0 ; private Timer timer ; public MyTimerTask ( Timer timer ) { this . timer = timer ; } @Override public void run () { System . out . println ( dateFormat . format ( new Date ())); // \u5224\u65ad\u6267\u884c\u6ee15\u6b21\u5c31\u505c\u6b62 this . count ++; if ( this . count >= 5 ) { // \u505c\u6b62\u5f53\u524d\u4efb\u52a1 this . cancel (); // \u505c\u6b62\u5b9a\u65f6\u5668\uff0c\u5e76\u9000\u51fa\u7a0b\u5e8f this . timer . cancel (); } } } public class TimerDemo { public static void main ( String [] args ) { Timer timer = new Timer (); timer . schedule ( new MyTimerTask ( timer ), 0 L , 1000L ); } } \u6253\u5370\u7ed3\u679c 2020 - 06 - 23 20 : 46 : 11 2020 - 06 - 23 20 : 46 : 12 2020 - 06 - 23 20 : 46 : 13 2020 - 06 - 23 20 : 46 : 14 2020 - 06 - 23 20 : 46 : 15","title":"Timer \u7efc\u5408\u5e94\u7528"},{"location":"Java/Java\u5b9a\u65f6\u4efb\u52a1\u8c03\u5ea6\u5de5\u5177\u8be6\u89e3\u4e4bTimer/#timer_1","text":"1\u3001\u7ba1\u7406\u5e76\u53d1\u4efb\u52a1\u7684\u7f3a\u9677 Timer \u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53bb\u6267\u884c\u5b9a\u65f6\u4efb\u52a1\uff0c\u5982\u679c\u5b58\u5728\u591a\u4e2a\u4efb\u52a1\uff0c\u4e14\u4efb\u52a1\u65f6\u95f4\u8fc7\u957f\uff0c\u4f1a\u5bfc\u81f4\u6267\u884c\u6548\u679c\u4e0e\u9884\u671f\u4e0d\u7b26 2\u3001\u5f53\u4efb\u52a1\u629b\u51fa\u5f02\u5e38\u65f6\u7684\u7f3a\u9677 \u5982\u679c TimerTask \u629b\u51fa RuntimeException\uff0cTimer \u4f1a\u505c\u6b62\u6240\u6709\u4efb\u52a1\u7684\u8fd0\u884c 3\u3001\u4ee5\u4e0b\u573a\u666f\u4e0d\u5efa\u8bae\u4f7f\u7528 \u5bf9\u65f6\u6548\u6027\u8981\u6c42\u8f83\u9ad8\u7684\u591a\u4efb\u52a1\u5e76\u53d1\u4f5c\u4e1a \u5bf9\u590d\u6742\u7684\u4efb\u52a1\u7684\u8c03\u5ea6","title":"Timer \u7f3a\u9677"},{"location":"Java/Java\u6ce8\u89e3 Annotation/","text":"Java \u6ce8\u89e3 Annotation \u6982\u5ff5\uff1a Java \u63d0\u4f9b\u7684\u4e00\u79cd\u539f\u7a0b\u5e8f\u4e2d\u7684\u5143\u7d20\u5173\u8054\u4efb\u4f55\u4fe1\u606f\u548c\u4efb\u4f55\u5143\u6570\u636e\u7684\u9014\u5f84\u548c\u65b9\u6cd5 \u5185\u5bb9\uff1a Java \u4e2d\u5e38\u89c1\u7684\u6ce8\u89e3 \u6ce8\u89e3\u5206\u7c7b \u81ea\u5b9a\u4e49\u6ce8\u89e3 \u6ce8\u89e3\u5e94\u7528\u5b9e\u6218 \u4e00\u3001Java \u4e2d\u5e38\u89c1\u7684\u6ce8\u89e3 1\u3001JDK \u81ea\u5e26\u6ce8\u89e3 @Override \u8986\u76d6 @Deprecated \u5e9f\u5f03 @SuppressWarnings \u6291\u5236\u8b66\u544a \u793a\u4f8b\u4ee3\u7801\uff1a AnnotationDemo.java package demo ; interface Human { public void sayHello (); public void sayHi (); } class Person implements Human { @Override public void sayHello () { System . out . println ( \"hello\" ); } @Deprecated @Override public void sayHi () { System . out . println ( \"hi\" ); } } public class AnnotationDemo { public static void main ( String [] args ) { Person person = new Person (); person . sayHi (); } } \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7f16\u8bd1\u7684\u65f6\u5019\u4f1a\u6709\u63d0\u793a $ javac AnnotationDemo . java \u6ce8 : AnnotationDemo . java\u4f7f\u7528\u6216\u8986\u76d6\u4e86\u5df2\u8fc7\u65f6\u7684 API \u3002 \u6ce8 : \u6709\u5173\u8be6\u7ec6\u4fe1\u606f , \u8bf7\u4f7f\u7528 - Xlint : deprecation \u91cd\u65b0\u7f16\u8bd1 \u3002 $ javac AnnotationDemo . java - Xlint : deprecation AnnotationDemo . java : 28 : \u8b66\u544a : [ deprecation ] Person\u4e2d\u7684sayHi () \u5df2\u8fc7\u65f6 person . sayHi (); ^ 1 \u4e2a\u8b66\u544a \u53ef\u4ee5\u6291\u5236\u8b66\u544a public class AnnotationDemo { @SuppressWarnings ( \"deprecation\" ) public static void main ( String [] args ) { Person person = new Person (); person . sayHi (); } } \u518d\u6b21\u7f16\u8bd1\u5c31\u6ca1\u6709\u63d0\u793a\u4e86 2\u3001\u5e38\u89c1\u7684\u7b2c\u4e09\u65b9\u6ce8\u89e3 Spring @Autowired @Service @Repository MyBatis @InsertProvider @UpdateProvider @Options \u4e8c\u3001\u6ce8\u89e3\u5206\u7c7b 1\u3001\u6309\u7167\u8fd0\u884c\u673a\u5236\u5206 \u6e90\u7801\u6ce8\u89e3 \u6ce8\u89e3\u53ea\u5b58\u5728\u4e8e\u6e90\u7801\u4e2d\uff0c\u7f16\u8bd1\u540e\u6210.class \u6587\u4ef6\u5c31\u4e0d\u5b58\u5728\u4e86 \u7f16\u8bd1\u65f6\u6ce8\u89e3 \u6ce8\u89e3\u5728\u6e90\u7801\u548c.class \u6587\u4ef6\u90fd\u5b58\u5728 \u8fd0\u884c\u65f6\u6ce8\u89e3 \u5728\u8fd0\u884c\u9636\u6bb5\u8fd8\u8d77\u4f5c\u7528\uff0c\u4f1a\u5f71\u54cd\u8fd0\u884c\u903b\u8f91 eg: @Autowired 2\u3001\u6309\u7167\u6765\u6e90\u5206 JDK \u6ce8\u89e3 \u7b2c\u4e09\u65b9\u6ce8\u89e3 \u81ea\u5b9a\u4e49\u6ce8\u89e3 \u5143\u6ce8\u89e3\uff1a\u6ce8\u89e3\u7684\u6ce8\u89e3 \u4e09\u3001\u81ea\u5b9a\u4e49\u6ce8\u89e3 1\u3001\u81ea\u5b9a\u4e49\u6ce8\u89e3\u8bed\u6cd5 \u793a\u4f8b\u53ca\u8bf4\u660e package demo ; import java.lang.annotation.* ; /** * Target\u662f\u6ce8\u89e3\u4f5c\u7528\u57df\uff1a * TYPE \u7c7b\uff0c\u63a5\u53e3 * FIELD \u5b57\u6bb5\u58f0\u660e * METHOD \u65b9\u6cd5\u58f0\u660e * PARAMETER \u53c2\u6570\u58f0\u660e * CONSTRUCTOR \u6784\u9020\u65b9\u6cd5\u58f0\u660e * LOCAL_VARIABLE \u5c40\u90e8\u53d8\u91cf\u58f0\u660e * ANNOTATION_TYPE * PACKAGE \u5305\u58f0\u660e * * Retention \u751f\u547d\u5468\u671f * SOURCE \u53ea\u5728\u6e90\u7801\u663e\u793a\uff0c\u7f16\u8bd1\u65f6\u4f1a\u4e22\u5f03 * CLASS \u7f16\u8bd1\u65f6\u4f1a\u8bb0\u5f55\u5230class\u4e2d\uff0c\u8fd0\u884c\u65f6\u5ffd\u7565 * RUNTIME \u8fd0\u884c\u65f6\u5b58\u5728\uff0c\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u8bfb\u53d6 * * Inherited \u5141\u8bb8\u5b50\u7c7b\u7ee7\u627f * * Documented \u751f\u6210javadoc\u65f6\u4f1a\u5305\u542b\u6ce8\u89e3\u4fe1\u606f */ @Target ({ ElementType . METHOD , ElementType . TYPE }) @Retention ( RetentionPolicy . RUNTIME ) @Inherited @Documented // 1\u3001\u4f7f\u7528\u5173\u952e\u8bcd@interface \u5b9a\u4e49\u6ce8\u89e3 public @interface Description { // 2\u3001\u6210\u5458\u4ee5\u65e0\u53c2\u65e0\u5f02\u5e38\u65b9\u5f0f\u58f0\u660e String desc (); // 3\u3001\u53ef\u4ee5\u7528default\u4e3a\u6210\u5458\u6307\u5b9a\u9ed8\u8ba4\u503c int age () default 18 ; // 4\u3001\u6210\u5458\u7c7b\u578b\u662f\u53d7\u9650\u7684\uff0c\u5408\u6cd5\u7684\u7c7b\u578b\u5305\u62ec\u539f\u59cb\u7c7b\u578b\u53ca // String, Class, Annotation, Enumeration String author (); } /** * 5\u3001\u5982\u679c\u6ce8\u89e3\u53ea\u6709\u4e00\u4e2a\u6210\u5458\uff0c\u5219\u6210\u5458\u540d\u5fc5\u987b\u53d6\u540d\u4e3a: value() * \u5728\u4f7f\u7528\u65f6\u53ef\u4ee5\u5ffd\u7565\u6210\u5458\u540d\u548c\u8d4b\u503c\u53f7\uff08=\uff09 * * 6\u3001\u6ce8\u89e3\u7c7b\u53ef\u4ee5\u6ca1\u6709\u6210\u5458\uff0c\u6ca1\u6709\u6210\u5458\u7684\u6ce8\u89e3\u79f0\u4e3a \u6807\u8bc6\u6ce8\u89e3 */ 2\u3001\u4f7f\u7528\u6ce8\u89e3\u7684\u8bed\u6cd5 // @<\u6ce8\u89e3\u540d>(<\u6210\u5458\u540d>=<\u6210\u5458\u503c>...) class Demo { @Description ( desc = \"i am eyeColor\" , author = \"Tom\" , age = 18 ) public String eyeColor () { return \"red\" ; } public static void main ( String [] args ) { } } 3\u3001\u89e3\u6790\u6ce8\u89e3 \u6982\u5ff5\uff1a \u901a\u8fc7\u53cd\u5c04\u83b7\u53d6\u7c7b\u3001\u51fd\u6570\u6216\u6210\u5458\u4e0a \u8fd0\u884c\u65f6 \u6ce8\u89e3\u4fe1\u606f\uff0c\u4ece\u800c\u5b9e\u73b0\u52a8\u6001\u63a7\u5236\u7a0b\u5e8f\u8fd0\u884c\u7684\u903b\u8f91 package demo ; import java.lang.annotation.* ; import java.lang.reflect.Method ; @Target ({ ElementType . METHOD , ElementType . TYPE }) @Retention ( RetentionPolicy . RUNTIME ) @Inherited @Documented public @interface Description { String value (); } @Description ( \"a class annotation\" ) class Demo { @Description ( \"a method annotation\" ) public String eyeColor () { return \"red\" ; } } class DemoTest { public static void main ( String [] args ) throws ClassNotFoundException { // 1\u3001\u4f7f\u7528\u7c7b\u52a0\u8f7d\u5668 Class clazz = Class . forName ( \"demo.Demo\" ); // 2\u3001\u627e\u5230\u7c7b\u4e0a\u9762\u7684\u6ce8\u89e3 boolean isExist = clazz . isAnnotationPresent ( Description . class ); if ( isExist ) { // 3\u3001\u62ff\u5230\u6ce8\u89e3\u5b9e\u4f8b Description description = ( Description ) clazz . getAnnotation ( Description . class ); System . out . println ( description . value ()); // a class annotation } // \u627e\u5230\u65b9\u6cd5\u4e0a\u7684\u6ce8\u89e3 Method [] methods = clazz . getMethods (); for ( Method method : methods ) { boolean isMethodExist = method . isAnnotationPresent ( Description . class ); if ( isMethodExist ) { Description description = ( Description ) method . getAnnotation ( Description . class ); System . out . println ( description . value ()); } } // \u53e6\u4e00\u79cd\u89e3\u6790\u65b9\u6cd5 for ( Method method : methods ) { Annotation [] annotations = method . getAnnotations (); for ( Annotation annotation : annotations ) { if ( annotation instanceof Description ) { Description description = ( Description ) annotation ; System . out . println ( description . value ()); } } } } } 4\u3001\u7ee7\u627f@Inherited package demo ; import java.lang.annotation.* ; import java.lang.reflect.Method ; @Target ({ ElementType . METHOD , ElementType . TYPE }) @Retention ( RetentionPolicy . RUNTIME ) @Inherited @Documented public @interface Description { String value (); } @Description ( \"a class annotation\" ) class Person { @Description ( \"a method annotation\" ) public String eyeColor () { return \"red\" ; } } class Child extends Person { @Override public String eyeColor () { return \"red\" ; } } // Child \u7ee7\u627f Person \u53ef\u4ee5\u83b7\u53d6\u7c7b\u4e0a\u9762\u7684\u6ce8\u89e3 \u56db\u3001\u6ce8\u89e3\u5b9e\u6218 1\u3001\u9879\u76ee\u8bf4\u660e \u7528\u6ce8\u89e3\u5b9e\u73b0\u6301\u4e45\u5c42\u6846\u67b6\uff0c\u66ff\u4ee3 Hibernate \u89e3\u51b3\u65b9\u6848 2\u3001\u9700\u6c42\uff1a \u6709\u4e00\u5f20\u7528\u6237\u8868\uff0c\u5b57\u6bb5\u5305\u62ec\u7528\u6237\u7528\u6237\u540d\uff0c\u5e74\u9f84\uff0c\u7535\u8bdd \u65b9\u4fbf\u5bf9\u6bcf\u4e2a\u5bf9\u8c61\u8fdb\u884c\u4fdd\u5b58\uff0c\u5e76\u6253\u5370\u51fa SQL\u3002 \u4f7f\u7528\u65b9\u5f0f\u8981\u8db3\u591f\u7b80\u5355\uff0c\u89c1\u4ee3\u7801\u793a\u4f8b\u3002 3\u3001\u601d\u8def\uff1a \u8003\u8651\u4ee3\u7801\u5982\u4f55\u4e0e\u6570\u636e\u5e93\u8fdb\u884c\u6620\u5c04 \u5b9e\u73b0 save 4\u3001\u4ee3\u7801\u5b9e\u73b0 \u6587\u4ef6\u76ee\u5f55 . \u251c\u2500\u2500 Column . java \u251c\u2500\u2500 Demo . java \u251c\u2500\u2500 Table . java \u2514\u2500\u2500 User . java Table.java package anno ; import java.lang.annotation.ElementType ; import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.annotation.Target ; @Target ( ElementType . TYPE ) @Retention ( RetentionPolicy . RUNTIME ) public @interface Table { String value (); } Column.java package anno ; import java.lang.annotation.ElementType ; import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.annotation.Target ; @Target ( ElementType . FIELD ) @Retention ( RetentionPolicy . RUNTIME ) public @interface Column { String value (); } User.java package anno ; @Table ( \"user\" ) public class User { @Column ( \"name\" ) private String name ; @Column ( \"age\" ) private Integer age ; @Column ( \"phone_number\" ) private String phoneNumber ; public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getAge () { return age ; } public void setAge ( int age ) { this . age = age ; } public String getPhoneNumber () { return phoneNumber ; } public void setPhoneNumber ( String phoneNumber ) { this . phoneNumber = phoneNumber ; } } Demo.java package anno ; import java.lang.reflect.Field ; import java.lang.reflect.InvocationTargetException ; import java.lang.reflect.Method ; import java.util.HashMap ; import java.util.List ; import java.util.Map ; public class Demo { public static void main ( String [] args ) throws ClassNotFoundException , NoSuchMethodException , IllegalAccessException , InvocationTargetException { User user = new User (); user . setAge ( 12 ); System . out . println ( save ( user )); //insert into `user` (`name`, `phone_number`, `age`) values('null', 'null', '12') } private static String save ( User user ) throws NoSuchMethodException , InvocationTargetException , IllegalAccessException { // \u83b7\u53d6class Class clazz = user . getClass (); // \u83b7\u53d6\u8868\u540d if (! clazz . isAnnotationPresent ( Table . class )) { return null ; } StringBuilder builder = new StringBuilder (); builder . append ( \"insert into \" ); Table table = ( Table ) clazz . getAnnotation ( Table . class ); String tableName = table . value (); builder . append ( \"`\" ). append ( tableName ). append ( \"` \" ); // \u83b7\u53d6\u6240\u6709\u5b57\u6bb5\u540d\u548c\u5b57\u6bb5\u503c Map < String , String > map = new HashMap <>(); Field [] fields = clazz . getDeclaredFields (); for ( Field field : fields ) { if (! field . isAnnotationPresent ( Column . class )) { continue ; } // \u901a\u8fc7\u6ce8\u89e3\u83b7\u53d6\u5b57\u6bb5\u540d\u79f0 Column column = field . getAnnotation ( Column . class ); String columnName = column . value (); // \u901a\u8fc7\u53cd\u5c04\u83b7\u53d6\u5b57\u6bb5\u7684\u503c String fieldName = field . getName (); String methodName = \"get\" + fieldName . substring ( 0 , 1 ). toUpperCase () + fieldName . substring ( 1 ); Method method = clazz . getMethod ( methodName ); String columnValue = String . valueOf ( method . invoke ( user )); map . put ( columnName , columnValue ); } // \u62fc\u88c5sql builder . append ( \"(\" ); Object [] columns = map . keySet (). toArray (); for ( int i = 0 ; i < columns . length ; i ++) { builder . append ( \"`\" ). append ( columns [ i ]. toString ()). append ( \"`\" ); if ( i != columns . length - 1 ) { builder . append ( \", \" ); } } builder . append ( \") \" ); builder . append ( \"values\" ); builder . append ( \"(\" ); Object [] values = map . values (). toArray (); for ( int i = 0 ; i < values . length ; i ++) { builder . append ( \"'\" ). append ( values [ i ]. toString ()). append ( \"'\" ); if ( i != values . length - 1 ) { builder . append ( \", \" ); } } builder . append ( \") \" ); return builder . toString (); } } \u4e94\u3001\u603b\u7ed3 1\u3001\u8ba4\u8bc6\u6ce8\u89e3 2\u3001\u6ce8\u89e3\u7684\u4f5c\u7528\u8303\u56f4@Target \u548c\u751f\u547d\u5468\u671f@Retention \uff081\uff09\u4f5c\u7528\u8303\u56f4\uff1a \u5305\u3001\u7c7b\u3001\u5b57\u6bb5\u3001\u65b9\u6cd5\u3001\u65b9\u6cd5\u53c2\u6570\u3001\u5c40\u90e8\u53d8\u91cf \uff082\uff09\u751f\u547d\u5468\u671f\uff1a\u6e90\u6587\u4ef6 source,\u7f16\u8bd1 class, \u8fd0\u884c runtime 3\u3001\u8bfb\u61c2\u6ce8\u89e3 4\u3001\u4f7f\u7528\u6ce8\u89e3\u89e3\u51b3\u5b9e\u9645\u5f00\u53d1\u95ee\u9898","title":"Java\u6ce8\u89e3 Annotation"},{"location":"Java/Java\u6ce8\u89e3 Annotation/#java","text":"1\u3001JDK \u81ea\u5e26\u6ce8\u89e3 @Override \u8986\u76d6 @Deprecated \u5e9f\u5f03 @SuppressWarnings \u6291\u5236\u8b66\u544a \u793a\u4f8b\u4ee3\u7801\uff1a AnnotationDemo.java package demo ; interface Human { public void sayHello (); public void sayHi (); } class Person implements Human { @Override public void sayHello () { System . out . println ( \"hello\" ); } @Deprecated @Override public void sayHi () { System . out . println ( \"hi\" ); } } public class AnnotationDemo { public static void main ( String [] args ) { Person person = new Person (); person . sayHi (); } } \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7f16\u8bd1\u7684\u65f6\u5019\u4f1a\u6709\u63d0\u793a $ javac AnnotationDemo . java \u6ce8 : AnnotationDemo . java\u4f7f\u7528\u6216\u8986\u76d6\u4e86\u5df2\u8fc7\u65f6\u7684 API \u3002 \u6ce8 : \u6709\u5173\u8be6\u7ec6\u4fe1\u606f , \u8bf7\u4f7f\u7528 - Xlint : deprecation \u91cd\u65b0\u7f16\u8bd1 \u3002 $ javac AnnotationDemo . java - Xlint : deprecation AnnotationDemo . java : 28 : \u8b66\u544a : [ deprecation ] Person\u4e2d\u7684sayHi () \u5df2\u8fc7\u65f6 person . sayHi (); ^ 1 \u4e2a\u8b66\u544a \u53ef\u4ee5\u6291\u5236\u8b66\u544a public class AnnotationDemo { @SuppressWarnings ( \"deprecation\" ) public static void main ( String [] args ) { Person person = new Person (); person . sayHi (); } } \u518d\u6b21\u7f16\u8bd1\u5c31\u6ca1\u6709\u63d0\u793a\u4e86 2\u3001\u5e38\u89c1\u7684\u7b2c\u4e09\u65b9\u6ce8\u89e3 Spring @Autowired @Service @Repository MyBatis @InsertProvider @UpdateProvider @Options","title":"\u4e00\u3001Java \u4e2d\u5e38\u89c1\u7684\u6ce8\u89e3"},{"location":"Java/Java\u6ce8\u89e3 Annotation/#_1","text":"1\u3001\u6309\u7167\u8fd0\u884c\u673a\u5236\u5206 \u6e90\u7801\u6ce8\u89e3 \u6ce8\u89e3\u53ea\u5b58\u5728\u4e8e\u6e90\u7801\u4e2d\uff0c\u7f16\u8bd1\u540e\u6210.class \u6587\u4ef6\u5c31\u4e0d\u5b58\u5728\u4e86 \u7f16\u8bd1\u65f6\u6ce8\u89e3 \u6ce8\u89e3\u5728\u6e90\u7801\u548c.class \u6587\u4ef6\u90fd\u5b58\u5728 \u8fd0\u884c\u65f6\u6ce8\u89e3 \u5728\u8fd0\u884c\u9636\u6bb5\u8fd8\u8d77\u4f5c\u7528\uff0c\u4f1a\u5f71\u54cd\u8fd0\u884c\u903b\u8f91 eg: @Autowired 2\u3001\u6309\u7167\u6765\u6e90\u5206 JDK \u6ce8\u89e3 \u7b2c\u4e09\u65b9\u6ce8\u89e3 \u81ea\u5b9a\u4e49\u6ce8\u89e3 \u5143\u6ce8\u89e3\uff1a\u6ce8\u89e3\u7684\u6ce8\u89e3","title":"\u4e8c\u3001\u6ce8\u89e3\u5206\u7c7b"},{"location":"Java/Java\u6ce8\u89e3 Annotation/#_2","text":"1\u3001\u81ea\u5b9a\u4e49\u6ce8\u89e3\u8bed\u6cd5 \u793a\u4f8b\u53ca\u8bf4\u660e package demo ; import java.lang.annotation.* ; /** * Target\u662f\u6ce8\u89e3\u4f5c\u7528\u57df\uff1a * TYPE \u7c7b\uff0c\u63a5\u53e3 * FIELD \u5b57\u6bb5\u58f0\u660e * METHOD \u65b9\u6cd5\u58f0\u660e * PARAMETER \u53c2\u6570\u58f0\u660e * CONSTRUCTOR \u6784\u9020\u65b9\u6cd5\u58f0\u660e * LOCAL_VARIABLE \u5c40\u90e8\u53d8\u91cf\u58f0\u660e * ANNOTATION_TYPE * PACKAGE \u5305\u58f0\u660e * * Retention \u751f\u547d\u5468\u671f * SOURCE \u53ea\u5728\u6e90\u7801\u663e\u793a\uff0c\u7f16\u8bd1\u65f6\u4f1a\u4e22\u5f03 * CLASS \u7f16\u8bd1\u65f6\u4f1a\u8bb0\u5f55\u5230class\u4e2d\uff0c\u8fd0\u884c\u65f6\u5ffd\u7565 * RUNTIME \u8fd0\u884c\u65f6\u5b58\u5728\uff0c\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u8bfb\u53d6 * * Inherited \u5141\u8bb8\u5b50\u7c7b\u7ee7\u627f * * Documented \u751f\u6210javadoc\u65f6\u4f1a\u5305\u542b\u6ce8\u89e3\u4fe1\u606f */ @Target ({ ElementType . METHOD , ElementType . TYPE }) @Retention ( RetentionPolicy . RUNTIME ) @Inherited @Documented // 1\u3001\u4f7f\u7528\u5173\u952e\u8bcd@interface \u5b9a\u4e49\u6ce8\u89e3 public @interface Description { // 2\u3001\u6210\u5458\u4ee5\u65e0\u53c2\u65e0\u5f02\u5e38\u65b9\u5f0f\u58f0\u660e String desc (); // 3\u3001\u53ef\u4ee5\u7528default\u4e3a\u6210\u5458\u6307\u5b9a\u9ed8\u8ba4\u503c int age () default 18 ; // 4\u3001\u6210\u5458\u7c7b\u578b\u662f\u53d7\u9650\u7684\uff0c\u5408\u6cd5\u7684\u7c7b\u578b\u5305\u62ec\u539f\u59cb\u7c7b\u578b\u53ca // String, Class, Annotation, Enumeration String author (); } /** * 5\u3001\u5982\u679c\u6ce8\u89e3\u53ea\u6709\u4e00\u4e2a\u6210\u5458\uff0c\u5219\u6210\u5458\u540d\u5fc5\u987b\u53d6\u540d\u4e3a: value() * \u5728\u4f7f\u7528\u65f6\u53ef\u4ee5\u5ffd\u7565\u6210\u5458\u540d\u548c\u8d4b\u503c\u53f7\uff08=\uff09 * * 6\u3001\u6ce8\u89e3\u7c7b\u53ef\u4ee5\u6ca1\u6709\u6210\u5458\uff0c\u6ca1\u6709\u6210\u5458\u7684\u6ce8\u89e3\u79f0\u4e3a \u6807\u8bc6\u6ce8\u89e3 */ 2\u3001\u4f7f\u7528\u6ce8\u89e3\u7684\u8bed\u6cd5 // @<\u6ce8\u89e3\u540d>(<\u6210\u5458\u540d>=<\u6210\u5458\u503c>...) class Demo { @Description ( desc = \"i am eyeColor\" , author = \"Tom\" , age = 18 ) public String eyeColor () { return \"red\" ; } public static void main ( String [] args ) { } } 3\u3001\u89e3\u6790\u6ce8\u89e3 \u6982\u5ff5\uff1a \u901a\u8fc7\u53cd\u5c04\u83b7\u53d6\u7c7b\u3001\u51fd\u6570\u6216\u6210\u5458\u4e0a \u8fd0\u884c\u65f6 \u6ce8\u89e3\u4fe1\u606f\uff0c\u4ece\u800c\u5b9e\u73b0\u52a8\u6001\u63a7\u5236\u7a0b\u5e8f\u8fd0\u884c\u7684\u903b\u8f91 package demo ; import java.lang.annotation.* ; import java.lang.reflect.Method ; @Target ({ ElementType . METHOD , ElementType . TYPE }) @Retention ( RetentionPolicy . RUNTIME ) @Inherited @Documented public @interface Description { String value (); } @Description ( \"a class annotation\" ) class Demo { @Description ( \"a method annotation\" ) public String eyeColor () { return \"red\" ; } } class DemoTest { public static void main ( String [] args ) throws ClassNotFoundException { // 1\u3001\u4f7f\u7528\u7c7b\u52a0\u8f7d\u5668 Class clazz = Class . forName ( \"demo.Demo\" ); // 2\u3001\u627e\u5230\u7c7b\u4e0a\u9762\u7684\u6ce8\u89e3 boolean isExist = clazz . isAnnotationPresent ( Description . class ); if ( isExist ) { // 3\u3001\u62ff\u5230\u6ce8\u89e3\u5b9e\u4f8b Description description = ( Description ) clazz . getAnnotation ( Description . class ); System . out . println ( description . value ()); // a class annotation } // \u627e\u5230\u65b9\u6cd5\u4e0a\u7684\u6ce8\u89e3 Method [] methods = clazz . getMethods (); for ( Method method : methods ) { boolean isMethodExist = method . isAnnotationPresent ( Description . class ); if ( isMethodExist ) { Description description = ( Description ) method . getAnnotation ( Description . class ); System . out . println ( description . value ()); } } // \u53e6\u4e00\u79cd\u89e3\u6790\u65b9\u6cd5 for ( Method method : methods ) { Annotation [] annotations = method . getAnnotations (); for ( Annotation annotation : annotations ) { if ( annotation instanceof Description ) { Description description = ( Description ) annotation ; System . out . println ( description . value ()); } } } } } 4\u3001\u7ee7\u627f@Inherited package demo ; import java.lang.annotation.* ; import java.lang.reflect.Method ; @Target ({ ElementType . METHOD , ElementType . TYPE }) @Retention ( RetentionPolicy . RUNTIME ) @Inherited @Documented public @interface Description { String value (); } @Description ( \"a class annotation\" ) class Person { @Description ( \"a method annotation\" ) public String eyeColor () { return \"red\" ; } } class Child extends Person { @Override public String eyeColor () { return \"red\" ; } } // Child \u7ee7\u627f Person \u53ef\u4ee5\u83b7\u53d6\u7c7b\u4e0a\u9762\u7684\u6ce8\u89e3","title":"\u4e09\u3001\u81ea\u5b9a\u4e49\u6ce8\u89e3"},{"location":"Java/Java\u6ce8\u89e3 Annotation/#_3","text":"1\u3001\u9879\u76ee\u8bf4\u660e \u7528\u6ce8\u89e3\u5b9e\u73b0\u6301\u4e45\u5c42\u6846\u67b6\uff0c\u66ff\u4ee3 Hibernate \u89e3\u51b3\u65b9\u6848 2\u3001\u9700\u6c42\uff1a \u6709\u4e00\u5f20\u7528\u6237\u8868\uff0c\u5b57\u6bb5\u5305\u62ec\u7528\u6237\u7528\u6237\u540d\uff0c\u5e74\u9f84\uff0c\u7535\u8bdd \u65b9\u4fbf\u5bf9\u6bcf\u4e2a\u5bf9\u8c61\u8fdb\u884c\u4fdd\u5b58\uff0c\u5e76\u6253\u5370\u51fa SQL\u3002 \u4f7f\u7528\u65b9\u5f0f\u8981\u8db3\u591f\u7b80\u5355\uff0c\u89c1\u4ee3\u7801\u793a\u4f8b\u3002 3\u3001\u601d\u8def\uff1a \u8003\u8651\u4ee3\u7801\u5982\u4f55\u4e0e\u6570\u636e\u5e93\u8fdb\u884c\u6620\u5c04 \u5b9e\u73b0 save 4\u3001\u4ee3\u7801\u5b9e\u73b0 \u6587\u4ef6\u76ee\u5f55 . \u251c\u2500\u2500 Column . java \u251c\u2500\u2500 Demo . java \u251c\u2500\u2500 Table . java \u2514\u2500\u2500 User . java Table.java package anno ; import java.lang.annotation.ElementType ; import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.annotation.Target ; @Target ( ElementType . TYPE ) @Retention ( RetentionPolicy . RUNTIME ) public @interface Table { String value (); } Column.java package anno ; import java.lang.annotation.ElementType ; import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.annotation.Target ; @Target ( ElementType . FIELD ) @Retention ( RetentionPolicy . RUNTIME ) public @interface Column { String value (); } User.java package anno ; @Table ( \"user\" ) public class User { @Column ( \"name\" ) private String name ; @Column ( \"age\" ) private Integer age ; @Column ( \"phone_number\" ) private String phoneNumber ; public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getAge () { return age ; } public void setAge ( int age ) { this . age = age ; } public String getPhoneNumber () { return phoneNumber ; } public void setPhoneNumber ( String phoneNumber ) { this . phoneNumber = phoneNumber ; } } Demo.java package anno ; import java.lang.reflect.Field ; import java.lang.reflect.InvocationTargetException ; import java.lang.reflect.Method ; import java.util.HashMap ; import java.util.List ; import java.util.Map ; public class Demo { public static void main ( String [] args ) throws ClassNotFoundException , NoSuchMethodException , IllegalAccessException , InvocationTargetException { User user = new User (); user . setAge ( 12 ); System . out . println ( save ( user )); //insert into `user` (`name`, `phone_number`, `age`) values('null', 'null', '12') } private static String save ( User user ) throws NoSuchMethodException , InvocationTargetException , IllegalAccessException { // \u83b7\u53d6class Class clazz = user . getClass (); // \u83b7\u53d6\u8868\u540d if (! clazz . isAnnotationPresent ( Table . class )) { return null ; } StringBuilder builder = new StringBuilder (); builder . append ( \"insert into \" ); Table table = ( Table ) clazz . getAnnotation ( Table . class ); String tableName = table . value (); builder . append ( \"`\" ). append ( tableName ). append ( \"` \" ); // \u83b7\u53d6\u6240\u6709\u5b57\u6bb5\u540d\u548c\u5b57\u6bb5\u503c Map < String , String > map = new HashMap <>(); Field [] fields = clazz . getDeclaredFields (); for ( Field field : fields ) { if (! field . isAnnotationPresent ( Column . class )) { continue ; } // \u901a\u8fc7\u6ce8\u89e3\u83b7\u53d6\u5b57\u6bb5\u540d\u79f0 Column column = field . getAnnotation ( Column . class ); String columnName = column . value (); // \u901a\u8fc7\u53cd\u5c04\u83b7\u53d6\u5b57\u6bb5\u7684\u503c String fieldName = field . getName (); String methodName = \"get\" + fieldName . substring ( 0 , 1 ). toUpperCase () + fieldName . substring ( 1 ); Method method = clazz . getMethod ( methodName ); String columnValue = String . valueOf ( method . invoke ( user )); map . put ( columnName , columnValue ); } // \u62fc\u88c5sql builder . append ( \"(\" ); Object [] columns = map . keySet (). toArray (); for ( int i = 0 ; i < columns . length ; i ++) { builder . append ( \"`\" ). append ( columns [ i ]. toString ()). append ( \"`\" ); if ( i != columns . length - 1 ) { builder . append ( \", \" ); } } builder . append ( \") \" ); builder . append ( \"values\" ); builder . append ( \"(\" ); Object [] values = map . values (). toArray (); for ( int i = 0 ; i < values . length ; i ++) { builder . append ( \"'\" ). append ( values [ i ]. toString ()). append ( \"'\" ); if ( i != values . length - 1 ) { builder . append ( \", \" ); } } builder . append ( \") \" ); return builder . toString (); } }","title":"\u56db\u3001\u6ce8\u89e3\u5b9e\u6218"},{"location":"Java/Java\u6ce8\u89e3 Annotation/#_4","text":"1\u3001\u8ba4\u8bc6\u6ce8\u89e3 2\u3001\u6ce8\u89e3\u7684\u4f5c\u7528\u8303\u56f4@Target \u548c\u751f\u547d\u5468\u671f@Retention \uff081\uff09\u4f5c\u7528\u8303\u56f4\uff1a \u5305\u3001\u7c7b\u3001\u5b57\u6bb5\u3001\u65b9\u6cd5\u3001\u65b9\u6cd5\u53c2\u6570\u3001\u5c40\u90e8\u53d8\u91cf \uff082\uff09\u751f\u547d\u5468\u671f\uff1a\u6e90\u6587\u4ef6 source,\u7f16\u8bd1 class, \u8fd0\u884c runtime 3\u3001\u8bfb\u61c2\u6ce8\u89e3 4\u3001\u4f7f\u7528\u6ce8\u89e3\u89e3\u51b3\u5b9e\u9645\u5f00\u53d1\u95ee\u9898","title":"\u4e94\u3001\u603b\u7ed3"},{"location":"Java/SpringData/","text":"SpringData spring \u7684\u5b50\u9879\u76ee\uff0c\u7528\u4e8e\u7b80\u5316\u6570\u636e\u5e93\u8bbf\u95ee NoSQL MongoDB \u6587\u6863\u6570\u636e\u5e93 Neo4j \u56fe\u5f62\u6570\u636e\u5e93 Redis \u952e\u503c\u5b58\u50a8 HBase \u5217\u65cf\u6570\u636e\u5e93 \u5173\u7cfb\u578b\u6570\u636e\u5e93 JDBC JPA","title":"SpringData"},{"location":"Java/SpringData/#springdata","text":"spring \u7684\u5b50\u9879\u76ee\uff0c\u7528\u4e8e\u7b80\u5316\u6570\u636e\u5e93\u8bbf\u95ee NoSQL MongoDB \u6587\u6863\u6570\u636e\u5e93 Neo4j \u56fe\u5f62\u6570\u636e\u5e93 Redis \u952e\u503c\u5b58\u50a8 HBase \u5217\u65cf\u6570\u636e\u5e93 \u5173\u7cfb\u578b\u6570\u636e\u5e93 JDBC JPA","title":"SpringData"},{"location":"Java/GUI/JavaGUI/","text":"1\u3001\u5b89\u88c5Java8(JDK8) https://www.oracle.com/technetwork/java/javase/downloads/index.html java version \"1.8.0_221\" 2\u3001\u5b89\u88c5eclipse https://www.eclipse.org/ Version: 2019-06 (4.12.0) 3\u3001eclipse\u5b89\u88c5e(fx)clipse\u63d2\u4ef6 https://www.eclipse.org/efxclipse/install.html \u83dc\u5355Help -> Install New Software\u2026 -> Add\u2026 -> \u8f93\u5165 Name: e(fx)clipse Localtion: http://download.eclipse.org/efxclipse/updates-released/2.3.0/site/ -> OK -> \u9009\u4e2d\u4e24\u9879 a\u3001e(fx)clipse \u2013 install b\u3001e(fx)clipse \u2013 single components -> next\u5b8c\u6210 4\u3001\u5b89\u88c5JavaFX Scene Builder\u53ef\u89c6\u5316\u5e03\u5c40\u5de5\u5177 \uff081\uff09\u4e0b\u8f7d\u5b89\u88c5JavaFX Scene Builder https://www.oracle.com/technetwork/java/javase/downloads/javafxscenebuilder-1x-archive-2199384.html \uff082\uff09\u914d\u7f6eEclipse\u4ee5\u4f7f\u7528Scene Builder \u83dc\u5355Window -> References -> JavaFX SceneBuilder executable \u9009\u62e9\u521a\u521a\u5b89\u88c5\u597d\u7684\u7a0b\u5e8f\u8def\u5f84 -> Ok 5\u3001eclipse\u65b0\u5efaJavaFx\u9879\u76ee \uff081\uff09\u521b\u5efa\u9879\u76ee \u83dc\u5355File -> New -> Others\u2026 -> JavaFX -> JavaFX Project application\u7684\u5b50\u5305\u4e2d\uff0c\u751f\u6210\u540d\u4e3aMain.java\u7684\u7a0b\u5e8f \uff082\uff09\u521b\u5efa\u5e03\u5c40\u6587\u4ef6 File -> New -> Other\u2026 -> JavaFX -> New FXML Document \u53f3\u952e\u4f7f\u7528JavaFX Scene Builder\u6253\u5f00fxml\u6587\u4ef6\uff0c\u62d6\u62fd\u63a7\u4ef6\u5e03\u5c40\uff0c\u4fdd\u5b58 6\u3001\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f \u53f3\u952e\u5355\u51fbMain.java\u6587\u4ef6\u7a7a\u767d\u5904\uff0c\u9009\u62e9Run As -> Java Application \u53c2\u8003 JavaFX\u5f00\u53d1\u73af\u5883\u5b89\u88c5\u914d\u7f6e Java-GUI\u5feb\u901f\u5165\u95e8-WindowBuilder","title":"JavaGUI"},{"location":"Java/GUI/javaFX/","text":"1\u3001\u57fa\u672c\u6982\u5ff5 \u7a97\u53e3 Stage - \u573a\u666f Scene - \u5e03\u5c40 stackPane - \u63a7\u4ef6 Button 2\u3001\u6700\u5c0f\u6846\u67b6\u4ee3\u7801 \u521b\u5efa\u547d\u4ee4\u884c\u5e94\u7528 package com.company ; import javafx.application.Application ; import javafx.stage.Stage ; public class HelloWorld extends Application { @Override public void start ( Stage primaryStage ) throws Exception { primaryStage . show (); } public static void main ( String [] args ) { launch ( args ); } } 3\u3001\u63a7\u4ef6\u5e03\u5c40 package com.company ; import javafx.application.Application ; import javafx.scene.Scene ; import javafx.scene.control.Button ; import javafx.scene.layout.StackPane ; import javafx.stage.Stage ; public class Main extends Application { public static void main ( String [] args ) { launch ( args ); } @Override public void start ( Stage primaryStage ) throws Exception { // \u5b9e\u4f8b\u5316\u6309\u94ae Button button = new Button ( \"\u8fd9\u662f\u6309\u94ae\u4e0a\u7684\u6587\u5b57\" ); // \u521b\u5efa\u5e03\u5c40\u63a7\u4ef6 StackPane stackPane = new StackPane (); // \u5c06button\u6dfb\u52a0\u5230\u5e03\u5c40 stackPane . getChildren (). add ( button ); // \u521b\u5efa\u573a\u666f \u5bbd=400 \u9ad8=400 Scene scene = new Scene ( stackPane , 400 , 400 ); // \u5c06\u573a\u666f\u6dfb\u52a0\u5230\u7a97\u53e3 primaryStage . setScene ( scene ); // \u663e\u793a\u7a97\u53e3 primaryStage . show (); } } 4\u3001\u4e8b\u4ef6\u6dfb\u52a0 Main.java package com.company ; import javafx.application.Application ; import javafx.event.EventHandler ; import javafx.scene.Scene ; import javafx.scene.control.Button ; import javafx.scene.input.MouseEvent ; import javafx.scene.layout.StackPane ; import javafx.stage.Stage ; public class Main extends Application implements EventHandler < MouseEvent > { private Button button ; public static void main ( String [] args ) { // write your code here // System.out.println(\"\u4f60\u597d\"); launch ( args ); } @Override public void start ( Stage primaryStage ) throws Exception { // \u5b9e\u4f8b\u5316\u6309\u94ae button = new Button ( \"\u8fd9\u662f\u6309\u94ae\" ); // 1\u3001\u6dfb\u52a0\u6309\u94ae\u70b9\u51fb\u4e8b\u4ef6\uff0c this.handle \u5904\u7406\u4e8b\u4ef6 // button.setOnMouseClicked(this); // 2\u3001\u4f7f\u7528\u5355\u72ec\u5b9e\u73b0\u7684\u7c7b \u4e8b\u4ef6\u76d1\u542c // button.setOnMouseClicked(new MyMouseEvent()); // 3\u3001\u4f7f\u7528\u533f\u540d\u7c7b\u6dfb\u52a0\u4e8b\u4ef6\u76d1\u542c button . setOnMouseClicked ( new EventHandler < MouseEvent >() { @Override public void handle ( MouseEvent event ) { System . out . println ( \"\u9f20\u6807\u70b9\u51fb\u6309\u94ae\u4e86\" ); } }); // 4\u3001jdk 8 \u4f7f\u7528\u7b80\u5199\u6267\u884c\u4e00\u6761\u8f93\u51fa button . setOnMouseClicked ( e -> System . out . println ( \"\u7b80\u5199\u7684\u76d1\u542c\u4e8b\u4ef6\" )); // 5\u3001\u540c\u65f6\u8f93\u51fa\u591a\u6761 button . setOnMouseClicked ( e -> { System . out . println ( \"\u7b80\u5199\u7684\u76d1\u542c\u4e8b\u4ef61\" ); System . out . println ( \"\u7b80\u5199\u7684\u76d1\u542c\u4e8b\u4ef62\" ); }); // \u521b\u5efa\u5e03\u5c40\u63a7\u4ef6 StackPane stackPane = new StackPane (); // \u5c06button\u6dfb\u52a0\u5230\u5e03\u5c40 stackPane . getChildren (). add ( button ); // \u521b\u5efa\u573a\u666f Scene scene = new Scene ( stackPane , 400 , 400 ); // \u7ed9\u573a\u666f\u6dfb\u52a0\u4e8b\u4ef6\u5904\u7406\u7684\u5bf9\u8c61 // scene.setOnMousePressed(this); scene . setOnMousePressed ( new MySceneMouseEvent ()); // \u5c06\u573a\u666f\u6dfb\u52a0\u5230\u7a97\u53e3 primaryStage . setScene ( scene ); // \u663e\u793a\u7a97\u53e3 primaryStage . show (); } @Override public void handle ( MouseEvent event ) { // event.getSource() \u83b7\u53d6\u4e8b\u4ef6\u5bf9\u8c61 if ( event . getSource () == button ) { System . out . println ( \"\u70b9\u51fb\u4e86\u6309\u94ae\" ); } else { System . out . println ( \"\u70b9\u51fb\u4e86\u573a\u666f\" ); } } } MyMouseEvent.java \u5904\u7406\u9f20\u6807\u70b9\u51fb\u4e8b\u4ef6\u7684\u7c7b package com.company ; import javafx.event.EventHandler ; import javafx.scene.input.MouseEvent ; public class MyMouseEvent implements EventHandler < MouseEvent > { @Override public void handle ( MouseEvent event ) { System . out . println ( \"MyMouseEvent click\" ); } } MySceneMouseEvent.java \u5904\u7406\u573a\u666f\u70b9\u51fb\u4e8b\u4ef6\u7684\u7c7b package com.company ; import javafx.event.EventHandler ; import javafx.scene.input.MouseEvent ; public class MySceneMouseEvent implements EventHandler < MouseEvent > { @Override public void handle ( MouseEvent event ) { System . out . println ( \"\u573a\u666f\u9f20\u6807\u70b9\u51fb\" ); } } 5\u3001\u573a\u666f\u5207\u6362 package com.company ; import javafx.application.Application ; import javafx.scene.Scene ; import javafx.scene.control.Button ; import javafx.scene.layout.StackPane ; import javafx.scene.layout.VBox ; import javafx.stage.Stage ; public class SceneChange extends Application { Scene scene1 , scene2 ; public static void main ( String [] args ) { launch ( args ); } @Override public void start ( Stage primaryStage ) throws Exception { // \u573a\u666f1 Button button1 = new Button ( \"\u573a\u666f1 \u7684button\" ); // \u4e8b\u4ef6\u76d1\u542c \u70b9\u51fb\u540e\u5207\u6362\u5230\u573a\u666f2 button1 . setOnMouseClicked ( e -> { primaryStage . setScene ( scene2 ); }); VBox vBox = new VBox (); vBox . getChildren (). add ( button1 ); scene1 = new Scene ( vBox , 400 , 400 ); // \u573a\u666f2 Button button2 = new Button ( \"\u573a\u666f2 \u7684button\" ); // \u4e8b\u4ef6\u76d1\u542c \u70b9\u51fb\u540e\u5207\u6362\u5230\u573a\u666f1 button2 . setOnMouseClicked ( e -> { primaryStage . setScene ( scene1 ); }); StackPane stackPane = new StackPane (); stackPane . getChildren (). add ( button2 ); scene2 = new Scene ( stackPane , 400 , 400 ); primaryStage . setScene ( scene1 ); primaryStage . show (); } } 6\u3001\u7a97\u4f53\u5207\u6362 Main.java package com.company ; import javafx.application.Application ; import javafx.scene.Scene ; import javafx.scene.control.Button ; import javafx.scene.layout.VBox ; import javafx.stage.Stage ; public class Main extends Application { private Stage stage ; @Override public void start ( Stage primaryStage ) throws Exception { stage = primaryStage ; // \u7a97\u53e3\u70b9\u51fb\u53c9\u53f7\u5173\u95ed\u8be2\u95ee stage . setOnCloseRequest ( event -> { event . consume (); // \u6d88\u9664\u9ed8\u8ba4\u4e8b\u4ef6 handleClose (); }); // \u5e03\u5c40 Button button = new Button ( \"\u5173\u95ed\u7a97\u53e3\" ); // \u9f20\u6807\u70b9\u51fb\u5173\u95ed\u7a97\u53e3 button . setOnMouseClicked ( event -> handleClose ()); VBox vBox = new VBox (); vBox . getChildren (). add ( button ); Scene scene = new Scene ( vBox , 400 , 400 ); stage . setScene ( scene ); stage . show (); } public void handleClose () { // \u63a5\u6536\u7a97\u4f53\u8fd4\u56de\u503c boolean ret = WindowAlert . display ( \"\u5173\u95ed\u7a97\u53e3\" , \"\u662f\u5426\u5173\u95ed\u7a97\u53e3\uff1f\" ); System . out . println ( ret ); if ( ret ) { stage . close (); } } public static void main ( String [] args ) { launch ( args ); } } WindowAlert.java package com.company ; import javafx.geometry.Pos ; import javafx.scene.Scene ; import javafx.scene.control.Button ; import javafx.scene.control.Label ; import javafx.scene.layout.VBox ; import javafx.stage.Modality ; import javafx.stage.Stage ; public class WindowAlert { public static boolean answer ; /** * @param title \u6807\u9898 * @param msg \u6d88\u606f */ public static boolean display ( String title , String msg ) { // \u521b\u5efa\u821e\u53f0 Stage stage = new Stage (); // \u8bbe\u7f6e\u663e\u793a\u6a21\u5f0f stage . initModality ( Modality . APPLICATION_MODAL ); stage . setTitle ( title ); // \u521b\u5efa\u63a7\u4ef6 Button buttonYes = new Button ( \"\u662f\" ); buttonYes . setOnMouseClicked ( event -> { answer = true ; stage . close (); }); Button buttonNo = new Button ( \"\u5426\" ); buttonNo . setOnMouseClicked ( event -> { answer = false ; stage . close (); }); Label label = new Label ( msg ); // \u521b\u5efa\u5e03\u5c40 VBox vBox = new VBox (); vBox . getChildren (). addAll ( label , buttonYes , buttonNo ); vBox . setAlignment ( Pos . CENTER ); // \u5e03\u5c40\u5c45\u4e2d\u663e\u793a // \u521b\u5efa\u573a\u666f Scene scene = new Scene ( vBox , 200 , 200 ); // \u663e\u793a\u821e\u53f0 stage . setScene ( scene ); // stage.show(); stage . showAndWait (); // \u7b49\u5f85\u7a97\u4f53\u5173\u95ed\u624d\u7ee7\u7eed // \u7a97\u4f53\u8fd4\u56de\u503c return answer ; } }","title":"javaFX"},{"location":"Java/GUI/javaFX/#1","text":"\u7a97\u53e3 Stage - \u573a\u666f Scene - \u5e03\u5c40 stackPane - \u63a7\u4ef6 Button","title":"1\u3001\u57fa\u672c\u6982\u5ff5"},{"location":"Java/GUI/javaFX/#2","text":"\u521b\u5efa\u547d\u4ee4\u884c\u5e94\u7528 package com.company ; import javafx.application.Application ; import javafx.stage.Stage ; public class HelloWorld extends Application { @Override public void start ( Stage primaryStage ) throws Exception { primaryStage . show (); } public static void main ( String [] args ) { launch ( args ); } }","title":"2\u3001\u6700\u5c0f\u6846\u67b6\u4ee3\u7801"},{"location":"Java/GUI/javaFX/#3","text":"package com.company ; import javafx.application.Application ; import javafx.scene.Scene ; import javafx.scene.control.Button ; import javafx.scene.layout.StackPane ; import javafx.stage.Stage ; public class Main extends Application { public static void main ( String [] args ) { launch ( args ); } @Override public void start ( Stage primaryStage ) throws Exception { // \u5b9e\u4f8b\u5316\u6309\u94ae Button button = new Button ( \"\u8fd9\u662f\u6309\u94ae\u4e0a\u7684\u6587\u5b57\" ); // \u521b\u5efa\u5e03\u5c40\u63a7\u4ef6 StackPane stackPane = new StackPane (); // \u5c06button\u6dfb\u52a0\u5230\u5e03\u5c40 stackPane . getChildren (). add ( button ); // \u521b\u5efa\u573a\u666f \u5bbd=400 \u9ad8=400 Scene scene = new Scene ( stackPane , 400 , 400 ); // \u5c06\u573a\u666f\u6dfb\u52a0\u5230\u7a97\u53e3 primaryStage . setScene ( scene ); // \u663e\u793a\u7a97\u53e3 primaryStage . show (); } }","title":"3\u3001\u63a7\u4ef6\u5e03\u5c40"},{"location":"Java/GUI/javaFX/#4","text":"Main.java package com.company ; import javafx.application.Application ; import javafx.event.EventHandler ; import javafx.scene.Scene ; import javafx.scene.control.Button ; import javafx.scene.input.MouseEvent ; import javafx.scene.layout.StackPane ; import javafx.stage.Stage ; public class Main extends Application implements EventHandler < MouseEvent > { private Button button ; public static void main ( String [] args ) { // write your code here // System.out.println(\"\u4f60\u597d\"); launch ( args ); } @Override public void start ( Stage primaryStage ) throws Exception { // \u5b9e\u4f8b\u5316\u6309\u94ae button = new Button ( \"\u8fd9\u662f\u6309\u94ae\" ); // 1\u3001\u6dfb\u52a0\u6309\u94ae\u70b9\u51fb\u4e8b\u4ef6\uff0c this.handle \u5904\u7406\u4e8b\u4ef6 // button.setOnMouseClicked(this); // 2\u3001\u4f7f\u7528\u5355\u72ec\u5b9e\u73b0\u7684\u7c7b \u4e8b\u4ef6\u76d1\u542c // button.setOnMouseClicked(new MyMouseEvent()); // 3\u3001\u4f7f\u7528\u533f\u540d\u7c7b\u6dfb\u52a0\u4e8b\u4ef6\u76d1\u542c button . setOnMouseClicked ( new EventHandler < MouseEvent >() { @Override public void handle ( MouseEvent event ) { System . out . println ( \"\u9f20\u6807\u70b9\u51fb\u6309\u94ae\u4e86\" ); } }); // 4\u3001jdk 8 \u4f7f\u7528\u7b80\u5199\u6267\u884c\u4e00\u6761\u8f93\u51fa button . setOnMouseClicked ( e -> System . out . println ( \"\u7b80\u5199\u7684\u76d1\u542c\u4e8b\u4ef6\" )); // 5\u3001\u540c\u65f6\u8f93\u51fa\u591a\u6761 button . setOnMouseClicked ( e -> { System . out . println ( \"\u7b80\u5199\u7684\u76d1\u542c\u4e8b\u4ef61\" ); System . out . println ( \"\u7b80\u5199\u7684\u76d1\u542c\u4e8b\u4ef62\" ); }); // \u521b\u5efa\u5e03\u5c40\u63a7\u4ef6 StackPane stackPane = new StackPane (); // \u5c06button\u6dfb\u52a0\u5230\u5e03\u5c40 stackPane . getChildren (). add ( button ); // \u521b\u5efa\u573a\u666f Scene scene = new Scene ( stackPane , 400 , 400 ); // \u7ed9\u573a\u666f\u6dfb\u52a0\u4e8b\u4ef6\u5904\u7406\u7684\u5bf9\u8c61 // scene.setOnMousePressed(this); scene . setOnMousePressed ( new MySceneMouseEvent ()); // \u5c06\u573a\u666f\u6dfb\u52a0\u5230\u7a97\u53e3 primaryStage . setScene ( scene ); // \u663e\u793a\u7a97\u53e3 primaryStage . show (); } @Override public void handle ( MouseEvent event ) { // event.getSource() \u83b7\u53d6\u4e8b\u4ef6\u5bf9\u8c61 if ( event . getSource () == button ) { System . out . println ( \"\u70b9\u51fb\u4e86\u6309\u94ae\" ); } else { System . out . println ( \"\u70b9\u51fb\u4e86\u573a\u666f\" ); } } } MyMouseEvent.java \u5904\u7406\u9f20\u6807\u70b9\u51fb\u4e8b\u4ef6\u7684\u7c7b package com.company ; import javafx.event.EventHandler ; import javafx.scene.input.MouseEvent ; public class MyMouseEvent implements EventHandler < MouseEvent > { @Override public void handle ( MouseEvent event ) { System . out . println ( \"MyMouseEvent click\" ); } } MySceneMouseEvent.java \u5904\u7406\u573a\u666f\u70b9\u51fb\u4e8b\u4ef6\u7684\u7c7b package com.company ; import javafx.event.EventHandler ; import javafx.scene.input.MouseEvent ; public class MySceneMouseEvent implements EventHandler < MouseEvent > { @Override public void handle ( MouseEvent event ) { System . out . println ( \"\u573a\u666f\u9f20\u6807\u70b9\u51fb\" ); } }","title":"4\u3001\u4e8b\u4ef6\u6dfb\u52a0"},{"location":"Java/GUI/javaFX/#5","text":"package com.company ; import javafx.application.Application ; import javafx.scene.Scene ; import javafx.scene.control.Button ; import javafx.scene.layout.StackPane ; import javafx.scene.layout.VBox ; import javafx.stage.Stage ; public class SceneChange extends Application { Scene scene1 , scene2 ; public static void main ( String [] args ) { launch ( args ); } @Override public void start ( Stage primaryStage ) throws Exception { // \u573a\u666f1 Button button1 = new Button ( \"\u573a\u666f1 \u7684button\" ); // \u4e8b\u4ef6\u76d1\u542c \u70b9\u51fb\u540e\u5207\u6362\u5230\u573a\u666f2 button1 . setOnMouseClicked ( e -> { primaryStage . setScene ( scene2 ); }); VBox vBox = new VBox (); vBox . getChildren (). add ( button1 ); scene1 = new Scene ( vBox , 400 , 400 ); // \u573a\u666f2 Button button2 = new Button ( \"\u573a\u666f2 \u7684button\" ); // \u4e8b\u4ef6\u76d1\u542c \u70b9\u51fb\u540e\u5207\u6362\u5230\u573a\u666f1 button2 . setOnMouseClicked ( e -> { primaryStage . setScene ( scene1 ); }); StackPane stackPane = new StackPane (); stackPane . getChildren (). add ( button2 ); scene2 = new Scene ( stackPane , 400 , 400 ); primaryStage . setScene ( scene1 ); primaryStage . show (); } }","title":"5\u3001\u573a\u666f\u5207\u6362"},{"location":"Java/GUI/javaFX/#6","text":"Main.java package com.company ; import javafx.application.Application ; import javafx.scene.Scene ; import javafx.scene.control.Button ; import javafx.scene.layout.VBox ; import javafx.stage.Stage ; public class Main extends Application { private Stage stage ; @Override public void start ( Stage primaryStage ) throws Exception { stage = primaryStage ; // \u7a97\u53e3\u70b9\u51fb\u53c9\u53f7\u5173\u95ed\u8be2\u95ee stage . setOnCloseRequest ( event -> { event . consume (); // \u6d88\u9664\u9ed8\u8ba4\u4e8b\u4ef6 handleClose (); }); // \u5e03\u5c40 Button button = new Button ( \"\u5173\u95ed\u7a97\u53e3\" ); // \u9f20\u6807\u70b9\u51fb\u5173\u95ed\u7a97\u53e3 button . setOnMouseClicked ( event -> handleClose ()); VBox vBox = new VBox (); vBox . getChildren (). add ( button ); Scene scene = new Scene ( vBox , 400 , 400 ); stage . setScene ( scene ); stage . show (); } public void handleClose () { // \u63a5\u6536\u7a97\u4f53\u8fd4\u56de\u503c boolean ret = WindowAlert . display ( \"\u5173\u95ed\u7a97\u53e3\" , \"\u662f\u5426\u5173\u95ed\u7a97\u53e3\uff1f\" ); System . out . println ( ret ); if ( ret ) { stage . close (); } } public static void main ( String [] args ) { launch ( args ); } } WindowAlert.java package com.company ; import javafx.geometry.Pos ; import javafx.scene.Scene ; import javafx.scene.control.Button ; import javafx.scene.control.Label ; import javafx.scene.layout.VBox ; import javafx.stage.Modality ; import javafx.stage.Stage ; public class WindowAlert { public static boolean answer ; /** * @param title \u6807\u9898 * @param msg \u6d88\u606f */ public static boolean display ( String title , String msg ) { // \u521b\u5efa\u821e\u53f0 Stage stage = new Stage (); // \u8bbe\u7f6e\u663e\u793a\u6a21\u5f0f stage . initModality ( Modality . APPLICATION_MODAL ); stage . setTitle ( title ); // \u521b\u5efa\u63a7\u4ef6 Button buttonYes = new Button ( \"\u662f\" ); buttonYes . setOnMouseClicked ( event -> { answer = true ; stage . close (); }); Button buttonNo = new Button ( \"\u5426\" ); buttonNo . setOnMouseClicked ( event -> { answer = false ; stage . close (); }); Label label = new Label ( msg ); // \u521b\u5efa\u5e03\u5c40 VBox vBox = new VBox (); vBox . getChildren (). addAll ( label , buttonYes , buttonNo ); vBox . setAlignment ( Pos . CENTER ); // \u5e03\u5c40\u5c45\u4e2d\u663e\u793a // \u521b\u5efa\u573a\u666f Scene scene = new Scene ( vBox , 200 , 200 ); // \u663e\u793a\u821e\u53f0 stage . setScene ( scene ); // stage.show(); stage . showAndWait (); // \u7b49\u5f85\u7a97\u4f53\u5173\u95ed\u624d\u7ee7\u7eed // \u7a97\u4f53\u8fd4\u56de\u503c return answer ; } }","title":"6\u3001\u7a97\u4f53\u5207\u6362"},{"location":"Java/GUI/\u573a\u666f\u7f16\u8f91\u5668/","text":"\u573a\u666f\u7f16\u8f91\u5668 FXML\u6587\u4ef6 \u5e03\u5c40\u6587\u4ef6\u548c\u903b\u8f91\u6587\u4ef6\u5206\u79bb \u53ef\u4ee5\u4f7f\u7528 Scene Builder\u8fdb\u884c\u7f16\u8f91 IDEA\u4e2d\u4f7f\u7528scene builder \u9879\u76ee\u7ed3\u6784 \u2500\u2500 src \u251c\u2500\u2500 com \u2502 \u2514\u2500\u2500 company \u2502 \u251c\u2500\u2500 Controller . java # \u63a7\u5236\u5668\u6587\u4ef6 \u2502 \u251c\u2500\u2500 Main . java # \u4e3b\u6587\u4ef6 \u2502 \u2514\u2500\u2500 sample . fxml # \u5e03\u5c40\u6587\u4ef6 \u2514\u2500\u2500 style \u2514\u2500\u2500 main . css # \u6837\u5f0f\u6587\u4ef6 1\u3001\u4e3b\u6587\u4ef6\u5165\u53e3\u6587\u4ef6 Main.java \u5f15\u5165\u5e03\u5c40\u6587\u4ef6 sample.fxml package com.company ; import javafx.application.Application ; import javafx.fxml.FXMLLoader ; import javafx.scene.Parent ; import javafx.scene.Scene ; import javafx.stage.Stage ; public class Main extends Application { public static void main ( String [] args ) { launch ( args ); } @Override public void start ( Stage primaryStage ) throws Exception { // \u6b64\u5904\u5f15\u5165\u5e03\u5c40\u6587\u4ef6 Parent root = FXMLLoader . load ( getClass (). getResource ( \"sample.fxml\" )); Scene scene = new Scene ( root ); primaryStage . setScene ( scene ); primaryStage . show (); } } 2\u3001\u5e03\u5c40\u6587\u4ef6 sample.fxml \uff081\uff09\u7ed1\u5b9a\u63a7\u5236\u5668\u7c7b com.company.Controller \uff082\uff09\u7ed1\u5b9a\u63a7\u5236\u5668\u6587\u4ef6\u4e2d\u7684\u65b9\u6cd5 com.company.Controller.clickButton \uff083\uff09\u5f15\u5165\u6837\u5f0f\u6587\u4ef6 style/main.css <?xml version=\"1.0\" encoding=\"UTF-8\"?> <?import java.lang.*?> <?import java.util.*?> <?import javafx.scene.*?> <?import javafx.scene.control.*?> <?import javafx.scene.layout.*?> <AnchorPane prefHeight= \"400.0\" prefWidth= \"600.0\" stylesheets= \"@../../style/main.css\" xmlns= \"http://javafx.com/javafx/8\" xmlns:fx= \"http://javafx.com/fxml/1\" fx:controller= \"com.company.Controller\" > <children> <Button layoutX= \"271.0\" layoutY= \"165.0\" mnemonicParsing= \"false\" onAction= \"#clickButton\" text= \"\u8fd9\u662f\u4e00\u4e2a\u6309\u94ae\" /> <Label fx:id= \"label\" layoutX= \"308.0\" layoutY= \"126.0\" /> </children> </AnchorPane> 3\u3001Controller.java\u63a7\u5236\u5668\u6587\u4ef6 package com.company ; import javafx.scene.control.Label ; public class Controller { public Label label ; public void clickButton (){ label . setText ( \"\u6309\u94ae\u88ab\u70b9\u51fb\u4e86\" ); System . out . println ( \"\u6309\u94ae\u88ab\u70b9\u51fb\u4e86\" ); } } 4\u3001\u6837\u5f0fcss \u6587\u4ef6 src/style/main.css . label { - fx-text-fill : red ; } \u6253\u5305jar IDEA \u4e0b\u64cd\u4f5c 1\u3001\u914d\u7f6e\uff1a \u5de5\u5177\u680f\u70b9\u51fbProject Structure -> Artifacts -> + -> JAR -> From modules with dependencies \u9009\u4e2d\u6709main\u65b9\u6cd5\u7684\u7c7b 2\u3001\u6253\u5305\uff1a Build -> Build artifacts 3\u3001\u8fd0\u884c\u7a0b\u5e8f \u6587\u4ef6\u5939 out/artifacts \u4e2d\u751f\u6210jar\u6587\u4ef6\uff0c\u53cc\u51fb\u5373\u53ef\u6253\u5f00 \u5728\u88c5\u6709jre \u7684 Mac\u548cWindows \u5747\u53ef\u6b63\u5e38\u8fd0\u884c","title":"\u573a\u666f\u7f16\u8f91\u5668"},{"location":"Java/GUI/\u573a\u666f\u7f16\u8f91\u5668/#_1","text":"\u53ef\u4ee5\u4f7f\u7528 Scene Builder\u8fdb\u884c\u7f16\u8f91 IDEA\u4e2d\u4f7f\u7528scene builder \u9879\u76ee\u7ed3\u6784 \u2500\u2500 src \u251c\u2500\u2500 com \u2502 \u2514\u2500\u2500 company \u2502 \u251c\u2500\u2500 Controller . java # \u63a7\u5236\u5668\u6587\u4ef6 \u2502 \u251c\u2500\u2500 Main . java # \u4e3b\u6587\u4ef6 \u2502 \u2514\u2500\u2500 sample . fxml # \u5e03\u5c40\u6587\u4ef6 \u2514\u2500\u2500 style \u2514\u2500\u2500 main . css # \u6837\u5f0f\u6587\u4ef6 1\u3001\u4e3b\u6587\u4ef6\u5165\u53e3\u6587\u4ef6 Main.java \u5f15\u5165\u5e03\u5c40\u6587\u4ef6 sample.fxml package com.company ; import javafx.application.Application ; import javafx.fxml.FXMLLoader ; import javafx.scene.Parent ; import javafx.scene.Scene ; import javafx.stage.Stage ; public class Main extends Application { public static void main ( String [] args ) { launch ( args ); } @Override public void start ( Stage primaryStage ) throws Exception { // \u6b64\u5904\u5f15\u5165\u5e03\u5c40\u6587\u4ef6 Parent root = FXMLLoader . load ( getClass (). getResource ( \"sample.fxml\" )); Scene scene = new Scene ( root ); primaryStage . setScene ( scene ); primaryStage . show (); } } 2\u3001\u5e03\u5c40\u6587\u4ef6 sample.fxml \uff081\uff09\u7ed1\u5b9a\u63a7\u5236\u5668\u7c7b com.company.Controller \uff082\uff09\u7ed1\u5b9a\u63a7\u5236\u5668\u6587\u4ef6\u4e2d\u7684\u65b9\u6cd5 com.company.Controller.clickButton \uff083\uff09\u5f15\u5165\u6837\u5f0f\u6587\u4ef6 style/main.css <?xml version=\"1.0\" encoding=\"UTF-8\"?> <?import java.lang.*?> <?import java.util.*?> <?import javafx.scene.*?> <?import javafx.scene.control.*?> <?import javafx.scene.layout.*?> <AnchorPane prefHeight= \"400.0\" prefWidth= \"600.0\" stylesheets= \"@../../style/main.css\" xmlns= \"http://javafx.com/javafx/8\" xmlns:fx= \"http://javafx.com/fxml/1\" fx:controller= \"com.company.Controller\" > <children> <Button layoutX= \"271.0\" layoutY= \"165.0\" mnemonicParsing= \"false\" onAction= \"#clickButton\" text= \"\u8fd9\u662f\u4e00\u4e2a\u6309\u94ae\" /> <Label fx:id= \"label\" layoutX= \"308.0\" layoutY= \"126.0\" /> </children> </AnchorPane> 3\u3001Controller.java\u63a7\u5236\u5668\u6587\u4ef6 package com.company ; import javafx.scene.control.Label ; public class Controller { public Label label ; public void clickButton (){ label . setText ( \"\u6309\u94ae\u88ab\u70b9\u51fb\u4e86\" ); System . out . println ( \"\u6309\u94ae\u88ab\u70b9\u51fb\u4e86\" ); } } 4\u3001\u6837\u5f0fcss \u6587\u4ef6 src/style/main.css . label { - fx-text-fill : red ; }","title":"\u5e03\u5c40\u6587\u4ef6\u548c\u903b\u8f91\u6587\u4ef6\u5206\u79bb"},{"location":"Java/GUI/\u573a\u666f\u7f16\u8f91\u5668/#jar","text":"IDEA \u4e0b\u64cd\u4f5c 1\u3001\u914d\u7f6e\uff1a \u5de5\u5177\u680f\u70b9\u51fbProject Structure -> Artifacts -> + -> JAR -> From modules with dependencies \u9009\u4e2d\u6709main\u65b9\u6cd5\u7684\u7c7b 2\u3001\u6253\u5305\uff1a Build -> Build artifacts 3\u3001\u8fd0\u884c\u7a0b\u5e8f \u6587\u4ef6\u5939 out/artifacts \u4e2d\u751f\u6210jar\u6587\u4ef6\uff0c\u53cc\u51fb\u5373\u53ef\u6253\u5f00 \u5728\u88c5\u6709jre \u7684 Mac\u548cWindows \u5747\u53ef\u6b63\u5e38\u8fd0\u884c","title":"\u6253\u5305jar"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/","text":"JavaWeb \u5f00\u53d1\u57fa\u7840 7-XML \u5feb\u901f\u5165\u95e8 8-Ajax \u5b66\u4e60 9-Servlet \u5b66\u4e60 10-Filter \u8fc7\u6ee4\u5668 11-\u76d1\u542c\u5668 Listener 12-JSP \u5feb\u901f\u5165\u95e8 13-javaBean 14-EL \u8868\u8fbe\u5f0f\u8bed\u8a00 15-JSTL \u6807\u51c6\u6807\u7b7e\u5e93 16-\u81ea\u5b9a\u4e49\u6807\u7b7e","title":"JavaWeb \u5f00\u53d1\u57fa\u7840"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/#javaweb","text":"7-XML \u5feb\u901f\u5165\u95e8 8-Ajax \u5b66\u4e60 9-Servlet \u5b66\u4e60 10-Filter \u8fc7\u6ee4\u5668 11-\u76d1\u542c\u5668 Listener 12-JSP \u5feb\u901f\u5165\u95e8 13-javaBean 14-EL \u8868\u8fbe\u5f0f\u8bed\u8a00 15-JSTL \u6807\u51c6\u6807\u7b7e\u5e93 16-\u81ea\u5b9a\u4e49\u6807\u7b7e","title":"JavaWeb \u5f00\u53d1\u57fa\u7840"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/10-JavaWeb-Filter\u8fc7\u6ee4\u5668/","text":"\u8bfe\u65f6 1 \u8fc7\u6ee4\u5668\u7684\u5165\u95e8 JavaWeb \u4e09\u5927\u7ec4\u4ef6 1\u3001\u90fd\u9700\u8981\u5728 web.xml \u4e2d\u8fdb\u884c\u914d\u7f6e Servlet Filter Listener 2\u3001\u8fc7\u6ee4\u5668 \u4f1a\u5728\u4e00\u7ec4\u8d44\u6e90\uff08jsp, servlet, css, html \u7b49\u7b49\uff09\u7684\u524d\u9762\u6267\u884c \u53ef\u4ee5\u8ba9\u8bf7\u6c42\u5f97\u5230\u76ee\u6807\u8d44\u6e90\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u8ba9\u8bf7\u6c42\u8fbe\u5230 \u8fc7\u6ee4\u5668\u6709\u62e6\u622a\u8bf7\u6c42\u7684\u80fd\u529b 3\u3001\u7f16\u5199\u8fc7\u6ee4\u5668 \uff081\uff09\u5b9e\u73b0 Filter \u63a5\u53e3 \uff082\uff09\u5728 web.xml \u4e2d\u8fdb\u884c\u914d\u7f6e \uff083\uff09Filter \u662f\u5355\u4f8b\u7684 4\u3001\u914d\u7f6e web.xml <web-app> <filter> <filter-name> FilerName </filter-name> <filter-class> FilerClass </filter-class> </filter> <filter-mapping> <filter-name> FilerName </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> </web-app> \u7ee7\u627f\u793a\u4f8b package com.pengshiyu.filtrer ; import javax.servlet.* ; import java.io.IOException ; public class Afilter implements Filter { /** * \u521b\u5efa\u4e4b\u540e\u9a6c\u4e0a\u6267\u884c\uff0c\u7528\u6765\u505a\u521d\u59cb\u5316 */ @Override public void init ( FilterConfig filterConfig ) throws ServletException { } /** * \u6bcf\u6b21\u8fc7\u6ee4\u90fd\u4f1a\u6267\u884c */ @Override public void doFilter ( ServletRequest servletRequest , ServletResponse servletResponse , FilterChain filterChain ) throws IOException , ServletException { System . out . println ( \"\u8fdb\u5165\u8fc7\u6ee4\u5668\" ); // \u8c03\u7528\u540e\u5e8f\u65b9\u6cd5 filterChain . doFilter ( servletRequest , servletResponse ); System . out . println ( \"\u79bb\u5f00\u8fc7\u6ee4\u5668\" ); } /** * \u9500\u6bc1\u4e4b\u524d\u7684\u8c03\u7528\uff0c\u7528\u6765\u91ca\u653e\u8d44\u6e90 */ @Override public void destroy () { } } FilterConfig -> \u4e0e ServletConfig \u76f8\u4f3c \u83b7\u53d6\u521d\u59cb\u5316\u53c2\u6570 getInitParameter() \u83b7\u53d6\u8fc7\u6ee4\u5668\u540d\u79f0 getFilterName() \u83b7\u53d6 application getServletContext() FilterChain \u653e\u884c,\u6267\u884c\u540e\u5e8f\u65b9\u6cd5 doFilter() \u8bfe\u65f6 2 \u591a\u4e2a\u8fc7\u6ee4\u5668\u7684\u6267\u884c\u987a\u5e8f \u6267\u884c\u4e0b\u4e00\u4e2a\u8fc7\u6ee4\u5668\u6216\u76ee\u6807\u8d44\u6e90 FilterChain.doFilter() Afilter\u8fdb\u5165\u8fc7\u6ee4\u5668 Bfilter\u8fdb\u5165\u8fc7\u6ee4\u5668 getAge Bfilter\u79bb\u5f00\u8fc7\u6ee4\u5668 Afilter\u79bb\u5f00\u8fc7\u6ee4\u5668 \u8bfe\u65f6 3 \u56db\u79cd\u62e6\u622a\u65b9\u5f0f \u8bf7\u6c42 REQUEST \u9ed8\u8ba4 \u8f6c\u53d1 FORWARD \u5305\u542b INCLUDE \u9519\u8bef ERROR <filter-mapping> <filter-name> FilerName </filter-name> <url-pattern> /* </url-pattern> <dispatcher> REQUEST </dispatcher> </filter-mapping> \u9875\u9762\u51fa\u9519 <error-page> <error-code> 500 </error-code> <location> 500.html </location> </error-page> \u8bfe\u65f6 4 \u4f7f\u7528 filter-mapping \u63a7\u5236\u591a\u4e2a Filter \u7684\u6267\u884c\u987a\u5e8f filter-mapping \u7684\u914d\u7f6e\u987a\u5e8f\u51b3\u5b9a\u8fc7\u6ee4\u5668\u6267\u884c\u987a\u5e8f \u8bfe\u65f6 5 Filter \u7684\u5e94\u7528\u573a\u666f\u3001Filter \u7684\u76ee\u6807\u8d44\u6e90\u3001\u5c0f\u7ed3 \u9884\u5904\u7406\uff1a\u6267\u884c\u76ee\u6807\u8d44\u6e90\u4e4b\u524d\u505a\u9884\u5904\u7406\u5de5\u4f5c\uff0c\u4f8b\u5982\u8bbe\u7f6e\u7f16\u7801 \u62e6\u622a\uff1a\u901a\u8fc7\u6761\u4ef6\u5224\u65ad\u662f\u5426\u653e\u884c\uff0c\u4f8b\u5982\u7528\u6237\u767b\u5f55\u6821\u9a8c \u56de\u7a0b\u62e6\u622a\uff1a\u76ee\u6807\u8d44\u6e90\u6267\u884c\u4e4b\u540e\uff0c\u505a\u4e00\u4e9b\u540e\u5e8f\u7684\u7279\u6b8a\u5904\u7406\u5de5\u4f5c\uff0c\u4f8b\u5982\u76ee\u6807\u8d44\u6e90\u8f93\u51fa\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406 \u76f4\u63a5\u6307\u5b9a servlet-name <filter-mapping> <filter-name> FilerName </filter-name> <servlet-name> ServletName </servlet-name> </filter-mapping> \u5c0f\u7ed3 Filter3 \u4e2a\u65b9\u6cd5 FilterChain \u7c7b 4 \u79cd\u62e6\u622a\u65b9\u5f0f \u8bfe\u65f6 6 \u6848\u4f8b 1\uff1a\u5206 IP \u7edf\u8ba1\u8bbf\u95ee\u6b21\u6570 \u6570\u636e\u7ed3\u6784\uff1a ip | count -|- 192.168.0.1 | 32 192.168.0.2 | 22 \u7edf\u8ba1\u5de5\u4f5c\u5728\u6240\u6709\u8d44\u6e90\u4e4b\u524d\u90fd\u6267\u884c\uff0c\u4f7f\u7528 Filter \u8fd9\u4e2a\u8fc7\u6ee4\u5668\u53ea\u505a\u7edf\u8ba1\uff0c\u4e0d\u505a\u62e6\u622a \u6570\u636e Map Map \u4fdd\u5b58\u5230 ServletContext \u4e2d \u4ece request \u4e2d\u83b7\u53d6\u5ba2\u6237\u7aef ip \u4f7f\u7528\u76d1\u542c\u5668\u521b\u5efa map AListener.java package com.pengshiyu.listener ; import javax.servlet.ServletContextEvent ; import javax.servlet.ServletContextListener ; import java.util.LinkedHashMap ; import java.util.Map ; public class AListener implements ServletContextListener { // \u670d\u52a1\u5668\u542f\u52a8\u65f6\u521b\u5efamap public void contextInitialized ( ServletContextEvent sce ) { Map < String , Integer > map = new LinkedHashMap < String , Integer >(); sce . getServletContext (). setAttribute ( \"map\" , map ); } public void contextDestroyed ( ServletContextEvent sce ) { } } \u4f7f\u7528\u8fc7\u6ee4\u5668\u7edf\u8ba1\u6570\u636e AFilter.java package com.pengshiyu.filter ; import javax.servlet.* ; import java.io.IOException ; import java.util.Map ; public class AFilter implements Filter { private FilterConfig config ; /** * \u521b\u5efa\u4e4b\u540e\u9a6c\u4e0a\u6267\u884c\uff0c\u7528\u6765\u505a\u521d\u59cb\u5316 */ @Override public void init ( FilterConfig filterConfig ) throws ServletException { this . config = filterConfig ; } /** * \u6bcf\u6b21\u8fc7\u6ee4\u90fd\u4f1a\u6267\u884c */ @Override public void doFilter ( ServletRequest request , ServletResponse response , FilterChain filterChain ) throws IOException , ServletException { ServletContext app = this . config . getServletContext (); Map < String , Integer > map = ( Map < String , Integer >) app . getAttribute ( \"map\" ); String ip = request . getRemoteAddr (); System . out . println ( \"ip: \" + ip ); if ( map . containsKey ( ip )){ Integer count = map . get ( ip ); map . put ( ip , count + 1 ); } else { map . put ( ip , 1 ); } // \u653e\u884c filterChain . doFilter ( request , response ); } /** * \u9500\u6bc1\u4e4b\u524d\u7684\u8c03\u7528\uff0c\u7528\u6765\u91ca\u653e\u8d44\u6e90 */ @Override public void destroy () { } } \u663e\u793a\u6570\u636e BServlet.java package com.pengshiyu.servlet ; import javax.servlet.ServletContext ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.util.Map ; public class BServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws IOException { ServletContext app = getServletContext (); Map < String , Integer > map = ( Map < String , Integer >) app . getAttribute ( \"map\" ); response . setContentType ( \"text/html; charset=UTF-8\" ); response . getWriter (). println ( map . toString ()); } } \u914d\u7f6e\u76d1\u542c\u5668\u548c\u8fc7\u6ee4\u5668\u751f\u6548 web.xml <?xml version=\"1.0\" encoding=\"utf-8\"?> <web-app> <servlet> <servlet-name> BServlet </servlet-name> <servlet-class> com.pengshiyu.servlet.BServlet </servlet-class> </servlet> <servlet-mapping> <servlet-name> BServlet </servlet-name> <url-pattern> /b </url-pattern> </servlet-mapping> <filter> <filter-name> AFilter </filter-name> <filter-class> com.pengshiyu.filter.AFilter </filter-class> </filter> <filter-mapping> <filter-name> AFilter </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> <listener> <listener-class> com.pengshiyu.listener.AListener </listener-class> </listener> </web-app> \u8bfe\u65f6 7 \u6848\u4f8b 2\uff1a\u7c97\u7c92\u5ea6\u6743\u9650\u7ba1\u7406 \u57fa\u4e8e\u89d2\u8272\u7684\u6743\u9650\u63a7\u5236 RBAC tb_user tb_role tb_userrole tb_menu tb_rolemenu web.xml <?xml version=\"1.0\" encoding=\"utf-8\"?> <web-app> <servlet> <servlet-name> AServlet </servlet-name> <servlet-class> com.pengshiyu.servlet.AServlet </servlet-class> </servlet> <servlet-mapping> <servlet-name> AServlet </servlet-name> <url-pattern> /hello </url-pattern> </servlet-mapping> <filter> <filter-name> AFilter </filter-name> <filter-class> com.pengshiyu.filter.AFilter </filter-class> </filter> <filter-mapping> <!-- \u4e0d\u80fd\u5c06\u8fc7\u6ee4\u5668\u8bbe\u7f6e\u5728login.html\u4e0a\uff0c\u4e0d\u7136\u6ca1\u6cd5\u767b\u5f55\u4e86--> <filter-name> AFilter </filter-name> <url-pattern> /hello.html </url-pattern> </filter-mapping> </web-app> AServlet.java package com.pengshiyu.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class AServlet extends HttpServlet { @Override protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { String username = request . getParameter ( \"username\" ); System . out . println ( \"post: \" + username ); // \u8bbe\u7f6esession request . getSession (). setAttribute ( \"username\" , username ); // \u8df3\u8f6c\u9875\u9762 request . getRequestDispatcher ( \"hello.html\" ). forward ( request , response ); } } \u8fc7\u6ee4\u5668\u8fdb\u884c\u7b80\u5355\u7684\u6743\u9650\u6821\u9a8c AFilter.java package com.pengshiyu.filter ; import javax.servlet.* ; import javax.servlet.http.HttpServletRequest ; import java.io.IOException ; public class AFilter implements Filter { private FilterConfig config ; @Override public void init ( FilterConfig filterConfig ) throws ServletException { this . config = filterConfig ; } @Override public void doFilter ( ServletRequest req , ServletResponse response , FilterChain filterChain ) throws IOException , ServletException { HttpServletRequest request = ( HttpServletRequest ) req ; String username = ( String ) request . getSession (). getAttribute ( \"username\" ); System . out . println ( \"filter: \" + username ); if ( username != null ){ // \u653e\u884c filterChain . doFilter ( request , response ); } else { // \u8df3\u8f6c\u5230\u767b\u5f55\u9875 request . getRequestDispatcher ( \"login.html\" ). forward ( request , response ); } } @Override public void destroy () { } } \u8bfe\u65f6 8 \u6848\u4f8b 3\uff1a\u5168\u7ad9\u7f16\u7801\u95ee\u9898 // post\u7f16\u7801 request . setCharacterEncoding ( \"utf-8\" ); // get\u7f16\u7801 String username = request . getParameter ( \"username\" ); username = new String ( username . getBytes ( StandardCharsets . ISO_8859_1 ), StandardCharsets . UTF_8 ); // \u54cd\u5e94\u7f16\u7801 response . setContentType ( \"text/html; charset=UTF-8\" ); HttpServletRequest \u88c5\u9970\u7c7b EncodingRequest.java package com.pengshiyu.filter ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletRequestWrapper ; import java.nio.charset.StandardCharsets ; // \u88c5\u9970\u5668 public class EncodingRequest extends HttpServletRequestWrapper { public EncodingRequest ( HttpServletRequest request ) { super ( request ); } @Override public String getParameter ( String name ) { // \u5904\u7406\u7f16\u7801\u95ee\u9898 String value = super . getParameter ( name ); value = new String ( value . getBytes ( StandardCharsets . ISO_8859_1 ), StandardCharsets . UTF_8 ); return value ; } } \u8fc7\u6ee4\u5668 AFilter.java package com.pengshiyu.filter ; import javax.servlet.* ; import javax.servlet.http.HttpServletRequest ; import java.io.IOException ; public class AFilter implements Filter { @Override public void init ( FilterConfig filterConfig ) throws ServletException { } @Override public void doFilter ( ServletRequest request , ServletResponse response , FilterChain filterChain ) throws IOException , ServletException { HttpServletRequest httpServletRequest = ( HttpServletRequest ) request ; String method = httpServletRequest . getMethod (); // \u8bbe\u7f6e\u54cd\u5e94\u7f16\u7801 response . setContentType ( \"text/html; charset=UTF-8\" ); if ( \"GET\" . equals ( method )) { // \u653e\u884c EncodingRequest encodingRequest = new EncodingRequest ( httpServletRequest ); filterChain . doFilter ( encodingRequest , response ); } else if ( \"POST\" . equals ( method )) { request . setCharacterEncoding ( \"utf-8\" ); filterChain . doFilter ( request , response ); } } @Override public void destroy () { } } \u54cd\u5e94\u5904\u7406 AServlet.java package com.pengshiyu.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class AServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { System . out . println ( request . getParameter ( \"name\" )); response . getWriter (). print ( \"\u4f60\u597d\" ); } } web.xml <?xml version=\"1.0\" encoding=\"utf-8\"?> <web-app> <!-- \u6ce8\u518c Servlet\uff0c\u5e2e\u52a9web\u670d\u52a1\u5668\u53cd\u5c04\u8be5\u7c7b --> <servlet> <servlet-name> AServlet </servlet-name> <servlet-class> com.pengshiyu.servlet.AServlet </servlet-class> </servlet> <!-- \u6620\u5c04 Servlet \u8d44\u6e90\uff0c\u7528url-pattern\u5143\u7d20\u6807\u793a URL --> <servlet-mapping> <servlet-name> AServlet </servlet-name> <url-pattern> /hello </url-pattern> </servlet-mapping> <filter> <filter-name> AFilter </filter-name> <filter-class> com.pengshiyu.filter.AFilter </filter-class> </filter> <filter-mapping> <!-- \u4e0d\u80fd\u5c06\u8fc7\u6ee4\u5668\u8bbe\u7f6e\u5728login.html\u4e0a\uff0c\u4e0d\u7136\u6ca1\u6cd5\u767b\u5f55\u4e86--> <filter-name> AFilter </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> </web-app> \u8bfe\u65f6 9 \u6848\u4f8b 4\uff1a\u9875\u9762\u9759\u6001\u5316\u4e4b\u51c6\u5907\u5de5\u4f5c\uff08\u56fe\u4e66\u7ba1\u7406\u5c0f\u9879\u76ee\uff09 \u529f\u80fd\uff1a \u67e5\u8be2\u6240\u6709 \u6309\u5206\u7c7b\u67e5\u770b BookServlet findAll () \u67e5\u8be2\u5168\u90e8 findByCategory () \u6309\u5206\u7c7b\u67e5\u8be2 BookService : \u7701\u7565 BookDao : List < Book > findAll () List < Book > findByCategory () Book \uff1a bid bname price category \u9759\u6001\u5316\uff1a \u7b2c\u4e00\u6b21\u8bbf\u95ee\u4ece\u6570\u636e\u5e93\u53d6\u6570\u636e\uff0c\u4fdd\u5b58\u5230 html \u4e2d \u7b2c\u4e8c\u6b21\u4e4b\u540e\u8bbf\u95ee\u5c31\u76f4\u63a5\u4ece html \u4e2d\u8bfb\u53d6\uff0c\u4e0d\u518d\u4ece\u6570\u636e\u5e93\u4e2d\u53d6\u6570\u636e \u6570\u636e\u51c6\u5907\uff1a create table tb_book ( bid int primary key auto_increment , bname varchar ( 50 ), price decimal ( 10 , 2 ), category int ); insert into tb_book ( bname , price , category ) values ( \"Java\" , 12 , 1 ); insert into tb_book ( bname , price , category ) values ( \"Python\" , 12 , 1 ); insert into tb_book ( bname , price , category ) values ( \"JavaScript\" , 12 , 1 ); insert into tb_book ( bname , price , category ) values ( \"Go\" , 12 , 1 ); insert into tb_book ( bname , price , category ) values ( \"\u4e09\u56fd\u6f14\u4e49\" , 12 , 2 ); insert into tb_book ( bname , price , category ) values ( \"\u897f\u6e38\u8bb0\" , 12 , 2 ); insert into tb_book ( bname , price , category ) values ( \"\u6c34\u6d52\u4f20\" , 12 , 2 ); insert into tb_book ( bname , price , category ) values ( \"\u7ea2\u697c\u68a6\" , 12 , 2 ); \u521b\u5efa\u5bf9\u5e94\u7684 Book \u7c7b package com.pengshiyu.bean ; public class Book { private int bid ; private String bname ; private double price ; private int category ; public Book () { } public int getBid () { return bid ; } public void setBid ( int bid ) { this . bid = bid ; } public String getBname () { return bname ; } public void setBname ( String bname ) { this . bname = bname ; } public double getPrice () { return price ; } public void setPrice ( double price ) { this . price = price ; } public int getCategory () { return category ; } public void setCategory ( int category ) { this . category = category ; } @Override public String toString () { return \"Book{\" + \"bid=\" + bid + \", bname='\" + bname + '\\'' + \", price=\" + price + \", category=\" + category + '}' ; } } BookDao.java package com.pengshiyu.dao ; import com.pengshiyu.bean.Book ; import org.apache.commons.dbutils.QueryRunner ; import org.apache.commons.dbutils.handlers.BeanListHandler ; import util.TxQueryRunner ; import java.sql.SQLException ; import java.util.List ; public class BookDao { private QueryRunner qr = new TxQueryRunner (); public List < Book > findAll () { String sql = \"select * from tb_book\" ; try { List < Book > list = qr . query ( sql , new BeanListHandler < Book >( Book . class )); System . out . println ( list ); return list ; } catch ( SQLException e ) { throw new RuntimeException ( e ); } } public List < Book > findByCategory ( int category ) { String sql = \"select * from tb_book where category = ?\" ; try { return qr . query ( sql , new BeanListHandler < Book >( Book . class ), category ); } catch ( SQLException e ) { throw new RuntimeException ( e ); } } } BookServlet package com.pengshiyu.servlet ; import com.pengshiyu.dao.BookDao ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class BookServlet extends BaseServlet { private BookDao bookDao = new BookDao (); public void findAll ( HttpServletRequest request , HttpServletResponse response ) throws IOException , ServletException { request . setAttribute ( \"bookList\" , bookDao . findAll ()); request . getRequestDispatcher ( \"book.jsp\" ). forward ( request , response ); } public void findByCategory ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { int category = Integer . parseInt ( request . getParameter ( \"category\" )); request . setAttribute ( \"bookList\" , bookDao . findByCategory ( category )); request . getRequestDispatcher ( \"book.jsp\" ). forward ( request , response ); } } \u7528\u5230\u7684\u5de5\u5177\u7c7b TxQueryRunner.java package util ; import java.sql.Connection ; import java.sql.SQLException ; import org.apache.commons.dbutils.QueryRunner ; import org.apache.commons.dbutils.ResultSetHandler ; public class TxQueryRunner extends QueryRunner { @Override public int [] batch ( String sql , Object [][] params ) throws SQLException { Connection con = JdbcUtil . getConnection (); int [] result = super . batch ( con , sql , params ); JdbcUtil . releaseConnection ( con ); return result ; } @Override public < T > T query ( String sql , ResultSetHandler < T > rsh , Object ... params ) throws SQLException { Connection con = JdbcUtil . getConnection (); T result = super . query ( con , sql , rsh , params ); JdbcUtil . releaseConnection ( con ); return result ; } @Override public < T > T query ( String sql , ResultSetHandler < T > rsh ) throws SQLException { Connection con = JdbcUtil . getConnection (); T result = super . query ( con , sql , rsh ); JdbcUtil . releaseConnection ( con ); return result ; } @Override public int update ( String sql ) throws SQLException { Connection con = JdbcUtil . getConnection (); int result = super . update ( con , sql ); JdbcUtil . releaseConnection ( con ); return result ; } @Override public int update ( String sql , Object param ) throws SQLException { Connection con = JdbcUtil . getConnection (); int result = super . update ( con , sql , param ); JdbcUtil . releaseConnection ( con ); return result ; } @Override public int update ( String sql , Object ... params ) throws SQLException { Connection con = JdbcUtil . getConnection (); int result = super . update ( con , sql , params ); JdbcUtil . releaseConnection ( con ); return result ; } } JdbcUtil.java package util ; import com.mchange.v2.c3p0.ComboPooledDataSource ; import javax.sql.DataSource ; import java.sql.Connection ; import java.sql.SQLException ; public class JdbcUtil { // \u9700\u8981\u914d\u7f6ec3p0-config.xml private static ComboPooledDataSource dataSource = new ComboPooledDataSource (); // \u8fd4\u56de\u8fde\u63a5\u5bf9\u8c61 public static Connection getConnection () { try { return dataSource . getConnection (); } catch ( SQLException e ) { throw new RuntimeException ( e ); } } // \u8fd4\u56de\u8fde\u63a5\u6c60\u5bf9\u8c61 public static DataSource getDataSource () { return dataSource ; } // \u91ca\u653e\u8fde\u63a5 public static void releaseConnection ( Connection connection ) { try { connection . close (); } catch ( SQLException e ) { throw new RuntimeException ( e ); } } } book.jsp < %@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%> < %@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\"%> < h2 > \u56fe\u4e66\u5217\u8868 </ h2 > \u5206\u7c7b\uff1a < a href = \"book?method=findAll\" > \u5168\u90e8 </ a > < a href = \"book?method=findByCategory&category=1\" > \u7b2c\u4e00\u7c7b </ a > < a href = \"book?method=findByCategory&category=2\" > \u7b2c\u4e8c\u7c7b </ a > < table border = \"1\" > < tr > < th > ID </ th > < th > \u4e66\u540d </ th > < th > \u4ef7\u683c </ th > < th > \u5206\u7c7b </ th > </ tr > < c:forEach items = \"${bookList}\" var = \"book\" > < tr > < td > ${book.bid} </ td > < td > ${book.bname} </ td > < td > ${book.price} </ td > < td > ${book.category} </ td > </ tr > </ c:forEach > </ table > \u914d\u7f6e\u6587\u4ef6 pom.xml <dependency> <groupId> jstl </groupId> <artifactId> jstl </artifactId> <version> 1.2 </version> </dependency> <dependency> <groupId> taglibs </groupId> <artifactId> standard </artifactId> <version> 1.1.2 </version> </dependency> web.xml <servlet-mapping> <servlet-name> BookServlet </servlet-name> <url-pattern> /book </url-pattern> </servlet-mapping> <servlet> <servlet-name> BookServlet </servlet-name> <servlet-class> com.pengshiyu.servlet.BookServlet </servlet-class> </servlet> c3p0-config.xml <?xml version=\"1.0\" encoding=\"utf-8\"?> <c3p0-config> <!-- \u8fd9\u662f\u9ed8\u8ba4\u914d\u7f6e\u4fe1\u606f --> <default-config> <!-- \u8fde\u63a5\u56db\u5927\u53c2\u6570\u914d\u7f6e --> <property name= \"driverClass\" > com.mysql.cj.jdbc.Driver </property> <property name= \"jdbcUrl\" > jdbc:mysql://localhost:3306/data </property> <property name= \"user\" > root </property> <property name= \"password\" > 123456 </property> <!-- \u6c60\u53c2\u6570\u914d\u7f6e --> <property name= \"acquireIncrement\" > 2 </property> <property name= \"initialPoolSize\" > 2 </property> <property name= \"minPoolSize\" > 2 </property> <property name= \"maxPoolSize\" > 10 </property> </default-config> </c3p0-config> \u8bbf\u95ee\u8def\u5f84 http://localhost:8080/demo/book?method=findAll http://localhost:8080/demo/book?method=findByCategory&category=1 \u8bfe\u65f6 10 \u6848\u4f8b 4\uff1a\u9875\u9762\u9759\u6001\u5316\u4e4b\u5982\u679c\u6587\u4ef6\u5b58\u5728\u76f4\u63a5\u91cd\u5b9a\u5411\u5230 html \u4f7f\u7528\u4e00\u4e2a\u8fc7\u6ee4\u5668\uff0c\u628a servlet \u8bf7\u6c42\u7684\u8d44\u6e90\u8f93\u51fa\u4fdd\u5b58\u5230 html \u4e2d \u7b2c\u4e8c\u6b21\u8bbf\u95ee\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u5982\u679c\u5df2\u5b58\u5728\u5c31\u76f4\u63a5\u91cd\u5b9a\u5411\u5230 html \u6587\u4ef6 \u8bfe\u65f6 11 \u6848\u4f8b 5\uff1a\u9875\u9762\u9759\u6001\u4e4b\u751f\u6210 html \u9875\u9762 CacheFilter.java package com.pengshiyu.filter ; import com.pengshiyu.response.StaticResponse ; import javax.servlet.* ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.File ; import java.io.IOException ; public class CacheFilter implements Filter { private FilterConfig config ; private final String cacheFileName = \"cache\" ; private String cacheFilePath = null ; @Override public void init ( FilterConfig filterConfig ) throws ServletException { this . config = filterConfig ; this . cacheFilePath = this . config . getServletContext (). getRealPath ( this . cacheFileName ); File file = new File ( this . cacheFilePath ); if ( file . exists ()){ file . mkdir (); } } /** * \u8bbf\u95ee\u8def\u5f84 * http://localhost:8080/demo/book?method=findByCategory&category=4 */ @Override public void doFilter ( ServletRequest servletRequest , ServletResponse servletResponse , FilterChain filterChain ) throws IOException , ServletException { HttpServletRequest request = ( HttpServletRequest ) servletRequest ; HttpServletResponse response = ( HttpServletResponse ) servletResponse ; String category = request . getParameter ( \"category\" ); String filepath = this . cacheFilePath + \"/\" + category + \".html\" ; File file = new File ( filepath ); // \u5982\u679c\u9875\u9762\u4e0d\u5b58\u5728\u5c31\u7f13\u5b58\u9875\u9762 if (! file . exists ()){ StaticResponse staticResponse = new StaticResponse ( response , filepath ); filterChain . doFilter ( request , staticResponse ); } System . out . println ( \"\u6587\u4ef6\u5b58\u5728\u4e86\" ); request . getRequestDispatcher ( this . cacheFileName + \"/\" + category + \".html\" ). forward ( request , response ); } @Override public void destroy () { } } StaticResponse.java package com.pengshiyu.response ; import javax.servlet.http.HttpServletResponse ; import javax.servlet.http.HttpServletResponseWrapper ; import java.io.FileNotFoundException ; import java.io.IOException ; import java.io.PrintWriter ; public class StaticResponse extends HttpServletResponseWrapper { private PrintWriter pw ; public StaticResponse ( HttpServletResponse response , String filename ) throws FileNotFoundException { super ( response ); this . pw = new PrintWriter ( filename ); } @Override public PrintWriter getWriter () throws IOException { // \u6389\u5305\u8f93\u51fa\u6d41 return this . pw ; } }","title":"10 JavaWeb Filter\u8fc7\u6ee4\u5668"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/10-JavaWeb-Filter\u8fc7\u6ee4\u5668/#1","text":"JavaWeb \u4e09\u5927\u7ec4\u4ef6 1\u3001\u90fd\u9700\u8981\u5728 web.xml \u4e2d\u8fdb\u884c\u914d\u7f6e Servlet Filter Listener 2\u3001\u8fc7\u6ee4\u5668 \u4f1a\u5728\u4e00\u7ec4\u8d44\u6e90\uff08jsp, servlet, css, html \u7b49\u7b49\uff09\u7684\u524d\u9762\u6267\u884c \u53ef\u4ee5\u8ba9\u8bf7\u6c42\u5f97\u5230\u76ee\u6807\u8d44\u6e90\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u8ba9\u8bf7\u6c42\u8fbe\u5230 \u8fc7\u6ee4\u5668\u6709\u62e6\u622a\u8bf7\u6c42\u7684\u80fd\u529b 3\u3001\u7f16\u5199\u8fc7\u6ee4\u5668 \uff081\uff09\u5b9e\u73b0 Filter \u63a5\u53e3 \uff082\uff09\u5728 web.xml \u4e2d\u8fdb\u884c\u914d\u7f6e \uff083\uff09Filter \u662f\u5355\u4f8b\u7684 4\u3001\u914d\u7f6e web.xml <web-app> <filter> <filter-name> FilerName </filter-name> <filter-class> FilerClass </filter-class> </filter> <filter-mapping> <filter-name> FilerName </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> </web-app> \u7ee7\u627f\u793a\u4f8b package com.pengshiyu.filtrer ; import javax.servlet.* ; import java.io.IOException ; public class Afilter implements Filter { /** * \u521b\u5efa\u4e4b\u540e\u9a6c\u4e0a\u6267\u884c\uff0c\u7528\u6765\u505a\u521d\u59cb\u5316 */ @Override public void init ( FilterConfig filterConfig ) throws ServletException { } /** * \u6bcf\u6b21\u8fc7\u6ee4\u90fd\u4f1a\u6267\u884c */ @Override public void doFilter ( ServletRequest servletRequest , ServletResponse servletResponse , FilterChain filterChain ) throws IOException , ServletException { System . out . println ( \"\u8fdb\u5165\u8fc7\u6ee4\u5668\" ); // \u8c03\u7528\u540e\u5e8f\u65b9\u6cd5 filterChain . doFilter ( servletRequest , servletResponse ); System . out . println ( \"\u79bb\u5f00\u8fc7\u6ee4\u5668\" ); } /** * \u9500\u6bc1\u4e4b\u524d\u7684\u8c03\u7528\uff0c\u7528\u6765\u91ca\u653e\u8d44\u6e90 */ @Override public void destroy () { } } FilterConfig -> \u4e0e ServletConfig \u76f8\u4f3c \u83b7\u53d6\u521d\u59cb\u5316\u53c2\u6570 getInitParameter() \u83b7\u53d6\u8fc7\u6ee4\u5668\u540d\u79f0 getFilterName() \u83b7\u53d6 application getServletContext() FilterChain \u653e\u884c,\u6267\u884c\u540e\u5e8f\u65b9\u6cd5 doFilter()","title":"\u8bfe\u65f6 1 \u8fc7\u6ee4\u5668\u7684\u5165\u95e8"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/10-JavaWeb-Filter\u8fc7\u6ee4\u5668/#2","text":"\u6267\u884c\u4e0b\u4e00\u4e2a\u8fc7\u6ee4\u5668\u6216\u76ee\u6807\u8d44\u6e90 FilterChain.doFilter() Afilter\u8fdb\u5165\u8fc7\u6ee4\u5668 Bfilter\u8fdb\u5165\u8fc7\u6ee4\u5668 getAge Bfilter\u79bb\u5f00\u8fc7\u6ee4\u5668 Afilter\u79bb\u5f00\u8fc7\u6ee4\u5668","title":"\u8bfe\u65f6 2 \u591a\u4e2a\u8fc7\u6ee4\u5668\u7684\u6267\u884c\u987a\u5e8f"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/10-JavaWeb-Filter\u8fc7\u6ee4\u5668/#3","text":"\u8bf7\u6c42 REQUEST \u9ed8\u8ba4 \u8f6c\u53d1 FORWARD \u5305\u542b INCLUDE \u9519\u8bef ERROR <filter-mapping> <filter-name> FilerName </filter-name> <url-pattern> /* </url-pattern> <dispatcher> REQUEST </dispatcher> </filter-mapping> \u9875\u9762\u51fa\u9519 <error-page> <error-code> 500 </error-code> <location> 500.html </location> </error-page>","title":"\u8bfe\u65f6 3 \u56db\u79cd\u62e6\u622a\u65b9\u5f0f"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/10-JavaWeb-Filter\u8fc7\u6ee4\u5668/#4-filter-mapping-filter","text":"filter-mapping \u7684\u914d\u7f6e\u987a\u5e8f\u51b3\u5b9a\u8fc7\u6ee4\u5668\u6267\u884c\u987a\u5e8f","title":"\u8bfe\u65f6 4 \u4f7f\u7528 filter-mapping \u63a7\u5236\u591a\u4e2a Filter \u7684\u6267\u884c\u987a\u5e8f"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/10-JavaWeb-Filter\u8fc7\u6ee4\u5668/#5-filter-filter","text":"\u9884\u5904\u7406\uff1a\u6267\u884c\u76ee\u6807\u8d44\u6e90\u4e4b\u524d\u505a\u9884\u5904\u7406\u5de5\u4f5c\uff0c\u4f8b\u5982\u8bbe\u7f6e\u7f16\u7801 \u62e6\u622a\uff1a\u901a\u8fc7\u6761\u4ef6\u5224\u65ad\u662f\u5426\u653e\u884c\uff0c\u4f8b\u5982\u7528\u6237\u767b\u5f55\u6821\u9a8c \u56de\u7a0b\u62e6\u622a\uff1a\u76ee\u6807\u8d44\u6e90\u6267\u884c\u4e4b\u540e\uff0c\u505a\u4e00\u4e9b\u540e\u5e8f\u7684\u7279\u6b8a\u5904\u7406\u5de5\u4f5c\uff0c\u4f8b\u5982\u76ee\u6807\u8d44\u6e90\u8f93\u51fa\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406 \u76f4\u63a5\u6307\u5b9a servlet-name <filter-mapping> <filter-name> FilerName </filter-name> <servlet-name> ServletName </servlet-name> </filter-mapping> \u5c0f\u7ed3 Filter3 \u4e2a\u65b9\u6cd5 FilterChain \u7c7b 4 \u79cd\u62e6\u622a\u65b9\u5f0f","title":"\u8bfe\u65f6 5 Filter \u7684\u5e94\u7528\u573a\u666f\u3001Filter \u7684\u76ee\u6807\u8d44\u6e90\u3001\u5c0f\u7ed3"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/10-JavaWeb-Filter\u8fc7\u6ee4\u5668/#6-1-ip","text":"\u6570\u636e\u7ed3\u6784\uff1a ip | count -|- 192.168.0.1 | 32 192.168.0.2 | 22 \u7edf\u8ba1\u5de5\u4f5c\u5728\u6240\u6709\u8d44\u6e90\u4e4b\u524d\u90fd\u6267\u884c\uff0c\u4f7f\u7528 Filter \u8fd9\u4e2a\u8fc7\u6ee4\u5668\u53ea\u505a\u7edf\u8ba1\uff0c\u4e0d\u505a\u62e6\u622a \u6570\u636e Map Map \u4fdd\u5b58\u5230 ServletContext \u4e2d \u4ece request \u4e2d\u83b7\u53d6\u5ba2\u6237\u7aef ip \u4f7f\u7528\u76d1\u542c\u5668\u521b\u5efa map AListener.java package com.pengshiyu.listener ; import javax.servlet.ServletContextEvent ; import javax.servlet.ServletContextListener ; import java.util.LinkedHashMap ; import java.util.Map ; public class AListener implements ServletContextListener { // \u670d\u52a1\u5668\u542f\u52a8\u65f6\u521b\u5efamap public void contextInitialized ( ServletContextEvent sce ) { Map < String , Integer > map = new LinkedHashMap < String , Integer >(); sce . getServletContext (). setAttribute ( \"map\" , map ); } public void contextDestroyed ( ServletContextEvent sce ) { } } \u4f7f\u7528\u8fc7\u6ee4\u5668\u7edf\u8ba1\u6570\u636e AFilter.java package com.pengshiyu.filter ; import javax.servlet.* ; import java.io.IOException ; import java.util.Map ; public class AFilter implements Filter { private FilterConfig config ; /** * \u521b\u5efa\u4e4b\u540e\u9a6c\u4e0a\u6267\u884c\uff0c\u7528\u6765\u505a\u521d\u59cb\u5316 */ @Override public void init ( FilterConfig filterConfig ) throws ServletException { this . config = filterConfig ; } /** * \u6bcf\u6b21\u8fc7\u6ee4\u90fd\u4f1a\u6267\u884c */ @Override public void doFilter ( ServletRequest request , ServletResponse response , FilterChain filterChain ) throws IOException , ServletException { ServletContext app = this . config . getServletContext (); Map < String , Integer > map = ( Map < String , Integer >) app . getAttribute ( \"map\" ); String ip = request . getRemoteAddr (); System . out . println ( \"ip: \" + ip ); if ( map . containsKey ( ip )){ Integer count = map . get ( ip ); map . put ( ip , count + 1 ); } else { map . put ( ip , 1 ); } // \u653e\u884c filterChain . doFilter ( request , response ); } /** * \u9500\u6bc1\u4e4b\u524d\u7684\u8c03\u7528\uff0c\u7528\u6765\u91ca\u653e\u8d44\u6e90 */ @Override public void destroy () { } } \u663e\u793a\u6570\u636e BServlet.java package com.pengshiyu.servlet ; import javax.servlet.ServletContext ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.util.Map ; public class BServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws IOException { ServletContext app = getServletContext (); Map < String , Integer > map = ( Map < String , Integer >) app . getAttribute ( \"map\" ); response . setContentType ( \"text/html; charset=UTF-8\" ); response . getWriter (). println ( map . toString ()); } } \u914d\u7f6e\u76d1\u542c\u5668\u548c\u8fc7\u6ee4\u5668\u751f\u6548 web.xml <?xml version=\"1.0\" encoding=\"utf-8\"?> <web-app> <servlet> <servlet-name> BServlet </servlet-name> <servlet-class> com.pengshiyu.servlet.BServlet </servlet-class> </servlet> <servlet-mapping> <servlet-name> BServlet </servlet-name> <url-pattern> /b </url-pattern> </servlet-mapping> <filter> <filter-name> AFilter </filter-name> <filter-class> com.pengshiyu.filter.AFilter </filter-class> </filter> <filter-mapping> <filter-name> AFilter </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> <listener> <listener-class> com.pengshiyu.listener.AListener </listener-class> </listener> </web-app>","title":"\u8bfe\u65f6 6 \u6848\u4f8b 1\uff1a\u5206 IP \u7edf\u8ba1\u8bbf\u95ee\u6b21\u6570"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/10-JavaWeb-Filter\u8fc7\u6ee4\u5668/#7-2","text":"\u57fa\u4e8e\u89d2\u8272\u7684\u6743\u9650\u63a7\u5236 RBAC tb_user tb_role tb_userrole tb_menu tb_rolemenu web.xml <?xml version=\"1.0\" encoding=\"utf-8\"?> <web-app> <servlet> <servlet-name> AServlet </servlet-name> <servlet-class> com.pengshiyu.servlet.AServlet </servlet-class> </servlet> <servlet-mapping> <servlet-name> AServlet </servlet-name> <url-pattern> /hello </url-pattern> </servlet-mapping> <filter> <filter-name> AFilter </filter-name> <filter-class> com.pengshiyu.filter.AFilter </filter-class> </filter> <filter-mapping> <!-- \u4e0d\u80fd\u5c06\u8fc7\u6ee4\u5668\u8bbe\u7f6e\u5728login.html\u4e0a\uff0c\u4e0d\u7136\u6ca1\u6cd5\u767b\u5f55\u4e86--> <filter-name> AFilter </filter-name> <url-pattern> /hello.html </url-pattern> </filter-mapping> </web-app> AServlet.java package com.pengshiyu.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class AServlet extends HttpServlet { @Override protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { String username = request . getParameter ( \"username\" ); System . out . println ( \"post: \" + username ); // \u8bbe\u7f6esession request . getSession (). setAttribute ( \"username\" , username ); // \u8df3\u8f6c\u9875\u9762 request . getRequestDispatcher ( \"hello.html\" ). forward ( request , response ); } } \u8fc7\u6ee4\u5668\u8fdb\u884c\u7b80\u5355\u7684\u6743\u9650\u6821\u9a8c AFilter.java package com.pengshiyu.filter ; import javax.servlet.* ; import javax.servlet.http.HttpServletRequest ; import java.io.IOException ; public class AFilter implements Filter { private FilterConfig config ; @Override public void init ( FilterConfig filterConfig ) throws ServletException { this . config = filterConfig ; } @Override public void doFilter ( ServletRequest req , ServletResponse response , FilterChain filterChain ) throws IOException , ServletException { HttpServletRequest request = ( HttpServletRequest ) req ; String username = ( String ) request . getSession (). getAttribute ( \"username\" ); System . out . println ( \"filter: \" + username ); if ( username != null ){ // \u653e\u884c filterChain . doFilter ( request , response ); } else { // \u8df3\u8f6c\u5230\u767b\u5f55\u9875 request . getRequestDispatcher ( \"login.html\" ). forward ( request , response ); } } @Override public void destroy () { } }","title":"\u8bfe\u65f6 7 \u6848\u4f8b 2\uff1a\u7c97\u7c92\u5ea6\u6743\u9650\u7ba1\u7406"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/10-JavaWeb-Filter\u8fc7\u6ee4\u5668/#8-3","text":"// post\u7f16\u7801 request . setCharacterEncoding ( \"utf-8\" ); // get\u7f16\u7801 String username = request . getParameter ( \"username\" ); username = new String ( username . getBytes ( StandardCharsets . ISO_8859_1 ), StandardCharsets . UTF_8 ); // \u54cd\u5e94\u7f16\u7801 response . setContentType ( \"text/html; charset=UTF-8\" ); HttpServletRequest \u88c5\u9970\u7c7b EncodingRequest.java package com.pengshiyu.filter ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletRequestWrapper ; import java.nio.charset.StandardCharsets ; // \u88c5\u9970\u5668 public class EncodingRequest extends HttpServletRequestWrapper { public EncodingRequest ( HttpServletRequest request ) { super ( request ); } @Override public String getParameter ( String name ) { // \u5904\u7406\u7f16\u7801\u95ee\u9898 String value = super . getParameter ( name ); value = new String ( value . getBytes ( StandardCharsets . ISO_8859_1 ), StandardCharsets . UTF_8 ); return value ; } } \u8fc7\u6ee4\u5668 AFilter.java package com.pengshiyu.filter ; import javax.servlet.* ; import javax.servlet.http.HttpServletRequest ; import java.io.IOException ; public class AFilter implements Filter { @Override public void init ( FilterConfig filterConfig ) throws ServletException { } @Override public void doFilter ( ServletRequest request , ServletResponse response , FilterChain filterChain ) throws IOException , ServletException { HttpServletRequest httpServletRequest = ( HttpServletRequest ) request ; String method = httpServletRequest . getMethod (); // \u8bbe\u7f6e\u54cd\u5e94\u7f16\u7801 response . setContentType ( \"text/html; charset=UTF-8\" ); if ( \"GET\" . equals ( method )) { // \u653e\u884c EncodingRequest encodingRequest = new EncodingRequest ( httpServletRequest ); filterChain . doFilter ( encodingRequest , response ); } else if ( \"POST\" . equals ( method )) { request . setCharacterEncoding ( \"utf-8\" ); filterChain . doFilter ( request , response ); } } @Override public void destroy () { } } \u54cd\u5e94\u5904\u7406 AServlet.java package com.pengshiyu.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class AServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { System . out . println ( request . getParameter ( \"name\" )); response . getWriter (). print ( \"\u4f60\u597d\" ); } } web.xml <?xml version=\"1.0\" encoding=\"utf-8\"?> <web-app> <!-- \u6ce8\u518c Servlet\uff0c\u5e2e\u52a9web\u670d\u52a1\u5668\u53cd\u5c04\u8be5\u7c7b --> <servlet> <servlet-name> AServlet </servlet-name> <servlet-class> com.pengshiyu.servlet.AServlet </servlet-class> </servlet> <!-- \u6620\u5c04 Servlet \u8d44\u6e90\uff0c\u7528url-pattern\u5143\u7d20\u6807\u793a URL --> <servlet-mapping> <servlet-name> AServlet </servlet-name> <url-pattern> /hello </url-pattern> </servlet-mapping> <filter> <filter-name> AFilter </filter-name> <filter-class> com.pengshiyu.filter.AFilter </filter-class> </filter> <filter-mapping> <!-- \u4e0d\u80fd\u5c06\u8fc7\u6ee4\u5668\u8bbe\u7f6e\u5728login.html\u4e0a\uff0c\u4e0d\u7136\u6ca1\u6cd5\u767b\u5f55\u4e86--> <filter-name> AFilter </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> </web-app>","title":"\u8bfe\u65f6 8 \u6848\u4f8b 3\uff1a\u5168\u7ad9\u7f16\u7801\u95ee\u9898"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/10-JavaWeb-Filter\u8fc7\u6ee4\u5668/#9-4","text":"\u529f\u80fd\uff1a \u67e5\u8be2\u6240\u6709 \u6309\u5206\u7c7b\u67e5\u770b BookServlet findAll () \u67e5\u8be2\u5168\u90e8 findByCategory () \u6309\u5206\u7c7b\u67e5\u8be2 BookService : \u7701\u7565 BookDao : List < Book > findAll () List < Book > findByCategory () Book \uff1a bid bname price category \u9759\u6001\u5316\uff1a \u7b2c\u4e00\u6b21\u8bbf\u95ee\u4ece\u6570\u636e\u5e93\u53d6\u6570\u636e\uff0c\u4fdd\u5b58\u5230 html \u4e2d \u7b2c\u4e8c\u6b21\u4e4b\u540e\u8bbf\u95ee\u5c31\u76f4\u63a5\u4ece html \u4e2d\u8bfb\u53d6\uff0c\u4e0d\u518d\u4ece\u6570\u636e\u5e93\u4e2d\u53d6\u6570\u636e \u6570\u636e\u51c6\u5907\uff1a create table tb_book ( bid int primary key auto_increment , bname varchar ( 50 ), price decimal ( 10 , 2 ), category int ); insert into tb_book ( bname , price , category ) values ( \"Java\" , 12 , 1 ); insert into tb_book ( bname , price , category ) values ( \"Python\" , 12 , 1 ); insert into tb_book ( bname , price , category ) values ( \"JavaScript\" , 12 , 1 ); insert into tb_book ( bname , price , category ) values ( \"Go\" , 12 , 1 ); insert into tb_book ( bname , price , category ) values ( \"\u4e09\u56fd\u6f14\u4e49\" , 12 , 2 ); insert into tb_book ( bname , price , category ) values ( \"\u897f\u6e38\u8bb0\" , 12 , 2 ); insert into tb_book ( bname , price , category ) values ( \"\u6c34\u6d52\u4f20\" , 12 , 2 ); insert into tb_book ( bname , price , category ) values ( \"\u7ea2\u697c\u68a6\" , 12 , 2 ); \u521b\u5efa\u5bf9\u5e94\u7684 Book \u7c7b package com.pengshiyu.bean ; public class Book { private int bid ; private String bname ; private double price ; private int category ; public Book () { } public int getBid () { return bid ; } public void setBid ( int bid ) { this . bid = bid ; } public String getBname () { return bname ; } public void setBname ( String bname ) { this . bname = bname ; } public double getPrice () { return price ; } public void setPrice ( double price ) { this . price = price ; } public int getCategory () { return category ; } public void setCategory ( int category ) { this . category = category ; } @Override public String toString () { return \"Book{\" + \"bid=\" + bid + \", bname='\" + bname + '\\'' + \", price=\" + price + \", category=\" + category + '}' ; } } BookDao.java package com.pengshiyu.dao ; import com.pengshiyu.bean.Book ; import org.apache.commons.dbutils.QueryRunner ; import org.apache.commons.dbutils.handlers.BeanListHandler ; import util.TxQueryRunner ; import java.sql.SQLException ; import java.util.List ; public class BookDao { private QueryRunner qr = new TxQueryRunner (); public List < Book > findAll () { String sql = \"select * from tb_book\" ; try { List < Book > list = qr . query ( sql , new BeanListHandler < Book >( Book . class )); System . out . println ( list ); return list ; } catch ( SQLException e ) { throw new RuntimeException ( e ); } } public List < Book > findByCategory ( int category ) { String sql = \"select * from tb_book where category = ?\" ; try { return qr . query ( sql , new BeanListHandler < Book >( Book . class ), category ); } catch ( SQLException e ) { throw new RuntimeException ( e ); } } } BookServlet package com.pengshiyu.servlet ; import com.pengshiyu.dao.BookDao ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class BookServlet extends BaseServlet { private BookDao bookDao = new BookDao (); public void findAll ( HttpServletRequest request , HttpServletResponse response ) throws IOException , ServletException { request . setAttribute ( \"bookList\" , bookDao . findAll ()); request . getRequestDispatcher ( \"book.jsp\" ). forward ( request , response ); } public void findByCategory ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { int category = Integer . parseInt ( request . getParameter ( \"category\" )); request . setAttribute ( \"bookList\" , bookDao . findByCategory ( category )); request . getRequestDispatcher ( \"book.jsp\" ). forward ( request , response ); } } \u7528\u5230\u7684\u5de5\u5177\u7c7b TxQueryRunner.java package util ; import java.sql.Connection ; import java.sql.SQLException ; import org.apache.commons.dbutils.QueryRunner ; import org.apache.commons.dbutils.ResultSetHandler ; public class TxQueryRunner extends QueryRunner { @Override public int [] batch ( String sql , Object [][] params ) throws SQLException { Connection con = JdbcUtil . getConnection (); int [] result = super . batch ( con , sql , params ); JdbcUtil . releaseConnection ( con ); return result ; } @Override public < T > T query ( String sql , ResultSetHandler < T > rsh , Object ... params ) throws SQLException { Connection con = JdbcUtil . getConnection (); T result = super . query ( con , sql , rsh , params ); JdbcUtil . releaseConnection ( con ); return result ; } @Override public < T > T query ( String sql , ResultSetHandler < T > rsh ) throws SQLException { Connection con = JdbcUtil . getConnection (); T result = super . query ( con , sql , rsh ); JdbcUtil . releaseConnection ( con ); return result ; } @Override public int update ( String sql ) throws SQLException { Connection con = JdbcUtil . getConnection (); int result = super . update ( con , sql ); JdbcUtil . releaseConnection ( con ); return result ; } @Override public int update ( String sql , Object param ) throws SQLException { Connection con = JdbcUtil . getConnection (); int result = super . update ( con , sql , param ); JdbcUtil . releaseConnection ( con ); return result ; } @Override public int update ( String sql , Object ... params ) throws SQLException { Connection con = JdbcUtil . getConnection (); int result = super . update ( con , sql , params ); JdbcUtil . releaseConnection ( con ); return result ; } } JdbcUtil.java package util ; import com.mchange.v2.c3p0.ComboPooledDataSource ; import javax.sql.DataSource ; import java.sql.Connection ; import java.sql.SQLException ; public class JdbcUtil { // \u9700\u8981\u914d\u7f6ec3p0-config.xml private static ComboPooledDataSource dataSource = new ComboPooledDataSource (); // \u8fd4\u56de\u8fde\u63a5\u5bf9\u8c61 public static Connection getConnection () { try { return dataSource . getConnection (); } catch ( SQLException e ) { throw new RuntimeException ( e ); } } // \u8fd4\u56de\u8fde\u63a5\u6c60\u5bf9\u8c61 public static DataSource getDataSource () { return dataSource ; } // \u91ca\u653e\u8fde\u63a5 public static void releaseConnection ( Connection connection ) { try { connection . close (); } catch ( SQLException e ) { throw new RuntimeException ( e ); } } } book.jsp < %@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%> < %@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\"%> < h2 > \u56fe\u4e66\u5217\u8868 </ h2 > \u5206\u7c7b\uff1a < a href = \"book?method=findAll\" > \u5168\u90e8 </ a > < a href = \"book?method=findByCategory&category=1\" > \u7b2c\u4e00\u7c7b </ a > < a href = \"book?method=findByCategory&category=2\" > \u7b2c\u4e8c\u7c7b </ a > < table border = \"1\" > < tr > < th > ID </ th > < th > \u4e66\u540d </ th > < th > \u4ef7\u683c </ th > < th > \u5206\u7c7b </ th > </ tr > < c:forEach items = \"${bookList}\" var = \"book\" > < tr > < td > ${book.bid} </ td > < td > ${book.bname} </ td > < td > ${book.price} </ td > < td > ${book.category} </ td > </ tr > </ c:forEach > </ table > \u914d\u7f6e\u6587\u4ef6 pom.xml <dependency> <groupId> jstl </groupId> <artifactId> jstl </artifactId> <version> 1.2 </version> </dependency> <dependency> <groupId> taglibs </groupId> <artifactId> standard </artifactId> <version> 1.1.2 </version> </dependency> web.xml <servlet-mapping> <servlet-name> BookServlet </servlet-name> <url-pattern> /book </url-pattern> </servlet-mapping> <servlet> <servlet-name> BookServlet </servlet-name> <servlet-class> com.pengshiyu.servlet.BookServlet </servlet-class> </servlet> c3p0-config.xml <?xml version=\"1.0\" encoding=\"utf-8\"?> <c3p0-config> <!-- \u8fd9\u662f\u9ed8\u8ba4\u914d\u7f6e\u4fe1\u606f --> <default-config> <!-- \u8fde\u63a5\u56db\u5927\u53c2\u6570\u914d\u7f6e --> <property name= \"driverClass\" > com.mysql.cj.jdbc.Driver </property> <property name= \"jdbcUrl\" > jdbc:mysql://localhost:3306/data </property> <property name= \"user\" > root </property> <property name= \"password\" > 123456 </property> <!-- \u6c60\u53c2\u6570\u914d\u7f6e --> <property name= \"acquireIncrement\" > 2 </property> <property name= \"initialPoolSize\" > 2 </property> <property name= \"minPoolSize\" > 2 </property> <property name= \"maxPoolSize\" > 10 </property> </default-config> </c3p0-config> \u8bbf\u95ee\u8def\u5f84 http://localhost:8080/demo/book?method=findAll http://localhost:8080/demo/book?method=findByCategory&category=1","title":"\u8bfe\u65f6 9 \u6848\u4f8b 4\uff1a\u9875\u9762\u9759\u6001\u5316\u4e4b\u51c6\u5907\u5de5\u4f5c\uff08\u56fe\u4e66\u7ba1\u7406\u5c0f\u9879\u76ee\uff09"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/10-JavaWeb-Filter\u8fc7\u6ee4\u5668/#10-4-html","text":"\u4f7f\u7528\u4e00\u4e2a\u8fc7\u6ee4\u5668\uff0c\u628a servlet \u8bf7\u6c42\u7684\u8d44\u6e90\u8f93\u51fa\u4fdd\u5b58\u5230 html \u4e2d \u7b2c\u4e8c\u6b21\u8bbf\u95ee\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u5982\u679c\u5df2\u5b58\u5728\u5c31\u76f4\u63a5\u91cd\u5b9a\u5411\u5230 html \u6587\u4ef6","title":"\u8bfe\u65f6 10 \u6848\u4f8b 4\uff1a\u9875\u9762\u9759\u6001\u5316\u4e4b\u5982\u679c\u6587\u4ef6\u5b58\u5728\u76f4\u63a5\u91cd\u5b9a\u5411\u5230 html"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/10-JavaWeb-Filter\u8fc7\u6ee4\u5668/#11-5-html","text":"CacheFilter.java package com.pengshiyu.filter ; import com.pengshiyu.response.StaticResponse ; import javax.servlet.* ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.File ; import java.io.IOException ; public class CacheFilter implements Filter { private FilterConfig config ; private final String cacheFileName = \"cache\" ; private String cacheFilePath = null ; @Override public void init ( FilterConfig filterConfig ) throws ServletException { this . config = filterConfig ; this . cacheFilePath = this . config . getServletContext (). getRealPath ( this . cacheFileName ); File file = new File ( this . cacheFilePath ); if ( file . exists ()){ file . mkdir (); } } /** * \u8bbf\u95ee\u8def\u5f84 * http://localhost:8080/demo/book?method=findByCategory&category=4 */ @Override public void doFilter ( ServletRequest servletRequest , ServletResponse servletResponse , FilterChain filterChain ) throws IOException , ServletException { HttpServletRequest request = ( HttpServletRequest ) servletRequest ; HttpServletResponse response = ( HttpServletResponse ) servletResponse ; String category = request . getParameter ( \"category\" ); String filepath = this . cacheFilePath + \"/\" + category + \".html\" ; File file = new File ( filepath ); // \u5982\u679c\u9875\u9762\u4e0d\u5b58\u5728\u5c31\u7f13\u5b58\u9875\u9762 if (! file . exists ()){ StaticResponse staticResponse = new StaticResponse ( response , filepath ); filterChain . doFilter ( request , staticResponse ); } System . out . println ( \"\u6587\u4ef6\u5b58\u5728\u4e86\" ); request . getRequestDispatcher ( this . cacheFileName + \"/\" + category + \".html\" ). forward ( request , response ); } @Override public void destroy () { } } StaticResponse.java package com.pengshiyu.response ; import javax.servlet.http.HttpServletResponse ; import javax.servlet.http.HttpServletResponseWrapper ; import java.io.FileNotFoundException ; import java.io.IOException ; import java.io.PrintWriter ; public class StaticResponse extends HttpServletResponseWrapper { private PrintWriter pw ; public StaticResponse ( HttpServletResponse response , String filename ) throws FileNotFoundException { super ( response ); this . pw = new PrintWriter ( filename ); } @Override public PrintWriter getWriter () throws IOException { // \u6389\u5305\u8f93\u51fa\u6d41 return this . pw ; } }","title":"\u8bfe\u65f6 11 \u6848\u4f8b 5\uff1a\u9875\u9762\u9759\u6001\u4e4b\u751f\u6210 html \u9875\u9762"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/11-JavaWeb-\u76d1\u542c\u5668Listener/","text":"\u8bfe\u65f6 12 \u4ec0\u4e48\u53eb\u76d1\u542c\u5668 Listener AWT\u3001SAX \u76d1\u542c\u5668\uff1a \u4e00\u4e2a\u63a5\u53e3\uff0c\u5185\u5bb9\u7531\u7528\u6237\u5b9e\u73b0 \u9700\u8981\u6ce8\u518c \u76d1\u542c\u5668\u4e2d\u7684\u65b9\u6cd5\uff0c\u4f1a\u5728\u7279\u6b8a\u4e8b\u4ef6\u53d1\u751f\u65f6\u88ab\u8c03\u7528 \u89c2\u5bdf\u8005 \u4e8b\u4ef6\u6e90 \u4e8b\u4ef6 \u76d1\u542c\u5668 \u8bfe\u65f6 13 \u76d1\u542c\u5668\u6982\u8ff0\u4ee5\u53ca\u751f\u547d\u5468\u671f\u76d1\u542c\u5668 \u4e8b\u4ef6\u6e90 1 \u3001 ServletContext \u751f\u547d\u5468\u671f\u76d1\u542c ServletContextListener \u521b\u5efa contextInitialized \u9500\u6bc1 contextDestroyed ServletContextEvent - getServletContext () \u5c5e\u6027\u76d1\u542c ServletContextAttributeListener \u6dfb\u52a0 attributeAdded \u66ff\u6362 attributeReplaced \u79fb\u9664 attributeRemoved ServletContextAttributeEvent - getName () - getValue () 2 \u3001 HttpSession \u751f\u547d\u5468\u671f\u76d1\u542c HttpSessionListener \u521b\u5efa sessionCreated \u9500\u6bc1 sessionDestroyed HttpSessionEvent - getSession () \u5c5e\u6027\u76d1\u542c HttpSessionAttributeListener \u6dfb\u52a0 attributeAdded \u66ff\u6362 attributeReplaced \u79fb\u9664 attributeRemoved HttpSessionBindingEvent - getSession () - getName () - getValue () 3 \u3001 ServletRequest \u751f\u547d\u5468\u671f\u76d1\u542c ServletRequestListener \u521b\u5efa requestDestroyed \u9500\u6bc1 requestInitialized ServletRequestEvent - getServletRequest () - getServletContext () \u5c5e\u6027\u76d1\u542c ServletRequestAttributeListener \u6dfb\u52a0 attributeAdded \u66ff\u6362 attributeReplaced \u79fb\u9664 attributeRemoved ServletRequestAttributeEvent - getName () - getValue () \u7f16\u5199\u76d1\u542c\u5668 \u7ee7\u627f\u7236\u7c7b\uff0c\u5b9e\u73b0\u65b9\u6cd5 package com.pengshiyu.listener ; import javax.servlet.ServletContextEvent ; import javax.servlet.ServletContextListener ; public class AListener implements ServletContextListener { @Override public void contextInitialized ( ServletContextEvent sce ) { } @Override public void contextDestroyed ( ServletContextEvent sce ) { } } \u914d\u7f6e\u76d1\u542c\u5668 web.xml <listener> <listener-class> com.pengshiyu.listener.AListener </listener-class> </listener> \u8bfe\u65f6 14 \u76d1\u542c\u5668\u4e4b\u5c5e\u6027\u76d1\u542c\u5668 \u8bbe\u7f6e\u5c5e\u6027 package com.pengshiyu.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class AServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { getServletContext (). setAttribute ( \"key\" , \"value\" ); response . getWriter (). print ( \"Hello\" ); } } \u76d1\u542c\u5c5e\u6027\u53d8\u5316 package com.pengshiyu.listener ; import javax.servlet.ServletContextAttributeEvent ; import javax.servlet.ServletContextAttributeListener ; public class AListener implements ServletContextAttributeListener { @Override public void attributeAdded ( ServletContextAttributeEvent event ) { System . out . println ( event . getName () + \":\" + event . getValue ()); } @Override public void attributeRemoved ( ServletContextAttributeEvent event ) { System . out . println ( event . getName () + \":\" + event . getValue ()); } @Override public void attributeReplaced ( ServletContextAttributeEvent event ) { System . out . println ( event . getName () + \":\" + event . getValue () + \"->\" + event . getServletContext (). getAttribute ( event . getName ())); } } \u8bfe\u65f6 15 \u611f\u77e5\u76d1\u542c\u5668 \u90fd\u4e0e HttpSession \u76f8\u5173 \u6dfb\u52a0\u5230 JavaBean \u4e0a \u4e0d\u9700\u8981\u518d web.xml \u4e2d\u6ce8\u518c package com.pengshiyu.bean ; import javax.servlet.http.HttpSessionBindingEvent ; import javax.servlet.http.HttpSessionBindingListener ; public class User implements HttpSessionBindingListener { private String name ; @Override public void valueBound ( HttpSessionBindingEvent event ) { System . out . println ( \"session\u503c\u7ed1\u5b9a\u4e86: \" + event . getName () + \"=\" + event . getValue ()); } @Override public void valueUnbound ( HttpSessionBindingEvent event ) { System . out . println ( \"session\u503c\u89e3\u9664\u7ed1\u5b9a\u4e86: \" + event . getName () + \"=\" + event . getValue ()); } } package com.pengshiyu.servlet ; import com.pengshiyu.bean.User ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class AServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { User user = new User (); request . getSession (). setAttribute ( \"user\" , user ); response . getWriter (). print ( \"Hello\" ); } } \u8bfe\u65f6 16 session \u7684\u5e8f\u5217\u5316 session \u4f1a\u5728\u7a0b\u5e8f\u5173\u95ed\u7684\u65f6\u5019\u5e8f\u5217\u5316\u5230\u786c\u76d8 \u518d\u6b21\u542f\u52a8\u7a0b\u5e8f\uff0c\u786c\u76d8\u4e0a\u7684 session \u4f1a\u53cd\u5e8f\u5217\u5316\u5230\u5185\u5b58 \u8bfe\u65f6 17 session \u7684\u949d\u5316\u548c\u6d3b\u5316 <Context reloadable= \"true\" > <Manager className= \"org.apche.catalina.session.PersistentManager\" maxIdleSwap= \"1\" > <Store className= \"org.apche.catalina.session.FileStore\" directory= \"mysession\" > </Store> </Manager> </Context> \u949d\u5316\u4fdd\u5b58\uff0c\u6d3b\u5316\u91cd\u65b0\u52a0\u8f7d \u8bfe\u65f6 18 \u76d1\u542c\u5668\u4e4b HttpSessionActivationListener package com.pengshiyu.bean ; import javax.servlet.http.HttpSessionActivationListener ; import javax.servlet.http.HttpSessionEvent ; public class User implements HttpSessionActivationListener , java . io . Serializable { @Override public void sessionWillPassivate ( HttpSessionEvent se ) { } @Override public void sessionDidActivate ( HttpSessionEvent se ) { } }","title":"11 JavaWeb \u76d1\u542c\u5668Listener"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/11-JavaWeb-\u76d1\u542c\u5668Listener/#12-listener","text":"AWT\u3001SAX \u76d1\u542c\u5668\uff1a \u4e00\u4e2a\u63a5\u53e3\uff0c\u5185\u5bb9\u7531\u7528\u6237\u5b9e\u73b0 \u9700\u8981\u6ce8\u518c \u76d1\u542c\u5668\u4e2d\u7684\u65b9\u6cd5\uff0c\u4f1a\u5728\u7279\u6b8a\u4e8b\u4ef6\u53d1\u751f\u65f6\u88ab\u8c03\u7528 \u89c2\u5bdf\u8005 \u4e8b\u4ef6\u6e90 \u4e8b\u4ef6 \u76d1\u542c\u5668","title":"\u8bfe\u65f6 12 \u4ec0\u4e48\u53eb\u76d1\u542c\u5668 Listener"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/11-JavaWeb-\u76d1\u542c\u5668Listener/#13","text":"\u4e8b\u4ef6\u6e90 1 \u3001 ServletContext \u751f\u547d\u5468\u671f\u76d1\u542c ServletContextListener \u521b\u5efa contextInitialized \u9500\u6bc1 contextDestroyed ServletContextEvent - getServletContext () \u5c5e\u6027\u76d1\u542c ServletContextAttributeListener \u6dfb\u52a0 attributeAdded \u66ff\u6362 attributeReplaced \u79fb\u9664 attributeRemoved ServletContextAttributeEvent - getName () - getValue () 2 \u3001 HttpSession \u751f\u547d\u5468\u671f\u76d1\u542c HttpSessionListener \u521b\u5efa sessionCreated \u9500\u6bc1 sessionDestroyed HttpSessionEvent - getSession () \u5c5e\u6027\u76d1\u542c HttpSessionAttributeListener \u6dfb\u52a0 attributeAdded \u66ff\u6362 attributeReplaced \u79fb\u9664 attributeRemoved HttpSessionBindingEvent - getSession () - getName () - getValue () 3 \u3001 ServletRequest \u751f\u547d\u5468\u671f\u76d1\u542c ServletRequestListener \u521b\u5efa requestDestroyed \u9500\u6bc1 requestInitialized ServletRequestEvent - getServletRequest () - getServletContext () \u5c5e\u6027\u76d1\u542c ServletRequestAttributeListener \u6dfb\u52a0 attributeAdded \u66ff\u6362 attributeReplaced \u79fb\u9664 attributeRemoved ServletRequestAttributeEvent - getName () - getValue () \u7f16\u5199\u76d1\u542c\u5668 \u7ee7\u627f\u7236\u7c7b\uff0c\u5b9e\u73b0\u65b9\u6cd5 package com.pengshiyu.listener ; import javax.servlet.ServletContextEvent ; import javax.servlet.ServletContextListener ; public class AListener implements ServletContextListener { @Override public void contextInitialized ( ServletContextEvent sce ) { } @Override public void contextDestroyed ( ServletContextEvent sce ) { } } \u914d\u7f6e\u76d1\u542c\u5668 web.xml <listener> <listener-class> com.pengshiyu.listener.AListener </listener-class> </listener>","title":"\u8bfe\u65f6 13 \u76d1\u542c\u5668\u6982\u8ff0\u4ee5\u53ca\u751f\u547d\u5468\u671f\u76d1\u542c\u5668"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/11-JavaWeb-\u76d1\u542c\u5668Listener/#14","text":"\u8bbe\u7f6e\u5c5e\u6027 package com.pengshiyu.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class AServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { getServletContext (). setAttribute ( \"key\" , \"value\" ); response . getWriter (). print ( \"Hello\" ); } } \u76d1\u542c\u5c5e\u6027\u53d8\u5316 package com.pengshiyu.listener ; import javax.servlet.ServletContextAttributeEvent ; import javax.servlet.ServletContextAttributeListener ; public class AListener implements ServletContextAttributeListener { @Override public void attributeAdded ( ServletContextAttributeEvent event ) { System . out . println ( event . getName () + \":\" + event . getValue ()); } @Override public void attributeRemoved ( ServletContextAttributeEvent event ) { System . out . println ( event . getName () + \":\" + event . getValue ()); } @Override public void attributeReplaced ( ServletContextAttributeEvent event ) { System . out . println ( event . getName () + \":\" + event . getValue () + \"->\" + event . getServletContext (). getAttribute ( event . getName ())); } }","title":"\u8bfe\u65f6 14 \u76d1\u542c\u5668\u4e4b\u5c5e\u6027\u76d1\u542c\u5668"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/11-JavaWeb-\u76d1\u542c\u5668Listener/#15","text":"\u90fd\u4e0e HttpSession \u76f8\u5173 \u6dfb\u52a0\u5230 JavaBean \u4e0a \u4e0d\u9700\u8981\u518d web.xml \u4e2d\u6ce8\u518c package com.pengshiyu.bean ; import javax.servlet.http.HttpSessionBindingEvent ; import javax.servlet.http.HttpSessionBindingListener ; public class User implements HttpSessionBindingListener { private String name ; @Override public void valueBound ( HttpSessionBindingEvent event ) { System . out . println ( \"session\u503c\u7ed1\u5b9a\u4e86: \" + event . getName () + \"=\" + event . getValue ()); } @Override public void valueUnbound ( HttpSessionBindingEvent event ) { System . out . println ( \"session\u503c\u89e3\u9664\u7ed1\u5b9a\u4e86: \" + event . getName () + \"=\" + event . getValue ()); } } package com.pengshiyu.servlet ; import com.pengshiyu.bean.User ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class AServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { User user = new User (); request . getSession (). setAttribute ( \"user\" , user ); response . getWriter (). print ( \"Hello\" ); } }","title":"\u8bfe\u65f6 15 \u611f\u77e5\u76d1\u542c\u5668"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/11-JavaWeb-\u76d1\u542c\u5668Listener/#16-session","text":"session \u4f1a\u5728\u7a0b\u5e8f\u5173\u95ed\u7684\u65f6\u5019\u5e8f\u5217\u5316\u5230\u786c\u76d8 \u518d\u6b21\u542f\u52a8\u7a0b\u5e8f\uff0c\u786c\u76d8\u4e0a\u7684 session \u4f1a\u53cd\u5e8f\u5217\u5316\u5230\u5185\u5b58","title":"\u8bfe\u65f6 16 session \u7684\u5e8f\u5217\u5316"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/11-JavaWeb-\u76d1\u542c\u5668Listener/#17-session","text":"<Context reloadable= \"true\" > <Manager className= \"org.apche.catalina.session.PersistentManager\" maxIdleSwap= \"1\" > <Store className= \"org.apche.catalina.session.FileStore\" directory= \"mysession\" > </Store> </Manager> </Context> \u949d\u5316\u4fdd\u5b58\uff0c\u6d3b\u5316\u91cd\u65b0\u52a0\u8f7d","title":"\u8bfe\u65f6 17 session \u7684\u949d\u5316\u548c\u6d3b\u5316"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/11-JavaWeb-\u76d1\u542c\u5668Listener/#18-httpsessionactivationlistener","text":"package com.pengshiyu.bean ; import javax.servlet.http.HttpSessionActivationListener ; import javax.servlet.http.HttpSessionEvent ; public class User implements HttpSessionActivationListener , java . io . Serializable { @Override public void sessionWillPassivate ( HttpSessionEvent se ) { } @Override public void sessionDidActivate ( HttpSessionEvent se ) { } }","title":"\u8bfe\u65f6 18 \u76d1\u542c\u5668\u4e4b HttpSessionActivationListener"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/","text":"11-JSP \u5feb\u901f\u5165\u95e8 \u7b2c 1 \u7ae0 \uff1a JSP \u5165\u95e8 \u8bfe\u65f6 1 JSP \u5165\u95e8 Java Server Pages jsp \u672c\u8d28\u5c31\u662f Servlet jsp\uff1a\u5728\u539f\u6709 html \u57fa\u7840\u4e0a\u6dfb\u52a0 java \u811a\u672c \u5206\u5de5\uff1a jsp \u663e\u793a\u6570\u636e servlet \u5904\u7406\u6570\u636e jsp -> servlet -> jsp jsp \u7ec4\u6210\uff1a 1\u3001html + java \u811a\u672c + jsp \u6807\u7b7e\uff08\u6307\u4ee4\uff09 2\u30019 \u4e2a\u5185\u7f6e\u5bf9\u8c61\uff1a request response session application pageContext config out page exception 3\u30013 \u79cd\u811a\u672c <% %> Java\u4ee3\u7801\u7247\u6bb5\uff0c\u591a\u6761\u4ee3\u7801 <%=%> Java\u8868\u8fbe\u5f0f\uff0c\u4e00\u6761\u4ee3\u7801 <% ! %> \u58f0\u660e\u6210\u5458 \u8bfe\u65f6 2 JSP \u4e2d Java \u811a\u672c\u7684\u6f14\u793a html \u4e2d\u7684 base \u6807\u7b7e <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <% // java\u8bed\u53e5 String basePath = request . getScheme () + \"://\" + request . getServerName () + \":\" + request . getServerPort () + request . getContextPath (); // http://localhost:8080/demo %> <%= basePath %> <% // \u7b49\u4ef7\u4e8e out . print ( basePath ); %> <br/> <%! // \u6210\u5458\u53d8\u91cf int a = 5 ; // \u6210\u5458\u65b9\u6cd5 public void getValue (){ System . out . print ( \"hi\" ); } %> <% int a = 10 ; // \u5c40\u90e8\u53d8\u91cf %> \u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf: <%= a %> \u8bbf\u95ee\u6210\u5458\u53d8\u91cf: <%=this . a %> <% // \u8c03\u7528\u6210\u5458\u65b9\u6cd5 getValue (); %> \u5217\u8868\u5faa\u73af <ol> <% for ( int i = 0 ; i < 10 ; i ++){ %> <li> <%= i %> </li> <% } %> </ol> \u8bfe\u65f6 3 JSP \u548c Servlet \u5206\u5de5\u7684\u6848\u4f8b \u8ba1\u7b97\u5668\u793a\u4f8b \u83b7\u53d6\u8868\u5355\u6570\u636e form.jsp \u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210 int \u7c7b\u578b \u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\u5f97\u5230\u7ed3\u679c \u4fdd\u5b58\u6570\u636e\u7ed3\u679c\u5230 request \u4e2d \u8f6c\u53d1\u5230 result.jsp \u5904\u7406\u6d41\u7a0b form . jsp -> servlet -> result . jsp \u4ee3\u7801\u6587\u4ef6 form.jsp < form action = \"calculate\" method = \"post\" > < input type = \"text\" name = \"num1\" /> < input type = \"text\" name = \"num2\" /> < input type = \"submit\" /> </ form > CalculateServlet.java package com.pengshiyu.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class CalculateServlet extends HttpServlet { @Override protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { // \u83b7\u53d6\u53c2\u6570 String s1 = request . getParameter ( \"num1\" ); String s2 = request . getParameter ( \"num2\" ); // \u7c7b\u578b\u8f6c\u6362 int num1 = Integer . parseInt ( s1 ); int num2 = Integer . parseInt ( s2 ); // \u6c42\u548c int result = num1 + num2 ; // \u8d4b\u503c request . setAttribute ( \"result\" , result ); // \u8f6c\u53d1 request . getRequestDispatcher ( \"/result.jsp\" ). forward ( request , response ); } } result.jsp <%= request . getAttribute ( \"result\" ) %> \u8bfe\u65f6 4 JSP \u7684\u539f\u7406 jsp \u662f\u4e00\u4e2a\u7279\u6b8a\u7684 servlet \u7b2c\u4e00\u6b21\u8bbf\u95ee jsp \u9875\u9762\u65f6\uff0c\u670d\u52a1\u5668\u4f1a\u628a jsp \u7f16\u8bd1\u6210 java \u6587\u4ef6\uff0c\u4e00\u4e2a servlet \u7c7b \u518d\u628a.java \u6587\u4ef6\u7f16\u8bd1\u6210.class \u6587\u4ef6 \u521b\u5efa\u8be5\u7c7b\u5bf9\u8c61 \u6700\u540e\u8c03\u7528\u5b83\u7684 service()\u65b9\u6cd5 \u7b2c\u4e8c\u6b21\u8bbf\u95ee\u540c\u4e00\u4e2a jsp \u9875\u9762\u65f6\uff0c\u76f4\u63a5\u8c03\u7528 service()\u65b9\u6cd5 \u6d41\u7a0b\u56fe \u7b2c\u4e00\u6b21\u8bbf\u95ee\uff1a \u5ba2\u6237\u7aef -> \u670d\u52a1\u5668 -> jsp -> java -> class -> \u521b\u5efa Servlet\u5bf9\u8c61 -> \u8c03\u7528 service () \u65b9\u6cd5 \u7b2c\u4e8c\u6b21\u4e4b\u540e\u8bbf\u95ee\uff1a \u5ba2\u6237\u7aef -> \u670d\u52a1\u5668 -> jsp -> \u8c03\u7528 service () \u65b9\u6cd5 jsp \u7f16\u8bd1\u4e3a java \u7c7b jsp java\u7c7b =============================================== \u5934 \u5b9a\u4e499\u4e2a\u5185\u7f6e\u5bf9\u8c61 \u4e3a9\u4e2a\u5185\u7f6e\u5bf9\u8c61\u8d4b\u503c =============================================== \u4f53 html out.write() <% %> \u539f\u6837\u642c\u8fd0 <%=%> out.print() <% ! %> \u58f0\u660e\u6210\u5458 <%- - - -%> \u6ce8\u91ca\u4e0d\u505a\u7ffb\u8bd1 =============================================== \u5c3e \u505a\u5f02\u5e38\u5904\u7406 \u8bfe\u65f6 5 JSP \u4e2d\u7684\u6ce8\u91ca <!-- --> html\u6ce8\u91ca <%- - - -%> jsp\u6ce8\u91ca\uff0c\u4e0d\u4f1a\u8f93\u51fa\u5230html\u6587\u4ef6\u4e2d \u7b2c 2 \u7ae0 \uff1a Cookie \u5904\u7406 \u8bfe\u65f6 6 Cookie \u5165\u95e8 Cookie \u662f http \u534f\u8bae \u7531\u670d\u52a1\u5668\u521b\u5efa\u4fdd\u5b58\u5230\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u7684\u4e00\u4e2a\u952e\u503c\u5bf9 \u670d\u52a1\u5668\u54cd\u5e94\u5934 Set-Cookie : key1 = value1 ; key2 = valu2 \u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u4e0b\u6b21\u8bf7\u6c42\u65f6\u4f1a\u5e26\u4e0a Cookie \u5ba2\u6237\u7aef\u8bf7\u6c42\u5934 Cookie : key1 = value1 ; key2 = valu2 \u89c4\u5b9a\uff1a 1 \u4e2a Cookie \u6700\u5927 4kb \u4e00\u4e2a\u670d\u52a1\u5668\u6700\u591a\u7ed9\u4e00\u4e2a\u6d4f\u89c8\u5668 20 \u4e2a cookie \u4e00\u4e2a\u6d4f\u89c8\u5668\u6700\u591a\u4fdd\u5b58 300 \u4e2a cookie \u7528\u9014\uff1a \u670d\u52a1\u5668\u8ddf\u8e2a\u5ba2\u6237\u7aef\u72b6\u6001 \u8d2d\u7269\u8f66 JavaWeb \u4e2d\u4f7f\u7528\uff1a \uff08 1 \uff09\u539f\u59cb\u65b9\u6cd5 response\u53d1\u9001Set - Cookie\u54cd\u5e94\u5934 request\u83b7\u53d6Cookie\u8bf7\u6c42\u5934 \uff08 2 \uff09\u4fbf\u6377\u65b9\u6cd5 response . addCookie () request . getCookies () \u793a\u4f8b setCookie.jsp <h2> \u8bbe\u7f6eCookie </h2> <% Cookie cookie = new Cookie ( \"key\" , \"value\" ); response . addCookie ( cookie ); %> getCookie.jsp <h2> \u83b7\u53d6Cookie </h2> <% Cookie [] cookies = request . getCookies (); if ( cookies != null ){ for ( Cookie c : cookies ){ out . print ( c . getName () + \": \" + c . getValue ()); } } %> \u8bfe\u65f6 7 Cookie \u7684\u751f\u547d maxAge\uff1aCookie \u4fdd\u5b58\u7684\u6700\u5927\u65f6\u95f4\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d maxAge > 0 \u4f1a\u4fdd\u5b58\u5230\u5ba2\u6237\u7aef\u786c\u76d8 maxAge < 0 \u53ea\u4f1a\u5728\u5185\u5b58\u4e2d\uff0c\u6d4f\u89c8\u5668\u5173\u95ed\u5c31\u5220\u9664 maxAge = 0 \u5220\u9664 cookie eg : cookie . setMaxAge ( 60 ) \u8bfe\u65f6 8 Cookie \u7684\u8def\u5f84 path \u8bbe\u7f6e\u9700\u8981\u5f52\u8fd8\u7684 cookie \u4f5c\u7528\u57df \u9ed8\u8ba4\u503c\u4e3a\u5f53\u524d\u8def\u5f84\u7684\u7236\u7ea7\u76ee\u5f55 eg : cookie . setPath ( '/' ) eg : cookieA / demo cookieB /demo/jsp/ cookieC /demo/jsp/html/ /demo/i ndex . jsp -> cookieA /demo/jsp/i ndex . jsp -> cookieA \u3001 cookieB /demo/jsp/html/i ndex . jsp -> cookieA \u3001 cookieB \u3001 cookieC \u8bfe\u65f6 9 Cookie \u7684\u57df domain \u6307\u5b9a\u5171\u4eab\u57df\u540d eg : cookie . setDomain ( '.baidu.com' ) cookie . setPath ( '/' ) \u5171\u4eab\uff1a www . baidu . com \u3001 zhidao . baidu . com \u7b2c 3 \u7ae0 \uff1a HttpSession \u8bfe\u65f6 10 HttpSession \u5165\u95e8 HttpSession \u7528\u4e8e\u4f1a\u8bdd\u8ddf\u8e2a\uff0c\u4fdd\u5b58\u5728\u670d\u52a1\u5668\u7aef 1\u3001Servlet \u4e09\u5927\u57df\u5bf9\u8c61: request session application 2\u3001HttpSession \u5e95\u5c42\u4f9d\u8d56: Cookie \u6216\u662f Url \u91cd\u5199 3\u3001\u4f1a\u8bdd\u8303\u56f4 \u7528\u6237\u9996\u6b21\u8bbf\u95ee\u670d\u52a1\u5668\u5f00\u59cb\uff0c\u5230\u8be5\u7528\u6237\u5173\u95ed\u6d4f\u89c8\u5668\u7ed3\u675f 4\u3001Servlet \u4e2d\u83b7\u53d6 session HttpSession = request . getSession () 5\u3001jsp \u4e2d\u7684 session \u662f\u5185\u7f6e\u5bf9\u8c61\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 <% void session . setAttribute ( String name , String value ); Object session . getAttribute ( String name ); void session . getAttribute ( String name ); %> \u8bfe\u65f6 11-12 HttpSession \u7b2c\u4e00\u4f8b \u521b\u5efa\u548c\u83b7\u53d6 session setSession.jsp \u521b\u5efa session <h2> \u8bbe\u7f6eSession </h2> <% session . setAttribute ( \"name\" , \"Tom\" ); %> getSession.jsp \u83b7\u53d6 session <h2> \u83b7\u53d6Session </h2> <%= session . getAttribute ( \"name\" ) %> \u8bfe\u65f6 13 HttpSession \u7b2c\u4e8c\u4f8b \u767b\u5f55 \u601d\u8def login . jsp -> LoginServlet \u767b\u5f55\u5931\u8d25\u8df3\u8f6c\u56de login . jsp -> admin . jsp \u672a\u767b\u5f55\u8df3\u8f6c\u56de login . jsp \u4f7f\u7528 session \u5173\u95ed\u6d4f\u89c8\u5668\u540e\u5c31\u6d88\u5931 \u53ef\u4ee5\u4f7f\u7528 cookie \u8bbe\u7f6e\u4fdd\u5b58\u65f6\u957f\uff0c\u6301\u4e45\u5316\u5230\u6d4f\u89c8\u5668\u4e2d login.jsp <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <% // \u5982\u679c\u6709msg\u5c31\u663e\u793a String msg = ( String ) session . getAttribute ( \"msg\" ); if ( msg == null ){ msg = \"\" ; } %> <h2> \u767b\u5f55 </h2> <div style= \"color: red\" > <%= msg %> </div> <% // \u6e05\u7a7asession\u4e2d\u7684msg session . removeAttribute ( \"msg\" ); %> <form action= \"/demo/login\" method= \"post\" > <input type= \"text\" name= \"username\" ><br/> <input type= \"text\" name= \"password\" ><br/> <input type= \"submit\" > </form> LoginServlet.java package com.pengshiyu.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.* ; import java.io.IOException ; public class LoginServlet extends HttpServlet { @Override protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { String username = request . getParameter ( \"username\" ); String password = request . getParameter ( \"password\" ); HttpSession session = request . getSession (); if ( \"admin\" . equals ( username ) && \"123456\" . equals ( password )) { session . setAttribute ( \"username\" , username ); // \u6dfb\u52a0Cookie Cookie cookie = new Cookie ( \"username\" , username ); cookie . setMaxAge ( 60 * 60 * 24 ); // \u4fdd\u5b58\u4e00\u5929 response . addCookie ( cookie ); response . sendRedirect ( \"session/admin.jsp\" ); } else { session . setAttribute ( \"msg\" , \"\u8d26\u53f7\u6216\u5bc6\u7801\u4e0d\u6b63\u786e\" ); response . sendRedirect ( \"session/login.jsp\" ); } } } admin.jsp <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <% // \u4ecesession\u4e2d\u83b7\u53d6 // String username =(String)session.getAttribute(\"username\"); // \u4ececookie\u4e2d\u83b7\u53d6 String username = null ; Cookie [] cookies = request . getCookies (); for ( Cookie c : cookies ){ if ( c . getName (). equals ( \"username\" )){ username = c . getValue (); break ; } } if ( username == null ){ request . getSession (). setAttribute ( \"msg\" , \"\u7528\u6237\u672a\u767b\u5f55\" ); response . sendRedirect ( \"login.jsp\" ); } %> <h2> \u6b22\u8fce <%= username %> </h2> \u8bfe\u65f6 14 HttpSession \u539f\u7406 sessionId \u4fdd\u5b58\u5230 cookie \u4e2d request . getSession ( false ) // \u4e0d\u4f1a\u521b\u5efasessionId request . getSession ( true ) // \u4f1a\u521b\u5efasessionId request . getSession () // \u4f1a\u521b\u5efasessionId \u8bfe\u65f6 15 \u914d\u7f6e session \u6700\u5927\u4e0d\u6d3b\u52a8\u65f6\u95f4 public interface HttpSession { long getCreationTime (); String getId (); // \u83b7\u53d6sessionId long getLastAccessedTime (); ServletContext getServletContext (); // \u8bbe\u7f6e\u6700\u5927\u4e0d\u6d3b\u52a8\u65f6\u95f4\uff0c\u9ed8\u8ba430\u5206\u949f void setMaxInactiveInterval ( int var1 ); int getMaxInactiveInterval (); // \u8ba9session\u5931\u6548 void invalidate (); // \u67e5\u770b\u662f\u5426\u4e3a\u65b0\u7684\uff0c\u5224\u65ad\u5ba2\u6237\u7aef\u7b2c\u4e00\u6b21\u8bf7\u6c42 boolean isNew (); Enumeration < String > getAttributeNames (); Object getAttribute ( String var1 ); void setAttribute ( String var1 , Object var2 ); void removeAttribute ( String var1 ); } web.xml \u4e2d\u914d\u7f6e session \u6700\u5927\u4e0d\u6d3b\u52a8\u65f6\u95f4 <session-config> <!-- \u5355\u4f4d\uff1a\u5206\u949f --> <session-timeout> 30 </session-timeout> </session-config> \u8bfe\u65f6 16 session \u4e4b url \u91cd\u5199 \u5982\u679c\u6d4f\u89c8\u5668\u7684 cookie \u88ab\u7981\u7528\u4e86\uff0c\u53ef\u4ee5\u5c06 sessionId \u5728 url \u53c2\u6570\u4e2d\u4f20\u9012 // \u5982\u679ccookie\u4e2d\u6ca1\u6709\u4f1a\u52a0\u5230url\u4e0a response . encodeURL () \u7b2c 4 \u7ae0 \uff1a \u9a8c\u8bc1\u7801 \u8bfe\u65f6 17 \u751f\u6210\u56fe\u7247(VerfiyCode \u7c7b) package util ; import javax.imageio.ImageIO ; import java.awt.* ; import java.awt.image.BufferedImage ; import java.io.FileOutputStream ; import java.io.IOException ; public class ImageUtil { public static void main ( String [] args ) throws IOException { // \u521b\u5efa\u56fe\u7247\u7f13\u51b2\u533a BufferedImage bi = new BufferedImage ( 50 , 50 , BufferedImage . TYPE_3BYTE_BGR ); // \u5f97\u5230\u7ed8\u5236\u73af\u5883 Graphics2D g = ( Graphics2D ) bi . getGraphics (); // \u8bbe\u7f6e\u767d\u8272 g . setColor ( Color . WHITE ); // \u7ed8\u5236\u77e9\u5f62\uff0c\u76f8\u5f53\u4e8e\u7ed8\u5236\u80cc\u666f\u8272 g . fillRect ( 0 , 0 , 50 , 50 ); // \u8bbe\u7f6e\u7ea2\u8272 g . setColor ( Color . RED ); // \u5199\u5b57 g . drawString ( \"hello\" , 2 , 35 ); // \u4fdd\u5b58\u8f93\u51fa ImageIO . write ( bi , \"JPEG\" , new FileOutputStream ( \"1.jpg\" )); } } \u7ed3\u5408\u767b\u5f55\u9a8c\u8bc1\u7684\u5b8c\u6574\u4ee3\u7801 login . jsp ( VerifyCodeServlet ) -> LoginServlet -> admin . jsp login.jsp <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <% String msg = ( String ) session . getAttribute ( \"msg\" ); if ( msg == null ){ msg = \"\" ; } %> <h2> \u767b\u5f55 </h2> <div style= \"color: red\" > <%= msg %> </div> <% // \u6e05\u7a7asession session . removeAttribute ( \"msg\" ); %> <form action= \"/demo/login\" method= \"post\" > \u7528\u6237\u540d\uff1a <input type= \"text\" name= \"username\" ><br/> \u5bc6\u7801\uff1a <input type= \"text\" name= \"password\" ><br/> \u9a8c\u8bc1\u7801\uff1a <input type= \"text\" name= \"verify_code\" > <img src= \"/demo/code\" id= \"code\" > <a href= \"javascript:changeImage()\" > \u6362\u4e00\u5f20 </a> <br/> <input type= \"submit\" > </form> <script> function changeImage(){ let code = document.getElementById(\"code\"); code.src = \"/demo/code?\" + new Date().getTime(); } </script> admin.jsp <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <% // \u4ecesession\u4e2d\u83b7\u53d6 // String username =(String)session.getAttribute(\"username\"); // \u4ececookie\u4e2d\u83b7\u53d6 String username = null ; Cookie [] cookies = request . getCookies (); if ( cookies != null ){ for ( Cookie c : cookies ){ if ( c . getName (). equals ( \"username\" )){ username = c . getValue (); break ; } } } if ( username == null ){ request . getSession (). setAttribute ( \"msg\" , \"\u7528\u6237\u672a\u767b\u5f55\" ); response . sendRedirect ( \"login.jsp\" ); } %> <h2> \u6b22\u8fce <%= username %> </h2> LoginServlet.java package com.pengshiyu.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.* ; import java.io.IOException ; public class LoginServlet extends HttpServlet { @Override protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { String username = request . getParameter ( \"username\" ); String password = request . getParameter ( \"password\" ); String verifyCode = request . getParameter ( \"verify_code\" ); HttpSession session = request . getSession (); String code = ( String ) session . getAttribute ( \"code\" ); // \u9a8c\u8bc1\u7801\u6821\u9a8c if (! code . equalsIgnoreCase ( verifyCode )){ session . setAttribute ( \"msg\" , \"\u9a8c\u8bc1\u7801\u4e0d\u6b63\u786e\" ); response . sendRedirect ( \"session/login.jsp\" ); return ; } if ( \"admin\" . equals ( username ) && \"123456\" . equals ( password )) { session . setAttribute ( \"username\" , username ); // \u6dfb\u52a0Cookie Cookie cookie = new Cookie ( \"username\" , username ); cookie . setMaxAge ( 60 * 60 * 24 ); // \u4fdd\u5b58\u4e00\u5929 response . addCookie ( cookie ); response . sendRedirect ( \"session/admin.jsp\" ); } else { session . setAttribute ( \"msg\" , \"\u8d26\u53f7\u6216\u5bc6\u7801\u4e0d\u6b63\u786e\" ); response . sendRedirect ( \"session/login.jsp\" ); } } } VerifyCodeServlet.java package com.pengshiyu.servlet ; import util.ImageUtil ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class VerifyCodeServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { String code = ImageUtil . getVerifyCode ( 4 ); request . getSession (). setAttribute ( \"code\" , code ); ImageUtil . writeImage ( code , response . getOutputStream ()); } } ImageUtil.java package util ; import javax.imageio.ImageIO ; import java.awt.* ; import java.awt.image.BufferedImage ; import java.io.FileOutputStream ; import java.io.IOException ; import java.io.OutputStream ; import java.util.Random ; public class ImageUtil { public static void writeImage ( String text , OutputStream output ) throws IOException { // \u521b\u5efa\u56fe\u7247\u7f13\u51b2\u533a BufferedImage bi = new BufferedImage ( 50 , 20 , BufferedImage . TYPE_3BYTE_BGR ); // \u5f97\u5230\u7ed8\u5236\u73af\u5883 Graphics2D g = ( Graphics2D ) bi . getGraphics (); // \u8bbe\u7f6e\u767d\u8272 g . setColor ( Color . WHITE ); // \u7ed8\u5236\u77e9\u5f62\uff0c\u76f8\u5f53\u4e8e\u7ed8\u5236\u80cc\u666f\u8272 g . fillRect ( 0 , 0 , 50 , 20 ); // \u8bbe\u7f6e\u7ea2\u8272 g . setColor ( Color . RED ); // \u5199\u5b57 g . drawString ( text , 8 , 16 ); // \u4fdd\u5b58\u8f93\u51fa ImageIO . write ( bi , \"JPEG\" , output ); } public static String getVerifyCode ( int length ){ String code = \"1234567890\" ; StringBuilder sb = new StringBuilder (); Random random = new Random (); for ( int i = 0 ; i < length ; i ++){ int index = random . nextInt ( code . length ()); sb . append ( code . substring ( index , index + 1 )); } return sb . toString (); } public static void main ( String [] args ) throws IOException { ImageUtil . writeImage ( ImageUtil . getVerifyCode ( 4 ), new FileOutputStream ( \"1.jpg\" )); } } \u7b2c 5 \u7ae0 \uff1a JSP \u6307\u4ee4 \u8bfe\u65f6 19 page \u6307\u4ee4 page include \u9759\u6001\u5305\u542b taglib \u5bfc\u5165\u6807\u7b7e\u5e93 \u6307\u4ee4\u683c\u5f0f <% @\u6307\u4ee4\u540d attr1 = \"\" attr2 = \"\" %> \u4e00\u822c\u653e\u5728\u6587\u4ef6\u6700\u4e0a\u65b9\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a page <% @page language = \"java\" import = \"java.util.*,java.net.*\" pageEncoding = \"UTF-8\" contentType = \"text/html; charset=utf-8\" errorPage = \"errorPage.jsp\" %> pageEncoding \u6307\u5b9a\u9875\u9762\u7f16\u7801 contentType \u54cd\u5e94\u5934 \u5982\u679c\u4e24\u4e2a\u53c2\u6570\u53ea\u6709\u4e00\u4e2a\uff0c\u90a3\u4e48\u9ed8\u8ba4\u4e3a\u8bbe\u7f6e\u7684\u90a3\u4e2a \u5982\u679c\u4e24\u4e2a\u53c2\u6570\u90fd\u6ca1\u6709\u8bbe\u7f6e\uff0c\u90a3\u4e48\u9ed8\u8ba4\u4e3a iso import \u5bfc\u5305\uff0c\u53ef\u4ee5\u51fa\u73b0\u591a\u6b21 errorPage \u9875\u9762\u51fa\u9519\u8df3\u8f6c isErrorPage=\"true\" \u662f\u5426\u4e3a\u5904\u7406\u9519\u8bef\u7684\u9875\u9762\uff0c\u4f1a\u8bbe\u7f6e\u72b6\u6001\u7801\u4e3a 500,\u53ef\u4ee5\u4f7f\u7528 exception eg: exception . printStackTrace ( response . getWriter ()); web.xml \u914d\u7f6e\u9519\u8bef\u9875\u9762 <error-page> <error-code> 404 </error-code> <location> /error404.jsp </location> </error-page> <error-page> <error-code> 500 </error-code> <location> /error500.jsp </location> </error-page> <error-page> <excepiton-type> java.lang.RuntimeException </excepiton-type> <location> /error.jsp </location> </error-page> autoFlush \u6307\u5b9a\u7f13\u51b2\u533a\u6ee1\u65f6\u662f\u5426\u81ea\u52a8\u5237\u65b0 buffer \u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u9ed8\u8ba4 8kb isELIgnored \u662f\u5426\u5ffd\u7565 EL \u8868\u8fbe\u5f0f\uff0c\u9ed8\u8ba4\u4e3a false\uff0c\u4e0d\u5ffd\u7565 \u57fa\u672c\u4e0d\u7528 language \u6307\u5b9a\u5f53\u524d jsp \u7f16\u8bd1\u540e\u7684\u8bed\u8a00\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3a java extends \u6307\u5b9a\u5f53\u524d\u9875\u9762\u751f\u6210 Servlet \u7684\u7236\u7c7b isThreadSafe \u662f\u5426\u652f\u6301\u5e76\u53d1\u8bbf\u95ee \u9ed8\u8ba4\u4e3a false\uff0c\u4e3a true \u5df2\u8fc7\u65f6 info \u4fe1\u606f session \u662f\u5426\u652f\u6301 session\uff0c\u5982\u679c\u4e3a false\uff0c\u5c31\u6ca1\u6709 session \u5bf9\u8c61 \u8bfe\u65f6 20 pageContext \u5bf9\u8c61 9 \u5927\u5185\u7f6e\u5bf9\u8c61 out JspWriter response.getWriter() \u53d1\u9001\u6587\u672c\u6570\u636e config ServletConfig this.ServletConfig page this,\u5f53\u524d jsp \u5bf9\u8c61 pageContext \u9875\u9762\u4e0a\u4e0b\u6587\u5bf9\u8c61 \u4e00\u4e2a\u9876 9 \u4e2a exception \u53ea\u6709\u5728\u9519\u8bef\u9875\u9762\u4e2d\u4f7f\u7528 request HttpServletRequest response HttpServletResponse application ServletContext session HttpSession Servlet \u4e2d\u6709\u5927\u4e2a\u57df\u5bf9\u8c61\uff0c JSP \u4e2d\u6709\u56db\u4e2a\u57df\u5bf9\u8c61\uff1a ServletContext \u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f session \u6574\u4e2a\u4f1a\u8bdd\uff0c\u4e00\u4e2a\u4f1a\u8bdd\u4e2d\u53ea\u6709\u4e00\u4e2a\u7528\u6237 request \u4e00\u4e2a\u8bf7\u6c42\u94fe pageContext \u4e00\u4e2a jsp \u9875\u9762\uff0c\u5f53\u524d\u9875\u9762\u6807\u7b7e\u4e4b\u95f4\u5171\u4eab\u6570\u636e // \u4ee3\u7406\u5176\u4ed6\u57df\u5bf9\u8c61 pageContext . setAttribute ( \"key\" , \"value\" , PageContext . SESSION_SCOPE ) // \u5168\u57df\u67e5\u627e\uff0c\u4ece\u5c0f\u5230\u5927page\u3001request\u3001response\u3001application pageContext . findAttribute ( \"key\" ); // \u83b7\u53d6\u5176\u4ed6\u5185\u7f6e\u5bf9\u8c61 \u8bfe\u65f6 21 include \u548c taglib \u6307\u4ee4 1\u3001include \u9759\u6001\u5305\u542b jsp \u7f16\u8bd1\u6210 java \u6587\u4ef6\u65f6\u5b8c\u6210 <% @ include file = \" demo.jsp \" %> 2\u3001tablib \u5bfc\u5165\u6807\u7b7e\u5e93 <% @taglib prefix = \"s\" uri = \"/tags\" %> <s:text> prefix \u6307\u5b9a\u6807\u7b7e\u5e93\u524d\u7f00 uri \u6307\u5b9a\u6807\u7b7e\u5e93\u4f4d\u7f6e \u7b2c 6 \u7ae0 \uff1a JSP \u52a8\u4f5c\u6807\u7b7e \u8bfe\u65f6 22 JSP \u52a8\u4f5c\u6807\u7b7e <jsp:forword> \u8f6c\u53d1 RequestDispatcher.forword <jsp:include> \u5305\u542b RequestDispatcher.include <jsp:param> \u4f20\u9012\u53c2\u6570 a.jsp \u52a8\u6001\u5305\u542b b.jsp\uff0c\u5e76\u4f20\u9012\u53c2\u6570 <jsp:forward page=\"b.jsp\"> <jsp:param name= \"key1\" value= \"value1\" ></jsp:param> <jsp:param name= \"key2\" value= \"value2\" ></jsp:param> </jsp:forward> b.jsp <%= request . getParameter ( \"key1\" ) %> <%= request . getParameter ( \"key2\" ) %> \u8bfe\u65f6 23 JSP \u5728 web.xml \u4e2d\u4e5f\u53ef\u4ee5\u914d\u7f6e \u5f00\u53d1\u81ea\u52a8\u91cd\u542f tomcat/conf/context.xml <Context reloadable= \"true\" > </Context>","title":"11-JSP \u5feb\u901f\u5165\u95e8"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#11-jsp","text":"","title":"11-JSP \u5feb\u901f\u5165\u95e8"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#1-jsp","text":"","title":"\u7b2c 1 \u7ae0 \uff1a JSP \u5165\u95e8"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#1-jsp_1","text":"Java Server Pages jsp \u672c\u8d28\u5c31\u662f Servlet jsp\uff1a\u5728\u539f\u6709 html \u57fa\u7840\u4e0a\u6dfb\u52a0 java \u811a\u672c \u5206\u5de5\uff1a jsp \u663e\u793a\u6570\u636e servlet \u5904\u7406\u6570\u636e jsp -> servlet -> jsp jsp \u7ec4\u6210\uff1a 1\u3001html + java \u811a\u672c + jsp \u6807\u7b7e\uff08\u6307\u4ee4\uff09 2\u30019 \u4e2a\u5185\u7f6e\u5bf9\u8c61\uff1a request response session application pageContext config out page exception 3\u30013 \u79cd\u811a\u672c <% %> Java\u4ee3\u7801\u7247\u6bb5\uff0c\u591a\u6761\u4ee3\u7801 <%=%> Java\u8868\u8fbe\u5f0f\uff0c\u4e00\u6761\u4ee3\u7801 <% ! %> \u58f0\u660e\u6210\u5458","title":"\u8bfe\u65f6 1 JSP \u5165\u95e8"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#2-jsp-java","text":"html \u4e2d\u7684 base \u6807\u7b7e <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <% // java\u8bed\u53e5 String basePath = request . getScheme () + \"://\" + request . getServerName () + \":\" + request . getServerPort () + request . getContextPath (); // http://localhost:8080/demo %> <%= basePath %> <% // \u7b49\u4ef7\u4e8e out . print ( basePath ); %> <br/> <%! // \u6210\u5458\u53d8\u91cf int a = 5 ; // \u6210\u5458\u65b9\u6cd5 public void getValue (){ System . out . print ( \"hi\" ); } %> <% int a = 10 ; // \u5c40\u90e8\u53d8\u91cf %> \u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf: <%= a %> \u8bbf\u95ee\u6210\u5458\u53d8\u91cf: <%=this . a %> <% // \u8c03\u7528\u6210\u5458\u65b9\u6cd5 getValue (); %> \u5217\u8868\u5faa\u73af <ol> <% for ( int i = 0 ; i < 10 ; i ++){ %> <li> <%= i %> </li> <% } %> </ol>","title":"\u8bfe\u65f6 2 JSP \u4e2d Java \u811a\u672c\u7684\u6f14\u793a"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#3-jsp-servlet","text":"\u8ba1\u7b97\u5668\u793a\u4f8b \u83b7\u53d6\u8868\u5355\u6570\u636e form.jsp \u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210 int \u7c7b\u578b \u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\u5f97\u5230\u7ed3\u679c \u4fdd\u5b58\u6570\u636e\u7ed3\u679c\u5230 request \u4e2d \u8f6c\u53d1\u5230 result.jsp \u5904\u7406\u6d41\u7a0b form . jsp -> servlet -> result . jsp \u4ee3\u7801\u6587\u4ef6 form.jsp < form action = \"calculate\" method = \"post\" > < input type = \"text\" name = \"num1\" /> < input type = \"text\" name = \"num2\" /> < input type = \"submit\" /> </ form > CalculateServlet.java package com.pengshiyu.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class CalculateServlet extends HttpServlet { @Override protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { // \u83b7\u53d6\u53c2\u6570 String s1 = request . getParameter ( \"num1\" ); String s2 = request . getParameter ( \"num2\" ); // \u7c7b\u578b\u8f6c\u6362 int num1 = Integer . parseInt ( s1 ); int num2 = Integer . parseInt ( s2 ); // \u6c42\u548c int result = num1 + num2 ; // \u8d4b\u503c request . setAttribute ( \"result\" , result ); // \u8f6c\u53d1 request . getRequestDispatcher ( \"/result.jsp\" ). forward ( request , response ); } } result.jsp <%= request . getAttribute ( \"result\" ) %>","title":"\u8bfe\u65f6 3 JSP \u548c Servlet \u5206\u5de5\u7684\u6848\u4f8b"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#4-jsp","text":"jsp \u662f\u4e00\u4e2a\u7279\u6b8a\u7684 servlet \u7b2c\u4e00\u6b21\u8bbf\u95ee jsp \u9875\u9762\u65f6\uff0c\u670d\u52a1\u5668\u4f1a\u628a jsp \u7f16\u8bd1\u6210 java \u6587\u4ef6\uff0c\u4e00\u4e2a servlet \u7c7b \u518d\u628a.java \u6587\u4ef6\u7f16\u8bd1\u6210.class \u6587\u4ef6 \u521b\u5efa\u8be5\u7c7b\u5bf9\u8c61 \u6700\u540e\u8c03\u7528\u5b83\u7684 service()\u65b9\u6cd5 \u7b2c\u4e8c\u6b21\u8bbf\u95ee\u540c\u4e00\u4e2a jsp \u9875\u9762\u65f6\uff0c\u76f4\u63a5\u8c03\u7528 service()\u65b9\u6cd5 \u6d41\u7a0b\u56fe \u7b2c\u4e00\u6b21\u8bbf\u95ee\uff1a \u5ba2\u6237\u7aef -> \u670d\u52a1\u5668 -> jsp -> java -> class -> \u521b\u5efa Servlet\u5bf9\u8c61 -> \u8c03\u7528 service () \u65b9\u6cd5 \u7b2c\u4e8c\u6b21\u4e4b\u540e\u8bbf\u95ee\uff1a \u5ba2\u6237\u7aef -> \u670d\u52a1\u5668 -> jsp -> \u8c03\u7528 service () \u65b9\u6cd5 jsp \u7f16\u8bd1\u4e3a java \u7c7b jsp java\u7c7b =============================================== \u5934 \u5b9a\u4e499\u4e2a\u5185\u7f6e\u5bf9\u8c61 \u4e3a9\u4e2a\u5185\u7f6e\u5bf9\u8c61\u8d4b\u503c =============================================== \u4f53 html out.write() <% %> \u539f\u6837\u642c\u8fd0 <%=%> out.print() <% ! %> \u58f0\u660e\u6210\u5458 <%- - - -%> \u6ce8\u91ca\u4e0d\u505a\u7ffb\u8bd1 =============================================== \u5c3e \u505a\u5f02\u5e38\u5904\u7406","title":"\u8bfe\u65f6 4 JSP \u7684\u539f\u7406"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#5-jsp","text":"<!-- --> html\u6ce8\u91ca <%- - - -%> jsp\u6ce8\u91ca\uff0c\u4e0d\u4f1a\u8f93\u51fa\u5230html\u6587\u4ef6\u4e2d","title":"\u8bfe\u65f6 5 JSP \u4e2d\u7684\u6ce8\u91ca"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#2-cookie","text":"","title":"\u7b2c 2 \u7ae0 \uff1a Cookie \u5904\u7406"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#6-cookie","text":"Cookie \u662f http \u534f\u8bae \u7531\u670d\u52a1\u5668\u521b\u5efa\u4fdd\u5b58\u5230\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u7684\u4e00\u4e2a\u952e\u503c\u5bf9 \u670d\u52a1\u5668\u54cd\u5e94\u5934 Set-Cookie : key1 = value1 ; key2 = valu2 \u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u4e0b\u6b21\u8bf7\u6c42\u65f6\u4f1a\u5e26\u4e0a Cookie \u5ba2\u6237\u7aef\u8bf7\u6c42\u5934 Cookie : key1 = value1 ; key2 = valu2 \u89c4\u5b9a\uff1a 1 \u4e2a Cookie \u6700\u5927 4kb \u4e00\u4e2a\u670d\u52a1\u5668\u6700\u591a\u7ed9\u4e00\u4e2a\u6d4f\u89c8\u5668 20 \u4e2a cookie \u4e00\u4e2a\u6d4f\u89c8\u5668\u6700\u591a\u4fdd\u5b58 300 \u4e2a cookie \u7528\u9014\uff1a \u670d\u52a1\u5668\u8ddf\u8e2a\u5ba2\u6237\u7aef\u72b6\u6001 \u8d2d\u7269\u8f66 JavaWeb \u4e2d\u4f7f\u7528\uff1a \uff08 1 \uff09\u539f\u59cb\u65b9\u6cd5 response\u53d1\u9001Set - Cookie\u54cd\u5e94\u5934 request\u83b7\u53d6Cookie\u8bf7\u6c42\u5934 \uff08 2 \uff09\u4fbf\u6377\u65b9\u6cd5 response . addCookie () request . getCookies () \u793a\u4f8b setCookie.jsp <h2> \u8bbe\u7f6eCookie </h2> <% Cookie cookie = new Cookie ( \"key\" , \"value\" ); response . addCookie ( cookie ); %> getCookie.jsp <h2> \u83b7\u53d6Cookie </h2> <% Cookie [] cookies = request . getCookies (); if ( cookies != null ){ for ( Cookie c : cookies ){ out . print ( c . getName () + \": \" + c . getValue ()); } } %>","title":"\u8bfe\u65f6 6 Cookie \u5165\u95e8"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#7-cookie","text":"maxAge\uff1aCookie \u4fdd\u5b58\u7684\u6700\u5927\u65f6\u95f4\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d maxAge > 0 \u4f1a\u4fdd\u5b58\u5230\u5ba2\u6237\u7aef\u786c\u76d8 maxAge < 0 \u53ea\u4f1a\u5728\u5185\u5b58\u4e2d\uff0c\u6d4f\u89c8\u5668\u5173\u95ed\u5c31\u5220\u9664 maxAge = 0 \u5220\u9664 cookie eg : cookie . setMaxAge ( 60 )","title":"\u8bfe\u65f6 7 Cookie \u7684\u751f\u547d"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#8-cookie","text":"path \u8bbe\u7f6e\u9700\u8981\u5f52\u8fd8\u7684 cookie \u4f5c\u7528\u57df \u9ed8\u8ba4\u503c\u4e3a\u5f53\u524d\u8def\u5f84\u7684\u7236\u7ea7\u76ee\u5f55 eg : cookie . setPath ( '/' ) eg : cookieA / demo cookieB /demo/jsp/ cookieC /demo/jsp/html/ /demo/i ndex . jsp -> cookieA /demo/jsp/i ndex . jsp -> cookieA \u3001 cookieB /demo/jsp/html/i ndex . jsp -> cookieA \u3001 cookieB \u3001 cookieC","title":"\u8bfe\u65f6 8 Cookie \u7684\u8def\u5f84"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#9-cookie","text":"domain \u6307\u5b9a\u5171\u4eab\u57df\u540d eg : cookie . setDomain ( '.baidu.com' ) cookie . setPath ( '/' ) \u5171\u4eab\uff1a www . baidu . com \u3001 zhidao . baidu . com","title":"\u8bfe\u65f6 9 Cookie \u7684\u57df"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#3-httpsession","text":"","title":"\u7b2c 3 \u7ae0 \uff1a HttpSession"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#10-httpsession","text":"HttpSession \u7528\u4e8e\u4f1a\u8bdd\u8ddf\u8e2a\uff0c\u4fdd\u5b58\u5728\u670d\u52a1\u5668\u7aef 1\u3001Servlet \u4e09\u5927\u57df\u5bf9\u8c61: request session application 2\u3001HttpSession \u5e95\u5c42\u4f9d\u8d56: Cookie \u6216\u662f Url \u91cd\u5199 3\u3001\u4f1a\u8bdd\u8303\u56f4 \u7528\u6237\u9996\u6b21\u8bbf\u95ee\u670d\u52a1\u5668\u5f00\u59cb\uff0c\u5230\u8be5\u7528\u6237\u5173\u95ed\u6d4f\u89c8\u5668\u7ed3\u675f 4\u3001Servlet \u4e2d\u83b7\u53d6 session HttpSession = request . getSession () 5\u3001jsp \u4e2d\u7684 session \u662f\u5185\u7f6e\u5bf9\u8c61\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 <% void session . setAttribute ( String name , String value ); Object session . getAttribute ( String name ); void session . getAttribute ( String name ); %>","title":"\u8bfe\u65f6 10 HttpSession \u5165\u95e8"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#11-12-httpsession","text":"\u521b\u5efa\u548c\u83b7\u53d6 session setSession.jsp \u521b\u5efa session <h2> \u8bbe\u7f6eSession </h2> <% session . setAttribute ( \"name\" , \"Tom\" ); %> getSession.jsp \u83b7\u53d6 session <h2> \u83b7\u53d6Session </h2> <%= session . getAttribute ( \"name\" ) %>","title":"\u8bfe\u65f6 11-12 HttpSession \u7b2c\u4e00\u4f8b"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#13-httpsession","text":"\u767b\u5f55 \u601d\u8def login . jsp -> LoginServlet \u767b\u5f55\u5931\u8d25\u8df3\u8f6c\u56de login . jsp -> admin . jsp \u672a\u767b\u5f55\u8df3\u8f6c\u56de login . jsp \u4f7f\u7528 session \u5173\u95ed\u6d4f\u89c8\u5668\u540e\u5c31\u6d88\u5931 \u53ef\u4ee5\u4f7f\u7528 cookie \u8bbe\u7f6e\u4fdd\u5b58\u65f6\u957f\uff0c\u6301\u4e45\u5316\u5230\u6d4f\u89c8\u5668\u4e2d login.jsp <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <% // \u5982\u679c\u6709msg\u5c31\u663e\u793a String msg = ( String ) session . getAttribute ( \"msg\" ); if ( msg == null ){ msg = \"\" ; } %> <h2> \u767b\u5f55 </h2> <div style= \"color: red\" > <%= msg %> </div> <% // \u6e05\u7a7asession\u4e2d\u7684msg session . removeAttribute ( \"msg\" ); %> <form action= \"/demo/login\" method= \"post\" > <input type= \"text\" name= \"username\" ><br/> <input type= \"text\" name= \"password\" ><br/> <input type= \"submit\" > </form> LoginServlet.java package com.pengshiyu.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.* ; import java.io.IOException ; public class LoginServlet extends HttpServlet { @Override protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { String username = request . getParameter ( \"username\" ); String password = request . getParameter ( \"password\" ); HttpSession session = request . getSession (); if ( \"admin\" . equals ( username ) && \"123456\" . equals ( password )) { session . setAttribute ( \"username\" , username ); // \u6dfb\u52a0Cookie Cookie cookie = new Cookie ( \"username\" , username ); cookie . setMaxAge ( 60 * 60 * 24 ); // \u4fdd\u5b58\u4e00\u5929 response . addCookie ( cookie ); response . sendRedirect ( \"session/admin.jsp\" ); } else { session . setAttribute ( \"msg\" , \"\u8d26\u53f7\u6216\u5bc6\u7801\u4e0d\u6b63\u786e\" ); response . sendRedirect ( \"session/login.jsp\" ); } } } admin.jsp <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <% // \u4ecesession\u4e2d\u83b7\u53d6 // String username =(String)session.getAttribute(\"username\"); // \u4ececookie\u4e2d\u83b7\u53d6 String username = null ; Cookie [] cookies = request . getCookies (); for ( Cookie c : cookies ){ if ( c . getName (). equals ( \"username\" )){ username = c . getValue (); break ; } } if ( username == null ){ request . getSession (). setAttribute ( \"msg\" , \"\u7528\u6237\u672a\u767b\u5f55\" ); response . sendRedirect ( \"login.jsp\" ); } %> <h2> \u6b22\u8fce <%= username %> </h2>","title":"\u8bfe\u65f6 13 HttpSession \u7b2c\u4e8c\u4f8b"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#14-httpsession","text":"sessionId \u4fdd\u5b58\u5230 cookie \u4e2d request . getSession ( false ) // \u4e0d\u4f1a\u521b\u5efasessionId request . getSession ( true ) // \u4f1a\u521b\u5efasessionId request . getSession () // \u4f1a\u521b\u5efasessionId","title":"\u8bfe\u65f6 14 HttpSession \u539f\u7406"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#15-session","text":"public interface HttpSession { long getCreationTime (); String getId (); // \u83b7\u53d6sessionId long getLastAccessedTime (); ServletContext getServletContext (); // \u8bbe\u7f6e\u6700\u5927\u4e0d\u6d3b\u52a8\u65f6\u95f4\uff0c\u9ed8\u8ba430\u5206\u949f void setMaxInactiveInterval ( int var1 ); int getMaxInactiveInterval (); // \u8ba9session\u5931\u6548 void invalidate (); // \u67e5\u770b\u662f\u5426\u4e3a\u65b0\u7684\uff0c\u5224\u65ad\u5ba2\u6237\u7aef\u7b2c\u4e00\u6b21\u8bf7\u6c42 boolean isNew (); Enumeration < String > getAttributeNames (); Object getAttribute ( String var1 ); void setAttribute ( String var1 , Object var2 ); void removeAttribute ( String var1 ); } web.xml \u4e2d\u914d\u7f6e session \u6700\u5927\u4e0d\u6d3b\u52a8\u65f6\u95f4 <session-config> <!-- \u5355\u4f4d\uff1a\u5206\u949f --> <session-timeout> 30 </session-timeout> </session-config>","title":"\u8bfe\u65f6 15 \u914d\u7f6e session \u6700\u5927\u4e0d\u6d3b\u52a8\u65f6\u95f4"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#16-session-url","text":"\u5982\u679c\u6d4f\u89c8\u5668\u7684 cookie \u88ab\u7981\u7528\u4e86\uff0c\u53ef\u4ee5\u5c06 sessionId \u5728 url \u53c2\u6570\u4e2d\u4f20\u9012 // \u5982\u679ccookie\u4e2d\u6ca1\u6709\u4f1a\u52a0\u5230url\u4e0a response . encodeURL ()","title":"\u8bfe\u65f6 16 session \u4e4b url \u91cd\u5199"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#4","text":"","title":"\u7b2c 4 \u7ae0 \uff1a \u9a8c\u8bc1\u7801"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#17-verfiycode","text":"package util ; import javax.imageio.ImageIO ; import java.awt.* ; import java.awt.image.BufferedImage ; import java.io.FileOutputStream ; import java.io.IOException ; public class ImageUtil { public static void main ( String [] args ) throws IOException { // \u521b\u5efa\u56fe\u7247\u7f13\u51b2\u533a BufferedImage bi = new BufferedImage ( 50 , 50 , BufferedImage . TYPE_3BYTE_BGR ); // \u5f97\u5230\u7ed8\u5236\u73af\u5883 Graphics2D g = ( Graphics2D ) bi . getGraphics (); // \u8bbe\u7f6e\u767d\u8272 g . setColor ( Color . WHITE ); // \u7ed8\u5236\u77e9\u5f62\uff0c\u76f8\u5f53\u4e8e\u7ed8\u5236\u80cc\u666f\u8272 g . fillRect ( 0 , 0 , 50 , 50 ); // \u8bbe\u7f6e\u7ea2\u8272 g . setColor ( Color . RED ); // \u5199\u5b57 g . drawString ( \"hello\" , 2 , 35 ); // \u4fdd\u5b58\u8f93\u51fa ImageIO . write ( bi , \"JPEG\" , new FileOutputStream ( \"1.jpg\" )); } } \u7ed3\u5408\u767b\u5f55\u9a8c\u8bc1\u7684\u5b8c\u6574\u4ee3\u7801 login . jsp ( VerifyCodeServlet ) -> LoginServlet -> admin . jsp login.jsp <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <% String msg = ( String ) session . getAttribute ( \"msg\" ); if ( msg == null ){ msg = \"\" ; } %> <h2> \u767b\u5f55 </h2> <div style= \"color: red\" > <%= msg %> </div> <% // \u6e05\u7a7asession session . removeAttribute ( \"msg\" ); %> <form action= \"/demo/login\" method= \"post\" > \u7528\u6237\u540d\uff1a <input type= \"text\" name= \"username\" ><br/> \u5bc6\u7801\uff1a <input type= \"text\" name= \"password\" ><br/> \u9a8c\u8bc1\u7801\uff1a <input type= \"text\" name= \"verify_code\" > <img src= \"/demo/code\" id= \"code\" > <a href= \"javascript:changeImage()\" > \u6362\u4e00\u5f20 </a> <br/> <input type= \"submit\" > </form> <script> function changeImage(){ let code = document.getElementById(\"code\"); code.src = \"/demo/code?\" + new Date().getTime(); } </script> admin.jsp <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <% // \u4ecesession\u4e2d\u83b7\u53d6 // String username =(String)session.getAttribute(\"username\"); // \u4ececookie\u4e2d\u83b7\u53d6 String username = null ; Cookie [] cookies = request . getCookies (); if ( cookies != null ){ for ( Cookie c : cookies ){ if ( c . getName (). equals ( \"username\" )){ username = c . getValue (); break ; } } } if ( username == null ){ request . getSession (). setAttribute ( \"msg\" , \"\u7528\u6237\u672a\u767b\u5f55\" ); response . sendRedirect ( \"login.jsp\" ); } %> <h2> \u6b22\u8fce <%= username %> </h2> LoginServlet.java package com.pengshiyu.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.* ; import java.io.IOException ; public class LoginServlet extends HttpServlet { @Override protected void doPost ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { String username = request . getParameter ( \"username\" ); String password = request . getParameter ( \"password\" ); String verifyCode = request . getParameter ( \"verify_code\" ); HttpSession session = request . getSession (); String code = ( String ) session . getAttribute ( \"code\" ); // \u9a8c\u8bc1\u7801\u6821\u9a8c if (! code . equalsIgnoreCase ( verifyCode )){ session . setAttribute ( \"msg\" , \"\u9a8c\u8bc1\u7801\u4e0d\u6b63\u786e\" ); response . sendRedirect ( \"session/login.jsp\" ); return ; } if ( \"admin\" . equals ( username ) && \"123456\" . equals ( password )) { session . setAttribute ( \"username\" , username ); // \u6dfb\u52a0Cookie Cookie cookie = new Cookie ( \"username\" , username ); cookie . setMaxAge ( 60 * 60 * 24 ); // \u4fdd\u5b58\u4e00\u5929 response . addCookie ( cookie ); response . sendRedirect ( \"session/admin.jsp\" ); } else { session . setAttribute ( \"msg\" , \"\u8d26\u53f7\u6216\u5bc6\u7801\u4e0d\u6b63\u786e\" ); response . sendRedirect ( \"session/login.jsp\" ); } } } VerifyCodeServlet.java package com.pengshiyu.servlet ; import util.ImageUtil ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class VerifyCodeServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { String code = ImageUtil . getVerifyCode ( 4 ); request . getSession (). setAttribute ( \"code\" , code ); ImageUtil . writeImage ( code , response . getOutputStream ()); } } ImageUtil.java package util ; import javax.imageio.ImageIO ; import java.awt.* ; import java.awt.image.BufferedImage ; import java.io.FileOutputStream ; import java.io.IOException ; import java.io.OutputStream ; import java.util.Random ; public class ImageUtil { public static void writeImage ( String text , OutputStream output ) throws IOException { // \u521b\u5efa\u56fe\u7247\u7f13\u51b2\u533a BufferedImage bi = new BufferedImage ( 50 , 20 , BufferedImage . TYPE_3BYTE_BGR ); // \u5f97\u5230\u7ed8\u5236\u73af\u5883 Graphics2D g = ( Graphics2D ) bi . getGraphics (); // \u8bbe\u7f6e\u767d\u8272 g . setColor ( Color . WHITE ); // \u7ed8\u5236\u77e9\u5f62\uff0c\u76f8\u5f53\u4e8e\u7ed8\u5236\u80cc\u666f\u8272 g . fillRect ( 0 , 0 , 50 , 20 ); // \u8bbe\u7f6e\u7ea2\u8272 g . setColor ( Color . RED ); // \u5199\u5b57 g . drawString ( text , 8 , 16 ); // \u4fdd\u5b58\u8f93\u51fa ImageIO . write ( bi , \"JPEG\" , output ); } public static String getVerifyCode ( int length ){ String code = \"1234567890\" ; StringBuilder sb = new StringBuilder (); Random random = new Random (); for ( int i = 0 ; i < length ; i ++){ int index = random . nextInt ( code . length ()); sb . append ( code . substring ( index , index + 1 )); } return sb . toString (); } public static void main ( String [] args ) throws IOException { ImageUtil . writeImage ( ImageUtil . getVerifyCode ( 4 ), new FileOutputStream ( \"1.jpg\" )); } }","title":"\u8bfe\u65f6 17 \u751f\u6210\u56fe\u7247(VerfiyCode \u7c7b)"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#5-jsp_1","text":"","title":"\u7b2c 5 \u7ae0 \uff1a JSP \u6307\u4ee4"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#19-page","text":"page include \u9759\u6001\u5305\u542b taglib \u5bfc\u5165\u6807\u7b7e\u5e93 \u6307\u4ee4\u683c\u5f0f <% @\u6307\u4ee4\u540d attr1 = \"\" attr2 = \"\" %> \u4e00\u822c\u653e\u5728\u6587\u4ef6\u6700\u4e0a\u65b9\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a page <% @page language = \"java\" import = \"java.util.*,java.net.*\" pageEncoding = \"UTF-8\" contentType = \"text/html; charset=utf-8\" errorPage = \"errorPage.jsp\" %> pageEncoding \u6307\u5b9a\u9875\u9762\u7f16\u7801 contentType \u54cd\u5e94\u5934 \u5982\u679c\u4e24\u4e2a\u53c2\u6570\u53ea\u6709\u4e00\u4e2a\uff0c\u90a3\u4e48\u9ed8\u8ba4\u4e3a\u8bbe\u7f6e\u7684\u90a3\u4e2a \u5982\u679c\u4e24\u4e2a\u53c2\u6570\u90fd\u6ca1\u6709\u8bbe\u7f6e\uff0c\u90a3\u4e48\u9ed8\u8ba4\u4e3a iso import \u5bfc\u5305\uff0c\u53ef\u4ee5\u51fa\u73b0\u591a\u6b21 errorPage \u9875\u9762\u51fa\u9519\u8df3\u8f6c isErrorPage=\"true\" \u662f\u5426\u4e3a\u5904\u7406\u9519\u8bef\u7684\u9875\u9762\uff0c\u4f1a\u8bbe\u7f6e\u72b6\u6001\u7801\u4e3a 500,\u53ef\u4ee5\u4f7f\u7528 exception eg: exception . printStackTrace ( response . getWriter ()); web.xml \u914d\u7f6e\u9519\u8bef\u9875\u9762 <error-page> <error-code> 404 </error-code> <location> /error404.jsp </location> </error-page> <error-page> <error-code> 500 </error-code> <location> /error500.jsp </location> </error-page> <error-page> <excepiton-type> java.lang.RuntimeException </excepiton-type> <location> /error.jsp </location> </error-page> autoFlush \u6307\u5b9a\u7f13\u51b2\u533a\u6ee1\u65f6\u662f\u5426\u81ea\u52a8\u5237\u65b0 buffer \u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u9ed8\u8ba4 8kb isELIgnored \u662f\u5426\u5ffd\u7565 EL \u8868\u8fbe\u5f0f\uff0c\u9ed8\u8ba4\u4e3a false\uff0c\u4e0d\u5ffd\u7565 \u57fa\u672c\u4e0d\u7528 language \u6307\u5b9a\u5f53\u524d jsp \u7f16\u8bd1\u540e\u7684\u8bed\u8a00\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3a java extends \u6307\u5b9a\u5f53\u524d\u9875\u9762\u751f\u6210 Servlet \u7684\u7236\u7c7b isThreadSafe \u662f\u5426\u652f\u6301\u5e76\u53d1\u8bbf\u95ee \u9ed8\u8ba4\u4e3a false\uff0c\u4e3a true \u5df2\u8fc7\u65f6 info \u4fe1\u606f session \u662f\u5426\u652f\u6301 session\uff0c\u5982\u679c\u4e3a false\uff0c\u5c31\u6ca1\u6709 session \u5bf9\u8c61","title":"\u8bfe\u65f6 19 page \u6307\u4ee4"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#20-pagecontext","text":"9 \u5927\u5185\u7f6e\u5bf9\u8c61 out JspWriter response.getWriter() \u53d1\u9001\u6587\u672c\u6570\u636e config ServletConfig this.ServletConfig page this,\u5f53\u524d jsp \u5bf9\u8c61 pageContext \u9875\u9762\u4e0a\u4e0b\u6587\u5bf9\u8c61 \u4e00\u4e2a\u9876 9 \u4e2a exception \u53ea\u6709\u5728\u9519\u8bef\u9875\u9762\u4e2d\u4f7f\u7528 request HttpServletRequest response HttpServletResponse application ServletContext session HttpSession Servlet \u4e2d\u6709\u5927\u4e2a\u57df\u5bf9\u8c61\uff0c JSP \u4e2d\u6709\u56db\u4e2a\u57df\u5bf9\u8c61\uff1a ServletContext \u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f session \u6574\u4e2a\u4f1a\u8bdd\uff0c\u4e00\u4e2a\u4f1a\u8bdd\u4e2d\u53ea\u6709\u4e00\u4e2a\u7528\u6237 request \u4e00\u4e2a\u8bf7\u6c42\u94fe pageContext \u4e00\u4e2a jsp \u9875\u9762\uff0c\u5f53\u524d\u9875\u9762\u6807\u7b7e\u4e4b\u95f4\u5171\u4eab\u6570\u636e // \u4ee3\u7406\u5176\u4ed6\u57df\u5bf9\u8c61 pageContext . setAttribute ( \"key\" , \"value\" , PageContext . SESSION_SCOPE ) // \u5168\u57df\u67e5\u627e\uff0c\u4ece\u5c0f\u5230\u5927page\u3001request\u3001response\u3001application pageContext . findAttribute ( \"key\" ); // \u83b7\u53d6\u5176\u4ed6\u5185\u7f6e\u5bf9\u8c61","title":"\u8bfe\u65f6 20 pageContext \u5bf9\u8c61"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#21-include-taglib","text":"1\u3001include \u9759\u6001\u5305\u542b jsp \u7f16\u8bd1\u6210 java \u6587\u4ef6\u65f6\u5b8c\u6210 <% @ include file = \" demo.jsp \" %> 2\u3001tablib \u5bfc\u5165\u6807\u7b7e\u5e93 <% @taglib prefix = \"s\" uri = \"/tags\" %> <s:text> prefix \u6307\u5b9a\u6807\u7b7e\u5e93\u524d\u7f00 uri \u6307\u5b9a\u6807\u7b7e\u5e93\u4f4d\u7f6e","title":"\u8bfe\u65f6 21 include \u548c taglib \u6307\u4ee4"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#6-jsp","text":"","title":"\u7b2c 6 \u7ae0 \uff1a JSP \u52a8\u4f5c\u6807\u7b7e"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#22-jsp","text":"<jsp:forword> \u8f6c\u53d1 RequestDispatcher.forword <jsp:include> \u5305\u542b RequestDispatcher.include <jsp:param> \u4f20\u9012\u53c2\u6570 a.jsp \u52a8\u6001\u5305\u542b b.jsp\uff0c\u5e76\u4f20\u9012\u53c2\u6570 <jsp:forward page=\"b.jsp\"> <jsp:param name= \"key1\" value= \"value1\" ></jsp:param> <jsp:param name= \"key2\" value= \"value2\" ></jsp:param> </jsp:forward> b.jsp <%= request . getParameter ( \"key1\" ) %> <%= request . getParameter ( \"key2\" ) %>","title":"\u8bfe\u65f6 22 JSP \u52a8\u4f5c\u6807\u7b7e"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/12-JavaWeb-JSP\u5feb\u901f\u5165\u95e8/#23-jsp-webxml","text":"\u5f00\u53d1\u81ea\u52a8\u91cd\u542f tomcat/conf/context.xml <Context reloadable= \"true\" > </Context>","title":"\u8bfe\u65f6 23 JSP \u5728 web.xml \u4e2d\u4e5f\u53ef\u4ee5\u914d\u7f6e"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/13-JavaWeb-javaBean/","text":"\u7b2c 7 \u7ae0 \uff1a JavaBean \u8bfe\u65f6 24\uff1aJavaBean \u89c4\u8303 \u5fc5\u987b\u8981\u6709\u9ed8\u8ba4\u7684\u6784\u9020\u5668\uff08\u65e0\u53c2\uff09 \u5fc5\u987b\u8981\u4e3a\u6210\u5458\u63d0\u4f9b get/set \u65b9\u6cd5 \u53ea\u63d0\u4f9b\u4e00\u4e2a get \u4e5f\u53ef\u4ee5,\u79f0\u4e3a\u53ea\u8bfb\u5c5e\u6027 \u5bf9\u4e8e\u5177\u6709 get/set \u65b9\u6cd5\u7684\u6210\u5458\u53d8\u91cf\u79f0\u4e4b\u4e3a\u5c5e\u6027 \u5c31\u7b97\u5c5e\u6027\u6ca1\u6709\u5bf9\u5e94\u7684\u6210\u5458\u53d8\u91cf\uff0c\u53ea\u6709 get/set \u65b9\u6cd5\u4e5f\u662f\u53ef\u4ee5\u7684 \u5c5e\u6027\u7684\u540d\u79f0\u5c31\u662f get/set \u65b9\u6cd5\u53bb\u9664 get/set \u4e4b\u540e\u628a\u9996\u5b57\u6bcd\u5c0f\u5199 \u8bfe\u65f6 25 BeanUtils \u7684\u4f7f\u7528 commons-beanutils.jar commons-logging.jar \u914d\u7f6e pom.xml <dependency> <groupId> commons-beanutils </groupId> <artifactId> commons-beanutils </artifactId> <version> 1.9.4 </version> </dependency> <dependency> <groupId> commons-logging </groupId> <artifactId> commons-logging </artifactId> <version> 1.2 </version> </dependency> package com.pengshiyu.bean ; public class Person { private String name ; private int age ; public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getAge () { return age ; } public void setAge ( int age ) { this . age = age ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } import org.apache.commons.beanutils.BeanUtils ; import org.junit.Test ; public class TestPersonBean { @Test public void func1 () throws Exception { String className = \"com.pengshiyu.bean.Person\" ; Class clazz = Class . forName ( className ); Object person = clazz . newInstance (); // \u8bbe\u7f6e\u5c5e\u6027 BeanUtils . setProperty ( person , \"name\" , \"Tom\" ); BeanUtils . setProperty ( person , \"age\" , 23 ); System . out . println ( person ); // Person{name='Tom', age=23} // \u8bfb\u53d6\u5c5e\u6027 String name = BeanUtils . getProperty ( person , \"name\" ); String age = BeanUtils . getProperty ( person , \"age\" ); System . out . println ( \"name:\" + name + \" age: \" + age ); // name:Tom age: 23 } } /** * \u628amap \u6570\u636e\u5199\u5165\u5230bean\u4e2d * @throws Exception */ @Test public void func2 () throws Exception { Map < String , String > map = new HashMap < String , String >(); map . put ( \"name\" , \"Tom\" ); map . put ( \"age\" , \"23\" ); Person person = new Person (); BeanUtils . populate ( person , map ); System . out . println ( person ); // Person{name='Tom', age=23} } \u7b80\u5355\u5c01\u88c5 package util ; import org.apache.commons.beanutils.BeanUtils ; import java.util.Map ; public class CommonUtils { public static < T > T toBean ( Map map , Class < T > clazz ) { try { // \u521b\u5efa\u6307\u5b9a\u7c7b\u578b\u7684javabean\u5bf9\u8c61 T instance = clazz . newInstance (); // \u628a\u6570\u636e\u5c01\u88c5\u5230javabean\u4e2d BeanUtils . populate ( instance , map ); // \u8fd4\u56dejavabean return instance ; } catch ( Exception e ){ throw new RuntimeException ( e ); } } } \u4f7f\u7528 Map < String , String > map = new HashMap < String , String >(); map . put ( \"name\" , \"Tom\" ); map . put ( \"age\" , \"23\" ); Person person = CommonUtils . toBean ( map , Person . class ); System . out . println ( person ); // Person{name='Tom', age=23} \u8bfe\u65f6 26 JSP \u4e2d\u7684 JavaBean \u76f8\u5173\u6807\u7b7e \u76f8\u5173\u6807\u7b7e <jsp:useBean> \u521b\u5efa\u6216\u67e5\u8be2 bean <!-- \u5728page\u57df\u4e2d\u67e5\u627euser1\uff0c\u4e0d\u5b58\u5728\u5219\u521b\u5efa --> <jsp:useBean id=\"user1\" class=\"com.pengshiyu.User\" scope=\"page\" /> <jsp:setProperty> \u8bbe\u7f6e\u5c5e\u6027 <jsp:setProperty name=\"user1\" property=\"username\" value=\"Tom\" /> <jsp:getProperty> \u83b7\u53d6\u5c5e\u6027 <jsp:getProperty name=\"user1\" property=\"username\" />","title":"\u7b2c 7 \u7ae0 \uff1a JavaBean"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/13-JavaWeb-javaBean/#7-javabean","text":"","title":"\u7b2c 7 \u7ae0 \uff1a JavaBean"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/13-JavaWeb-javaBean/#24javabean","text":"\u5fc5\u987b\u8981\u6709\u9ed8\u8ba4\u7684\u6784\u9020\u5668\uff08\u65e0\u53c2\uff09 \u5fc5\u987b\u8981\u4e3a\u6210\u5458\u63d0\u4f9b get/set \u65b9\u6cd5 \u53ea\u63d0\u4f9b\u4e00\u4e2a get \u4e5f\u53ef\u4ee5,\u79f0\u4e3a\u53ea\u8bfb\u5c5e\u6027 \u5bf9\u4e8e\u5177\u6709 get/set \u65b9\u6cd5\u7684\u6210\u5458\u53d8\u91cf\u79f0\u4e4b\u4e3a\u5c5e\u6027 \u5c31\u7b97\u5c5e\u6027\u6ca1\u6709\u5bf9\u5e94\u7684\u6210\u5458\u53d8\u91cf\uff0c\u53ea\u6709 get/set \u65b9\u6cd5\u4e5f\u662f\u53ef\u4ee5\u7684 \u5c5e\u6027\u7684\u540d\u79f0\u5c31\u662f get/set \u65b9\u6cd5\u53bb\u9664 get/set \u4e4b\u540e\u628a\u9996\u5b57\u6bcd\u5c0f\u5199","title":"\u8bfe\u65f6 24\uff1aJavaBean \u89c4\u8303"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/13-JavaWeb-javaBean/#25-beanutils","text":"commons-beanutils.jar commons-logging.jar \u914d\u7f6e pom.xml <dependency> <groupId> commons-beanutils </groupId> <artifactId> commons-beanutils </artifactId> <version> 1.9.4 </version> </dependency> <dependency> <groupId> commons-logging </groupId> <artifactId> commons-logging </artifactId> <version> 1.2 </version> </dependency> package com.pengshiyu.bean ; public class Person { private String name ; private int age ; public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getAge () { return age ; } public void setAge ( int age ) { this . age = age ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } import org.apache.commons.beanutils.BeanUtils ; import org.junit.Test ; public class TestPersonBean { @Test public void func1 () throws Exception { String className = \"com.pengshiyu.bean.Person\" ; Class clazz = Class . forName ( className ); Object person = clazz . newInstance (); // \u8bbe\u7f6e\u5c5e\u6027 BeanUtils . setProperty ( person , \"name\" , \"Tom\" ); BeanUtils . setProperty ( person , \"age\" , 23 ); System . out . println ( person ); // Person{name='Tom', age=23} // \u8bfb\u53d6\u5c5e\u6027 String name = BeanUtils . getProperty ( person , \"name\" ); String age = BeanUtils . getProperty ( person , \"age\" ); System . out . println ( \"name:\" + name + \" age: \" + age ); // name:Tom age: 23 } } /** * \u628amap \u6570\u636e\u5199\u5165\u5230bean\u4e2d * @throws Exception */ @Test public void func2 () throws Exception { Map < String , String > map = new HashMap < String , String >(); map . put ( \"name\" , \"Tom\" ); map . put ( \"age\" , \"23\" ); Person person = new Person (); BeanUtils . populate ( person , map ); System . out . println ( person ); // Person{name='Tom', age=23} } \u7b80\u5355\u5c01\u88c5 package util ; import org.apache.commons.beanutils.BeanUtils ; import java.util.Map ; public class CommonUtils { public static < T > T toBean ( Map map , Class < T > clazz ) { try { // \u521b\u5efa\u6307\u5b9a\u7c7b\u578b\u7684javabean\u5bf9\u8c61 T instance = clazz . newInstance (); // \u628a\u6570\u636e\u5c01\u88c5\u5230javabean\u4e2d BeanUtils . populate ( instance , map ); // \u8fd4\u56dejavabean return instance ; } catch ( Exception e ){ throw new RuntimeException ( e ); } } } \u4f7f\u7528 Map < String , String > map = new HashMap < String , String >(); map . put ( \"name\" , \"Tom\" ); map . put ( \"age\" , \"23\" ); Person person = CommonUtils . toBean ( map , Person . class ); System . out . println ( person ); // Person{name='Tom', age=23}","title":"\u8bfe\u65f6 25 BeanUtils \u7684\u4f7f\u7528"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/13-JavaWeb-javaBean/#26-jsp-javabean","text":"\u76f8\u5173\u6807\u7b7e <jsp:useBean> \u521b\u5efa\u6216\u67e5\u8be2 bean <!-- \u5728page\u57df\u4e2d\u67e5\u627euser1\uff0c\u4e0d\u5b58\u5728\u5219\u521b\u5efa --> <jsp:useBean id=\"user1\" class=\"com.pengshiyu.User\" scope=\"page\" /> <jsp:setProperty> \u8bbe\u7f6e\u5c5e\u6027 <jsp:setProperty name=\"user1\" property=\"username\" value=\"Tom\" /> <jsp:getProperty> \u83b7\u53d6\u5c5e\u6027 <jsp:getProperty name=\"user1\" property=\"username\" />","title":"\u8bfe\u65f6 26 JSP \u4e2d\u7684 JavaBean \u76f8\u5173\u6807\u7b7e"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/14-JavaWeb-EL\u8868\u8fbe\u5f0f\u8bed\u8a00/","text":"\u7b2c 8 \u7ae0 \uff1a EL\uff08\u8868\u8fbe\u5f0f\u8bed\u8a00\uff09\u5165\u95e8\u53ca EL \u51fd\u6570\u5e93 \u8bfe\u65f6 27 EL \u5165\u95e8 EL \u662f JSP \u5185\u7f6e\u7684\u8868\u8fbe\u5f0f\u8bed\u8a00 jsp2.0 \u5f00\u59cb\uff0cEL \u8868\u8fbe\u5f0f\u548c\u52a8\u6001\u6807\u7b7e\u6765\u66ff\u4ee3 java \u811a\u672c EL \u66ff\u4ee3 <%=%> <% pageContext . setAttribute ( \"name\" , \"pageContext\" ); %> <% request . setAttribute ( \"name\" , \"request\" ); %> <% session . setAttribute ( \"name\" , \"session\" ); %> <% application . setAttribute ( \"name\" , \"application\" ); %> <!-- \u5168\u57df\u67e5\u627e --> ${name} <br/> <!-- pageContext --> <!-- \u6307\u5b9a\u57df\u67e5\u627e --> ${requestScope.name} <br/> ${pageScope.name} <br/> ${sessionScope.name} <br/> ${applicationScope.name} <br/> \u8bfe\u65f6 28 EL 11 \u4e2a\u5185\u7f6e\u5bf9\u8c61 \u65e0\u9700\u521b\u5efa\u5373\u53ef\u4f7f\u7528 pageScope requestScope sessionScope applicationScope param paramValues header haderValues iniParam cookie pageContext <jsp:useBean id=\"person\" class=\"com.pengshiyu.bean.Person\" scope=\"page\" /> <jsp:setProperty name=\"person\" property=\"name\" value=\"Tom\" /> <jsp:getProperty name=\"person\" property=\"name\" /> <!-- \u7b49\u4ef7\u4e8e --> ${person.name} 1\u3001param \u548c paramValues param \u83b7\u53d6\u5355\u503c paramValues \u83b7\u53d6\u591a\u503c \u8bf7\u6c42\u5730\u5740 /?name=Tom&numbers=1&numbers=2 ${param.name} ${paramValues.numbers[0]} ${paramValues.numbers[1]} 2\u3001header \u548c haderValues ${header['user-agent']} ${header[\"User-Agent\"]} 3\u3001iniParam iniParam \u53ef\u4ee5\u83b7\u53d6 <context-param> \u914d\u7f6e\u53c2\u6570 <context-param> <param-name> key1 </param-name> <param-value> value1 </param-value> </context-param> <context-param> <param-name> key2 </param-name> <param-value> value2 </param-value> </context-param> 4\u3001cookie <!-- \u83b7\u53d6cookie\u5bf9\u8c61\u518d\u83b7\u53d6\u503c --> ${cookie.JSESSIONID.value} <!-- \u7b49\u4ef7\u4e8e --> ${pageContext.session.id} 5\u3001pageContext ${pageContext.request.contextPath} \u8bfe\u65f6 29 EL \u51fd\u6570\u5e93 \u7531 JSTL \u63d0\u4f9b \u5f15\u4eba <%@ taglib prefix = \"fn\" uri = \"http://java.sun.com/jsp/jstl/functions\" %> \u51fd\u6570 \u51fd\u6570 \u63cf\u8ff0 fn : contains () \u6d4b\u8bd5\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u6307\u5b9a\u7684\u5b50\u4e32 fn : containsIgnoreCase () \u6d4b\u8bd5\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u6307\u5b9a\u7684\u5b50\u4e32\uff0c\u5927\u5c0f\u5199\u4e0d\u654f\u611f fn : endsWith () \u6d4b\u8bd5\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u540e\u7f00\u7ed3\u5c3e fn : escapeXml () \u8df3\u8fc7\u53ef\u4ee5\u4f5c\u4e3a XML\u6807\u8bb0\u7684\u5b57\u7b26 fn : indexOf () \u8fd4\u56de\u6307\u5b9a\u5b57\u7b26\u4e32\u5728\u8f93\u5165\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e fn : join () \u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5408\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u7136\u540e\u8f93\u51fa fn : length () \u8fd4\u56de\u5b57\u7b26\u4e32\u957f\u5ea6 fn : replace () \u5c06\u8f93\u5165\u5b57\u7b26\u4e32\u4e2d\u6307\u5b9a\u7684\u4f4d\u7f6e\u66ff\u6362\u4e3a\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u7136\u540e\u8fd4\u56de fn : split () \u5c06\u5b57\u7b26\u4e32\u7528\u6307\u5b9a\u7684\u5206\u9694\u7b26\u5206\u9694\u7136\u540e\u7ec4\u6210\u4e00\u4e2a\u5b50\u5b57\u7b26\u4e32\u6570\u7ec4\u5e76\u8fd4\u56de fn : startsWith () \u6d4b\u8bd5\u8f93\u5165\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u524d\u7f00\u5f00\u59cb fn : substring () \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u5b50\u96c6 fn : substringAfter () \u8fd4\u56de\u5b57\u7b26\u4e32\u5728\u6307\u5b9a\u5b50\u4e32\u4e4b\u540e\u7684\u5b50\u96c6 fn : substringBefore () \u8fd4\u56de\u5b57\u7b26\u4e32\u5728\u6307\u5b9a\u5b50\u4e32\u4e4b\u524d\u7684\u5b50\u96c6 fn : toLowerCase () \u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u8f6c\u4e3a\u5c0f\u5199 fn : toUpperCase () \u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u8f6c\u4e3a\u5927\u5199 fn : trim () \u79fb\u9664\u9996\u5c3e\u7684\u7a7a\u767d\u7b26 \u4f7f\u7528\u5b9e\u4f8b <%@ taglib prefix = \"fn\" uri = \"http://java.sun.com/jsp/jstl/functions\" %> ${fn:toUpperCase(\"hello\")} <!-- HELLO --> \u8bfe\u65f6 30 EL \u81ea\u5b9a\u4e49\u51fd\u6570\u5e93 1\u3001\u5b9a\u4e49\u51fd\u6570 com/pengshiyu/fn/MyFunctions.java package com.pengshiyu.fn ; public class MyFunctions { public static String hello (){ return \"hello\" ; } } 2\u3001\u914d\u7f6e\u51fd\u6570 webapp/WEB-INF/custom.tld <?xml version=\"1.0\" encoding=\"utf-8\"?> <taglib> <tlib-version> 1.0 </tlib-version> <jsp-version> 2.0 </jsp-version> <short-name> Example TLD with Body </short-name> <function> <name> hello </name> <function-class> com.pengshiyu.fn.MyFunctions </function-class> <function-signature> java.lang.String hello() </function-signature> </function> </taglib> 3\u3001\u4f7f\u7528\u51fd\u6570 webapp/demo.jsp <%@ taglib prefix = \"fn\" uri = \"/WEB-INF/custom.tld\" %> ${fn:hello()}","title":"\u7b2c 8 \u7ae0 \uff1a EL\uff08\u8868\u8fbe\u5f0f\u8bed\u8a00\uff09\u5165\u95e8\u53ca EL \u51fd\u6570\u5e93"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/14-JavaWeb-EL\u8868\u8fbe\u5f0f\u8bed\u8a00/#8-el-el","text":"","title":"\u7b2c 8 \u7ae0 \uff1a EL\uff08\u8868\u8fbe\u5f0f\u8bed\u8a00\uff09\u5165\u95e8\u53ca EL \u51fd\u6570\u5e93"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/14-JavaWeb-EL\u8868\u8fbe\u5f0f\u8bed\u8a00/#27-el","text":"EL \u662f JSP \u5185\u7f6e\u7684\u8868\u8fbe\u5f0f\u8bed\u8a00 jsp2.0 \u5f00\u59cb\uff0cEL \u8868\u8fbe\u5f0f\u548c\u52a8\u6001\u6807\u7b7e\u6765\u66ff\u4ee3 java \u811a\u672c EL \u66ff\u4ee3 <%=%> <% pageContext . setAttribute ( \"name\" , \"pageContext\" ); %> <% request . setAttribute ( \"name\" , \"request\" ); %> <% session . setAttribute ( \"name\" , \"session\" ); %> <% application . setAttribute ( \"name\" , \"application\" ); %> <!-- \u5168\u57df\u67e5\u627e --> ${name} <br/> <!-- pageContext --> <!-- \u6307\u5b9a\u57df\u67e5\u627e --> ${requestScope.name} <br/> ${pageScope.name} <br/> ${sessionScope.name} <br/> ${applicationScope.name} <br/>","title":"\u8bfe\u65f6 27 EL \u5165\u95e8"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/14-JavaWeb-EL\u8868\u8fbe\u5f0f\u8bed\u8a00/#28-el-11","text":"\u65e0\u9700\u521b\u5efa\u5373\u53ef\u4f7f\u7528 pageScope requestScope sessionScope applicationScope param paramValues header haderValues iniParam cookie pageContext <jsp:useBean id=\"person\" class=\"com.pengshiyu.bean.Person\" scope=\"page\" /> <jsp:setProperty name=\"person\" property=\"name\" value=\"Tom\" /> <jsp:getProperty name=\"person\" property=\"name\" /> <!-- \u7b49\u4ef7\u4e8e --> ${person.name} 1\u3001param \u548c paramValues param \u83b7\u53d6\u5355\u503c paramValues \u83b7\u53d6\u591a\u503c \u8bf7\u6c42\u5730\u5740 /?name=Tom&numbers=1&numbers=2 ${param.name} ${paramValues.numbers[0]} ${paramValues.numbers[1]} 2\u3001header \u548c haderValues ${header['user-agent']} ${header[\"User-Agent\"]} 3\u3001iniParam iniParam \u53ef\u4ee5\u83b7\u53d6 <context-param> \u914d\u7f6e\u53c2\u6570 <context-param> <param-name> key1 </param-name> <param-value> value1 </param-value> </context-param> <context-param> <param-name> key2 </param-name> <param-value> value2 </param-value> </context-param> 4\u3001cookie <!-- \u83b7\u53d6cookie\u5bf9\u8c61\u518d\u83b7\u53d6\u503c --> ${cookie.JSESSIONID.value} <!-- \u7b49\u4ef7\u4e8e --> ${pageContext.session.id} 5\u3001pageContext ${pageContext.request.contextPath}","title":"\u8bfe\u65f6 28 EL 11 \u4e2a\u5185\u7f6e\u5bf9\u8c61"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/14-JavaWeb-EL\u8868\u8fbe\u5f0f\u8bed\u8a00/#29-el","text":"\u7531 JSTL \u63d0\u4f9b \u5f15\u4eba <%@ taglib prefix = \"fn\" uri = \"http://java.sun.com/jsp/jstl/functions\" %> \u51fd\u6570 \u51fd\u6570 \u63cf\u8ff0 fn : contains () \u6d4b\u8bd5\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u6307\u5b9a\u7684\u5b50\u4e32 fn : containsIgnoreCase () \u6d4b\u8bd5\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u6307\u5b9a\u7684\u5b50\u4e32\uff0c\u5927\u5c0f\u5199\u4e0d\u654f\u611f fn : endsWith () \u6d4b\u8bd5\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u540e\u7f00\u7ed3\u5c3e fn : escapeXml () \u8df3\u8fc7\u53ef\u4ee5\u4f5c\u4e3a XML\u6807\u8bb0\u7684\u5b57\u7b26 fn : indexOf () \u8fd4\u56de\u6307\u5b9a\u5b57\u7b26\u4e32\u5728\u8f93\u5165\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e fn : join () \u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5408\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u7136\u540e\u8f93\u51fa fn : length () \u8fd4\u56de\u5b57\u7b26\u4e32\u957f\u5ea6 fn : replace () \u5c06\u8f93\u5165\u5b57\u7b26\u4e32\u4e2d\u6307\u5b9a\u7684\u4f4d\u7f6e\u66ff\u6362\u4e3a\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u7136\u540e\u8fd4\u56de fn : split () \u5c06\u5b57\u7b26\u4e32\u7528\u6307\u5b9a\u7684\u5206\u9694\u7b26\u5206\u9694\u7136\u540e\u7ec4\u6210\u4e00\u4e2a\u5b50\u5b57\u7b26\u4e32\u6570\u7ec4\u5e76\u8fd4\u56de fn : startsWith () \u6d4b\u8bd5\u8f93\u5165\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u524d\u7f00\u5f00\u59cb fn : substring () \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u5b50\u96c6 fn : substringAfter () \u8fd4\u56de\u5b57\u7b26\u4e32\u5728\u6307\u5b9a\u5b50\u4e32\u4e4b\u540e\u7684\u5b50\u96c6 fn : substringBefore () \u8fd4\u56de\u5b57\u7b26\u4e32\u5728\u6307\u5b9a\u5b50\u4e32\u4e4b\u524d\u7684\u5b50\u96c6 fn : toLowerCase () \u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u8f6c\u4e3a\u5c0f\u5199 fn : toUpperCase () \u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u8f6c\u4e3a\u5927\u5199 fn : trim () \u79fb\u9664\u9996\u5c3e\u7684\u7a7a\u767d\u7b26 \u4f7f\u7528\u5b9e\u4f8b <%@ taglib prefix = \"fn\" uri = \"http://java.sun.com/jsp/jstl/functions\" %> ${fn:toUpperCase(\"hello\")} <!-- HELLO -->","title":"\u8bfe\u65f6 29 EL \u51fd\u6570\u5e93"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/14-JavaWeb-EL\u8868\u8fbe\u5f0f\u8bed\u8a00/#30-el","text":"1\u3001\u5b9a\u4e49\u51fd\u6570 com/pengshiyu/fn/MyFunctions.java package com.pengshiyu.fn ; public class MyFunctions { public static String hello (){ return \"hello\" ; } } 2\u3001\u914d\u7f6e\u51fd\u6570 webapp/WEB-INF/custom.tld <?xml version=\"1.0\" encoding=\"utf-8\"?> <taglib> <tlib-version> 1.0 </tlib-version> <jsp-version> 2.0 </jsp-version> <short-name> Example TLD with Body </short-name> <function> <name> hello </name> <function-class> com.pengshiyu.fn.MyFunctions </function-class> <function-signature> java.lang.String hello() </function-signature> </function> </taglib> 3\u3001\u4f7f\u7528\u51fd\u6570 webapp/demo.jsp <%@ taglib prefix = \"fn\" uri = \"/WEB-INF/custom.tld\" %> ${fn:hello()}","title":"\u8bfe\u65f6 30 EL \u81ea\u5b9a\u4e49\u51fd\u6570\u5e93"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/15-JavaWeb-JSTL\u6807\u51c6\u6807\u7b7e\u5e93/","text":"\u7b2c 9 \u7ae0 \uff1a JSTL\uff08\u6807\u51c6\u6807\u7b7e\u5e93\uff09 \u8d44\u6599\uff1a JSP \u6807\u51c6\u6807\u7b7e\u5e93\uff08JSTL\uff09 JSTL \u662f\u5bf9 EL \u8868\u8fbe\u5f0f\u7684\u6269\u5c55\u6807\u7b7e\u8bed\u8a00 pom.xml <dependency> <groupId> jstl </groupId> <artifactId> jstl </artifactId> <version> 1.2 </version> </dependency> <dependency> <groupId> taglibs </groupId> <artifactId> standard </artifactId> <version> 1.1.2 </version> </dependency> JSTL \u56db\u5927\u6807\u7b7e\u5e93 core \u6838\u5fc3\u6807\u7b7e\u5e93 \u5b66\u4e60\u91cd\u70b9 fmt \u683c\u5f0f\u5316\u6807\u7b7e\u5e93 \u53ea\u9700\u8981\u5b66\u4e60\u65e5\u671f\uff0c\u6570\u5b57 sql \u6570\u636e\u5e93\u6807\u7b7e\u5e93 \u8fc7\u65f6\u4e86 xml xml \u6807\u7b7e\u5e93 \u8fc7\u65f6\u4e86 \u5bfc\u5165\u6807\u7b7e\u5e93 <% @taglib prefix = \"\u524d\u7f00\" uri = \"\u8def\u5f84\" %> \u6838\u5fc3\u6807\u7b7e\u5e93 core\uff0cc \u6807\u7b7e out \u548c set remove url if choose forEach out \u8f93\u51fa <c:out value= \"<string>\" \u5185\u5bb9 default= \"<string>\" \u9ed8\u8ba4\u503c escapeXml= \"<true|false>\" \u8f6c\u4e49 /> \u793a\u4f8b <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <%@ taglib prefix = \"c\" uri = \"http://java.sun.com/jsp/jstl/core\" %> <c:out value= \"name\" default= \"Tom\" /> set \u8bbe\u7f6e <c:set var= \"<string>\" \u53d8\u91cf value= \"<string>\" \u503c target= \"<string>\" \u5bf9\u8c61 property= \"<string>\" \u5c5e\u6027 scope= \"<string>\" \u4f5c\u7528\u57df /> remove \u5220\u9664\u6570\u636e <c:remove var= \"<string>\" \u53d8\u91cf\u540d\u79f0 scope= \"<string>\" \u4f5c\u7528\u57df /> url \u5c06 URL \u683c\u5f0f\u5316\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32 <c:url var= \"<string>\" \u53d8\u91cf\u540d scope= \"<string>\" \u4f5c\u7528\u57df value= \"<string>\" \u57fa\u7840URL context= \"<string>\" \u672c\u5730\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u7684\u540d\u79f0 /> <!-- \u6307\u5b9a\u53c2\u6570 --> <c:param name= \"<string>\" value= \"<string>\" /> \u793a\u4f8b <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <%@ taglib prefix = \"c\" uri = \"http://java.sun.com/jsp/jstl/core\" %> <c:url value= \"/name\" /> <!-- \u8f93\u51fa\uff1a/demo/name --> <!-- \u7b49\u4ef7\u4e8e --> ${pageContext.request.contextPath}/name <c:url value= \"/name\" > <c:param name= \"key\" value= \"value\" /> </c:url> <!-- \u8f93\u51fa /demo/name?key=value --> if \u548c choose \u6807\u7b7e <c:set var= \"name\" value= \"Tom\" /> <c:if test= \"${not empty name}\" > <c:out value= \"${name}\" /> </c:if> forEach \u6807\u7b7e <c:forEach var= \"i\" begin= \"1\" end= \"5\" > ${i} </c:forEach> <% String [] arr = { \"big\" , \"pig\" }; %> <% request . setAttribute ( \"arr\" , arr ); %> <!-- \u6216\u8005 --> <c:set var= \"arr\" , value= \"${arr}\" /> <c:forEach items= \"${arr}\" var= \"item\" > ${item} </c:forEach> \u5faa\u73af\u72b6\u6001\u53d8\u91cf <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" import = \"java.util.ArrayList\" %> <%@ taglib prefix = \"c\" uri = \"http://java.sun.com/jsp/jstl/core\" %> <% ArrayList < String > list = new ArrayList < String >(); list . add ( \"Tom\" ); list . add ( \"Jack\" ); list . add ( \"Steve\" ); // \u52a0\u5230\u57df\u5bf9\u8c61\u4e2d pageContext . setAttribute ( \"list\" , list ); %> <c:forEach items= \"${list}\" var= \"item\" varStatus= \"status\" > ${status.count}${item} </c:forEach> \u5c5e\u6027 status . count \u5143\u7d20\u4e2a\u6570 status . index \u5143\u7d20\u4e0b\u6807 status . first \u662f\u5426\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20 status . last \u662f\u5426\u4e3a\u6700\u540e\u4e00\u4e2a\u5143\u7d20 status . cuttent \u5f53\u524d\u5143\u7d20 fmt \u6807\u7b7e\u683c\u5f0f\u5316 <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" import = \"java.util.Date\" %> <%@ taglib prefix = \"fmt\" uri = \"http://java.sun.com/jsp/jstl/fmt\" %> <!-- \u683c\u5f0f\u5316\u65e5\u671f --> <% Date date = new Date (); pageContext . setAttribute ( \"date\" , date ); %> <fmt:formatDate value= \"${date}\" pattern= \"yyyy-MM-dd HH:mm:ss\" /> <!-- 2020-05-16 23:32:34 --> <!-- \u683c\u5f0f\u5316\u6570\u5b57 --> <% pageContext . setAttribute ( \"num\" , 3.141592653 ); %> <fmt:formatNumber value= \"${num}\" pattern= \"0.00\" /> <!-- 3.14 --> 0 . 00 \u4e0d\u8db3 0 \u8865\u4f4d # . ## \u4e0d\u8db3\u4e0d\u8865\u4f4d","title":"\u7b2c 9 \u7ae0 \uff1a JSTL\uff08\u6807\u51c6\u6807\u7b7e\u5e93\uff09"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/15-JavaWeb-JSTL\u6807\u51c6\u6807\u7b7e\u5e93/#9-jstl","text":"\u8d44\u6599\uff1a JSP \u6807\u51c6\u6807\u7b7e\u5e93\uff08JSTL\uff09 JSTL \u662f\u5bf9 EL \u8868\u8fbe\u5f0f\u7684\u6269\u5c55\u6807\u7b7e\u8bed\u8a00 pom.xml <dependency> <groupId> jstl </groupId> <artifactId> jstl </artifactId> <version> 1.2 </version> </dependency> <dependency> <groupId> taglibs </groupId> <artifactId> standard </artifactId> <version> 1.1.2 </version> </dependency> JSTL \u56db\u5927\u6807\u7b7e\u5e93 core \u6838\u5fc3\u6807\u7b7e\u5e93 \u5b66\u4e60\u91cd\u70b9 fmt \u683c\u5f0f\u5316\u6807\u7b7e\u5e93 \u53ea\u9700\u8981\u5b66\u4e60\u65e5\u671f\uff0c\u6570\u5b57 sql \u6570\u636e\u5e93\u6807\u7b7e\u5e93 \u8fc7\u65f6\u4e86 xml xml \u6807\u7b7e\u5e93 \u8fc7\u65f6\u4e86 \u5bfc\u5165\u6807\u7b7e\u5e93 <% @taglib prefix = \"\u524d\u7f00\" uri = \"\u8def\u5f84\" %> \u6838\u5fc3\u6807\u7b7e\u5e93 core\uff0cc \u6807\u7b7e out \u548c set remove url if choose forEach out \u8f93\u51fa <c:out value= \"<string>\" \u5185\u5bb9 default= \"<string>\" \u9ed8\u8ba4\u503c escapeXml= \"<true|false>\" \u8f6c\u4e49 /> \u793a\u4f8b <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <%@ taglib prefix = \"c\" uri = \"http://java.sun.com/jsp/jstl/core\" %> <c:out value= \"name\" default= \"Tom\" /> set \u8bbe\u7f6e <c:set var= \"<string>\" \u53d8\u91cf value= \"<string>\" \u503c target= \"<string>\" \u5bf9\u8c61 property= \"<string>\" \u5c5e\u6027 scope= \"<string>\" \u4f5c\u7528\u57df /> remove \u5220\u9664\u6570\u636e <c:remove var= \"<string>\" \u53d8\u91cf\u540d\u79f0 scope= \"<string>\" \u4f5c\u7528\u57df /> url \u5c06 URL \u683c\u5f0f\u5316\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32 <c:url var= \"<string>\" \u53d8\u91cf\u540d scope= \"<string>\" \u4f5c\u7528\u57df value= \"<string>\" \u57fa\u7840URL context= \"<string>\" \u672c\u5730\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f\u7684\u540d\u79f0 /> <!-- \u6307\u5b9a\u53c2\u6570 --> <c:param name= \"<string>\" value= \"<string>\" /> \u793a\u4f8b <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <%@ taglib prefix = \"c\" uri = \"http://java.sun.com/jsp/jstl/core\" %> <c:url value= \"/name\" /> <!-- \u8f93\u51fa\uff1a/demo/name --> <!-- \u7b49\u4ef7\u4e8e --> ${pageContext.request.contextPath}/name <c:url value= \"/name\" > <c:param name= \"key\" value= \"value\" /> </c:url> <!-- \u8f93\u51fa /demo/name?key=value --> if \u548c choose \u6807\u7b7e <c:set var= \"name\" value= \"Tom\" /> <c:if test= \"${not empty name}\" > <c:out value= \"${name}\" /> </c:if> forEach \u6807\u7b7e <c:forEach var= \"i\" begin= \"1\" end= \"5\" > ${i} </c:forEach> <% String [] arr = { \"big\" , \"pig\" }; %> <% request . setAttribute ( \"arr\" , arr ); %> <!-- \u6216\u8005 --> <c:set var= \"arr\" , value= \"${arr}\" /> <c:forEach items= \"${arr}\" var= \"item\" > ${item} </c:forEach> \u5faa\u73af\u72b6\u6001\u53d8\u91cf <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" import = \"java.util.ArrayList\" %> <%@ taglib prefix = \"c\" uri = \"http://java.sun.com/jsp/jstl/core\" %> <% ArrayList < String > list = new ArrayList < String >(); list . add ( \"Tom\" ); list . add ( \"Jack\" ); list . add ( \"Steve\" ); // \u52a0\u5230\u57df\u5bf9\u8c61\u4e2d pageContext . setAttribute ( \"list\" , list ); %> <c:forEach items= \"${list}\" var= \"item\" varStatus= \"status\" > ${status.count}${item} </c:forEach> \u5c5e\u6027 status . count \u5143\u7d20\u4e2a\u6570 status . index \u5143\u7d20\u4e0b\u6807 status . first \u662f\u5426\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20 status . last \u662f\u5426\u4e3a\u6700\u540e\u4e00\u4e2a\u5143\u7d20 status . cuttent \u5f53\u524d\u5143\u7d20 fmt \u6807\u7b7e\u683c\u5f0f\u5316 <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" import = \"java.util.Date\" %> <%@ taglib prefix = \"fmt\" uri = \"http://java.sun.com/jsp/jstl/fmt\" %> <!-- \u683c\u5f0f\u5316\u65e5\u671f --> <% Date date = new Date (); pageContext . setAttribute ( \"date\" , date ); %> <fmt:formatDate value= \"${date}\" pattern= \"yyyy-MM-dd HH:mm:ss\" /> <!-- 2020-05-16 23:32:34 --> <!-- \u683c\u5f0f\u5316\u6570\u5b57 --> <% pageContext . setAttribute ( \"num\" , 3.141592653 ); %> <fmt:formatNumber value= \"${num}\" pattern= \"0.00\" /> <!-- 3.14 --> 0 . 00 \u4e0d\u8db3 0 \u8865\u4f4d # . ## \u4e0d\u8db3\u4e0d\u8865\u4f4d","title":"\u7b2c 9 \u7ae0 \uff1a JSTL\uff08\u6807\u51c6\u6807\u7b7e\u5e93\uff09"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/16-JavaWeb-\u81ea\u5b9a\u4e49\u6807\u7b7e/","text":"\u7b2c 10 \u7ae0 \uff1a \u81ea\u5b9a\u4e49\u6807\u7b7e \u7f16\u5199\u6b65\u9aa4\uff1a \u6807\u7b7e\u5904\u7406\u7c7b \u7f16\u5199 tld \u6587\u4ef6 taglib \u5bfc\u5165 tld \u6587\u4ef6 \u4f9d\u8d56 <dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 4.0.1 </version> <scope> provided </scope> </dependency> <dependency> <groupId> javax.servlet.jsp </groupId> <artifactId> javax.servlet.jsp-api </artifactId> <version> 2.3.3 </version> <scope> provided </scope> </dependency> \u5b9a\u4e49\u65e0\u5185\u5bb9\u6807\u7b7e package com.pengshiyu.taglibs ; import javax.servlet.jsp.JspException ; import javax.servlet.jsp.tagext.SimpleTagSupport ; import java.io.IOException ; public class HelloTag extends SimpleTagSupport { @Override public void doTag () throws JspException , IOException { this . getJspContext (). getOut (). println ( \"hello\" ); } } \u58f0\u660e <?xml version=\"1.0\" encoding=\"utf-8\"?> <taglib> <tlib-version> 1.0 </tlib-version> <jsp-version> 2.0 </jsp-version> <short-name> Example TLD with Body </short-name> <tag> <name> Hello </name> <tag-class> com.pengshiyu.taglibs.HelloTag </tag-class> <body-content> empty </body-content> </tag> </taglib> \u5f15\u5165\u58f0\u660e\u6587\u4ef6\u5e76\u4f7f\u7528\u6807\u7b7e <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <%@ taglib prefix = \"ext\" uri = \"WEB-INF/custom.tld\" %> <ext:Hello /> \u5b9a\u4e49\u6709\u5185\u5bb9\u6807\u7b7e package com.pengshiyu.taglibs ; import javax.servlet.jsp.JspException ; import javax.servlet.jsp.JspWriter ; import javax.servlet.jsp.tagext.SimpleTagSupport ; import java.io.IOException ; public class HelloTag extends SimpleTagSupport { @Override public void doTag () throws JspException , IOException { JspWriter out = this . getJspContext (). getOut (); out . write ( \"******\" ); this . getJspBody (). invoke ( out ); out . write ( \"******\" ); } } <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <%@ taglib prefix = \"ext\" uri = \"WEB-INF/custom.tld\" %> <ext:Hello> \u4f60\u597d </ext:Hello> \u8f93\u51fa ****** \u4f60\u597d ****** \u4e0d\u518d\u6267\u884c\u6807\u7b7e\u4e0b\u9762\u7684\u5185\u5bb9 package com.pengshiyu.taglibs ; import javax.servlet.jsp.JspException ; import javax.servlet.jsp.SkipPageException ; import javax.servlet.jsp.tagext.SimpleTagSupport ; import java.io.IOException ; public class HelloTag extends SimpleTagSupport { @Override public void doTag () throws JspException , IOException { this . getJspContext (). getOut (). write ( \"\u4ee5\u4e0b\u5185\u5bb9\u4e0d\u663e\u793a\" ); throw new SkipPageException (); } } \u5e26\u6709\u5c5e\u6027\u7684\u6807\u7b7e \u6807\u7b7e\u7c7b package com.pengshiyu.taglibs ; import javax.servlet.jsp.JspException ; import javax.servlet.jsp.tagext.SimpleTagSupport ; import java.io.IOException ; public class HelloTag extends SimpleTagSupport { private String name = \"\" ; public void setName ( String name ) { this . name = name ; } @Override public void doTag () throws JspException , IOException { this . getJspContext (). getOut (). write ( this . name ); } } tld \u914d\u7f6e <tag> <name> Hello </name> <tag-class> com.pengshiyu.taglibs.HelloTag </tag-class> <body-content> scriptless </body-content> <attribute> <!-- \u5c5e\u6027\u540d\u79f0--> <name> name </name> <!-- \u662f\u5426\u53ef\u9009--> <required> true </required> <!-- \u652f\u6301\u8868\u8fbe\u5f0f--> <rtexprvalue> true </rtexprvalue> </attribute> </tag> \u4f7f\u7528 <ext:Hello name= \"Tom\" ></ext:Hello>","title":"\u7b2c 10 \u7ae0 \uff1a \u81ea\u5b9a\u4e49\u6807\u7b7e"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/16-JavaWeb-\u81ea\u5b9a\u4e49\u6807\u7b7e/#10","text":"","title":"\u7b2c 10 \u7ae0 \uff1a \u81ea\u5b9a\u4e49\u6807\u7b7e"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/16-JavaWeb-\u81ea\u5b9a\u4e49\u6807\u7b7e/#_1","text":"\u6807\u7b7e\u5904\u7406\u7c7b \u7f16\u5199 tld \u6587\u4ef6 taglib \u5bfc\u5165 tld \u6587\u4ef6","title":"\u7f16\u5199\u6b65\u9aa4\uff1a"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/16-JavaWeb-\u81ea\u5b9a\u4e49\u6807\u7b7e/#_2","text":"<dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 4.0.1 </version> <scope> provided </scope> </dependency> <dependency> <groupId> javax.servlet.jsp </groupId> <artifactId> javax.servlet.jsp-api </artifactId> <version> 2.3.3 </version> <scope> provided </scope> </dependency>","title":"\u4f9d\u8d56"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/16-JavaWeb-\u81ea\u5b9a\u4e49\u6807\u7b7e/#_3","text":"package com.pengshiyu.taglibs ; import javax.servlet.jsp.JspException ; import javax.servlet.jsp.tagext.SimpleTagSupport ; import java.io.IOException ; public class HelloTag extends SimpleTagSupport { @Override public void doTag () throws JspException , IOException { this . getJspContext (). getOut (). println ( \"hello\" ); } } \u58f0\u660e <?xml version=\"1.0\" encoding=\"utf-8\"?> <taglib> <tlib-version> 1.0 </tlib-version> <jsp-version> 2.0 </jsp-version> <short-name> Example TLD with Body </short-name> <tag> <name> Hello </name> <tag-class> com.pengshiyu.taglibs.HelloTag </tag-class> <body-content> empty </body-content> </tag> </taglib> \u5f15\u5165\u58f0\u660e\u6587\u4ef6\u5e76\u4f7f\u7528\u6807\u7b7e <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <%@ taglib prefix = \"ext\" uri = \"WEB-INF/custom.tld\" %> <ext:Hello />","title":"\u5b9a\u4e49\u65e0\u5185\u5bb9\u6807\u7b7e"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/16-JavaWeb-\u81ea\u5b9a\u4e49\u6807\u7b7e/#_4","text":"package com.pengshiyu.taglibs ; import javax.servlet.jsp.JspException ; import javax.servlet.jsp.JspWriter ; import javax.servlet.jsp.tagext.SimpleTagSupport ; import java.io.IOException ; public class HelloTag extends SimpleTagSupport { @Override public void doTag () throws JspException , IOException { JspWriter out = this . getJspContext (). getOut (); out . write ( \"******\" ); this . getJspBody (). invoke ( out ); out . write ( \"******\" ); } } <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <%@ taglib prefix = \"ext\" uri = \"WEB-INF/custom.tld\" %> <ext:Hello> \u4f60\u597d </ext:Hello> \u8f93\u51fa ****** \u4f60\u597d ******","title":"\u5b9a\u4e49\u6709\u5185\u5bb9\u6807\u7b7e"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/16-JavaWeb-\u81ea\u5b9a\u4e49\u6807\u7b7e/#_5","text":"package com.pengshiyu.taglibs ; import javax.servlet.jsp.JspException ; import javax.servlet.jsp.SkipPageException ; import javax.servlet.jsp.tagext.SimpleTagSupport ; import java.io.IOException ; public class HelloTag extends SimpleTagSupport { @Override public void doTag () throws JspException , IOException { this . getJspContext (). getOut (). write ( \"\u4ee5\u4e0b\u5185\u5bb9\u4e0d\u663e\u793a\" ); throw new SkipPageException (); } } \u5e26\u6709\u5c5e\u6027\u7684\u6807\u7b7e \u6807\u7b7e\u7c7b package com.pengshiyu.taglibs ; import javax.servlet.jsp.JspException ; import javax.servlet.jsp.tagext.SimpleTagSupport ; import java.io.IOException ; public class HelloTag extends SimpleTagSupport { private String name = \"\" ; public void setName ( String name ) { this . name = name ; } @Override public void doTag () throws JspException , IOException { this . getJspContext (). getOut (). write ( this . name ); } } tld \u914d\u7f6e <tag> <name> Hello </name> <tag-class> com.pengshiyu.taglibs.HelloTag </tag-class> <body-content> scriptless </body-content> <attribute> <!-- \u5c5e\u6027\u540d\u79f0--> <name> name </name> <!-- \u662f\u5426\u53ef\u9009--> <required> true </required> <!-- \u652f\u6301\u8868\u8fbe\u5f0f--> <rtexprvalue> true </rtexprvalue> </attribute> </tag> \u4f7f\u7528 <ext:Hello name= \"Tom\" ></ext:Hello>","title":"\u4e0d\u518d\u6267\u884c\u6807\u7b7e\u4e0b\u9762\u7684\u5185\u5bb9"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/","text":"XML\u5feb\u901f\u5165\u95e8 \u7b2c1 \u7ae0 \uff1a XML\u5165\u95e8 \u8bfe\u65f61 XML\u7b80\u4ecb eXtensible Markup Language \u4e3b\u8981\u4f7f\u75281.0\u7248\u672c \u8bed\u8a00 \u4e2d\u6587\u540d\u79f0 \u7528\u9014 html \u6807\u8bb0\u578b\u8bed\u8a00 \u663e\u793a\u6570\u636e xml \u53ef\u6269\u5c55\u6807\u8bb0\u578b\u8bed\u8a00 \u5b58\u50a8\u6570\u636e \u8bfe\u65f62 XML\u7684\u5e94\u7528 1\u3001\u4f20\u8f93\u6570\u636e 2\u3001\u8868\u793a\u6709\u5173\u7cfb\u7684\u6570\u636e 3\u3001\u914d\u7f6e\u6587\u4ef6 \u8bfe\u65f63 XML\u7684\u6587\u6863\u58f0\u660e (1)xml\u7684\u6587\u6863\u58f0\u660e (2)\u5b9a\u4e49\u5143\u7d20\uff08\u6807\u7b7e\uff09 (3)\u6ce8\u91ca (4)\u7279\u6b8a\u5b57\u7b26 (5)CDATA\u533a (6)PI\u6307\u4ee4 \u6587\u4ef6 *.xml 1\u3001xml\u7684\u6587\u6863\u58f0\u660e \u5fc5\u987b\u5199\u5728\u7b2c\u4e00\u884c\u7b2c\u4e00\u5217 <?xml version=\"1.0\" encoding=\"gbk\" ?> \u5c5e\u6027\uff1a version \u7248\u672c 1.0 encoding \u7f16\u7801 gbk/utf-8 standalone \u4f9d\u8d56\u5176\u4ed6\u6587\u4ef6 yes/no \u8bfe\u65f64 XML\u4e2d\u6587\u4e71\u7801\u95ee\u9898\u89e3\u51b3 <?xml version=\"1.0\" encoding=\"gbk\" ?> <person> <name> \u5f20\u4e09 </name> <age> 23 </age> </person> \u8bfe\u65f65 XML\u5143\u7d20\u7684\u5b9a\u4e49 1\u3001\u53ea\u80fd\u6709\u4e00\u4e2a\u6839\u6807\u7b7e 2\u3001\u5408\u7406\u5d4c\u5957 3\u3001\u7a7a\u683c\u548c\u6362\u884c\u90fd\u4f1a\u5f53\u505a\u539f\u59cb\u5185\u5bb9\u89e3\u6790 4\u3001\u6709\u5f00\u59cb\u5fc5\u987b\u6709\u7ed3\u675f <person></person> 5\u3001\u6807\u7b7e\u6ca1\u6709\u5185\u5bb9\uff0c\u53ef\u4ee5\u5728\u6807\u7b7e\u5185\u7ed3\u675f <person /> \u6807\u7b7e\u547d\u540d\u89c4\u5219 \uff081\uff09\u533a\u5206\u5927\u5c0f\u5199 \uff082\uff09\u4e0d\u80fd\u4ee5\u6570\u5b57\u4e0b\u5212\u7ebf\u5f00\u5934 \uff083\uff09\u4e0d\u80fd\u4ee5xml\u3001XML\u3001Xml\u7b49\u5f00\u5934 \uff084\uff09\u4e0d\u80fd\u5305\u542b\u7a7a\u683c\u548c\u5192\u53f7 \uff085\uff09\u6807\u7b7e\u53ef\u4ee5\u662f\u4e2d\u6587 \u8bfe\u65f66 XML\u5c5e\u6027\u7684\u5b9a\u4e49 html\u548cxml\u90fd\u662f\u6807\u8bb0\u578b\u6587\u6863\uff0c\u53ef\u4ee5\u6709\u5c5e\u6027 <person id= \"001\" ></person> \u5c5e\u6027\u8981\u6c42 \uff081\uff09\u4e00\u4e2a\u6807\u7b7e\u53ef\u4ee5\u6709\u591a\u4e2a\u5c5e\u6027 \uff082\uff09\u5c5e\u6027\u540d\u79f0\u4e0d\u80fd\u76f8\u540c \uff083\uff09\u5c5e\u6027\u540d\u79f0\u4e0e\u5c5e\u6027\u503c\u4e4b\u95f4\u4f7f\u7528\u7b49\u53f7\uff08=\uff09 \uff084\uff09\u5c5e\u6027\u503c\u4f7f\u7528\u5f15\u53f7\uff08\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\uff09\u5305\u8d77\u6765 \uff085\uff09\u5c5e\u6027\u540d\u547d\u540d\u8d35\u65b9\u548c\u5143\u7d20\u7684\u547d\u540d\u89c4\u8303\u4e00\u81f4 \u8bfe\u65f67 XML\u6ce8\u91ca <!-- \u8fd9\u91cc\u662f\u6ce8\u91ca --> \u6ce8\u91ca\u4e0d\u80fd\u5d4c\u5957 \u6ce8\u91ca\u4e0d\u80fd\u653e\u5230\u7b2c\u4e00\u884c \u8bfe\u65f68 XML\u7279\u6b8a\u5b57\u7b26 > \uff1a &gt; < \uff1a &lt; \u8bfe\u65f69 XML\u7684CDATA\u533a \u53ef\u4ee5\u89e3\u51b3\u591a\u4e2a\u5b57\u7b26\u90fd\u9700\u8981\u8f6c\u4e49\u7684\u64cd\u4f5c \u7279\u6b8a\u5b57\u7b26\u4f1a\u5f53\u505a\u6587\u672c\u5185\u5bb9 <![CDATA[ \u5185\u5bb9 ]]> \u8bfe\u65f610 XML\u7684PI\u6307\u4ee4 Processing Instruction \u53ef\u4ee5\u5728xml\u4e2d\u8bbe\u7f6e\u6837\u5f0f \u53ea\u80fd\u5bf9\u82f1\u6587\u6807\u7b7e\u8d77\u4f5c\u7528 <?xml version=\"1.0\" encoding=\"utf-8\" ?> <?xml-stylesheet type=\"text/css\" href=\"./demo.css\" ?> <person> <name> \u5f20\u4e09 </name> <age> 23 </age> </person> demo.css name { color : green ; } \u8bfe\u65f611 XML\u7ea6\u675f\u7b80\u4ecb 1\u3001xml\u8bed\u6cd5\u603b\u7ed3 \uff081\uff09\u6240\u6709xml\u5143\u7d20\u90fd\u5fc5\u987b\u6709\u5173\u95ed\u6807\u7b7e \uff082\uff09xml\u6807\u7b7e\u5bf9\u5927\u5c0f\u5199\u654f\u611f \uff083\uff09xml\u5fc5\u987b\u6b63\u786e\u5d4c\u5957 \uff084\uff09xml\u5fc5\u987b\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u6839\u5143\u7d20 \uff085\uff09xml\u5c5e\u6027\u503c\u9700\u8981\u52a0\u5f15\u53f7 \uff086\uff09\u7279\u6b8a\u5b57\u7b26\u5fc5\u987b\u8f6c\u4e49 \uff087\uff09\u539f\u6837\u8f93\u51fa\u6587\u672c\u4f7f\u7528 <![CDATA[]]> \uff088\uff09xml\u4e2d\u7684\u7a7a\u683c\u3001\u56de\u8f66\u6362\u884c\u5728\u89e3\u6790\u65f6\u4f1a\u88ab\u4fdd\u7559 2\u3001xml\u7684\u7ea6\u675f \uff081\uff09dtd\u7ea6\u675f \uff082\uff09scheme\u7ea6\u675f \u7b2c2 \u7ae0 \uff1a DTD\uff08\u6587\u6863\u7c7b\u578b\u5b9a\u4e49\uff09 \u8bfe\u65f612 DTD\u5feb\u901f\u5165\u95e8 \u6587\u4ef6 *.dtd \uff0c\u4f7f\u7528idea\u6253\u5f00\u4f1a\u63d0\u793a \u6587\u6863\u7c7b\u578b\u5b9a\u4e49\uff08DTD\uff0cDocument Type Definition\uff09 1\u3001\u590d\u6742\u5143\u7d20\uff1a\u6709\u5b50\u5143\u7d20\u7684\u5143\u7d20 <!ELEMENT \u5143\u7d20\u540d\u79f0 ( \u5b50\u5143\u7d20 ) > eg: <!ELEMENT person ( name , age ) > 2\u3001\u7b80\u5355\u5143\u7d20 <!ELEMENT \u5143\u7d20\u540d\u79f0 ( #PCDATA ) > eg: <!ELEMENT age ( #PCDATA ) > 3\u3001\u5f15\u5165dtd\u6587\u4ef6 <!DOCTYPE person SYSTEM \"demo.dtd\"> \u793a\u4f8b <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE person SYSTEM \"demo.dtd\"> <person> <name> \u5f20\u4e09 </name> <age> 23 </age> </person> demo.dtd <!ELEMENT person ( name , age ) > <!ELEMENT name ( #PCDATA ) > <!ELEMENT age ( #PCDATA ) > \u8bfe\u65f613 DTD\u7684\u4e09\u79cd\u5f15\u5165\u65b9\u5f0f 1\u3001\u5f15\u5165\u5916\u90e8 <! DOCTYPE \u6839\u5143\u7d20\u540d\u79f0 SYSTEM \"dtd\u8def\u5f84\" > 2\u3001\u5f15\u5165\u5185\u90e8 <!DOCTYPE \u6839\u5143\u7d20\u540d\u79f0 [ <!ELEMENT person ( name , age ) > <!ELEMENT name ( #PCDATA ) > <!ELEMENT age ( #PCDATA ) > ]> 3\u3001\u4f7f\u7528\u7f51\u7edc <! DOCTYPE \u6839\u5143\u7d20\u540d\u79f0 PUBLIC \"DTD\u540d\u79f0\" \"DTD\u8def\u5f84URL\" > \u8bfe\u65f614 \u4f7f\u7528DTD\u5b9a\u4e49\u5143\u7d20 \u8bed\u6cd5 <!ELEMENT \u5143\u7d20\u540d \u7ea6\u675f > 1\u3001\u7b80\u5355\u5143\u7d20\uff1a\u6ca1\u6709\u5b50\u5143\u7d20\u7684\u5143\u7d20 <!ELEMENT \u5143\u7d20\u540d ( #PCDATA ) > (#PCDATA) \u5b57\u7b26\u4e32\uff08\u9700\u8981\u52a0\u62ec\u53f7\uff09 EMPTY \u5143\u7d20\u4e3a\u7a7a ANY \u4efb\u610f 2\u3001\u590d\u6742\u5143\u7d20 <!ELEMENT \u5143\u7d20\u540d ( \u5b50\u5143\u7d20 ) > \uff081\uff09\u5b50\u5143\u7d20\u51fa\u73b0\u6b21\u6570 + \u4e00\u6b21\u6216\u591a\u6b21 ? \u96f6\u6b21\u6216\u4e00\u6b21 * \u96f6\u6b21\u6216\u591a\u6b21 \uff082\uff09\u5b50\u5143\u7d20\u5206\u9694\u7b26 \u9017\u53f7\u9694\u5f00\uff1a\u8868\u793a\u51fa\u73b0\u987a\u5e8f \u7ad6\u7ebf\u9694\u5f00\uff1a\u8868\u793a\u4efb\u610f\u4e00\u4e2a eg: <!ELEMENT person ( name +, age ?, sex , school *) > <!ELEMENT name ( #PCDATA ) > <!ELEMENT age ( #PCDATA ) > <!ELEMENT sex EMPTY > <!ELEMENT school ANY > \u8bfe\u65f615 \u4f7f\u7528DTD\u5b9a\u4e49\u5c5e\u6027 \u8bed\u6cd5 <! ATTLIST \u5143\u7d20\u540d\u79f0 \u5c5e\u6027\u540d\u79f0 \u5c5e\u6027\u7c7b\u578b \u5c5e\u6027\u7684\u7ea6\u675f > 1\u3001\u5c5e\u6027\u7c7b\u578b \uff081\uff09CDATA \u5b57\u7b26\u4e32 \uff082\uff09(a|b|c) \u679a\u4e3e \uff083\uff09ID \u503c\u53ea\u80fd\u4ee5\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\u5f00\u5934 2\u3001\u5c5e\u6027\u7684\u7ea6\u675f \uff081\uff09#REQUIRED \u5c5e\u6027\u5fc5\u987b\u5b58\u5728 \uff082\uff09#IMPLIED \u5c5e\u6027\u53ef\u6709\u53ef\u65e0 \uff083\uff09#FIXED \u5c5e\u6027\u5fc5\u987b\u662f\u56fa\u5b9a\u503c \uff084\uff09\u9ed8\u8ba4\u503c \u4e0d\u5199\u5c5e\u6027\u505a\u4e3a\u9ed8\u8ba4\u503c eg: <!ATTLIST \u9875\u9762\u4f5c\u8005 \u59d3\u540d CDATA #REQUIRED \u5e74\u9f84 CDATA #IMPLIED \u804c\u4f4d CDATA #FIXED \u4f5c\u8005 \u7231\u597d CDATA \u5199\u4f5c > \u8bfe\u65f616 \u5b9a\u4e49\u5b9e\u4f53 \u8bed\u6cd5 \u5b9a\u4e49 <!ENTITY \u5b9e\u4f53\u540d\u79f0 \"\u5b9e\u4f53\u503c\" > \u4f7f\u7528 &\u5b9e\u4f53\u540d\u79f0 \u5b9e\u4f53\u9700\u8981\u5b9a\u4e49\u5728\u5185\u90e8dtd \u8bfe\u65f617 W3C\u7684\u6848\u4f8b https://www.w3school.com.cn/dtd/dtd_examples.asp \u7b2c3 \u7ae0\uff1a XML\u89e3\u6790\u4e4bJAXP \u8bfe\u65f618 XML\u89e3\u6790\u7b80\u4ecb 1\u3001dom\u65b9\u5f0f\u89e3\u6790xml\u8fc7\u7a0b\uff1a \u6839\u636exml\u7684\u5c42\u7ea7\u7ed3\u6784\uff0c\u5728\u5185\u5b58\u4e2d\u5206\u914d\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784 \u628axml\u4e2d\u6bcf\u90e8\u5206\u90fd\u5c01\u88c5\u6210\u5bf9\u8c61 \uff081\uff09\u4f18\u70b9\uff1a\u65b9\u4fbf\u5b9e\u73b0\u589e\u3001\u5220\u3001\u6539\u64cd\u4f5c \uff082\uff09\u7f3a\u70b9\uff1a\u5982\u679c\u6587\u4ef6\u8fc7\u5927\uff0c\u9020\u6210\u5185\u5b58\u6ea2\u51fa 2\u3001sax\u65b9\u5f0f\u89e3\u6790xml\u8fc7\u7a0b\uff1a \u91c7\u7528\u4e8b\u4ef6\u9a71\u52a8\uff0c\u8fb9\u8bfb\u8fb9\u89e3\u6790\uff0c\u4ece\u4e0a\u5230\u4e0b\uff0c\u4e00\u884c\u4e00\u884c\u7684\u89e3\u6790\uff0c \u89e3\u6790\u5230\u4e00\u4e2a\u5bf9\u8c61\uff0c\u628a\u5bf9\u8c61\u540d\u79f0\u8fd4\u56de \uff081\uff09\u4f18\u70b9\uff1a\u4e0d\u4f1a\u9020\u6210\u5185\u5b58\u6ea2\u51fa\uff0c\u5b9e\u73b0\u67e5\u8be2 \uff082\uff09\u7f3a\u70b9\uff1a\u4e0d\u80fd\u5b9e\u73b0\u589e\u3001\u5220\u3001\u6539\u64cd\u4f5c \u8bfe\u65f619 JAXP API\u7684\u67e5\u770b dom\u548csax\u89e3\u6790\u5668\uff1a \uff081\uff09sun\u516c\u53f8 jaxp \uff082\uff09dom4j\u7ec4\u7ec7 dom4j\uff08\u5b9e\u9645\u5f00\u53d1\uff09 \uff083\uff09jdom\u7ec4\u7ec7 jdom 1\u3001jaxp jaxp\u662fjavese\u4e00\u90e8\u5206 javax.xml.parses interface Node { // \u6dfb\u52a0\u8282\u70b9 public Node appendChild ( Node newChild ); // \u79fb\u9664\u8282\u70b9 public Node removeChild ( Node oldChild ); // \u83b7\u53d6\u7236\u8282\u70b9 public Node getParentNode (); // \u8fd4\u56de\u6587\u672c\u5185\u5bb9 public String getTextContent () } interface NodeList { // \u901a\u8fc7\u4e0b\u6807\u83b7\u53d6\u5177\u4f53\u503c public Node item ( int index ); // \u5f97\u5230\u96c6\u5408\u957f\u5ea6 public int getLength (); } interface Document extends Node { // \u83b7\u53d6\u6807\u7b7e public NodeList getElementsByTagName ( String tagname ); // \u521b\u5efa\u6807\u7b7e public Element createElement ( String tagName ); // \u521b\u5efa\u6587\u672c public Text createTextNode ( String data ); } abstract DocumentBuilder { public Document parse ( File f ) } abstract DocumentBuilderFactory { public static DocumentBuilderFactory newInstance () public abstract DocumentBuilder newDocumentBuilder () } abstract class SAXParser {} abstract class SAXParserFactory {} \u8bfe\u65f620-21 \u4f7f\u7528JAXP\u67e5\u8be2\u8282\u70b9 \u793a\u4f8b\uff1a\u67e5\u8be2xml\u4e2d\u6240\u6709name\u503c demo.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <list> <person> <name> \u5f20\u4e09 </name> <age> 23 </age> </person> <person> <name> \u674e\u56db </name> <age> 24 </age> </person> </list> import org.w3c.dom.Document ; import org.w3c.dom.Node ; import org.w3c.dom.NodeList ; import javax.xml.parsers.DocumentBuilder ; import javax.xml.parsers.DocumentBuilderFactory ; public class Demo { /** * 1\u3001\u521b\u5efa\u89e3\u6790\u5668\u5de5\u5382 * 2\u3001\u6839\u636e\u89e3\u6790\u5668\u5de5\u5382\u521b\u5efa\u89e3\u6790\u5668 * 3\u3001\u89e3\u6790xml\u8fd4\u56dedocument * */ public static void main ( String [] args ) throws Exception { DocumentBuilderFactory factory = DocumentBuilderFactory . newInstance (); DocumentBuilder builder = factory . newDocumentBuilder (); Document document = builder . parse ( \"demo.xml\" ); NodeList list = document . getElementsByTagName ( \"name\" ); for ( int i = 0 ; i < list . getLength (); i ++) { Node node = list . item ( i ); String name = node . getTextContent (); System . out . println ( name ); // \u5f20\u4e09 \u674e\u56db } } } \u8bfe\u65f622 \u4f7f\u7528JAXP\u6dfb\u52a0\u8282\u70b9 \u5728person\u8282\u70b9\u4e0b\u6dfb\u52a0sex\u5b50\u8282\u70b9 import org.w3c.dom.Document ; import org.w3c.dom.Node ; import org.w3c.dom.NodeList ; import org.w3c.dom.Element ; import org.w3c.dom.Text ; import javax.xml.parsers.DocumentBuilder ; import javax.xml.parsers.DocumentBuilderFactory ; import javax.xml.transform.Transformer ; import javax.xml.transform.TransformerFactory ; import javax.xml.transform.dom.DOMSource ; import javax.xml.transform.stream.StreamResult ; public class Demo { public static void main ( String [] args ) throws Exception { // \u521b\u5efa\u89e3\u6790\u5668\u5de5\u5382 DocumentBuilderFactory factory = DocumentBuilderFactory . newInstance (); // \u6839\u636e\u89e3\u6790\u5668\u5de5\u5382\u521b\u5efa\u89e3\u6790\u5668 DocumentBuilder builder = factory . newDocumentBuilder (); // \u89e3\u6790xml\u8fd4\u56dedocument Document document = builder . parse ( \"demo.xml\" ); NodeList list = document . getElementsByTagName ( \"person\" ); // \u83b7\u53d6\u7b2c\u4e00\u4e2a\u5143\u7d20 Node node = list . item ( 0 ); // \u521b\u5efa\u4e00\u4e2a\u5143\u7d20 Element element = document . createElement ( \"sex\" ); Text text = document . createTextNode ( \"\u5973\" ); // \u6dfb\u52a0\u521b\u5efa\u7684\u5143\u7d20\u5230\u8282\u70b9 element . appendChild ( text ); node . appendChild ( element ); // \u56de\u5199\u5230\u786c\u76d8 TransformerFactory transformerFactory = TransformerFactory . newInstance (); Transformer transformer = transformerFactory . newTransformer (); transformer . transform ( new DOMSource ( document ), new StreamResult ( \"demo.xml\" )); } } \u8bfe\u65f623-24 \u4f7f\u7528JAXP\u4fee\u6539\u3001\u5220\u9664\u8282\u70b9 xml\u8bfb\u53d6\u548c\u4fdd\u5b58\u7684\u5de5\u5177\u7c7b package util ; import org.w3c.dom.Document ; import org.xml.sax.SAXException ; import javax.xml.parsers.DocumentBuilder ; import javax.xml.parsers.DocumentBuilderFactory ; import javax.xml.parsers.ParserConfigurationException ; import javax.xml.transform.Transformer ; import javax.xml.transform.TransformerException ; import javax.xml.transform.TransformerFactory ; import javax.xml.transform.dom.DOMSource ; import javax.xml.transform.stream.StreamResult ; import java.io.IOException ; public class DocumentUtil { public static Document loadXml ( String filename ) throws ParserConfigurationException , IOException , SAXException { // \u521b\u5efa\u89e3\u6790\u5668\u5de5\u5382 DocumentBuilderFactory factory = DocumentBuilderFactory . newInstance (); // \u6839\u636e\u89e3\u6790\u5668\u5de5\u5382\u521b\u5efa\u89e3\u6790\u5668 DocumentBuilder builder = factory . newDocumentBuilder (); // \u89e3\u6790xml\u8fd4\u56dedocument return builder . parse ( filename ); } public static void dumpXml ( String filename , Document document ) throws TransformerException { TransformerFactory transformerFactory = TransformerFactory . newInstance (); Transformer transformer = transformerFactory . newTransformer (); transformer . transform ( new DOMSource ( document ), new StreamResult ( filename )); } } import org.w3c.dom.* ; import util.DocumentUtil ; public class Demo { public static void main ( String [] args ) throws Exception { String filename = \"demo.xml\" ; // \u8bfb\u53d6 Document document = DocumentUtil . loadXml ( filename ); // \u67e5\u8be2\u8282\u70b9 NodeList list = document . getElementsByTagName ( \"name\" ); Node node = list . item ( 0 ); // \u8bbe\u7f6e\u8282\u70b9\u5185\u5bb9 node . setTextContent ( \"\u5927\u58ee\" ); // \u5220\u9664\u8282\u70b9 Node parentNode = node . getParentNode (); parentNode . removeChild ( node ); // \u56de\u5199\u5230\u786c\u76d8 DocumentUtil . dumpXml ( filename , document ); } } \u8bfe\u65f625 \u4f7f\u7528JAXP\u904d\u5386\u8282\u70b9 \u4f7f\u7528\u9012\u5f52\u904d\u5386 import org.w3c.dom.* ; import util.DocumentUtil ; public class Demo { public static void listElement ( Node node ) { // \u5982\u679c\u8282\u70b9\u7c7b\u578b\u5143\u7d20\u8282\u70b9\u5219\u6253\u5370 if ( node . getNodeType () == node . ELEMENT_NODE ){ System . out . println ( node . getNodeName ()); } NodeList list = node . getChildNodes (); for ( int i = 0 ; i < list . getLength (); i ++) { listElement ( list . item ( i )); } } public static void main ( String [] args ) throws Exception { String filename = \"demo.xml\" ; // \u8bfb\u53d6 Document document = DocumentUtil . loadXml ( filename ); listElement ( document ); } } \u7b2c4 \u7ae0 \uff1a Schema\uff1a\u57fa\u4e8eXML\u7684DTD\u66ff\u4ee3\u8005 \u8bfe\u65f626 Schema\u7684\u4ecb\u7ecd dtd\u8bed\u6cd5 <!ELEMENT \u5143\u7d20\u540d\u79f0 \u7ea6\u675f > scheme\u7b26\u5408xml\u8bed\u6cd5 \u4e00\u4e2axml\u53ef\u4ee5\u6709\u591a\u4e2ascheme\uff0c\u4f7f\u7528\u540d\u79f0\u7a7a\u95f4\u533a\u5206 dtd\u6709PCDAT\u7c7b\u578bscheme\u652f\u6301\u66f4\u591a\u6570\u636e\u7c7b\u578b scheme\u8bed\u6cd5\u66f4\u52a0\u590d\u6742 Schema \u6559\u7a0b https://www.w3school.com.cn/schema/index.asp \u8bfe\u65f627 Schema\u7684\u5f00\u53d1\u8fc7\u7a0b \u6587\u4ef6 *.xsd 1\u3001\u5c5e\u6027 <!-- \u8868\u793a\u7ea6\u675f\u6587\u4ef6 --> xmlns=\"http://www.w3.org/2001/XMLSchema\" <!-- \u7ea6\u675f\u6587\u4ef6\u547d\u540d\u7a7a\u95f4 url\u5730\u5740\u4fdd\u8bc1\u4e0d\u4f1a\u91cd\u590d --> targetNamespace=\"http://www.w3school.com.cn\" <!-- \u8d28\u91cf\u826f\u597d --> elementFormDefault=\"qualified\" 2\u3001\u590d\u6742\u5143\u7d20 <complexType> <sequence> <element name= \"name\" type= \"string\" ></element> <element name= \"age\" type= \"int\" ></element> </sequence> </complexType> 3\u3001\u5f15\u5165\u7ea6\u675f\u6587\u6863 \u8868\u793a\u88ab\u7ea6\u675f\u6587\u6863\uff0c\u522b\u540dxsi xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \u8def\u5f84\u5730\u5740 xsi:schemaLocation=\"http://www.w3school.com.cn demo.xsd\"> \u5b8c\u6574\u793a\u4f8b demo.xsd <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <schema xmlns= \"http://www.w3.org/2001/XMLSchema\" targetNamespace= \"http://www.w3school.com.cn\" elementFormDefault= \"qualified\" > <element name= \"person\" > <complexType> <sequence> <element name= \"name\" type= \"string\" ></element> <element name= \"age\" type= \"int\" ></element> </sequence> </complexType> </element> </schema> \u5f15\u5165xsd\u6587\u4ef6 <?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?> <person xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns= \"http://www.w3school.com.cn\" xsi:schemaLocation= \"http://www.w3school.com.cn demo.xsd\" > <name> \u5f20\u4e09 </name> <age> 23 </age> </person> \u8bfe\u65f628 Schema\u7ea6\u675fAPI\u67e5\u770b sequence \u8868\u793a\u5143\u7d20\u51fa\u73b0\u987a\u5e8f all \u53ea\u80fd\u51fa\u73b0\u4e00\u6b21 choice \u51fa\u73b0\u4efb\u610f\u4e00\u4e2a maxOccurs=\"unbounded\" \u51fa\u73b0\u6b21\u6570\u6ca1\u6709\u9650\u5236 any \u4efb\u610f\u5143\u7d20 \u590d\u6742\u5143\u7d20\u4e2d\u5b9a\u4e49\u5c5e\u6027 <attribute name= \"age\" type= \"int\" use= \"required\" ></attribute> \u5f15\u5165\u591a\u4e2aschema\uff0c\u53ef\u4ee5\u7ed9\u6bcf\u4e2aschema\u53d6\u522b\u540d \u8bfe\u65f629 sax\u89e3\u6790\u7684\u8fc7\u7a0b dom \u5185\u5b58\u865a\u62df\u6811\u5f62\u7ed3\u6784 sax \u4e8b\u4ef6\u9a71\u52a8\uff0c\u8fb9\u8bfb\u8fb9\u89e3\u6790 package org.xml.sax ; public class HandlerBase { public void startElement ( String name , AttributeList attributes ); public void characters ( char ch [], int start , int length ); public void endElement ( String name ); } package org.xml.sax.helpers ; public class DefaultHandler { public void startElement ( String uri , String localName , String qName , Attributes attributes ) public void endElement ( String uri , String localName , String qName ) public void characters ( char ch [], int start , int length ) } \u8bfe\u65f630 \u4f7f\u7528Schema\u7684sax\u65b9\u5f0f\u64cd\u4f5cxml demo.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <person> <name> \u5f20\u4e09 </name> <age> 23 </age> </person> \u4f7f\u7528jaxp\u7684sax\u89e3\u6790\u53ea\u80fd\u8fdb\u884c\u67e5\u8be2\u64cd\u4f5c import org.xml.sax.Attributes ; import org.xml.sax.helpers.DefaultHandler ; import javax.xml.parsers.SAXParser ; import javax.xml.parsers.SAXParserFactory ; public class Demo { public static void main ( String [] args ) throws Exception { SAXParserFactory factory = SAXParserFactory . newInstance (); SAXParser parser = factory . newSAXParser (); // \u4f20\u5165\u4e8b\u4ef6\u5904\u7406\u7c7b parser . parse ( \"demo.xml\" , new MyDefaultHandler ()); } } /** * \u81ea\u5b9a\u4e49\u4e8b\u4ef6\u5904\u7406 */ class MyDefaultHandler extends DefaultHandler { @Override public void startElement ( String uri , String localName , String qName , Attributes attributes ) { System . out . println ( qName ); } @Override public void endElement ( String uri , String localName , String qName ) { System . out . println ( qName ); } @Override public void characters ( char [] ch , int start , int length ) { System . out . println ( new String ( ch , start , length )); } } \u7b2c5 \u7ae0 \uff1a XML\u89e3\u6790\u4e4bdom4j \u8bfe\u65f631 dom4j\u7684\u7b80\u4ecb https://dom4j.github.io/ \u4f9d\u8d56 <dependency> <groupId> org.dom4j </groupId> <artifactId> dom4j </artifactId> <version> 2.0.0 </version> </dependency> demo.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <list> <person> <name> \u5f20\u4e09 </name> <age> 23 </age> </person> <person> <name> \u674e\u56db </name> <age> 24 </age> </person> </list> \u8bfe\u65f632 \u4f7f\u7528dom4j\u5b9e\u73b0\u67e5\u8be2xml\u64cd\u4f5c import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.Element ; import org.dom4j.io.SAXReader ; import java.util.List ; class Demo { public static void main ( String [] args ) throws DocumentException { // \u521b\u5efa\u89e3\u6790\u5668 SAXReader reader = new SAXReader (); // \u5f97\u5230Document Document document = reader . read ( \"demo.xml\" ); // \u83b7\u53d6\u6839\u5143\u7d20 Element root = document . getRootElement (); // \u5f97\u5230\u6240\u6709person\u6807\u7b7e List < Element > list = root . elements ( \"person\" ); // \u904d\u5386\u6807\u7b7e for ( Element element : list ) { Element name = element . element ( \"name\" ); // \u83b7\u53d6\u503c String text = name . getText (); System . out . println ( text ); } } } \u8bfe\u65f633 \u4f7f\u7528dom4j\u5b9e\u73b0\u5728\u672b\u5c3e\u6dfb\u52a0\u8282\u70b9\u7684\u64cd\u4f5c import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.Element ; import org.dom4j.io.OutputFormat ; import org.dom4j.io.SAXReader ; import org.dom4j.io.XMLWriter ; import java.io.FileOutputStream ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws DocumentException , IOException { // \u521b\u5efa\u89e3\u6790\u5668\uff0c \u5f97\u5230Document SAXReader reader = new SAXReader (); Document document = reader . read ( \"demo.xml\" ); // \u83b7\u53d6\u6839\u5143\u7d20 Element root = document . getRootElement (); // \u6dfb\u52a0\u5143\u7d20\u5e76\u8bbe\u7f6e\u5185\u5bb9 Element person = root . element ( \"person\" ); Element sex = person . addElement ( \"sex\" ); sex . setText ( \"\u7537\" ); // \u56de\u5199\u5e76\u683c\u5f0f\u5316 OutputFormat format = OutputFormat . createPrettyPrint (); XMLWriter xmlWriter = new XMLWriter ( new FileOutputStream ( \"demo.xml\" ), format ); xmlWriter . write ( document ); xmlWriter . close (); } } \u8bfe\u65f634 \u4f7f\u7528dom4j\u5b9e\u73b0\u5728\u5728\u7279\u5b9a\u4f4d\u7f6e\u6dfb\u52a0\u8282\u70b9\u7684\u64cd\u4f5c import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.DocumentHelper ; import org.dom4j.Element ; import org.dom4j.io.OutputFormat ; import org.dom4j.io.SAXReader ; import org.dom4j.io.XMLWriter ; import java.io.FileOutputStream ; import java.io.IOException ; import java.util.List ; class Demo { public static void main ( String [] args ) throws DocumentException , IOException { // \u521b\u5efa\u89e3\u6790\u5668\uff0c \u5f97\u5230Document SAXReader reader = new SAXReader (); Document document = reader . read ( \"demo.xml\" ); Element root = document . getRootElement (); // \u6307\u5b9a\u4f4d\u7f6e\u6dfb\u52a0\u5143\u7d20 Element person = root . element ( \"person\" ); List < Element > list = person . elements (); Element sex = DocumentHelper . createElement ( \"sex\" ); sex . setText ( \"\u5973\" ); list . add ( 1 , sex ); // \u56de\u5199\u5e76\u683c\u5f0f\u5316 OutputFormat format = OutputFormat . createPrettyPrint (); XMLWriter xmlWriter = new XMLWriter ( new FileOutputStream ( \"demo.xml\" ), format ); xmlWriter . write ( document ); xmlWriter . close (); } } \u8bfe\u65f635 dom4j\u91cc\u9762\u5c01\u88c5\u65b9\u6cd5\u7684\u64cd\u4f5c package util ; import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.io.OutputFormat ; import org.dom4j.io.SAXReader ; import org.dom4j.io.XMLWriter ; import java.io.FileOutputStream ; import java.io.IOException ; public class Dom4jUtil { public static Document getDocument ( String path ) throws DocumentException { // \u521b\u5efa\u89e3\u6790\u5668\uff0c \u5f97\u5230Document SAXReader reader = new SAXReader (); return reader . read ( path ); } public static void writeXml ( String path , Document document ) throws IOException { // \u56de\u5199\u5e76\u683c\u5f0f\u5316 OutputFormat format = OutputFormat . createPrettyPrint (); XMLWriter xmlWriter = new XMLWriter ( new FileOutputStream ( path ), format ); xmlWriter . write ( document ); xmlWriter . close (); } } \u8bfe\u65f636 \u4f7f\u7528dom4j\u5b9e\u73b0\u4fee\u6539\u7684\u64cd\u4f5c import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.Element ; import util.Dom4jUtil ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws DocumentException , IOException { // \u521b\u5efa\u89e3\u6790\u5668\uff0c \u5f97\u5230Document String path = \"demo.xml\" ; Document document = Dom4jUtil . getDocument ( path ); // \u83b7\u53d6\u6839\u5143\u7d20 Element root = document . getRootElement (); Element peron = root . element ( \"person\" ); Element sex = peron . element ( \"sex\" ); sex . setText ( \"\u7537\" ); // \u56de\u5199\u5e76\u683c\u5f0f\u5316 Dom4jUtil . writeXml ( path , document ); } } \u8bfe\u65f637 \u4f7f\u7528dom4j\u5b9e\u73b0\u5220\u9664\u8282\u70b9\u7684\u64cd\u4f5c import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.Element ; import util.Dom4jUtil ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws DocumentException , IOException { String path = \"demo.xml\" ; Document document = Dom4jUtil . getDocument ( path ); // \u83b7\u53d6\u6839\u5143\u7d20 Element root = document . getRootElement (); Element person = root . element ( \"person\" ); Element sex = person . element ( \"sex\" ); // \u901a\u8fc7\u7236\u8282\u70b9\u5220\u9664 sex . getParent (). remove ( sex ); // \u56de\u5199\u5e76\u683c\u5f0f\u5316 Dom4jUtil . writeXml ( path , document ); } } \u8bfe\u65f638 \u4f7f\u7528dom4j\u5b9e\u73b0\u83b7\u53d6\u5c5e\u6027\u503c\u7684\u64cd\u4f5c demo.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <person id= \"001\" > <name> \u5f20\u4e09 </name> <age> 23 </age> </person> import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.Element ; import util.Dom4jUtil ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws DocumentException , IOException { String path = \"demo.xml\" ; Document document = Dom4jUtil . getDocument ( path ); Element root = document . getRootElement (); String id = root . attributeValue ( \"id\" ); System . out . println ( id ); // 001 } } \u7b2c6 \u7ae0 \uff1a XPATH \u8bfe\u65f639 XPATH\u7b80\u4ecb dom4j\u652f\u6301xpath\u64cd\u4f5c \u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6\u5143\u7d20 / a / b / c \u4e00\u5c42\u4e00\u5c42\u9009\u62e9 // b \u4e0d\u7ba1\u5c42\u7ea7 \uff0c \u76f4\u63a5\u9009\u62e9b /* \u6240\u6709\u5143\u7d20 /a/b[1] \u7b2c\u4e00\u4e2ab\u5143\u7d20 /a/b[last()] \u6700\u540e\u4e00\u4e2ab\u5143\u7d20 //b[@id] \u53ea\u8981\u6709id\u5c5e\u6027 //b[@name=\"bbb\"] name\u5c5e\u6027\u7b49\u4e8ebbb \u8bfe\u65f640 \u4f7f\u7528dom4j\u652f\u6301XPATH\u7684\u64cd\u4f5c\u4e00 jaxen selectNode() selectSingleNode() demo.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <person id= \"001\" > <name> \u5f20\u4e09 </name> <age> 23 </age> </person> \u793a\u4f8b\uff1a\u5f97\u5230\u6240\u6709name\u8282\u70b9 import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.Node ; import util.Dom4jUtil ; import java.util.List ; class Demo { public static void main ( String [] args ) throws DocumentException { String path = \"demo.xml\" ; Document document = Dom4jUtil . getDocument ( path ); // \u83b7\u53d6\u5143\u7d20 List < Node > list = document . selectNodes ( \"//name\" ); // \u904d\u5386\u96c6\u5408 for ( Node node : list ) { String text = node . getText (); System . out . println ( text ); } } } \u8bfe\u65f641 \u4f7f\u7528dom4j\u652f\u6301XPATH\u7684\u64cd\u4f5c\u4e8c import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.Node ; import util.Dom4jUtil ; class Demo { public static void main ( String [] args ) throws DocumentException { String path = \"demo.xml\" ; Document document = Dom4jUtil . getDocument ( path ); // \u83b7\u53d6\u6839\u5143\u7d20 Node name = document . selectSingleNode ( \"/person[@id='001']/name\" ); System . out . println ( name . getText ()); } } \u7b2c7 \u7ae0 \uff1a \u6848\u4f8b \u8bfe\u65f642-44 \u5b66\u751f\u7ba1\u7406\u7cfb\u7edf\u5b9e\u73b0-\u6dfb\u52a0\u3001\u5220\u9664\u3001\u67e5\u8be2\u64cd\u4f5c \u4f7f\u7528xml\u4f5c\u4e3a\u6570\u636e\u5e93\uff0c\u5b58\u50a8\u5b66\u751f\u6570\u636e \u4f9d\u8d56 <dependency> <groupId> org.dom4j </groupId> <artifactId> dom4j </artifactId> <version> 2.0.0 </version> </dependency> demo.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <list> </list> Dom4jUtil.java package util ; import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.io.OutputFormat ; import org.dom4j.io.SAXReader ; import org.dom4j.io.XMLWriter ; import java.io.FileOutputStream ; import java.io.IOException ; public class Dom4jUtil { public static Document getDocument ( String path ) throws DocumentException { // \u521b\u5efa\u89e3\u6790\u5668\uff0c \u5f97\u5230Document SAXReader reader = new SAXReader (); return reader . read ( path ); } public static void writeXml ( String path , Document document ) throws IOException { // \u56de\u5199\u5e76\u683c\u5f0f\u5316 OutputFormat format = OutputFormat . createPrettyPrint (); XMLWriter xmlWriter = new XMLWriter ( new FileOutputStream ( path ), format ); xmlWriter . write ( document ); xmlWriter . close (); } } Student.java package com.pengshiyu.student ; public class Student { private String id ; private String name ; private int age ; public Student () { } public Student ( String id , String name , int age ) { this . id = id ; this . name = name ; this . age = age ; } public String getId () { return id ; } public void setId ( String id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getAge () { return age ; } public void setAge ( int age ) { this . age = age ; } @Override public String toString () { return \"Student{\" + \"id='\" + id + '\\'' + \", name='\" + name + '\\'' + \", age=\" + age + '}' ; } } StudentService.java package com.pengshiyu.student ; import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.Element ; import org.dom4j.Node ; import util.Dom4jUtil ; import java.io.IOException ; import java.util.List ; public class StudentService { private static final String path = \"demo.xml\" ; /** * \u6dfb\u52a0\u6570\u636e * * @param student * @throws DocumentException * @throws IOException */ public static void addStudent ( Student student ) throws DocumentException , IOException { Document document = Dom4jUtil . getDocument ( path ); Element root = document . getRootElement (); Element person = root . addElement ( \"person\" ); Element id = person . addElement ( \"id\" ); id . setText ( student . getId ()); Element name = person . addElement ( \"name\" ); name . setText ( student . getName ()); Element age = person . addElement ( \"age\" ); age . setText ( String . valueOf ( student . getAge ())); Dom4jUtil . writeXml ( path , document ); } /** * \u5220\u9664\u6570\u636e * * @param uid * @throws IOException * @throws DocumentException */ public static void removeStudent ( String uid ) throws IOException , DocumentException { Document document = Dom4jUtil . getDocument ( path ); // \u83b7\u53d6\u6240\u6709\u7684id List < Node > list = document . selectNodes ( \"//id\" ); for ( Node node : list ) { String nodeId = node . getText (); // System.out.println(nodeId); // \u5224\u65adid\u76f8\u540c\uff0c\u901a\u8fc7\u7956\u7236\u8282\u70b9\u79fb\u9664\u7236\u8282\u70b9 if ( uid . equals ( nodeId )) { Element parent = node . getParent (); Element grandfather = parent . getParent (); grandfather . remove ( parent ); } } Dom4jUtil . writeXml ( path , document ); } /** * \u67e5\u8be2\u6570\u636e * * @param uid * @return * @throws IOException * @throws DocumentException */ public static Student getStudent ( String uid ) throws DocumentException { Document document = Dom4jUtil . getDocument ( path ); // \u83b7\u53d6\u6240\u6709\u7684id List < Node > list = document . selectNodes ( \"//id\" ); for ( Node node : list ) { String nodeId = node . getText (); // System.out.println(nodeId); // \u5224\u65adid\u76f8\u540c\uff0c\u901a\u8fc7\u7956\u7236\u8282\u70b9\u79fb\u9664\u7236\u8282\u70b9 if ( uid . equals ( nodeId )) { Element parent = node . getParent (); Student student = new Student (); student . setId ( parent . element ( \"id\" ). getText ()); student . setName ( parent . element ( \"name\" ). getText ()); student . setAge ( Integer . parseInt ( parent . element ( \"age\" ). getText ())); return student ; } } return null ; } } StudentTest.java package com.pengshiyu.student ; import org.dom4j.DocumentException ; import org.junit.Test ; import java.io.IOException ; public class StudentTest { @Test public void testAddStudent () throws IOException , DocumentException { Student student = new Student ( \"001\" , \"Tom\" , 23 ); StudentService . addStudent ( student ); } @Test public void testRemoveStudent () throws IOException , DocumentException { StudentService . removeStudent ( \"001\" ); } @Test public void testGEtStudent () throws IOException , DocumentException { Student student = StudentService . getStudent ( \"001\" ); System . out . println ( student ); } }","title":"7 JavaWeb XML\u5feb\u901f\u5165\u95e8"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#1-xml","text":"","title":"\u7b2c1 \u7ae0 \uff1a XML\u5165\u95e8"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#1-xml_1","text":"eXtensible Markup Language \u4e3b\u8981\u4f7f\u75281.0\u7248\u672c \u8bed\u8a00 \u4e2d\u6587\u540d\u79f0 \u7528\u9014 html \u6807\u8bb0\u578b\u8bed\u8a00 \u663e\u793a\u6570\u636e xml \u53ef\u6269\u5c55\u6807\u8bb0\u578b\u8bed\u8a00 \u5b58\u50a8\u6570\u636e","title":"\u8bfe\u65f61 XML\u7b80\u4ecb"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#2-xml","text":"1\u3001\u4f20\u8f93\u6570\u636e 2\u3001\u8868\u793a\u6709\u5173\u7cfb\u7684\u6570\u636e 3\u3001\u914d\u7f6e\u6587\u4ef6","title":"\u8bfe\u65f62 XML\u7684\u5e94\u7528"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#3-xml","text":"(1)xml\u7684\u6587\u6863\u58f0\u660e (2)\u5b9a\u4e49\u5143\u7d20\uff08\u6807\u7b7e\uff09 (3)\u6ce8\u91ca (4)\u7279\u6b8a\u5b57\u7b26 (5)CDATA\u533a (6)PI\u6307\u4ee4 \u6587\u4ef6 *.xml 1\u3001xml\u7684\u6587\u6863\u58f0\u660e \u5fc5\u987b\u5199\u5728\u7b2c\u4e00\u884c\u7b2c\u4e00\u5217 <?xml version=\"1.0\" encoding=\"gbk\" ?> \u5c5e\u6027\uff1a version \u7248\u672c 1.0 encoding \u7f16\u7801 gbk/utf-8 standalone \u4f9d\u8d56\u5176\u4ed6\u6587\u4ef6 yes/no","title":"\u8bfe\u65f63 XML\u7684\u6587\u6863\u58f0\u660e"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#4-xml","text":"<?xml version=\"1.0\" encoding=\"gbk\" ?> <person> <name> \u5f20\u4e09 </name> <age> 23 </age> </person>","title":"\u8bfe\u65f64 XML\u4e2d\u6587\u4e71\u7801\u95ee\u9898\u89e3\u51b3"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#5-xml","text":"1\u3001\u53ea\u80fd\u6709\u4e00\u4e2a\u6839\u6807\u7b7e 2\u3001\u5408\u7406\u5d4c\u5957 3\u3001\u7a7a\u683c\u548c\u6362\u884c\u90fd\u4f1a\u5f53\u505a\u539f\u59cb\u5185\u5bb9\u89e3\u6790 4\u3001\u6709\u5f00\u59cb\u5fc5\u987b\u6709\u7ed3\u675f <person></person> 5\u3001\u6807\u7b7e\u6ca1\u6709\u5185\u5bb9\uff0c\u53ef\u4ee5\u5728\u6807\u7b7e\u5185\u7ed3\u675f <person /> \u6807\u7b7e\u547d\u540d\u89c4\u5219 \uff081\uff09\u533a\u5206\u5927\u5c0f\u5199 \uff082\uff09\u4e0d\u80fd\u4ee5\u6570\u5b57\u4e0b\u5212\u7ebf\u5f00\u5934 \uff083\uff09\u4e0d\u80fd\u4ee5xml\u3001XML\u3001Xml\u7b49\u5f00\u5934 \uff084\uff09\u4e0d\u80fd\u5305\u542b\u7a7a\u683c\u548c\u5192\u53f7 \uff085\uff09\u6807\u7b7e\u53ef\u4ee5\u662f\u4e2d\u6587","title":"\u8bfe\u65f65 XML\u5143\u7d20\u7684\u5b9a\u4e49"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#6-xml","text":"html\u548cxml\u90fd\u662f\u6807\u8bb0\u578b\u6587\u6863\uff0c\u53ef\u4ee5\u6709\u5c5e\u6027 <person id= \"001\" ></person> \u5c5e\u6027\u8981\u6c42 \uff081\uff09\u4e00\u4e2a\u6807\u7b7e\u53ef\u4ee5\u6709\u591a\u4e2a\u5c5e\u6027 \uff082\uff09\u5c5e\u6027\u540d\u79f0\u4e0d\u80fd\u76f8\u540c \uff083\uff09\u5c5e\u6027\u540d\u79f0\u4e0e\u5c5e\u6027\u503c\u4e4b\u95f4\u4f7f\u7528\u7b49\u53f7\uff08=\uff09 \uff084\uff09\u5c5e\u6027\u503c\u4f7f\u7528\u5f15\u53f7\uff08\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\uff09\u5305\u8d77\u6765 \uff085\uff09\u5c5e\u6027\u540d\u547d\u540d\u8d35\u65b9\u548c\u5143\u7d20\u7684\u547d\u540d\u89c4\u8303\u4e00\u81f4","title":"\u8bfe\u65f66 XML\u5c5e\u6027\u7684\u5b9a\u4e49"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#7-xml","text":"<!-- \u8fd9\u91cc\u662f\u6ce8\u91ca --> \u6ce8\u91ca\u4e0d\u80fd\u5d4c\u5957 \u6ce8\u91ca\u4e0d\u80fd\u653e\u5230\u7b2c\u4e00\u884c","title":"\u8bfe\u65f67 XML\u6ce8\u91ca"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#8-xml","text":"> \uff1a &gt; < \uff1a &lt;","title":"\u8bfe\u65f68 XML\u7279\u6b8a\u5b57\u7b26"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#9-xmlcdata","text":"\u53ef\u4ee5\u89e3\u51b3\u591a\u4e2a\u5b57\u7b26\u90fd\u9700\u8981\u8f6c\u4e49\u7684\u64cd\u4f5c \u7279\u6b8a\u5b57\u7b26\u4f1a\u5f53\u505a\u6587\u672c\u5185\u5bb9 <![CDATA[ \u5185\u5bb9 ]]>","title":"\u8bfe\u65f69 XML\u7684CDATA\u533a"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#10-xmlpi","text":"Processing Instruction \u53ef\u4ee5\u5728xml\u4e2d\u8bbe\u7f6e\u6837\u5f0f \u53ea\u80fd\u5bf9\u82f1\u6587\u6807\u7b7e\u8d77\u4f5c\u7528 <?xml version=\"1.0\" encoding=\"utf-8\" ?> <?xml-stylesheet type=\"text/css\" href=\"./demo.css\" ?> <person> <name> \u5f20\u4e09 </name> <age> 23 </age> </person> demo.css name { color : green ; }","title":"\u8bfe\u65f610 XML\u7684PI\u6307\u4ee4"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#11-xml","text":"1\u3001xml\u8bed\u6cd5\u603b\u7ed3 \uff081\uff09\u6240\u6709xml\u5143\u7d20\u90fd\u5fc5\u987b\u6709\u5173\u95ed\u6807\u7b7e \uff082\uff09xml\u6807\u7b7e\u5bf9\u5927\u5c0f\u5199\u654f\u611f \uff083\uff09xml\u5fc5\u987b\u6b63\u786e\u5d4c\u5957 \uff084\uff09xml\u5fc5\u987b\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u6839\u5143\u7d20 \uff085\uff09xml\u5c5e\u6027\u503c\u9700\u8981\u52a0\u5f15\u53f7 \uff086\uff09\u7279\u6b8a\u5b57\u7b26\u5fc5\u987b\u8f6c\u4e49 \uff087\uff09\u539f\u6837\u8f93\u51fa\u6587\u672c\u4f7f\u7528 <![CDATA[]]> \uff088\uff09xml\u4e2d\u7684\u7a7a\u683c\u3001\u56de\u8f66\u6362\u884c\u5728\u89e3\u6790\u65f6\u4f1a\u88ab\u4fdd\u7559 2\u3001xml\u7684\u7ea6\u675f \uff081\uff09dtd\u7ea6\u675f \uff082\uff09scheme\u7ea6\u675f","title":"\u8bfe\u65f611 XML\u7ea6\u675f\u7b80\u4ecb"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#2-dtd","text":"","title":"\u7b2c2 \u7ae0 \uff1a DTD\uff08\u6587\u6863\u7c7b\u578b\u5b9a\u4e49\uff09"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#12-dtd","text":"\u6587\u4ef6 *.dtd \uff0c\u4f7f\u7528idea\u6253\u5f00\u4f1a\u63d0\u793a \u6587\u6863\u7c7b\u578b\u5b9a\u4e49\uff08DTD\uff0cDocument Type Definition\uff09 1\u3001\u590d\u6742\u5143\u7d20\uff1a\u6709\u5b50\u5143\u7d20\u7684\u5143\u7d20 <!ELEMENT \u5143\u7d20\u540d\u79f0 ( \u5b50\u5143\u7d20 ) > eg: <!ELEMENT person ( name , age ) > 2\u3001\u7b80\u5355\u5143\u7d20 <!ELEMENT \u5143\u7d20\u540d\u79f0 ( #PCDATA ) > eg: <!ELEMENT age ( #PCDATA ) > 3\u3001\u5f15\u5165dtd\u6587\u4ef6 <!DOCTYPE person SYSTEM \"demo.dtd\"> \u793a\u4f8b <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE person SYSTEM \"demo.dtd\"> <person> <name> \u5f20\u4e09 </name> <age> 23 </age> </person> demo.dtd <!ELEMENT person ( name , age ) > <!ELEMENT name ( #PCDATA ) > <!ELEMENT age ( #PCDATA ) >","title":"\u8bfe\u65f612 DTD\u5feb\u901f\u5165\u95e8"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#13-dtd","text":"1\u3001\u5f15\u5165\u5916\u90e8 <! DOCTYPE \u6839\u5143\u7d20\u540d\u79f0 SYSTEM \"dtd\u8def\u5f84\" > 2\u3001\u5f15\u5165\u5185\u90e8 <!DOCTYPE \u6839\u5143\u7d20\u540d\u79f0 [ <!ELEMENT person ( name , age ) > <!ELEMENT name ( #PCDATA ) > <!ELEMENT age ( #PCDATA ) > ]> 3\u3001\u4f7f\u7528\u7f51\u7edc <! DOCTYPE \u6839\u5143\u7d20\u540d\u79f0 PUBLIC \"DTD\u540d\u79f0\" \"DTD\u8def\u5f84URL\" >","title":"\u8bfe\u65f613 DTD\u7684\u4e09\u79cd\u5f15\u5165\u65b9\u5f0f"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#14-dtd","text":"\u8bed\u6cd5 <!ELEMENT \u5143\u7d20\u540d \u7ea6\u675f > 1\u3001\u7b80\u5355\u5143\u7d20\uff1a\u6ca1\u6709\u5b50\u5143\u7d20\u7684\u5143\u7d20 <!ELEMENT \u5143\u7d20\u540d ( #PCDATA ) > (#PCDATA) \u5b57\u7b26\u4e32\uff08\u9700\u8981\u52a0\u62ec\u53f7\uff09 EMPTY \u5143\u7d20\u4e3a\u7a7a ANY \u4efb\u610f 2\u3001\u590d\u6742\u5143\u7d20 <!ELEMENT \u5143\u7d20\u540d ( \u5b50\u5143\u7d20 ) > \uff081\uff09\u5b50\u5143\u7d20\u51fa\u73b0\u6b21\u6570 + \u4e00\u6b21\u6216\u591a\u6b21 ? \u96f6\u6b21\u6216\u4e00\u6b21 * \u96f6\u6b21\u6216\u591a\u6b21 \uff082\uff09\u5b50\u5143\u7d20\u5206\u9694\u7b26 \u9017\u53f7\u9694\u5f00\uff1a\u8868\u793a\u51fa\u73b0\u987a\u5e8f \u7ad6\u7ebf\u9694\u5f00\uff1a\u8868\u793a\u4efb\u610f\u4e00\u4e2a eg: <!ELEMENT person ( name +, age ?, sex , school *) > <!ELEMENT name ( #PCDATA ) > <!ELEMENT age ( #PCDATA ) > <!ELEMENT sex EMPTY > <!ELEMENT school ANY >","title":"\u8bfe\u65f614 \u4f7f\u7528DTD\u5b9a\u4e49\u5143\u7d20"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#15-dtd","text":"\u8bed\u6cd5 <! ATTLIST \u5143\u7d20\u540d\u79f0 \u5c5e\u6027\u540d\u79f0 \u5c5e\u6027\u7c7b\u578b \u5c5e\u6027\u7684\u7ea6\u675f > 1\u3001\u5c5e\u6027\u7c7b\u578b \uff081\uff09CDATA \u5b57\u7b26\u4e32 \uff082\uff09(a|b|c) \u679a\u4e3e \uff083\uff09ID \u503c\u53ea\u80fd\u4ee5\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\u5f00\u5934 2\u3001\u5c5e\u6027\u7684\u7ea6\u675f \uff081\uff09#REQUIRED \u5c5e\u6027\u5fc5\u987b\u5b58\u5728 \uff082\uff09#IMPLIED \u5c5e\u6027\u53ef\u6709\u53ef\u65e0 \uff083\uff09#FIXED \u5c5e\u6027\u5fc5\u987b\u662f\u56fa\u5b9a\u503c \uff084\uff09\u9ed8\u8ba4\u503c \u4e0d\u5199\u5c5e\u6027\u505a\u4e3a\u9ed8\u8ba4\u503c eg: <!ATTLIST \u9875\u9762\u4f5c\u8005 \u59d3\u540d CDATA #REQUIRED \u5e74\u9f84 CDATA #IMPLIED \u804c\u4f4d CDATA #FIXED \u4f5c\u8005 \u7231\u597d CDATA \u5199\u4f5c >","title":"\u8bfe\u65f615 \u4f7f\u7528DTD\u5b9a\u4e49\u5c5e\u6027"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#16","text":"\u8bed\u6cd5 \u5b9a\u4e49 <!ENTITY \u5b9e\u4f53\u540d\u79f0 \"\u5b9e\u4f53\u503c\" > \u4f7f\u7528 &\u5b9e\u4f53\u540d\u79f0 \u5b9e\u4f53\u9700\u8981\u5b9a\u4e49\u5728\u5185\u90e8dtd","title":"\u8bfe\u65f616 \u5b9a\u4e49\u5b9e\u4f53"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#17-w3c","text":"https://www.w3school.com.cn/dtd/dtd_examples.asp","title":"\u8bfe\u65f617 W3C\u7684\u6848\u4f8b"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#3-xmljaxp","text":"","title":"\u7b2c3 \u7ae0\uff1a XML\u89e3\u6790\u4e4bJAXP"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#18-xml","text":"1\u3001dom\u65b9\u5f0f\u89e3\u6790xml\u8fc7\u7a0b\uff1a \u6839\u636exml\u7684\u5c42\u7ea7\u7ed3\u6784\uff0c\u5728\u5185\u5b58\u4e2d\u5206\u914d\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784 \u628axml\u4e2d\u6bcf\u90e8\u5206\u90fd\u5c01\u88c5\u6210\u5bf9\u8c61 \uff081\uff09\u4f18\u70b9\uff1a\u65b9\u4fbf\u5b9e\u73b0\u589e\u3001\u5220\u3001\u6539\u64cd\u4f5c \uff082\uff09\u7f3a\u70b9\uff1a\u5982\u679c\u6587\u4ef6\u8fc7\u5927\uff0c\u9020\u6210\u5185\u5b58\u6ea2\u51fa 2\u3001sax\u65b9\u5f0f\u89e3\u6790xml\u8fc7\u7a0b\uff1a \u91c7\u7528\u4e8b\u4ef6\u9a71\u52a8\uff0c\u8fb9\u8bfb\u8fb9\u89e3\u6790\uff0c\u4ece\u4e0a\u5230\u4e0b\uff0c\u4e00\u884c\u4e00\u884c\u7684\u89e3\u6790\uff0c \u89e3\u6790\u5230\u4e00\u4e2a\u5bf9\u8c61\uff0c\u628a\u5bf9\u8c61\u540d\u79f0\u8fd4\u56de \uff081\uff09\u4f18\u70b9\uff1a\u4e0d\u4f1a\u9020\u6210\u5185\u5b58\u6ea2\u51fa\uff0c\u5b9e\u73b0\u67e5\u8be2 \uff082\uff09\u7f3a\u70b9\uff1a\u4e0d\u80fd\u5b9e\u73b0\u589e\u3001\u5220\u3001\u6539\u64cd\u4f5c","title":"\u8bfe\u65f618 XML\u89e3\u6790\u7b80\u4ecb"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#19-jaxp-api","text":"dom\u548csax\u89e3\u6790\u5668\uff1a \uff081\uff09sun\u516c\u53f8 jaxp \uff082\uff09dom4j\u7ec4\u7ec7 dom4j\uff08\u5b9e\u9645\u5f00\u53d1\uff09 \uff083\uff09jdom\u7ec4\u7ec7 jdom 1\u3001jaxp jaxp\u662fjavese\u4e00\u90e8\u5206 javax.xml.parses interface Node { // \u6dfb\u52a0\u8282\u70b9 public Node appendChild ( Node newChild ); // \u79fb\u9664\u8282\u70b9 public Node removeChild ( Node oldChild ); // \u83b7\u53d6\u7236\u8282\u70b9 public Node getParentNode (); // \u8fd4\u56de\u6587\u672c\u5185\u5bb9 public String getTextContent () } interface NodeList { // \u901a\u8fc7\u4e0b\u6807\u83b7\u53d6\u5177\u4f53\u503c public Node item ( int index ); // \u5f97\u5230\u96c6\u5408\u957f\u5ea6 public int getLength (); } interface Document extends Node { // \u83b7\u53d6\u6807\u7b7e public NodeList getElementsByTagName ( String tagname ); // \u521b\u5efa\u6807\u7b7e public Element createElement ( String tagName ); // \u521b\u5efa\u6587\u672c public Text createTextNode ( String data ); } abstract DocumentBuilder { public Document parse ( File f ) } abstract DocumentBuilderFactory { public static DocumentBuilderFactory newInstance () public abstract DocumentBuilder newDocumentBuilder () } abstract class SAXParser {} abstract class SAXParserFactory {}","title":"\u8bfe\u65f619 JAXP API\u7684\u67e5\u770b"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#20-21-jaxp","text":"\u793a\u4f8b\uff1a\u67e5\u8be2xml\u4e2d\u6240\u6709name\u503c demo.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <list> <person> <name> \u5f20\u4e09 </name> <age> 23 </age> </person> <person> <name> \u674e\u56db </name> <age> 24 </age> </person> </list> import org.w3c.dom.Document ; import org.w3c.dom.Node ; import org.w3c.dom.NodeList ; import javax.xml.parsers.DocumentBuilder ; import javax.xml.parsers.DocumentBuilderFactory ; public class Demo { /** * 1\u3001\u521b\u5efa\u89e3\u6790\u5668\u5de5\u5382 * 2\u3001\u6839\u636e\u89e3\u6790\u5668\u5de5\u5382\u521b\u5efa\u89e3\u6790\u5668 * 3\u3001\u89e3\u6790xml\u8fd4\u56dedocument * */ public static void main ( String [] args ) throws Exception { DocumentBuilderFactory factory = DocumentBuilderFactory . newInstance (); DocumentBuilder builder = factory . newDocumentBuilder (); Document document = builder . parse ( \"demo.xml\" ); NodeList list = document . getElementsByTagName ( \"name\" ); for ( int i = 0 ; i < list . getLength (); i ++) { Node node = list . item ( i ); String name = node . getTextContent (); System . out . println ( name ); // \u5f20\u4e09 \u674e\u56db } } }","title":"\u8bfe\u65f620-21 \u4f7f\u7528JAXP\u67e5\u8be2\u8282\u70b9"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#22-jaxp","text":"\u5728person\u8282\u70b9\u4e0b\u6dfb\u52a0sex\u5b50\u8282\u70b9 import org.w3c.dom.Document ; import org.w3c.dom.Node ; import org.w3c.dom.NodeList ; import org.w3c.dom.Element ; import org.w3c.dom.Text ; import javax.xml.parsers.DocumentBuilder ; import javax.xml.parsers.DocumentBuilderFactory ; import javax.xml.transform.Transformer ; import javax.xml.transform.TransformerFactory ; import javax.xml.transform.dom.DOMSource ; import javax.xml.transform.stream.StreamResult ; public class Demo { public static void main ( String [] args ) throws Exception { // \u521b\u5efa\u89e3\u6790\u5668\u5de5\u5382 DocumentBuilderFactory factory = DocumentBuilderFactory . newInstance (); // \u6839\u636e\u89e3\u6790\u5668\u5de5\u5382\u521b\u5efa\u89e3\u6790\u5668 DocumentBuilder builder = factory . newDocumentBuilder (); // \u89e3\u6790xml\u8fd4\u56dedocument Document document = builder . parse ( \"demo.xml\" ); NodeList list = document . getElementsByTagName ( \"person\" ); // \u83b7\u53d6\u7b2c\u4e00\u4e2a\u5143\u7d20 Node node = list . item ( 0 ); // \u521b\u5efa\u4e00\u4e2a\u5143\u7d20 Element element = document . createElement ( \"sex\" ); Text text = document . createTextNode ( \"\u5973\" ); // \u6dfb\u52a0\u521b\u5efa\u7684\u5143\u7d20\u5230\u8282\u70b9 element . appendChild ( text ); node . appendChild ( element ); // \u56de\u5199\u5230\u786c\u76d8 TransformerFactory transformerFactory = TransformerFactory . newInstance (); Transformer transformer = transformerFactory . newTransformer (); transformer . transform ( new DOMSource ( document ), new StreamResult ( \"demo.xml\" )); } }","title":"\u8bfe\u65f622 \u4f7f\u7528JAXP\u6dfb\u52a0\u8282\u70b9"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#23-24-jaxp","text":"xml\u8bfb\u53d6\u548c\u4fdd\u5b58\u7684\u5de5\u5177\u7c7b package util ; import org.w3c.dom.Document ; import org.xml.sax.SAXException ; import javax.xml.parsers.DocumentBuilder ; import javax.xml.parsers.DocumentBuilderFactory ; import javax.xml.parsers.ParserConfigurationException ; import javax.xml.transform.Transformer ; import javax.xml.transform.TransformerException ; import javax.xml.transform.TransformerFactory ; import javax.xml.transform.dom.DOMSource ; import javax.xml.transform.stream.StreamResult ; import java.io.IOException ; public class DocumentUtil { public static Document loadXml ( String filename ) throws ParserConfigurationException , IOException , SAXException { // \u521b\u5efa\u89e3\u6790\u5668\u5de5\u5382 DocumentBuilderFactory factory = DocumentBuilderFactory . newInstance (); // \u6839\u636e\u89e3\u6790\u5668\u5de5\u5382\u521b\u5efa\u89e3\u6790\u5668 DocumentBuilder builder = factory . newDocumentBuilder (); // \u89e3\u6790xml\u8fd4\u56dedocument return builder . parse ( filename ); } public static void dumpXml ( String filename , Document document ) throws TransformerException { TransformerFactory transformerFactory = TransformerFactory . newInstance (); Transformer transformer = transformerFactory . newTransformer (); transformer . transform ( new DOMSource ( document ), new StreamResult ( filename )); } } import org.w3c.dom.* ; import util.DocumentUtil ; public class Demo { public static void main ( String [] args ) throws Exception { String filename = \"demo.xml\" ; // \u8bfb\u53d6 Document document = DocumentUtil . loadXml ( filename ); // \u67e5\u8be2\u8282\u70b9 NodeList list = document . getElementsByTagName ( \"name\" ); Node node = list . item ( 0 ); // \u8bbe\u7f6e\u8282\u70b9\u5185\u5bb9 node . setTextContent ( \"\u5927\u58ee\" ); // \u5220\u9664\u8282\u70b9 Node parentNode = node . getParentNode (); parentNode . removeChild ( node ); // \u56de\u5199\u5230\u786c\u76d8 DocumentUtil . dumpXml ( filename , document ); } }","title":"\u8bfe\u65f623-24 \u4f7f\u7528JAXP\u4fee\u6539\u3001\u5220\u9664\u8282\u70b9"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#25-jaxp","text":"\u4f7f\u7528\u9012\u5f52\u904d\u5386 import org.w3c.dom.* ; import util.DocumentUtil ; public class Demo { public static void listElement ( Node node ) { // \u5982\u679c\u8282\u70b9\u7c7b\u578b\u5143\u7d20\u8282\u70b9\u5219\u6253\u5370 if ( node . getNodeType () == node . ELEMENT_NODE ){ System . out . println ( node . getNodeName ()); } NodeList list = node . getChildNodes (); for ( int i = 0 ; i < list . getLength (); i ++) { listElement ( list . item ( i )); } } public static void main ( String [] args ) throws Exception { String filename = \"demo.xml\" ; // \u8bfb\u53d6 Document document = DocumentUtil . loadXml ( filename ); listElement ( document ); } }","title":"\u8bfe\u65f625 \u4f7f\u7528JAXP\u904d\u5386\u8282\u70b9"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#4-schemaxmldtd","text":"","title":"\u7b2c4 \u7ae0 \uff1a Schema\uff1a\u57fa\u4e8eXML\u7684DTD\u66ff\u4ee3\u8005"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#26-schema","text":"dtd\u8bed\u6cd5 <!ELEMENT \u5143\u7d20\u540d\u79f0 \u7ea6\u675f > scheme\u7b26\u5408xml\u8bed\u6cd5 \u4e00\u4e2axml\u53ef\u4ee5\u6709\u591a\u4e2ascheme\uff0c\u4f7f\u7528\u540d\u79f0\u7a7a\u95f4\u533a\u5206 dtd\u6709PCDAT\u7c7b\u578bscheme\u652f\u6301\u66f4\u591a\u6570\u636e\u7c7b\u578b scheme\u8bed\u6cd5\u66f4\u52a0\u590d\u6742 Schema \u6559\u7a0b https://www.w3school.com.cn/schema/index.asp","title":"\u8bfe\u65f626 Schema\u7684\u4ecb\u7ecd"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#27-schema","text":"\u6587\u4ef6 *.xsd 1\u3001\u5c5e\u6027 <!-- \u8868\u793a\u7ea6\u675f\u6587\u4ef6 --> xmlns=\"http://www.w3.org/2001/XMLSchema\" <!-- \u7ea6\u675f\u6587\u4ef6\u547d\u540d\u7a7a\u95f4 url\u5730\u5740\u4fdd\u8bc1\u4e0d\u4f1a\u91cd\u590d --> targetNamespace=\"http://www.w3school.com.cn\" <!-- \u8d28\u91cf\u826f\u597d --> elementFormDefault=\"qualified\" 2\u3001\u590d\u6742\u5143\u7d20 <complexType> <sequence> <element name= \"name\" type= \"string\" ></element> <element name= \"age\" type= \"int\" ></element> </sequence> </complexType> 3\u3001\u5f15\u5165\u7ea6\u675f\u6587\u6863 \u8868\u793a\u88ab\u7ea6\u675f\u6587\u6863\uff0c\u522b\u540dxsi xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \u8def\u5f84\u5730\u5740 xsi:schemaLocation=\"http://www.w3school.com.cn demo.xsd\"> \u5b8c\u6574\u793a\u4f8b demo.xsd <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <schema xmlns= \"http://www.w3.org/2001/XMLSchema\" targetNamespace= \"http://www.w3school.com.cn\" elementFormDefault= \"qualified\" > <element name= \"person\" > <complexType> <sequence> <element name= \"name\" type= \"string\" ></element> <element name= \"age\" type= \"int\" ></element> </sequence> </complexType> </element> </schema> \u5f15\u5165xsd\u6587\u4ef6 <?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?> <person xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns= \"http://www.w3school.com.cn\" xsi:schemaLocation= \"http://www.w3school.com.cn demo.xsd\" > <name> \u5f20\u4e09 </name> <age> 23 </age> </person>","title":"\u8bfe\u65f627 Schema\u7684\u5f00\u53d1\u8fc7\u7a0b"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#28-schemaapi","text":"sequence \u8868\u793a\u5143\u7d20\u51fa\u73b0\u987a\u5e8f all \u53ea\u80fd\u51fa\u73b0\u4e00\u6b21 choice \u51fa\u73b0\u4efb\u610f\u4e00\u4e2a maxOccurs=\"unbounded\" \u51fa\u73b0\u6b21\u6570\u6ca1\u6709\u9650\u5236 any \u4efb\u610f\u5143\u7d20 \u590d\u6742\u5143\u7d20\u4e2d\u5b9a\u4e49\u5c5e\u6027 <attribute name= \"age\" type= \"int\" use= \"required\" ></attribute> \u5f15\u5165\u591a\u4e2aschema\uff0c\u53ef\u4ee5\u7ed9\u6bcf\u4e2aschema\u53d6\u522b\u540d","title":"\u8bfe\u65f628 Schema\u7ea6\u675fAPI\u67e5\u770b"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#29-sax","text":"dom \u5185\u5b58\u865a\u62df\u6811\u5f62\u7ed3\u6784 sax \u4e8b\u4ef6\u9a71\u52a8\uff0c\u8fb9\u8bfb\u8fb9\u89e3\u6790 package org.xml.sax ; public class HandlerBase { public void startElement ( String name , AttributeList attributes ); public void characters ( char ch [], int start , int length ); public void endElement ( String name ); } package org.xml.sax.helpers ; public class DefaultHandler { public void startElement ( String uri , String localName , String qName , Attributes attributes ) public void endElement ( String uri , String localName , String qName ) public void characters ( char ch [], int start , int length ) }","title":"\u8bfe\u65f629 sax\u89e3\u6790\u7684\u8fc7\u7a0b"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#30-schemasaxxml","text":"demo.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <person> <name> \u5f20\u4e09 </name> <age> 23 </age> </person> \u4f7f\u7528jaxp\u7684sax\u89e3\u6790\u53ea\u80fd\u8fdb\u884c\u67e5\u8be2\u64cd\u4f5c import org.xml.sax.Attributes ; import org.xml.sax.helpers.DefaultHandler ; import javax.xml.parsers.SAXParser ; import javax.xml.parsers.SAXParserFactory ; public class Demo { public static void main ( String [] args ) throws Exception { SAXParserFactory factory = SAXParserFactory . newInstance (); SAXParser parser = factory . newSAXParser (); // \u4f20\u5165\u4e8b\u4ef6\u5904\u7406\u7c7b parser . parse ( \"demo.xml\" , new MyDefaultHandler ()); } } /** * \u81ea\u5b9a\u4e49\u4e8b\u4ef6\u5904\u7406 */ class MyDefaultHandler extends DefaultHandler { @Override public void startElement ( String uri , String localName , String qName , Attributes attributes ) { System . out . println ( qName ); } @Override public void endElement ( String uri , String localName , String qName ) { System . out . println ( qName ); } @Override public void characters ( char [] ch , int start , int length ) { System . out . println ( new String ( ch , start , length )); } }","title":"\u8bfe\u65f630 \u4f7f\u7528Schema\u7684sax\u65b9\u5f0f\u64cd\u4f5cxml"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#5-xmldom4j","text":"","title":"\u7b2c5 \u7ae0 \uff1a XML\u89e3\u6790\u4e4bdom4j"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#31-dom4j","text":"https://dom4j.github.io/ \u4f9d\u8d56 <dependency> <groupId> org.dom4j </groupId> <artifactId> dom4j </artifactId> <version> 2.0.0 </version> </dependency> demo.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <list> <person> <name> \u5f20\u4e09 </name> <age> 23 </age> </person> <person> <name> \u674e\u56db </name> <age> 24 </age> </person> </list>","title":"\u8bfe\u65f631 dom4j\u7684\u7b80\u4ecb"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#32-dom4jxml","text":"import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.Element ; import org.dom4j.io.SAXReader ; import java.util.List ; class Demo { public static void main ( String [] args ) throws DocumentException { // \u521b\u5efa\u89e3\u6790\u5668 SAXReader reader = new SAXReader (); // \u5f97\u5230Document Document document = reader . read ( \"demo.xml\" ); // \u83b7\u53d6\u6839\u5143\u7d20 Element root = document . getRootElement (); // \u5f97\u5230\u6240\u6709person\u6807\u7b7e List < Element > list = root . elements ( \"person\" ); // \u904d\u5386\u6807\u7b7e for ( Element element : list ) { Element name = element . element ( \"name\" ); // \u83b7\u53d6\u503c String text = name . getText (); System . out . println ( text ); } } }","title":"\u8bfe\u65f632 \u4f7f\u7528dom4j\u5b9e\u73b0\u67e5\u8be2xml\u64cd\u4f5c"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#33-dom4j","text":"import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.Element ; import org.dom4j.io.OutputFormat ; import org.dom4j.io.SAXReader ; import org.dom4j.io.XMLWriter ; import java.io.FileOutputStream ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws DocumentException , IOException { // \u521b\u5efa\u89e3\u6790\u5668\uff0c \u5f97\u5230Document SAXReader reader = new SAXReader (); Document document = reader . read ( \"demo.xml\" ); // \u83b7\u53d6\u6839\u5143\u7d20 Element root = document . getRootElement (); // \u6dfb\u52a0\u5143\u7d20\u5e76\u8bbe\u7f6e\u5185\u5bb9 Element person = root . element ( \"person\" ); Element sex = person . addElement ( \"sex\" ); sex . setText ( \"\u7537\" ); // \u56de\u5199\u5e76\u683c\u5f0f\u5316 OutputFormat format = OutputFormat . createPrettyPrint (); XMLWriter xmlWriter = new XMLWriter ( new FileOutputStream ( \"demo.xml\" ), format ); xmlWriter . write ( document ); xmlWriter . close (); } }","title":"\u8bfe\u65f633 \u4f7f\u7528dom4j\u5b9e\u73b0\u5728\u672b\u5c3e\u6dfb\u52a0\u8282\u70b9\u7684\u64cd\u4f5c"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#34-dom4j","text":"import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.DocumentHelper ; import org.dom4j.Element ; import org.dom4j.io.OutputFormat ; import org.dom4j.io.SAXReader ; import org.dom4j.io.XMLWriter ; import java.io.FileOutputStream ; import java.io.IOException ; import java.util.List ; class Demo { public static void main ( String [] args ) throws DocumentException , IOException { // \u521b\u5efa\u89e3\u6790\u5668\uff0c \u5f97\u5230Document SAXReader reader = new SAXReader (); Document document = reader . read ( \"demo.xml\" ); Element root = document . getRootElement (); // \u6307\u5b9a\u4f4d\u7f6e\u6dfb\u52a0\u5143\u7d20 Element person = root . element ( \"person\" ); List < Element > list = person . elements (); Element sex = DocumentHelper . createElement ( \"sex\" ); sex . setText ( \"\u5973\" ); list . add ( 1 , sex ); // \u56de\u5199\u5e76\u683c\u5f0f\u5316 OutputFormat format = OutputFormat . createPrettyPrint (); XMLWriter xmlWriter = new XMLWriter ( new FileOutputStream ( \"demo.xml\" ), format ); xmlWriter . write ( document ); xmlWriter . close (); } }","title":"\u8bfe\u65f634 \u4f7f\u7528dom4j\u5b9e\u73b0\u5728\u5728\u7279\u5b9a\u4f4d\u7f6e\u6dfb\u52a0\u8282\u70b9\u7684\u64cd\u4f5c"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#35-dom4j","text":"package util ; import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.io.OutputFormat ; import org.dom4j.io.SAXReader ; import org.dom4j.io.XMLWriter ; import java.io.FileOutputStream ; import java.io.IOException ; public class Dom4jUtil { public static Document getDocument ( String path ) throws DocumentException { // \u521b\u5efa\u89e3\u6790\u5668\uff0c \u5f97\u5230Document SAXReader reader = new SAXReader (); return reader . read ( path ); } public static void writeXml ( String path , Document document ) throws IOException { // \u56de\u5199\u5e76\u683c\u5f0f\u5316 OutputFormat format = OutputFormat . createPrettyPrint (); XMLWriter xmlWriter = new XMLWriter ( new FileOutputStream ( path ), format ); xmlWriter . write ( document ); xmlWriter . close (); } }","title":"\u8bfe\u65f635 dom4j\u91cc\u9762\u5c01\u88c5\u65b9\u6cd5\u7684\u64cd\u4f5c"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#36-dom4j","text":"import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.Element ; import util.Dom4jUtil ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws DocumentException , IOException { // \u521b\u5efa\u89e3\u6790\u5668\uff0c \u5f97\u5230Document String path = \"demo.xml\" ; Document document = Dom4jUtil . getDocument ( path ); // \u83b7\u53d6\u6839\u5143\u7d20 Element root = document . getRootElement (); Element peron = root . element ( \"person\" ); Element sex = peron . element ( \"sex\" ); sex . setText ( \"\u7537\" ); // \u56de\u5199\u5e76\u683c\u5f0f\u5316 Dom4jUtil . writeXml ( path , document ); } }","title":"\u8bfe\u65f636 \u4f7f\u7528dom4j\u5b9e\u73b0\u4fee\u6539\u7684\u64cd\u4f5c"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#37-dom4j","text":"import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.Element ; import util.Dom4jUtil ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws DocumentException , IOException { String path = \"demo.xml\" ; Document document = Dom4jUtil . getDocument ( path ); // \u83b7\u53d6\u6839\u5143\u7d20 Element root = document . getRootElement (); Element person = root . element ( \"person\" ); Element sex = person . element ( \"sex\" ); // \u901a\u8fc7\u7236\u8282\u70b9\u5220\u9664 sex . getParent (). remove ( sex ); // \u56de\u5199\u5e76\u683c\u5f0f\u5316 Dom4jUtil . writeXml ( path , document ); } }","title":"\u8bfe\u65f637 \u4f7f\u7528dom4j\u5b9e\u73b0\u5220\u9664\u8282\u70b9\u7684\u64cd\u4f5c"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#38-dom4j","text":"demo.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <person id= \"001\" > <name> \u5f20\u4e09 </name> <age> 23 </age> </person> import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.Element ; import util.Dom4jUtil ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws DocumentException , IOException { String path = \"demo.xml\" ; Document document = Dom4jUtil . getDocument ( path ); Element root = document . getRootElement (); String id = root . attributeValue ( \"id\" ); System . out . println ( id ); // 001 } }","title":"\u8bfe\u65f638 \u4f7f\u7528dom4j\u5b9e\u73b0\u83b7\u53d6\u5c5e\u6027\u503c\u7684\u64cd\u4f5c"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#6-xpath","text":"","title":"\u7b2c6 \u7ae0 \uff1a XPATH"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#39-xpath","text":"dom4j\u652f\u6301xpath\u64cd\u4f5c \u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6\u5143\u7d20 / a / b / c \u4e00\u5c42\u4e00\u5c42\u9009\u62e9 // b \u4e0d\u7ba1\u5c42\u7ea7 \uff0c \u76f4\u63a5\u9009\u62e9b /* \u6240\u6709\u5143\u7d20 /a/b[1] \u7b2c\u4e00\u4e2ab\u5143\u7d20 /a/b[last()] \u6700\u540e\u4e00\u4e2ab\u5143\u7d20 //b[@id] \u53ea\u8981\u6709id\u5c5e\u6027 //b[@name=\"bbb\"] name\u5c5e\u6027\u7b49\u4e8ebbb","title":"\u8bfe\u65f639 XPATH\u7b80\u4ecb"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#40-dom4jxpath","text":"jaxen selectNode() selectSingleNode() demo.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <person id= \"001\" > <name> \u5f20\u4e09 </name> <age> 23 </age> </person> \u793a\u4f8b\uff1a\u5f97\u5230\u6240\u6709name\u8282\u70b9 import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.Node ; import util.Dom4jUtil ; import java.util.List ; class Demo { public static void main ( String [] args ) throws DocumentException { String path = \"demo.xml\" ; Document document = Dom4jUtil . getDocument ( path ); // \u83b7\u53d6\u5143\u7d20 List < Node > list = document . selectNodes ( \"//name\" ); // \u904d\u5386\u96c6\u5408 for ( Node node : list ) { String text = node . getText (); System . out . println ( text ); } } }","title":"\u8bfe\u65f640 \u4f7f\u7528dom4j\u652f\u6301XPATH\u7684\u64cd\u4f5c\u4e00"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#41-dom4jxpath","text":"import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.Node ; import util.Dom4jUtil ; class Demo { public static void main ( String [] args ) throws DocumentException { String path = \"demo.xml\" ; Document document = Dom4jUtil . getDocument ( path ); // \u83b7\u53d6\u6839\u5143\u7d20 Node name = document . selectSingleNode ( \"/person[@id='001']/name\" ); System . out . println ( name . getText ()); } }","title":"\u8bfe\u65f641 \u4f7f\u7528dom4j\u652f\u6301XPATH\u7684\u64cd\u4f5c\u4e8c"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#7","text":"","title":"\u7b2c7 \u7ae0 \uff1a \u6848\u4f8b"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/7-JavaWeb-XML\u5feb\u901f\u5165\u95e8/#42-44-","text":"\u4f7f\u7528xml\u4f5c\u4e3a\u6570\u636e\u5e93\uff0c\u5b58\u50a8\u5b66\u751f\u6570\u636e \u4f9d\u8d56 <dependency> <groupId> org.dom4j </groupId> <artifactId> dom4j </artifactId> <version> 2.0.0 </version> </dependency> demo.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <list> </list> Dom4jUtil.java package util ; import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.io.OutputFormat ; import org.dom4j.io.SAXReader ; import org.dom4j.io.XMLWriter ; import java.io.FileOutputStream ; import java.io.IOException ; public class Dom4jUtil { public static Document getDocument ( String path ) throws DocumentException { // \u521b\u5efa\u89e3\u6790\u5668\uff0c \u5f97\u5230Document SAXReader reader = new SAXReader (); return reader . read ( path ); } public static void writeXml ( String path , Document document ) throws IOException { // \u56de\u5199\u5e76\u683c\u5f0f\u5316 OutputFormat format = OutputFormat . createPrettyPrint (); XMLWriter xmlWriter = new XMLWriter ( new FileOutputStream ( path ), format ); xmlWriter . write ( document ); xmlWriter . close (); } } Student.java package com.pengshiyu.student ; public class Student { private String id ; private String name ; private int age ; public Student () { } public Student ( String id , String name , int age ) { this . id = id ; this . name = name ; this . age = age ; } public String getId () { return id ; } public void setId ( String id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getAge () { return age ; } public void setAge ( int age ) { this . age = age ; } @Override public String toString () { return \"Student{\" + \"id='\" + id + '\\'' + \", name='\" + name + '\\'' + \", age=\" + age + '}' ; } } StudentService.java package com.pengshiyu.student ; import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.Element ; import org.dom4j.Node ; import util.Dom4jUtil ; import java.io.IOException ; import java.util.List ; public class StudentService { private static final String path = \"demo.xml\" ; /** * \u6dfb\u52a0\u6570\u636e * * @param student * @throws DocumentException * @throws IOException */ public static void addStudent ( Student student ) throws DocumentException , IOException { Document document = Dom4jUtil . getDocument ( path ); Element root = document . getRootElement (); Element person = root . addElement ( \"person\" ); Element id = person . addElement ( \"id\" ); id . setText ( student . getId ()); Element name = person . addElement ( \"name\" ); name . setText ( student . getName ()); Element age = person . addElement ( \"age\" ); age . setText ( String . valueOf ( student . getAge ())); Dom4jUtil . writeXml ( path , document ); } /** * \u5220\u9664\u6570\u636e * * @param uid * @throws IOException * @throws DocumentException */ public static void removeStudent ( String uid ) throws IOException , DocumentException { Document document = Dom4jUtil . getDocument ( path ); // \u83b7\u53d6\u6240\u6709\u7684id List < Node > list = document . selectNodes ( \"//id\" ); for ( Node node : list ) { String nodeId = node . getText (); // System.out.println(nodeId); // \u5224\u65adid\u76f8\u540c\uff0c\u901a\u8fc7\u7956\u7236\u8282\u70b9\u79fb\u9664\u7236\u8282\u70b9 if ( uid . equals ( nodeId )) { Element parent = node . getParent (); Element grandfather = parent . getParent (); grandfather . remove ( parent ); } } Dom4jUtil . writeXml ( path , document ); } /** * \u67e5\u8be2\u6570\u636e * * @param uid * @return * @throws IOException * @throws DocumentException */ public static Student getStudent ( String uid ) throws DocumentException { Document document = Dom4jUtil . getDocument ( path ); // \u83b7\u53d6\u6240\u6709\u7684id List < Node > list = document . selectNodes ( \"//id\" ); for ( Node node : list ) { String nodeId = node . getText (); // System.out.println(nodeId); // \u5224\u65adid\u76f8\u540c\uff0c\u901a\u8fc7\u7956\u7236\u8282\u70b9\u79fb\u9664\u7236\u8282\u70b9 if ( uid . equals ( nodeId )) { Element parent = node . getParent (); Student student = new Student (); student . setId ( parent . element ( \"id\" ). getText ()); student . setName ( parent . element ( \"name\" ). getText ()); student . setAge ( Integer . parseInt ( parent . element ( \"age\" ). getText ())); return student ; } } return null ; } } StudentTest.java package com.pengshiyu.student ; import org.dom4j.DocumentException ; import org.junit.Test ; import java.io.IOException ; public class StudentTest { @Test public void testAddStudent () throws IOException , DocumentException { Student student = new Student ( \"001\" , \"Tom\" , 23 ); StudentService . addStudent ( student ); } @Test public void testRemoveStudent () throws IOException , DocumentException { StudentService . removeStudent ( \"001\" ); } @Test public void testGEtStudent () throws IOException , DocumentException { Student student = StudentService . getStudent ( \"001\" ); System . out . println ( student ); } }","title":"\u8bfe\u65f642-44 \u5b66\u751f\u7ba1\u7406\u7cfb\u7edf\u5b9e\u73b0-\u6dfb\u52a0\u3001\u5220\u9664\u3001\u67e5\u8be2\u64cd\u4f5c"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/8-JavaWeb-Ajax\u5b66\u4e60/","text":"Ajax\u5b66\u4e60 \u8bfe\u65f61 1.ajax\u7b80\u4ecb\uff08\u5f02\u6b65\u4e0e\u540c\u6b65\uff09 asynchronous javascript and xml \u5f02\u6b65js\u548cxml 1\u3001\u5f02\u6b65\u4ea4\u4e92\u548c\u540c\u6b65\u4ea4\u4e92 \u540c\u6b65 \u53d1\u9001\uff0c\u7b49\u5f85 \u6574\u4e2a\u9875\u9762\u5237\u65b0 \u5f02\u6b65 \u53d1\u9001\uff0c\u4e0d\u7b49\u5f85 \u5c40\u90e8\u5237\u65b0 \u793a\u4f8b\uff1a\u5f02\u6b65\u5237\u65b0 < button id = \"btn\" > \u70b9\u51fb </ button > < h2 id = \"text\" ></ h2 > < script > // \u6587\u6863\u52a0\u8f7d\u5b8c\u6210\u540e\u9a6c\u4e0a\u6267\u884c window . onload = function (){ let btn = document . getElementById ( \"btn\" ); // \u7ed9btn\u6ce8\u518c\u70b9\u51fb\u4e8b\u4ef6\u76d1\u542c btn . onclick = function (){ let text = document . getElementById ( \"text\" ); text . innerHTML = \"hello!\" ; } } </ script > \u8bfe\u65f62 2.\u5f02\u6b65\u548c\u540c\u6b65\u4ea4\u4e92\u56fe \u6570\u636e\u683c\u5f0f text\u3001xml\u3001json \u540c\u6b65\uff1a \u8bf7\u6c42 -> \u54cd\u5e94 <- \u8bf7\u6c42 -> \u54cd\u5e94 <- \u5f02\u6b65\uff1a \u8bf7\u6c42 -> \u8bf7\u6c42 -> \u54cd\u5e94 <- \u54cd\u5e94 <- \u8bfe\u65f63 3.ajax\u7684\u5e94\u7528\u573a\u666f\u548c\u4f18\u7f3a\u70b9 \u4f18\u70b9\uff1a \u5f02\u6b65\u4ea4\u4e92\uff0c\u589e\u5f3a\u7528\u6237\u4f53\u9a8c \u6027\u80fd\uff1a\u53ea\u9700\u8981\u54cd\u5e94\u90e8\u5206\u5185\u5bb9\uff0c\u670d\u52a1\u5668\u538b\u529b\u51cf\u5c11 \u7f3a\u70b9\uff1a ajax\u4e0d\u80fd\u5e94\u7528\u5728\u6240\u6709\u573a\u666f ajax\u589e\u591a\u4e86\u5bf9\u670d\u52a1\u5668\u7684\u8bf7\u6c42\uff0c\u7ed9\u670d\u52a1\u5668\u589e\u52a0\u538b\u529b \u8bfe\u65f64 4.ajax\u56db\u6b65\u64cd\u4f5c 1\u3001\u83b7\u53d6XMLHttpRequest // \u5927\u591a\u6570\u6d4f\u89c8\u5668 var xmlHttp = new XMLHttpRequest (); // IE6.0 var xmlHttp = new ActiveXObject ( \"Msxml2.XMLHTTP\" ); // IE<=5.5 var xmlHttp = new ActiveXObject ( \"Microsoft.XMLHTTP\" ); \u7f16\u5199\u4e00\u4e2a\u521b\u5efaXMLHttpRequest\u5bf9\u8c61\u7684\u51fd\u6570 function createXMLHttpRequest (){ try { // \u5927\u591a\u6570\u6d4f\u89c8\u5668 return new XMLHttpRequest (); } catch ( e ){ try { // IE6.0 new ActiveXObject ( \"Msxml2.XMLHTTP\" ); } catch ( e ){ try { // IE<=5.5 new ActiveXObject ( \"Microsoft.XMLHTTP\" ); } catch ( e ){ console . log ( \"\u6d4f\u89c8\u5668\u7248\u672c\u592a\u8001\u4e86\uff01\" ); throw e ; } } } } 2\u3001\u8fde\u63a5\u670d\u52a1\u5668 xmlHttp . open ( \"GET\" , \"/url\" , true ); // \u53c2\u6570\uff1a\u8bf7\u6c42\u65b9\u5f0f\uff0c\u8bf7\u6c42url\uff0c\u662f\u5426\u4e3a\u5f02\u6b65 3\u3001\u53d1\u9001\u8bf7\u6c42 xmlHttp . send ( null ); // \u53c2\u6570\uff1a\u8bf7\u6c42\u4f53\u5185\u5bb9\uff0c\u5982\u679c\u662fGET,\u5fc5\u987b\u7ed9\u51fanull\uff0c\u4e0d\u7136FireFox\u53ef\u80fd\u4e0d\u53d1\u9001 4\u3001\u6ce8\u518c\u4e8b\u4ef6\u76d1\u542c\u5668 \uff081\uff095\u4e2a\u72b6\u6001\uff1a 0 \u521a\u521b\u5efa 1 \u8bf7\u6c42\u5f00\u59cb\uff0c\u8c03\u7528 open 2 \u8bf7\u6c42\u53d1\u9001\u5b8c\u6210 \u8c03\u7528 send 3 \u670d\u52a1\u5668\u5f00\u59cb\u54cd\u5e94 4 \u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f \uff082\uff09\u83b7\u53d6\u54cd\u5e94\u5185\u5bb9 // \u83b7\u53d6\u72b6\u6001 var state = xmlHttp . readyState ; // \u5f97\u5230\u670d\u52a1\u5668\u54cd\u5e94\u72b6\u6001\u7801 200, 404, 500 var status = xmlHttp . status ; // \u5f97\u5230\u670d\u52a1\u5668\u54cd\u5e94\u5185\u5bb9 var content = xmlHttp . responseText ; // \u6587\u672c\u683c\u5f0f var content = xmlHttp . responseXml ; // xml\u683c\u5f0f\uff0cdocument\u5bf9\u8c61 \uff083\uff09\u6ce8\u518c\u76d1\u542c\u4e8b\u4ef6 xmlHttp . onreadystatechange = function (){ // \u53cc\u91cd\u5224\u65ad xmlHttp\u72b6\u6001\u4e3a\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u670d\u52a1\u5668\u72b6\u6001\u54cd\u5e94\u7ed3\u675f if ( xmlHttp . readyState == 4 && xmlHttp . status == 200 ){ var text = xmlHttp . responseText ; } } \u8bfe\u65f65 5.ajax\u7b2c\u4e00\u4f8b\uff1ahelloworld \u4e3a\u4e86\u4fbf\u4e8e\u6d4b\u8bd5\uff0c\u670d\u52a1\u7aef\u4f7f\u7528Python\u8bed\u8a00 \u670d\u52a1\u7aef hello.py # pip install flask, flask-cors from flask import Flask from flask_cors import CORS app = Flask ( __name__ ) CORS ( app , supports_credentials = True ) @app.route ( \"/\" ) def index (): return \"<h2>Hello!</h2>\" if __name__ == '__main__' : app . run () \u5ba2\u6237\u7aef demo.html < button id = \"btn\" > \u70b9\u51fb < /button> < h2 id = \"text\" >< /h2> < script > // \u83b7\u53d6XMLHttpRequest\u5bf9\u8c61 function createXMLHttpRequest (){ try { // \u5927\u591a\u6570\u6d4f\u89c8\u5668 return new XMLHttpRequest (); } catch ( e ){ try { // IE6.0 new ActiveXObject ( \"Msxml2.XMLHTTP\" ); } catch ( e ){ try { // IE<=5.5 new ActiveXObject ( \"Microsoft.XMLHTTP\" ); } catch ( e ){ console . log ( \"\u6d4f\u89c8\u5668\u7248\u672c\u592a\u8001\u4e86\uff01\" ); throw e ; } } } } // \u6587\u6863\u52a0\u8f7d\u5b8c\u6210\u540e\u9a6c\u4e0a\u6267\u884c window . onload = function (){ let btn = document . getElementById ( \"btn\" ); // \u7ed9btn\u70b9\u51fb\u4e8b\u4ef6\u6ce8\u518c\u76d1\u542c btn . onclick = function (){ let xmlHttp = createXMLHttpRequest (); xmlHttp . open ( \"GET\" , \"http://127.0.0.1:5000/\" , true ); xmlHttp . send (); xmlHttp . onreadystatechange = function (){ // \u53cc\u91cd\u5224\u65ad xmlHttp\u72b6\u6001\u4e3a\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u670d\u52a1\u5668\u72b6\u6001\u54cd\u5e94\u7ed3\u675f if ( xmlHttp . readyState == 4 && xmlHttp . status == 200 ){ var text = xmlHttp . responseText ; let h2 = document . getElementById ( \"text\" ); h2 . innerHTML = text ; } } } } < /script> 6.ajax\u7b2c\u4e8c\u4f8b\uff1a\u53d1\u9001POST\u8bf7\u6c42 \u591a\u6dfb\u52a0\u4e00\u4e2a\u8bf7\u6c42\u5934 // \u8bbe\u7f6e\u8bf7\u6c42\u5934 xmlHttp . setRequestHeader ( 'Content-Type' , 'application/x-www-form-urlencoded' ); // \u53d1\u9001\u8bf7\u6c42\u4f53 xmlHttp . send ( \"username=Tom&age=23\" ); \u670d\u52a1\u7aef\u63a5\u6536\u51fd\u6570 hello.py @app.route ( \"/post\" , methods = [ 'POST' ]) def post (): username = request . form . get ( \"username\" ) age = request . form . get ( \"age\" ) return f \"<h2>username: {username}, age: {age}</h2>\" \u5ba2\u6237\u7aef\u4fee\u6539 demo.html xmlHttp . open ( \"POST\" , \"http://127.0.0.1:5000/post\" , true ); xmlHttp . setRequestHeader ( 'Content-Type' , 'application/x-www-form-urlencoded' ); xmlHttp . send ( \"username=Tom&age=23\" ); \u8bfe\u65f67 7.ajax\u7b2c\u4e09\u4f8b\uff1a\u7528\u6237\u540d\u662f\u5426\u5df2\u88ab\u6ce8\u518c \u5ba2\u6237\u7aef\u8981\u6c42\uff1a 1\u3001\u6ce8\u518c\u8868\u5355 2\u3001\u76d1\u542c\u7528\u6237\u540d\u6587\u672c\u6846\u5931\u53bb\u7126\u70b9onblur\u4e8b\u4ef6 3\u3001\u83b7\u53d6\u6587\u672c\u6846\u5185\u5bb9\uff0c\u901a\u8fc7ajax\u5f02\u6b65\u53d1\u9001\u7ed9\u670d\u52a1\u5668 4\u3001\u5982\u679c\u4e3a1 \u663e\u793a\uff1a\u7528\u6237\u540d\u5df2\u88ab\u6ce8\u518c \u5982\u679c\u4e3a0 \u4ec0\u4e48\u90fd\u4e0d\u663e\u793a < meta charset = \"utf-8\" > < style > # errorText { color : red ; } </ style > < form action = \"\" > < input type = \"text\" name = \"username\" id = \"username\" > < span id = \"errorText\" ></ span > </ form > < script > // \u83b7\u53d6XMLHttpRequest\u5bf9\u8c61 function createXMLHttpRequest () { try { // \u5927\u591a\u6570\u6d4f\u89c8\u5668 return new XMLHttpRequest (); } catch ( e ) { try { // IE6.0 new ActiveXObject ( \"Msxml2.XMLHTTP\" ); } catch ( e ) { try { // IE<=5.5 new ActiveXObject ( \"Microsoft.XMLHTTP\" ); } catch ( e ) { console . log ( \"\u6d4f\u89c8\u5668\u7248\u672c\u592a\u8001\u4e86\uff01\" ); throw e ; } } } } // \u6587\u6863\u52a0\u8f7d\u5b8c\u6210\u540e\u9a6c\u4e0a\u6267\u884c window . onload = function () { let username = document . getElementById ( \"username\" ); // \u5931\u53bb\u7126\u70b9\u6ce8\u518c\u4e8b\u4ef6\u76d1\u542c username . onblur = function () { let xmlHttp = createXMLHttpRequest (); xmlHttp . open ( \"POST\" , \"http://127.0.0.1:5000/validate\" , true ); xmlHttp . setRequestHeader ( 'Content-Type' , 'application/x-www-form-urlencoded' ); xmlHttp . send ( \"username=\" + username . value ); xmlHttp . onreadystatechange = function () { // \u53cc\u91cd\u5224\u65ad xmlHttp\u72b6\u6001\u4e3a\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u670d\u52a1\u5668\u72b6\u6001\u54cd\u5e94\u7ed3\u675f if ( xmlHttp . readyState == 4 && xmlHttp . status == 200 ) { var text = xmlHttp . responseText ; let errorText = document . getElementById ( \"errorText\" ); if ( text == '1' ) { errorText . innerHTML = \"\u7528\u6237\u540d\u5df2\u88ab\u6ce8\u518c\" ; } else { errorText . innerHTML = \"\" ; } } } } } </ script > \u670d\u52a1\u7aef\u8981\u6c42\uff1a 1\u3001\u83b7\u53d6\u5ba2\u6237\u7aef\u4f20\u9012\u7684\u7528\u6237\u540d\u53c2\u6570 2\u3001\u5224\u65ad\u662f\u5426\u4e3ademo\uff0c\u662f\u8fd4\u56de1\uff0c\u5426\u8fd4\u56de0 @app.route ( \"/validate\" , methods = [ 'POST' ]) def validate (): username = request . form . get ( \"username\" ) if username == \"demo\" : return \"1\" else : return \"0\" \u8bfe\u65f68 8.ajax\u7b2c\u56db\u4f8b\uff1a\u54cd\u5e94\u5185\u5bb9\u4e3axml \u670d\u52a1\u7aef\u54cd\u5e94\u5934 Content-Type : text / xml ; charset = utf-8 \u5ba2\u6237\u7aef\u8bbe\u7f6e var doc = xmlHttp . responseXML ; // \u5f97\u5230Document\u5bf9\u8c61 \u670d\u52a1\u7aef\u4ee3\u7801 @app.route ( \"/xml\" ) def xml (): data = \"\"\" <person> <name>Tom</name> <age>23</age> </person> \"\"\" res = make_response ( data ) res . headers [ 'Content-Type' ] = 'text/xml; charset=utf-8' return res \u5ba2\u6237\u7aef\u4ee3\u7801 < button id = \"btn\" > \u70b9\u51fb </ button > < h2 id = \"text\" ></ h2 > < script > // \u83b7\u53d6XMLHttpRequest\u5bf9\u8c61 function createXMLHttpRequest () { try { // \u5927\u591a\u6570\u6d4f\u89c8\u5668 return new XMLHttpRequest (); } catch ( e ) { try { // IE6.0 new ActiveXObject ( \"Msxml2.XMLHTTP\" ); } catch ( e ) { try { // IE<=5.5 new ActiveXObject ( \"Microsoft.XMLHTTP\" ); } catch ( e ) { console . log ( \"\u6d4f\u89c8\u5668\u7248\u672c\u592a\u8001\u4e86\uff01\" ); throw e ; } } } } // \u5224\u65ad\u662f\u5426\u4e3aIE\u6d4f\u89c8\u5668 function isIE () { if ( window . addEventListener ) { return false ; } else { return true ; } } // \u6587\u6863\u52a0\u8f7d\u5b8c\u6210\u540e\u9a6c\u4e0a\u6267\u884c window . onload = function () { let btn = document . getElementById ( \"btn\" ); // \u6ce8\u518c\u4e8b\u4ef6\u76d1\u542c btn . onclick = function () { let xmlHttp = createXMLHttpRequest (); xmlHttp . open ( \"GET\" , \"http://127.0.0.1:5000/xml\" , true ); xmlHttp . send ( null ); xmlHttp . onreadystatechange = function () { // \u53cc\u91cd\u5224\u65ad xmlHttp\u72b6\u6001\u4e3a\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u670d\u52a1\u5668\u72b6\u6001\u54cd\u5e94\u7ed3\u675f if ( xmlHttp . readyState == 4 && xmlHttp . status == 200 ) { // \u83b7\u53d6\u54cd\u5e94\u7ed3\u679c var doc = xmlHttp . responseXML ; // IE \u548c\u975eIE\u6709\u6240\u533a\u522b let name = doc . getElementsByTagName ( \"name\" )[ 0 ]. textContent ; let age = doc . getElementsByTagName ( \"age\" )[ 0 ]. textContent ; let text = document . getElementById ( \"text\" ); text . innerHTML = `name: ${ name } , age: ${ age } ` ; } } } } </ script > \u8bfe\u65f69-10 ajax\u7b2c\u4e94\u4f8b\uff1a\u7701\u5e02\u8054\u52a8 <select name= \"province\" id= \"\" > <option value= \"\" > \u8bf7\u9009\u62e9\u7701\u4efd </option> </select> <select name= \"city\" id= \"\" > <option value= \"\" > \u8bf7\u9009\u62e9\u57ce\u5e02 </option> </select> \u670d\u52a1\u7aef\u63d0\u4f9b\u4e24\u4e2a\u63a5\u53e3 province city?province=\u5317\u4eac \u5b8c\u6574\u4ee3\u7801 \u4e00\u3001\u524d\u7aef\u4ee3\u7801 1\u3001util.js // \u83b7\u53d6XMLHttpRequest\u5bf9\u8c61 function createXMLHttpRequest () { try { // \u5927\u591a\u6570\u6d4f\u89c8\u5668 return new XMLHttpRequest (); } catch ( e ) { try { // IE6.0 new ActiveXObject ( \"Msxml2.XMLHTTP\" ); } catch ( e ) { try { // IE<=5.5 new ActiveXObject ( \"Microsoft.XMLHTTP\" ); } catch ( e ) { console . log ( \"\u6d4f\u89c8\u5668\u7248\u672c\u592a\u8001\u4e86\uff01\" ); throw e ; } } } } // \u5224\u65ad\u662f\u5426\u4e3aIE\u6d4f\u89c8\u5668 function isIE () { if ( window . addEventListener ) { return false ; } else { return true ; } } 2\u3001demo.html < select name = \"province\" id = \"province\" > < option value = \"\" > \u8bf7\u9009\u62e9\u7701\u4efd </ option > </ select > < select name = \"city\" id = \"city\" > < option value = \"\" > \u8bf7\u9009\u62e9\u57ce\u5e02 </ option > </ select > < script src = \"./util.js\" ></ script > < script > function createOption ( name ) { // \u521b\u5efaoption\u5143\u7d20 let option = document . createElement ( \"option\" ); option . value = name ; // \u521b\u5efa\u6587\u672c\u8282\u70b9 let textNode = document . createTextNode ( name ); option . appendChild ( textNode ); return option ; } // \u6587\u6863\u52a0\u8f7d\u5b8c\u6210\u540e\u9a6c\u4e0a\u6267\u884c window . onload = function () { // \u7b2c\u4e00\u6b65\uff1a\u5148\u83b7\u53d6\u7701\u7ea7\u5217\u8868 let xmlHttp = createXMLHttpRequest (); xmlHttp . open ( \"GET\" , \"http://127.0.0.1:5000/provinces\" , true ); xmlHttp . send ( null ); let province = document . getElementById ( \"province\" ); xmlHttp . onreadystatechange = function () { // \u53cc\u91cd\u5224\u65ad xmlHttp\u72b6\u6001\u4e3a\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u670d\u52a1\u5668\u72b6\u6001\u54cd\u5e94\u7ed3\u675f if ( xmlHttp . readyState == 4 && xmlHttp . status == 200 ) { // \u83b7\u53d6\u54cd\u5e94\u7ed3\u679c var text = xmlHttp . responseText ; let list = text . split ( \"|\" ); // \u62c6\u5206\u6570\u636e\u5f97\u5230\u6570\u7ec4 for ( let item of list ) { let option = createOption ( item ); province . appendChild ( option ); } } } // \u7b2c\u4e8c\u6b65\uff1a\u76d1\u542c\u7701\u7ea7\u5217\u8868\u53d8\u52a8\uff0c\u83b7\u53d6\u57ce\u5e02\u5217\u8868 province . onchange = function () { if ( province . value == \"\" ) { return } let xmlHttp = createXMLHttpRequest (); xmlHttp . open ( \"POST\" , \"http://127.0.0.1:5000/cities\" , true ); xmlHttp . setRequestHeader ( 'Content-Type' , 'application/x-www-form-urlencoded' ); xmlHttp . send ( `province= ${ province . value } ` ); xmlHttp . onreadystatechange = function () { // \u53cc\u91cd\u5224\u65ad xmlHttp\u72b6\u6001\u4e3a\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u670d\u52a1\u5668\u72b6\u6001\u54cd\u5e94\u7ed3\u675f if ( xmlHttp . readyState == 4 && xmlHttp . status == 200 ) { // \u79fb\u9664\u6240\u6709\u7ed3\u679c let city = document . getElementById ( \"city\" ); let optionList = city . getElementsByTagName ( \"option\" ); while ( optionList . length > 1 ) { city . removeChild ( optionList [ 1 ]); } // \u83b7\u53d6\u54cd\u5e94\u7ed3\u679c var doc = xmlHttp . responseXML ; let cities = doc . getElementsByTagName ( \"city\" ); for ( let item of cities ) { let cityName = \"\" ; // \u517c\u5bb9IE\u6d4f\u89c8\u5668\u548c\u5176\u4ed6\u6d4f\u89c8\u5668 if ( isIE ()) { cityName = item . text ; // IE } else { cityName = item . textContent ; // FireFox\u7b49 } let option = createOption ( cityName ); city . appendChild ( option ); } } } } } </ script > \u4e8c\u3001\u540e\u7aef\u4ee3\u7801 1\u3001\u6570\u636e\u6587\u4ef6china.xml <china> <province name= \"\u5317\u4eac\" > <city> \u4e1c\u57ce\u533a </city> <city> \u897f\u57ce\u533a </city> </province> <province name= \"\u5929\u6d25\" > <city> \u548c\u5e73\u533a </city> <city> \u6cb3\u4e1c\u533a </city> </province> </china> 2\u3001\u6570\u636e\u89e3\u6790\u6587\u4ef6demo.py # pip install lxml from lxml import etree class China (): path = \"china.xml\" @classmethod def getProvinces ( cls ): \"\"\"\u83b7\u53d6\u7701\u4efd \"\"\" tree = etree . parse ( cls . path ) return tree . xpath ( '//province/@name' ) @classmethod def getCities ( cls , province ): \"\"\"\u83b7\u53d6\u57ce\u5e02 \"\"\" tree = etree . parse ( cls . path ) result = tree . xpath ( f \"//province[@name='{province}']\" ) if result : return etree . tostring ( result [ 0 ], encoding = \"UTF-8\" ) else : return \"\" if __name__ == \"__main__\" : print ( China . getProvinces ()) print ( China . getCities ( \"\u5317\u4eac\" )) 3\u3001\u63a5\u53e3\u6587\u4ef6 from flask import Flask , request , make_response from flask_cors import CORS from demo import China app = Flask ( __name__ ) CORS ( app , supports_credentials = True ) @app.route ( \"/provinces\" ) def provinces (): return \"|\" . join ( China . getProvinces ()) @app.route ( \"/cities\" , methods = [ 'POST' ]) def cities (): province = request . form . get ( \"province\" ) res = make_response ( China . getCities ( province )) res . headers [ 'Content-Type' ] = 'text/xml; charset=utf-8' return res if __name__ == '__main__' : app . run ( debug = True ) \u8bfe\u65f611 11.XStream(\u53ef\u628aJavabean\u8f6c\u6362\u6210XMl\u7684\u5c0f\u5de5\u5177) \u4f9d\u8d56 <dependency> <groupId> xstream </groupId> <artifactId> xstream </artifactId> <version> 1.2.2 </version> </dependency> \u4ee3\u7801\u5b9e\u4f8b import com.thoughtworks.xstream.XStream ; import java.util.ArrayList ; import java.util.List ; class City { private String name ; public City ( String name ) { this . name = name ; } } class Province { private String name ; private List < City > cities = new ArrayList <>(); public void addCity ( City city ){ cities . add ( city ); } public Province ( String name ) { this . name = name ; } } public class TestXStream { public static void main ( String [] args ) { // \u6570\u636e\u51c6\u5907 List < Province > list = new ArrayList < Province >(); Province province = new Province ( \"\u5317\u4eac\" ); province . addCity ( new City ( \"\u4e1c\u57ce\u533a\" )); province . addCity ( new City ( \"\u660c\u5e73\u533a\" )); list . add ( province ); XStream xStream = new XStream (); // \u6307\u5b9a\u522b\u540d xStream . alias ( \"china\" , List . class ); xStream . alias ( \"province\" , Province . class ); xStream . alias ( \"city\" , City . class ); // \u5c5e\u6027\u8bbe\u7f6e xStream . useAttributeFor ( Province . class , \"name\" ); // \u53bb\u9664\u65e0\u7528\u7684\u6807\u7b7e xStream . addImplicitCollection ( Province . class , \"cities\" ); String str = xStream . toXML ( list ); System . out . println ( str ); } } \u8bfe\u65f612 12.JSON\u7684\u6982\u8ff0 js\u63d0\u4f9b\u7684\u4e00\u79cd\u6570\u636e\u4ea4\u6362\u683c\u5f0f Json\u8bed\u6cd5 \u5c5e\u6027\u540d\u5fc5\u987b\u4f7f\u7528\u53cc\u5f15\u53f7\u62ec\u8d77\u6765 \u5bf9\u8c61\uff1a{} \u5c5e\u6027\uff1a null \u3001\u6570\u503c\u3001\u5b57\u7b26\u4e32\u3001\u6570\u7ec4 [] \u3001 boolean ( true / false ) var s = \"1 + 2\" ; eval ( s ); // 3 1\u3001\u793a\u4f8b \uff081\uff09\u670d\u52a1\u7aef\u4ee3\u7801 from flask import Flask , jsonify from flask_cors import CORS app = Flask ( __name__ ) CORS ( app , supports_credentials = True ) @app.route ( \"/json\" ) def json (): return jsonify ({ \"name\" : \"Tom\" }) if __name__ == '__main__' : app . run ( debug = True ) \uff082\uff09\u5ba2\u6237\u7aef\u4ee3\u7801 < button id = \"btn\" > \u70b9\u51fb </ button > < h2 id = \"text\" ></ h2 > < script src = \"./util.js\" ></ script > < script > // \u6587\u6863\u52a0\u8f7d\u5b8c\u6210\u540e\u9a6c\u4e0a\u6267\u884c window . onload = function () { let btn = document . getElementById ( \"btn\" ); btn . onclick = function () { let xmlHttp = createXMLHttpRequest (); xmlHttp . open ( \"GET\" , \"http://127.0.0.1:5000/json\" , true ); xmlHttp . send ( null ); xmlHttp . onreadystatechange = function () { // \u53cc\u91cd\u5224\u65ad xmlHttp\u72b6\u6001\u4e3a\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u670d\u52a1\u5668\u72b6\u6001\u54cd\u5e94\u7ed3\u675f if ( xmlHttp . readyState == 4 && xmlHttp . status == 200 ) { // \u83b7\u53d6\u54cd\u5e94\u7ed3\u679c let text = xmlHttp . responseText ; let obj = JSON . parse ( text ); document . getElementById ( \"text\" ). innerHTML = `name: ${ obj . name } ` ; } } } } </ script > json\u4e0exml\u6bd4\u8f83 \u53ef\u8bfb\u6027 \u89e3\u7801\u96be\u5ea6 \u6d41\u884c\u5ea6 \u8bfe\u65f613 13.json-lib\u7684\u5e94\u7528 \u7ee7\u627f\u5173\u7cfb public final class JSONArray extends AbstractJSON implements JSON , List , Comparable public final class JSONObject extends AbstractJSON implements JSON , Map , Comparable \u4f9d\u8d56 <dependency> <groupId> net.sf.json-lib </groupId> <artifactId> json-lib </artifactId> <version> 2.4 </version> <classifier> jdk15 </classifier> </dependency> \u793a\u4f8b import net.sf.json.JSONObject ; class Demo { public static void main ( String [] args ) { JSONObject map = new JSONObject (); map . put ( \"name\" , \"Tom\" ); map . put ( \"age\" , 23 ); String str = map . toString (); System . out . println ( str ); // {\"name\":\"Tom\",\"age\":23} } } java\u5bf9\u8c61\u8f6c\u4e3ajson Person.java public class Person { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getAge () { return age ; } public void setAge ( int age ) { this . age = age ; } } Demo.java import net.sf.json.JSONArray ; import net.sf.json.JSONObject ; import java.util.ArrayList ; import java.util.HashMap ; import java.util.List ; import java.util.Map ; class Demo { public static void main ( String [] args ) { // \u5bf9\u8c61\u8f6cJSONObject Person person = new Person ( \"Tom\" , 23 ); JSONObject obj = JSONObject . fromObject ( person ); System . out . println ( obj . toString ()); // {\"name\":\"Tom\",\"age\":23} // List\u8f6c JSONArray List < Person > list = new ArrayList < Person >(); list . add ( new Person ( \"Tom\" , 23 )); list . add ( new Person ( \"Jack\" , 23 )); JSONArray array = JSONArray . fromObject ( list ); System . out . println ( array . toString ()); // [{\"age\":23,\"name\":\"Tom\"},{\"age\":23,\"name\":\"Jack\"}] // map\u8f6cJSONObject Map < String , String > map = new HashMap < String , String >(); map . put ( \"name\" , \"Tom\" ); map . put ( \"sex\" , \"male\" ); System . out . println ( JSONObject . fromObject ( map ). toString ()); // {\"sex\":\"male\",\"name\":\"Tom\"} } } \u8bfe\u65f614 14.\u6253\u5305ajax\u751f\u6210\u5c0f\u5de5\u5177 \u53c2\u6570 option { method url asyn type callback params data } xml text json \u540e\u7aef\u63a5\u53e3 from flask import Flask , request , jsonify from flask_cors import CORS app = Flask ( __name__ ) CORS ( app , supports_credentials = True ) @app.route ( \"/json\" , methods = [ \"GET\" , \"POST\" ]) def json (): username = request . args . get ( \"username\" ) if request . method == \"POST\" : username = request . form . get ( \"username\" ) if request . is_json : username = request . json . get ( \"username\" ) return jsonify ({ \"name\" : username }) if __name__ == '__main__' : app . run ( debug = True ) \u5c01\u88c5\u7684\u5de5\u5177 ajax-util.js // \u83b7\u53d6XMLHttpRequest\u5bf9\u8c61 function createXMLHttpRequest () { try { // \u5927\u591a\u6570\u6d4f\u89c8\u5668 return new XMLHttpRequest (); } catch ( e ) { try { // IE6.0 new ActiveXObject ( \"Msxml2.XMLHTTP\" ); } catch ( e ) { try { // IE<=5.5 new ActiveXObject ( \"Microsoft.XMLHTTP\" ); } catch ( e ) { console . log ( \"\u6d4f\u89c8\u5668\u7248\u672c\u592a\u8001\u4e86\uff01\" ); throw e ; } } } } // \u5224\u65ad\u662f\u5426\u4e3aIE\u6d4f\u89c8\u5668 function isIE () { if ( window . addEventListener ) { return false ; } else { return true ; } } /** * \u5c06\u5bf9\u8c61\u8f6c\u4e3aurl\u67e5\u8be2\u53c2\u6570 * @param {*} data * { \"name\": \"Tom\", \"age\": 23 } * -> name=Tom&age=23 */ function encodeData ( data ) { if ( ! data ) { return null ; } let list = []; for ( let [ key , value ] of Object . entries ( data )) { list . push ( ` ${ key } = ${ value } ` ); } return list . join ( \"&\" ); } const CONTENT_TYPE = \"Content-Type\" ; const contentTypeMap = { html : \"text/html; charset=utf-8\" , xml : \"text/xml; charset=utf-8\" , json : \"application/json; charset=utf-8\" , form : \"application/x-www-form-urlencoded\" } /** * * @param {*} option: * method * url * asyn * type * callback * params * data */ function ajax ( option ) { // \u5fc5\u4f20\u53c2\u6570 let url = option . url ; let callback = option . callback ; // \u53ef\u9009\u53c2\u6570 let method = option . method || \"GET\" ; let asyn = option . asyn || true ; let params = option . params || {}; let type = option . type || \"html\" ; let data = option . data || {}; let xmlHttp = createXMLHttpRequest (); // \u5904\u7406\u54cd\u5e94\u6570\u636e xmlHttp . onreadystatechange = function () { // \u53cc\u91cd\u5224\u65ad xmlHttp\u72b6\u6001\u4e3a\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u670d\u52a1\u5668\u72b6\u6001\u54cd\u5e94\u7ed3\u675f if ( xmlHttp . readyState == 4 && xmlHttp . status == 200 ) { // \u83b7\u53d6\u54cd\u5e94\u7ed3\u679c let responseData = null ; if ( xmlHttp . responseXML ) { responseData = xmlHttp . responseXML ; } else { responseData = xmlHttp . responseText ; try { responseData = JSON . parse ( responseData ); } catch ( e ) { } } callback ( responseData ); } } // \u5904\u7406\u8bf7\u6c42\u6570\u636e if ( params ) { url = url + \"?\" + encodeData ( params ); } xmlHttp . open ( method , url , asyn ); xmlHttp . setRequestHeader ( CONTENT_TYPE , contentTypeMap [ type ]); let sendData = null ; if ( type == \"json\" ) { sendData = JSON . stringify ( data ); } else { sendData = encodeData ( data ); } xmlHttp . send ( sendData ); } // console.log(encodeData(undefined)); \u6d4b\u8bd5\u4ee3\u7801 < button id = \"get-btn\" > GET </ button > < h2 id = \"get-text\" ></ h2 > < button id = \"post-btn\" > POST </ button > < form action = \"\" > < input type = \"text\" name = \"username\" id = \"username\" > </ form > < h2 id = \"post-text\" ></ h2 > < script src = \"./ajax-util.js\" ></ script > < script > // \u6587\u6863\u52a0\u8f7d\u5b8c\u6210\u540e\u9a6c\u4e0a\u6267\u884c window . onload = function () { // get\u65b9\u6cd5 let getBtn = document . getElementById ( \"get-btn\" ); getBtn . onclick = function () { ajax ({ url : \"http://127.0.0.1:5000/json\" , method : \"GET\" , params : { \"username\" : \"Tom\" }, callback : function ( data ) { console . log ( data ); document . getElementById ( \"get-text\" ). innerHTML = data . name ; } }) }; // post\u65b9\u6cd5 let postBtn = document . getElementById ( \"post-btn\" ); postBtn . onclick = function () { ajax ({ url : \"http://127.0.0.1:5000/json\" , method : \"POST\" , type : \"json\" , params : { \"username\" : \"Tom\" }, data : { \"username\" : document . getElementById ( \"username\" ). value }, callback : function ( data ) { console . log ( data ); document . getElementById ( \"post-text\" ). innerHTML = data . name ; } }) } } </ script >","title":"Ajax\u5b66\u4e60"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/8-JavaWeb-Ajax\u5b66\u4e60/#ajax","text":"","title":"Ajax\u5b66\u4e60"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/8-JavaWeb-Ajax\u5b66\u4e60/#1-1ajax","text":"asynchronous javascript and xml \u5f02\u6b65js\u548cxml 1\u3001\u5f02\u6b65\u4ea4\u4e92\u548c\u540c\u6b65\u4ea4\u4e92 \u540c\u6b65 \u53d1\u9001\uff0c\u7b49\u5f85 \u6574\u4e2a\u9875\u9762\u5237\u65b0 \u5f02\u6b65 \u53d1\u9001\uff0c\u4e0d\u7b49\u5f85 \u5c40\u90e8\u5237\u65b0 \u793a\u4f8b\uff1a\u5f02\u6b65\u5237\u65b0 < button id = \"btn\" > \u70b9\u51fb </ button > < h2 id = \"text\" ></ h2 > < script > // \u6587\u6863\u52a0\u8f7d\u5b8c\u6210\u540e\u9a6c\u4e0a\u6267\u884c window . onload = function (){ let btn = document . getElementById ( \"btn\" ); // \u7ed9btn\u6ce8\u518c\u70b9\u51fb\u4e8b\u4ef6\u76d1\u542c btn . onclick = function (){ let text = document . getElementById ( \"text\" ); text . innerHTML = \"hello!\" ; } } </ script >","title":"\u8bfe\u65f61 1.ajax\u7b80\u4ecb\uff08\u5f02\u6b65\u4e0e\u540c\u6b65\uff09"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/8-JavaWeb-Ajax\u5b66\u4e60/#2-2","text":"\u6570\u636e\u683c\u5f0f text\u3001xml\u3001json \u540c\u6b65\uff1a \u8bf7\u6c42 -> \u54cd\u5e94 <- \u8bf7\u6c42 -> \u54cd\u5e94 <- \u5f02\u6b65\uff1a \u8bf7\u6c42 -> \u8bf7\u6c42 -> \u54cd\u5e94 <- \u54cd\u5e94 <-","title":"\u8bfe\u65f62 2.\u5f02\u6b65\u548c\u540c\u6b65\u4ea4\u4e92\u56fe"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/8-JavaWeb-Ajax\u5b66\u4e60/#3-3ajax","text":"\u4f18\u70b9\uff1a \u5f02\u6b65\u4ea4\u4e92\uff0c\u589e\u5f3a\u7528\u6237\u4f53\u9a8c \u6027\u80fd\uff1a\u53ea\u9700\u8981\u54cd\u5e94\u90e8\u5206\u5185\u5bb9\uff0c\u670d\u52a1\u5668\u538b\u529b\u51cf\u5c11 \u7f3a\u70b9\uff1a ajax\u4e0d\u80fd\u5e94\u7528\u5728\u6240\u6709\u573a\u666f ajax\u589e\u591a\u4e86\u5bf9\u670d\u52a1\u5668\u7684\u8bf7\u6c42\uff0c\u7ed9\u670d\u52a1\u5668\u589e\u52a0\u538b\u529b","title":"\u8bfe\u65f63 3.ajax\u7684\u5e94\u7528\u573a\u666f\u548c\u4f18\u7f3a\u70b9"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/8-JavaWeb-Ajax\u5b66\u4e60/#4-4ajax","text":"1\u3001\u83b7\u53d6XMLHttpRequest // \u5927\u591a\u6570\u6d4f\u89c8\u5668 var xmlHttp = new XMLHttpRequest (); // IE6.0 var xmlHttp = new ActiveXObject ( \"Msxml2.XMLHTTP\" ); // IE<=5.5 var xmlHttp = new ActiveXObject ( \"Microsoft.XMLHTTP\" ); \u7f16\u5199\u4e00\u4e2a\u521b\u5efaXMLHttpRequest\u5bf9\u8c61\u7684\u51fd\u6570 function createXMLHttpRequest (){ try { // \u5927\u591a\u6570\u6d4f\u89c8\u5668 return new XMLHttpRequest (); } catch ( e ){ try { // IE6.0 new ActiveXObject ( \"Msxml2.XMLHTTP\" ); } catch ( e ){ try { // IE<=5.5 new ActiveXObject ( \"Microsoft.XMLHTTP\" ); } catch ( e ){ console . log ( \"\u6d4f\u89c8\u5668\u7248\u672c\u592a\u8001\u4e86\uff01\" ); throw e ; } } } } 2\u3001\u8fde\u63a5\u670d\u52a1\u5668 xmlHttp . open ( \"GET\" , \"/url\" , true ); // \u53c2\u6570\uff1a\u8bf7\u6c42\u65b9\u5f0f\uff0c\u8bf7\u6c42url\uff0c\u662f\u5426\u4e3a\u5f02\u6b65 3\u3001\u53d1\u9001\u8bf7\u6c42 xmlHttp . send ( null ); // \u53c2\u6570\uff1a\u8bf7\u6c42\u4f53\u5185\u5bb9\uff0c\u5982\u679c\u662fGET,\u5fc5\u987b\u7ed9\u51fanull\uff0c\u4e0d\u7136FireFox\u53ef\u80fd\u4e0d\u53d1\u9001 4\u3001\u6ce8\u518c\u4e8b\u4ef6\u76d1\u542c\u5668 \uff081\uff095\u4e2a\u72b6\u6001\uff1a 0 \u521a\u521b\u5efa 1 \u8bf7\u6c42\u5f00\u59cb\uff0c\u8c03\u7528 open 2 \u8bf7\u6c42\u53d1\u9001\u5b8c\u6210 \u8c03\u7528 send 3 \u670d\u52a1\u5668\u5f00\u59cb\u54cd\u5e94 4 \u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f \uff082\uff09\u83b7\u53d6\u54cd\u5e94\u5185\u5bb9 // \u83b7\u53d6\u72b6\u6001 var state = xmlHttp . readyState ; // \u5f97\u5230\u670d\u52a1\u5668\u54cd\u5e94\u72b6\u6001\u7801 200, 404, 500 var status = xmlHttp . status ; // \u5f97\u5230\u670d\u52a1\u5668\u54cd\u5e94\u5185\u5bb9 var content = xmlHttp . responseText ; // \u6587\u672c\u683c\u5f0f var content = xmlHttp . responseXml ; // xml\u683c\u5f0f\uff0cdocument\u5bf9\u8c61 \uff083\uff09\u6ce8\u518c\u76d1\u542c\u4e8b\u4ef6 xmlHttp . onreadystatechange = function (){ // \u53cc\u91cd\u5224\u65ad xmlHttp\u72b6\u6001\u4e3a\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u670d\u52a1\u5668\u72b6\u6001\u54cd\u5e94\u7ed3\u675f if ( xmlHttp . readyState == 4 && xmlHttp . status == 200 ){ var text = xmlHttp . responseText ; } }","title":"\u8bfe\u65f64 4.ajax\u56db\u6b65\u64cd\u4f5c"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/8-JavaWeb-Ajax\u5b66\u4e60/#5-5ajaxhelloworld","text":"\u4e3a\u4e86\u4fbf\u4e8e\u6d4b\u8bd5\uff0c\u670d\u52a1\u7aef\u4f7f\u7528Python\u8bed\u8a00 \u670d\u52a1\u7aef hello.py # pip install flask, flask-cors from flask import Flask from flask_cors import CORS app = Flask ( __name__ ) CORS ( app , supports_credentials = True ) @app.route ( \"/\" ) def index (): return \"<h2>Hello!</h2>\" if __name__ == '__main__' : app . run () \u5ba2\u6237\u7aef demo.html < button id = \"btn\" > \u70b9\u51fb < /button> < h2 id = \"text\" >< /h2> < script > // \u83b7\u53d6XMLHttpRequest\u5bf9\u8c61 function createXMLHttpRequest (){ try { // \u5927\u591a\u6570\u6d4f\u89c8\u5668 return new XMLHttpRequest (); } catch ( e ){ try { // IE6.0 new ActiveXObject ( \"Msxml2.XMLHTTP\" ); } catch ( e ){ try { // IE<=5.5 new ActiveXObject ( \"Microsoft.XMLHTTP\" ); } catch ( e ){ console . log ( \"\u6d4f\u89c8\u5668\u7248\u672c\u592a\u8001\u4e86\uff01\" ); throw e ; } } } } // \u6587\u6863\u52a0\u8f7d\u5b8c\u6210\u540e\u9a6c\u4e0a\u6267\u884c window . onload = function (){ let btn = document . getElementById ( \"btn\" ); // \u7ed9btn\u70b9\u51fb\u4e8b\u4ef6\u6ce8\u518c\u76d1\u542c btn . onclick = function (){ let xmlHttp = createXMLHttpRequest (); xmlHttp . open ( \"GET\" , \"http://127.0.0.1:5000/\" , true ); xmlHttp . send (); xmlHttp . onreadystatechange = function (){ // \u53cc\u91cd\u5224\u65ad xmlHttp\u72b6\u6001\u4e3a\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u670d\u52a1\u5668\u72b6\u6001\u54cd\u5e94\u7ed3\u675f if ( xmlHttp . readyState == 4 && xmlHttp . status == 200 ){ var text = xmlHttp . responseText ; let h2 = document . getElementById ( \"text\" ); h2 . innerHTML = text ; } } } } < /script>","title":"\u8bfe\u65f65 5.ajax\u7b2c\u4e00\u4f8b\uff1ahelloworld"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/8-JavaWeb-Ajax\u5b66\u4e60/#6ajaxpost","text":"\u591a\u6dfb\u52a0\u4e00\u4e2a\u8bf7\u6c42\u5934 // \u8bbe\u7f6e\u8bf7\u6c42\u5934 xmlHttp . setRequestHeader ( 'Content-Type' , 'application/x-www-form-urlencoded' ); // \u53d1\u9001\u8bf7\u6c42\u4f53 xmlHttp . send ( \"username=Tom&age=23\" ); \u670d\u52a1\u7aef\u63a5\u6536\u51fd\u6570 hello.py @app.route ( \"/post\" , methods = [ 'POST' ]) def post (): username = request . form . get ( \"username\" ) age = request . form . get ( \"age\" ) return f \"<h2>username: {username}, age: {age}</h2>\" \u5ba2\u6237\u7aef\u4fee\u6539 demo.html xmlHttp . open ( \"POST\" , \"http://127.0.0.1:5000/post\" , true ); xmlHttp . setRequestHeader ( 'Content-Type' , 'application/x-www-form-urlencoded' ); xmlHttp . send ( \"username=Tom&age=23\" );","title":"6.ajax\u7b2c\u4e8c\u4f8b\uff1a\u53d1\u9001POST\u8bf7\u6c42"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/8-JavaWeb-Ajax\u5b66\u4e60/#7-7ajax","text":"\u5ba2\u6237\u7aef\u8981\u6c42\uff1a 1\u3001\u6ce8\u518c\u8868\u5355 2\u3001\u76d1\u542c\u7528\u6237\u540d\u6587\u672c\u6846\u5931\u53bb\u7126\u70b9onblur\u4e8b\u4ef6 3\u3001\u83b7\u53d6\u6587\u672c\u6846\u5185\u5bb9\uff0c\u901a\u8fc7ajax\u5f02\u6b65\u53d1\u9001\u7ed9\u670d\u52a1\u5668 4\u3001\u5982\u679c\u4e3a1 \u663e\u793a\uff1a\u7528\u6237\u540d\u5df2\u88ab\u6ce8\u518c \u5982\u679c\u4e3a0 \u4ec0\u4e48\u90fd\u4e0d\u663e\u793a < meta charset = \"utf-8\" > < style > # errorText { color : red ; } </ style > < form action = \"\" > < input type = \"text\" name = \"username\" id = \"username\" > < span id = \"errorText\" ></ span > </ form > < script > // \u83b7\u53d6XMLHttpRequest\u5bf9\u8c61 function createXMLHttpRequest () { try { // \u5927\u591a\u6570\u6d4f\u89c8\u5668 return new XMLHttpRequest (); } catch ( e ) { try { // IE6.0 new ActiveXObject ( \"Msxml2.XMLHTTP\" ); } catch ( e ) { try { // IE<=5.5 new ActiveXObject ( \"Microsoft.XMLHTTP\" ); } catch ( e ) { console . log ( \"\u6d4f\u89c8\u5668\u7248\u672c\u592a\u8001\u4e86\uff01\" ); throw e ; } } } } // \u6587\u6863\u52a0\u8f7d\u5b8c\u6210\u540e\u9a6c\u4e0a\u6267\u884c window . onload = function () { let username = document . getElementById ( \"username\" ); // \u5931\u53bb\u7126\u70b9\u6ce8\u518c\u4e8b\u4ef6\u76d1\u542c username . onblur = function () { let xmlHttp = createXMLHttpRequest (); xmlHttp . open ( \"POST\" , \"http://127.0.0.1:5000/validate\" , true ); xmlHttp . setRequestHeader ( 'Content-Type' , 'application/x-www-form-urlencoded' ); xmlHttp . send ( \"username=\" + username . value ); xmlHttp . onreadystatechange = function () { // \u53cc\u91cd\u5224\u65ad xmlHttp\u72b6\u6001\u4e3a\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u670d\u52a1\u5668\u72b6\u6001\u54cd\u5e94\u7ed3\u675f if ( xmlHttp . readyState == 4 && xmlHttp . status == 200 ) { var text = xmlHttp . responseText ; let errorText = document . getElementById ( \"errorText\" ); if ( text == '1' ) { errorText . innerHTML = \"\u7528\u6237\u540d\u5df2\u88ab\u6ce8\u518c\" ; } else { errorText . innerHTML = \"\" ; } } } } } </ script > \u670d\u52a1\u7aef\u8981\u6c42\uff1a 1\u3001\u83b7\u53d6\u5ba2\u6237\u7aef\u4f20\u9012\u7684\u7528\u6237\u540d\u53c2\u6570 2\u3001\u5224\u65ad\u662f\u5426\u4e3ademo\uff0c\u662f\u8fd4\u56de1\uff0c\u5426\u8fd4\u56de0 @app.route ( \"/validate\" , methods = [ 'POST' ]) def validate (): username = request . form . get ( \"username\" ) if username == \"demo\" : return \"1\" else : return \"0\"","title":"\u8bfe\u65f67 7.ajax\u7b2c\u4e09\u4f8b\uff1a\u7528\u6237\u540d\u662f\u5426\u5df2\u88ab\u6ce8\u518c"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/8-JavaWeb-Ajax\u5b66\u4e60/#8-8ajaxxml","text":"\u670d\u52a1\u7aef\u54cd\u5e94\u5934 Content-Type : text / xml ; charset = utf-8 \u5ba2\u6237\u7aef\u8bbe\u7f6e var doc = xmlHttp . responseXML ; // \u5f97\u5230Document\u5bf9\u8c61 \u670d\u52a1\u7aef\u4ee3\u7801 @app.route ( \"/xml\" ) def xml (): data = \"\"\" <person> <name>Tom</name> <age>23</age> </person> \"\"\" res = make_response ( data ) res . headers [ 'Content-Type' ] = 'text/xml; charset=utf-8' return res \u5ba2\u6237\u7aef\u4ee3\u7801 < button id = \"btn\" > \u70b9\u51fb </ button > < h2 id = \"text\" ></ h2 > < script > // \u83b7\u53d6XMLHttpRequest\u5bf9\u8c61 function createXMLHttpRequest () { try { // \u5927\u591a\u6570\u6d4f\u89c8\u5668 return new XMLHttpRequest (); } catch ( e ) { try { // IE6.0 new ActiveXObject ( \"Msxml2.XMLHTTP\" ); } catch ( e ) { try { // IE<=5.5 new ActiveXObject ( \"Microsoft.XMLHTTP\" ); } catch ( e ) { console . log ( \"\u6d4f\u89c8\u5668\u7248\u672c\u592a\u8001\u4e86\uff01\" ); throw e ; } } } } // \u5224\u65ad\u662f\u5426\u4e3aIE\u6d4f\u89c8\u5668 function isIE () { if ( window . addEventListener ) { return false ; } else { return true ; } } // \u6587\u6863\u52a0\u8f7d\u5b8c\u6210\u540e\u9a6c\u4e0a\u6267\u884c window . onload = function () { let btn = document . getElementById ( \"btn\" ); // \u6ce8\u518c\u4e8b\u4ef6\u76d1\u542c btn . onclick = function () { let xmlHttp = createXMLHttpRequest (); xmlHttp . open ( \"GET\" , \"http://127.0.0.1:5000/xml\" , true ); xmlHttp . send ( null ); xmlHttp . onreadystatechange = function () { // \u53cc\u91cd\u5224\u65ad xmlHttp\u72b6\u6001\u4e3a\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u670d\u52a1\u5668\u72b6\u6001\u54cd\u5e94\u7ed3\u675f if ( xmlHttp . readyState == 4 && xmlHttp . status == 200 ) { // \u83b7\u53d6\u54cd\u5e94\u7ed3\u679c var doc = xmlHttp . responseXML ; // IE \u548c\u975eIE\u6709\u6240\u533a\u522b let name = doc . getElementsByTagName ( \"name\" )[ 0 ]. textContent ; let age = doc . getElementsByTagName ( \"age\" )[ 0 ]. textContent ; let text = document . getElementById ( \"text\" ); text . innerHTML = `name: ${ name } , age: ${ age } ` ; } } } } </ script >","title":"\u8bfe\u65f68 8.ajax\u7b2c\u56db\u4f8b\uff1a\u54cd\u5e94\u5185\u5bb9\u4e3axml"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/8-JavaWeb-Ajax\u5b66\u4e60/#9-10-ajax","text":"<select name= \"province\" id= \"\" > <option value= \"\" > \u8bf7\u9009\u62e9\u7701\u4efd </option> </select> <select name= \"city\" id= \"\" > <option value= \"\" > \u8bf7\u9009\u62e9\u57ce\u5e02 </option> </select> \u670d\u52a1\u7aef\u63d0\u4f9b\u4e24\u4e2a\u63a5\u53e3 province city?province=\u5317\u4eac \u5b8c\u6574\u4ee3\u7801 \u4e00\u3001\u524d\u7aef\u4ee3\u7801 1\u3001util.js // \u83b7\u53d6XMLHttpRequest\u5bf9\u8c61 function createXMLHttpRequest () { try { // \u5927\u591a\u6570\u6d4f\u89c8\u5668 return new XMLHttpRequest (); } catch ( e ) { try { // IE6.0 new ActiveXObject ( \"Msxml2.XMLHTTP\" ); } catch ( e ) { try { // IE<=5.5 new ActiveXObject ( \"Microsoft.XMLHTTP\" ); } catch ( e ) { console . log ( \"\u6d4f\u89c8\u5668\u7248\u672c\u592a\u8001\u4e86\uff01\" ); throw e ; } } } } // \u5224\u65ad\u662f\u5426\u4e3aIE\u6d4f\u89c8\u5668 function isIE () { if ( window . addEventListener ) { return false ; } else { return true ; } } 2\u3001demo.html < select name = \"province\" id = \"province\" > < option value = \"\" > \u8bf7\u9009\u62e9\u7701\u4efd </ option > </ select > < select name = \"city\" id = \"city\" > < option value = \"\" > \u8bf7\u9009\u62e9\u57ce\u5e02 </ option > </ select > < script src = \"./util.js\" ></ script > < script > function createOption ( name ) { // \u521b\u5efaoption\u5143\u7d20 let option = document . createElement ( \"option\" ); option . value = name ; // \u521b\u5efa\u6587\u672c\u8282\u70b9 let textNode = document . createTextNode ( name ); option . appendChild ( textNode ); return option ; } // \u6587\u6863\u52a0\u8f7d\u5b8c\u6210\u540e\u9a6c\u4e0a\u6267\u884c window . onload = function () { // \u7b2c\u4e00\u6b65\uff1a\u5148\u83b7\u53d6\u7701\u7ea7\u5217\u8868 let xmlHttp = createXMLHttpRequest (); xmlHttp . open ( \"GET\" , \"http://127.0.0.1:5000/provinces\" , true ); xmlHttp . send ( null ); let province = document . getElementById ( \"province\" ); xmlHttp . onreadystatechange = function () { // \u53cc\u91cd\u5224\u65ad xmlHttp\u72b6\u6001\u4e3a\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u670d\u52a1\u5668\u72b6\u6001\u54cd\u5e94\u7ed3\u675f if ( xmlHttp . readyState == 4 && xmlHttp . status == 200 ) { // \u83b7\u53d6\u54cd\u5e94\u7ed3\u679c var text = xmlHttp . responseText ; let list = text . split ( \"|\" ); // \u62c6\u5206\u6570\u636e\u5f97\u5230\u6570\u7ec4 for ( let item of list ) { let option = createOption ( item ); province . appendChild ( option ); } } } // \u7b2c\u4e8c\u6b65\uff1a\u76d1\u542c\u7701\u7ea7\u5217\u8868\u53d8\u52a8\uff0c\u83b7\u53d6\u57ce\u5e02\u5217\u8868 province . onchange = function () { if ( province . value == \"\" ) { return } let xmlHttp = createXMLHttpRequest (); xmlHttp . open ( \"POST\" , \"http://127.0.0.1:5000/cities\" , true ); xmlHttp . setRequestHeader ( 'Content-Type' , 'application/x-www-form-urlencoded' ); xmlHttp . send ( `province= ${ province . value } ` ); xmlHttp . onreadystatechange = function () { // \u53cc\u91cd\u5224\u65ad xmlHttp\u72b6\u6001\u4e3a\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u670d\u52a1\u5668\u72b6\u6001\u54cd\u5e94\u7ed3\u675f if ( xmlHttp . readyState == 4 && xmlHttp . status == 200 ) { // \u79fb\u9664\u6240\u6709\u7ed3\u679c let city = document . getElementById ( \"city\" ); let optionList = city . getElementsByTagName ( \"option\" ); while ( optionList . length > 1 ) { city . removeChild ( optionList [ 1 ]); } // \u83b7\u53d6\u54cd\u5e94\u7ed3\u679c var doc = xmlHttp . responseXML ; let cities = doc . getElementsByTagName ( \"city\" ); for ( let item of cities ) { let cityName = \"\" ; // \u517c\u5bb9IE\u6d4f\u89c8\u5668\u548c\u5176\u4ed6\u6d4f\u89c8\u5668 if ( isIE ()) { cityName = item . text ; // IE } else { cityName = item . textContent ; // FireFox\u7b49 } let option = createOption ( cityName ); city . appendChild ( option ); } } } } } </ script > \u4e8c\u3001\u540e\u7aef\u4ee3\u7801 1\u3001\u6570\u636e\u6587\u4ef6china.xml <china> <province name= \"\u5317\u4eac\" > <city> \u4e1c\u57ce\u533a </city> <city> \u897f\u57ce\u533a </city> </province> <province name= \"\u5929\u6d25\" > <city> \u548c\u5e73\u533a </city> <city> \u6cb3\u4e1c\u533a </city> </province> </china> 2\u3001\u6570\u636e\u89e3\u6790\u6587\u4ef6demo.py # pip install lxml from lxml import etree class China (): path = \"china.xml\" @classmethod def getProvinces ( cls ): \"\"\"\u83b7\u53d6\u7701\u4efd \"\"\" tree = etree . parse ( cls . path ) return tree . xpath ( '//province/@name' ) @classmethod def getCities ( cls , province ): \"\"\"\u83b7\u53d6\u57ce\u5e02 \"\"\" tree = etree . parse ( cls . path ) result = tree . xpath ( f \"//province[@name='{province}']\" ) if result : return etree . tostring ( result [ 0 ], encoding = \"UTF-8\" ) else : return \"\" if __name__ == \"__main__\" : print ( China . getProvinces ()) print ( China . getCities ( \"\u5317\u4eac\" )) 3\u3001\u63a5\u53e3\u6587\u4ef6 from flask import Flask , request , make_response from flask_cors import CORS from demo import China app = Flask ( __name__ ) CORS ( app , supports_credentials = True ) @app.route ( \"/provinces\" ) def provinces (): return \"|\" . join ( China . getProvinces ()) @app.route ( \"/cities\" , methods = [ 'POST' ]) def cities (): province = request . form . get ( \"province\" ) res = make_response ( China . getCities ( province )) res . headers [ 'Content-Type' ] = 'text/xml; charset=utf-8' return res if __name__ == '__main__' : app . run ( debug = True )","title":"\u8bfe\u65f69-10 ajax\u7b2c\u4e94\u4f8b\uff1a\u7701\u5e02\u8054\u52a8"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/8-JavaWeb-Ajax\u5b66\u4e60/#11-11xstreamjavabeanxml","text":"\u4f9d\u8d56 <dependency> <groupId> xstream </groupId> <artifactId> xstream </artifactId> <version> 1.2.2 </version> </dependency> \u4ee3\u7801\u5b9e\u4f8b import com.thoughtworks.xstream.XStream ; import java.util.ArrayList ; import java.util.List ; class City { private String name ; public City ( String name ) { this . name = name ; } } class Province { private String name ; private List < City > cities = new ArrayList <>(); public void addCity ( City city ){ cities . add ( city ); } public Province ( String name ) { this . name = name ; } } public class TestXStream { public static void main ( String [] args ) { // \u6570\u636e\u51c6\u5907 List < Province > list = new ArrayList < Province >(); Province province = new Province ( \"\u5317\u4eac\" ); province . addCity ( new City ( \"\u4e1c\u57ce\u533a\" )); province . addCity ( new City ( \"\u660c\u5e73\u533a\" )); list . add ( province ); XStream xStream = new XStream (); // \u6307\u5b9a\u522b\u540d xStream . alias ( \"china\" , List . class ); xStream . alias ( \"province\" , Province . class ); xStream . alias ( \"city\" , City . class ); // \u5c5e\u6027\u8bbe\u7f6e xStream . useAttributeFor ( Province . class , \"name\" ); // \u53bb\u9664\u65e0\u7528\u7684\u6807\u7b7e xStream . addImplicitCollection ( Province . class , \"cities\" ); String str = xStream . toXML ( list ); System . out . println ( str ); } }","title":"\u8bfe\u65f611 11.XStream(\u53ef\u628aJavabean\u8f6c\u6362\u6210XMl\u7684\u5c0f\u5de5\u5177)"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/8-JavaWeb-Ajax\u5b66\u4e60/#12-12json","text":"js\u63d0\u4f9b\u7684\u4e00\u79cd\u6570\u636e\u4ea4\u6362\u683c\u5f0f Json\u8bed\u6cd5 \u5c5e\u6027\u540d\u5fc5\u987b\u4f7f\u7528\u53cc\u5f15\u53f7\u62ec\u8d77\u6765 \u5bf9\u8c61\uff1a{} \u5c5e\u6027\uff1a null \u3001\u6570\u503c\u3001\u5b57\u7b26\u4e32\u3001\u6570\u7ec4 [] \u3001 boolean ( true / false ) var s = \"1 + 2\" ; eval ( s ); // 3 1\u3001\u793a\u4f8b \uff081\uff09\u670d\u52a1\u7aef\u4ee3\u7801 from flask import Flask , jsonify from flask_cors import CORS app = Flask ( __name__ ) CORS ( app , supports_credentials = True ) @app.route ( \"/json\" ) def json (): return jsonify ({ \"name\" : \"Tom\" }) if __name__ == '__main__' : app . run ( debug = True ) \uff082\uff09\u5ba2\u6237\u7aef\u4ee3\u7801 < button id = \"btn\" > \u70b9\u51fb </ button > < h2 id = \"text\" ></ h2 > < script src = \"./util.js\" ></ script > < script > // \u6587\u6863\u52a0\u8f7d\u5b8c\u6210\u540e\u9a6c\u4e0a\u6267\u884c window . onload = function () { let btn = document . getElementById ( \"btn\" ); btn . onclick = function () { let xmlHttp = createXMLHttpRequest (); xmlHttp . open ( \"GET\" , \"http://127.0.0.1:5000/json\" , true ); xmlHttp . send ( null ); xmlHttp . onreadystatechange = function () { // \u53cc\u91cd\u5224\u65ad xmlHttp\u72b6\u6001\u4e3a\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u670d\u52a1\u5668\u72b6\u6001\u54cd\u5e94\u7ed3\u675f if ( xmlHttp . readyState == 4 && xmlHttp . status == 200 ) { // \u83b7\u53d6\u54cd\u5e94\u7ed3\u679c let text = xmlHttp . responseText ; let obj = JSON . parse ( text ); document . getElementById ( \"text\" ). innerHTML = `name: ${ obj . name } ` ; } } } } </ script > json\u4e0exml\u6bd4\u8f83 \u53ef\u8bfb\u6027 \u89e3\u7801\u96be\u5ea6 \u6d41\u884c\u5ea6","title":"\u8bfe\u65f612 12.JSON\u7684\u6982\u8ff0"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/8-JavaWeb-Ajax\u5b66\u4e60/#13-13json-lib","text":"\u7ee7\u627f\u5173\u7cfb public final class JSONArray extends AbstractJSON implements JSON , List , Comparable public final class JSONObject extends AbstractJSON implements JSON , Map , Comparable \u4f9d\u8d56 <dependency> <groupId> net.sf.json-lib </groupId> <artifactId> json-lib </artifactId> <version> 2.4 </version> <classifier> jdk15 </classifier> </dependency> \u793a\u4f8b import net.sf.json.JSONObject ; class Demo { public static void main ( String [] args ) { JSONObject map = new JSONObject (); map . put ( \"name\" , \"Tom\" ); map . put ( \"age\" , 23 ); String str = map . toString (); System . out . println ( str ); // {\"name\":\"Tom\",\"age\":23} } } java\u5bf9\u8c61\u8f6c\u4e3ajson Person.java public class Person { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getAge () { return age ; } public void setAge ( int age ) { this . age = age ; } } Demo.java import net.sf.json.JSONArray ; import net.sf.json.JSONObject ; import java.util.ArrayList ; import java.util.HashMap ; import java.util.List ; import java.util.Map ; class Demo { public static void main ( String [] args ) { // \u5bf9\u8c61\u8f6cJSONObject Person person = new Person ( \"Tom\" , 23 ); JSONObject obj = JSONObject . fromObject ( person ); System . out . println ( obj . toString ()); // {\"name\":\"Tom\",\"age\":23} // List\u8f6c JSONArray List < Person > list = new ArrayList < Person >(); list . add ( new Person ( \"Tom\" , 23 )); list . add ( new Person ( \"Jack\" , 23 )); JSONArray array = JSONArray . fromObject ( list ); System . out . println ( array . toString ()); // [{\"age\":23,\"name\":\"Tom\"},{\"age\":23,\"name\":\"Jack\"}] // map\u8f6cJSONObject Map < String , String > map = new HashMap < String , String >(); map . put ( \"name\" , \"Tom\" ); map . put ( \"sex\" , \"male\" ); System . out . println ( JSONObject . fromObject ( map ). toString ()); // {\"sex\":\"male\",\"name\":\"Tom\"} } }","title":"\u8bfe\u65f613 13.json-lib\u7684\u5e94\u7528"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/8-JavaWeb-Ajax\u5b66\u4e60/#14-14ajax","text":"\u53c2\u6570 option { method url asyn type callback params data } xml text json \u540e\u7aef\u63a5\u53e3 from flask import Flask , request , jsonify from flask_cors import CORS app = Flask ( __name__ ) CORS ( app , supports_credentials = True ) @app.route ( \"/json\" , methods = [ \"GET\" , \"POST\" ]) def json (): username = request . args . get ( \"username\" ) if request . method == \"POST\" : username = request . form . get ( \"username\" ) if request . is_json : username = request . json . get ( \"username\" ) return jsonify ({ \"name\" : username }) if __name__ == '__main__' : app . run ( debug = True ) \u5c01\u88c5\u7684\u5de5\u5177 ajax-util.js // \u83b7\u53d6XMLHttpRequest\u5bf9\u8c61 function createXMLHttpRequest () { try { // \u5927\u591a\u6570\u6d4f\u89c8\u5668 return new XMLHttpRequest (); } catch ( e ) { try { // IE6.0 new ActiveXObject ( \"Msxml2.XMLHTTP\" ); } catch ( e ) { try { // IE<=5.5 new ActiveXObject ( \"Microsoft.XMLHTTP\" ); } catch ( e ) { console . log ( \"\u6d4f\u89c8\u5668\u7248\u672c\u592a\u8001\u4e86\uff01\" ); throw e ; } } } } // \u5224\u65ad\u662f\u5426\u4e3aIE\u6d4f\u89c8\u5668 function isIE () { if ( window . addEventListener ) { return false ; } else { return true ; } } /** * \u5c06\u5bf9\u8c61\u8f6c\u4e3aurl\u67e5\u8be2\u53c2\u6570 * @param {*} data * { \"name\": \"Tom\", \"age\": 23 } * -> name=Tom&age=23 */ function encodeData ( data ) { if ( ! data ) { return null ; } let list = []; for ( let [ key , value ] of Object . entries ( data )) { list . push ( ` ${ key } = ${ value } ` ); } return list . join ( \"&\" ); } const CONTENT_TYPE = \"Content-Type\" ; const contentTypeMap = { html : \"text/html; charset=utf-8\" , xml : \"text/xml; charset=utf-8\" , json : \"application/json; charset=utf-8\" , form : \"application/x-www-form-urlencoded\" } /** * * @param {*} option: * method * url * asyn * type * callback * params * data */ function ajax ( option ) { // \u5fc5\u4f20\u53c2\u6570 let url = option . url ; let callback = option . callback ; // \u53ef\u9009\u53c2\u6570 let method = option . method || \"GET\" ; let asyn = option . asyn || true ; let params = option . params || {}; let type = option . type || \"html\" ; let data = option . data || {}; let xmlHttp = createXMLHttpRequest (); // \u5904\u7406\u54cd\u5e94\u6570\u636e xmlHttp . onreadystatechange = function () { // \u53cc\u91cd\u5224\u65ad xmlHttp\u72b6\u6001\u4e3a\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u670d\u52a1\u5668\u72b6\u6001\u54cd\u5e94\u7ed3\u675f if ( xmlHttp . readyState == 4 && xmlHttp . status == 200 ) { // \u83b7\u53d6\u54cd\u5e94\u7ed3\u679c let responseData = null ; if ( xmlHttp . responseXML ) { responseData = xmlHttp . responseXML ; } else { responseData = xmlHttp . responseText ; try { responseData = JSON . parse ( responseData ); } catch ( e ) { } } callback ( responseData ); } } // \u5904\u7406\u8bf7\u6c42\u6570\u636e if ( params ) { url = url + \"?\" + encodeData ( params ); } xmlHttp . open ( method , url , asyn ); xmlHttp . setRequestHeader ( CONTENT_TYPE , contentTypeMap [ type ]); let sendData = null ; if ( type == \"json\" ) { sendData = JSON . stringify ( data ); } else { sendData = encodeData ( data ); } xmlHttp . send ( sendData ); } // console.log(encodeData(undefined)); \u6d4b\u8bd5\u4ee3\u7801 < button id = \"get-btn\" > GET </ button > < h2 id = \"get-text\" ></ h2 > < button id = \"post-btn\" > POST </ button > < form action = \"\" > < input type = \"text\" name = \"username\" id = \"username\" > </ form > < h2 id = \"post-text\" ></ h2 > < script src = \"./ajax-util.js\" ></ script > < script > // \u6587\u6863\u52a0\u8f7d\u5b8c\u6210\u540e\u9a6c\u4e0a\u6267\u884c window . onload = function () { // get\u65b9\u6cd5 let getBtn = document . getElementById ( \"get-btn\" ); getBtn . onclick = function () { ajax ({ url : \"http://127.0.0.1:5000/json\" , method : \"GET\" , params : { \"username\" : \"Tom\" }, callback : function ( data ) { console . log ( data ); document . getElementById ( \"get-text\" ). innerHTML = data . name ; } }) }; // post\u65b9\u6cd5 let postBtn = document . getElementById ( \"post-btn\" ); postBtn . onclick = function () { ajax ({ url : \"http://127.0.0.1:5000/json\" , method : \"POST\" , type : \"json\" , params : { \"username\" : \"Tom\" }, data : { \"username\" : document . getElementById ( \"username\" ). value }, callback : function ( data ) { console . log ( data ); document . getElementById ( \"post-text\" ). innerHTML = data . name ; } }) } } </ script >","title":"\u8bfe\u65f614 14.\u6253\u5305ajax\u751f\u6210\u5c0f\u5de5\u5177"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/","text":"Servlet \u5b66\u4e60 \u8bfe\u65f6 1 Servlet \u662f\u4ec0\u4e48 Servlet \u4f5c\u7528\u662f\u5904\u7406\u8bf7\u6c42 \u63a5\u6536\u8bf7\u6c42 \u5904\u7406\u8bf7\u6c42 \u5b8c\u6210\u54cd\u5e94 \u8bfe\u65f6 2 \u5b9e\u73b0 Servlet \u65b9\u5f0f \u4f9d\u8d56 <dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 4.0.1 </version> <scope> provided </scope> </dependency> \u5b9e\u73b0\u65b9\u5f0f // \u5b9e\u73b0\u63a5\u53e3\uff1a javax . servlet . Servlet // \u7ee7\u627f\u7c7b\uff1a javax . servlet . GenericServlet // \u7ee7\u627f\u7c7b\uff1a javax . servlet . HttpServlet \u7ee7\u627f\u793a\u4f8b AServlet.java import javax.servlet.* ; import java.io.IOException ; public class AServlet implements Servlet { // \u521b\u5efa\u65f6\u6267\u884c @Override public void init ( ServletConfig servletConfig ) throws ServletException { } // \u83b7\u53d6\u914d\u7f6e\u4fe1\u606f @Override public ServletConfig getServletConfig () { return null ; } // \u5904\u7406\u8bf7\u6c42 @Override public void service ( ServletRequest servletRequest , ServletResponse servletResponse ) throws ServletException , IOException { } // \u83b7\u53d6servlet\u4fe1\u606f @Override public String getServletInfo () { return null ; } // \u9500\u6bc1\u524d\u8c03\u7528 @Override public void destroy () { } } \u8bfe\u65f6 3 Servlet \u7684\u751f\u547d\u5468\u671f \u751f\u547d\u5468\u671f init \u5b9e\u4f8b\u5316\u8c03\u7528 service \u6bcf\u6b21\u5904\u7406\u8bf7\u6c42\u90fd\u8c03\u7528 destroy \u9500\u6bc1\u8c03\u7528 \u7279\u6027 \uff081\uff09\u5355\u4f8b\uff0c\u6bcf\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u5bf9\u8c61 \uff082\uff09\u7ebf\u7a0b\u4e0d\u5b89\u5168\uff0c\u6548\u7387\u6700\u9ad8 Servlet \u7c7b\u7531\u7528\u6237\u81ea\u5b9a\u4e49\uff0c\u5bf9\u8c61\u7531\u670d\u52a1\u5668\u6765\u521b\u5efa\uff0c\u5e76\u6709\u670d\u52a1\u5668\u8c03\u7528\u5bf9\u5e94\u7684\u65b9\u6cd5 \u6d4f\u89c8\u5668\u8bbf\u95ee Servlet \u7ed9 Servlet \u914d\u7f6e\u4e00\u4e2a\u8def\u5f84 web.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <web-app> <!-- \u6ce8\u518c Servlet\uff0c\u5e2e\u52a9web\u670d\u52a1\u5668\u53cd\u5c04\u8be5\u7c7b --> <servlet> <servlet-name> demo </servlet-name> <servlet-class> AServlet </servlet-class> </servlet> <!-- \u6620\u5c04 Servlet \u8d44\u6e90\uff0c\u7528url-pattern\u5143\u7d20\u6807\u793a URL --> <servlet-mapping> <servlet-name> demo </servlet-name> <url-pattern> demo </url-pattern> </servlet-mapping> </web-app> \u76ee\u5f55\u7ed3\u6784 webapp \u2514\u2500\u2500 WEB - INF \u251c\u2500\u2500 classes \u2502 \u2514\u2500\u2500 AServlet . class \u2514\u2500\u2500 web . xml \u8bfe\u65f6 4 ServletConfig \u4ecb\u7ecd interface ServletConfig { // \u83b7\u53d6servlet-name\u4e2d\u7684\u5185\u5bb9 String getServletName () // \u83b7\u53d6Servlet\u4e0a\u4e0b\u6587\u5bf9\u8c61 ServletContext getServletContext () // \u83b7\u53d6\u6307\u5b9a\u521d\u59cb\u5316\u53c2\u6570\u503c String getInitParameter ( String name ) // \u83b7\u53d6\u6240\u6709\u521d\u59cb\u5316\u53c2\u6570\u503c Enumeration < String > getInitParameterNames () } <servlet> <init-param> <param-name> name </param-name> <param-value> Tom </param-value> </init-param> </servlet> \u83b7\u53d6\u53c2\u6570 @Override public void init ( ServletConfig servletConfig ) throws ServletException { System . out . println ( servletConfig . getInitParameter ( \"name\" )); } \u8bfe\u65f6 5 ServletRequest \u548c Servletresponse \u5bf9\u8c61 interface ServletRequest ; interface ServletResponse ; \u8bfe\u65f6 6 GenericServlet \u4ecb\u7ecd GenericServlet \u53ef\u4ee5\u53ea\u8986\u5199 service \u65b9\u6cd5\uff0c\u4e0d\u7528\u5168\u5199 \u57fa\u672c\u539f\u7406 import javax.servlet.* ; import java.io.IOException ; public class AServlet implements Servlet { private ServletConfig config = null ; @Override public void init ( ServletConfig servletConfig ) { this . config = servletConfig ; this . init (); } // \u5b9e\u73b0\u6b64\u65b9\u6cd5\uff0c\u521d\u59cb\u5316\u540e\u53ef\u4ee5\u8c03\u7528 public void init () { } @Override public ServletConfig getServletConfig () { return this . config ; } @Override public void service ( ServletRequest servletRequest , ServletResponse servletResponse ) throws ServletException , IOException { } @Override public String getServletInfo () { return null ; } @Override public void destroy () { } } \u4f7f\u7528\u793a\u4f8b import javax.servlet.* ; import java.io.IOException ; public class AServlet extends GenericServlet { @Override public void service ( ServletRequest servletRequest , ServletResponse servletResponse ) throws IOException { servletResponse . getWriter (). write ( \"<h2>hello<h2>\" ); } } \u8bfe\u65f6 7 HttpServlet \u4ecb\u7ecd \u6e90\u7801 package javax.servlet.http ; public abstract class HttpServlet extends GenericServlet { // \u91cd\u5199 protected void doGet ( HttpServletRequest req , HttpServletResponse resp ); // \u91cd\u5199 protected void doPost ( HttpServletRequest req , HttpServletResponse resp ); protected void service ( HttpServletRequest req , HttpServletResponse resp ); public void service ( ServletRequest req , ServletResponse res ){ if ( req instanceof HttpServletRequest && res instanceof HttpServletResponse ) { HttpServletRequest request = ( HttpServletRequest ) req ; HttpServletResponse response = ( HttpServletResponse ) res ; this . service ( request , response ); } else { throw new ServletException ( \"non-HTTP request or response\" ); } } } \u4f7f\u7528\u793a\u4f8b: \u63a5\u6536 GET \u8bf7\u6c42 import javax.servlet.* ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class AServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { resp . getWriter (). write ( \"<h2>hello</h2>\" ); } } \u8bfe\u65f6 8 Servlet \u7684\u7ec6\u8282 1\u3001\u975e\u7ebf\u7a0b\u5b89\u5168 \u4e00\u4e2a Servlet \u7c7b\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u5de5\u4f5c\u6548\u7387\u9ad8 \uff081\uff09\u4e0d\u8981\u5728 Servlet \u4e2d\u521b\u5efa\u6210\u5458\uff0c\u521b\u5efa\u5c40\u90e8\u53d8\u91cf\u5373\u53ef \uff082\uff09\u53ef\u4ee5\u521b\u5efa\u65e0\u72b6\u6001\u6210\u5458 \uff083\uff09\u53ef\u4ee5\u521b\u5efa\u6709\u72b6\u6001\u7684\u6210\u5458\uff0c\u4f46\u662f\u72b6\u6001\u5fc5\u987b\u4e3a\u53ea\u8bfb 2\u3001\u521b\u5efa\u65f6\u542f\u52a8 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u670d\u52a1\u5668\u4f1a\u5728\u7b2c\u4e00\u6b21\u8bbf\u95ee Servlet \u65f6\u521b\u5efa\u5b9e\u4f8b\u5bf9\u8c61 \u7ed9 load-on-startup \u8bbe\u7f6e\u4e00\u4e2a\u975e\u8d1f\u6574\u6570 \u6b63\u6570\u7684\u503c\u8d8a\u5c0f\uff0c\u542f\u52a8\u8be5 servlet \u7684\u4f18\u5148\u7ea7\u8d8a\u9ad8 \u53ef\u4ee5\u914d\u7f6e\u521b\u5efa\u65f6\u542f\u52a8 <servlet> <servlet-name> servletName </servlet-name> <load-on-startup> 0 </load-on-startup> </servlet> 3\u3001url-pattern \u53ef\u4ee5\u6709\u591a\u4e2a\u8bbf\u95ee\u8def\u5f84 \u53ef\u4ee5\u4f7f\u7528\u524d\u7f00\u6216\u8005\u540e\u7f00\u901a\u914d\u7b26 * <servlet> <servlet-name> servletName </servlet-name> <!-- \u540e\u7f00\u5339\u914d --> <url-pattern> /demo/* </url-pattern> <!-- \u524d\u7f00\u5339\u914d --> <url-pattern> *.do </url-pattern> <!-- \u5339\u914d\u6240\u6709url --> <url-pattern> /* </url-pattern> </servlet> \u8bfe\u65f6 9 \u5728 conf \u4e0b\u7684 web.xml \u6587\u4ef6\u5185\u5bb9\u4ecb\u7ecd \\${CATALINA_HOME}/conf/web.xml <!-- \u4f18\u5148\u7ea7\u6700\u4f4e --> <servlet-mapping> <servlet-name> default </servlet-name> <url-pattern> / </url-pattern> </servlet-mapping> <!-- \u8fc7\u671f\u65f6\u95f430\u5206\u949f --> <session-config> <session-timeout> 30 </session-timeout> </session-config> <!-- \u7c7b\u578b\u6620\u5c04 --> <mime-mapping> <extension> xml </extension> <mime-type> application/xml </mime-type> </mime-mapping> \u8bfe\u65f6 10 Servlet \u4e0e\u53cd\u5c04 Servlet \u901a\u8fc7\u53cd\u5c04\uff0c\u83b7\u53d6\u914d\u7f6e\u6587\u4ef6\u7684\u7c7b\u540d\uff0c\u8fdb\u884c\u5b9e\u4f8b\u5316\u548c\u65b9\u6cd5\u8c03\u7528 \u8bfe\u65f6 11 ServletContext \u6982\u8ff0 \u4e00\u4e2a\u9879\u76ee\u53ea\u6709\u4e00\u4e2a ServletContext \u5bf9\u8c61 \u53ef\u4ee5\u5728\u591a\u4e2a Servlet \u4e2d\u4f20\u9012\u5bf9\u8c61 Tomcat \u542f\u52a8\u65f6\u521b\u5efa\uff0c\u5173\u95ed\u65f6\u9500\u6bc1 \u8bfe\u65f6 12 \u83b7\u53d6 ServletContext \u5bf9\u8c61 \u83b7\u53d6 ServletContext class ServeletConfig { ServletContext getServletContext (); } class GenericServlet { ServletContext getServletContext (); } \u8bfe\u65f6 13 \u6f14\u793a ServletContext \u57df\u5bf9\u8c61: \u5728\u591a\u4e2a Servlet \u4e2d\u4f20\u9012\u6570\u636e class ServletContext { // \u8bbe\u7f6e \u591a\u6b21\u8c03\u7528\u4f1a\u8986\u76d6 void setAttribute ( String name , Object vlaue ); // \u83b7\u53d6 Object getAttribute ( String name ); // \u79fb\u9664 void removeAttribute ( String name ); // \u83b7\u53d6\u5168\u90e8\u5c5e\u6027\u540d\u79f0 Enumeration getAttributeNames (); } \u4f8b\u5982: AServlet \u7684\u6570\u636e\u53ef\u4ee5\u4f20\u9012\u5230 BServlet AServlet.java package com.pengshiyu ; import javax.servlet.ServletContext ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class AServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws IOException { String name = request . getParameter ( \"name\" ); ServletContext context = getServletContext (); context . setAttribute ( \"name\" , name ); response . getWriter (). write ( \"<h2>\" + name + \"</h2>\" ); } } BServlet.java package com.pengshiyu ; import javax.servlet.ServletContext ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class BServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws IOException { ServletContext context = getServletContext (); String name = ( String ) context . getAttribute ( \"name\" ); response . getWriter (). println ( name ); } } \u8bfe\u65f6 14 ServletContext \u83b7\u53d6\u516c\u5171\u7684\u521d\u59cb\u5316\u53c2\u6570 Servlet \u53ea\u80fd\u83b7\u53d6\u81ea\u5df1\u7684\u521d\u59cb\u5316\u53c2\u6570 ServletContext \u83b7\u53d6\u516c\u5171\u7684\u521d\u59cb\u5316\u53c2\u6570 <web-app> <context-param> <param-name> key </param-name> <param-value> value </param-value> </context-param> </web-app> package com.pengshiyu ; import javax.servlet.ServletContext ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class BServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws IOException { ServletContext context = getServletContext (); String name = context . getInitParameter ( \"key\" ); response . getWriter (). println ( name ); } } \u8bfe\u65f6 15 ServletContext \u83b7\u53d6\u8d44\u6e90\u76f8\u5173\u65b9\u6cd5 \u4ee5 webapp \u6587\u6839\u76ee\u5f55 ServletContext context = getServletContext (); // \u83b7\u53d6\u7edd\u5bf9\u8def\u5f84 String path = context . getRealPath ( \"/index.html\" ); // \u83b7\u53d6\u6587\u4ef6\u540e\u8f6c\u4e3a\u8f93\u5165\u6d41 InputStream in = context . getResourceAsStream ( \"/index.html\" ); // \u83b7\u53d6\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6 Set < String > set = context . getResourcePaths ( \"/\" ); // [/hello.html, /WEB-INF/] \u8bfe\u65f6 16 \u7f51\u7ad9\u8bbf\u95ee\u91cf\u7edf\u8ba1\u5c0f\u6848\u4f8b \u4f7f\u7528 ServletContext \u5bf9\u8c61\u5171\u4eab\u7edf\u8ba1\u6570\u636e package com.pengshiyu ; import javax.servlet.ServletContext ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class BServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws IOException { ServletContext context = getServletContext (); Integer count = ( Integer ) context . getAttribute ( \"count\" ); if ( count == null ) { count = 1 ; // \u7b2c\u4e00\u6b21\u8bbf\u95ee } else { count ++; } response . setContentType ( \"text/html; charset=UTF-8\" ); response . getWriter (). println ( \"<h2>\u7b2c\" + count + \"\u6b21\u8bbf\u95ee</h2>\" ); context . setAttribute ( \"count\" , count ); } } \u8bfe\u65f6 17 \u83b7\u53d6\u7c7b\u8def\u5f84\u4e0b\u7684\u8d44\u6e90 \u4f9d\u8d56 <dependency> <groupId> commons-io </groupId> <artifactId> commons-io </artifactId> <version> 2.6 </version> </dependency> \u4ee3\u7801\u5b9e\u4f8b package com.pengshiyu ; import org.apache.commons.io.IOUtils ; import java.io.IOException ; import java.io.InputStream ; import java.nio.charset.StandardCharsets ; public class Demo { public static void main ( String [] args ) throws IOException { Class < Demo > clazz = Demo . class ; // 1\u3001\u76f8\u5bf9\u4e8e.class\u6240\u5728\u76ee\u5f55 InputStream input1 = clazz . getResourceAsStream ( \"1.txt\" ); System . out . println ( IOUtils . toString ( input1 , StandardCharsets . UTF_8 )); // 2\u3001\u76f8\u5bf9\u4e8e/classes InputStream input2 = clazz . getResourceAsStream ( \"/2.txt\" ); System . out . println ( IOUtils . toString ( input2 , StandardCharsets . UTF_8 )); ClassLoader loader = clazz . getClassLoader (); // 3\u3001\u76f8\u5bf9\u4e8e/classes InputStream input3 = loader . getResourceAsStream ( \"3.txt\" ); System . out . println ( IOUtils . toString ( input3 , StandardCharsets . UTF_8 )); } } \u8bfe\u65f6 18 BaseServlet \u4e00\u4e2a Servlet \u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a\u8bf7\u6c42\u5904\u7406\u65b9\u6cd5 BaseServlet.java package com.pengshiyu ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.lang.reflect.Method ; public class BaseServlet extends HttpServlet { @Override protected void service ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { String methodName = req . getParameter ( \"method\" ); if ( methodName == null || methodName . trim (). isEmpty ()){ throw new RuntimeException ( \"method is null or empty\" ); } System . out . println ( methodName ); // \u901a\u8fc7\u53c2\u6570\u83b7\u53d6\u65b9\u6cd5 Class clazz = this . getClass (); Method method = null ; try { method = clazz . getMethod ( methodName , HttpServletRequest . class , HttpServletResponse . class ); } catch ( NoSuchMethodException e ) { throw new RuntimeException ( \"\u65b9\u6cd5\u83b7\u53d6\u5931\u8d25\" ); } // \u8c03\u7528\u65b9\u6cd5 try { method . invoke ( this , req , resp ); } catch ( Exception e ) { throw new RuntimeException ( \"\u8c03\u7528\u5931\u8d25\" ); } } } AServlet.java package com.pengshiyu ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class AServlet extends BaseServlet { public void getAge ( HttpServletRequest request , HttpServletResponse response ) throws IOException { response . getWriter (). print ( \"getAge\" ); } public void getName ( HttpServletRequest request , HttpServletResponse response ) throws IOException { response . getWriter (). print ( \"getName\" ); } } \u8c03\u7528\u65f6\u4f20\u5165\u67e5\u8be2\u53c2\u6570 http://localhost:8080/demo/hello?method=getAge","title":"Servlet \u5b66\u4e60"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/#servlet","text":"","title":"Servlet \u5b66\u4e60"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/#1-servlet","text":"Servlet \u4f5c\u7528\u662f\u5904\u7406\u8bf7\u6c42 \u63a5\u6536\u8bf7\u6c42 \u5904\u7406\u8bf7\u6c42 \u5b8c\u6210\u54cd\u5e94","title":"\u8bfe\u65f6 1 Servlet \u662f\u4ec0\u4e48"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/#2-servlet","text":"\u4f9d\u8d56 <dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 4.0.1 </version> <scope> provided </scope> </dependency> \u5b9e\u73b0\u65b9\u5f0f // \u5b9e\u73b0\u63a5\u53e3\uff1a javax . servlet . Servlet // \u7ee7\u627f\u7c7b\uff1a javax . servlet . GenericServlet // \u7ee7\u627f\u7c7b\uff1a javax . servlet . HttpServlet \u7ee7\u627f\u793a\u4f8b AServlet.java import javax.servlet.* ; import java.io.IOException ; public class AServlet implements Servlet { // \u521b\u5efa\u65f6\u6267\u884c @Override public void init ( ServletConfig servletConfig ) throws ServletException { } // \u83b7\u53d6\u914d\u7f6e\u4fe1\u606f @Override public ServletConfig getServletConfig () { return null ; } // \u5904\u7406\u8bf7\u6c42 @Override public void service ( ServletRequest servletRequest , ServletResponse servletResponse ) throws ServletException , IOException { } // \u83b7\u53d6servlet\u4fe1\u606f @Override public String getServletInfo () { return null ; } // \u9500\u6bc1\u524d\u8c03\u7528 @Override public void destroy () { } }","title":"\u8bfe\u65f6 2 \u5b9e\u73b0 Servlet \u65b9\u5f0f"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/#3-servlet","text":"\u751f\u547d\u5468\u671f init \u5b9e\u4f8b\u5316\u8c03\u7528 service \u6bcf\u6b21\u5904\u7406\u8bf7\u6c42\u90fd\u8c03\u7528 destroy \u9500\u6bc1\u8c03\u7528 \u7279\u6027 \uff081\uff09\u5355\u4f8b\uff0c\u6bcf\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u5bf9\u8c61 \uff082\uff09\u7ebf\u7a0b\u4e0d\u5b89\u5168\uff0c\u6548\u7387\u6700\u9ad8 Servlet \u7c7b\u7531\u7528\u6237\u81ea\u5b9a\u4e49\uff0c\u5bf9\u8c61\u7531\u670d\u52a1\u5668\u6765\u521b\u5efa\uff0c\u5e76\u6709\u670d\u52a1\u5668\u8c03\u7528\u5bf9\u5e94\u7684\u65b9\u6cd5 \u6d4f\u89c8\u5668\u8bbf\u95ee Servlet \u7ed9 Servlet \u914d\u7f6e\u4e00\u4e2a\u8def\u5f84 web.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <web-app> <!-- \u6ce8\u518c Servlet\uff0c\u5e2e\u52a9web\u670d\u52a1\u5668\u53cd\u5c04\u8be5\u7c7b --> <servlet> <servlet-name> demo </servlet-name> <servlet-class> AServlet </servlet-class> </servlet> <!-- \u6620\u5c04 Servlet \u8d44\u6e90\uff0c\u7528url-pattern\u5143\u7d20\u6807\u793a URL --> <servlet-mapping> <servlet-name> demo </servlet-name> <url-pattern> demo </url-pattern> </servlet-mapping> </web-app> \u76ee\u5f55\u7ed3\u6784 webapp \u2514\u2500\u2500 WEB - INF \u251c\u2500\u2500 classes \u2502 \u2514\u2500\u2500 AServlet . class \u2514\u2500\u2500 web . xml","title":"\u8bfe\u65f6 3 Servlet \u7684\u751f\u547d\u5468\u671f"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/#4-servletconfig","text":"interface ServletConfig { // \u83b7\u53d6servlet-name\u4e2d\u7684\u5185\u5bb9 String getServletName () // \u83b7\u53d6Servlet\u4e0a\u4e0b\u6587\u5bf9\u8c61 ServletContext getServletContext () // \u83b7\u53d6\u6307\u5b9a\u521d\u59cb\u5316\u53c2\u6570\u503c String getInitParameter ( String name ) // \u83b7\u53d6\u6240\u6709\u521d\u59cb\u5316\u53c2\u6570\u503c Enumeration < String > getInitParameterNames () } <servlet> <init-param> <param-name> name </param-name> <param-value> Tom </param-value> </init-param> </servlet> \u83b7\u53d6\u53c2\u6570 @Override public void init ( ServletConfig servletConfig ) throws ServletException { System . out . println ( servletConfig . getInitParameter ( \"name\" )); }","title":"\u8bfe\u65f6 4 ServletConfig \u4ecb\u7ecd"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/#5-servletrequest-servletresponse","text":"interface ServletRequest ; interface ServletResponse ;","title":"\u8bfe\u65f6 5 ServletRequest \u548c Servletresponse \u5bf9\u8c61"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/#6-genericservlet","text":"GenericServlet \u53ef\u4ee5\u53ea\u8986\u5199 service \u65b9\u6cd5\uff0c\u4e0d\u7528\u5168\u5199 \u57fa\u672c\u539f\u7406 import javax.servlet.* ; import java.io.IOException ; public class AServlet implements Servlet { private ServletConfig config = null ; @Override public void init ( ServletConfig servletConfig ) { this . config = servletConfig ; this . init (); } // \u5b9e\u73b0\u6b64\u65b9\u6cd5\uff0c\u521d\u59cb\u5316\u540e\u53ef\u4ee5\u8c03\u7528 public void init () { } @Override public ServletConfig getServletConfig () { return this . config ; } @Override public void service ( ServletRequest servletRequest , ServletResponse servletResponse ) throws ServletException , IOException { } @Override public String getServletInfo () { return null ; } @Override public void destroy () { } } \u4f7f\u7528\u793a\u4f8b import javax.servlet.* ; import java.io.IOException ; public class AServlet extends GenericServlet { @Override public void service ( ServletRequest servletRequest , ServletResponse servletResponse ) throws IOException { servletResponse . getWriter (). write ( \"<h2>hello<h2>\" ); } }","title":"\u8bfe\u65f6 6 GenericServlet \u4ecb\u7ecd"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/#7-httpservlet","text":"\u6e90\u7801 package javax.servlet.http ; public abstract class HttpServlet extends GenericServlet { // \u91cd\u5199 protected void doGet ( HttpServletRequest req , HttpServletResponse resp ); // \u91cd\u5199 protected void doPost ( HttpServletRequest req , HttpServletResponse resp ); protected void service ( HttpServletRequest req , HttpServletResponse resp ); public void service ( ServletRequest req , ServletResponse res ){ if ( req instanceof HttpServletRequest && res instanceof HttpServletResponse ) { HttpServletRequest request = ( HttpServletRequest ) req ; HttpServletResponse response = ( HttpServletResponse ) res ; this . service ( request , response ); } else { throw new ServletException ( \"non-HTTP request or response\" ); } } } \u4f7f\u7528\u793a\u4f8b: \u63a5\u6536 GET \u8bf7\u6c42 import javax.servlet.* ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class AServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { resp . getWriter (). write ( \"<h2>hello</h2>\" ); } }","title":"\u8bfe\u65f6 7 HttpServlet \u4ecb\u7ecd"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/#8-servlet","text":"1\u3001\u975e\u7ebf\u7a0b\u5b89\u5168 \u4e00\u4e2a Servlet \u7c7b\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u5de5\u4f5c\u6548\u7387\u9ad8 \uff081\uff09\u4e0d\u8981\u5728 Servlet \u4e2d\u521b\u5efa\u6210\u5458\uff0c\u521b\u5efa\u5c40\u90e8\u53d8\u91cf\u5373\u53ef \uff082\uff09\u53ef\u4ee5\u521b\u5efa\u65e0\u72b6\u6001\u6210\u5458 \uff083\uff09\u53ef\u4ee5\u521b\u5efa\u6709\u72b6\u6001\u7684\u6210\u5458\uff0c\u4f46\u662f\u72b6\u6001\u5fc5\u987b\u4e3a\u53ea\u8bfb 2\u3001\u521b\u5efa\u65f6\u542f\u52a8 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u670d\u52a1\u5668\u4f1a\u5728\u7b2c\u4e00\u6b21\u8bbf\u95ee Servlet \u65f6\u521b\u5efa\u5b9e\u4f8b\u5bf9\u8c61 \u7ed9 load-on-startup \u8bbe\u7f6e\u4e00\u4e2a\u975e\u8d1f\u6574\u6570 \u6b63\u6570\u7684\u503c\u8d8a\u5c0f\uff0c\u542f\u52a8\u8be5 servlet \u7684\u4f18\u5148\u7ea7\u8d8a\u9ad8 \u53ef\u4ee5\u914d\u7f6e\u521b\u5efa\u65f6\u542f\u52a8 <servlet> <servlet-name> servletName </servlet-name> <load-on-startup> 0 </load-on-startup> </servlet> 3\u3001url-pattern \u53ef\u4ee5\u6709\u591a\u4e2a\u8bbf\u95ee\u8def\u5f84 \u53ef\u4ee5\u4f7f\u7528\u524d\u7f00\u6216\u8005\u540e\u7f00\u901a\u914d\u7b26 * <servlet> <servlet-name> servletName </servlet-name> <!-- \u540e\u7f00\u5339\u914d --> <url-pattern> /demo/* </url-pattern> <!-- \u524d\u7f00\u5339\u914d --> <url-pattern> *.do </url-pattern> <!-- \u5339\u914d\u6240\u6709url --> <url-pattern> /* </url-pattern> </servlet>","title":"\u8bfe\u65f6 8 Servlet \u7684\u7ec6\u8282"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/#9-conf-webxml","text":"\\${CATALINA_HOME}/conf/web.xml <!-- \u4f18\u5148\u7ea7\u6700\u4f4e --> <servlet-mapping> <servlet-name> default </servlet-name> <url-pattern> / </url-pattern> </servlet-mapping> <!-- \u8fc7\u671f\u65f6\u95f430\u5206\u949f --> <session-config> <session-timeout> 30 </session-timeout> </session-config> <!-- \u7c7b\u578b\u6620\u5c04 --> <mime-mapping> <extension> xml </extension> <mime-type> application/xml </mime-type> </mime-mapping>","title":"\u8bfe\u65f6 9 \u5728 conf \u4e0b\u7684 web.xml \u6587\u4ef6\u5185\u5bb9\u4ecb\u7ecd"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/#10-servlet","text":"Servlet \u901a\u8fc7\u53cd\u5c04\uff0c\u83b7\u53d6\u914d\u7f6e\u6587\u4ef6\u7684\u7c7b\u540d\uff0c\u8fdb\u884c\u5b9e\u4f8b\u5316\u548c\u65b9\u6cd5\u8c03\u7528","title":"\u8bfe\u65f6 10 Servlet \u4e0e\u53cd\u5c04"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/#11-servletcontext","text":"\u4e00\u4e2a\u9879\u76ee\u53ea\u6709\u4e00\u4e2a ServletContext \u5bf9\u8c61 \u53ef\u4ee5\u5728\u591a\u4e2a Servlet \u4e2d\u4f20\u9012\u5bf9\u8c61 Tomcat \u542f\u52a8\u65f6\u521b\u5efa\uff0c\u5173\u95ed\u65f6\u9500\u6bc1","title":"\u8bfe\u65f6 11 ServletContext \u6982\u8ff0"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/#12-servletcontext","text":"\u83b7\u53d6 ServletContext class ServeletConfig { ServletContext getServletContext (); } class GenericServlet { ServletContext getServletContext (); }","title":"\u8bfe\u65f6 12 \u83b7\u53d6 ServletContext \u5bf9\u8c61"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/#13-servletcontext","text":"\u57df\u5bf9\u8c61: \u5728\u591a\u4e2a Servlet \u4e2d\u4f20\u9012\u6570\u636e class ServletContext { // \u8bbe\u7f6e \u591a\u6b21\u8c03\u7528\u4f1a\u8986\u76d6 void setAttribute ( String name , Object vlaue ); // \u83b7\u53d6 Object getAttribute ( String name ); // \u79fb\u9664 void removeAttribute ( String name ); // \u83b7\u53d6\u5168\u90e8\u5c5e\u6027\u540d\u79f0 Enumeration getAttributeNames (); } \u4f8b\u5982: AServlet \u7684\u6570\u636e\u53ef\u4ee5\u4f20\u9012\u5230 BServlet AServlet.java package com.pengshiyu ; import javax.servlet.ServletContext ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class AServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws IOException { String name = request . getParameter ( \"name\" ); ServletContext context = getServletContext (); context . setAttribute ( \"name\" , name ); response . getWriter (). write ( \"<h2>\" + name + \"</h2>\" ); } } BServlet.java package com.pengshiyu ; import javax.servlet.ServletContext ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class BServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws IOException { ServletContext context = getServletContext (); String name = ( String ) context . getAttribute ( \"name\" ); response . getWriter (). println ( name ); } }","title":"\u8bfe\u65f6 13 \u6f14\u793a ServletContext"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/#14-servletcontext","text":"Servlet \u53ea\u80fd\u83b7\u53d6\u81ea\u5df1\u7684\u521d\u59cb\u5316\u53c2\u6570 ServletContext \u83b7\u53d6\u516c\u5171\u7684\u521d\u59cb\u5316\u53c2\u6570 <web-app> <context-param> <param-name> key </param-name> <param-value> value </param-value> </context-param> </web-app> package com.pengshiyu ; import javax.servlet.ServletContext ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class BServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws IOException { ServletContext context = getServletContext (); String name = context . getInitParameter ( \"key\" ); response . getWriter (). println ( name ); } }","title":"\u8bfe\u65f6 14 ServletContext \u83b7\u53d6\u516c\u5171\u7684\u521d\u59cb\u5316\u53c2\u6570"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/#15-servletcontext","text":"\u4ee5 webapp \u6587\u6839\u76ee\u5f55 ServletContext context = getServletContext (); // \u83b7\u53d6\u7edd\u5bf9\u8def\u5f84 String path = context . getRealPath ( \"/index.html\" ); // \u83b7\u53d6\u6587\u4ef6\u540e\u8f6c\u4e3a\u8f93\u5165\u6d41 InputStream in = context . getResourceAsStream ( \"/index.html\" ); // \u83b7\u53d6\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6 Set < String > set = context . getResourcePaths ( \"/\" ); // [/hello.html, /WEB-INF/]","title":"\u8bfe\u65f6 15 ServletContext \u83b7\u53d6\u8d44\u6e90\u76f8\u5173\u65b9\u6cd5"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/#16","text":"\u4f7f\u7528 ServletContext \u5bf9\u8c61\u5171\u4eab\u7edf\u8ba1\u6570\u636e package com.pengshiyu ; import javax.servlet.ServletContext ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class BServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest request , HttpServletResponse response ) throws IOException { ServletContext context = getServletContext (); Integer count = ( Integer ) context . getAttribute ( \"count\" ); if ( count == null ) { count = 1 ; // \u7b2c\u4e00\u6b21\u8bbf\u95ee } else { count ++; } response . setContentType ( \"text/html; charset=UTF-8\" ); response . getWriter (). println ( \"<h2>\u7b2c\" + count + \"\u6b21\u8bbf\u95ee</h2>\" ); context . setAttribute ( \"count\" , count ); } }","title":"\u8bfe\u65f6 16 \u7f51\u7ad9\u8bbf\u95ee\u91cf\u7edf\u8ba1\u5c0f\u6848\u4f8b"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/#17","text":"\u4f9d\u8d56 <dependency> <groupId> commons-io </groupId> <artifactId> commons-io </artifactId> <version> 2.6 </version> </dependency> \u4ee3\u7801\u5b9e\u4f8b package com.pengshiyu ; import org.apache.commons.io.IOUtils ; import java.io.IOException ; import java.io.InputStream ; import java.nio.charset.StandardCharsets ; public class Demo { public static void main ( String [] args ) throws IOException { Class < Demo > clazz = Demo . class ; // 1\u3001\u76f8\u5bf9\u4e8e.class\u6240\u5728\u76ee\u5f55 InputStream input1 = clazz . getResourceAsStream ( \"1.txt\" ); System . out . println ( IOUtils . toString ( input1 , StandardCharsets . UTF_8 )); // 2\u3001\u76f8\u5bf9\u4e8e/classes InputStream input2 = clazz . getResourceAsStream ( \"/2.txt\" ); System . out . println ( IOUtils . toString ( input2 , StandardCharsets . UTF_8 )); ClassLoader loader = clazz . getClassLoader (); // 3\u3001\u76f8\u5bf9\u4e8e/classes InputStream input3 = loader . getResourceAsStream ( \"3.txt\" ); System . out . println ( IOUtils . toString ( input3 , StandardCharsets . UTF_8 )); } }","title":"\u8bfe\u65f6 17 \u83b7\u53d6\u7c7b\u8def\u5f84\u4e0b\u7684\u8d44\u6e90"},{"location":"Java/JavaWeb\u5f00\u53d1\u57fa\u7840/9-JavaWeb-Servlet\u5b66\u4e60/#18-baseservlet","text":"\u4e00\u4e2a Servlet \u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a\u8bf7\u6c42\u5904\u7406\u65b9\u6cd5 BaseServlet.java package com.pengshiyu ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.lang.reflect.Method ; public class BaseServlet extends HttpServlet { @Override protected void service ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { String methodName = req . getParameter ( \"method\" ); if ( methodName == null || methodName . trim (). isEmpty ()){ throw new RuntimeException ( \"method is null or empty\" ); } System . out . println ( methodName ); // \u901a\u8fc7\u53c2\u6570\u83b7\u53d6\u65b9\u6cd5 Class clazz = this . getClass (); Method method = null ; try { method = clazz . getMethod ( methodName , HttpServletRequest . class , HttpServletResponse . class ); } catch ( NoSuchMethodException e ) { throw new RuntimeException ( \"\u65b9\u6cd5\u83b7\u53d6\u5931\u8d25\" ); } // \u8c03\u7528\u65b9\u6cd5 try { method . invoke ( this , req , resp ); } catch ( Exception e ) { throw new RuntimeException ( \"\u8c03\u7528\u5931\u8d25\" ); } } } AServlet.java package com.pengshiyu ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class AServlet extends BaseServlet { public void getAge ( HttpServletRequest request , HttpServletResponse response ) throws IOException { response . getWriter (). print ( \"getAge\" ); } public void getName ( HttpServletRequest request , HttpServletResponse response ) throws IOException { response . getWriter (). print ( \"getName\" ); } } \u8c03\u7528\u65f6\u4f20\u5165\u67e5\u8be2\u53c2\u6570 http://localhost:8080/demo/hello?method=getAge","title":"\u8bfe\u65f6 18 BaseServlet"},{"location":"Java/Java\u5f00\u53d1\u5de5\u5177/","text":"Java \u5f00\u53d1\u5de5\u5177 28-Maven","title":"Java \u5f00\u53d1\u5de5\u5177"},{"location":"Java/Java\u5f00\u53d1\u5de5\u5177/#java","text":"28-Maven","title":"Java \u5f00\u53d1\u5de5\u5177"},{"location":"Java/Java\u5f00\u53d1\u5de5\u5177/28-Maven/","text":"Maven Maven \u7b80\u4ecb \u7248\u672c\u63a7\u5236\u5de5\u5177 cvs,svn,git \u9879\u76ee\u6784\u5efa\u5de5\u5177 make, ant, maven gradle 1\u3001\u914d\u7f6e\u6587\u4ef6 pom.xml project object model 2\u3001Maven \u4f18\u52bf \u8de8\u5e73\u53f0 \u670d\u52a1\u4e8e\u6784\u5efa\uff1a\u6e05\u7406\uff0c\u7f16\u8bd1\uff0c\u6d4b\u8bd5\uff0c\u751f\u6210\u62a5\u544a\uff0c\u6253\u5305\uff0c\u90e8\u7f72 \u6807\u51c6\u5316 \u5c01\u88c5\u6784\u5efa\u8fc7\u7a0b \u4f9d\u8d56\u7ba1\u7406\u5de5\u5177 \u9879\u76ee\u89c4\u8303\u5316\uff1a\u7ea6\u5b9a\u4f18\u4e8e\u914d\u7f6e \u5b89\u88c5\u548c\u914d\u7f6e \u4e0b\u8f7d\u5730\u5740\uff1ahttps://maven.apache.org/download.cgi Mac \u5b89\u88c5\u6b65\u9aa4\uff1a wget https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz tar -xvf apache-maven-3.6.3-bin.tar.gz vim ~/.bash_profile # Maven export MAVEN_HOME=/usr/local/apache-maven-3.6.3-bin export PATH= ${ PATH } : ${ MAVEN_HOME } /bin mvn -v Apache Maven 3.6.3 GAV <groupId> org.example </groupId> <artifactId> spring-mvc-demo </artifactId> <version> 1.0-SNAPSHOT </version> \u793a\u4f8b <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <!-- \u5e38\u91cf --> <modelVersion> 4.0.0 </modelVersion> <!-- GAV --> <groupId> org.example </groupId> <artifactId> spring-mvc-demo </artifactId> <version> 1.0-SNAPSHOT </version> <!-- \u4f9d\u8d56 --> <dependencies> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-core </artifactId> <version> 5.2.6.RELEASE </version> <!-- \u4f5c\u7528\u57df --> <scope></scope> </dependency> </dependencies> </project> \u76ee\u5f55\u7ed3\u6784 ${ basedir } \u5b58\u653epom.xml\u548c\u6240\u6709\u7684\u5b50\u76ee\u5f55 ${ basedir } /src/main/java \u9879\u76ee\u7684java\u6e90\u4ee3\u7801 ${ basedir } /src/main/resources \u9879\u76ee\u7684\u8d44\u6e90\uff0c\u6bd4\u5982\u8bf4property\u6587\u4ef6\uff0cspringmvc.xml ${ basedir } /src/test/java \u9879\u76ee\u7684\u6d4b\u8bd5\u7c7b\uff0c\u6bd4\u5982\u8bf4Junit\u4ee3\u7801 ${ basedir } /src/test/resources \u6d4b\u8bd5\u7528\u7684\u8d44\u6e90 ${ basedir } /src/main/webapp/WEB-INF web\u5e94\u7528\u6587\u4ef6\u76ee\u5f55\uff0cweb\u9879\u76ee\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u5b58\u653eweb.xml\u3001\u672c\u5730\u56fe\u7247\u3001jsp\u89c6\u56fe\u9875\u9762 \u9879\u76ee\u793a\u4f8b \u9879\u76ee\u7ed3\u6784 . \u251c\u2500\u2500 pom . xml \u2514\u2500\u2500 src \u251c\u2500\u2500 main \u2502 \u251c\u2500\u2500 java \u2502 \u2502 \u2514\u2500\u2500 Hello . java \u2502 \u2514\u2500\u2500 resources \u2514\u2500\u2500 test pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> org.example </groupId> <artifactId> demo </artifactId> <version> 1.0-SNAPSHOT </version> </project> Hello.java public class Hello { public static void main ( String [] args ) { System . out . println ( \"Hello\" ); } } \u64cd\u4f5c\u547d\u4ee4 \u5e38\u7528\u64cd\u4f5c # \u521b\u5efa\u9879\u76ee mvn archetype:generate \\ \"-DgroupId=com.companyname.bank\" \\ \"-DartifactId=consumerBanking\" \\ \"-DarchetypeArtifactId=maven-archetype-quickstart\" \\ \"-DinteractiveMode=false\" \u53c2\u6570\u8bf4\u660e\uff1a -DgourpId: \u7ec4\u7ec7\u540d\uff0c\u516c\u53f8\u7f51\u5740\u7684\u53cd\u5199 + \u9879\u76ee\u540d\u79f0 -DartifactId: \u9879\u76ee\u540d-\u6a21\u5757\u540d -DarchetypeArtifactId: \u6307\u5b9a ArchetypeId\uff0c maven-archetype-quickstart\uff0c\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 Java \u5e94\u7528 -DinteractiveMode: \u662f\u5426\u4f7f\u7528\u4ea4\u4e92\u6a21\u5f0f # \u7f16\u8bd1\u6e90\u7801 mvn compile # \u7f16\u8bd1\u6d4b\u8bd5\u4ee3\u7801 mvn test-compile # \u8fd0\u884c\u6d4b\u8bd5 mvn test # \u4ea7\u751fsite mvn site # \u6253\u5305 mvn package # \u672c\u5730Repository \u4e2d\u5b89\u88c5jar mvn install # \u6e05\u9664\u4ea7\u751f\u7684\u9879\u76ee mvn clean # \u751f\u6210eclipse\u9879\u76ee mvn eclipse:eclipse # \u751f\u6210idea\u9879\u76ee mvn idea:idea # \u53ea\u6253\u5305\u4e0d\u6d4b\u8bd5 mvn -Dtest package # \u53ea\u6253\u5305jar mvn jar:jar # \u53ea\u6d4b\u8bd5\u4e0d\u7f16\u8bd1\u4e5f\u4e0d\u7f16\u8bd1\u6d4b\u8bd5 mvn test -skipping compile -skipping test-compile Version X.Y.Z-\u91cc\u7a0b\u7891 X \u5927\u7248\u672c Y \u5c0f\u7248\u672c \u4fee\u6539 bug\uff0c\u589e\u52a0\u529f\u80fd Z \u66f4\u65b0 \u91cc\u7a0b\u7891 SNAPSHOT \u5feb\u7167\uff0c\u5f00\u53d1\u7248 alpha \u5185\u90e8\u6d4b\u8bd5 beta \u516c\u5f00\u6d4b\u8bd5 Release | RC \u53d1\u5e03\u7248 release condidate GA \u6b63\u5e38\u7248\u672c \u5750\u6807 groupId \u7ec4\u7ec7\u540d artifactId \u9879\u76ee\u540d version \u7248\u672c\u53f7 packaging \u6253\u5305\u65b9\u5f0f \u9ed8\u8ba4 jar classifier \u6587\u6863\u548c\u6e90\u4ee3\u7801 \u4ed3\u5e93 1\u3001\u672c\u5730\u4ed3\u5e93 Mac \u4e0b\u9ed8\u8ba4\u4ed3\u5e93\u4f4d\u7f6e ~/ . m2 / repository 2\u3001\u8fdc\u7a0b\u4ed3\u5e93 \uff081\uff09\u4e2d\u592e\u4ed3\u5e93 https://mvnrepository.com/ \uff082\uff09\u79c1\u670d Nexus \uff083\uff09\u516c\u5171\u5e93 \u4f7f\u7528\u963f\u91cc\u4e91\u4ed3\u5e93 <mirrors> <mirror> <id> alimaven </id> <name> aliyun maven </name> <url> http://maven.aliyun.com/nexus/content/groups/public/ </url> <mirrorOf> central </mirrorOf> </mirror> </mirrors> \u4f9d\u8d56\u8303\u56f4 Compile \u7f16\u8bd1\u3001\u6d4b\u8bd5\u3001\u8fd0\u884c \u9ed8\u8ba4 Test \u6d4b\u8bd5 eg: junit Provided \u7f16\u8bd1\u3001\u6d4b\u8bd5 eg: Servlet-API Runtime \u6d4b\u8bd5\u3001\u8fd0\u884c eg: jdbc System \u7cfb\u7edf\u8303\u56f4\uff0c\u4e00\u822c\u4e0d\u7528 \u4f9d\u8d56\u51b2\u7a81 1\u3001\u7b2c\u4e00\u58f0\u660e\u8005\u4f18\u5148 2\u3001\u8def\u5f84\u6700\u8fd1\u7684\u4f18\u5148 3\u3001\u6392\u9664\u4f9d\u8d56 <dependency> <groupId> org.springframework </groupId> <artifactId> spring-jdbc </artifactId> <version> 5.2.6.RELEASE </version> <exclusions> <exclusion> <groupId></groupId> <artifactId></artifactId> </exclusion> </exclusions> </dependency> \u805a\u5408\u6253\u5305 \u7ee7\u627f","title":"Maven"},{"location":"Java/Java\u5f00\u53d1\u5de5\u5177/28-Maven/#maven","text":"","title":"Maven"},{"location":"Java/Java\u5f00\u53d1\u5de5\u5177/28-Maven/#maven_1","text":"\u7248\u672c\u63a7\u5236\u5de5\u5177 cvs,svn,git \u9879\u76ee\u6784\u5efa\u5de5\u5177 make, ant, maven gradle 1\u3001\u914d\u7f6e\u6587\u4ef6 pom.xml project object model 2\u3001Maven \u4f18\u52bf \u8de8\u5e73\u53f0 \u670d\u52a1\u4e8e\u6784\u5efa\uff1a\u6e05\u7406\uff0c\u7f16\u8bd1\uff0c\u6d4b\u8bd5\uff0c\u751f\u6210\u62a5\u544a\uff0c\u6253\u5305\uff0c\u90e8\u7f72 \u6807\u51c6\u5316 \u5c01\u88c5\u6784\u5efa\u8fc7\u7a0b \u4f9d\u8d56\u7ba1\u7406\u5de5\u5177 \u9879\u76ee\u89c4\u8303\u5316\uff1a\u7ea6\u5b9a\u4f18\u4e8e\u914d\u7f6e","title":"Maven \u7b80\u4ecb"},{"location":"Java/Java\u5f00\u53d1\u5de5\u5177/28-Maven/#_1","text":"\u4e0b\u8f7d\u5730\u5740\uff1ahttps://maven.apache.org/download.cgi Mac \u5b89\u88c5\u6b65\u9aa4\uff1a wget https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz tar -xvf apache-maven-3.6.3-bin.tar.gz vim ~/.bash_profile # Maven export MAVEN_HOME=/usr/local/apache-maven-3.6.3-bin export PATH= ${ PATH } : ${ MAVEN_HOME } /bin mvn -v Apache Maven 3.6.3","title":"\u5b89\u88c5\u548c\u914d\u7f6e"},{"location":"Java/Java\u5f00\u53d1\u5de5\u5177/28-Maven/#gav","text":"<groupId> org.example </groupId> <artifactId> spring-mvc-demo </artifactId> <version> 1.0-SNAPSHOT </version> \u793a\u4f8b <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <!-- \u5e38\u91cf --> <modelVersion> 4.0.0 </modelVersion> <!-- GAV --> <groupId> org.example </groupId> <artifactId> spring-mvc-demo </artifactId> <version> 1.0-SNAPSHOT </version> <!-- \u4f9d\u8d56 --> <dependencies> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-core </artifactId> <version> 5.2.6.RELEASE </version> <!-- \u4f5c\u7528\u57df --> <scope></scope> </dependency> </dependencies> </project> \u76ee\u5f55\u7ed3\u6784 ${ basedir } \u5b58\u653epom.xml\u548c\u6240\u6709\u7684\u5b50\u76ee\u5f55 ${ basedir } /src/main/java \u9879\u76ee\u7684java\u6e90\u4ee3\u7801 ${ basedir } /src/main/resources \u9879\u76ee\u7684\u8d44\u6e90\uff0c\u6bd4\u5982\u8bf4property\u6587\u4ef6\uff0cspringmvc.xml ${ basedir } /src/test/java \u9879\u76ee\u7684\u6d4b\u8bd5\u7c7b\uff0c\u6bd4\u5982\u8bf4Junit\u4ee3\u7801 ${ basedir } /src/test/resources \u6d4b\u8bd5\u7528\u7684\u8d44\u6e90 ${ basedir } /src/main/webapp/WEB-INF web\u5e94\u7528\u6587\u4ef6\u76ee\u5f55\uff0cweb\u9879\u76ee\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u5b58\u653eweb.xml\u3001\u672c\u5730\u56fe\u7247\u3001jsp\u89c6\u56fe\u9875\u9762","title":"GAV"},{"location":"Java/Java\u5f00\u53d1\u5de5\u5177/28-Maven/#_2","text":"\u9879\u76ee\u7ed3\u6784 . \u251c\u2500\u2500 pom . xml \u2514\u2500\u2500 src \u251c\u2500\u2500 main \u2502 \u251c\u2500\u2500 java \u2502 \u2502 \u2514\u2500\u2500 Hello . java \u2502 \u2514\u2500\u2500 resources \u2514\u2500\u2500 test pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> org.example </groupId> <artifactId> demo </artifactId> <version> 1.0-SNAPSHOT </version> </project> Hello.java public class Hello { public static void main ( String [] args ) { System . out . println ( \"Hello\" ); } }","title":"\u9879\u76ee\u793a\u4f8b"},{"location":"Java/Java\u5f00\u53d1\u5de5\u5177/28-Maven/#_3","text":"\u5e38\u7528\u64cd\u4f5c # \u521b\u5efa\u9879\u76ee mvn archetype:generate \\ \"-DgroupId=com.companyname.bank\" \\ \"-DartifactId=consumerBanking\" \\ \"-DarchetypeArtifactId=maven-archetype-quickstart\" \\ \"-DinteractiveMode=false\" \u53c2\u6570\u8bf4\u660e\uff1a -DgourpId: \u7ec4\u7ec7\u540d\uff0c\u516c\u53f8\u7f51\u5740\u7684\u53cd\u5199 + \u9879\u76ee\u540d\u79f0 -DartifactId: \u9879\u76ee\u540d-\u6a21\u5757\u540d -DarchetypeArtifactId: \u6307\u5b9a ArchetypeId\uff0c maven-archetype-quickstart\uff0c\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 Java \u5e94\u7528 -DinteractiveMode: \u662f\u5426\u4f7f\u7528\u4ea4\u4e92\u6a21\u5f0f # \u7f16\u8bd1\u6e90\u7801 mvn compile # \u7f16\u8bd1\u6d4b\u8bd5\u4ee3\u7801 mvn test-compile # \u8fd0\u884c\u6d4b\u8bd5 mvn test # \u4ea7\u751fsite mvn site # \u6253\u5305 mvn package # \u672c\u5730Repository \u4e2d\u5b89\u88c5jar mvn install # \u6e05\u9664\u4ea7\u751f\u7684\u9879\u76ee mvn clean # \u751f\u6210eclipse\u9879\u76ee mvn eclipse:eclipse # \u751f\u6210idea\u9879\u76ee mvn idea:idea # \u53ea\u6253\u5305\u4e0d\u6d4b\u8bd5 mvn -Dtest package # \u53ea\u6253\u5305jar mvn jar:jar # \u53ea\u6d4b\u8bd5\u4e0d\u7f16\u8bd1\u4e5f\u4e0d\u7f16\u8bd1\u6d4b\u8bd5 mvn test -skipping compile -skipping test-compile","title":"\u64cd\u4f5c\u547d\u4ee4"},{"location":"Java/Java\u5f00\u53d1\u5de5\u5177/28-Maven/#version","text":"X.Y.Z-\u91cc\u7a0b\u7891 X \u5927\u7248\u672c Y \u5c0f\u7248\u672c \u4fee\u6539 bug\uff0c\u589e\u52a0\u529f\u80fd Z \u66f4\u65b0 \u91cc\u7a0b\u7891 SNAPSHOT \u5feb\u7167\uff0c\u5f00\u53d1\u7248 alpha \u5185\u90e8\u6d4b\u8bd5 beta \u516c\u5f00\u6d4b\u8bd5 Release | RC \u53d1\u5e03\u7248 release condidate GA \u6b63\u5e38\u7248\u672c","title":"Version"},{"location":"Java/Java\u5f00\u53d1\u5de5\u5177/28-Maven/#_4","text":"groupId \u7ec4\u7ec7\u540d artifactId \u9879\u76ee\u540d version \u7248\u672c\u53f7 packaging \u6253\u5305\u65b9\u5f0f \u9ed8\u8ba4 jar classifier \u6587\u6863\u548c\u6e90\u4ee3\u7801","title":"\u5750\u6807"},{"location":"Java/Java\u5f00\u53d1\u5de5\u5177/28-Maven/#_5","text":"1\u3001\u672c\u5730\u4ed3\u5e93 Mac \u4e0b\u9ed8\u8ba4\u4ed3\u5e93\u4f4d\u7f6e ~/ . m2 / repository 2\u3001\u8fdc\u7a0b\u4ed3\u5e93 \uff081\uff09\u4e2d\u592e\u4ed3\u5e93 https://mvnrepository.com/ \uff082\uff09\u79c1\u670d Nexus \uff083\uff09\u516c\u5171\u5e93 \u4f7f\u7528\u963f\u91cc\u4e91\u4ed3\u5e93 <mirrors> <mirror> <id> alimaven </id> <name> aliyun maven </name> <url> http://maven.aliyun.com/nexus/content/groups/public/ </url> <mirrorOf> central </mirrorOf> </mirror> </mirrors>","title":"\u4ed3\u5e93"},{"location":"Java/Java\u5f00\u53d1\u5de5\u5177/28-Maven/#_6","text":"Compile \u7f16\u8bd1\u3001\u6d4b\u8bd5\u3001\u8fd0\u884c \u9ed8\u8ba4 Test \u6d4b\u8bd5 eg: junit Provided \u7f16\u8bd1\u3001\u6d4b\u8bd5 eg: Servlet-API Runtime \u6d4b\u8bd5\u3001\u8fd0\u884c eg: jdbc System \u7cfb\u7edf\u8303\u56f4\uff0c\u4e00\u822c\u4e0d\u7528","title":"\u4f9d\u8d56\u8303\u56f4"},{"location":"Java/Java\u5f00\u53d1\u5de5\u5177/28-Maven/#_7","text":"1\u3001\u7b2c\u4e00\u58f0\u660e\u8005\u4f18\u5148 2\u3001\u8def\u5f84\u6700\u8fd1\u7684\u4f18\u5148 3\u3001\u6392\u9664\u4f9d\u8d56 <dependency> <groupId> org.springframework </groupId> <artifactId> spring-jdbc </artifactId> <version> 5.2.6.RELEASE </version> <exclusions> <exclusion> <groupId></groupId> <artifactId></artifactId> </exclusion> </exclusions> </dependency> \u805a\u5408\u6253\u5305 \u7ee7\u627f","title":"\u4f9d\u8d56\u51b2\u7a81"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/","text":"Java \u5f00\u53d1\u6846\u67b6 17-\u6846\u67b6-Spring 18-\u4ee3\u7406 19-AOP \u9762\u5411\u5207\u9762\u7f16\u7a0b 20-mybatis 21-spring \u6574\u5408 mybatis 22-\u58f0\u660e\u5f0f\u4e8b\u52a1 23-Struts2 24-maven \u6574\u5408 ssm 25-maven-ssm \u6ce8\u89e3\u65b9\u5f0f\u5f00\u53d1 26-Spring-MVC 27-\u6574\u5408 springmvc&spring&mybatis 28-Maven","title":"Java \u5f00\u53d1\u6846\u67b6"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/#java","text":"17-\u6846\u67b6-Spring 18-\u4ee3\u7406 19-AOP \u9762\u5411\u5207\u9762\u7f16\u7a0b 20-mybatis 21-spring \u6574\u5408 mybatis 22-\u58f0\u660e\u5f0f\u4e8b\u52a1 23-Struts2 24-maven \u6574\u5408 ssm 25-maven-ssm \u6ce8\u89e3\u65b9\u5f0f\u5f00\u53d1 26-Spring-MVC 27-\u6574\u5408 springmvc&spring&mybatis 28-Maven","title":"Java \u5f00\u53d1\u6846\u67b6"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/17-\u6846\u67b6-Spring/","text":"Spring \u5b98\u7f51\uff1a https://spring.io/ \u7406\u5ff5\uff1a\u4f7f\u73b0\u6709\u6280\u672f\u66f4\u52a0\u5b9e\u7528,\u672c\u8eab\u662f\u5927\u6742\u70e9\u6574\u5408\u73b0\u6709\u7684\u6846\u67b6\u6280\u672f \u4f18\u70b9\uff1a \u8f7b\u91cf\u7ea7\u6846\u67b6 Ioc \u5bb9\u5668-\u63a7\u5236\u53cd\u8f6c inversion of Control Aop \u9762\u5411\u5207\u9762\u7f16\u7a0b \u5bf9\u4e8b\u52a1\u652f\u6301 \u5bf9\u6846\u67b6\u7684\u652f\u6301 \u4e00\u3001Ioc \u63a7\u5236\u53cd\u8f6c Ioc \u662f\u4e00\u79cd\u7f16\u7a0b\u601d\u60f3\uff0c\u7531\u4e3b\u52a8\u7f16\u7a0b\u53d8\u4e3a\u88ab\u52a8\u63a5\u6536 \u522b\u540d\uff1a\u4f9d\u8d56\u6ce8\u5165 dependency injection \u63a7\u5236\uff1a \u6307\u8c01\u6765\u63a7\u5236\u5bf9\u8c61\u7684\u521b\u5efa \u4f20\u7edf\u7684\u5e94\u7528\u7a0b\u5e8f\u5bf9\u8c61\u7684\u521b\u5efa\u662f\u7531\u7a0b\u5e8f\u672c\u8eab\u63a7\u5236\u7684 \u4f7f\u7528 spring \u4e4b\u540e\uff0c\u7531 spring \u521b\u5efa\u5bf9\u8c61 \u53cd\u8f6c\uff1a \u6b63\u8f6c\u6307\u7a0b\u5e8f\u6765\u521b\u5efa\u5bf9\u8c61 \u53cd\u8f6c\u6307\u7a0b\u5e8f\u672c\u8eab\u4e0d\u521b\u5efa\u5bf9\u8c61\uff0c\u800c\u53d8\u6210\u88ab\u52a8\u63a5\u53d7\u5bf9\u8c61 \u603b\u7ed3\uff1a \u4ee5\u524d\u5bf9\u8c61\u662f\u7531\u7a0b\u5e8f\u672c\u8eab\u521b\u5efa\uff0c \u4f7f\u7528 spring \u4e4b\u540e\uff0c\u7a0b\u5e8f\u53d8\u4e3a\u63a5\u6536 spring \u521b\u5efa\u597d\u7684\u5bf9\u8c61 \u7b80\u5355\u793a\u4f8b 1\u3001\u4f9d\u8d56 pom.xml <dependency> <groupId> org.springframework </groupId> <artifactId> spring-context-support </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-context </artifactId> <version> 5.2.6.RELEASE </version> </dependency> 2\u3001Person.java package com.pengshiyu.bean ; public class Person { private String name ; public void setName ( String name ) { this . name = name ; } public void sayHello () { System . out . println ( \"hello \" + this . name ); } } 3\u3001beans.xml \u6b64\u5904\u662f\u5b8c\u6574\u5199\u6cd5\uff0c\u4e4b\u540e\u5c06\u91c7\u7528\u7b80\u5199\u5f62\u5f0f <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <property name= \"name\" value= \"\u5f20\u4e09\" /> </bean> </beans> 4\u3001Demo.java package com.pengshiyu.spring ; import com.pengshiyu.bean.Person ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; public class Demo { public static void main ( String [] args ) { // \u89e3\u6790beans.xml \u6587\u4ef6\uff0c\u751f\u6210\u5bf9\u5e94\u7684Bean\u5bf9\u8c61 ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); Person person = ( Person ) context . getBean ( \"person\" ); person . sayHello (); } } \u4e8c\u3001Dao \u7ba1\u7406\u793a\u4f8b Ioc: \u5bf9\u8c61\u7531 spring \u6765\u521b\u5efa 1\u3001UserDao package com.spring.dao ; public interface UserDao { public void getUser (); } 2\u3001UserDaoMysqlImpl package com.spring.dao.impl ; import com.spring.dao.UserDao ; public class UserDaoMysqlImpl implements UserDao { @Override public void getUser () { System . out . println ( \"Mysql \u83b7\u53d6\u7528\u6237\u4fe1\u606f\" ); } } 3\u3001UserDaoOracleImpl package com.spring.dao.impl ; import com.spring.dao.UserDao ; public class UserDaoOracleImpl implements UserDao { @Override public void getUser () { System . out . println ( \"Oracle \u83b7\u53d6\u7528\u6237\u4fe1\u606f\" ); } } 4\u3001UserService package com.spring.service ; public interface UserService { public void getUser (); } 5\u3001UserServiceImpl package com.spring.service.impl ; import com.spring.dao.UserDao ; import com.spring.service.UserService ; public class UserServiceImpl implements UserService { private UserDao userDao = null ; public void setUserDao ( UserDao userDao ) { this . userDao = userDao ; } @Override public void getUser () { this . userDao . getUser (); } } 6\u3001beans.xml\uff08\u7b80\u5316\u7248\uff09 <beans > <bean id= \"mysqlDao\" class= \"com.spring.dao.impl.UserDaoMysqlImpl\" /> <bean id= \"oracleDao\" class= \"com.spring.dao.impl.UserDaoOracleImpl\" /> <bean id= \"service\" class= \"com.spring.service.impl.UserServiceImpl\" > <property name= \"userDao\" ref= \"mysqlDao\" ></property> </bean> </beans> 7\u3001TestDemo package com.spring.test ; import com.spring.service.UserService ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; public class TestDemo { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); UserService service = ( UserService ) context . getBean ( \"service\" ); service . getUser (); } } \u4e09\u3001\u4f7f\u7528 Ioc \u6765\u521b\u5efa\u5bf9\u8c61\u7684 3 \u79cd\u65b9\u6cd5 Person \u7c7b package com.pengshiyu.bean ; public class Person { private String name ; public Person () { } public Person ( String name ) { this . name = name ; } public void sayHello () { System . out . println ( \"hello \" + this . name ); } } \u521b\u5efa\u5bf9\u8c61 package com.spring.test ; import com.pengshiyu.bean.Person ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; public class Demo { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); Person person = ( Person ) context . getBean ( \"person\" ); person . sayHello (); } } beans.xml(\u7b80\u5316\u7248) 1\u3001\u65e0\u53c2\u6784\u9020 <beans> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" /> </beans> 2\u3001\u6709\u53c2\u6784\u9020 \uff081\uff09\u6839\u636e\u53c2\u6570\u4e0b\u6807\u8bbe\u7f6e <beans> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <!-- index \u6784\u9020\u65b9\u6cd5\u4e0b\u6807\u4ece 0 \u5f00\u59cb --> <constructor-arg index= \"0\" value= \"Tom\" /> </bean> </beans> \uff082\uff09\u6839\u636e\u53c2\u6570\u540d\u79f0\u8bbe\u7f6e <beans> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <!-- name \u53c2\u6570\u540d--> <constructor-arg name= \"name\" value= \"Tom\" /> </bean> </beans> (3)\u6839\u636e\u53c2\u6570\u7c7b\u578b\u8bbe\u7f6e <beans> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <!-- type \u53c2\u6570\u7c7b\u578b --> <constructor-arg type= \"java.lang.String\" value= \"Tom\" /> </bean> </beans> 3\u3001\u5de5\u5382\u65b9\u6cd5\u521b\u5efa (1)\u9759\u6001\u5de5\u5382 package com.pengshiyu.factory ; import com.pengshiyu.bean.Person ; public class PersonFactory { public static Person newInstance ( String name ) { return new Person ( name ); } } <beans > <bean name= \"person\" class= \"com.pengshiyu.factory.PersonFactory\" factory-method= \"newInstance\" > <constructor-arg name= \"name\" value= \"Tom\" /> </bean> </beans> \uff082\uff09\u52a8\u6001\u5de5\u5382 package com.pengshiyu.factory ; import com.pengshiyu.bean.Person ; public class PersonFactory { public Person newInstance ( String name ) { return new Person ( name ); } } <beans> <bean id= \"factory\" class= \"com.pengshiyu.factory.PersonFactory\" /> <bean name= \"person\" factory-bean= \"factory\" factory-method= \"newInstance\" > <constructor-arg name= \"name\" value= \"Tom\" /> </bean> </beans> \u6ce8\u610f\u9759\u6001\u5de5\u5382 static \u56db\u3001Spring \u914d\u7f6e\u6587\u4ef6 id \u662f bean \u7684\u552f\u4e00\u6807\u8bc6\u7b26\uff0c\u5982\u679c\u6ca1\u6709\u914d\u7f6e id\uff0cname \u9ed8\u8ba4\u4e3a\u6807\u8bc6\u7b26 \u5982\u679c\u914d\u7f6e\u4e86 id\uff0c\u53c8\u914d\u7f6e\u4e86 name\uff0c\u5219 name \u662f\u522b\u540d name \u53ef\u4ee5\u8bbe\u7f6e\u591a\u4e2a\u522b\u540d\u5206\u9694\u7b26\u53ef\u4ee5\u662f\u7a7a\u683c\u3001\u9017\u53f7\u3001\u5206\u53f7 class \u662f bean \u7684\u5168\u9650\u5b9a\u540d=\u5305\u540d+\u7c7b\u540d \u5982\u679c\u4e0d\u914d\u7f6e id \u548c name\uff0c\u90a3\u4e48\u53ef\u4ee5\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u65b9\u5f0f\u83b7\u53d6\u5bf9\u8c61 applicationContext . getBean ( class ) \u914d\u7f6e\u5982\u4e0b <beans > <bean id= \"person1\" name= \"person user\" class= \"com.pengshiyu.bean.Person\" /> </beans> \u83b7\u53d6\u65b9\u5f0f Person person = ( Person ) context . getBean ( \"person1\" ); // \u6216\u8005 Person person = ( Person ) context . getBean ( \"user\" ); // \u6216\u8005 Person person = ( Person ) context . getBean ( Person . class ); \u5bfc\u5165\u6587\u4ef6 <beans> <import resource= \"person.xml\" /> </beans> \u4e94\u3001Spring \u4f9d\u8d56\u6ce8\u5165 DI dependency injection \u4f9d\u8d56\uff1a\u6307 bean \u5bf9\u8c61\u521b\u5efa\u4f9d\u8d56\u4e8e\u5bb9\u5668\uff0cbean \u5bf9\u8c61\u7684\u4f9d\u8d56\u8d44\u6e90 \u6ce8\u5165\uff1a\u6307 bean \u5bf9\u8c61\u4f9d\u8d56\u7684\u8d44\u6e90\u7531\u5bb9\u5668\u6765\u8bbe\u7f6e\u548c\u88c5\u914d spring \u6ce8\u5165 \u6d4b\u8bd5 package com.spring.test ; import com.pengshiyu.bean.Person ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; public class Demo { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); Person person = ( Person ) context . getBean ( \"person\" ); person . sayHello (); } } \u6784\u9020\u5668\u6ce8\u5165 package com.pengshiyu.bean ; public class Person { private String name ; public Person ( String name ) { this . name = name ; } public void sayHello () { System . out . println ( \"hello \" + this . name ); } } <beans> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <constructor-arg name= \"name\" value= \"Tom\" /> </bean> </beans> setter \u6ce8\u5165 \uff081\uff09\u5e38\u91cf\u6ce8\u5165 package com.pengshiyu.bean ; public class Person { private String name ; public void setName ( String name ) { this . name = name ; } public void sayHello () { System . out . println ( \"hello \" + this . name ); } } <beans > <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <property name= \"name\" value= \"Tom\" /> </bean> </beans> \uff082\uff09bean \u6ce8\u5165 package com.pengshiyu.bean ; public class Address { private String address ; public void setAddress ( String address ) { this . address = address ; } public String getAddress () { return address ; } } package com.pengshiyu.bean ; public class Person { private String name ; private Address address ; public void setAddress ( Address address ) { this . address = address ; } public void setName ( String name ) { this . name = name ; } public void sayHello () { System . out . println ( \"hello \" + this . name + this . address . getAddress ()); } } <beans > <bean id= \"address\" class= \"com.pengshiyu.bean.Address\" > <property name= \"address\" value= \"\u5317\u4eac\" /> </bean> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <property name= \"name\" value= \"Tom\" /> <property name= \"address\" ref= \"address\" /> </bean> </beans> \uff083\uff09\u6570\u7ec4\u6ce8\u5165 package com.pengshiyu.bean ; public class Book { private String name ; public Book ( String name ){ this . name = name ; } @Override public String toString () { return \"\u300a\" + this . name + \"\u300b\" ; } } package com.pengshiyu.bean ; import java.util.Arrays ; public class Person { private Book [] books ; public void setBooks ( Book [] books ) { this . books = books ; } @Override public String toString () { return \"Person{\" + \"books=\" + Arrays . toString ( books ) + '}' ; } } <beans > <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <property name= \"books\" > <array> <value> \u6c34\u6d52\u4f20 </value> <value> \u7ea2\u697c\u68a6 </value> <value> \u4e09\u56fd\u6f14\u4e49 </value> <value> \u897f\u6e38\u8bb0 </value> </array> </property> </bean> </beans> \uff084\uff09List \u6ce8\u5165 package com.pengshiyu.bean ; import java.util.Arrays ; import java.util.List ; public class Person { private List < String >[] books ; public void setBooks ( List < String >[] books ) { this . books = books ; } @Override public String toString () { return \"Person{\" + \"books=\" + Arrays . toString ( books ) + '}' ; } } <beans> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <property name= \"books\" > <list> <value> \u6c34\u6d52\u4f20 </value> <value> \u7ea2\u697c\u68a6 </value> <value> \u4e09\u56fd\u6f14\u4e49 </value> <value> \u897f\u6e38\u8bb0 </value> </list> </property> </bean> </beans> (5)Map \u6ce8\u5165 package com.pengshiyu.bean ; import java.util.Map ; public class Person { private Map < String , String > cards ; public void setCards ( Map < String , String > cards ) { this . cards = cards ; } @Override public String toString () { return cards . toString (); } } <beans> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <property name= \"cards\" > <map> <entry key= \"\u4e2d\u56fd\u94f6\u884c\" value= \"123456\" ></entry> <entry key= \"\u5efa\u8bbe\u94f6\u884c\" value= \"123456\" ></entry> </map> </property> </bean> </beans> \uff086\uff09Set \u6ce8\u5165 package com.pengshiyu.bean ; import java.util.Set ; public class Person { private Set < String > games ; public void setGames ( Set < String > games ) { this . games = games ; } @Override public String toString () { return games . toString (); } } <beans> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <property name= \"games\" > <set> <value> \u82f1\u96c4\u8054\u76df </value> <value> \u738b\u8005\u8363\u8000 </value> </set> </property> </bean> </beans> (7)null \u6ce8\u5165 package com.pengshiyu.bean ; public class Person { public void setWife ( String wife ) { this . wife = wife ; } private String wife ; @Override public String toString () { return wife ; } } <beans> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <property name= \"wife\" ><null/></property> </bean> </beans> (8) Properties \u6ce8\u5165 package com.pengshiyu.bean ; import java.util.Properties ; public class Person { private Properties props ; public void setProps ( Properties props ) { this . props = props ; } @Override public String toString () { return this . props . toString (); } } <beans > <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <property name= \"props\" > <props> <prop key= \"name\" > Tom </prop> <prop key= \"sex\" > Man </prop> </props> </property> </bean> </beans> (9) p \u547d\u540d\u7a7a\u95f4\u6ce8\u5165 \u9700\u8981\u6709\u5bf9\u5e94\u7684 set \u65b9\u6cd5 package com.pengshiyu.bean ; public class Person { private String name ; private int age ; public void setName ( String name ) { this . name = name ; } public void setAge ( int age ) { this . age = age ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } \u5934\u6587\u4ef6\u9700\u8981\u5f15\u5165 xmlns:p=\"http://www.springframework.org/schema/p\" <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p= \"http://www.springframework.org/schema/p\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" p:name= \"Tom\" p:age= \"23\" /> </beans> \uff0810\uff09c \u547d\u540d\u7a7a\u95f4\u6ce8\u5165 \u8981\u6c42\u6709\u5bf9\u5e94\u7684\u6784\u9020\u65b9\u6cd5 package com.pengshiyu.bean ; public class Person { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } \u5934\u6587\u4ef6\u9700\u8981\u5f15\u5165 xmlns:c=\"http://www.springframework.org/schema/c\" <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:c= \"http://www.springframework.org/schema/c\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" c:name= \"Tom\" c:age= \"23\" /> </beans> \u516d\u3001bean \u7684\u4f5c\u7528\u57df spring \u6865\u6881 \u8f7b\u91cf\u7ea7 \u6613\u5b66 ioc di app \u4e8b\u52a1 \u6574\u5408\u6846\u67b6 scope: singleton \u5355\u4f8b \u6574\u4e2a\u5bb9\u5668\u53ea\u6709\u4e00\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\uff08\u9ed8\u8ba4\uff09 prototype \u539f\u578b \u6bcf\u6b21\u83b7\u53d6 Bean \u90fd\u4ea7\u751f\u4e00\u4e2a\u65b0\u5bf9\u8c61 request \u6bcf\u6b21\u8bf7\u6c42\u65f6\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61 session \u4f1a\u8bdd\u8303\u56f4\u5185\u6709\u4e00\u4e2a\u5bf9\u8c61 global session \u53ea\u5728 portlet \u4e0b\u6709\u7528\uff0c\u8868\u793a applicatio application \u5728\u5e94\u7528\u8303\u56f4\u4e2d\u6709\u4e00\u4e2a\u5bf9\u8c61 Bean \u81ea\u52a8\u88c5\u914d autowire byName byType constructor \u4e0d\u63a8\u8350\u4f7f\u7528\u81ea\u52a8\u88c5\u914d","title":"Spring"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/17-\u6846\u67b6-Spring/#spring","text":"\u5b98\u7f51\uff1a https://spring.io/ \u7406\u5ff5\uff1a\u4f7f\u73b0\u6709\u6280\u672f\u66f4\u52a0\u5b9e\u7528,\u672c\u8eab\u662f\u5927\u6742\u70e9\u6574\u5408\u73b0\u6709\u7684\u6846\u67b6\u6280\u672f \u4f18\u70b9\uff1a \u8f7b\u91cf\u7ea7\u6846\u67b6 Ioc \u5bb9\u5668-\u63a7\u5236\u53cd\u8f6c inversion of Control Aop \u9762\u5411\u5207\u9762\u7f16\u7a0b \u5bf9\u4e8b\u52a1\u652f\u6301 \u5bf9\u6846\u67b6\u7684\u652f\u6301","title":"Spring"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/17-\u6846\u67b6-Spring/#ioc","text":"Ioc \u662f\u4e00\u79cd\u7f16\u7a0b\u601d\u60f3\uff0c\u7531\u4e3b\u52a8\u7f16\u7a0b\u53d8\u4e3a\u88ab\u52a8\u63a5\u6536 \u522b\u540d\uff1a\u4f9d\u8d56\u6ce8\u5165 dependency injection \u63a7\u5236\uff1a \u6307\u8c01\u6765\u63a7\u5236\u5bf9\u8c61\u7684\u521b\u5efa \u4f20\u7edf\u7684\u5e94\u7528\u7a0b\u5e8f\u5bf9\u8c61\u7684\u521b\u5efa\u662f\u7531\u7a0b\u5e8f\u672c\u8eab\u63a7\u5236\u7684 \u4f7f\u7528 spring \u4e4b\u540e\uff0c\u7531 spring \u521b\u5efa\u5bf9\u8c61 \u53cd\u8f6c\uff1a \u6b63\u8f6c\u6307\u7a0b\u5e8f\u6765\u521b\u5efa\u5bf9\u8c61 \u53cd\u8f6c\u6307\u7a0b\u5e8f\u672c\u8eab\u4e0d\u521b\u5efa\u5bf9\u8c61\uff0c\u800c\u53d8\u6210\u88ab\u52a8\u63a5\u53d7\u5bf9\u8c61 \u603b\u7ed3\uff1a \u4ee5\u524d\u5bf9\u8c61\u662f\u7531\u7a0b\u5e8f\u672c\u8eab\u521b\u5efa\uff0c \u4f7f\u7528 spring \u4e4b\u540e\uff0c\u7a0b\u5e8f\u53d8\u4e3a\u63a5\u6536 spring \u521b\u5efa\u597d\u7684\u5bf9\u8c61","title":"\u4e00\u3001Ioc \u63a7\u5236\u53cd\u8f6c"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/17-\u6846\u67b6-Spring/#_1","text":"1\u3001\u4f9d\u8d56 pom.xml <dependency> <groupId> org.springframework </groupId> <artifactId> spring-context-support </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-context </artifactId> <version> 5.2.6.RELEASE </version> </dependency> 2\u3001Person.java package com.pengshiyu.bean ; public class Person { private String name ; public void setName ( String name ) { this . name = name ; } public void sayHello () { System . out . println ( \"hello \" + this . name ); } } 3\u3001beans.xml \u6b64\u5904\u662f\u5b8c\u6574\u5199\u6cd5\uff0c\u4e4b\u540e\u5c06\u91c7\u7528\u7b80\u5199\u5f62\u5f0f <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <property name= \"name\" value= \"\u5f20\u4e09\" /> </bean> </beans> 4\u3001Demo.java package com.pengshiyu.spring ; import com.pengshiyu.bean.Person ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; public class Demo { public static void main ( String [] args ) { // \u89e3\u6790beans.xml \u6587\u4ef6\uff0c\u751f\u6210\u5bf9\u5e94\u7684Bean\u5bf9\u8c61 ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); Person person = ( Person ) context . getBean ( \"person\" ); person . sayHello (); } }","title":"\u7b80\u5355\u793a\u4f8b"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/17-\u6846\u67b6-Spring/#dao","text":"Ioc: \u5bf9\u8c61\u7531 spring \u6765\u521b\u5efa 1\u3001UserDao package com.spring.dao ; public interface UserDao { public void getUser (); } 2\u3001UserDaoMysqlImpl package com.spring.dao.impl ; import com.spring.dao.UserDao ; public class UserDaoMysqlImpl implements UserDao { @Override public void getUser () { System . out . println ( \"Mysql \u83b7\u53d6\u7528\u6237\u4fe1\u606f\" ); } } 3\u3001UserDaoOracleImpl package com.spring.dao.impl ; import com.spring.dao.UserDao ; public class UserDaoOracleImpl implements UserDao { @Override public void getUser () { System . out . println ( \"Oracle \u83b7\u53d6\u7528\u6237\u4fe1\u606f\" ); } } 4\u3001UserService package com.spring.service ; public interface UserService { public void getUser (); } 5\u3001UserServiceImpl package com.spring.service.impl ; import com.spring.dao.UserDao ; import com.spring.service.UserService ; public class UserServiceImpl implements UserService { private UserDao userDao = null ; public void setUserDao ( UserDao userDao ) { this . userDao = userDao ; } @Override public void getUser () { this . userDao . getUser (); } } 6\u3001beans.xml\uff08\u7b80\u5316\u7248\uff09 <beans > <bean id= \"mysqlDao\" class= \"com.spring.dao.impl.UserDaoMysqlImpl\" /> <bean id= \"oracleDao\" class= \"com.spring.dao.impl.UserDaoOracleImpl\" /> <bean id= \"service\" class= \"com.spring.service.impl.UserServiceImpl\" > <property name= \"userDao\" ref= \"mysqlDao\" ></property> </bean> </beans> 7\u3001TestDemo package com.spring.test ; import com.spring.service.UserService ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; public class TestDemo { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); UserService service = ( UserService ) context . getBean ( \"service\" ); service . getUser (); } }","title":"\u4e8c\u3001Dao \u7ba1\u7406\u793a\u4f8b"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/17-\u6846\u67b6-Spring/#ioc-3","text":"Person \u7c7b package com.pengshiyu.bean ; public class Person { private String name ; public Person () { } public Person ( String name ) { this . name = name ; } public void sayHello () { System . out . println ( \"hello \" + this . name ); } } \u521b\u5efa\u5bf9\u8c61 package com.spring.test ; import com.pengshiyu.bean.Person ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; public class Demo { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); Person person = ( Person ) context . getBean ( \"person\" ); person . sayHello (); } } beans.xml(\u7b80\u5316\u7248) 1\u3001\u65e0\u53c2\u6784\u9020 <beans> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" /> </beans> 2\u3001\u6709\u53c2\u6784\u9020 \uff081\uff09\u6839\u636e\u53c2\u6570\u4e0b\u6807\u8bbe\u7f6e <beans> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <!-- index \u6784\u9020\u65b9\u6cd5\u4e0b\u6807\u4ece 0 \u5f00\u59cb --> <constructor-arg index= \"0\" value= \"Tom\" /> </bean> </beans> \uff082\uff09\u6839\u636e\u53c2\u6570\u540d\u79f0\u8bbe\u7f6e <beans> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <!-- name \u53c2\u6570\u540d--> <constructor-arg name= \"name\" value= \"Tom\" /> </bean> </beans> (3)\u6839\u636e\u53c2\u6570\u7c7b\u578b\u8bbe\u7f6e <beans> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <!-- type \u53c2\u6570\u7c7b\u578b --> <constructor-arg type= \"java.lang.String\" value= \"Tom\" /> </bean> </beans> 3\u3001\u5de5\u5382\u65b9\u6cd5\u521b\u5efa (1)\u9759\u6001\u5de5\u5382 package com.pengshiyu.factory ; import com.pengshiyu.bean.Person ; public class PersonFactory { public static Person newInstance ( String name ) { return new Person ( name ); } } <beans > <bean name= \"person\" class= \"com.pengshiyu.factory.PersonFactory\" factory-method= \"newInstance\" > <constructor-arg name= \"name\" value= \"Tom\" /> </bean> </beans> \uff082\uff09\u52a8\u6001\u5de5\u5382 package com.pengshiyu.factory ; import com.pengshiyu.bean.Person ; public class PersonFactory { public Person newInstance ( String name ) { return new Person ( name ); } } <beans> <bean id= \"factory\" class= \"com.pengshiyu.factory.PersonFactory\" /> <bean name= \"person\" factory-bean= \"factory\" factory-method= \"newInstance\" > <constructor-arg name= \"name\" value= \"Tom\" /> </bean> </beans> \u6ce8\u610f\u9759\u6001\u5de5\u5382 static","title":"\u4e09\u3001\u4f7f\u7528 Ioc \u6765\u521b\u5efa\u5bf9\u8c61\u7684 3 \u79cd\u65b9\u6cd5"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/17-\u6846\u67b6-Spring/#spring_1","text":"id \u662f bean \u7684\u552f\u4e00\u6807\u8bc6\u7b26\uff0c\u5982\u679c\u6ca1\u6709\u914d\u7f6e id\uff0cname \u9ed8\u8ba4\u4e3a\u6807\u8bc6\u7b26 \u5982\u679c\u914d\u7f6e\u4e86 id\uff0c\u53c8\u914d\u7f6e\u4e86 name\uff0c\u5219 name \u662f\u522b\u540d name \u53ef\u4ee5\u8bbe\u7f6e\u591a\u4e2a\u522b\u540d\u5206\u9694\u7b26\u53ef\u4ee5\u662f\u7a7a\u683c\u3001\u9017\u53f7\u3001\u5206\u53f7 class \u662f bean \u7684\u5168\u9650\u5b9a\u540d=\u5305\u540d+\u7c7b\u540d \u5982\u679c\u4e0d\u914d\u7f6e id \u548c name\uff0c\u90a3\u4e48\u53ef\u4ee5\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u65b9\u5f0f\u83b7\u53d6\u5bf9\u8c61 applicationContext . getBean ( class ) \u914d\u7f6e\u5982\u4e0b <beans > <bean id= \"person1\" name= \"person user\" class= \"com.pengshiyu.bean.Person\" /> </beans> \u83b7\u53d6\u65b9\u5f0f Person person = ( Person ) context . getBean ( \"person1\" ); // \u6216\u8005 Person person = ( Person ) context . getBean ( \"user\" ); // \u6216\u8005 Person person = ( Person ) context . getBean ( Person . class ); \u5bfc\u5165\u6587\u4ef6 <beans> <import resource= \"person.xml\" /> </beans>","title":"\u56db\u3001Spring \u914d\u7f6e\u6587\u4ef6"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/17-\u6846\u67b6-Spring/#spring-di","text":"dependency injection \u4f9d\u8d56\uff1a\u6307 bean \u5bf9\u8c61\u521b\u5efa\u4f9d\u8d56\u4e8e\u5bb9\u5668\uff0cbean \u5bf9\u8c61\u7684\u4f9d\u8d56\u8d44\u6e90 \u6ce8\u5165\uff1a\u6307 bean \u5bf9\u8c61\u4f9d\u8d56\u7684\u8d44\u6e90\u7531\u5bb9\u5668\u6765\u8bbe\u7f6e\u548c\u88c5\u914d spring \u6ce8\u5165 \u6d4b\u8bd5 package com.spring.test ; import com.pengshiyu.bean.Person ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; public class Demo { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); Person person = ( Person ) context . getBean ( \"person\" ); person . sayHello (); } } \u6784\u9020\u5668\u6ce8\u5165 package com.pengshiyu.bean ; public class Person { private String name ; public Person ( String name ) { this . name = name ; } public void sayHello () { System . out . println ( \"hello \" + this . name ); } } <beans> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <constructor-arg name= \"name\" value= \"Tom\" /> </bean> </beans> setter \u6ce8\u5165 \uff081\uff09\u5e38\u91cf\u6ce8\u5165 package com.pengshiyu.bean ; public class Person { private String name ; public void setName ( String name ) { this . name = name ; } public void sayHello () { System . out . println ( \"hello \" + this . name ); } } <beans > <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <property name= \"name\" value= \"Tom\" /> </bean> </beans> \uff082\uff09bean \u6ce8\u5165 package com.pengshiyu.bean ; public class Address { private String address ; public void setAddress ( String address ) { this . address = address ; } public String getAddress () { return address ; } } package com.pengshiyu.bean ; public class Person { private String name ; private Address address ; public void setAddress ( Address address ) { this . address = address ; } public void setName ( String name ) { this . name = name ; } public void sayHello () { System . out . println ( \"hello \" + this . name + this . address . getAddress ()); } } <beans > <bean id= \"address\" class= \"com.pengshiyu.bean.Address\" > <property name= \"address\" value= \"\u5317\u4eac\" /> </bean> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <property name= \"name\" value= \"Tom\" /> <property name= \"address\" ref= \"address\" /> </bean> </beans> \uff083\uff09\u6570\u7ec4\u6ce8\u5165 package com.pengshiyu.bean ; public class Book { private String name ; public Book ( String name ){ this . name = name ; } @Override public String toString () { return \"\u300a\" + this . name + \"\u300b\" ; } } package com.pengshiyu.bean ; import java.util.Arrays ; public class Person { private Book [] books ; public void setBooks ( Book [] books ) { this . books = books ; } @Override public String toString () { return \"Person{\" + \"books=\" + Arrays . toString ( books ) + '}' ; } } <beans > <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <property name= \"books\" > <array> <value> \u6c34\u6d52\u4f20 </value> <value> \u7ea2\u697c\u68a6 </value> <value> \u4e09\u56fd\u6f14\u4e49 </value> <value> \u897f\u6e38\u8bb0 </value> </array> </property> </bean> </beans> \uff084\uff09List \u6ce8\u5165 package com.pengshiyu.bean ; import java.util.Arrays ; import java.util.List ; public class Person { private List < String >[] books ; public void setBooks ( List < String >[] books ) { this . books = books ; } @Override public String toString () { return \"Person{\" + \"books=\" + Arrays . toString ( books ) + '}' ; } } <beans> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <property name= \"books\" > <list> <value> \u6c34\u6d52\u4f20 </value> <value> \u7ea2\u697c\u68a6 </value> <value> \u4e09\u56fd\u6f14\u4e49 </value> <value> \u897f\u6e38\u8bb0 </value> </list> </property> </bean> </beans> (5)Map \u6ce8\u5165 package com.pengshiyu.bean ; import java.util.Map ; public class Person { private Map < String , String > cards ; public void setCards ( Map < String , String > cards ) { this . cards = cards ; } @Override public String toString () { return cards . toString (); } } <beans> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <property name= \"cards\" > <map> <entry key= \"\u4e2d\u56fd\u94f6\u884c\" value= \"123456\" ></entry> <entry key= \"\u5efa\u8bbe\u94f6\u884c\" value= \"123456\" ></entry> </map> </property> </bean> </beans> \uff086\uff09Set \u6ce8\u5165 package com.pengshiyu.bean ; import java.util.Set ; public class Person { private Set < String > games ; public void setGames ( Set < String > games ) { this . games = games ; } @Override public String toString () { return games . toString (); } } <beans> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <property name= \"games\" > <set> <value> \u82f1\u96c4\u8054\u76df </value> <value> \u738b\u8005\u8363\u8000 </value> </set> </property> </bean> </beans> (7)null \u6ce8\u5165 package com.pengshiyu.bean ; public class Person { public void setWife ( String wife ) { this . wife = wife ; } private String wife ; @Override public String toString () { return wife ; } } <beans> <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <property name= \"wife\" ><null/></property> </bean> </beans> (8) Properties \u6ce8\u5165 package com.pengshiyu.bean ; import java.util.Properties ; public class Person { private Properties props ; public void setProps ( Properties props ) { this . props = props ; } @Override public String toString () { return this . props . toString (); } } <beans > <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" > <property name= \"props\" > <props> <prop key= \"name\" > Tom </prop> <prop key= \"sex\" > Man </prop> </props> </property> </bean> </beans> (9) p \u547d\u540d\u7a7a\u95f4\u6ce8\u5165 \u9700\u8981\u6709\u5bf9\u5e94\u7684 set \u65b9\u6cd5 package com.pengshiyu.bean ; public class Person { private String name ; private int age ; public void setName ( String name ) { this . name = name ; } public void setAge ( int age ) { this . age = age ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } \u5934\u6587\u4ef6\u9700\u8981\u5f15\u5165 xmlns:p=\"http://www.springframework.org/schema/p\" <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p= \"http://www.springframework.org/schema/p\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" p:name= \"Tom\" p:age= \"23\" /> </beans> \uff0810\uff09c \u547d\u540d\u7a7a\u95f4\u6ce8\u5165 \u8981\u6c42\u6709\u5bf9\u5e94\u7684\u6784\u9020\u65b9\u6cd5 package com.pengshiyu.bean ; public class Person { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } \u5934\u6587\u4ef6\u9700\u8981\u5f15\u5165 xmlns:c=\"http://www.springframework.org/schema/c\" <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:c= \"http://www.springframework.org/schema/c\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean name= \"person\" class= \"com.pengshiyu.bean.Person\" c:name= \"Tom\" c:age= \"23\" /> </beans>","title":"\u4e94\u3001Spring \u4f9d\u8d56\u6ce8\u5165 DI"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/17-\u6846\u67b6-Spring/#bean","text":"spring \u6865\u6881 \u8f7b\u91cf\u7ea7 \u6613\u5b66 ioc di app \u4e8b\u52a1 \u6574\u5408\u6846\u67b6 scope: singleton \u5355\u4f8b \u6574\u4e2a\u5bb9\u5668\u53ea\u6709\u4e00\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\uff08\u9ed8\u8ba4\uff09 prototype \u539f\u578b \u6bcf\u6b21\u83b7\u53d6 Bean \u90fd\u4ea7\u751f\u4e00\u4e2a\u65b0\u5bf9\u8c61 request \u6bcf\u6b21\u8bf7\u6c42\u65f6\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61 session \u4f1a\u8bdd\u8303\u56f4\u5185\u6709\u4e00\u4e2a\u5bf9\u8c61 global session \u53ea\u5728 portlet \u4e0b\u6709\u7528\uff0c\u8868\u793a applicatio application \u5728\u5e94\u7528\u8303\u56f4\u4e2d\u6709\u4e00\u4e2a\u5bf9\u8c61","title":"\u516d\u3001bean \u7684\u4f5c\u7528\u57df"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/17-\u6846\u67b6-Spring/#bean_1","text":"autowire byName byType constructor \u4e0d\u63a8\u8350\u4f7f\u7528\u81ea\u52a8\u88c5\u914d","title":"Bean \u81ea\u52a8\u88c5\u914d"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/18-\u4ee3\u7406/","text":"\u9759\u6001\u4ee3\u7406 \u89d2\u8272\u5206\u6790 \u62bd\u8c61\u89d2\u8272 \u63a5\u53e3\u6216\u8005\u62bd\u8c61\u7c7b \u771f\u5b9e\u89d2\u8272 \u88ab\u4ee3\u7406\u7684\u89d2\u8272 \u4ee3\u7406\u89d2\u8272 \u4ee3\u7406\u771f\u5b9e\u89d2\u8272\uff0c\u4e00\u822c\u4f1a\u505a\u4e00\u4e9b\u9644\u5c5e\u64cd\u4f5c \u5ba2\u6237\u89d2\u8272 \u4f7f\u7528\u4ee3\u7406\u89d2\u8272\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c AbstractObject - RealObject - Proxy Client \u4ee3\u7801\u5b9e\u73b0 package com.pengshiyu.proxy ; // \u79df\u501f\u63a5\u53e3 public interface IRent { void rent (); } package com.pengshiyu.proxy ; public class Host implements IRent { @Override public void rent () { System . out . println ( \"\u623f\u4e1c\u79df\u623f\" ); } } package com.pengshiyu.proxy ; // \u4e2d\u4ecb public class Proxy implements IRent { private Host host ; public Proxy ( Host host ){ this . host = host ; } @Override public void rent () { this . beforeRent (); this . host . rent (); this . afterRent (); } private void beforeRent (){ System . out . println ( \"\u4e2d\u4ecb\u5e26\u770b\u623f\" ); } private void afterRent (){ System . out . println ( \"\u7b7e\u8ba2\u5408\u540c\" ); } } package com.pengshiyu.proxy ; // \u5ba2\u6237 public class Client { public static void main ( String [] args ) { Host host = new Host (); Proxy proxy = new Proxy ( host ); proxy . rent (); } } \u4f7f\u7528\u9759\u6001\u4ee3\u7406 \u597d\u5904\uff1a \u4f7f\u5f97\u771f\u5b9e\u89d2\u8272\u5904\u7406\u4e1a\u52a1\u66f4\u52a0\u7eaf\u7cb9\uff0c\u4e0d\u518d\u5173\u6ce8\u516c\u5171\u7684\u95ee\u9898 \u516c\u5171\u4e1a\u52a1\u7531\u4ee3\u7406\u7c7b\u5b8c\u6210\uff0c\u5b9e\u73b0\u4e1a\u52a1\u7684\u5206\u5de5 \u516c\u5171\u4e1a\u52a1\u53d1\u751f\u6269\u5c55\u65f6\u53d8\u5f97\u66f4\u52a0\u96c6\u4e2d\u548c\u65b9\u4fbf \u7f3a\u70b9 \u7c7b\u591a\u4e86\uff0c\u4ee3\u7406\u7c7b\uff0c\u5de5\u4f5c\u91cf\u53d8\u5927\uff0c\u5f00\u53d1\u6548\u7387\u964d\u4f4e \u52a8\u6001\u4ee3\u7406 \u52a8\u6001\u4ee3\u7406\u548c\u9759\u6001\u4ee3\u7406\u7684\u89d2\u8272\u662f\u4e00\u6837\u7684 \u52a8\u6001\u4ee3\u7406\u7684\u4ee3\u7406\u7c7b\u662f\u52a8\u6001\u751f\u6210\u7684 \u5206\u7c7b\uff1a \u57fa\u4e8e\u63a5\u53e3\u7684\u52a8\u6001\u4ee3\u7406 jdk \u52a8\u6001\u4ee3\u7406 \u57fa\u4e8e\u7c7b\u7684\u52a8\u6001\u4ee3\u7406 cglib\u3001javasist \u4e00\u4e2a\u52a8\u6001\u4ee3\u7406\uff0c\u4e00\u822c\u4ee3\u7406\u67d0\u4e00\u7c7b\u4e1a\u52a1\uff0c\u53ef\u4ee5\u4ee3\u7406\u591a\u4e2a\u7c7b package com.pengshiyu.proxy ; public interface IVehicle { void run (); } package com.pengshiyu.proxy ; public class Car implements IVehicle { public void run () { System . out . println ( \"Car\u4f1a\u8dd1\" ); } } package com.pengshiyu.proxy ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Method ; public class VehicleInvocationHandler implements InvocationHandler { private Object target ; public VehicleInvocationHandler ( Object target ){ this . target = target ; } @Override public Object invoke ( Object proxy , Method method , Object [] args ) throws Throwable { System . out . println ( \"---------before-------\" ); Object result = method . invoke ( target , args ); System . out . println ( \"---------after-------\" ); return result ; } } package com.pengshiyu.proxy ; import java.lang.reflect.Proxy ; // \u5ba2\u6237 public class Client { public static void main ( String [] args ) { IVehicle car = new Car (); IVehicle carProxy = ( IVehicle ) Proxy . newProxyInstance ( car . getClass (). getClassLoader (), car . getClass (). getInterfaces (), new VehicleInvocationHandler ( car ) ); carProxy . run (); } }","title":"18 \u4ee3\u7406"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/18-\u4ee3\u7406/#_1","text":"\u89d2\u8272\u5206\u6790 \u62bd\u8c61\u89d2\u8272 \u63a5\u53e3\u6216\u8005\u62bd\u8c61\u7c7b \u771f\u5b9e\u89d2\u8272 \u88ab\u4ee3\u7406\u7684\u89d2\u8272 \u4ee3\u7406\u89d2\u8272 \u4ee3\u7406\u771f\u5b9e\u89d2\u8272\uff0c\u4e00\u822c\u4f1a\u505a\u4e00\u4e9b\u9644\u5c5e\u64cd\u4f5c \u5ba2\u6237\u89d2\u8272 \u4f7f\u7528\u4ee3\u7406\u89d2\u8272\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c AbstractObject - RealObject - Proxy Client \u4ee3\u7801\u5b9e\u73b0 package com.pengshiyu.proxy ; // \u79df\u501f\u63a5\u53e3 public interface IRent { void rent (); } package com.pengshiyu.proxy ; public class Host implements IRent { @Override public void rent () { System . out . println ( \"\u623f\u4e1c\u79df\u623f\" ); } } package com.pengshiyu.proxy ; // \u4e2d\u4ecb public class Proxy implements IRent { private Host host ; public Proxy ( Host host ){ this . host = host ; } @Override public void rent () { this . beforeRent (); this . host . rent (); this . afterRent (); } private void beforeRent (){ System . out . println ( \"\u4e2d\u4ecb\u5e26\u770b\u623f\" ); } private void afterRent (){ System . out . println ( \"\u7b7e\u8ba2\u5408\u540c\" ); } } package com.pengshiyu.proxy ; // \u5ba2\u6237 public class Client { public static void main ( String [] args ) { Host host = new Host (); Proxy proxy = new Proxy ( host ); proxy . rent (); } } \u4f7f\u7528\u9759\u6001\u4ee3\u7406 \u597d\u5904\uff1a \u4f7f\u5f97\u771f\u5b9e\u89d2\u8272\u5904\u7406\u4e1a\u52a1\u66f4\u52a0\u7eaf\u7cb9\uff0c\u4e0d\u518d\u5173\u6ce8\u516c\u5171\u7684\u95ee\u9898 \u516c\u5171\u4e1a\u52a1\u7531\u4ee3\u7406\u7c7b\u5b8c\u6210\uff0c\u5b9e\u73b0\u4e1a\u52a1\u7684\u5206\u5de5 \u516c\u5171\u4e1a\u52a1\u53d1\u751f\u6269\u5c55\u65f6\u53d8\u5f97\u66f4\u52a0\u96c6\u4e2d\u548c\u65b9\u4fbf \u7f3a\u70b9 \u7c7b\u591a\u4e86\uff0c\u4ee3\u7406\u7c7b\uff0c\u5de5\u4f5c\u91cf\u53d8\u5927\uff0c\u5f00\u53d1\u6548\u7387\u964d\u4f4e","title":"\u9759\u6001\u4ee3\u7406"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/18-\u4ee3\u7406/#_2","text":"\u52a8\u6001\u4ee3\u7406\u548c\u9759\u6001\u4ee3\u7406\u7684\u89d2\u8272\u662f\u4e00\u6837\u7684 \u52a8\u6001\u4ee3\u7406\u7684\u4ee3\u7406\u7c7b\u662f\u52a8\u6001\u751f\u6210\u7684 \u5206\u7c7b\uff1a \u57fa\u4e8e\u63a5\u53e3\u7684\u52a8\u6001\u4ee3\u7406 jdk \u52a8\u6001\u4ee3\u7406 \u57fa\u4e8e\u7c7b\u7684\u52a8\u6001\u4ee3\u7406 cglib\u3001javasist \u4e00\u4e2a\u52a8\u6001\u4ee3\u7406\uff0c\u4e00\u822c\u4ee3\u7406\u67d0\u4e00\u7c7b\u4e1a\u52a1\uff0c\u53ef\u4ee5\u4ee3\u7406\u591a\u4e2a\u7c7b package com.pengshiyu.proxy ; public interface IVehicle { void run (); } package com.pengshiyu.proxy ; public class Car implements IVehicle { public void run () { System . out . println ( \"Car\u4f1a\u8dd1\" ); } } package com.pengshiyu.proxy ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Method ; public class VehicleInvocationHandler implements InvocationHandler { private Object target ; public VehicleInvocationHandler ( Object target ){ this . target = target ; } @Override public Object invoke ( Object proxy , Method method , Object [] args ) throws Throwable { System . out . println ( \"---------before-------\" ); Object result = method . invoke ( target , args ); System . out . println ( \"---------after-------\" ); return result ; } } package com.pengshiyu.proxy ; import java.lang.reflect.Proxy ; // \u5ba2\u6237 public class Client { public static void main ( String [] args ) { IVehicle car = new Car (); IVehicle carProxy = ( IVehicle ) Proxy . newProxyInstance ( car . getClass (). getClassLoader (), car . getClass (). getInterfaces (), new VehicleInvocationHandler ( car ) ); carProxy . run (); } }","title":"\u52a8\u6001\u4ee3\u7406"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/19-AOP\u9762\u5411\u5207\u9762\u7f16\u7a0b/","text":"AOP \u9762\u5411\u5207\u9762\u7f16\u7a0b AOP aspect oriented programming OOP Object oriented programming \u63d0\u4f9b\u7533\u660e\u5f0f\u670d\u52a1 \u5141\u8bb8\u7528\u6237\u5b9e\u73b0\u81ea\u5b9a\u4e49\u5207\u9762 \u4f20\u7edf\u7f16\u7a0b\u6a21\u5f0f \u81ea\u4e0a\u800c\u4e0b\uff0c\u7eb5\u5411\u7684\u7f16\u7a0b Jsp -> Action -> Service -> Dao AOP \u7f16\u7a0b\uff1a \u5728\u4e0d\u6539\u53d8\u539f\u6709\u7684\u4ee3\u7801\uff0c\u589e\u52a0\u65b0\u7684\u529f\u80fd Jsp -> Action -> Service <- log () -> Dao \u597d\u5904\uff1a \u4f7f\u5f97\u771f\u5b9e\u89d2\u8272\u5904\u7406\u4e1a\u52a1\u66f4\u52a0\u7eaf\u7cb9\uff0c\u4e0d\u518d\u5173\u6ce8\u516c\u5171\u7684\u95ee\u9898 \u516c\u5171\u4e1a\u52a1\u7531\u4ee3\u7406\u7c7b\u5b8c\u6210\uff0c\u5b9e\u73b0\u4e1a\u52a1\u7684\u5206\u5de5 \u516c\u5171\u4e1a\u52a1\u53d1\u751f\u6269\u5c55\u65f6\u53d8\u5f97\u66f4\u52a0\u96c6\u4e2d\u548c\u65b9\u4fbf \u5173\u6ce8\u70b9\uff1a\u65e5\u5fd7\uff0c\u5b89\u5168\uff0c\u7f13\u5b58\uff0c\u4e8b\u52a1 \u5207\u9762 Aspect\uff1a\u4e00\u4e2a\u5173\u6ce8\u70b9\u7684\u6a21\u5757\u5316 \u5b9e\u73b0 AOP 1\u3001\u901a\u8fc7 Spring \u63a5\u53e3\u5b9e\u73b0 \u4f9d\u8d56 <dependency> <groupId> org.aspectj </groupId> <artifactId> aspectjweaver </artifactId> <version> 1.9.5 </version> </dependency> package com.spring.service ; public interface UserService { public void add (); public void delete (); } package com.spring.service.impl ; import com.spring.service.UserService ; public class UserServiceImpl implements UserService { @Override public void add () { System . out . println ( \"add\" ); } @Override public void delete () { System . out . println ( \"delete\" ); } } package com.spring.aop ; import org.springframework.aop.MethodBeforeAdvice ; import java.lang.reflect.Method ; // \u524d\u7f6e\u901a\u77e5 public class BeforeLog implements MethodBeforeAdvice { @Override public void before ( Method method , Object [] args , Object target ) throws Throwable { System . out . println ( target . getClass (). getName () + \": \" + method . getName ()); } } package com.spring.aop ; import org.springframework.aop.AfterReturningAdvice ; import java.lang.reflect.Method ; // \u540e\u7f6e\u901a\u77e5 public class AfterLog implements AfterReturningAdvice { @Override public void afterReturning ( Object result , Method method , Object [] objects , Object target ) throws Throwable { System . out . println ( target . getClass (). getName () + \": \" + method . getName ()); } } <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\" > <bean id= \"service\" class= \"com.spring.service.impl.UserServiceImpl\" /> <bean id= \"beforeLog\" class= \"com.spring.aop.BeforeLog\" /> <bean id= \"AfterLog\" class= \"com.spring.aop.AfterLog\" /> <aop:config> <aop:pointcut id= \"action\" expression= \"execution(* com.spring.service.impl.UserServiceImpl.* (..))\" /> <aop:advisor advice-ref= \"beforeLog\" pointcut-ref= \"action\" /> <aop:advisor advice-ref= \"AfterLog\" pointcut-ref= \"action\" /> </aop:config> </beans> package com.spring.test ; import com.spring.service.UserService ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; public class Demo { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); UserService service = ( UserService ) context . getBean ( \"service\" ); service . add (); service . delete (); } } \u6267\u884c\u7ed3\u679c com . spring . service . impl . UserServiceImpl : add add com . spring . service . impl . UserServiceImpl : add com . spring . service . impl . UserServiceImpl : delete delete com . spring . service . impl . UserServiceImpl : delete Spring AOP \u672c\u8d28 \u5c31\u662f\u8bb2\u516c\u5171\u7684\u4e1a\u52a1\uff08\u5982\u65e5\u671f\uff0c\u5b89\u5168\u7b49\uff09\u548c\u9886\u57df\u4e1a\u52a1\u7ed3\u5408\uff0c \u5f53\u6267\u884c\u9886\u57df\u4e1a\u52a1\u65f6\u5c06\u4f1a\u628a\u516c\u5171\u4e1a\u52a1\u52a0\u8fdb\u6765\uff0c \u5b9e\u73b0\u516c\u5171\u4e1a\u52a1\u7684\u91cd\u590d\u5229\u7528\uff0c \u9886\u57df\u4e1a\u52a1\u66f4\u7eaf\u7cb9\uff0c\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u9886\u57df\u4e1a\u52a1\uff0c \u672c\u8d28\u662f\u52a8\u6001\u4ee3\u7406 2\u3001\u81ea\u5b9a\u4e49\u7c7b\u5b9e\u73b0 AOP UserService\u3001UserServiceImpl\u3001Demo \u4e09\u4e2a\u7c7b\u4e0d\u53d8 \u6dfb\u52a0 Log \u7c7b\u548c\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 package com.spring.aop ; public class Log { public void before (){ System . out . println ( \"--before--\" ); } public void after (){ System . out . println ( \"--after--\" ); } } <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\" > <bean id= \"service\" class= \"com.spring.service.impl.UserServiceImpl\" /> <bean id= \"log\" class= \"com.spring.aop.Log\" /> <aop:config> <aop:aspect ref= \"log\" > <aop:pointcut id= \"action\" expression= \"execution(* com.spring.service.impl.UserServiceImpl.* (..))\" /> <aop:before method= \"before\" pointcut-ref= \"action\" /> <aop:after method= \"after\" pointcut-ref= \"action\" /> </aop:aspect> </aop:config> </beans> \u6267\u884c\u7ed3\u679c --before-- add --after-- --before-- delete --after-- 3\u3001\u6ce8\u89e3\u5b9e\u73b0 AOP \u4e1a\u52a1\u7c7b\u4e0d\u6539\u53d8 package com.spring.aop ; import org.aspectj.lang.ProceedingJoinPoint ; import org.aspectj.lang.annotation.After ; import org.aspectj.lang.annotation.Around ; import org.aspectj.lang.annotation.Aspect ; import org.aspectj.lang.annotation.Before ; @Aspect public class Log { @Before ( \"execution(* com.spring.service.impl.UserServiceImpl.* (..))\" ) public void before (){ System . out . println ( \"--before--\" ); } @After ( \"execution(* com.spring.service.impl.UserServiceImpl.* (..))\" ) public void after (){ System . out . println ( \"--after--\" ); } @Around ( \"execution(* com.spring.service.impl.UserServiceImpl.* (..))\" ) public Object Around ( ProceedingJoinPoint pjp ) throws Throwable { System . out . println ( \"--Around before--\" ); Object result = pjp . proceed (); System . out . println ( \"--Around after--\" ); return result ; } } <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\" > <bean id= \"service\" class= \"com.spring.service.impl.UserServiceImpl\" /> <bean id= \"log\" class= \"com.spring.aop.Log\" /> <aop:aspectj-autoproxy /> </beans> \u6267\u884c\u7ed3\u679c --Around before-- --before-- add --Around after-- --after-- --Around before-- --before-- delete --Around after-- --after-- \u603b\u7ed3 \u516c\u5171\u4e1a\u52a1\uff1a \u65e5\u5fd7\uff0c\u5b89\u5168\uff0c\u6743\u9650\uff0c\u7f13\u5b58\uff0c\u4e8b\u52a1 \u5206\u79bb\u601d\u60f3 \u5728\u4e0d\u6539\u53d8\u539f\u6709\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u589e\u52a0\u989d\u5916\u7684\u529f\u80fd","title":"AOP \u9762\u5411\u5207\u9762\u7f16\u7a0b"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/19-AOP\u9762\u5411\u5207\u9762\u7f16\u7a0b/#aop","text":"AOP aspect oriented programming OOP Object oriented programming \u63d0\u4f9b\u7533\u660e\u5f0f\u670d\u52a1 \u5141\u8bb8\u7528\u6237\u5b9e\u73b0\u81ea\u5b9a\u4e49\u5207\u9762 \u4f20\u7edf\u7f16\u7a0b\u6a21\u5f0f \u81ea\u4e0a\u800c\u4e0b\uff0c\u7eb5\u5411\u7684\u7f16\u7a0b Jsp -> Action -> Service -> Dao AOP \u7f16\u7a0b\uff1a \u5728\u4e0d\u6539\u53d8\u539f\u6709\u7684\u4ee3\u7801\uff0c\u589e\u52a0\u65b0\u7684\u529f\u80fd Jsp -> Action -> Service <- log () -> Dao \u597d\u5904\uff1a \u4f7f\u5f97\u771f\u5b9e\u89d2\u8272\u5904\u7406\u4e1a\u52a1\u66f4\u52a0\u7eaf\u7cb9\uff0c\u4e0d\u518d\u5173\u6ce8\u516c\u5171\u7684\u95ee\u9898 \u516c\u5171\u4e1a\u52a1\u7531\u4ee3\u7406\u7c7b\u5b8c\u6210\uff0c\u5b9e\u73b0\u4e1a\u52a1\u7684\u5206\u5de5 \u516c\u5171\u4e1a\u52a1\u53d1\u751f\u6269\u5c55\u65f6\u53d8\u5f97\u66f4\u52a0\u96c6\u4e2d\u548c\u65b9\u4fbf \u5173\u6ce8\u70b9\uff1a\u65e5\u5fd7\uff0c\u5b89\u5168\uff0c\u7f13\u5b58\uff0c\u4e8b\u52a1 \u5207\u9762 Aspect\uff1a\u4e00\u4e2a\u5173\u6ce8\u70b9\u7684\u6a21\u5757\u5316","title":"AOP \u9762\u5411\u5207\u9762\u7f16\u7a0b"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/19-AOP\u9762\u5411\u5207\u9762\u7f16\u7a0b/#aop_1","text":"1\u3001\u901a\u8fc7 Spring \u63a5\u53e3\u5b9e\u73b0 \u4f9d\u8d56 <dependency> <groupId> org.aspectj </groupId> <artifactId> aspectjweaver </artifactId> <version> 1.9.5 </version> </dependency> package com.spring.service ; public interface UserService { public void add (); public void delete (); } package com.spring.service.impl ; import com.spring.service.UserService ; public class UserServiceImpl implements UserService { @Override public void add () { System . out . println ( \"add\" ); } @Override public void delete () { System . out . println ( \"delete\" ); } } package com.spring.aop ; import org.springframework.aop.MethodBeforeAdvice ; import java.lang.reflect.Method ; // \u524d\u7f6e\u901a\u77e5 public class BeforeLog implements MethodBeforeAdvice { @Override public void before ( Method method , Object [] args , Object target ) throws Throwable { System . out . println ( target . getClass (). getName () + \": \" + method . getName ()); } } package com.spring.aop ; import org.springframework.aop.AfterReturningAdvice ; import java.lang.reflect.Method ; // \u540e\u7f6e\u901a\u77e5 public class AfterLog implements AfterReturningAdvice { @Override public void afterReturning ( Object result , Method method , Object [] objects , Object target ) throws Throwable { System . out . println ( target . getClass (). getName () + \": \" + method . getName ()); } } <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\" > <bean id= \"service\" class= \"com.spring.service.impl.UserServiceImpl\" /> <bean id= \"beforeLog\" class= \"com.spring.aop.BeforeLog\" /> <bean id= \"AfterLog\" class= \"com.spring.aop.AfterLog\" /> <aop:config> <aop:pointcut id= \"action\" expression= \"execution(* com.spring.service.impl.UserServiceImpl.* (..))\" /> <aop:advisor advice-ref= \"beforeLog\" pointcut-ref= \"action\" /> <aop:advisor advice-ref= \"AfterLog\" pointcut-ref= \"action\" /> </aop:config> </beans> package com.spring.test ; import com.spring.service.UserService ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; public class Demo { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); UserService service = ( UserService ) context . getBean ( \"service\" ); service . add (); service . delete (); } } \u6267\u884c\u7ed3\u679c com . spring . service . impl . UserServiceImpl : add add com . spring . service . impl . UserServiceImpl : add com . spring . service . impl . UserServiceImpl : delete delete com . spring . service . impl . UserServiceImpl : delete Spring AOP \u672c\u8d28 \u5c31\u662f\u8bb2\u516c\u5171\u7684\u4e1a\u52a1\uff08\u5982\u65e5\u671f\uff0c\u5b89\u5168\u7b49\uff09\u548c\u9886\u57df\u4e1a\u52a1\u7ed3\u5408\uff0c \u5f53\u6267\u884c\u9886\u57df\u4e1a\u52a1\u65f6\u5c06\u4f1a\u628a\u516c\u5171\u4e1a\u52a1\u52a0\u8fdb\u6765\uff0c \u5b9e\u73b0\u516c\u5171\u4e1a\u52a1\u7684\u91cd\u590d\u5229\u7528\uff0c \u9886\u57df\u4e1a\u52a1\u66f4\u7eaf\u7cb9\uff0c\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u9886\u57df\u4e1a\u52a1\uff0c \u672c\u8d28\u662f\u52a8\u6001\u4ee3\u7406 2\u3001\u81ea\u5b9a\u4e49\u7c7b\u5b9e\u73b0 AOP UserService\u3001UserServiceImpl\u3001Demo \u4e09\u4e2a\u7c7b\u4e0d\u53d8 \u6dfb\u52a0 Log \u7c7b\u548c\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 package com.spring.aop ; public class Log { public void before (){ System . out . println ( \"--before--\" ); } public void after (){ System . out . println ( \"--after--\" ); } } <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\" > <bean id= \"service\" class= \"com.spring.service.impl.UserServiceImpl\" /> <bean id= \"log\" class= \"com.spring.aop.Log\" /> <aop:config> <aop:aspect ref= \"log\" > <aop:pointcut id= \"action\" expression= \"execution(* com.spring.service.impl.UserServiceImpl.* (..))\" /> <aop:before method= \"before\" pointcut-ref= \"action\" /> <aop:after method= \"after\" pointcut-ref= \"action\" /> </aop:aspect> </aop:config> </beans> \u6267\u884c\u7ed3\u679c --before-- add --after-- --before-- delete --after-- 3\u3001\u6ce8\u89e3\u5b9e\u73b0 AOP \u4e1a\u52a1\u7c7b\u4e0d\u6539\u53d8 package com.spring.aop ; import org.aspectj.lang.ProceedingJoinPoint ; import org.aspectj.lang.annotation.After ; import org.aspectj.lang.annotation.Around ; import org.aspectj.lang.annotation.Aspect ; import org.aspectj.lang.annotation.Before ; @Aspect public class Log { @Before ( \"execution(* com.spring.service.impl.UserServiceImpl.* (..))\" ) public void before (){ System . out . println ( \"--before--\" ); } @After ( \"execution(* com.spring.service.impl.UserServiceImpl.* (..))\" ) public void after (){ System . out . println ( \"--after--\" ); } @Around ( \"execution(* com.spring.service.impl.UserServiceImpl.* (..))\" ) public Object Around ( ProceedingJoinPoint pjp ) throws Throwable { System . out . println ( \"--Around before--\" ); Object result = pjp . proceed (); System . out . println ( \"--Around after--\" ); return result ; } } <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd\" > <bean id= \"service\" class= \"com.spring.service.impl.UserServiceImpl\" /> <bean id= \"log\" class= \"com.spring.aop.Log\" /> <aop:aspectj-autoproxy /> </beans> \u6267\u884c\u7ed3\u679c --Around before-- --before-- add --Around after-- --after-- --Around before-- --before-- delete --Around after-- --after--","title":"\u5b9e\u73b0 AOP"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/19-AOP\u9762\u5411\u5207\u9762\u7f16\u7a0b/#_1","text":"\u516c\u5171\u4e1a\u52a1\uff1a \u65e5\u5fd7\uff0c\u5b89\u5168\uff0c\u6743\u9650\uff0c\u7f13\u5b58\uff0c\u4e8b\u52a1 \u5206\u79bb\u601d\u60f3 \u5728\u4e0d\u6539\u53d8\u539f\u6709\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u589e\u52a0\u989d\u5916\u7684\u529f\u80fd","title":"\u603b\u7ed3"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/20-mybatis/","text":"MyBatis \u7b2c\u4e00\u4e2a\u7a0b\u5e8f MyBatis \u662f\u57fa\u4e8e Java \u7684\u6570\u636e\u6301\u4e45\u5c42\u6846\u67b6 \u6301\u4e45\u5316\uff1a\u6570\u636e\u4ece\u77ac\u65f6\u72b6\u6001\u53d8\u4e3a\u6301\u4e45\u72b6\u6001 \u6301\u4e45\u5c42\uff1a\u5b8c\u6210\u6301\u4e45\u5316\u5de5\u4f5c\u7684\u4ee3\u7801\u5757 DAO \u7b80\u800c\u8a00\u4e4b\uff1a MyBatis \u5c06\u6570\u636e\u5b58\u5165\u6570\u636e\u5e93\u4e2d\uff0c\u4ece\u6570\u636e\u5e93\u4e2d\u53d6\u6570\u636e \u901a\u8fc7\u6846\u67b6\u53ef\u4ee5\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\uff0c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387 MyBatis \u662f\u4e00\u4e2a\u534a\u81ea\u52a8\u5316\u7684 ORM \u6846\u67b6 Object Relationship Mapping \u6587\u6863\uff1a https://mybatis.org/mybatis-3/zh/index.html 1\u3001\u4f9d\u8d56 <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis </artifactId> <version> 3.5.4 </version> </dependency> 2\u3001\u914d\u7f6e\u6570\u636e\u5e93 mybatis-config.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <configuration> <environments default= \"development\" > <environment id= \"development\" > <transactionManager type= \"JDBC\" /> <dataSource type= \"POOLED\" > <property name= \"driver\" value= \"com.mysql.cj.jdbc.Driver\" /> <property name= \"url\" value= \"jdbc:mysql://127.0.0.1:3306/data\" /> <property name= \"username\" value= \"root\" /> <property name= \"password\" value= \"123456\" /> </dataSource> </environment> </environments> <mappers> <mapper resource= \"StudentMapper.xml\" /> </mappers> </configuration> 3\u3001SQL \u5de5\u5382\u7c7b package com.pengshiyu.mybatis.util ; import org.apache.ibatis.io.Resources ; import org.apache.ibatis.session.SqlSession ; import org.apache.ibatis.session.SqlSessionFactory ; import org.apache.ibatis.session.SqlSessionFactoryBuilder ; import java.io.IOException ; import java.io.InputStream ; public class MyBatisUtil { public static SqlSessionFactory getSqlSessionFactory () throws IOException { String resource = \"mybatis-config.xml\" ; InputStream inputStream = Resources . getResourceAsStream ( resource ); SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder (). build ( inputStream ); return sqlSessionFactory ; } public static SqlSession getSqlSession () throws IOException { SqlSession session = getSqlSessionFactory (). openSession (); return session ; } } 4\u3001\u521b\u5efa\u5b9e\u4f53\u7c7b package com.pengshiyu.mybatis.entity ; public class Student { private int id ; private String name ; private int age ; public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getAge () { return age ; } public void setAge ( int age ) { this . age = age ; } @Override public String toString () { return \"Student{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", age=\" + age + '}' ; } } 5\u3001\u7f16\u5199 SQL \u8bed\u53e5\u6620\u5c04\u6587\u4ef6 StudentMapper.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectStudent\" resultType= \"com.pengshiyu.mybatis.entity.Student\" > select * from students where id = #{id} </select> </mapper> 6\u3001\u6d4b\u8bd5 package com.pengshiyu.mybatis.test ; import com.pengshiyu.mybatis.entity.Student ; import com.pengshiyu.mybatis.util.MyBatisUtil ; import org.apache.ibatis.session.SqlSession ; import java.io.IOException ; public class Demo { public static void main ( String [] args ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); Student student = session . selectOne ( \"com.pengshiyu.mybatis.entity.StudentMapper.selectStudent\" , 3 ); System . out . println ( student ); session . close (); // Student{id=3, name='\u674e\u767d', age=30} } } curd \u64cd\u4f5c StudentMapper.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectStudent\" resultType= \"com.pengshiyu.mybatis.entity.Student\" > select * from students where id = #{id} </select> <select id= \"selectAllStudent\" resultType= \"com.pengshiyu.mybatis.entity.Student\" > select * from students </select> <insert id= \"insertStudent\" parameterType= \"com.pengshiyu.mybatis.entity.Student\" > insert into students(name, age) values(#{name}, #{age}) </insert> <update id= \"updateStudent\" parameterType= \"com.pengshiyu.mybatis.entity.Student\" > update students set name = #{name}, age = #{age} where id = #{id} </update> <delete id= \"deleteStudent\" > delete from students where id = #{id} </delete> </mapper> package com.pengshiyu.mybatis.dao ; import com.pengshiyu.mybatis.entity.Student ; import com.pengshiyu.mybatis.util.MyBatisUtil ; import org.apache.ibatis.session.SqlSession ; import java.io.IOException ; import java.util.List ; public class StudentDao { public Student select ( int id ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); Student student = session . selectOne ( \"com.pengshiyu.mybatis.entity.StudentMapper.selectStudent\" , id ); session . close (); return student ; } public List < Student > selectAll () throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); List < Student > students = session . selectList ( \"com.pengshiyu.mybatis.entity.StudentMapper.selectAllStudent\" ); session . close (); return students ; } public int insert ( Student student ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); int result = session . insert ( \"com.pengshiyu.mybatis.entity.StudentMapper.insertStudent\" , student ); session . commit (); session . close (); return result ; } public int update ( Student student ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); int result = session . update ( \"com.pengshiyu.mybatis.entity.StudentMapper.updateStudent\" , student ); session . commit (); session . close (); return result ; } public int delete ( int id ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); int result = session . delete ( \"com.pengshiyu.mybatis.entity.StudentMapper.deleteStudent\" , id ); session . commit (); session . close (); return result ; } } package com.pengshiyu.mybatis.test ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.entity.Student ; import java.io.IOException ; import java.util.List ; public class Demo { public static void main ( String [] args ) throws IOException { StudentDao studentDao = new StudentDao (); // \u67e5\u8be2 Student student = studentDao . select ( 3 ); System . out . println ( student ); // Student{id=3, name='\u674e\u767d', age=30} // \u5199\u5165 Student student = new Student (); student . setName ( \"Jack\" ); student . setAge ( 23 ); System . out . println ( studentDao . inset ( student )); // 1 // \u66f4\u65b0 Student student = studentDao . select ( 16 ); student . setAge ( 33 ); student . setName ( \"Tom\" ); System . out . println ( studentDao . update ( student )); // 1 // \u5220\u9664\u6570\u636e System . out . println ( studentDao . delete ( 12 )); // 1 // \u67e5\u8be2\u591a\u6761\u6570\u636e List < Student > students = studentDao . selectAll (); for ( Student student : students ){ System . out . println ( student ); } } } \u914d\u7f6e\u6587\u4ef6\u89e3\u6790 \u914d\u7f6e\u6587\u4ef6 \u6bcf\u4e2a\u6570\u636e\u5e93\u5bf9\u5e94\u4e00\u4e2a SqlSessionFactory \u5b9e\u4f8b dataSource\uff1a UNPOOLED \u6bcf\u6b21\u8bf7\u6c42\u65f6\u6253\u5f00\u548c\u5173\u95ed\u8fde\u63a5 POOLED \u4f7f\u7528\u8fde\u63a5\u6c60 JNDI \u80fd\u5728\u5982 EJB \u6216\u5e94\u7528\u670d\u52a1\u5668\u8fd9\u7c7b\u5bb9\u5668\u4e2d\u4f7f\u7528 mapper \u6587\u4ef6 namespace \u547d\u540d\u89c4\u5219\uff1a \u5305\u540d+\u7c7b\u540d/\u5305\u540d+mapper \u6587\u4ef6\u540d parameterType \u53c2\u6570\u7c7b\u578b resultType \u8fd4\u56de\u7ed3\u679c\u7c7b\u578b useGeneratedKeys=\"true\" \u4f7f\u7528\u81ea\u589e\u4e3b\u952e \u914d\u7f6e\u4f18\u5316 \u6267\u884c\u6d41\u7a0b \u8bfb\u53d6\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6 sqlSessionFactory \u7c7b sqlSession \u6267\u884c\u76f8\u5173\u64cd\u4f5c 1\u3001\u53ef\u4ee5\u5c06\u6570\u636e\u5e93\u914d\u7f6e\u5355\u72ec\u653e\u5728\u4e00\u4e2a\u6587\u4ef6\u91cc\u8fb9 db.properties driver = com . mysql . cj . jdbc . Driver url = jdbc : mysql : // 127 . 0 . 0 . 1 : 3306 / data username = root password = 123456 <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <configuration> <!-- \u52a0\u8f7d\u6570\u636e\u5e93\u914d\u7f6e --> <properties resource= \"db.properties\" /> <settings> <!-- \u6253\u5370sql\u65e5\u5fd7 --> <setting name= \"logImpl\" value= \"STDOUT_LOGGING\" /> </settings> <environments default= \"development\" > <environment id= \"development\" > <transactionManager type= \"JDBC\" /> <dataSource type= \"POOLED\" > <property name= \"driver\" value= \"${driver}\" /> <property name= \"url\" value= \"${url}\" /> <property name= \"username\" value= \"${username}\" /> <property name= \"password\" value= \"${password}\" /> </dataSource> </environment> </environments> <mappers> <mapper resource= \"StudentMapper.xml\" /> </mappers> </configuration> 2\u3001\u522b\u540d\u914d\u7f6e <configuration> <typeAliases> <!-- \u6307\u5b9a\u5355\u4e2a\u7c7b\u7684\u522b\u540d --> <typeAlias type= \"com.pengshiyu.mybatis.entity.Student\" alias= \"Student\" /> <!-- \u6307\u5b9a\u6574\u4e2a\u5305\u4e0b\u7684\u7c7b\u90fd\u662f\u522b\u540d --> <package name= \"com.pengshiyu.mybatis.entity\" /> </typeAliases> </configuration> \u4f7f\u7528\u522b\u540d <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectAllStudent\" resultType= \"Student\" > select * from students </select> </mapper> \u5c5e\u6027\u540d\u548c\u5217\u540d\u4e0d\u4e00\u81f4 MyBatis \u4f1a\u6839\u636e\u5217\u540d\u53d6\u8d4b\u503c\uff0c\u4f1a\u5c06\u5217\u540d\u8f6c\u4e3a\u5c0f\u5199 1\u3001\u4e3a\u5217\u540d\u6307\u5b9a\u522b\u540d <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectStudent\" resultType= \"Student\" > select id, name, age as old from students where id = #{id} </select> </mapper> 2\u3001\u4f7f\u7528\u7ed3\u679c\u6620\u5c04\u7c7b\u578b <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectStudent\" resultMap= \"StudentMap\" > select id, name, age from students where id = #{id} </select> <resultMap id= \"StudentMap\" type= \"Student\" > <!-- id\u4e3a\u4e3b\u952e --> <id column= \"id\" property= \"id\" /> <!-- column\u662f\u6570\u636e\u5e93\u8868\u7684\u5217\u540d\uff0cproperty\u662f\u5b9e\u4f53\u7c7b\u5c5e\u6027\u540d --> <result column= \"name\" property= \"name\" /> <result column= \"age\" property= \"age\" /> </resultMap> </mapper> \u5206\u9875\u7684\u5b9e\u73b0 1\u3001sql \u4e2d\u5b9e\u73b0 \u5982\u679c\u5c06\u6570\u636e\u770b\u505a\u4e0b\u6807\u4ece 0 \u5f00\u59cb\uff0c\u90a3\u4e48\u5c31\u662f\u6570\u636e\u5207\u7247 [startIndex, pageSize\uff09 <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectAllStudent\" parameterType= \"Map\" resultType= \"Student\" > select * from students limit #{offset}, #{limit} </select> </mapper> public class StudentDao { public List < Student > selectAll ( int currentPage , int pageSize ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); Map < String , Integer > map = new HashMap < String , Integer >(); map . put ( \"offset\" , ( currentPage - 1 ) * pageSize ); map . put ( \"limit\" , pageSize ); List < Student > students = session . selectList ( \"com.pengshiyu.mybatis.entity.StudentMapper.selectAllStudent\" , map ); session . close (); return students ; } } public class Demo { public static void main ( String [] args ) throws IOException { StudentDao studentDao = new StudentDao (); // \u67e5\u8be2\u7b2c\u4e8c\u9875\u7684\u6570\u636e\uff0c\u6bcf\u98752\u6761 List < Student > students = studentDao . selectAll ( 2 , 2 ); for ( Student student : students ){ System . out . println ( student ); } } } 2\u3001\u4f7f\u7528 RowBounds <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectAllStudent\" resultType= \"Student\" > select * from students </select> </mapper> import org.apache.ibatis.session.RowBounds ; public class StudentDao { public List < Student > selectAll ( int currentPage , int pageSize ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); RowBounds rowBounds = new RowBounds (( currentPage - 1 ) * pageSize , pageSize ); List < Student > students = session . selectList ( \"com.pengshiyu.mybatis.entity.StudentMapper.selectAllStudent\" , null , rowBounds ); session . close (); return students ; } } \u901a\u8fc7\u6253\u5370\u7684\u65e5\u5fd7\u53d1\u73b0\uff1a sql \u9650\u5236\u8d77\u59cb\u4f4d\u7f6e\u548c\u8fd4\u56de\u6570\u91cf\uff0ccurrentPage=2, pageSize=2 \u65f6\u8fd4\u56de 2 \u6761\u6570\u636e RowBounds \u4e0d\u9650\u5236\u8d77\u59cb\u4f4d\u7f6e\uff0ccurrentPage=2, pageSize=2 \u65f6\u8fd4\u56de 4 \u6761\u6570\u636e \u6ce8\u89e3\u5f00\u53d1 \u9762\u5411\u63a5\u53e3\u7f16\u7a0b \u6269\u5c55\u6027\u597d\uff0c\u5206\u5c42\u5f00\u53d1\u4e2d\uff0c\u4e0a\u5c42\u4e0d\u7528\u7ba1\u5177\u4f53\u5b9e\u73b0\uff0c \u5927\u5bb6\u90fd\u9075\u5faa\u5171\u540c\u7684\u5b9e\u73b0\uff0c\u5f00\u53d1\u53d8\u5f97\u5bb9\u6613\uff0c\u89c4\u8303\u6027\u66f4\u597d DAO \u63a5\u53e3 package com.pengshiyu.mybatis.dao ; import com.pengshiyu.mybatis.entity.Student ; import org.apache.ibatis.annotations.Select ; import java.util.List ; public interface IStudentDao { @Select ( \"select * from students\" ) public List < Student > getList (); } \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 <configuration> <mappers> <!-- <mapper resource=\"StudentMapper.xml\"/>--> <mapper class= \"com.pengshiyu.mybatis.dao.IStudentDao\" /> </mappers> </configuration> \u6d4b\u8bd5\u4f7f\u7528 package com.pengshiyu.mybatis.test ; import com.pengshiyu.mybatis.dao.IStudentDao ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.entity.Student ; import com.pengshiyu.mybatis.util.MyBatisUtil ; import org.apache.ibatis.session.SqlSession ; import java.io.IOException ; import java.util.List ; public class Demo { public static void main ( String [] args ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); IStudentDao studentDao = session . getMapper ( IStudentDao . class ); List < Student > students = studentDao . getList (); for ( Student student : students ){ System . out . println ( student ); } } } \u591a\u5bf9\u4e00\u7684\u5904\u7406 \u591a\u4e2a\u5b66\u751f student \u5bf9\u4e00\u4e2a\u8001\u5e08 teacher 1\u3001\u6570\u636e\u5e93\u8868\u8bbe\u8ba1 create table teachers ( id int PRIMARY key auto_increment , name varchar ( 10 ) ); create table students ( id int PRIMARY key auto_increment , name varchar ( 10 ), teacher_id int ); insert into teachers ( name ) values ( \"\u738b\u8001\u5e08\" ); insert into teachers ( name ) values ( \"\u674e\u8001\u5e08\" ); insert into teachers ( name ) values ( \"\u8d75\u8001\u5e08\" ); insert into students ( name , teacher_id ) values ( \"\u5b8b\u6c5f\" , 1 ); insert into students ( name , teacher_id ) values ( \"\u674e\u9035\" , 1 ); insert into students ( name , teacher_id ) values ( \"\u9c81\u667a\u6df1\" , 2 ); insert into students ( name , teacher_id ) values ( \"\u6797\u51b2\" , 3 ); insert into students ( name , teacher_id ) values ( \"\u9ad8\u4fc5\" , 3 ); 2\u3001\u5b9e\u4f53\u7c7b Teacher package com.pengshiyu.mybatis.entity ; public class Teacher { private int id ; private String name ; public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"Teacher{\" + \"id=\" + id + \", name='\" + name + '\\'' + '}' ; } } Student package com.pengshiyu.mybatis.entity ; public class Student { private int id ; private String name ; private Teacher teacher ; public Teacher getTeacher () { return teacher ; } public void setTeacher ( Teacher teacher ) { this . teacher = teacher ; } public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"Student{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", teacher=\" + teacher + '}' ; } } 3\u3001\u6620\u5c04\u6587\u4ef6 \u591a\u5bf9\u4e00\u5904\u7406\u65b9\u5f0f\uff1a \uff081\uff09\u6309\u7ed3\u679c\u5d4c\u5957 \u67e5\u8be2\u4e00\u6b21 <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectAllStudent\" resultMap= \"StudentMap\" > select s.id sid, s.name sname, t.id tid, t.name tname from students as s left join teachers as t on s.teacher_id = t.id </select> <resultMap id= \"StudentMap\" type= \"Student\" > <!-- \u4e3b\u952e --> <id column= \"sid\" property= \"id\" /> <result column= \"sname\" property= \"name\" /> <!-- \u5173\u8054\u5bf9\u8c61--> <association property= \"teacher\" javaType= \"Teacher\" > <id column= \"tid\" property= \"id\" /> <result column= \"tname\" property= \"name\" /> </association> </resultMap> </mapper> \u6309\u67e5\u8be2\u5d4c\u5957 \u4f1a\u67e5\u8be2 n \u6b21\uff0cn \u662f Student \u6570\u91cf <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectAllStudent\" resultMap= \"StudentTeacher\" > select * from students </select> <resultMap id= \"StudentTeacher\" type= \"Student\" > <!-- \u5173\u8054\u5bf9\u8c61--> <association property= \"teacher\" column= \"teacher_id\" javaType= \"Teacher\" select= \"getTeacher\" > <id column= \"tid\" property= \"id\" /> <result column= \"tname\" property= \"name\" /> </association> </resultMap> <select id= \"getTeacher\" resultType= \"Teacher\" > select * from teachers where id = #{id} </select> </mapper> 4\u3001\u5f15\u5165\u6620\u5c04\u6587\u4ef6 mybatis-config.xml <configuration> <typeAliases> <package name= \"com.pengshiyu.mybatis.entity\" /> </typeAliases> <mappers> <mapper resource= \"StudentMapper.xml\" /> </mappers> </configuration> 5\u3001Dao \u7f16\u5199 package com.pengshiyu.mybatis.dao ; import com.pengshiyu.mybatis.entity.Student ; import com.pengshiyu.mybatis.util.MyBatisUtil ; import org.apache.ibatis.session.SqlSession ; import java.io.IOException ; import java.util.List ; public class StudentDao { public List < Student > selectAll () throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); List < Student > students = session . selectList ( \"com.pengshiyu.mybatis.entity.StudentMapper.selectAllStudent\" ); session . close (); return students ; } } 6\u3001\u6d4b\u8bd5\u7c7b package com.pengshiyu.mybatis.test ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.entity.Student ; import java.io.IOException ; import java.util.List ; public class Demo { public static void main ( String [] args ) throws IOException { StudentDao studentDao = new StudentDao (); List < Student > students = studentDao . selectAll (); for ( Student student : students ){ System . out . println ( student ); } } } \u67e5\u8be2\u7ed3\u679c Student { id = 1 , name = '\u5b8b\u6c5f' , teacher = Teacher { id = 1 , name = '\u738b\u8001\u5e08' }} Student { id = 2 , name = '\u674e\u9035' , teacher = Teacher { id = 1 , name = '\u738b\u8001\u5e08' }} Student { id = 3 , name = '\u9c81\u667a\u6df1' , teacher = Teacher { id = 2 , name = '\u674e\u8001\u5e08' }} Student { id = 4 , name = '\u6797\u51b2' , teacher = Teacher { id = 3 , name = '\u8d75\u8001\u5e08' }} Student { id = 5 , name = '\u9ad8\u4fc5' , teacher = Teacher { id = 3 , name = '\u8d75\u8001\u5e08' }} \u4e00\u5bf9\u591a\u5173\u7cfb Teacher package com.pengshiyu.mybatis.entity ; import java.util.List ; public class Teacher { private int id ; private String name ; private List < Student > students ; public List < Student > getStudents () { return students ; } public void setStudents ( List < Student > students ) { this . students = students ; } public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"Teacher{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", students=\" + students + '}' ; } } TeacherMapper \u67e5\u8be2\u4e00\u6b21 <mapper namespace= \"com.pengshiyu.mybatis.entity.TeacherMapper\" > <select id= \"selectOneTeacher\" resultMap= \"TeacherStudent\" > select t.id tid, t.name tname, s.id sid, s.name sname from teachers t left join students s on t.id = s.teacher_id where t.id = #{id} </select> <resultMap id= \"TeacherStudent\" type= \"Teacher\" > <id column= \"tid\" property= \"id\" /> <result column= \"tname\" property= \"name\" /> <!-- \u5173\u8054\u96c6\u5408 --> <collection property= \"students\" ofType= \"Student\" > <id column= \"sid\" property= \"id\" /> <result column= \"sname\" property= \"name\" /> </collection> </resultMap> </mapper> \u67e5\u8be2\u4e24\u6b21 <mapper namespace= \"com.pengshiyu.mybatis.entity.TeacherMapper\" > <select id= \"selectOneTeacher\" resultMap= \"TeacherStudent\" > select * from teachers where id = #{id} </select> <resultMap id= \"TeacherStudent\" type= \"Teacher\" > <!-- \u5173\u8054\u96c6\u5408 --> <!-- column \u662f\u5916\u952e --> <collection property= \"students\" column= \"id\" ofType= \"Student\" select= \"getStudentByTeacherId\" > </collection> </resultMap> <select id= \"getStudentByTeacherId\" resultType= \"Student\" > select * from students where teacher_id = #{id} </select> </mapper> mybatis-config.xml <configuration> <typeAliases> <package name= \"com.pengshiyu.mybatis.entity\" /> </typeAliases> <mappers> <mapper resource= \"TeacherMapper.xml\" /> </mappers> </configuration> TeacherDao package com.pengshiyu.mybatis.dao ; import com.pengshiyu.mybatis.entity.Student ; import com.pengshiyu.mybatis.entity.Teacher ; import com.pengshiyu.mybatis.util.MyBatisUtil ; import org.apache.ibatis.session.SqlSession ; import java.io.IOException ; import java.util.List ; public class TeacherDao { public Teacher selectOne ( int id ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); Teacher teacher = session . selectOne ( \"com.pengshiyu.mybatis.entity.TeacherMapper.selectOneTeacher\" , id ); session . close (); return teacher ; } } package com.pengshiyu.mybatis.test ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.dao.TeacherDao ; import com.pengshiyu.mybatis.entity.Student ; import com.pengshiyu.mybatis.entity.Teacher ; import java.io.IOException ; import java.util.List ; public class Demo { public static void main ( String [] args ) throws IOException { TeacherDao teacherDao = new TeacherDao (); Teacher teacher = teacherDao . selectOne ( 1 ); System . out . println ( teacher ); for ( Student student : teacher . getStudents ()){ System . out . println ( student ); } } } \u8f93\u51fa Teacher { id = 1 , name = '\u738b\u8001\u5e08' , students = [ Student { id = 1 , name = '\u5b8b\u6c5f' , teacher = null } , Student { id = 2 , name = '\u674e\u9035' , teacher = null } ] } Student { id = 1 , name = '\u5b8b\u6c5f' , teacher = null } Student { id = 2 , name = '\u674e\u9035' , teacher = null } \u52a8\u6001 SQL \u6839\u636e\u4e0d\u540c\u7684\u67e5\u8be2\u6761\u4ef6\uff0c\u751f\u6210\u4e0d\u540c\u7684 sql <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectAllStudent\" resultType= \"Student\" > select * from students <where> <if test= \"name != null\" > name = #{name} </if> </where> </select> </mapper> sql: select * from students WHERE name = ? package com.pengshiyu.mybatis.dao ; import com.pengshiyu.mybatis.entity.Student ; import com.pengshiyu.mybatis.util.MyBatisUtil ; import org.apache.ibatis.session.SqlSession ; import java.io.IOException ; import java.util.HashMap ; import java.util.List ; import java.util.Map ; public class StudentDao { public List < Student > selectAllStudent ( String name ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); Map < String , String > map = new HashMap <>(); map . put ( \"name\" , name ); List < Student > students = session . selectList ( \"com.pengshiyu.mybatis.entity.StudentMapper.selectAllStudent\" , map ); session . close (); return students ; } } package com.pengshiyu.mybatis.test ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.entity.Student ; import java.io.IOException ; import java.util.List ; public class Demo { public static void main ( String [] args ) throws IOException { StudentDao studentDao = new StudentDao (); List < Student > students = studentDao . selectAllStudent ( \"\u5b8b\u6c5f\" ); for ( Student student : students ){ System . out . println ( student ); } } }","title":"MyBatis \u7b2c\u4e00\u4e2a\u7a0b\u5e8f"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/20-mybatis/#mybatis","text":"MyBatis \u662f\u57fa\u4e8e Java \u7684\u6570\u636e\u6301\u4e45\u5c42\u6846\u67b6 \u6301\u4e45\u5316\uff1a\u6570\u636e\u4ece\u77ac\u65f6\u72b6\u6001\u53d8\u4e3a\u6301\u4e45\u72b6\u6001 \u6301\u4e45\u5c42\uff1a\u5b8c\u6210\u6301\u4e45\u5316\u5de5\u4f5c\u7684\u4ee3\u7801\u5757 DAO \u7b80\u800c\u8a00\u4e4b\uff1a MyBatis \u5c06\u6570\u636e\u5b58\u5165\u6570\u636e\u5e93\u4e2d\uff0c\u4ece\u6570\u636e\u5e93\u4e2d\u53d6\u6570\u636e \u901a\u8fc7\u6846\u67b6\u53ef\u4ee5\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\uff0c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387 MyBatis \u662f\u4e00\u4e2a\u534a\u81ea\u52a8\u5316\u7684 ORM \u6846\u67b6 Object Relationship Mapping \u6587\u6863\uff1a https://mybatis.org/mybatis-3/zh/index.html 1\u3001\u4f9d\u8d56 <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis </artifactId> <version> 3.5.4 </version> </dependency> 2\u3001\u914d\u7f6e\u6570\u636e\u5e93 mybatis-config.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <configuration> <environments default= \"development\" > <environment id= \"development\" > <transactionManager type= \"JDBC\" /> <dataSource type= \"POOLED\" > <property name= \"driver\" value= \"com.mysql.cj.jdbc.Driver\" /> <property name= \"url\" value= \"jdbc:mysql://127.0.0.1:3306/data\" /> <property name= \"username\" value= \"root\" /> <property name= \"password\" value= \"123456\" /> </dataSource> </environment> </environments> <mappers> <mapper resource= \"StudentMapper.xml\" /> </mappers> </configuration> 3\u3001SQL \u5de5\u5382\u7c7b package com.pengshiyu.mybatis.util ; import org.apache.ibatis.io.Resources ; import org.apache.ibatis.session.SqlSession ; import org.apache.ibatis.session.SqlSessionFactory ; import org.apache.ibatis.session.SqlSessionFactoryBuilder ; import java.io.IOException ; import java.io.InputStream ; public class MyBatisUtil { public static SqlSessionFactory getSqlSessionFactory () throws IOException { String resource = \"mybatis-config.xml\" ; InputStream inputStream = Resources . getResourceAsStream ( resource ); SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder (). build ( inputStream ); return sqlSessionFactory ; } public static SqlSession getSqlSession () throws IOException { SqlSession session = getSqlSessionFactory (). openSession (); return session ; } } 4\u3001\u521b\u5efa\u5b9e\u4f53\u7c7b package com.pengshiyu.mybatis.entity ; public class Student { private int id ; private String name ; private int age ; public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getAge () { return age ; } public void setAge ( int age ) { this . age = age ; } @Override public String toString () { return \"Student{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", age=\" + age + '}' ; } } 5\u3001\u7f16\u5199 SQL \u8bed\u53e5\u6620\u5c04\u6587\u4ef6 StudentMapper.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectStudent\" resultType= \"com.pengshiyu.mybatis.entity.Student\" > select * from students where id = #{id} </select> </mapper> 6\u3001\u6d4b\u8bd5 package com.pengshiyu.mybatis.test ; import com.pengshiyu.mybatis.entity.Student ; import com.pengshiyu.mybatis.util.MyBatisUtil ; import org.apache.ibatis.session.SqlSession ; import java.io.IOException ; public class Demo { public static void main ( String [] args ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); Student student = session . selectOne ( \"com.pengshiyu.mybatis.entity.StudentMapper.selectStudent\" , 3 ); System . out . println ( student ); session . close (); // Student{id=3, name='\u674e\u767d', age=30} } }","title":"MyBatis \u7b2c\u4e00\u4e2a\u7a0b\u5e8f"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/20-mybatis/#curd","text":"StudentMapper.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectStudent\" resultType= \"com.pengshiyu.mybatis.entity.Student\" > select * from students where id = #{id} </select> <select id= \"selectAllStudent\" resultType= \"com.pengshiyu.mybatis.entity.Student\" > select * from students </select> <insert id= \"insertStudent\" parameterType= \"com.pengshiyu.mybatis.entity.Student\" > insert into students(name, age) values(#{name}, #{age}) </insert> <update id= \"updateStudent\" parameterType= \"com.pengshiyu.mybatis.entity.Student\" > update students set name = #{name}, age = #{age} where id = #{id} </update> <delete id= \"deleteStudent\" > delete from students where id = #{id} </delete> </mapper> package com.pengshiyu.mybatis.dao ; import com.pengshiyu.mybatis.entity.Student ; import com.pengshiyu.mybatis.util.MyBatisUtil ; import org.apache.ibatis.session.SqlSession ; import java.io.IOException ; import java.util.List ; public class StudentDao { public Student select ( int id ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); Student student = session . selectOne ( \"com.pengshiyu.mybatis.entity.StudentMapper.selectStudent\" , id ); session . close (); return student ; } public List < Student > selectAll () throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); List < Student > students = session . selectList ( \"com.pengshiyu.mybatis.entity.StudentMapper.selectAllStudent\" ); session . close (); return students ; } public int insert ( Student student ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); int result = session . insert ( \"com.pengshiyu.mybatis.entity.StudentMapper.insertStudent\" , student ); session . commit (); session . close (); return result ; } public int update ( Student student ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); int result = session . update ( \"com.pengshiyu.mybatis.entity.StudentMapper.updateStudent\" , student ); session . commit (); session . close (); return result ; } public int delete ( int id ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); int result = session . delete ( \"com.pengshiyu.mybatis.entity.StudentMapper.deleteStudent\" , id ); session . commit (); session . close (); return result ; } } package com.pengshiyu.mybatis.test ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.entity.Student ; import java.io.IOException ; import java.util.List ; public class Demo { public static void main ( String [] args ) throws IOException { StudentDao studentDao = new StudentDao (); // \u67e5\u8be2 Student student = studentDao . select ( 3 ); System . out . println ( student ); // Student{id=3, name='\u674e\u767d', age=30} // \u5199\u5165 Student student = new Student (); student . setName ( \"Jack\" ); student . setAge ( 23 ); System . out . println ( studentDao . inset ( student )); // 1 // \u66f4\u65b0 Student student = studentDao . select ( 16 ); student . setAge ( 33 ); student . setName ( \"Tom\" ); System . out . println ( studentDao . update ( student )); // 1 // \u5220\u9664\u6570\u636e System . out . println ( studentDao . delete ( 12 )); // 1 // \u67e5\u8be2\u591a\u6761\u6570\u636e List < Student > students = studentDao . selectAll (); for ( Student student : students ){ System . out . println ( student ); } } }","title":"curd \u64cd\u4f5c"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/20-mybatis/#_1","text":"\u914d\u7f6e\u6587\u4ef6 \u6bcf\u4e2a\u6570\u636e\u5e93\u5bf9\u5e94\u4e00\u4e2a SqlSessionFactory \u5b9e\u4f8b dataSource\uff1a UNPOOLED \u6bcf\u6b21\u8bf7\u6c42\u65f6\u6253\u5f00\u548c\u5173\u95ed\u8fde\u63a5 POOLED \u4f7f\u7528\u8fde\u63a5\u6c60 JNDI \u80fd\u5728\u5982 EJB \u6216\u5e94\u7528\u670d\u52a1\u5668\u8fd9\u7c7b\u5bb9\u5668\u4e2d\u4f7f\u7528 mapper \u6587\u4ef6 namespace \u547d\u540d\u89c4\u5219\uff1a \u5305\u540d+\u7c7b\u540d/\u5305\u540d+mapper \u6587\u4ef6\u540d parameterType \u53c2\u6570\u7c7b\u578b resultType \u8fd4\u56de\u7ed3\u679c\u7c7b\u578b useGeneratedKeys=\"true\" \u4f7f\u7528\u81ea\u589e\u4e3b\u952e","title":"\u914d\u7f6e\u6587\u4ef6\u89e3\u6790"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/20-mybatis/#_2","text":"\u6267\u884c\u6d41\u7a0b \u8bfb\u53d6\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6 sqlSessionFactory \u7c7b sqlSession \u6267\u884c\u76f8\u5173\u64cd\u4f5c 1\u3001\u53ef\u4ee5\u5c06\u6570\u636e\u5e93\u914d\u7f6e\u5355\u72ec\u653e\u5728\u4e00\u4e2a\u6587\u4ef6\u91cc\u8fb9 db.properties driver = com . mysql . cj . jdbc . Driver url = jdbc : mysql : // 127 . 0 . 0 . 1 : 3306 / data username = root password = 123456 <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <configuration> <!-- \u52a0\u8f7d\u6570\u636e\u5e93\u914d\u7f6e --> <properties resource= \"db.properties\" /> <settings> <!-- \u6253\u5370sql\u65e5\u5fd7 --> <setting name= \"logImpl\" value= \"STDOUT_LOGGING\" /> </settings> <environments default= \"development\" > <environment id= \"development\" > <transactionManager type= \"JDBC\" /> <dataSource type= \"POOLED\" > <property name= \"driver\" value= \"${driver}\" /> <property name= \"url\" value= \"${url}\" /> <property name= \"username\" value= \"${username}\" /> <property name= \"password\" value= \"${password}\" /> </dataSource> </environment> </environments> <mappers> <mapper resource= \"StudentMapper.xml\" /> </mappers> </configuration> 2\u3001\u522b\u540d\u914d\u7f6e <configuration> <typeAliases> <!-- \u6307\u5b9a\u5355\u4e2a\u7c7b\u7684\u522b\u540d --> <typeAlias type= \"com.pengshiyu.mybatis.entity.Student\" alias= \"Student\" /> <!-- \u6307\u5b9a\u6574\u4e2a\u5305\u4e0b\u7684\u7c7b\u90fd\u662f\u522b\u540d --> <package name= \"com.pengshiyu.mybatis.entity\" /> </typeAliases> </configuration> \u4f7f\u7528\u522b\u540d <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectAllStudent\" resultType= \"Student\" > select * from students </select> </mapper>","title":"\u914d\u7f6e\u4f18\u5316"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/20-mybatis/#_3","text":"MyBatis \u4f1a\u6839\u636e\u5217\u540d\u53d6\u8d4b\u503c\uff0c\u4f1a\u5c06\u5217\u540d\u8f6c\u4e3a\u5c0f\u5199 1\u3001\u4e3a\u5217\u540d\u6307\u5b9a\u522b\u540d <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectStudent\" resultType= \"Student\" > select id, name, age as old from students where id = #{id} </select> </mapper> 2\u3001\u4f7f\u7528\u7ed3\u679c\u6620\u5c04\u7c7b\u578b <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectStudent\" resultMap= \"StudentMap\" > select id, name, age from students where id = #{id} </select> <resultMap id= \"StudentMap\" type= \"Student\" > <!-- id\u4e3a\u4e3b\u952e --> <id column= \"id\" property= \"id\" /> <!-- column\u662f\u6570\u636e\u5e93\u8868\u7684\u5217\u540d\uff0cproperty\u662f\u5b9e\u4f53\u7c7b\u5c5e\u6027\u540d --> <result column= \"name\" property= \"name\" /> <result column= \"age\" property= \"age\" /> </resultMap> </mapper>","title":"\u5c5e\u6027\u540d\u548c\u5217\u540d\u4e0d\u4e00\u81f4"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/20-mybatis/#_4","text":"1\u3001sql \u4e2d\u5b9e\u73b0 \u5982\u679c\u5c06\u6570\u636e\u770b\u505a\u4e0b\u6807\u4ece 0 \u5f00\u59cb\uff0c\u90a3\u4e48\u5c31\u662f\u6570\u636e\u5207\u7247 [startIndex, pageSize\uff09 <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectAllStudent\" parameterType= \"Map\" resultType= \"Student\" > select * from students limit #{offset}, #{limit} </select> </mapper> public class StudentDao { public List < Student > selectAll ( int currentPage , int pageSize ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); Map < String , Integer > map = new HashMap < String , Integer >(); map . put ( \"offset\" , ( currentPage - 1 ) * pageSize ); map . put ( \"limit\" , pageSize ); List < Student > students = session . selectList ( \"com.pengshiyu.mybatis.entity.StudentMapper.selectAllStudent\" , map ); session . close (); return students ; } } public class Demo { public static void main ( String [] args ) throws IOException { StudentDao studentDao = new StudentDao (); // \u67e5\u8be2\u7b2c\u4e8c\u9875\u7684\u6570\u636e\uff0c\u6bcf\u98752\u6761 List < Student > students = studentDao . selectAll ( 2 , 2 ); for ( Student student : students ){ System . out . println ( student ); } } } 2\u3001\u4f7f\u7528 RowBounds <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectAllStudent\" resultType= \"Student\" > select * from students </select> </mapper> import org.apache.ibatis.session.RowBounds ; public class StudentDao { public List < Student > selectAll ( int currentPage , int pageSize ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); RowBounds rowBounds = new RowBounds (( currentPage - 1 ) * pageSize , pageSize ); List < Student > students = session . selectList ( \"com.pengshiyu.mybatis.entity.StudentMapper.selectAllStudent\" , null , rowBounds ); session . close (); return students ; } } \u901a\u8fc7\u6253\u5370\u7684\u65e5\u5fd7\u53d1\u73b0\uff1a sql \u9650\u5236\u8d77\u59cb\u4f4d\u7f6e\u548c\u8fd4\u56de\u6570\u91cf\uff0ccurrentPage=2, pageSize=2 \u65f6\u8fd4\u56de 2 \u6761\u6570\u636e RowBounds \u4e0d\u9650\u5236\u8d77\u59cb\u4f4d\u7f6e\uff0ccurrentPage=2, pageSize=2 \u65f6\u8fd4\u56de 4 \u6761\u6570\u636e","title":"\u5206\u9875\u7684\u5b9e\u73b0"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/20-mybatis/#_5","text":"\u9762\u5411\u63a5\u53e3\u7f16\u7a0b \u6269\u5c55\u6027\u597d\uff0c\u5206\u5c42\u5f00\u53d1\u4e2d\uff0c\u4e0a\u5c42\u4e0d\u7528\u7ba1\u5177\u4f53\u5b9e\u73b0\uff0c \u5927\u5bb6\u90fd\u9075\u5faa\u5171\u540c\u7684\u5b9e\u73b0\uff0c\u5f00\u53d1\u53d8\u5f97\u5bb9\u6613\uff0c\u89c4\u8303\u6027\u66f4\u597d DAO \u63a5\u53e3 package com.pengshiyu.mybatis.dao ; import com.pengshiyu.mybatis.entity.Student ; import org.apache.ibatis.annotations.Select ; import java.util.List ; public interface IStudentDao { @Select ( \"select * from students\" ) public List < Student > getList (); } \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 <configuration> <mappers> <!-- <mapper resource=\"StudentMapper.xml\"/>--> <mapper class= \"com.pengshiyu.mybatis.dao.IStudentDao\" /> </mappers> </configuration> \u6d4b\u8bd5\u4f7f\u7528 package com.pengshiyu.mybatis.test ; import com.pengshiyu.mybatis.dao.IStudentDao ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.entity.Student ; import com.pengshiyu.mybatis.util.MyBatisUtil ; import org.apache.ibatis.session.SqlSession ; import java.io.IOException ; import java.util.List ; public class Demo { public static void main ( String [] args ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); IStudentDao studentDao = session . getMapper ( IStudentDao . class ); List < Student > students = studentDao . getList (); for ( Student student : students ){ System . out . println ( student ); } } }","title":"\u6ce8\u89e3\u5f00\u53d1"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/20-mybatis/#_6","text":"\u591a\u4e2a\u5b66\u751f student \u5bf9\u4e00\u4e2a\u8001\u5e08 teacher 1\u3001\u6570\u636e\u5e93\u8868\u8bbe\u8ba1 create table teachers ( id int PRIMARY key auto_increment , name varchar ( 10 ) ); create table students ( id int PRIMARY key auto_increment , name varchar ( 10 ), teacher_id int ); insert into teachers ( name ) values ( \"\u738b\u8001\u5e08\" ); insert into teachers ( name ) values ( \"\u674e\u8001\u5e08\" ); insert into teachers ( name ) values ( \"\u8d75\u8001\u5e08\" ); insert into students ( name , teacher_id ) values ( \"\u5b8b\u6c5f\" , 1 ); insert into students ( name , teacher_id ) values ( \"\u674e\u9035\" , 1 ); insert into students ( name , teacher_id ) values ( \"\u9c81\u667a\u6df1\" , 2 ); insert into students ( name , teacher_id ) values ( \"\u6797\u51b2\" , 3 ); insert into students ( name , teacher_id ) values ( \"\u9ad8\u4fc5\" , 3 ); 2\u3001\u5b9e\u4f53\u7c7b Teacher package com.pengshiyu.mybatis.entity ; public class Teacher { private int id ; private String name ; public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"Teacher{\" + \"id=\" + id + \", name='\" + name + '\\'' + '}' ; } } Student package com.pengshiyu.mybatis.entity ; public class Student { private int id ; private String name ; private Teacher teacher ; public Teacher getTeacher () { return teacher ; } public void setTeacher ( Teacher teacher ) { this . teacher = teacher ; } public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"Student{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", teacher=\" + teacher + '}' ; } } 3\u3001\u6620\u5c04\u6587\u4ef6 \u591a\u5bf9\u4e00\u5904\u7406\u65b9\u5f0f\uff1a \uff081\uff09\u6309\u7ed3\u679c\u5d4c\u5957 \u67e5\u8be2\u4e00\u6b21 <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectAllStudent\" resultMap= \"StudentMap\" > select s.id sid, s.name sname, t.id tid, t.name tname from students as s left join teachers as t on s.teacher_id = t.id </select> <resultMap id= \"StudentMap\" type= \"Student\" > <!-- \u4e3b\u952e --> <id column= \"sid\" property= \"id\" /> <result column= \"sname\" property= \"name\" /> <!-- \u5173\u8054\u5bf9\u8c61--> <association property= \"teacher\" javaType= \"Teacher\" > <id column= \"tid\" property= \"id\" /> <result column= \"tname\" property= \"name\" /> </association> </resultMap> </mapper> \u6309\u67e5\u8be2\u5d4c\u5957 \u4f1a\u67e5\u8be2 n \u6b21\uff0cn \u662f Student \u6570\u91cf <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectAllStudent\" resultMap= \"StudentTeacher\" > select * from students </select> <resultMap id= \"StudentTeacher\" type= \"Student\" > <!-- \u5173\u8054\u5bf9\u8c61--> <association property= \"teacher\" column= \"teacher_id\" javaType= \"Teacher\" select= \"getTeacher\" > <id column= \"tid\" property= \"id\" /> <result column= \"tname\" property= \"name\" /> </association> </resultMap> <select id= \"getTeacher\" resultType= \"Teacher\" > select * from teachers where id = #{id} </select> </mapper> 4\u3001\u5f15\u5165\u6620\u5c04\u6587\u4ef6 mybatis-config.xml <configuration> <typeAliases> <package name= \"com.pengshiyu.mybatis.entity\" /> </typeAliases> <mappers> <mapper resource= \"StudentMapper.xml\" /> </mappers> </configuration> 5\u3001Dao \u7f16\u5199 package com.pengshiyu.mybatis.dao ; import com.pengshiyu.mybatis.entity.Student ; import com.pengshiyu.mybatis.util.MyBatisUtil ; import org.apache.ibatis.session.SqlSession ; import java.io.IOException ; import java.util.List ; public class StudentDao { public List < Student > selectAll () throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); List < Student > students = session . selectList ( \"com.pengshiyu.mybatis.entity.StudentMapper.selectAllStudent\" ); session . close (); return students ; } } 6\u3001\u6d4b\u8bd5\u7c7b package com.pengshiyu.mybatis.test ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.entity.Student ; import java.io.IOException ; import java.util.List ; public class Demo { public static void main ( String [] args ) throws IOException { StudentDao studentDao = new StudentDao (); List < Student > students = studentDao . selectAll (); for ( Student student : students ){ System . out . println ( student ); } } } \u67e5\u8be2\u7ed3\u679c Student { id = 1 , name = '\u5b8b\u6c5f' , teacher = Teacher { id = 1 , name = '\u738b\u8001\u5e08' }} Student { id = 2 , name = '\u674e\u9035' , teacher = Teacher { id = 1 , name = '\u738b\u8001\u5e08' }} Student { id = 3 , name = '\u9c81\u667a\u6df1' , teacher = Teacher { id = 2 , name = '\u674e\u8001\u5e08' }} Student { id = 4 , name = '\u6797\u51b2' , teacher = Teacher { id = 3 , name = '\u8d75\u8001\u5e08' }} Student { id = 5 , name = '\u9ad8\u4fc5' , teacher = Teacher { id = 3 , name = '\u8d75\u8001\u5e08' }}","title":"\u591a\u5bf9\u4e00\u7684\u5904\u7406"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/20-mybatis/#_7","text":"Teacher package com.pengshiyu.mybatis.entity ; import java.util.List ; public class Teacher { private int id ; private String name ; private List < Student > students ; public List < Student > getStudents () { return students ; } public void setStudents ( List < Student > students ) { this . students = students ; } public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"Teacher{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", students=\" + students + '}' ; } } TeacherMapper \u67e5\u8be2\u4e00\u6b21 <mapper namespace= \"com.pengshiyu.mybatis.entity.TeacherMapper\" > <select id= \"selectOneTeacher\" resultMap= \"TeacherStudent\" > select t.id tid, t.name tname, s.id sid, s.name sname from teachers t left join students s on t.id = s.teacher_id where t.id = #{id} </select> <resultMap id= \"TeacherStudent\" type= \"Teacher\" > <id column= \"tid\" property= \"id\" /> <result column= \"tname\" property= \"name\" /> <!-- \u5173\u8054\u96c6\u5408 --> <collection property= \"students\" ofType= \"Student\" > <id column= \"sid\" property= \"id\" /> <result column= \"sname\" property= \"name\" /> </collection> </resultMap> </mapper> \u67e5\u8be2\u4e24\u6b21 <mapper namespace= \"com.pengshiyu.mybatis.entity.TeacherMapper\" > <select id= \"selectOneTeacher\" resultMap= \"TeacherStudent\" > select * from teachers where id = #{id} </select> <resultMap id= \"TeacherStudent\" type= \"Teacher\" > <!-- \u5173\u8054\u96c6\u5408 --> <!-- column \u662f\u5916\u952e --> <collection property= \"students\" column= \"id\" ofType= \"Student\" select= \"getStudentByTeacherId\" > </collection> </resultMap> <select id= \"getStudentByTeacherId\" resultType= \"Student\" > select * from students where teacher_id = #{id} </select> </mapper> mybatis-config.xml <configuration> <typeAliases> <package name= \"com.pengshiyu.mybatis.entity\" /> </typeAliases> <mappers> <mapper resource= \"TeacherMapper.xml\" /> </mappers> </configuration> TeacherDao package com.pengshiyu.mybatis.dao ; import com.pengshiyu.mybatis.entity.Student ; import com.pengshiyu.mybatis.entity.Teacher ; import com.pengshiyu.mybatis.util.MyBatisUtil ; import org.apache.ibatis.session.SqlSession ; import java.io.IOException ; import java.util.List ; public class TeacherDao { public Teacher selectOne ( int id ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); Teacher teacher = session . selectOne ( \"com.pengshiyu.mybatis.entity.TeacherMapper.selectOneTeacher\" , id ); session . close (); return teacher ; } } package com.pengshiyu.mybatis.test ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.dao.TeacherDao ; import com.pengshiyu.mybatis.entity.Student ; import com.pengshiyu.mybatis.entity.Teacher ; import java.io.IOException ; import java.util.List ; public class Demo { public static void main ( String [] args ) throws IOException { TeacherDao teacherDao = new TeacherDao (); Teacher teacher = teacherDao . selectOne ( 1 ); System . out . println ( teacher ); for ( Student student : teacher . getStudents ()){ System . out . println ( student ); } } } \u8f93\u51fa Teacher { id = 1 , name = '\u738b\u8001\u5e08' , students = [ Student { id = 1 , name = '\u5b8b\u6c5f' , teacher = null } , Student { id = 2 , name = '\u674e\u9035' , teacher = null } ] } Student { id = 1 , name = '\u5b8b\u6c5f' , teacher = null } Student { id = 2 , name = '\u674e\u9035' , teacher = null }","title":"\u4e00\u5bf9\u591a\u5173\u7cfb"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/20-mybatis/#sql","text":"\u6839\u636e\u4e0d\u540c\u7684\u67e5\u8be2\u6761\u4ef6\uff0c\u751f\u6210\u4e0d\u540c\u7684 sql <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectAllStudent\" resultType= \"Student\" > select * from students <where> <if test= \"name != null\" > name = #{name} </if> </where> </select> </mapper> sql: select * from students WHERE name = ? package com.pengshiyu.mybatis.dao ; import com.pengshiyu.mybatis.entity.Student ; import com.pengshiyu.mybatis.util.MyBatisUtil ; import org.apache.ibatis.session.SqlSession ; import java.io.IOException ; import java.util.HashMap ; import java.util.List ; import java.util.Map ; public class StudentDao { public List < Student > selectAllStudent ( String name ) throws IOException { SqlSession session = MyBatisUtil . getSqlSession (); Map < String , String > map = new HashMap <>(); map . put ( \"name\" , name ); List < Student > students = session . selectList ( \"com.pengshiyu.mybatis.entity.StudentMapper.selectAllStudent\" , map ); session . close (); return students ; } } package com.pengshiyu.mybatis.test ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.entity.Student ; import java.io.IOException ; import java.util.List ; public class Demo { public static void main ( String [] args ) throws IOException { StudentDao studentDao = new StudentDao (); List < Student > students = studentDao . selectAllStudent ( \"\u5b8b\u6c5f\" ); for ( Student student : students ){ System . out . println ( student ); } } }","title":"\u52a8\u6001 SQL"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/21-spring\u6574\u5408mybatis/","text":"spring \u6574\u5408 mybatis \u6574\u5408\u793a\u4f8b 1\u3001\u4f9d\u8d56 pom.xml <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis </artifactId> <version> 3.5.4 </version> </dependency> <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring --> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis-spring </artifactId> <version> 2.0.4 </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-jdbc </artifactId> <version> 5.2.6.RELEASE </version> </dependency> 2\u3001\u914d\u7f6e \uff081\uff09beans.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <!-- \u914d\u7f6e\u6570\u636e\u6e90--> <bean id= \"dataSource\" class= \"org.springframework.jdbc.datasource.DriverManagerDataSource\" > <property name= \"driverClassName\" value= \"com.mysql.cj.jdbc.Driver\" /> <property name= \"url\" value= \"jdbc:mysql://127.0.0.1:3306/data\" /> <property name= \"username\" value= \"root\" /> <property name= \"password\" value= \"123456\" /> </bean> <!-- \u914d\u7f6e sqlSessionFactory--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"dataSource\" /> <property name= \"configLocation\" value= \"mybatis-config.xml\" /> </bean> <bean id= \"sqlSessionTemplate\" class= \"org.mybatis.spring.SqlSessionTemplate\" > <constructor-arg index= \"0\" ref= \"sqlSessionFactory\" /> </bean> <bean id= \"StudentDao\" class= \"com.pengshiyu.mybatis.dao.impl.StudentDaoImpl\" > <property name= \"sqlSession\" ref= \"sqlSessionTemplate\" /> </bean> </beans> \uff082\uff09mybatis-config.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <configuration> <settings> <!-- \u6253\u5370sql\u65e5\u5fd7 --> <setting name= \"logImpl\" value= \"STDOUT_LOGGING\" /> </settings> <typeAliases> <package name= \"com.pengshiyu.mybatis.entity\" /> </typeAliases> <mappers> <mapper resource= \"StudentMapper.xml\" /> </mappers> </configuration> \uff083\uff09StudentMapper.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectAllStudent\" resultType= \"Student\" > select * from students </select> </mapper> 3\u3001\u5b9e\u4f53\u5bf9\u8c61\u7c7b package com.pengshiyu.mybatis.entity ; public class Student { private int id ; private String name ; private Teacher teacher ; public Teacher getTeacher () { return teacher ; } public void setTeacher ( Teacher teacher ) { this . teacher = teacher ; } public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"Student{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", teacher=\" + teacher + '}' ; } } 4\u3001dao \uff081\uff09\u5b9a\u4e49\u63a5\u53e3 package com.pengshiyu.mybatis.dao ; import com.pengshiyu.mybatis.entity.Student ; import java.util.List ; public interface StudentDao { public List < Student > selectAllStudent (); } \uff082\uff09\u5b9e\u73b0\u63a5\u53e3 package com.pengshiyu.mybatis.dao.impl ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.entity.Student ; import org.mybatis.spring.SqlSessionTemplate ; import java.util.List ; public class StudentDaoImpl implements StudentDao { private SqlSessionTemplate sqlSession ; @Override public List < Student > selectAllStudent () { return sqlSession . selectList ( \"com.pengshiyu.mybatis.entity.StudentMapper.selectAllStudent\" ); } public void setSqlSession ( SqlSessionTemplate sqlSession ) { this . sqlSession = sqlSession ; } } 5\u3001\u6d4b\u8bd5 package com.pengshiyu.mybatis.test ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.entity.Student ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import java.io.IOException ; import java.util.List ; public class Demo { public static void main ( String [] args ) throws IOException { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); StudentDao studentDao = ( StudentDao ) context . getBean ( \"StudentDao\" ); List < Student > students = studentDao . selectAllStudent (); for ( Student student : students ){ System . out . println ( student ); } } } \u5b9e\u73b0\u7c7b\u7ee7\u627f SqlSessionDaoSupport \u5b9e\u73b0\u7c7b package com.pengshiyu.mybatis.dao.impl ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.entity.Student ; import org.mybatis.spring.support.SqlSessionDaoSupport ; public class StudentDaoImpl extends SqlSessionDaoSupport implements StudentDao { @Override public Student getById ( int id ) { return getSqlSession (). selectOne ( \"com.pengshiyu.mybatis.entity.StudentMapper.getById\" , id ); } } \u914d\u7f6e\u4fee\u6539 <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <!-- \u914d\u7f6e\u6570\u636e\u6e90--> <bean id= \"dataSource\" class= \"org.springframework.jdbc.datasource.DriverManagerDataSource\" > <property name= \"driverClassName\" value= \"com.mysql.cj.jdbc.Driver\" /> <property name= \"url\" value= \"jdbc:mysql://127.0.0.1:3306/data\" /> <property name= \"username\" value= \"root\" /> <property name= \"password\" value= \"123456\" /> </bean> <!-- \u914d\u7f6e sqlSessionFactory--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"dataSource\" /> <property name= \"configLocation\" value= \"mybatis-config.xml\" /> </bean> <!-- \u4e0d\u9700\u8981\u5355\u72ec\u914d\u7f6e sqlSessionTemplate--> <!-- <bean id=\"sqlSessionTemplate\" class=\"org.mybatis.spring.SqlSessionTemplate\">--> <!-- <constructor-arg index=\"0\" ref=\"sqlSessionFactory\"/>--> <!-- </bean>--> <bean id= \"StudentDao\" class= \"com.pengshiyu.mybatis.dao.impl.StudentDaoImpl\" > <!-- \u5c06 sqlSession \u6ce8\u5165\uff0c\u6539\u4e3a sqlSessionFactory \u6ce8\u5165--> <!-- <property name=\"sqlSession\" ref=\"sqlSessionTemplate\"/>--> <property name= \"sqlSessionFactory\" ref= \"sqlSessionFactory\" /> </bean> </beans> \u6ce8\u89e3\u65b9\u5f0f 1\u3001DAOMapper package com.pengshiyu.mybatis.dao ; import com.pengshiyu.mybatis.entity.Student ; import org.apache.ibatis.annotations.Select ; public interface StudentMapper { @Select ( \"select * from students where id = #{id}\" ) public Student getById ( int id ); } 2\u3001Service \uff081\uff09\u63a5\u53e3 package com.pengshiyu.mybatis.service ; import com.pengshiyu.mybatis.entity.Student ; public interface StudentService { public Student getById ( int id ); } (2)\u5b9e\u73b0 package com.pengshiyu.mybatis.service.impl ; import com.pengshiyu.mybatis.dao.StudentMapper ; import com.pengshiyu.mybatis.entity.Student ; import com.pengshiyu.mybatis.service.StudentService ; public class StudentServiceImpl implements StudentService { private StudentMapper studentMapper ; public void setStudentMapper ( StudentMapper studentMapper ) { this . studentMapper = studentMapper ; } public Student getById ( int id ) { return studentMapper . getById ( id ); } } 3\u3001\u914d\u7f6e beans.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <!-- \u914d\u7f6e\u6570\u636e\u6e90--> <bean id= \"dataSource\" class= \"org.springframework.jdbc.datasource.DriverManagerDataSource\" > <property name= \"driverClassName\" value= \"com.mysql.cj.jdbc.Driver\" /> <property name= \"url\" value= \"jdbc:mysql://127.0.0.1:3306/data\" /> <property name= \"username\" value= \"root\" /> <property name= \"password\" value= \"123456\" /> </bean> <!-- \u914d\u7f6e sqlSessionFactory--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"dataSource\" /> <property name= \"configLocation\" value= \"mybatis-config.xml\" /> </bean> <bean id= \"studentMapper\" class= \"org.mybatis.spring.mapper.MapperFactoryBean\" > <property name= \"mapperInterface\" value= \"com.pengshiyu.mybatis.dao.StudentMapper\" /> <property name= \"sqlSessionFactory\" ref= \"sqlSessionFactory\" /> </bean> <bean id= \"studentService\" class= \"com.pengshiyu.mybatis.service.impl.StudentServiceImpl\" > <property name= \"studentMapper\" ref= \"studentMapper\" /> </bean> </beans> 4\u3001\u6d4b\u8bd5 package com.pengshiyu.mybatis.test ; import com.pengshiyu.mybatis.dao.StudentMapper ; import com.pengshiyu.mybatis.entity.Student ; import com.pengshiyu.mybatis.service.StudentService ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import java.io.IOException ; public class Demo { public static void main ( String [] args ) throws IOException { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); StudentService studentService = ( StudentService ) context . getBean ( \"studentService\" ); Student student = studentService . getById ( 1 ); System . out . println ( student ); } } \u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55 beans.xml <!-- \u914d\u7f6e sqlSessionFactory--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"dataSource\" /> <!-- <property name=\"configLocation\" value=\"mybatis-config.xml\"/>--> <!-- \u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55 --> <property name= \"mapperLocations\" value= \"classpath:*Mapper.xml\" /> </bean>","title":"spring \u6574\u5408 mybatis"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/21-spring\u6574\u5408mybatis/#spring-mybatis","text":"","title":"spring \u6574\u5408 mybatis"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/21-spring\u6574\u5408mybatis/#_1","text":"1\u3001\u4f9d\u8d56 pom.xml <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis </artifactId> <version> 3.5.4 </version> </dependency> <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring --> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis-spring </artifactId> <version> 2.0.4 </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-jdbc </artifactId> <version> 5.2.6.RELEASE </version> </dependency> 2\u3001\u914d\u7f6e \uff081\uff09beans.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <!-- \u914d\u7f6e\u6570\u636e\u6e90--> <bean id= \"dataSource\" class= \"org.springframework.jdbc.datasource.DriverManagerDataSource\" > <property name= \"driverClassName\" value= \"com.mysql.cj.jdbc.Driver\" /> <property name= \"url\" value= \"jdbc:mysql://127.0.0.1:3306/data\" /> <property name= \"username\" value= \"root\" /> <property name= \"password\" value= \"123456\" /> </bean> <!-- \u914d\u7f6e sqlSessionFactory--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"dataSource\" /> <property name= \"configLocation\" value= \"mybatis-config.xml\" /> </bean> <bean id= \"sqlSessionTemplate\" class= \"org.mybatis.spring.SqlSessionTemplate\" > <constructor-arg index= \"0\" ref= \"sqlSessionFactory\" /> </bean> <bean id= \"StudentDao\" class= \"com.pengshiyu.mybatis.dao.impl.StudentDaoImpl\" > <property name= \"sqlSession\" ref= \"sqlSessionTemplate\" /> </bean> </beans> \uff082\uff09mybatis-config.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <configuration> <settings> <!-- \u6253\u5370sql\u65e5\u5fd7 --> <setting name= \"logImpl\" value= \"STDOUT_LOGGING\" /> </settings> <typeAliases> <package name= \"com.pengshiyu.mybatis.entity\" /> </typeAliases> <mappers> <mapper resource= \"StudentMapper.xml\" /> </mappers> </configuration> \uff083\uff09StudentMapper.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"selectAllStudent\" resultType= \"Student\" > select * from students </select> </mapper> 3\u3001\u5b9e\u4f53\u5bf9\u8c61\u7c7b package com.pengshiyu.mybatis.entity ; public class Student { private int id ; private String name ; private Teacher teacher ; public Teacher getTeacher () { return teacher ; } public void setTeacher ( Teacher teacher ) { this . teacher = teacher ; } public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"Student{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", teacher=\" + teacher + '}' ; } } 4\u3001dao \uff081\uff09\u5b9a\u4e49\u63a5\u53e3 package com.pengshiyu.mybatis.dao ; import com.pengshiyu.mybatis.entity.Student ; import java.util.List ; public interface StudentDao { public List < Student > selectAllStudent (); } \uff082\uff09\u5b9e\u73b0\u63a5\u53e3 package com.pengshiyu.mybatis.dao.impl ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.entity.Student ; import org.mybatis.spring.SqlSessionTemplate ; import java.util.List ; public class StudentDaoImpl implements StudentDao { private SqlSessionTemplate sqlSession ; @Override public List < Student > selectAllStudent () { return sqlSession . selectList ( \"com.pengshiyu.mybatis.entity.StudentMapper.selectAllStudent\" ); } public void setSqlSession ( SqlSessionTemplate sqlSession ) { this . sqlSession = sqlSession ; } } 5\u3001\u6d4b\u8bd5 package com.pengshiyu.mybatis.test ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.entity.Student ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import java.io.IOException ; import java.util.List ; public class Demo { public static void main ( String [] args ) throws IOException { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); StudentDao studentDao = ( StudentDao ) context . getBean ( \"StudentDao\" ); List < Student > students = studentDao . selectAllStudent (); for ( Student student : students ){ System . out . println ( student ); } } }","title":"\u6574\u5408\u793a\u4f8b"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/21-spring\u6574\u5408mybatis/#sqlsessiondaosupport","text":"\u5b9e\u73b0\u7c7b package com.pengshiyu.mybatis.dao.impl ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.entity.Student ; import org.mybatis.spring.support.SqlSessionDaoSupport ; public class StudentDaoImpl extends SqlSessionDaoSupport implements StudentDao { @Override public Student getById ( int id ) { return getSqlSession (). selectOne ( \"com.pengshiyu.mybatis.entity.StudentMapper.getById\" , id ); } } \u914d\u7f6e\u4fee\u6539 <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <!-- \u914d\u7f6e\u6570\u636e\u6e90--> <bean id= \"dataSource\" class= \"org.springframework.jdbc.datasource.DriverManagerDataSource\" > <property name= \"driverClassName\" value= \"com.mysql.cj.jdbc.Driver\" /> <property name= \"url\" value= \"jdbc:mysql://127.0.0.1:3306/data\" /> <property name= \"username\" value= \"root\" /> <property name= \"password\" value= \"123456\" /> </bean> <!-- \u914d\u7f6e sqlSessionFactory--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"dataSource\" /> <property name= \"configLocation\" value= \"mybatis-config.xml\" /> </bean> <!-- \u4e0d\u9700\u8981\u5355\u72ec\u914d\u7f6e sqlSessionTemplate--> <!-- <bean id=\"sqlSessionTemplate\" class=\"org.mybatis.spring.SqlSessionTemplate\">--> <!-- <constructor-arg index=\"0\" ref=\"sqlSessionFactory\"/>--> <!-- </bean>--> <bean id= \"StudentDao\" class= \"com.pengshiyu.mybatis.dao.impl.StudentDaoImpl\" > <!-- \u5c06 sqlSession \u6ce8\u5165\uff0c\u6539\u4e3a sqlSessionFactory \u6ce8\u5165--> <!-- <property name=\"sqlSession\" ref=\"sqlSessionTemplate\"/>--> <property name= \"sqlSessionFactory\" ref= \"sqlSessionFactory\" /> </bean> </beans>","title":"\u5b9e\u73b0\u7c7b\u7ee7\u627f SqlSessionDaoSupport"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/21-spring\u6574\u5408mybatis/#_2","text":"1\u3001DAOMapper package com.pengshiyu.mybatis.dao ; import com.pengshiyu.mybatis.entity.Student ; import org.apache.ibatis.annotations.Select ; public interface StudentMapper { @Select ( \"select * from students where id = #{id}\" ) public Student getById ( int id ); } 2\u3001Service \uff081\uff09\u63a5\u53e3 package com.pengshiyu.mybatis.service ; import com.pengshiyu.mybatis.entity.Student ; public interface StudentService { public Student getById ( int id ); } (2)\u5b9e\u73b0 package com.pengshiyu.mybatis.service.impl ; import com.pengshiyu.mybatis.dao.StudentMapper ; import com.pengshiyu.mybatis.entity.Student ; import com.pengshiyu.mybatis.service.StudentService ; public class StudentServiceImpl implements StudentService { private StudentMapper studentMapper ; public void setStudentMapper ( StudentMapper studentMapper ) { this . studentMapper = studentMapper ; } public Student getById ( int id ) { return studentMapper . getById ( id ); } } 3\u3001\u914d\u7f6e beans.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <!-- \u914d\u7f6e\u6570\u636e\u6e90--> <bean id= \"dataSource\" class= \"org.springframework.jdbc.datasource.DriverManagerDataSource\" > <property name= \"driverClassName\" value= \"com.mysql.cj.jdbc.Driver\" /> <property name= \"url\" value= \"jdbc:mysql://127.0.0.1:3306/data\" /> <property name= \"username\" value= \"root\" /> <property name= \"password\" value= \"123456\" /> </bean> <!-- \u914d\u7f6e sqlSessionFactory--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"dataSource\" /> <property name= \"configLocation\" value= \"mybatis-config.xml\" /> </bean> <bean id= \"studentMapper\" class= \"org.mybatis.spring.mapper.MapperFactoryBean\" > <property name= \"mapperInterface\" value= \"com.pengshiyu.mybatis.dao.StudentMapper\" /> <property name= \"sqlSessionFactory\" ref= \"sqlSessionFactory\" /> </bean> <bean id= \"studentService\" class= \"com.pengshiyu.mybatis.service.impl.StudentServiceImpl\" > <property name= \"studentMapper\" ref= \"studentMapper\" /> </bean> </beans> 4\u3001\u6d4b\u8bd5 package com.pengshiyu.mybatis.test ; import com.pengshiyu.mybatis.dao.StudentMapper ; import com.pengshiyu.mybatis.entity.Student ; import com.pengshiyu.mybatis.service.StudentService ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import java.io.IOException ; public class Demo { public static void main ( String [] args ) throws IOException { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); StudentService studentService = ( StudentService ) context . getBean ( \"studentService\" ); Student student = studentService . getById ( 1 ); System . out . println ( student ); } }","title":"\u6ce8\u89e3\u65b9\u5f0f"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/21-spring\u6574\u5408mybatis/#_3","text":"beans.xml <!-- \u914d\u7f6e sqlSessionFactory--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"dataSource\" /> <!-- <property name=\"configLocation\" value=\"mybatis-config.xml\"/>--> <!-- \u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55 --> <property name= \"mapperLocations\" value= \"classpath:*Mapper.xml\" /> </bean>","title":"\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/22-\u58f0\u660e\u5f0f\u4e8b\u52a1/","text":"\u58f0\u660e\u5f0f\u4e8b\u52a1 1\u3001\u5b8c\u6574\u914d\u7f6e \uff081\uff09beans.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xmlns:tx= \"http://www.springframework.org/schema/tx\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd \" > <!-- \u914d\u7f6e\u6570\u636e\u6e90--> <bean id= \"dataSource\" class= \"org.springframework.jdbc.datasource.DriverManagerDataSource\" > <property name= \"driverClassName\" value= \"com.mysql.cj.jdbc.Driver\" /> <property name= \"url\" value= \"jdbc:mysql://127.0.0.1:3306/data\" /> <property name= \"username\" value= \"root\" /> <property name= \"password\" value= \"123456\" /> </bean> <!-- \u914d\u7f6e sqlSessionFactory--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"dataSource\" /> <property name= \"configLocation\" value= \"mybatis-config.xml\" /> </bean> <bean id= \"sqlSessionTemplate\" class= \"org.mybatis.spring.SqlSessionTemplate\" > <constructor-arg index= \"0\" ref= \"sqlSessionFactory\" /> </bean> <bean id= \"StudentDao\" class= \"com.pengshiyu.mybatis.dao.impl.StudentDaoImpl\" > <property name= \"sqlSession\" ref= \"sqlSessionTemplate\" /> </bean> <!-- \u58f0\u660e\u5f0f\u4e8b\u52a1\u7ba1\u7406--> <!-- \u914d\u7f6e\u4e8b\u52a1\u7ba1\u7406\u5668--> <bean id= \"txManager\" class= \"org.springframework.jdbc.datasource.DataSourceTransactionManager\" > <property name= \"dataSource\" ref= \"dataSource\" /> </bean> <!-- \u914d\u7f6e\u4e8b\u52a1\u901a\u77e5--> <tx:advice id= \"txAdvice\" transaction-manager= \"txManager\" > <!-- \u914d\u7f6e\u4e8b\u52a1\u7684\u4f20\u64ad\u7279\u6027--> <tx:attributes> <tx:method name= \"*\" propagation= \"REQUIRED\" /> </tx:attributes> </tx:advice> <aop:config> <aop:pointcut id= \"pointcut\" expression= \"execution(* com.pengshiyu.mybatis.dao.impl.*.* (..))\" /> <aop:advisor advice-ref= \"txAdvice\" pointcut-ref= \"pointcut\" /> </aop:config> </beans> \uff082\uff09mybatis-config.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <configuration> <settings> <!-- \u6253\u5370sql\u65e5\u5fd7 --> <setting name= \"logImpl\" value= \"STDOUT_LOGGING\" /> </settings> <typeAliases> <package name= \"com.pengshiyu.mybatis.entity\" /> </typeAliases> <mappers> <mapper resource= \"StudentMapper.xml\" /> </mappers> </configuration> \uff083\uff09StudentMapper.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"getById\" resultType= \"Student\" > select * from students where id = #{id} </select> <select id= \"selectAll\" resultType= \"Student\" > select * from students </select> <update id= \"updateById\" parameterType= \"Student\" > update students set age = #{age} where id = #{id} </update> <delete id= \"deleteById\" parameterType= \"Student\" > <!-- \u6545\u610f\u5c06sql\u5199\u9519\uff0c\u89e6\u53d1\u4e8b\u52a1\u7ba1\u7406--> deletes from students where id = #{id} </delete> </mapper> 2\u3001DAO \uff081\uff09\u63a5\u53e3 package com.pengshiyu.mybatis.dao ; import com.pengshiyu.mybatis.entity.Student ; public interface StudentDao { public void update ( Student studentA , int id ); public Student getById ( int id ); } \uff082\uff09\u5b9e\u73b0 package com.pengshiyu.mybatis.dao.impl ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.entity.Student ; import org.mybatis.spring.SqlSessionTemplate ; public class StudentDaoImpl implements StudentDao { private SqlSessionTemplate sqlSession ; @Override public Student getById ( int id ) { return sqlSession . selectOne ( \"com.pengshiyu.mybatis.entity.StudentMapper.getById\" , id ); } @Override public void update ( Student studentA , int id ) { sqlSession . update ( \"com.pengshiyu.mybatis.entity.StudentMapper.updateById\" , studentA ); sqlSession . delete ( \"com.pengshiyu.mybatis.entity.StudentMapper.deleteById\" , id ); } public void setSqlSession ( SqlSessionTemplate sqlSession ) { this . sqlSession = sqlSession ; } } 3\u3001\u6d4b\u8bd5 package com.pengshiyu.mybatis.test ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.entity.Student ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import java.io.IOException ; public class Demo { public static void main ( String [] args ) throws IOException { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); StudentDao studentDao = ( StudentDao ) context . getBean ( \"StudentDao\" ); Student studentA = studentDao . getById ( 1 ); studentA . setAge ( 25 ); studentDao . update ( studentA , 3 ); } }","title":"\u58f0\u660e\u5f0f\u4e8b\u52a1"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/22-\u58f0\u660e\u5f0f\u4e8b\u52a1/#_1","text":"1\u3001\u5b8c\u6574\u914d\u7f6e \uff081\uff09beans.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xmlns:tx= \"http://www.springframework.org/schema/tx\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd \" > <!-- \u914d\u7f6e\u6570\u636e\u6e90--> <bean id= \"dataSource\" class= \"org.springframework.jdbc.datasource.DriverManagerDataSource\" > <property name= \"driverClassName\" value= \"com.mysql.cj.jdbc.Driver\" /> <property name= \"url\" value= \"jdbc:mysql://127.0.0.1:3306/data\" /> <property name= \"username\" value= \"root\" /> <property name= \"password\" value= \"123456\" /> </bean> <!-- \u914d\u7f6e sqlSessionFactory--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"dataSource\" /> <property name= \"configLocation\" value= \"mybatis-config.xml\" /> </bean> <bean id= \"sqlSessionTemplate\" class= \"org.mybatis.spring.SqlSessionTemplate\" > <constructor-arg index= \"0\" ref= \"sqlSessionFactory\" /> </bean> <bean id= \"StudentDao\" class= \"com.pengshiyu.mybatis.dao.impl.StudentDaoImpl\" > <property name= \"sqlSession\" ref= \"sqlSessionTemplate\" /> </bean> <!-- \u58f0\u660e\u5f0f\u4e8b\u52a1\u7ba1\u7406--> <!-- \u914d\u7f6e\u4e8b\u52a1\u7ba1\u7406\u5668--> <bean id= \"txManager\" class= \"org.springframework.jdbc.datasource.DataSourceTransactionManager\" > <property name= \"dataSource\" ref= \"dataSource\" /> </bean> <!-- \u914d\u7f6e\u4e8b\u52a1\u901a\u77e5--> <tx:advice id= \"txAdvice\" transaction-manager= \"txManager\" > <!-- \u914d\u7f6e\u4e8b\u52a1\u7684\u4f20\u64ad\u7279\u6027--> <tx:attributes> <tx:method name= \"*\" propagation= \"REQUIRED\" /> </tx:attributes> </tx:advice> <aop:config> <aop:pointcut id= \"pointcut\" expression= \"execution(* com.pengshiyu.mybatis.dao.impl.*.* (..))\" /> <aop:advisor advice-ref= \"txAdvice\" pointcut-ref= \"pointcut\" /> </aop:config> </beans> \uff082\uff09mybatis-config.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <configuration> <settings> <!-- \u6253\u5370sql\u65e5\u5fd7 --> <setting name= \"logImpl\" value= \"STDOUT_LOGGING\" /> </settings> <typeAliases> <package name= \"com.pengshiyu.mybatis.entity\" /> </typeAliases> <mappers> <mapper resource= \"StudentMapper.xml\" /> </mappers> </configuration> \uff083\uff09StudentMapper.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <mapper namespace= \"com.pengshiyu.mybatis.entity.StudentMapper\" > <select id= \"getById\" resultType= \"Student\" > select * from students where id = #{id} </select> <select id= \"selectAll\" resultType= \"Student\" > select * from students </select> <update id= \"updateById\" parameterType= \"Student\" > update students set age = #{age} where id = #{id} </update> <delete id= \"deleteById\" parameterType= \"Student\" > <!-- \u6545\u610f\u5c06sql\u5199\u9519\uff0c\u89e6\u53d1\u4e8b\u52a1\u7ba1\u7406--> deletes from students where id = #{id} </delete> </mapper> 2\u3001DAO \uff081\uff09\u63a5\u53e3 package com.pengshiyu.mybatis.dao ; import com.pengshiyu.mybatis.entity.Student ; public interface StudentDao { public void update ( Student studentA , int id ); public Student getById ( int id ); } \uff082\uff09\u5b9e\u73b0 package com.pengshiyu.mybatis.dao.impl ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.entity.Student ; import org.mybatis.spring.SqlSessionTemplate ; public class StudentDaoImpl implements StudentDao { private SqlSessionTemplate sqlSession ; @Override public Student getById ( int id ) { return sqlSession . selectOne ( \"com.pengshiyu.mybatis.entity.StudentMapper.getById\" , id ); } @Override public void update ( Student studentA , int id ) { sqlSession . update ( \"com.pengshiyu.mybatis.entity.StudentMapper.updateById\" , studentA ); sqlSession . delete ( \"com.pengshiyu.mybatis.entity.StudentMapper.deleteById\" , id ); } public void setSqlSession ( SqlSessionTemplate sqlSession ) { this . sqlSession = sqlSession ; } } 3\u3001\u6d4b\u8bd5 package com.pengshiyu.mybatis.test ; import com.pengshiyu.mybatis.dao.StudentDao ; import com.pengshiyu.mybatis.entity.Student ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import java.io.IOException ; public class Demo { public static void main ( String [] args ) throws IOException { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); StudentDao studentDao = ( StudentDao ) context . getBean ( \"StudentDao\" ); Student studentA = studentDao . getById ( 1 ); studentA . setAge ( 25 ); studentDao . update ( studentA , 3 ); } }","title":"\u58f0\u660e\u5f0f\u4e8b\u52a1"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/23-Struts2/","text":"Struts2 \u4e00\u3001Struts2 \u6982\u8ff0 Struts \u7ffb\u8bd1\uff1a\u652f\u67f1 Struts \u662f\u6d41\u884c\u548c\u6210\u719f\u7684\u57fa\u4e8e MVC \u8bbe\u8ba1\u6a21\u5f0f\u7684 Web \u5e94\u7528\u7a0b\u5e8f\u6846\u67b6 POJO\uff08Plain Ordinary Java Object\uff09\u7b80\u5355\u7684 Java \u5bf9\u8c61 MVC \u6a21\u5f0f \u6a21\u578b\u89c6\u56fe\u63a7\u5236\u5668 Model View Controller \u5de5\u4f5c\u539f\u7406\u56fe \u73af\u5883 \u4e8c\u3001Struts2 \u9879\u76ee \u9879\u76ee\u7ed3\u6784 . \u251c\u2500\u2500 pom . xml \u2514\u2500\u2500 src \u251c\u2500\u2500 main \u2502 \u251c\u2500\u2500 java \u2502 \u2502 \u2514\u2500\u2500 com \u2502 \u2502 \u2514\u2500\u2500 mouday \u2502 \u2502 \u2514\u2500\u2500 HelloWorldAction . java \u2502 \u251c\u2500\u2500 resources \u2502 \u2502 \u2514\u2500\u2500 struts . xml \u2502 \u2514\u2500\u2500 webapp \u2502 \u251c\u2500\u2500 WEB - INF \u2502 \u2502 \u2514\u2500\u2500 web . xml \u2502 \u251c\u2500\u2500 hello . jsp \u2502 \u2514\u2500\u2500 index . html \u2514\u2500\u2500 test \u2514\u2500\u2500 java 1\u3001\u914d\u7f6e\u6587\u4ef6 \uff081\uff09pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> org.example </groupId> <artifactId> java-demo-struts </artifactId> <version> 1.0-SNAPSHOT </version> <build> <plugins> <!-- tomcat7\u63d2\u4ef6 maven \u547d\u4ee4 tomcat7:run \u542f\u52a8\u9879\u76ee--> <plugin> <groupId> org.apache.tomcat.maven </groupId> <artifactId> tomcat7-maven-plugin </artifactId> <version> 2.2 </version> <configuration> <port> 8080 </port> <path> / </path> <uriEncoding> UTF-8 </uriEncoding> <!--\u6dfb\u52a0\u5ffd\u7565war\u5305\u68c0\u67e5\u6807\u7b7e\uff0c\u5219\u53ef\u4ee5\u8ba9tomcat7\uff1arun\u6307\u4ee4\u6b63\u5e38\u542f\u52a8tomcat--> <ignorePackaging> true </ignorePackaging> <contextFile> src/main/webapp/WEB-INF/web.xml </contextFile> <contextReloadable> true </contextReloadable> </configuration> </plugin> </plugins> </build> <!-- https://mvnrepository.com/artifact/org.apache.struts/struts2-core --> <dependencies> <dependency> <groupId> org.apache.struts </groupId> <artifactId> struts2-core </artifactId> <version> 2.5.22 </version> </dependency> <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --> <dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 4.0.1 </version> <scope> provided </scope> </dependency> </dependencies> </project> \uff082\uff09src/main/webapp/WEB-INF/web.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <web-app> <display-name> Hello </display-name> <filter> <filter-name> struts2 </filter-name> <filter-class> org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter </filter-class> </filter> <filter-mapping> <filter-name> struts2 </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> <welcome-file-list> <welcome-file> index.html </welcome-file> </welcome-file-list> </web-app> \uff083\uff09src/main/resources/struts.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE struts PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\" \"http://struts.apache.org/dtds/struts-2.5.dtd\"> <struts> <package name= \"default\" namespace= \"/\" extends= \"struts-default\" > <action name= \"HelloWorldAction\" class= \"com.mouday.HelloWorldAction\" > <result name= \"\" > /hello.jsp </result> </action> </package> </struts> 2\u3001Action src/main/java/com/mouday/HelloWorldAction.java package com.mouday ; import com.opensymphony.xwork2.ActionSupport ; public class HelloWorldAction extends ActionSupport { @Override public String execute () throws Exception { System . out . println ( \"hello action\" ); return SUCCESS ; } } 3\u3001\u89c6\u56fe\u6587\u4ef6 src/main/webapp/index.html <!DOCTYPE html> < html lang = \"en\" > < body > hi </ body > </ html > src/main/webapp/hello.jsp <!DOCTYPE html> <html lang= \"en\" > <body> hello action jsp </body> </html> 4\u3001\u8bbf\u95ee\u6d4b\u8bd5 GET http : // localhost : 8080 / hi GET http : // localhost : 8080 / HelloWorldAction hello action jsp \u4e09\u3001\u6838\u5fc3\u6587\u4ef6 web . xml struts . xml struts . properties \u5168\u5c40\u5c5e\u6027\u6587\u4ef6\uff0c\u81ea\u52a8\u52a0\u8f7d struts.properties \u5e38\u7528\u914d\u7f6e # struts.xml\u6539\u52a8\u540e\u91cd\u65b0\u52a0\u8f7d\u91cd\u8f7d \u9ed8\u8ba4 false struts.configuration.xml.reload = true # \u6253\u5f00\u5f00\u53d1\u6a21\u5f0f \u9ed8\u8ba4 false struts.devMode = true # \u8bbe\u7f6e\u6d4f\u89c8\u5668\u7f13\u5b58\u9759\u6001\u9875\u9762 \u9ed8\u8ba4true struts.serve.static.browserCache = false # \u88abstruts\u5904\u7406\u7684\u8bf7\u6c42\u540e\u7f00 struts.action.extension = action,do # \u670d\u52a1\u5668\u8fd0\u884c\u65f6\u7aef\u53e3\u53f7 struts.url.http.port = 8080 \u56db\u3001\u6df1\u5165 Struts2 1\u3001\u8bbf\u95ee Servlet API \u65b9\u5f0f ActionContext \u5b9e\u73b0 Aware \u63a5\u53e3 ServletActionContext 2\u3001Action \u641c\u7d22\u987a\u5e8f \u9010\u7ea7\u5411\u4e0a\u67e5\u627e 3\u3001\u52a8\u6001\u65b9\u6cd5\u8c03\u7528 \uff081\uff09\u6307\u5b9a method \u5c5e\u6027 package com.mouday ; import com.opensymphony.xwork2.ActionSupport ; public class HelloWorldAction extends ActionSupport { @Override public String execute () throws Exception { System . out . println ( \"hello action\" ); return SUCCESS ; } public String add (){ System . out . println ( \"add\" ); return SUCCESS ; } } struts.xml(\u7b80\u5316) <struts> <package name= \"default\" namespace= \"/\" extends= \"struts-default\" > <action name= \"add\" class= \"com.mouday.HelloWorldAction\" method= \"add\" > <result name= \"\" > /add.jsp </result> </action> </package> </struts> \u8bbf\u95ee\u7ed3\u679c GET http : // localhost : 8080 / add . action add result \uff082\uff09\u611f\u53f9\u53f7\u65b9\u5f0f\uff08\u4e0d\u63a8\u8350\uff09 \u53c2\u8003 struts2.5 \u4f7f\u7528\u611f\u53f9\u53f7\u548c\u901a\u914d\u7b26\u5b9e\u73b0\u52a8\u6001\u65b9\u6cd5\u8c03\u7528\u65e0\u6548\u7684\u95ee\u9898\u53ca\u89e3\u51b3\uff01 \u914d\u7f6e\u6587\u4ef6 <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE struts PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\" \"http://struts.apache.org/dtds/struts-2.5.dtd\"> <struts> <package name= \"default\" namespace= \"/\" extends= \"struts-default\" > <global-allowed-methods> regex:.* </global-allowed-methods> <action name= \"HelloWorldAction\" class= \"com.mouday.HelloWorldAction\" > <result> /hello.jsp </result> <result name= \"add\" > /add.jsp </result> </action> </package> <constant name= \"struts.enable.DynamicMethodInvocation\" value= \"true\" /> </struts> GET http : // localhost : 8080 / HelloWorldAction ! add . action add result \uff083\uff09 \u901a\u914d\u7b26\u65b9\u5f0f <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE struts PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\" \"http://struts.apache.org/dtds/struts-2.5.dtd\"> <struts> <package name= \"default\" namespace= \"/\" extends= \"struts-default\" > <global-allowed-methods> regex:.* </global-allowed-methods> <action name= \"*_*\" method= \"{2}\" class= \"com.mouday.{1}Action\" > <result name= \"{2}\" > /{2}.jsp </result> </action> </package> <constant name= \"struts.enable.DynamicMethodInvocation\" value= \"true\" /> </struts> GET http : // localhost : 8080 / HelloWorldAction_add . action add result 4\u3001\u6307\u5b9a\u591a\u4e2a\u914d\u7f6e\u6587\u4ef6 <include file= \"helloworld.xml\" /> \u914d\u7f6e\u793a\u4f8b struts.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE struts PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\" \"http://struts.apache.org/dtds/struts-2.5.dtd\"> <struts> <include file= \"hello.xml\" /> <constant name= \"struts.enable.DynamicMethodInvocation\" value= \"true\" /> <!-- \u4ee5\u9632\u4e71\u7801--> <constant name= \"struts.i18n.encoding\" value= \"UTF-8\" /> </struts> hello.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE struts PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\" \"http://struts.apache.org/dtds/struts-2.5.dtd\"> <struts> <package name= \"default\" namespace= \"/\" extends= \"struts-default\" > <global-allowed-methods> regex:.* </global-allowed-methods> <action name= \"*_*\" method= \"{2}\" class= \"com.mouday.{1}Action\" > <result name= \"{2}\" > /{2}.jsp </result> </action> </package> </struts> \u8bbf\u95ee GET http : // localhost : 8080 / HelloWorld_add . action add result 5\u3001\u9ed8\u8ba4 Action <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE struts PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\" \"http://struts.apache.org/dtds/struts-2.5.dtd\"> <struts> <package name= \"default\" namespace= \"/\" extends= \"struts-default\" > <default-action-ref name= \"index\" /> <action name= \"index\" > <result> /error.jsp </result> </action> </package> </struts> \u8bbf\u95ee GET http : // localhost : 8080 / xxxx . action error jsp 6\u3001Struts2 \u540e\u7f00 \uff081\uff09struts.xml <constant name= \"struts.action.extension\" value= \"html\" /> \uff082\uff09struts.properties struts . action . extension = action , do \uff083\uff09web.xml <filter> <filter-name> struts2 </filter-name> <filter-class> org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter </filter-class> <init-param> <param-name> struts.action.extension </param-name> <param-value> do </param-value> </init-param> </filter> 7\u3001\u63a5\u6536\u53c2\u6570 \uff081\uff09Action \u5c5e\u6027 Action \u7c7b package com.mouday ; import com.opensymphony.xwork2.ActionSupport ; public class LoginAction extends ActionSupport { private String username ; public String getUsername () { return username ; } public void setUsername ( String username ) { this . username = username ; } @Override public String execute () throws Exception { System . out . println ( username ); return SUCCESS ; } } \u8def\u7531\u914d\u7f6e <action name= \"login\" class= \"com.mouday.LoginAction\" > <result> /login.html </result> </action> \u8868\u5355\u9875\u9762 < form action = \"login.action\" method = \"post\" > < input type = \"text\" name = \"username\" /> < input type = \"submit\" /> </ form > \uff082\uff09Domain Model \u65b0\u5efa User \u7c7b package com.mouday.bean ; public class User { private String username ; public String getUsername () { return username ; } public void setUsername ( String username ) { this . username = username ; } } Action package com.mouday.action ; import com.mouday.bean.User ; import com.opensymphony.xwork2.ActionSupport ; public class LoginAction extends ActionSupport { private User user ; public User getUser () { return user ; } public void setUser ( User user ) { this . user = user ; } @Override public String execute () throws Exception { System . out . println ( user . getUsername ()); return SUCCESS ; } } \u767b\u5f55\u8868\u5355 < form action = \"login.action\" method = \"post\" > < input type = \"text\" name = \"user.username\" /> < input type = \"submit\" /> </ form > \uff083\uff09ModelDriven Action package com.mouday.action ; import com.mouday.bean.User ; import com.opensymphony.xwork2.ActionSupport ; import com.opensymphony.xwork2.ModelDriven ; public class LoginAction extends ActionSupport implements ModelDriven < User > { private User user = new User (); @Override public String execute () throws Exception { System . out . println ( user . getUsername ()); return SUCCESS ; } public User getModel () { return user ; } } \u8868\u5355 < form action = \"login.action\" method = \"post\" > < input type = \"text\" name = \"username\" /> < input type = \"submit\" /> </ form > \uff084\uff09\u63a5\u6536\u5217\u8868\u7c7b\u578b User \u7c7b package com.mouday.bean ; import java.util.List ; public class User { private String username ; private List < String > list ; public List < String > getList () { return list ; } public void setList ( List < String > list ) { this . list = list ; } public String getUsername () { return username ; } public void setUsername ( String username ) { this . username = username ; } } Action package com.mouday.action ; import com.mouday.bean.User ; import com.opensymphony.xwork2.ActionSupport ; import com.opensymphony.xwork2.ModelDriven ; public class LoginAction extends ActionSupport implements ModelDriven < User > { private User user = new User (); @Override public String execute () throws Exception { System . out . println ( user . getUsername ()); System . out . println ( user . getList ()); return SUCCESS ; } public User getModel () { return user ; } } \u8868\u5355 < form action = \"login.action\" method = \"post\" > < input type = \"text\" name = \"username\" /> < input type = \"text\" name = \"list[0]\" /> < input type = \"text\" name = \"list[1]\" /> < input type = \"submit\" /> </ form > 8\u3001\u5904\u7406\u7ed3\u679c\u7c7b\u578b Struts2 \u5904\u7406\u6d41\u7a0b \u7528\u6237\u8bf7\u6c42 -> Stuts\u6846\u67b6 -> \u63a7\u5236\u5668 Action -> Stuts\u6846\u67b6 -> \u89c6\u56fe\u8d44\u6e90 result \u5982\u679c\u7701\u7565 name\uff0c\u5219\u9ed8\u8ba4\u662f success <result name= \"success\" > /success.jsp </result> <!-- \u7b49\u4ef7\u4e8e --> <result> /success.jsp </result> \u5904\u7406\u7ed3\u679c\u7c7b\u578b\uff1a SUCCESS \u6b63\u786e\u6267\u884c\uff0c\u9ed8\u8ba4\u89c6\u56fe NONE \u6b63\u786e\u6267\u884c\uff0c\u4e0d\u8fd4\u56de\u89c6\u56fe ERROR \u6267\u884c\u5931\u8d25 LOGIN \u767b\u5f55\u89c6\u56fe INPUT \u53c2\u6570\u8f93\u5165\u754c\u9762 Action package com.mouday.action ; import com.mouday.bean.User ; import com.opensymphony.xwork2.ActionSupport ; import com.opensymphony.xwork2.ModelDriven ; public class LoginAction extends ActionSupport implements ModelDriven < User > { private User user = new User (); @Override public String execute () throws Exception { System . out . println ( user . getUsername ()); System . out . println ( user . getList ()); return SUCCESS ; } @Override public void validate () { if ( user . getUsername () == null || \"\" . equals ( user . getUsername ()) ) { addFieldError ( \"username\" , \"\u7528\u6237\u540d\u4e0d\u80fd\u4e3a\u7a7a\" ); } } public User getModel () { return user ; } } \u914d\u7f6e <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE struts PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\" \"http://struts.apache.org/dtds/struts-2.5.dtd\"> <struts> <package name= \"default\" namespace= \"/\" extends= \"struts-default\" > <action name= \"login\" class= \"com.mouday.action.LoginAction\" > <result> /login.jsp </result> <result name= \"input\" > /login.jsp </result> </action> </package> </struts> \u767b\u5f55\u6846 <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <%@ taglib prefix = \"s\" uri = \"/struts-tags\" %> <form action= \"login.action\" method= \"post\" > <input type= \"text\" name= \"username\" /> <!-- \u663e\u793a\u9519\u8bef\u63d0\u793a --> <s:fielderror name= \"username\" ></s:fielderror> <input type= \"text\" name= \"list[0]\" /> <input type= \"text\" name= \"list[1]\" /> <input type= \"submit\" /> </form> 9\u3001\u5c40\u90e8\u7ed3\u679c\u548c\u5168\u5c40\u7ed3\u679c OGNL <result name= \"\" > <param name= \"location\" > resource </param> </result>","title":"Struts2"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/23-Struts2/#struts2","text":"","title":"Struts2"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/23-Struts2/#struts2_1","text":"Struts \u7ffb\u8bd1\uff1a\u652f\u67f1 Struts \u662f\u6d41\u884c\u548c\u6210\u719f\u7684\u57fa\u4e8e MVC \u8bbe\u8ba1\u6a21\u5f0f\u7684 Web \u5e94\u7528\u7a0b\u5e8f\u6846\u67b6 POJO\uff08Plain Ordinary Java Object\uff09\u7b80\u5355\u7684 Java \u5bf9\u8c61 MVC \u6a21\u5f0f \u6a21\u578b\u89c6\u56fe\u63a7\u5236\u5668 Model View Controller \u5de5\u4f5c\u539f\u7406\u56fe \u73af\u5883","title":"\u4e00\u3001Struts2 \u6982\u8ff0"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/23-Struts2/#struts2_2","text":"\u9879\u76ee\u7ed3\u6784 . \u251c\u2500\u2500 pom . xml \u2514\u2500\u2500 src \u251c\u2500\u2500 main \u2502 \u251c\u2500\u2500 java \u2502 \u2502 \u2514\u2500\u2500 com \u2502 \u2502 \u2514\u2500\u2500 mouday \u2502 \u2502 \u2514\u2500\u2500 HelloWorldAction . java \u2502 \u251c\u2500\u2500 resources \u2502 \u2502 \u2514\u2500\u2500 struts . xml \u2502 \u2514\u2500\u2500 webapp \u2502 \u251c\u2500\u2500 WEB - INF \u2502 \u2502 \u2514\u2500\u2500 web . xml \u2502 \u251c\u2500\u2500 hello . jsp \u2502 \u2514\u2500\u2500 index . html \u2514\u2500\u2500 test \u2514\u2500\u2500 java 1\u3001\u914d\u7f6e\u6587\u4ef6 \uff081\uff09pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> org.example </groupId> <artifactId> java-demo-struts </artifactId> <version> 1.0-SNAPSHOT </version> <build> <plugins> <!-- tomcat7\u63d2\u4ef6 maven \u547d\u4ee4 tomcat7:run \u542f\u52a8\u9879\u76ee--> <plugin> <groupId> org.apache.tomcat.maven </groupId> <artifactId> tomcat7-maven-plugin </artifactId> <version> 2.2 </version> <configuration> <port> 8080 </port> <path> / </path> <uriEncoding> UTF-8 </uriEncoding> <!--\u6dfb\u52a0\u5ffd\u7565war\u5305\u68c0\u67e5\u6807\u7b7e\uff0c\u5219\u53ef\u4ee5\u8ba9tomcat7\uff1arun\u6307\u4ee4\u6b63\u5e38\u542f\u52a8tomcat--> <ignorePackaging> true </ignorePackaging> <contextFile> src/main/webapp/WEB-INF/web.xml </contextFile> <contextReloadable> true </contextReloadable> </configuration> </plugin> </plugins> </build> <!-- https://mvnrepository.com/artifact/org.apache.struts/struts2-core --> <dependencies> <dependency> <groupId> org.apache.struts </groupId> <artifactId> struts2-core </artifactId> <version> 2.5.22 </version> </dependency> <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --> <dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 4.0.1 </version> <scope> provided </scope> </dependency> </dependencies> </project> \uff082\uff09src/main/webapp/WEB-INF/web.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <web-app> <display-name> Hello </display-name> <filter> <filter-name> struts2 </filter-name> <filter-class> org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter </filter-class> </filter> <filter-mapping> <filter-name> struts2 </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> <welcome-file-list> <welcome-file> index.html </welcome-file> </welcome-file-list> </web-app> \uff083\uff09src/main/resources/struts.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE struts PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\" \"http://struts.apache.org/dtds/struts-2.5.dtd\"> <struts> <package name= \"default\" namespace= \"/\" extends= \"struts-default\" > <action name= \"HelloWorldAction\" class= \"com.mouday.HelloWorldAction\" > <result name= \"\" > /hello.jsp </result> </action> </package> </struts> 2\u3001Action src/main/java/com/mouday/HelloWorldAction.java package com.mouday ; import com.opensymphony.xwork2.ActionSupport ; public class HelloWorldAction extends ActionSupport { @Override public String execute () throws Exception { System . out . println ( \"hello action\" ); return SUCCESS ; } } 3\u3001\u89c6\u56fe\u6587\u4ef6 src/main/webapp/index.html <!DOCTYPE html> < html lang = \"en\" > < body > hi </ body > </ html > src/main/webapp/hello.jsp <!DOCTYPE html> <html lang= \"en\" > <body> hello action jsp </body> </html> 4\u3001\u8bbf\u95ee\u6d4b\u8bd5 GET http : // localhost : 8080 / hi GET http : // localhost : 8080 / HelloWorldAction hello action jsp","title":"\u4e8c\u3001Struts2 \u9879\u76ee"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/23-Struts2/#_1","text":"web . xml struts . xml struts . properties \u5168\u5c40\u5c5e\u6027\u6587\u4ef6\uff0c\u81ea\u52a8\u52a0\u8f7d struts.properties \u5e38\u7528\u914d\u7f6e # struts.xml\u6539\u52a8\u540e\u91cd\u65b0\u52a0\u8f7d\u91cd\u8f7d \u9ed8\u8ba4 false struts.configuration.xml.reload = true # \u6253\u5f00\u5f00\u53d1\u6a21\u5f0f \u9ed8\u8ba4 false struts.devMode = true # \u8bbe\u7f6e\u6d4f\u89c8\u5668\u7f13\u5b58\u9759\u6001\u9875\u9762 \u9ed8\u8ba4true struts.serve.static.browserCache = false # \u88abstruts\u5904\u7406\u7684\u8bf7\u6c42\u540e\u7f00 struts.action.extension = action,do # \u670d\u52a1\u5668\u8fd0\u884c\u65f6\u7aef\u53e3\u53f7 struts.url.http.port = 8080","title":"\u4e09\u3001\u6838\u5fc3\u6587\u4ef6"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/23-Struts2/#struts2_3","text":"1\u3001\u8bbf\u95ee Servlet API \u65b9\u5f0f ActionContext \u5b9e\u73b0 Aware \u63a5\u53e3 ServletActionContext 2\u3001Action \u641c\u7d22\u987a\u5e8f \u9010\u7ea7\u5411\u4e0a\u67e5\u627e 3\u3001\u52a8\u6001\u65b9\u6cd5\u8c03\u7528 \uff081\uff09\u6307\u5b9a method \u5c5e\u6027 package com.mouday ; import com.opensymphony.xwork2.ActionSupport ; public class HelloWorldAction extends ActionSupport { @Override public String execute () throws Exception { System . out . println ( \"hello action\" ); return SUCCESS ; } public String add (){ System . out . println ( \"add\" ); return SUCCESS ; } } struts.xml(\u7b80\u5316) <struts> <package name= \"default\" namespace= \"/\" extends= \"struts-default\" > <action name= \"add\" class= \"com.mouday.HelloWorldAction\" method= \"add\" > <result name= \"\" > /add.jsp </result> </action> </package> </struts> \u8bbf\u95ee\u7ed3\u679c GET http : // localhost : 8080 / add . action add result \uff082\uff09\u611f\u53f9\u53f7\u65b9\u5f0f\uff08\u4e0d\u63a8\u8350\uff09 \u53c2\u8003 struts2.5 \u4f7f\u7528\u611f\u53f9\u53f7\u548c\u901a\u914d\u7b26\u5b9e\u73b0\u52a8\u6001\u65b9\u6cd5\u8c03\u7528\u65e0\u6548\u7684\u95ee\u9898\u53ca\u89e3\u51b3\uff01 \u914d\u7f6e\u6587\u4ef6 <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE struts PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\" \"http://struts.apache.org/dtds/struts-2.5.dtd\"> <struts> <package name= \"default\" namespace= \"/\" extends= \"struts-default\" > <global-allowed-methods> regex:.* </global-allowed-methods> <action name= \"HelloWorldAction\" class= \"com.mouday.HelloWorldAction\" > <result> /hello.jsp </result> <result name= \"add\" > /add.jsp </result> </action> </package> <constant name= \"struts.enable.DynamicMethodInvocation\" value= \"true\" /> </struts> GET http : // localhost : 8080 / HelloWorldAction ! add . action add result \uff083\uff09 \u901a\u914d\u7b26\u65b9\u5f0f <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE struts PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\" \"http://struts.apache.org/dtds/struts-2.5.dtd\"> <struts> <package name= \"default\" namespace= \"/\" extends= \"struts-default\" > <global-allowed-methods> regex:.* </global-allowed-methods> <action name= \"*_*\" method= \"{2}\" class= \"com.mouday.{1}Action\" > <result name= \"{2}\" > /{2}.jsp </result> </action> </package> <constant name= \"struts.enable.DynamicMethodInvocation\" value= \"true\" /> </struts> GET http : // localhost : 8080 / HelloWorldAction_add . action add result 4\u3001\u6307\u5b9a\u591a\u4e2a\u914d\u7f6e\u6587\u4ef6 <include file= \"helloworld.xml\" /> \u914d\u7f6e\u793a\u4f8b struts.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE struts PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\" \"http://struts.apache.org/dtds/struts-2.5.dtd\"> <struts> <include file= \"hello.xml\" /> <constant name= \"struts.enable.DynamicMethodInvocation\" value= \"true\" /> <!-- \u4ee5\u9632\u4e71\u7801--> <constant name= \"struts.i18n.encoding\" value= \"UTF-8\" /> </struts> hello.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE struts PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\" \"http://struts.apache.org/dtds/struts-2.5.dtd\"> <struts> <package name= \"default\" namespace= \"/\" extends= \"struts-default\" > <global-allowed-methods> regex:.* </global-allowed-methods> <action name= \"*_*\" method= \"{2}\" class= \"com.mouday.{1}Action\" > <result name= \"{2}\" > /{2}.jsp </result> </action> </package> </struts> \u8bbf\u95ee GET http : // localhost : 8080 / HelloWorld_add . action add result 5\u3001\u9ed8\u8ba4 Action <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE struts PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\" \"http://struts.apache.org/dtds/struts-2.5.dtd\"> <struts> <package name= \"default\" namespace= \"/\" extends= \"struts-default\" > <default-action-ref name= \"index\" /> <action name= \"index\" > <result> /error.jsp </result> </action> </package> </struts> \u8bbf\u95ee GET http : // localhost : 8080 / xxxx . action error jsp 6\u3001Struts2 \u540e\u7f00 \uff081\uff09struts.xml <constant name= \"struts.action.extension\" value= \"html\" /> \uff082\uff09struts.properties struts . action . extension = action , do \uff083\uff09web.xml <filter> <filter-name> struts2 </filter-name> <filter-class> org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter </filter-class> <init-param> <param-name> struts.action.extension </param-name> <param-value> do </param-value> </init-param> </filter> 7\u3001\u63a5\u6536\u53c2\u6570 \uff081\uff09Action \u5c5e\u6027 Action \u7c7b package com.mouday ; import com.opensymphony.xwork2.ActionSupport ; public class LoginAction extends ActionSupport { private String username ; public String getUsername () { return username ; } public void setUsername ( String username ) { this . username = username ; } @Override public String execute () throws Exception { System . out . println ( username ); return SUCCESS ; } } \u8def\u7531\u914d\u7f6e <action name= \"login\" class= \"com.mouday.LoginAction\" > <result> /login.html </result> </action> \u8868\u5355\u9875\u9762 < form action = \"login.action\" method = \"post\" > < input type = \"text\" name = \"username\" /> < input type = \"submit\" /> </ form > \uff082\uff09Domain Model \u65b0\u5efa User \u7c7b package com.mouday.bean ; public class User { private String username ; public String getUsername () { return username ; } public void setUsername ( String username ) { this . username = username ; } } Action package com.mouday.action ; import com.mouday.bean.User ; import com.opensymphony.xwork2.ActionSupport ; public class LoginAction extends ActionSupport { private User user ; public User getUser () { return user ; } public void setUser ( User user ) { this . user = user ; } @Override public String execute () throws Exception { System . out . println ( user . getUsername ()); return SUCCESS ; } } \u767b\u5f55\u8868\u5355 < form action = \"login.action\" method = \"post\" > < input type = \"text\" name = \"user.username\" /> < input type = \"submit\" /> </ form > \uff083\uff09ModelDriven Action package com.mouday.action ; import com.mouday.bean.User ; import com.opensymphony.xwork2.ActionSupport ; import com.opensymphony.xwork2.ModelDriven ; public class LoginAction extends ActionSupport implements ModelDriven < User > { private User user = new User (); @Override public String execute () throws Exception { System . out . println ( user . getUsername ()); return SUCCESS ; } public User getModel () { return user ; } } \u8868\u5355 < form action = \"login.action\" method = \"post\" > < input type = \"text\" name = \"username\" /> < input type = \"submit\" /> </ form > \uff084\uff09\u63a5\u6536\u5217\u8868\u7c7b\u578b User \u7c7b package com.mouday.bean ; import java.util.List ; public class User { private String username ; private List < String > list ; public List < String > getList () { return list ; } public void setList ( List < String > list ) { this . list = list ; } public String getUsername () { return username ; } public void setUsername ( String username ) { this . username = username ; } } Action package com.mouday.action ; import com.mouday.bean.User ; import com.opensymphony.xwork2.ActionSupport ; import com.opensymphony.xwork2.ModelDriven ; public class LoginAction extends ActionSupport implements ModelDriven < User > { private User user = new User (); @Override public String execute () throws Exception { System . out . println ( user . getUsername ()); System . out . println ( user . getList ()); return SUCCESS ; } public User getModel () { return user ; } } \u8868\u5355 < form action = \"login.action\" method = \"post\" > < input type = \"text\" name = \"username\" /> < input type = \"text\" name = \"list[0]\" /> < input type = \"text\" name = \"list[1]\" /> < input type = \"submit\" /> </ form > 8\u3001\u5904\u7406\u7ed3\u679c\u7c7b\u578b Struts2 \u5904\u7406\u6d41\u7a0b \u7528\u6237\u8bf7\u6c42 -> Stuts\u6846\u67b6 -> \u63a7\u5236\u5668 Action -> Stuts\u6846\u67b6 -> \u89c6\u56fe\u8d44\u6e90 result \u5982\u679c\u7701\u7565 name\uff0c\u5219\u9ed8\u8ba4\u662f success <result name= \"success\" > /success.jsp </result> <!-- \u7b49\u4ef7\u4e8e --> <result> /success.jsp </result> \u5904\u7406\u7ed3\u679c\u7c7b\u578b\uff1a SUCCESS \u6b63\u786e\u6267\u884c\uff0c\u9ed8\u8ba4\u89c6\u56fe NONE \u6b63\u786e\u6267\u884c\uff0c\u4e0d\u8fd4\u56de\u89c6\u56fe ERROR \u6267\u884c\u5931\u8d25 LOGIN \u767b\u5f55\u89c6\u56fe INPUT \u53c2\u6570\u8f93\u5165\u754c\u9762 Action package com.mouday.action ; import com.mouday.bean.User ; import com.opensymphony.xwork2.ActionSupport ; import com.opensymphony.xwork2.ModelDriven ; public class LoginAction extends ActionSupport implements ModelDriven < User > { private User user = new User (); @Override public String execute () throws Exception { System . out . println ( user . getUsername ()); System . out . println ( user . getList ()); return SUCCESS ; } @Override public void validate () { if ( user . getUsername () == null || \"\" . equals ( user . getUsername ()) ) { addFieldError ( \"username\" , \"\u7528\u6237\u540d\u4e0d\u80fd\u4e3a\u7a7a\" ); } } public User getModel () { return user ; } } \u914d\u7f6e <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE struts PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\" \"http://struts.apache.org/dtds/struts-2.5.dtd\"> <struts> <package name= \"default\" namespace= \"/\" extends= \"struts-default\" > <action name= \"login\" class= \"com.mouday.action.LoginAction\" > <result> /login.jsp </result> <result name= \"input\" > /login.jsp </result> </action> </package> </struts> \u767b\u5f55\u6846 <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <%@ taglib prefix = \"s\" uri = \"/struts-tags\" %> <form action= \"login.action\" method= \"post\" > <input type= \"text\" name= \"username\" /> <!-- \u663e\u793a\u9519\u8bef\u63d0\u793a --> <s:fielderror name= \"username\" ></s:fielderror> <input type= \"text\" name= \"list[0]\" /> <input type= \"text\" name= \"list[1]\" /> <input type= \"submit\" /> </form> 9\u3001\u5c40\u90e8\u7ed3\u679c\u548c\u5168\u5c40\u7ed3\u679c OGNL <result name= \"\" > <param name= \"location\" > resource </param> </result>","title":"\u56db\u3001\u6df1\u5165 Struts2"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/24-maven\u6574\u5408ssm/","text":"maven \u6574\u5408 ssm \u9879\u76ee\u7ed3\u6784 . \u251c\u2500\u2500 pom . xml \u2514\u2500\u2500 src \u251c\u2500\u2500 main \u2502 \u251c\u2500\u2500 java \u2502 \u2502 \u2514\u2500\u2500 com \u2502 \u2502 \u2514\u2500\u2500 pengshiyu \u2502 \u2502 \u251c\u2500\u2500 action \u2502 \u2502 \u2502 \u2514\u2500\u2500 UserAction . java \u2502 \u2502 \u251c\u2500\u2500 bean \u2502 \u2502 \u2502 \u2514\u2500\u2500 User . java \u2502 \u2502 \u251c\u2500\u2500 dao \u2502 \u2502 \u2502 \u251c\u2500\u2500 UserDao . java \u2502 \u2502 \u2502 \u2514\u2500\u2500 impl \u2502 \u2502 \u2502 \u2514\u2500\u2500 UserDaoImpl . java \u2502 \u2502 \u2514\u2500\u2500 service \u2502 \u2502 \u251c\u2500\u2500 UserService . java \u2502 \u2502 \u2514\u2500\u2500 impl \u2502 \u2502 \u2514\u2500\u2500 UserServiceImpl . java \u2502 \u251c\u2500\u2500 resources \u2502 \u2502 \u251c\u2500\u2500 beans . xml \u2502 \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u2502 \u251c\u2500\u2500 mybatis \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 user . mapper . xml \u2502 \u2502 \u2502 \u251c\u2500\u2500 spring \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 user . xml \u2502 \u2502 \u2502 \u2514\u2500\u2500 struts \u2502 \u2502 \u2502 \u2514\u2500\u2500 user . xml \u2502 \u2502 \u251c\u2500\u2500 mybatis - config . xml \u2502 \u2502 \u2514\u2500\u2500 struts . xml \u2502 \u2514\u2500\u2500 webapp \u2502 \u251c\u2500\u2500 WEB - INF \u2502 \u2502 \u2514\u2500\u2500 web . xml \u2502 \u251c\u2500\u2500 index . html \u2502 \u2514\u2500\u2500 list . jsp \u2514\u2500\u2500 test \u2514\u2500\u2500 java \u4e00\u3001\u914d\u7f6e 1\u3001Maven pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> org.example </groupId> <artifactId> spring-mybatis-struts-demo </artifactId> <version> 1.0-SNAPSHOT </version> <build> <finalName> maven-springmvc </finalName> <resources> <!--\u8868\u793a\u628ajava\u76ee\u5f55\u4e0b\u7684\u6709\u5173xml\u6587\u4ef6,properties\u6587\u4ef6\u7f16\u8bd1/\u6253\u5305\u7684\u65f6\u5019\u653e\u5728resource\u76ee\u5f55\u4e0b--> <resource> <directory> ${basedir}/src/main/java </directory> <includes> <include> **/*.properties </include> <include> **/*.xml </include> </includes> </resource> <resource> <directory> ${basedir}/src/main/resources </directory> </resource> </resources> <plugins> <!-- tomcat7\u63d2\u4ef6 maven \u547d\u4ee4 tomcat7:run \u542f\u52a8\u9879\u76ee--> <plugin> <groupId> org.apache.tomcat.maven </groupId> <artifactId> tomcat7-maven-plugin </artifactId> <version> 2.2 </version> <configuration> <port> 8080 </port> <path> / </path> <uriEncoding> UTF-8 </uriEncoding> <!--\u6dfb\u52a0\u5ffd\u7565war\u5305\u68c0\u67e5\u6807\u7b7e\uff0c\u5219\u53ef\u4ee5\u8ba9tomcat7\uff1arun\u6307\u4ee4\u6b63\u5e38\u542f\u52a8tomcat--> <ignorePackaging> true </ignorePackaging> <contextFile> src/main/webapp/WEB-INF/web.xml </contextFile> <contextReloadable> true </contextReloadable> </configuration> </plugin> </plugins> </build> <dependencies> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.18 </version> </dependency> <dependency> <groupId> org.apache.struts </groupId> <artifactId> struts2-core </artifactId> <version> 2.5.22 </version> </dependency> <dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 4.0.1 </version> <scope> provided </scope> </dependency> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis </artifactId> <version> 3.5.4 </version> </dependency> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis-spring </artifactId> <version> 2.0.4 </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-context-support </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-context </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-web </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-jdbc </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.apache.struts/struts2-spring-plugin --> <dependency> <groupId> org.apache.struts </groupId> <artifactId> struts2-spring-plugin </artifactId> <version> 2.5.22 </version> </dependency> <dependency> <groupId> jstl </groupId> <artifactId> jstl </artifactId> <version> 1.2 </version> </dependency> <dependency> <groupId> taglibs </groupId> <artifactId> standard </artifactId> <version> 1.1.2 </version> </dependency> </dependencies> </project> 2\u3001Tomcat src/main/webapp/WEB-INF/web.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version = \"4.0\" > <!-- \u914d\u7f6espring --> <context-param> <param-name> contextConfigLocation </param-name> <param-value> classpath:beans.xml </param-value> </context-param> <listener> <listener-class> org.springframework.web.context.ContextLoaderListener </listener-class> </listener> <!-- \u914d\u7f6e struts2 --> <filter> <filter-name> struts2 </filter-name> <filter-class> org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter </filter-class> </filter> <filter-mapping> <filter-name> struts2 </filter-name> <url-pattern> *.action </url-pattern> </filter-mapping> <welcome-file-list> <welcome-file> index.html </welcome-file> </welcome-file-list> </web-app> 3\u3001Spring src/main/resources/beans.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <!-- \u914d\u7f6e\u6570\u636e\u6e90--> <bean id= \"dataSource\" class= \"org.springframework.jdbc.datasource.DriverManagerDataSource\" > <property name= \"driverClassName\" value= \"com.mysql.cj.jdbc.Driver\" /> <property name= \"url\" value= \"jdbc:mysql://127.0.0.1:3306/data\" /> <property name= \"username\" value= \"root\" /> <property name= \"password\" value= \"123456\" /> </bean> <!-- \u914d\u7f6e sqlSessionFactory--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"dataSource\" /> <property name= \"configLocation\" value= \"classpath:mybatis-config.xml\" /> </bean> <import resource= \"config/spring/user.xml\" /> </beans> 4\u3001MyBatis src/main/resources/mybatis-config.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <configuration> <settings> <!-- \u6253\u5370sql\u65e5\u5fd7 --> <setting name= \"logImpl\" value= \"STDOUT_LOGGING\" /> </settings> <mappers> <mapper resource= \"config/mybatis/user.mapper.xml\" /> </mappers> </configuration> 5\u3001Struts2 src/main/resources/struts.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE struts PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\" \"http://struts.apache.org/dtds/struts-2.5.dtd\"> <struts> <include file= \"config/struts/user.xml\" /> </struts> 6\u3001Spring/User src/main/resources/config/spring/user.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"userDao\" class= \"com.pengshiyu.dao.impl.UserDaoImpl\" > <property name= \"sqlSessionFactory\" ref= \"sqlSessionFactory\" /> </bean> <bean id= \"userService\" class= \"com.pengshiyu.service.impl.UserServiceImpl\" > <property name= \"userDao\" ref= \"userDao\" /> </bean> <bean id= \"userAction\" class= \"com.pengshiyu.action.UserAction\" > <property name= \"userService\" ref= \"userService\" /> </bean> </beans> 7\u3001Mybatis/User src/main/resources/config/mybatis/user.mapper.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <mapper namespace= \"com.pengshiyu.bean.user.mapper\" > <!-- \u521b\u5efausers\u8868 create table users( id int PRIMARY key auto_increment, name varchar(20), password varchar(20) ) \u63d2\u5165\u6d4b\u8bd5\u6570\u636e insert into users(name, `password`) values(\"\u5c0f\u660e\", \"123456\"); insert into users(name, `password`) values(\"\u5c0f\u738b\", \"123457\"); insert into users(name, `password`) values(\"\u5c0f\u8d75\", \"123458\"); insert into users(name, `password`) values(\"\u5c0f\u56db\", \"123459\"); --> <select id= \"getAll\" resultType= \"com.pengshiyu.bean.User\" > select * from users </select> </mapper> 8\u3001Struts/User src/main/resources/config/struts/user.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE struts PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\" \"http://struts.apache.org/dtds/struts-2.5.dtd\"> <struts> <package name= \"default\" namespace= \"/\" extends= \"struts-default\" > <action name= \"list\" class= \"userAction\" method= \"list\" > <result> /list.jsp </result> </action> </package> </struts> Java \u7c7b 1\u3001User src/main/java/com/pengshiyu/bean/User.java package com.pengshiyu.bean ; public class User { private int id ; private String name ; private String password ; public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public String getPassword () { return password ; } public void setPassword ( String password ) { this . password = password ; } } 2\u3001UserDao src/main/java/com/pengshiyu/dao/UserDao.java package com.pengshiyu.dao ; import com.pengshiyu.bean.User ; import java.util.List ; public interface UserDao { List < User > getAll (); } 3\u3001UserDaoImpl src/main/java/com/pengshiyu/dao/impl/UserDaoImpl.java package com.pengshiyu.dao.impl ; import com.pengshiyu.bean.User ; import com.pengshiyu.dao.UserDao ; import org.mybatis.spring.support.SqlSessionDaoSupport ; import java.util.List ; public class UserDaoImpl extends SqlSessionDaoSupport implements UserDao { public List < User > getAll () { return this . getSqlSession (). selectList ( \"com.pengshiyu.bean.user.mapper.getAll\" ); } } 4\u3001UserService src/main/java/com/pengshiyu/service/UserService.java package com.pengshiyu.service ; import com.pengshiyu.bean.User ; import java.util.List ; public interface UserService { List < User > getAll (); } 5\u3001UserServiceImpl src/main/java/com/pengshiyu/service/impl/UserServiceImpl.java package com.pengshiyu.service.impl ; import com.pengshiyu.bean.User ; import com.pengshiyu.dao.UserDao ; import com.pengshiyu.service.UserService ; import java.util.List ; public class UserServiceImpl implements UserService { private UserDao userDao ; public void setUserDao ( UserDao userDao ) { this . userDao = userDao ; } public List < User > getAll () { return userDao . getAll (); } } 6\u3001UserAction src/main/java/com/pengshiyu/action/UserAction.java package com.pengshiyu.action ; import com.opensymphony.xwork2.ActionSupport ; import com.pengshiyu.bean.User ; import com.pengshiyu.service.UserService ; import java.util.List ; public class UserAction extends ActionSupport { private List < User > users ; private UserService userService ; public String list (){ System . out . println ( \"list\" ); users = userService . getAll (); System . out . println ( users ); return SUCCESS ; } public List < User > getUsers () { return users ; } public void setUsers ( List < User > users ) { this . users = users ; } public UserService getUserService () { return userService ; } public void setUserService ( UserService userService ) { this . userService = userService ; } } \u9875\u9762 1\u3001index src/main/webapp/index.html hello spring 2\u3001list src/main/webapp/list.jsp <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <%@ taglib prefix = \"c\" uri = \"http://java.sun.com/jsp/jstl/core\" %> <table> <tr> <th> \u7f16\u53f7 </th> <th> \u59d3\u540d </th> <th> \u5bc6\u7801 </th> </tr> <c:forEach items= \"${users}\" var= \"item\" > <tr> <td> ${item.id} </td> <td> ${item.name} </td> <td> ${item.password} </td> </tr> </c:forEach> </table> \u8bbf\u95ee\u6d4b\u8bd5 GET http://localhost:8080/list.action \u7f16\u53f7 \u59d3\u540d \u5bc6\u7801 1 \u5c0f\u660e 123456 2 \u5c0f\u738b 123457 3 \u5c0f\u8d75 123458 4 \u5c0f\u56db 123459 \u6e90\u7801\u5730\u5740\uff1a https://github.com/mouday/spring-struts-mybatis-demo","title":"maven \u6574\u5408 ssm"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/24-maven\u6574\u5408ssm/#maven-ssm","text":"\u9879\u76ee\u7ed3\u6784 . \u251c\u2500\u2500 pom . xml \u2514\u2500\u2500 src \u251c\u2500\u2500 main \u2502 \u251c\u2500\u2500 java \u2502 \u2502 \u2514\u2500\u2500 com \u2502 \u2502 \u2514\u2500\u2500 pengshiyu \u2502 \u2502 \u251c\u2500\u2500 action \u2502 \u2502 \u2502 \u2514\u2500\u2500 UserAction . java \u2502 \u2502 \u251c\u2500\u2500 bean \u2502 \u2502 \u2502 \u2514\u2500\u2500 User . java \u2502 \u2502 \u251c\u2500\u2500 dao \u2502 \u2502 \u2502 \u251c\u2500\u2500 UserDao . java \u2502 \u2502 \u2502 \u2514\u2500\u2500 impl \u2502 \u2502 \u2502 \u2514\u2500\u2500 UserDaoImpl . java \u2502 \u2502 \u2514\u2500\u2500 service \u2502 \u2502 \u251c\u2500\u2500 UserService . java \u2502 \u2502 \u2514\u2500\u2500 impl \u2502 \u2502 \u2514\u2500\u2500 UserServiceImpl . java \u2502 \u251c\u2500\u2500 resources \u2502 \u2502 \u251c\u2500\u2500 beans . xml \u2502 \u2502 \u251c\u2500\u2500 config \u2502 \u2502 \u2502 \u251c\u2500\u2500 mybatis \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 user . mapper . xml \u2502 \u2502 \u2502 \u251c\u2500\u2500 spring \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 user . xml \u2502 \u2502 \u2502 \u2514\u2500\u2500 struts \u2502 \u2502 \u2502 \u2514\u2500\u2500 user . xml \u2502 \u2502 \u251c\u2500\u2500 mybatis - config . xml \u2502 \u2502 \u2514\u2500\u2500 struts . xml \u2502 \u2514\u2500\u2500 webapp \u2502 \u251c\u2500\u2500 WEB - INF \u2502 \u2502 \u2514\u2500\u2500 web . xml \u2502 \u251c\u2500\u2500 index . html \u2502 \u2514\u2500\u2500 list . jsp \u2514\u2500\u2500 test \u2514\u2500\u2500 java","title":"maven \u6574\u5408 ssm"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/24-maven\u6574\u5408ssm/#_1","text":"1\u3001Maven pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> org.example </groupId> <artifactId> spring-mybatis-struts-demo </artifactId> <version> 1.0-SNAPSHOT </version> <build> <finalName> maven-springmvc </finalName> <resources> <!--\u8868\u793a\u628ajava\u76ee\u5f55\u4e0b\u7684\u6709\u5173xml\u6587\u4ef6,properties\u6587\u4ef6\u7f16\u8bd1/\u6253\u5305\u7684\u65f6\u5019\u653e\u5728resource\u76ee\u5f55\u4e0b--> <resource> <directory> ${basedir}/src/main/java </directory> <includes> <include> **/*.properties </include> <include> **/*.xml </include> </includes> </resource> <resource> <directory> ${basedir}/src/main/resources </directory> </resource> </resources> <plugins> <!-- tomcat7\u63d2\u4ef6 maven \u547d\u4ee4 tomcat7:run \u542f\u52a8\u9879\u76ee--> <plugin> <groupId> org.apache.tomcat.maven </groupId> <artifactId> tomcat7-maven-plugin </artifactId> <version> 2.2 </version> <configuration> <port> 8080 </port> <path> / </path> <uriEncoding> UTF-8 </uriEncoding> <!--\u6dfb\u52a0\u5ffd\u7565war\u5305\u68c0\u67e5\u6807\u7b7e\uff0c\u5219\u53ef\u4ee5\u8ba9tomcat7\uff1arun\u6307\u4ee4\u6b63\u5e38\u542f\u52a8tomcat--> <ignorePackaging> true </ignorePackaging> <contextFile> src/main/webapp/WEB-INF/web.xml </contextFile> <contextReloadable> true </contextReloadable> </configuration> </plugin> </plugins> </build> <dependencies> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.18 </version> </dependency> <dependency> <groupId> org.apache.struts </groupId> <artifactId> struts2-core </artifactId> <version> 2.5.22 </version> </dependency> <dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 4.0.1 </version> <scope> provided </scope> </dependency> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis </artifactId> <version> 3.5.4 </version> </dependency> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis-spring </artifactId> <version> 2.0.4 </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-context-support </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-context </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-web </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-jdbc </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.apache.struts/struts2-spring-plugin --> <dependency> <groupId> org.apache.struts </groupId> <artifactId> struts2-spring-plugin </artifactId> <version> 2.5.22 </version> </dependency> <dependency> <groupId> jstl </groupId> <artifactId> jstl </artifactId> <version> 1.2 </version> </dependency> <dependency> <groupId> taglibs </groupId> <artifactId> standard </artifactId> <version> 1.1.2 </version> </dependency> </dependencies> </project> 2\u3001Tomcat src/main/webapp/WEB-INF/web.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version = \"4.0\" > <!-- \u914d\u7f6espring --> <context-param> <param-name> contextConfigLocation </param-name> <param-value> classpath:beans.xml </param-value> </context-param> <listener> <listener-class> org.springframework.web.context.ContextLoaderListener </listener-class> </listener> <!-- \u914d\u7f6e struts2 --> <filter> <filter-name> struts2 </filter-name> <filter-class> org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter </filter-class> </filter> <filter-mapping> <filter-name> struts2 </filter-name> <url-pattern> *.action </url-pattern> </filter-mapping> <welcome-file-list> <welcome-file> index.html </welcome-file> </welcome-file-list> </web-app> 3\u3001Spring src/main/resources/beans.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <!-- \u914d\u7f6e\u6570\u636e\u6e90--> <bean id= \"dataSource\" class= \"org.springframework.jdbc.datasource.DriverManagerDataSource\" > <property name= \"driverClassName\" value= \"com.mysql.cj.jdbc.Driver\" /> <property name= \"url\" value= \"jdbc:mysql://127.0.0.1:3306/data\" /> <property name= \"username\" value= \"root\" /> <property name= \"password\" value= \"123456\" /> </bean> <!-- \u914d\u7f6e sqlSessionFactory--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"dataSource\" /> <property name= \"configLocation\" value= \"classpath:mybatis-config.xml\" /> </bean> <import resource= \"config/spring/user.xml\" /> </beans> 4\u3001MyBatis src/main/resources/mybatis-config.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <configuration> <settings> <!-- \u6253\u5370sql\u65e5\u5fd7 --> <setting name= \"logImpl\" value= \"STDOUT_LOGGING\" /> </settings> <mappers> <mapper resource= \"config/mybatis/user.mapper.xml\" /> </mappers> </configuration> 5\u3001Struts2 src/main/resources/struts.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE struts PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\" \"http://struts.apache.org/dtds/struts-2.5.dtd\"> <struts> <include file= \"config/struts/user.xml\" /> </struts> 6\u3001Spring/User src/main/resources/config/spring/user.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"userDao\" class= \"com.pengshiyu.dao.impl.UserDaoImpl\" > <property name= \"sqlSessionFactory\" ref= \"sqlSessionFactory\" /> </bean> <bean id= \"userService\" class= \"com.pengshiyu.service.impl.UserServiceImpl\" > <property name= \"userDao\" ref= \"userDao\" /> </bean> <bean id= \"userAction\" class= \"com.pengshiyu.action.UserAction\" > <property name= \"userService\" ref= \"userService\" /> </bean> </beans> 7\u3001Mybatis/User src/main/resources/config/mybatis/user.mapper.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <mapper namespace= \"com.pengshiyu.bean.user.mapper\" > <!-- \u521b\u5efausers\u8868 create table users( id int PRIMARY key auto_increment, name varchar(20), password varchar(20) ) \u63d2\u5165\u6d4b\u8bd5\u6570\u636e insert into users(name, `password`) values(\"\u5c0f\u660e\", \"123456\"); insert into users(name, `password`) values(\"\u5c0f\u738b\", \"123457\"); insert into users(name, `password`) values(\"\u5c0f\u8d75\", \"123458\"); insert into users(name, `password`) values(\"\u5c0f\u56db\", \"123459\"); --> <select id= \"getAll\" resultType= \"com.pengshiyu.bean.User\" > select * from users </select> </mapper> 8\u3001Struts/User src/main/resources/config/struts/user.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <!DOCTYPE struts PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\" \"http://struts.apache.org/dtds/struts-2.5.dtd\"> <struts> <package name= \"default\" namespace= \"/\" extends= \"struts-default\" > <action name= \"list\" class= \"userAction\" method= \"list\" > <result> /list.jsp </result> </action> </package> </struts>","title":"\u4e00\u3001\u914d\u7f6e"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/24-maven\u6574\u5408ssm/#java","text":"1\u3001User src/main/java/com/pengshiyu/bean/User.java package com.pengshiyu.bean ; public class User { private int id ; private String name ; private String password ; public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public String getPassword () { return password ; } public void setPassword ( String password ) { this . password = password ; } } 2\u3001UserDao src/main/java/com/pengshiyu/dao/UserDao.java package com.pengshiyu.dao ; import com.pengshiyu.bean.User ; import java.util.List ; public interface UserDao { List < User > getAll (); } 3\u3001UserDaoImpl src/main/java/com/pengshiyu/dao/impl/UserDaoImpl.java package com.pengshiyu.dao.impl ; import com.pengshiyu.bean.User ; import com.pengshiyu.dao.UserDao ; import org.mybatis.spring.support.SqlSessionDaoSupport ; import java.util.List ; public class UserDaoImpl extends SqlSessionDaoSupport implements UserDao { public List < User > getAll () { return this . getSqlSession (). selectList ( \"com.pengshiyu.bean.user.mapper.getAll\" ); } } 4\u3001UserService src/main/java/com/pengshiyu/service/UserService.java package com.pengshiyu.service ; import com.pengshiyu.bean.User ; import java.util.List ; public interface UserService { List < User > getAll (); } 5\u3001UserServiceImpl src/main/java/com/pengshiyu/service/impl/UserServiceImpl.java package com.pengshiyu.service.impl ; import com.pengshiyu.bean.User ; import com.pengshiyu.dao.UserDao ; import com.pengshiyu.service.UserService ; import java.util.List ; public class UserServiceImpl implements UserService { private UserDao userDao ; public void setUserDao ( UserDao userDao ) { this . userDao = userDao ; } public List < User > getAll () { return userDao . getAll (); } } 6\u3001UserAction src/main/java/com/pengshiyu/action/UserAction.java package com.pengshiyu.action ; import com.opensymphony.xwork2.ActionSupport ; import com.pengshiyu.bean.User ; import com.pengshiyu.service.UserService ; import java.util.List ; public class UserAction extends ActionSupport { private List < User > users ; private UserService userService ; public String list (){ System . out . println ( \"list\" ); users = userService . getAll (); System . out . println ( users ); return SUCCESS ; } public List < User > getUsers () { return users ; } public void setUsers ( List < User > users ) { this . users = users ; } public UserService getUserService () { return userService ; } public void setUserService ( UserService userService ) { this . userService = userService ; } }","title":"Java \u7c7b"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/24-maven\u6574\u5408ssm/#_2","text":"1\u3001index src/main/webapp/index.html hello spring 2\u3001list src/main/webapp/list.jsp <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <%@ taglib prefix = \"c\" uri = \"http://java.sun.com/jsp/jstl/core\" %> <table> <tr> <th> \u7f16\u53f7 </th> <th> \u59d3\u540d </th> <th> \u5bc6\u7801 </th> </tr> <c:forEach items= \"${users}\" var= \"item\" > <tr> <td> ${item.id} </td> <td> ${item.name} </td> <td> ${item.password} </td> </tr> </c:forEach> </table>","title":"\u9875\u9762"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/24-maven\u6574\u5408ssm/#_3","text":"GET http://localhost:8080/list.action \u7f16\u53f7 \u59d3\u540d \u5bc6\u7801 1 \u5c0f\u660e 123456 2 \u5c0f\u738b 123457 3 \u5c0f\u8d75 123458 4 \u5c0f\u56db 123459 \u6e90\u7801\u5730\u5740\uff1a https://github.com/mouday/spring-struts-mybatis-demo","title":"\u8bbf\u95ee\u6d4b\u8bd5"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/25-maven-ssm\u6ce8\u89e3\u65b9\u5f0f\u5f00\u53d1/","text":"\u6ce8\u89e3\u8bf4\u660e\uff1a dao @Repository ( \"userDao\" ) service @Service ( \"userService\" ) action @Controller ( \"userAction\" ) \u5c5e\u6027\u6ce8\u5165 @Autowired","title":"25 maven ssm\u6ce8\u89e3\u65b9\u5f0f\u5f00\u53d1"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/26-Spring-MVC/","text":"SpringMVC \u914d\u7f6e 1\u3001MVC \u6846\u67b6\u4f5c\u7528\uff1a \u5c06 url \u6620\u5c04\u5230 java \u7c7b\u6216 java \u7c7b\u7684\u65b9\u6cd5 \u5c01\u88c5\u7528\u6237\u63d0\u4ea4\u7684\u6570\u636e \u5904\u7406\u8bf7\u6c42-\u8c03\u7528\u76f8\u5173\u7684\u4e1a\u52a1\u5904\u7406-\u5c01\u88c5\u54cd\u5e94\u6570\u636e \u5c06\u54cd\u5e94\u7684\u6570\u636e\u8fdb\u884c\u6e32\u67d3 jsp,html,freemaker \u7b49 2\u3001Spring MVC \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u57fa\u4e8e\u54cd\u5e94\u7684 MVC \u6846\u67b6 3\u3001Spring MVC \u4f18\u52bf \u6027\u80fd\u6bd4 Struts2 \u597d \u7b80\u5355\uff0c\u4fbf\u6377\uff0c\u6613\u5b66 \u548c Spring \u65e0\u7f1d\u96c6\u6210\uff08\u4f7f\u7528 spring ioc, aop\uff09 \u4f7f\u7528\u7ea6\u5b9a\u4f18\u5148\u4e8e\u914d\u7f6e \u80fd\u591f\u8fdb\u884c\u7b80\u5355 junit \u6d4b\u8bd5 \u652f\u6301 Restful \u98ce\u683c \u5f02\u5e38\u5904\u7406 \u672c\u5730\u5316\uff0c\u56fd\u9645\u5316 \u6570\u636e\u9a8c\u8bc1\uff0c\u7c7b\u578b\u8f6c\u6362 \u62e6\u622a\u5668 \u4f7f\u7528\u7684\u516c\u53f8\u591a 4\u3001\u7ed3\u6784 spring-beans spring-context spring-core spring-web spring-webmvc commons-logging \u9879\u76ee\u76ee\u5f55 . \u251c\u2500\u2500 pom . xml \u2514\u2500\u2500 src \u251c\u2500\u2500 main \u2502 \u251c\u2500\u2500 java \u2502 \u2502 \u2514\u2500\u2500 com \u2502 \u2502 \u2514\u2500\u2500 pengshiyu \u2502 \u2502 \u2514\u2500\u2500 controller \u2502 \u2502 \u2514\u2500\u2500 HelloController . java \u2502 \u251c\u2500\u2500 resources \u2502 \u2502 \u2514\u2500\u2500 springmvc - servlet . xml \u2502 \u2514\u2500\u2500 webapp \u2502 \u251c\u2500\u2500 WEB - INF \u2502 \u2502 \u251c\u2500\u2500 jsp \u2502 \u2502 \u2502 \u2514\u2500\u2500 hello . jsp \u2502 \u2502 \u2514\u2500\u2500 web . xml \u2502 \u2514\u2500\u2500 index . html \u2514\u2500\u2500 test \u2514\u2500\u2500 java \u914d\u7f6e\u6587\u4ef6 pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> org.example </groupId> <artifactId> spring-mvc-demo </artifactId> <version> 1.0-SNAPSHOT </version> <build> <plugins> <!-- tomcat7\u63d2\u4ef6 maven \u547d\u4ee4 tomcat7:run \u542f\u52a8\u9879\u76ee--> <plugin> <groupId> org.apache.tomcat.maven </groupId> <artifactId> tomcat7-maven-plugin </artifactId> <version> 2.2 </version> <configuration> <port> 8080 </port> <path> / </path> <uriEncoding> UTF-8 </uriEncoding> <!--\u6dfb\u52a0\u5ffd\u7565war\u5305\u68c0\u67e5\u6807\u7b7e\uff0c\u5219\u53ef\u4ee5\u8ba9tomcat7\uff1arun\u6307\u4ee4\u6b63\u5e38\u542f\u52a8tomcat--> <ignorePackaging> true </ignorePackaging> <contextFile> src/main/webapp/WEB-INF/web.xml </contextFile> <contextReloadable> true </contextReloadable> </configuration> </plugin> </plugins> </build> <dependencies> <!-- https://mvnrepository.com/artifact/org.springframework/spring-core --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-core </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-beans --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-beans </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-context --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-context </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-web --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-web </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-webmvc </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-aop --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-aop </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-expression --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-expression </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/commons-logging/commons-logging --> <dependency> <groupId> commons-logging </groupId> <artifactId> commons-logging </artifactId> <version> 1.2 </version> </dependency> <dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 4.0.1 </version> <scope> provided </scope> </dependency> <dependency> <groupId> jstl </groupId> <artifactId> jstl </artifactId> <version> 1.2 </version> </dependency> </dependencies> </project> src/main/webapp/WEB-INF/web.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version= \"4.0\" > <!-- \u914d\u7f6e\u5206\u53d1\u5668--> <servlet> <servlet-name> springmvc </servlet-name> <servlet-class> org.springframework.web.servlet.DispatcherServlet </servlet-class> <!-- \u6307\u5b9a\u914d\u7f6e\u6587\u4ef6 --> <init-param> <param-name> contextConfigLocation </param-name> <param-value> classpath:springmvc-servlet.xml </param-value> </init-param> <!-- \u8868\u793a\u5bb9\u5668\u518d\u542f\u52a8\u65f6\u7acb\u5373\u52a0\u8f7dservlet --> <load-on-startup> 1 </load-on-startup> </servlet> <servlet-mapping> <servlet-name> springmvc </servlet-name> <!-- \u5904\u7406\u6240\u6709URL --> <url-pattern> / </url-pattern> </servlet-mapping> </web-app> src/main/resources/springmvc-servlet.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p= \"http://www.springframework.org/schema/p\" xmlns:context= \"http://www.springframework.org/schema/context\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd \" > <!-- \u6e32\u67d3\u5668--> <bean id= \"jspViewResolver\" class= \"org.springframework.web.servlet.view.InternalResourceViewResolver\" > <property name= \"viewClass\" value= \"org.springframework.web.servlet.view.JstlView\" /> <!-- \u7ed3\u679c\u89c6\u56fe\u7684\u524d\u7f00--> <property name= \"prefix\" value= \"/WEB-INF/jsp/\" /> <!-- \u7ed3\u679c\u89c6\u56fe\u7684\u540e\u7f00--> <property name= \"suffix\" value= \".jsp\" /> </bean> <!-- \u914d\u7f6e\u8bf7\u6c42\u548c\u5904\u7406\u5668--> <bean name= \"/hello\" class= \"com.pengshiyu.controller.HelloController\" /> </beans> \u63a7\u5236\u5668 src/main/java/com/pengshiyu/controller/HelloController.java package com.pengshiyu.controller ; import org.springframework.web.servlet.ModelAndView ; import org.springframework.web.servlet.mvc.Controller ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; public class HelloController implements Controller { public ModelAndView handleRequest ( HttpServletRequest httpServletRequest , HttpServletResponse httpServletResponse ) throws Exception { // \u5c01\u88c5\u8981\u663e\u793a\u7684\u6570\u636e ModelAndView modelAndView = new ModelAndView (); modelAndView . addObject ( \"name\" , \"Tom\" ); modelAndView . addObject ( \"age\" , 25 ); // \u89c6\u56fe\u540d modelAndView . setViewName ( \"hello\" ); return modelAndView ; } } \u89c6\u56fe\u6587\u4ef6 src/main/webapp/WEB-INF/jsp/hello.jsp <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> ${name} ${age} \u8bbf\u95ee\u6d4b\u8bd5 GET http : // localhost : 8080 / hello Tom 25 Spring-MVC \u6ce8\u89e3\u5f00\u53d1 \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 src/main/resources/springmvc-servlet.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p= \"http://www.springframework.org/schema/p\" xmlns:context= \"http://www.springframework.org/schema/context\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd \" > <!-- \u6e32\u67d3\u5668--> <bean id= \"jspViewResolver\" class= \"org.springframework.web.servlet.view.InternalResourceViewResolver\" > <property name= \"viewClass\" value= \"org.springframework.web.servlet.view.JstlView\" /> <!-- \u7ed3\u679c\u89c6\u56fe\u7684\u524d\u7f00--> <property name= \"prefix\" value= \"/WEB-INF/jsp/\" /> <!-- \u7ed3\u679c\u89c6\u56fe\u7684\u540e\u7f00--> <property name= \"suffix\" value= \".jsp\" /> </bean> <!-- \u914d\u7f6e\u8bf7\u6c42\u548c\u5904\u7406\u5668--> <!-- <bean name=\"/hello\" class=\"com.pengshiyu.controller.HelloController\"/>--> <!-- \u626b\u63cf\u5305\u4e0b\u6ce8\u89e3 --> <context:component-scan base-package= \"com.pengshiyu.controller\" /> </beans> \u4fee\u6539 Controller package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.servlet.ModelAndView ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public ModelAndView handleRequest ( HttpServletRequest httpServletRequest , HttpServletResponse httpServletResponse ) throws Exception { // \u5c01\u88c5\u8981\u663e\u793a\u7684\u6570\u636e ModelAndView modelAndView = new ModelAndView (); modelAndView . addObject ( \"name\" , \"Tom\" ); modelAndView . addObject ( \"age\" , 24 ); // \u89c6\u56fe\u540d modelAndView . setViewName ( \"hello\" ); return modelAndView ; } } \u914d\u7f6e\u603b\u7ed3 1\u3001\u901a\u8fc7 url \u5bf9\u5e94 bean \u9002\u7528\u4e8e\u5c0f\u578b\u7684\u5e94\u7528\u7cfb\u7edf <bean class= \"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping\" /> <!-- \u8bf7\u6c42\u548c\u5904\u7406\u5668 --> <bean name= \"/hello\" class= \"com.pengshiyu.controller.HelloController\" /> 2\u3001\u4e3a url \u5206\u914d bean <bean class= \"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping\" > <property name= \"mappings\" > <props> <!-- \u8bf7\u6c42\u540d - \u5904\u7406\u5668id--> <prop key= \"/hello\" > helloController </prop> </props> </property> </bean> <bean id= \"helloController\" class= \"com.pengshiyu.controller.HelloController\" /> 3\u3001\u6ce8\u89e3 <!-- \u626b\u63cf\u5305\u4e0b\u6ce8\u89e3 --> <context:component-scan base-package= \"com.pengshiyu.controller\" /> Controller \u914d\u7f6e\u5bf9\u5e94\u7684\u6ce8\u89e3 \u7ed3\u679c\u8df3\u8f6c\u65b9\u5f0f 1\u3001\u8fd4\u56de ModelAndView \u5bf9\u8c61 \u6839\u636e view \u7684\u540d\u79f0\u548c\u89c6\u56fe\u89e3\u6790\u5668\uff0c\u4f1a\u8df3\u8f6c\u5230\u6307\u5b9a\u7684\u9875\u9762 \u9875\u9762\uff1a\u89c6\u56fe\u89e3\u6790\u5668\u7684\u524d\u7f00+ view name + \u89c6\u56fe\u89e3\u6790\u5668\u7684\u540e\u7f00 springmvc-servlet.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd \" > <!-- \u6e32\u67d3\u5668--> <bean id= \"jspViewResolver\" class= \"org.springframework.web.servlet.view.InternalResourceViewResolver\" > <property name= \"viewClass\" value= \"org.springframework.web.servlet.view.JstlView\" /> <!-- \u7ed3\u679c\u89c6\u56fe\u7684\u524d\u7f00--> <property name= \"prefix\" value= \"/WEB-INF/jsp/\" /> <!-- \u7ed3\u679c\u89c6\u56fe\u7684\u540e\u7f00--> <property name= \"suffix\" value= \".jsp\" /> </bean> <context:component-scan base-package= \"com.pengshiyu.controller\" /> </beans> package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.servlet.ModelAndView ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public ModelAndView handleRequest ( HttpServletRequest request , HttpServletResponse response ) throws Exception { // \u5c01\u88c5\u8981\u663e\u793a\u7684\u6570\u636e ModelAndView modelAndView = new ModelAndView (); modelAndView . addObject ( \"name\" , \"Tom\" ); // \u76f8\u5f53\u4e8e\uff1a // request.setAttribute(\"name\", \"Tom\"); modelAndView . setViewName ( \"hello\" ); // WEB-INF/jsp/hello.jsp // \u7c7b\u4f3c\u8f6c\u53d1 return modelAndView ; } } 2\u3001\u8fd4\u56de\u5b57\u7b26\u4e32 \u4e0d\u9700\u8981\u89c6\u56fe\u89e3\u6790\u5668 springmvc-servlet.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd \" > <context:component-scan base-package= \"com.pengshiyu.controller\" /> </beans> package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public void handleRequest ( HttpServletRequest request , HttpServletResponse response ) throws Exception { response . getWriter (). println ( \"hello\" ); } } 3\u3001\u91cd\u5b9a\u5411(\u5730\u5740\u6539\u53d8) package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public void handleRequest ( HttpServletRequest request , HttpServletResponse response ) throws Exception { response . sendRedirect ( \"index.jsp\" ); } } \u6216\u8005 package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public String handleRequest ( HttpServletRequest request , HttpServletResponse response ) throws Exception { // \u4e0d\u9700\u8981\u89c6\u56fe\u89e3\u6790 return \"redirect:index.jsp\" ; } } 4\u3001\u8f6c\u53d1\uff08\u5730\u5740\u4e0d\u53d8\uff09 package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public void handleRequest ( HttpServletRequest request , HttpServletResponse response ) throws Exception { request . setAttribute ( \"name\" , \"Tom\" ); request . getRequestDispatcher ( \"index.jsp\" ). forward ( request , response ); } } \u6216\u8005 package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public String handleRequest ( HttpServletRequest request , HttpServletResponse response ) throws Exception { return \"hello\" ; } } \u6216\u8005 package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public String handleRequest ( HttpServletRequest request , HttpServletResponse response ) throws Exception { return \"forward:index.jsp\" ; } } \u6570\u636e\u5904\u7406 1\u3001\u63d0\u4ea4\u6570\u636e package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public String handleRequest ( String name ){ System . out . println ( name ); return \"index.jsp\" ; } } GET http : // localhost : 8080 / hello null GET http : // localhost : 8080 / hello ? name = Tom Tom 2\u3001\u6307\u5b9a\u53c2\u6570\u540d package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RequestParam ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public String handleRequest ( @RequestParam ( \"uname\" ) String name ){ System . out . println ( name ); return \"index.jsp\" ; } } GET http : // localhost : 8080 / hello ? uname = Tom Tom 3\u3001\u63d0\u4ea4\u5bf9\u8c61 \u5b9e\u4f53\u7c7b package com.pengshiyu.bean ; public class User { private String name ; private int age ; public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getAge () { return age ; } public void setAge ( int age ) { this . age = age ; } @Override public String toString () { return \"User{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } package com.pengshiyu.controller ; import com.pengshiyu.bean.User ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; @Controller public class HelloController { @RequestMapping ( \"/user\" ) public String user ( User user ){ System . out . println ( user ); return \"index.jsp\" ; } } GET http : // localhost : 8080 / user ? name = Tom & age = 23 User { name = 'Tom' , age = 23 } \u5c06\u6570\u636e\u663e\u793a\u5230 UI \u5c42 1\u3001\u901a\u8fc7 ModelAndView \u9700\u8981\u89c6\u56fe\u89e3\u6790\u5668 package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.servlet.ModelAndView ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public ModelAndView handleRequest ( HttpServletRequest request , HttpServletResponse response ) throws Exception { // \u5c01\u88c5\u8981\u663e\u793a\u7684\u6570\u636e ModelAndView modelAndView = new ModelAndView (); modelAndView . addObject ( \"name\" , \"Tom\" ); // \u76f8\u5f53\u4e8e\uff1a // request.setAttribute(\"name\", \"Tom\"); modelAndView . setViewName ( \"hello\" ); // WEB-INF/jsp/hello.jsp // \u7c7b\u4f3c\u8f6c\u53d1 return modelAndView ; } } 2\u3001\u901a\u8fc7 ModelMap \u4e0d\u9700\u8981\u89c6\u56fe\u89e3\u6790\u5668 package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.ui.ModelMap ; import org.springframework.web.bind.annotation.RequestMapping ; @Controller public class HelloController { @RequestMapping ( \"/user\" ) public String user ( String name , ModelMap modelMap ){ System . out . println ( name ); modelMap . addAttribute ( \"name\" , name ); return \"index.jsp\" ; } } \u533a\u522b\uff1aModelAndView ModelMap \u76f8\u540c\u70b9\uff1a \u90fd\u53ef\u4ee5\u5c06\u6570\u636e\u5c01\u88c5\u663e\u793a\u5230\u8868\u793a\u5c42\u9875\u9762 \u4e0d\u540c\u70b9\uff1a ModelAndView \u53ef\u4ee5\u6307\u5b9a\u8df3\u8f6c\u7684\u89c6\u56fe\uff0c\u800c ModelMap \u4e0d\u80fd ModelAndView \u9700\u8981\u89c6\u56fe\u89e3\u6790\u5668\uff0c\u800c ModelMap \u4e0d\u9700\u8981\u914d\u7f6e \u4e71\u7801\u548c Restful \u901a\u8fc7\u8fc7\u6ee4\u5668\u89e3\u51b3 web.xml <!-- \u5904\u7406\u4e71\u7801--> <filter> <filter-name> CharacterEncodingFilter </filter-name> <filter-class> org.springframework.web.filter.CharacterEncodingFilter </filter-class> <init-param> <param-name> encoding </param-name> <param-value> utf-8 </param-value> </init-param> </filter> <filter-mapping> <filter-name> CharacterEncodingFilter </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> 2\u3001Restful package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.ui.ModelMap ; import org.springframework.web.bind.annotation.PathVariable ; import org.springframework.web.bind.annotation.RequestMapping ; @Controller public class HelloController { @RequestMapping ( \"/user/{id}\" ) public String user ( @PathVariable int id , ModelMap modelMap ){ System . out . println ( id ); modelMap . addAttribute ( \"name\" , id ); return \"/index.jsp\" ; } } GET http : // localhost : 8080 / user / 123 123 3\u3001\u901a\u8fc7\u53c2\u6570\u8bbf\u95ee\u5904\u7406\u65b9\u6cd5 package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.ui.ModelMap ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RequestMethod ; @Controller @RequestMapping ( \"/user\" ) public class HelloController { // /user?method=add @RequestMapping ( params = { \"method=add\" }, method = RequestMethod . GET ) public String add ( ModelMap modelMap ){ modelMap . addAttribute ( \"name\" , \"add\" ); return \"/index.jsp\" ; } // /user?method=delete @RequestMapping ( params = { \"method=delete\" }, method = RequestMethod . GET ) public String delete ( ModelMap modelMap ){ modelMap . addAttribute ( \"name\" , \"delete\" ); return \"/index.jsp\" ; } } \u6587\u4ef6\u4e0a\u4f20 \u4f9d\u8d56 commons-io commons-fileupload pom.xml <!-- https://mvnrepository.com/artifact/commons-io/commons-io --> <dependency> <groupId> commons-io </groupId> <artifactId> commons-io </artifactId> <version> 2.7 </version> </dependency> <!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --> <dependency> <groupId> commons-fileupload </groupId> <artifactId> commons-fileupload </artifactId> <version> 1.4 </version> </dependency> \u914d\u7f6e\u6587\u4ef6 src/main/resources/springmvc-servlet.xml <bean id= \"multipartResolver\" class= \"org.springframework.web.multipart.commons.CommonsMultipartResolver\" > <property name= \"defaultEncoding\" value= \"utf-8\" /> <property name= \"maxUploadSize\" value= \"10485760000\" /> <property name= \"maxInMemorySize\" value= \"40960\" /> </bean> src/main/java/com/pengshiyu/controller/HelloController.java package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RequestMethod ; import org.springframework.web.bind.annotation.RequestParam ; import org.springframework.web.multipart.commons.CommonsMultipartFile ; import javax.servlet.http.HttpServletRequest ; import java.io.* ; @Controller public class HelloController { @RequestMapping ( value = \"/upload\" , method = RequestMethod . GET ) public String upload (){ return \"/template/upload.jsp\" ; } @RequestMapping ( value = \"/upload\" , method = RequestMethod . POST ) public String upload ( @RequestParam ( \"file\" ) CommonsMultipartFile file , HttpServletRequest request ) throws IOException { String path = request . getRealPath ( \"/uploads\" ); InputStream is = file . getInputStream (); System . out . println ( file . getOriginalFilename ()); OutputStream os = new FileOutputStream ( new File ( path , file . getOriginalFilename ())); int len = 0 ; byte [] buffer = new byte [ 400 ]; while (( len = is . read ( buffer )) != - 1 ){ os . write ( buffer , 0 , len ); } is . close ();; os . close (); return \"/index.jsp\" ; } } src/main/webapp/template/upload.jsp < form action = \"/upload\" method = \"post\" enctype = \"multipart/form-data\" > < input type = \"file\" name = \"file\" /> < input type = \"submit\" /> </ form > Ajax \u548c JSON 1\u3001Ajax \u4e3a\u4e86\u76f4\u63a5\u83b7\u53d6 html \u6587\u4ef6\uff0c\u5c06\u914d\u7f6e\u6587\u4ef6\u5339\u914d\u89c4\u5219\u4fee\u6539\u5982\u4e0b <servlet-mapping> <servlet-name> springmvc </servlet-name> <!-- \u5904\u7406\u6240\u6709URL --> <url-pattern> *.do </url-pattern> </servlet-mapping> package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RequestMethod ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; @Controller public class HelloController { @RequestMapping ( value = \"/ajax\" ) public void ajax ( String name , HttpServletResponse response ) throws IOException { System . out . println ( name ); response . getWriter (). println ( \"ok\" ); } } < script src = \"https://code.jquery.com/jquery-3.3.1.min.js\" ></ script > < input id = \"name\" type = \"text\" /> < script > $ ( function () { $ ( \"#name\" ). blur ( function () { $ . post ( \"/ajax.do\" , { name : $ ( \"#name\" ). val (), }, function ( res ) { alert ( res ); } ); }); }); </ script > 2\u3001JSON jackson-annotations jackson-core jackson-databind <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations --> <dependency> <groupId> com.fasterxml.jackson.core </groupId> <artifactId> jackson-annotations </artifactId> <version> 2.11.0 </version> </dependency> <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --> <dependency> <groupId> com.fasterxml.jackson.core </groupId> <artifactId> jackson-databind </artifactId> <version> 2.11.0 </version> </dependency> <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core --> <dependency> <groupId> com.fasterxml.jackson.core </groupId> <artifactId> jackson-core </artifactId> <version> 2.11.0 </version> </dependency> \u914d\u7f6e JSON \u8f6c\u6362\u5668 <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd \" > <!-- \u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3aJSON--> <bean id= \"stringConverter\" class= \"org.springframework.http.converter.StringHttpMessageConverter\" > <property name= \"supportedMediaTypes\" > <list> <value> text/plain;charset=UTF-8 </value> </list> </property> </bean> <bean id= \"jsonConverter\" class= \"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter\" /> <!-- \u5df2\u5e9f\u5f03 org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter --> <bean class= \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter\" > <property name= \"messageConverters\" > <list> <ref bean= \"stringConverter\" /> <ref bean= \"jsonConverter\" /> </list> </property> </bean> <context:component-scan base-package= \"com.pengshiyu.controller\" /> </beans> package com.pengshiyu.controller ; import com.pengshiyu.bean.User ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.ResponseBody ; import java.io.IOException ; import java.util.ArrayList ; import java.util.List ; @Controller public class HelloController { @RequestMapping ( \"/json\" ) @ResponseBody public List < User > ajax () throws IOException { List < User > users = new ArrayList < User >(); users . add ( new User ( \"Tom\" , 23 )); users . add ( new User ( \"Jack\" , 24 )); return users ; } } \u62e6\u622a\u5668 interceptor 1\u3001\u5b9e\u73b0 HandlerInterceptor \u63a5\u53e3 DispatcherServlet package com.pengshiyu.interceptor ; import org.springframework.web.servlet.HandlerInterceptor ; import org.springframework.web.servlet.ModelAndView ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; public class MyInterceptor implements HandlerInterceptor { // \u5728\u8bf7\u6c42\u5904\u7406\u7684\u65b9\u6cd5\u6267\u884c\u4e4b\u524d\u6267\u884c\uff0c // \u8fd4\u56detrue\u6267\u884c\u4e0b\u4e00\u4e2a\u62e6\u622a\u5668\uff0c // \u8fd4\u56defalse\u4e0d\u6267\u884c\u4e0b\u4e00\u4e2a\u62e6\u622a\u5668 public boolean preHandle ( HttpServletRequest request , HttpServletResponse response , Object handler ) throws Exception { System . out . println ( \"preHandle\" ); return true ; } // \u5728\u5904\u7406\u65b9\u6cd5\u6267\u884c\u4e4b\u540e\u6267\u884c public void postHandle ( HttpServletRequest request , HttpServletResponse response , Object handler , ModelAndView modelAndView ) throws Exception { System . out . println ( \"postHandle\" ); } // \u5728DispatcherServlet \u4e4b\u540e\u6267\u884c \u6e05\u7406\u5de5\u4f5c public void afterCompletion ( HttpServletRequest request , HttpServletResponse response , Object handler , Exception ex ) throws Exception { System . out . println ( \"afterCompletion\" ); } } 2\u3001\u914d\u7f6e\u62e6\u622a\u5668 <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:mvc= \"http://www.springframework.org/schema/mvc\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd \" > <context:component-scan base-package= \"com.pengshiyu.controller\" /> <!-- \u914d\u7f6e\u62e6\u622a\u5668--> <mvc:interceptors> <mvc:interceptor> <!-- \u62e6\u622a\u6240\u6709\u8bf7\u6c42--> <mvc:mapping path= \"/**\" /> <bean class= \"com.pengshiyu.interceptor.MyInterceptor\" ></bean> </mvc:interceptor> </mvc:interceptors> </beans> 3\u3001\u6267\u884c\u987a\u5e8f package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; @Controller public class HelloController { @RequestMapping ( \"/echo\" ) public void echo ( HttpServletResponse response ) throws IOException { System . out . println ( \"echo\" ); response . getWriter (). println ( \"echo\" ); } } preHandle echo postHandle afterCompletion \u767b\u5f55\u62e6\u622a\u5668\u5b9e\u73b0 \u914d\u7f6e <!-- \u914d\u7f6e\u62e6\u622a\u5668--> <mvc:interceptors> <mvc:interceptor> <!-- \u62e6\u622a\u6240\u6709\u8bf7\u6c42--> <mvc:mapping path= \"/**\" /> <bean class= \"com.pengshiyu.interceptor.MyInterceptor\" > <property name= \"allowedUrls\" > <list> <value> login.do </value> </list> </property> </bean> </mvc:interceptor> </mvc:interceptors> \u62e6\u622a\u5668 package com.pengshiyu.interceptor ; import org.springframework.web.servlet.HandlerInterceptor ; import org.springframework.web.servlet.ModelAndView ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.util.List ; public class MyInterceptor implements HandlerInterceptor { private List < String > allowedUrls ; // \u5728\u8bf7\u6c42\u5904\u7406\u7684\u65b9\u6cd5\u6267\u884c\u4e4b\u524d\u6267\u884c\uff0c // \u8fd4\u56detrue\u6267\u884c\u4e0b\u4e00\u4e2a\u62e6\u622a\u5668\uff0c // \u8fd4\u56defalse\u4e0d\u6267\u884c\u4e0b\u4e00\u4e2a\u62e6\u622a\u5668 public boolean preHandle ( HttpServletRequest request , HttpServletResponse response , Object handler ) throws Exception { System . out . println ( \"preHandle\" ); // \u89e3\u51b3\u4e2d\u6587\u6253\u5370\u4e71\u7801\u8f93\u51fa response . setContentType ( \"text/html;charset=utf-8\" ); // \u5224\u65adsession Object user = request . getSession (). getAttribute ( \"user\" ); if ( user != null ){ return true ; } // \u5224\u65ad\u653e\u884c\u8def\u5f84 String url = request . getRequestURL (). toString (); System . out . println ( url ); for ( String temp : allowedUrls ){ if ( url . endsWith ( temp )){ return true ; } } // \u5982\u679c\u6ca1\u6709\u767b\u5f55\u5c31\u91cd\u5b9a\u5411\u5230\u767b\u5f55\u9875\u9762 response . sendRedirect ( \"/login.do\" ); return false ; } // \u5728\u5904\u7406\u65b9\u6cd5\u6267\u884c\u4e4b\u540e\u6267\u884c public void postHandle ( HttpServletRequest request , HttpServletResponse response , Object handler , ModelAndView modelAndView ) throws Exception { System . out . println ( \"postHandle\" ); } // \u5728DispatcherServlet \u4e4b\u540e\u6267\u884c \u6e05\u7406\u5de5\u4f5c public void afterCompletion ( HttpServletRequest request , HttpServletResponse response , Object handler , Exception ex ) throws Exception { System . out . println ( \"afterCompletion\" ); } public List < String > getAllowedUrls () { return allowedUrls ; } public void setAllowedUrls ( List < String > allowedUrls ) { this . allowedUrls = allowedUrls ; } } User \u7c7b package com.pengshiyu.bean ; public class User { private String name ; private String password ; public User () { } public User ( String name , String password ) { this . name = name ; this . password = password ; } public String getPassword () { return password ; } public void setPassword ( String password ) { this . password = password ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"User{\" + \"name='\" + name + '\\'' + \", password='\" + password + '\\'' + '}' ; } } Controller package com.pengshiyu.controller ; import com.pengshiyu.bean.User ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RequestMethod ; import javax.servlet.http.HttpServletResponse ; import javax.servlet.http.HttpSession ; import java.io.IOException ; @Controller public class UserController { @RequestMapping ( \"/userInfo\" ) public void userInfo ( HttpSession session , HttpServletResponse response ) throws IOException { User user = ( User ) session . getAttribute ( \"user\" ); response . getWriter (). println ( user ); } @RequestMapping ( value = \"/login\" , method = RequestMethod . GET ) public String login () throws IOException { return \"/template/login.jsp\" ; } @RequestMapping ( value = \"/login\" , method = RequestMethod . POST ) public void login ( User user , HttpSession session , HttpServletResponse response ) throws IOException { String message = \"\" ; if ( \"root\" . equals ( user . getName ()) && \"123\" . equals ( user . getPassword ())) { message = \"\u767b\u5f55\u6210\u529f\" ; session . setAttribute ( \"user\" , user ); } else { message = \"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\" ; } response . getWriter (). println ( message ); } } \u767b\u5f55\u9875 <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <h2> \u767b\u5f55 </h2> <form action= \"/login.do\" method= \"post\" > <input type= \"text\" name= \"name\" > <input type= \"text\" name= \"password\" > <input type= \"submit\" value= \"\u63d0\u4ea4\" > </form>","title":"26 Spring MVC"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/26-Spring-MVC/#springmvc","text":"1\u3001MVC \u6846\u67b6\u4f5c\u7528\uff1a \u5c06 url \u6620\u5c04\u5230 java \u7c7b\u6216 java \u7c7b\u7684\u65b9\u6cd5 \u5c01\u88c5\u7528\u6237\u63d0\u4ea4\u7684\u6570\u636e \u5904\u7406\u8bf7\u6c42-\u8c03\u7528\u76f8\u5173\u7684\u4e1a\u52a1\u5904\u7406-\u5c01\u88c5\u54cd\u5e94\u6570\u636e \u5c06\u54cd\u5e94\u7684\u6570\u636e\u8fdb\u884c\u6e32\u67d3 jsp,html,freemaker \u7b49 2\u3001Spring MVC \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u57fa\u4e8e\u54cd\u5e94\u7684 MVC \u6846\u67b6 3\u3001Spring MVC \u4f18\u52bf \u6027\u80fd\u6bd4 Struts2 \u597d \u7b80\u5355\uff0c\u4fbf\u6377\uff0c\u6613\u5b66 \u548c Spring \u65e0\u7f1d\u96c6\u6210\uff08\u4f7f\u7528 spring ioc, aop\uff09 \u4f7f\u7528\u7ea6\u5b9a\u4f18\u5148\u4e8e\u914d\u7f6e \u80fd\u591f\u8fdb\u884c\u7b80\u5355 junit \u6d4b\u8bd5 \u652f\u6301 Restful \u98ce\u683c \u5f02\u5e38\u5904\u7406 \u672c\u5730\u5316\uff0c\u56fd\u9645\u5316 \u6570\u636e\u9a8c\u8bc1\uff0c\u7c7b\u578b\u8f6c\u6362 \u62e6\u622a\u5668 \u4f7f\u7528\u7684\u516c\u53f8\u591a 4\u3001\u7ed3\u6784 spring-beans spring-context spring-core spring-web spring-webmvc commons-logging \u9879\u76ee\u76ee\u5f55 . \u251c\u2500\u2500 pom . xml \u2514\u2500\u2500 src \u251c\u2500\u2500 main \u2502 \u251c\u2500\u2500 java \u2502 \u2502 \u2514\u2500\u2500 com \u2502 \u2502 \u2514\u2500\u2500 pengshiyu \u2502 \u2502 \u2514\u2500\u2500 controller \u2502 \u2502 \u2514\u2500\u2500 HelloController . java \u2502 \u251c\u2500\u2500 resources \u2502 \u2502 \u2514\u2500\u2500 springmvc - servlet . xml \u2502 \u2514\u2500\u2500 webapp \u2502 \u251c\u2500\u2500 WEB - INF \u2502 \u2502 \u251c\u2500\u2500 jsp \u2502 \u2502 \u2502 \u2514\u2500\u2500 hello . jsp \u2502 \u2502 \u2514\u2500\u2500 web . xml \u2502 \u2514\u2500\u2500 index . html \u2514\u2500\u2500 test \u2514\u2500\u2500 java","title":"SpringMVC \u914d\u7f6e"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/26-Spring-MVC/#_1","text":"pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> org.example </groupId> <artifactId> spring-mvc-demo </artifactId> <version> 1.0-SNAPSHOT </version> <build> <plugins> <!-- tomcat7\u63d2\u4ef6 maven \u547d\u4ee4 tomcat7:run \u542f\u52a8\u9879\u76ee--> <plugin> <groupId> org.apache.tomcat.maven </groupId> <artifactId> tomcat7-maven-plugin </artifactId> <version> 2.2 </version> <configuration> <port> 8080 </port> <path> / </path> <uriEncoding> UTF-8 </uriEncoding> <!--\u6dfb\u52a0\u5ffd\u7565war\u5305\u68c0\u67e5\u6807\u7b7e\uff0c\u5219\u53ef\u4ee5\u8ba9tomcat7\uff1arun\u6307\u4ee4\u6b63\u5e38\u542f\u52a8tomcat--> <ignorePackaging> true </ignorePackaging> <contextFile> src/main/webapp/WEB-INF/web.xml </contextFile> <contextReloadable> true </contextReloadable> </configuration> </plugin> </plugins> </build> <dependencies> <!-- https://mvnrepository.com/artifact/org.springframework/spring-core --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-core </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-beans --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-beans </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-context --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-context </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-web --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-web </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-webmvc </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-aop --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-aop </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-expression --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-expression </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/commons-logging/commons-logging --> <dependency> <groupId> commons-logging </groupId> <artifactId> commons-logging </artifactId> <version> 1.2 </version> </dependency> <dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 4.0.1 </version> <scope> provided </scope> </dependency> <dependency> <groupId> jstl </groupId> <artifactId> jstl </artifactId> <version> 1.2 </version> </dependency> </dependencies> </project> src/main/webapp/WEB-INF/web.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version= \"4.0\" > <!-- \u914d\u7f6e\u5206\u53d1\u5668--> <servlet> <servlet-name> springmvc </servlet-name> <servlet-class> org.springframework.web.servlet.DispatcherServlet </servlet-class> <!-- \u6307\u5b9a\u914d\u7f6e\u6587\u4ef6 --> <init-param> <param-name> contextConfigLocation </param-name> <param-value> classpath:springmvc-servlet.xml </param-value> </init-param> <!-- \u8868\u793a\u5bb9\u5668\u518d\u542f\u52a8\u65f6\u7acb\u5373\u52a0\u8f7dservlet --> <load-on-startup> 1 </load-on-startup> </servlet> <servlet-mapping> <servlet-name> springmvc </servlet-name> <!-- \u5904\u7406\u6240\u6709URL --> <url-pattern> / </url-pattern> </servlet-mapping> </web-app> src/main/resources/springmvc-servlet.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p= \"http://www.springframework.org/schema/p\" xmlns:context= \"http://www.springframework.org/schema/context\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd \" > <!-- \u6e32\u67d3\u5668--> <bean id= \"jspViewResolver\" class= \"org.springframework.web.servlet.view.InternalResourceViewResolver\" > <property name= \"viewClass\" value= \"org.springframework.web.servlet.view.JstlView\" /> <!-- \u7ed3\u679c\u89c6\u56fe\u7684\u524d\u7f00--> <property name= \"prefix\" value= \"/WEB-INF/jsp/\" /> <!-- \u7ed3\u679c\u89c6\u56fe\u7684\u540e\u7f00--> <property name= \"suffix\" value= \".jsp\" /> </bean> <!-- \u914d\u7f6e\u8bf7\u6c42\u548c\u5904\u7406\u5668--> <bean name= \"/hello\" class= \"com.pengshiyu.controller.HelloController\" /> </beans>","title":"\u914d\u7f6e\u6587\u4ef6"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/26-Spring-MVC/#_2","text":"src/main/java/com/pengshiyu/controller/HelloController.java package com.pengshiyu.controller ; import org.springframework.web.servlet.ModelAndView ; import org.springframework.web.servlet.mvc.Controller ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; public class HelloController implements Controller { public ModelAndView handleRequest ( HttpServletRequest httpServletRequest , HttpServletResponse httpServletResponse ) throws Exception { // \u5c01\u88c5\u8981\u663e\u793a\u7684\u6570\u636e ModelAndView modelAndView = new ModelAndView (); modelAndView . addObject ( \"name\" , \"Tom\" ); modelAndView . addObject ( \"age\" , 25 ); // \u89c6\u56fe\u540d modelAndView . setViewName ( \"hello\" ); return modelAndView ; } }","title":"\u63a7\u5236\u5668"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/26-Spring-MVC/#_3","text":"src/main/webapp/WEB-INF/jsp/hello.jsp <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> ${name} ${age}","title":"\u89c6\u56fe\u6587\u4ef6"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/26-Spring-MVC/#_4","text":"GET http : // localhost : 8080 / hello Tom 25","title":"\u8bbf\u95ee\u6d4b\u8bd5"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/26-Spring-MVC/#spring-mvc","text":"\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 src/main/resources/springmvc-servlet.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p= \"http://www.springframework.org/schema/p\" xmlns:context= \"http://www.springframework.org/schema/context\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd \" > <!-- \u6e32\u67d3\u5668--> <bean id= \"jspViewResolver\" class= \"org.springframework.web.servlet.view.InternalResourceViewResolver\" > <property name= \"viewClass\" value= \"org.springframework.web.servlet.view.JstlView\" /> <!-- \u7ed3\u679c\u89c6\u56fe\u7684\u524d\u7f00--> <property name= \"prefix\" value= \"/WEB-INF/jsp/\" /> <!-- \u7ed3\u679c\u89c6\u56fe\u7684\u540e\u7f00--> <property name= \"suffix\" value= \".jsp\" /> </bean> <!-- \u914d\u7f6e\u8bf7\u6c42\u548c\u5904\u7406\u5668--> <!-- <bean name=\"/hello\" class=\"com.pengshiyu.controller.HelloController\"/>--> <!-- \u626b\u63cf\u5305\u4e0b\u6ce8\u89e3 --> <context:component-scan base-package= \"com.pengshiyu.controller\" /> </beans> \u4fee\u6539 Controller package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.servlet.ModelAndView ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public ModelAndView handleRequest ( HttpServletRequest httpServletRequest , HttpServletResponse httpServletResponse ) throws Exception { // \u5c01\u88c5\u8981\u663e\u793a\u7684\u6570\u636e ModelAndView modelAndView = new ModelAndView (); modelAndView . addObject ( \"name\" , \"Tom\" ); modelAndView . addObject ( \"age\" , 24 ); // \u89c6\u56fe\u540d modelAndView . setViewName ( \"hello\" ); return modelAndView ; } }","title":"Spring-MVC \u6ce8\u89e3\u5f00\u53d1"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/26-Spring-MVC/#_5","text":"1\u3001\u901a\u8fc7 url \u5bf9\u5e94 bean \u9002\u7528\u4e8e\u5c0f\u578b\u7684\u5e94\u7528\u7cfb\u7edf <bean class= \"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping\" /> <!-- \u8bf7\u6c42\u548c\u5904\u7406\u5668 --> <bean name= \"/hello\" class= \"com.pengshiyu.controller.HelloController\" /> 2\u3001\u4e3a url \u5206\u914d bean <bean class= \"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping\" > <property name= \"mappings\" > <props> <!-- \u8bf7\u6c42\u540d - \u5904\u7406\u5668id--> <prop key= \"/hello\" > helloController </prop> </props> </property> </bean> <bean id= \"helloController\" class= \"com.pengshiyu.controller.HelloController\" /> 3\u3001\u6ce8\u89e3 <!-- \u626b\u63cf\u5305\u4e0b\u6ce8\u89e3 --> <context:component-scan base-package= \"com.pengshiyu.controller\" /> Controller \u914d\u7f6e\u5bf9\u5e94\u7684\u6ce8\u89e3","title":"\u914d\u7f6e\u603b\u7ed3"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/26-Spring-MVC/#_6","text":"1\u3001\u8fd4\u56de ModelAndView \u5bf9\u8c61 \u6839\u636e view \u7684\u540d\u79f0\u548c\u89c6\u56fe\u89e3\u6790\u5668\uff0c\u4f1a\u8df3\u8f6c\u5230\u6307\u5b9a\u7684\u9875\u9762 \u9875\u9762\uff1a\u89c6\u56fe\u89e3\u6790\u5668\u7684\u524d\u7f00+ view name + \u89c6\u56fe\u89e3\u6790\u5668\u7684\u540e\u7f00 springmvc-servlet.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd \" > <!-- \u6e32\u67d3\u5668--> <bean id= \"jspViewResolver\" class= \"org.springframework.web.servlet.view.InternalResourceViewResolver\" > <property name= \"viewClass\" value= \"org.springframework.web.servlet.view.JstlView\" /> <!-- \u7ed3\u679c\u89c6\u56fe\u7684\u524d\u7f00--> <property name= \"prefix\" value= \"/WEB-INF/jsp/\" /> <!-- \u7ed3\u679c\u89c6\u56fe\u7684\u540e\u7f00--> <property name= \"suffix\" value= \".jsp\" /> </bean> <context:component-scan base-package= \"com.pengshiyu.controller\" /> </beans> package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.servlet.ModelAndView ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public ModelAndView handleRequest ( HttpServletRequest request , HttpServletResponse response ) throws Exception { // \u5c01\u88c5\u8981\u663e\u793a\u7684\u6570\u636e ModelAndView modelAndView = new ModelAndView (); modelAndView . addObject ( \"name\" , \"Tom\" ); // \u76f8\u5f53\u4e8e\uff1a // request.setAttribute(\"name\", \"Tom\"); modelAndView . setViewName ( \"hello\" ); // WEB-INF/jsp/hello.jsp // \u7c7b\u4f3c\u8f6c\u53d1 return modelAndView ; } } 2\u3001\u8fd4\u56de\u5b57\u7b26\u4e32 \u4e0d\u9700\u8981\u89c6\u56fe\u89e3\u6790\u5668 springmvc-servlet.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd \" > <context:component-scan base-package= \"com.pengshiyu.controller\" /> </beans> package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public void handleRequest ( HttpServletRequest request , HttpServletResponse response ) throws Exception { response . getWriter (). println ( \"hello\" ); } } 3\u3001\u91cd\u5b9a\u5411(\u5730\u5740\u6539\u53d8) package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public void handleRequest ( HttpServletRequest request , HttpServletResponse response ) throws Exception { response . sendRedirect ( \"index.jsp\" ); } } \u6216\u8005 package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public String handleRequest ( HttpServletRequest request , HttpServletResponse response ) throws Exception { // \u4e0d\u9700\u8981\u89c6\u56fe\u89e3\u6790 return \"redirect:index.jsp\" ; } } 4\u3001\u8f6c\u53d1\uff08\u5730\u5740\u4e0d\u53d8\uff09 package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public void handleRequest ( HttpServletRequest request , HttpServletResponse response ) throws Exception { request . setAttribute ( \"name\" , \"Tom\" ); request . getRequestDispatcher ( \"index.jsp\" ). forward ( request , response ); } } \u6216\u8005 package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public String handleRequest ( HttpServletRequest request , HttpServletResponse response ) throws Exception { return \"hello\" ; } } \u6216\u8005 package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public String handleRequest ( HttpServletRequest request , HttpServletResponse response ) throws Exception { return \"forward:index.jsp\" ; } }","title":"\u7ed3\u679c\u8df3\u8f6c\u65b9\u5f0f"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/26-Spring-MVC/#_7","text":"1\u3001\u63d0\u4ea4\u6570\u636e package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public String handleRequest ( String name ){ System . out . println ( name ); return \"index.jsp\" ; } } GET http : // localhost : 8080 / hello null GET http : // localhost : 8080 / hello ? name = Tom Tom 2\u3001\u6307\u5b9a\u53c2\u6570\u540d package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RequestParam ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public String handleRequest ( @RequestParam ( \"uname\" ) String name ){ System . out . println ( name ); return \"index.jsp\" ; } } GET http : // localhost : 8080 / hello ? uname = Tom Tom 3\u3001\u63d0\u4ea4\u5bf9\u8c61 \u5b9e\u4f53\u7c7b package com.pengshiyu.bean ; public class User { private String name ; private int age ; public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getAge () { return age ; } public void setAge ( int age ) { this . age = age ; } @Override public String toString () { return \"User{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } package com.pengshiyu.controller ; import com.pengshiyu.bean.User ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; @Controller public class HelloController { @RequestMapping ( \"/user\" ) public String user ( User user ){ System . out . println ( user ); return \"index.jsp\" ; } } GET http : // localhost : 8080 / user ? name = Tom & age = 23 User { name = 'Tom' , age = 23 }","title":"\u6570\u636e\u5904\u7406"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/26-Spring-MVC/#ui","text":"1\u3001\u901a\u8fc7 ModelAndView \u9700\u8981\u89c6\u56fe\u89e3\u6790\u5668 package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.servlet.ModelAndView ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) public ModelAndView handleRequest ( HttpServletRequest request , HttpServletResponse response ) throws Exception { // \u5c01\u88c5\u8981\u663e\u793a\u7684\u6570\u636e ModelAndView modelAndView = new ModelAndView (); modelAndView . addObject ( \"name\" , \"Tom\" ); // \u76f8\u5f53\u4e8e\uff1a // request.setAttribute(\"name\", \"Tom\"); modelAndView . setViewName ( \"hello\" ); // WEB-INF/jsp/hello.jsp // \u7c7b\u4f3c\u8f6c\u53d1 return modelAndView ; } } 2\u3001\u901a\u8fc7 ModelMap \u4e0d\u9700\u8981\u89c6\u56fe\u89e3\u6790\u5668 package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.ui.ModelMap ; import org.springframework.web.bind.annotation.RequestMapping ; @Controller public class HelloController { @RequestMapping ( \"/user\" ) public String user ( String name , ModelMap modelMap ){ System . out . println ( name ); modelMap . addAttribute ( \"name\" , name ); return \"index.jsp\" ; } } \u533a\u522b\uff1aModelAndView ModelMap \u76f8\u540c\u70b9\uff1a \u90fd\u53ef\u4ee5\u5c06\u6570\u636e\u5c01\u88c5\u663e\u793a\u5230\u8868\u793a\u5c42\u9875\u9762 \u4e0d\u540c\u70b9\uff1a ModelAndView \u53ef\u4ee5\u6307\u5b9a\u8df3\u8f6c\u7684\u89c6\u56fe\uff0c\u800c ModelMap \u4e0d\u80fd ModelAndView \u9700\u8981\u89c6\u56fe\u89e3\u6790\u5668\uff0c\u800c ModelMap \u4e0d\u9700\u8981\u914d\u7f6e","title":"\u5c06\u6570\u636e\u663e\u793a\u5230 UI \u5c42"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/26-Spring-MVC/#restful","text":"\u901a\u8fc7\u8fc7\u6ee4\u5668\u89e3\u51b3 web.xml <!-- \u5904\u7406\u4e71\u7801--> <filter> <filter-name> CharacterEncodingFilter </filter-name> <filter-class> org.springframework.web.filter.CharacterEncodingFilter </filter-class> <init-param> <param-name> encoding </param-name> <param-value> utf-8 </param-value> </init-param> </filter> <filter-mapping> <filter-name> CharacterEncodingFilter </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> 2\u3001Restful package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.ui.ModelMap ; import org.springframework.web.bind.annotation.PathVariable ; import org.springframework.web.bind.annotation.RequestMapping ; @Controller public class HelloController { @RequestMapping ( \"/user/{id}\" ) public String user ( @PathVariable int id , ModelMap modelMap ){ System . out . println ( id ); modelMap . addAttribute ( \"name\" , id ); return \"/index.jsp\" ; } } GET http : // localhost : 8080 / user / 123 123 3\u3001\u901a\u8fc7\u53c2\u6570\u8bbf\u95ee\u5904\u7406\u65b9\u6cd5 package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.ui.ModelMap ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RequestMethod ; @Controller @RequestMapping ( \"/user\" ) public class HelloController { // /user?method=add @RequestMapping ( params = { \"method=add\" }, method = RequestMethod . GET ) public String add ( ModelMap modelMap ){ modelMap . addAttribute ( \"name\" , \"add\" ); return \"/index.jsp\" ; } // /user?method=delete @RequestMapping ( params = { \"method=delete\" }, method = RequestMethod . GET ) public String delete ( ModelMap modelMap ){ modelMap . addAttribute ( \"name\" , \"delete\" ); return \"/index.jsp\" ; } }","title":"\u4e71\u7801\u548c Restful"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/26-Spring-MVC/#_8","text":"\u4f9d\u8d56 commons-io commons-fileupload pom.xml <!-- https://mvnrepository.com/artifact/commons-io/commons-io --> <dependency> <groupId> commons-io </groupId> <artifactId> commons-io </artifactId> <version> 2.7 </version> </dependency> <!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --> <dependency> <groupId> commons-fileupload </groupId> <artifactId> commons-fileupload </artifactId> <version> 1.4 </version> </dependency> \u914d\u7f6e\u6587\u4ef6 src/main/resources/springmvc-servlet.xml <bean id= \"multipartResolver\" class= \"org.springframework.web.multipart.commons.CommonsMultipartResolver\" > <property name= \"defaultEncoding\" value= \"utf-8\" /> <property name= \"maxUploadSize\" value= \"10485760000\" /> <property name= \"maxInMemorySize\" value= \"40960\" /> </bean> src/main/java/com/pengshiyu/controller/HelloController.java package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RequestMethod ; import org.springframework.web.bind.annotation.RequestParam ; import org.springframework.web.multipart.commons.CommonsMultipartFile ; import javax.servlet.http.HttpServletRequest ; import java.io.* ; @Controller public class HelloController { @RequestMapping ( value = \"/upload\" , method = RequestMethod . GET ) public String upload (){ return \"/template/upload.jsp\" ; } @RequestMapping ( value = \"/upload\" , method = RequestMethod . POST ) public String upload ( @RequestParam ( \"file\" ) CommonsMultipartFile file , HttpServletRequest request ) throws IOException { String path = request . getRealPath ( \"/uploads\" ); InputStream is = file . getInputStream (); System . out . println ( file . getOriginalFilename ()); OutputStream os = new FileOutputStream ( new File ( path , file . getOriginalFilename ())); int len = 0 ; byte [] buffer = new byte [ 400 ]; while (( len = is . read ( buffer )) != - 1 ){ os . write ( buffer , 0 , len ); } is . close ();; os . close (); return \"/index.jsp\" ; } } src/main/webapp/template/upload.jsp < form action = \"/upload\" method = \"post\" enctype = \"multipart/form-data\" > < input type = \"file\" name = \"file\" /> < input type = \"submit\" /> </ form >","title":"\u6587\u4ef6\u4e0a\u4f20"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/26-Spring-MVC/#ajax-json","text":"1\u3001Ajax \u4e3a\u4e86\u76f4\u63a5\u83b7\u53d6 html \u6587\u4ef6\uff0c\u5c06\u914d\u7f6e\u6587\u4ef6\u5339\u914d\u89c4\u5219\u4fee\u6539\u5982\u4e0b <servlet-mapping> <servlet-name> springmvc </servlet-name> <!-- \u5904\u7406\u6240\u6709URL --> <url-pattern> *.do </url-pattern> </servlet-mapping> package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RequestMethod ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; @Controller public class HelloController { @RequestMapping ( value = \"/ajax\" ) public void ajax ( String name , HttpServletResponse response ) throws IOException { System . out . println ( name ); response . getWriter (). println ( \"ok\" ); } } < script src = \"https://code.jquery.com/jquery-3.3.1.min.js\" ></ script > < input id = \"name\" type = \"text\" /> < script > $ ( function () { $ ( \"#name\" ). blur ( function () { $ . post ( \"/ajax.do\" , { name : $ ( \"#name\" ). val (), }, function ( res ) { alert ( res ); } ); }); }); </ script > 2\u3001JSON jackson-annotations jackson-core jackson-databind <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations --> <dependency> <groupId> com.fasterxml.jackson.core </groupId> <artifactId> jackson-annotations </artifactId> <version> 2.11.0 </version> </dependency> <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --> <dependency> <groupId> com.fasterxml.jackson.core </groupId> <artifactId> jackson-databind </artifactId> <version> 2.11.0 </version> </dependency> <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core --> <dependency> <groupId> com.fasterxml.jackson.core </groupId> <artifactId> jackson-core </artifactId> <version> 2.11.0 </version> </dependency> \u914d\u7f6e JSON \u8f6c\u6362\u5668 <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd \" > <!-- \u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3aJSON--> <bean id= \"stringConverter\" class= \"org.springframework.http.converter.StringHttpMessageConverter\" > <property name= \"supportedMediaTypes\" > <list> <value> text/plain;charset=UTF-8 </value> </list> </property> </bean> <bean id= \"jsonConverter\" class= \"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter\" /> <!-- \u5df2\u5e9f\u5f03 org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter --> <bean class= \"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter\" > <property name= \"messageConverters\" > <list> <ref bean= \"stringConverter\" /> <ref bean= \"jsonConverter\" /> </list> </property> </bean> <context:component-scan base-package= \"com.pengshiyu.controller\" /> </beans> package com.pengshiyu.controller ; import com.pengshiyu.bean.User ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.ResponseBody ; import java.io.IOException ; import java.util.ArrayList ; import java.util.List ; @Controller public class HelloController { @RequestMapping ( \"/json\" ) @ResponseBody public List < User > ajax () throws IOException { List < User > users = new ArrayList < User >(); users . add ( new User ( \"Tom\" , 23 )); users . add ( new User ( \"Jack\" , 24 )); return users ; } }","title":"Ajax \u548c JSON"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/26-Spring-MVC/#_9","text":"interceptor 1\u3001\u5b9e\u73b0 HandlerInterceptor \u63a5\u53e3 DispatcherServlet package com.pengshiyu.interceptor ; import org.springframework.web.servlet.HandlerInterceptor ; import org.springframework.web.servlet.ModelAndView ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; public class MyInterceptor implements HandlerInterceptor { // \u5728\u8bf7\u6c42\u5904\u7406\u7684\u65b9\u6cd5\u6267\u884c\u4e4b\u524d\u6267\u884c\uff0c // \u8fd4\u56detrue\u6267\u884c\u4e0b\u4e00\u4e2a\u62e6\u622a\u5668\uff0c // \u8fd4\u56defalse\u4e0d\u6267\u884c\u4e0b\u4e00\u4e2a\u62e6\u622a\u5668 public boolean preHandle ( HttpServletRequest request , HttpServletResponse response , Object handler ) throws Exception { System . out . println ( \"preHandle\" ); return true ; } // \u5728\u5904\u7406\u65b9\u6cd5\u6267\u884c\u4e4b\u540e\u6267\u884c public void postHandle ( HttpServletRequest request , HttpServletResponse response , Object handler , ModelAndView modelAndView ) throws Exception { System . out . println ( \"postHandle\" ); } // \u5728DispatcherServlet \u4e4b\u540e\u6267\u884c \u6e05\u7406\u5de5\u4f5c public void afterCompletion ( HttpServletRequest request , HttpServletResponse response , Object handler , Exception ex ) throws Exception { System . out . println ( \"afterCompletion\" ); } } 2\u3001\u914d\u7f6e\u62e6\u622a\u5668 <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:mvc= \"http://www.springframework.org/schema/mvc\" xsi:schemaLocation= \" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd \" > <context:component-scan base-package= \"com.pengshiyu.controller\" /> <!-- \u914d\u7f6e\u62e6\u622a\u5668--> <mvc:interceptors> <mvc:interceptor> <!-- \u62e6\u622a\u6240\u6709\u8bf7\u6c42--> <mvc:mapping path= \"/**\" /> <bean class= \"com.pengshiyu.interceptor.MyInterceptor\" ></bean> </mvc:interceptor> </mvc:interceptors> </beans> 3\u3001\u6267\u884c\u987a\u5e8f package com.pengshiyu.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; @Controller public class HelloController { @RequestMapping ( \"/echo\" ) public void echo ( HttpServletResponse response ) throws IOException { System . out . println ( \"echo\" ); response . getWriter (). println ( \"echo\" ); } } preHandle echo postHandle afterCompletion","title":"\u62e6\u622a\u5668"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/26-Spring-MVC/#_10","text":"\u914d\u7f6e <!-- \u914d\u7f6e\u62e6\u622a\u5668--> <mvc:interceptors> <mvc:interceptor> <!-- \u62e6\u622a\u6240\u6709\u8bf7\u6c42--> <mvc:mapping path= \"/**\" /> <bean class= \"com.pengshiyu.interceptor.MyInterceptor\" > <property name= \"allowedUrls\" > <list> <value> login.do </value> </list> </property> </bean> </mvc:interceptor> </mvc:interceptors> \u62e6\u622a\u5668 package com.pengshiyu.interceptor ; import org.springframework.web.servlet.HandlerInterceptor ; import org.springframework.web.servlet.ModelAndView ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.util.List ; public class MyInterceptor implements HandlerInterceptor { private List < String > allowedUrls ; // \u5728\u8bf7\u6c42\u5904\u7406\u7684\u65b9\u6cd5\u6267\u884c\u4e4b\u524d\u6267\u884c\uff0c // \u8fd4\u56detrue\u6267\u884c\u4e0b\u4e00\u4e2a\u62e6\u622a\u5668\uff0c // \u8fd4\u56defalse\u4e0d\u6267\u884c\u4e0b\u4e00\u4e2a\u62e6\u622a\u5668 public boolean preHandle ( HttpServletRequest request , HttpServletResponse response , Object handler ) throws Exception { System . out . println ( \"preHandle\" ); // \u89e3\u51b3\u4e2d\u6587\u6253\u5370\u4e71\u7801\u8f93\u51fa response . setContentType ( \"text/html;charset=utf-8\" ); // \u5224\u65adsession Object user = request . getSession (). getAttribute ( \"user\" ); if ( user != null ){ return true ; } // \u5224\u65ad\u653e\u884c\u8def\u5f84 String url = request . getRequestURL (). toString (); System . out . println ( url ); for ( String temp : allowedUrls ){ if ( url . endsWith ( temp )){ return true ; } } // \u5982\u679c\u6ca1\u6709\u767b\u5f55\u5c31\u91cd\u5b9a\u5411\u5230\u767b\u5f55\u9875\u9762 response . sendRedirect ( \"/login.do\" ); return false ; } // \u5728\u5904\u7406\u65b9\u6cd5\u6267\u884c\u4e4b\u540e\u6267\u884c public void postHandle ( HttpServletRequest request , HttpServletResponse response , Object handler , ModelAndView modelAndView ) throws Exception { System . out . println ( \"postHandle\" ); } // \u5728DispatcherServlet \u4e4b\u540e\u6267\u884c \u6e05\u7406\u5de5\u4f5c public void afterCompletion ( HttpServletRequest request , HttpServletResponse response , Object handler , Exception ex ) throws Exception { System . out . println ( \"afterCompletion\" ); } public List < String > getAllowedUrls () { return allowedUrls ; } public void setAllowedUrls ( List < String > allowedUrls ) { this . allowedUrls = allowedUrls ; } } User \u7c7b package com.pengshiyu.bean ; public class User { private String name ; private String password ; public User () { } public User ( String name , String password ) { this . name = name ; this . password = password ; } public String getPassword () { return password ; } public void setPassword ( String password ) { this . password = password ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"User{\" + \"name='\" + name + '\\'' + \", password='\" + password + '\\'' + '}' ; } } Controller package com.pengshiyu.controller ; import com.pengshiyu.bean.User ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RequestMethod ; import javax.servlet.http.HttpServletResponse ; import javax.servlet.http.HttpSession ; import java.io.IOException ; @Controller public class UserController { @RequestMapping ( \"/userInfo\" ) public void userInfo ( HttpSession session , HttpServletResponse response ) throws IOException { User user = ( User ) session . getAttribute ( \"user\" ); response . getWriter (). println ( user ); } @RequestMapping ( value = \"/login\" , method = RequestMethod . GET ) public String login () throws IOException { return \"/template/login.jsp\" ; } @RequestMapping ( value = \"/login\" , method = RequestMethod . POST ) public void login ( User user , HttpSession session , HttpServletResponse response ) throws IOException { String message = \"\" ; if ( \"root\" . equals ( user . getName ()) && \"123\" . equals ( user . getPassword ())) { message = \"\u767b\u5f55\u6210\u529f\" ; session . setAttribute ( \"user\" , user ); } else { message = \"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\" ; } response . getWriter (). println ( message ); } } \u767b\u5f55\u9875 <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <h2> \u767b\u5f55 </h2> <form action= \"/login.do\" method= \"post\" > <input type= \"text\" name= \"name\" > <input type= \"text\" name= \"password\" > <input type= \"submit\" value= \"\u63d0\u4ea4\" > </form>","title":"\u767b\u5f55\u62e6\u622a\u5668\u5b9e\u73b0"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/27-\u6574\u5408springmvc&spring&mybatis/","text":"\u6574\u5408 SSM \u9879\u76ee\u7ed3\u6784 . \u251c\u2500\u2500 pom . xml \u2514\u2500\u2500 src \u2514\u2500\u2500 main \u251c\u2500\u2500 java \u2502 \u2514\u2500\u2500 com \u2502 \u2514\u2500\u2500 pengshiyu \u2502 \u251c\u2500\u2500 controller \u2502 \u2502 \u2514\u2500\u2500 UserController . java \u2502 \u251c\u2500\u2500 dao \u2502 \u2502 \u251c\u2500\u2500 UserDao . java \u2502 \u2502 \u2514\u2500\u2500 impl \u2502 \u2502 \u2514\u2500\u2500 UserDaoImpl . java \u2502 \u251c\u2500\u2500 interceptor \u2502 \u2502 \u2514\u2500\u2500 MyInterceptor . java \u2502 \u251c\u2500\u2500 service \u2502 \u2502 \u251c\u2500\u2500 UserService . java \u2502 \u2502 \u2514\u2500\u2500 impl \u2502 \u2502 \u2514\u2500\u2500 UserServiceImpl . java \u2502 \u2514\u2500\u2500 vo \u2502 \u2514\u2500\u2500 User . java \u251c\u2500\u2500 resources \u2502 \u251c\u2500\u2500 applicationContext . xml \u2502 \u251c\u2500\u2500 db . properties \u2502 \u251c\u2500\u2500 mappers \u2502 \u2502 \u2514\u2500\u2500 user . mapper . xml \u2502 \u251c\u2500\u2500 mybatis - config . xml \u2502 \u2514\u2500\u2500 spring - mvc . xml \u2514\u2500\u2500 webapp \u251c\u2500\u2500 WEB - INF \u2502 \u2514\u2500\u2500 web . xml \u251c\u2500\u2500 detail . jsp \u251c\u2500\u2500 edit . jsp \u2514\u2500\u2500 list . jsp \u4f9d\u8d56 pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> org.example </groupId> <artifactId> spring-mvc-demo </artifactId> <version> 1.0-SNAPSHOT </version> <build> <plugins> <!-- tomcat7\u63d2\u4ef6 maven \u547d\u4ee4 tomcat7:run \u542f\u52a8\u9879\u76ee--> <plugin> <groupId> org.apache.tomcat.maven </groupId> <artifactId> tomcat7-maven-plugin </artifactId> <version> 2.2 </version> <configuration> <port> 8080 </port> <path> / </path> <uriEncoding> UTF-8 </uriEncoding> <!--\u6dfb\u52a0\u5ffd\u7565war\u5305\u68c0\u67e5\u6807\u7b7e\uff0c\u5219\u53ef\u4ee5\u8ba9tomcat7\uff1arun\u6307\u4ee4\u6b63\u5e38\u542f\u52a8tomcat--> <ignorePackaging> true </ignorePackaging> <contextFile> src/main/webapp/WEB-INF/web.xml </contextFile> <contextReloadable> true </contextReloadable> </configuration> </plugin> </plugins> </build> <dependencies> <!-- https://mvnrepository.com/artifact/org.springframework/spring-core --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-core </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-beans --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-beans </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-context --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-context </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-context-support </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-web --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-web </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-webmvc </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-aop --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-aop </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-expression --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-expression </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/commons-logging/commons-logging --> <dependency> <groupId> commons-logging </groupId> <artifactId> commons-logging </artifactId> <version> 1.2 </version> </dependency> <dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 4.0.1 </version> <scope> provided </scope> </dependency> <dependency> <groupId> taglibs </groupId> <artifactId> standard </artifactId> <version> 1.1.2 </version> </dependency> <dependency> <groupId> jstl </groupId> <artifactId> jstl </artifactId> <version> 1.2 </version> </dependency> <!-- \u6587\u4ef6\u4e0a\u4f20--> <!-- https://mvnrepository.com/artifact/commons-io/commons-io --> <dependency> <groupId> commons-io </groupId> <artifactId> commons-io </artifactId> <version> 2.7 </version> </dependency> <!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --> <dependency> <groupId> commons-fileupload </groupId> <artifactId> commons-fileupload </artifactId> <version> 1.4 </version> </dependency> <!-- JSON--> <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations --> <dependency> <groupId> com.fasterxml.jackson.core </groupId> <artifactId> jackson-annotations </artifactId> <version> 2.11.0 </version> </dependency> <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --> <dependency> <groupId> com.fasterxml.jackson.core </groupId> <artifactId> jackson-databind </artifactId> <version> 2.11.0 </version> </dependency> <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core --> <dependency> <groupId> com.fasterxml.jackson.core </groupId> <artifactId> jackson-core </artifactId> <version> 2.11.0 </version> </dependency> <dependency> <groupId> org.aspectj </groupId> <artifactId> aspectjweaver </artifactId> <version> 1.9.5 </version> </dependency> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis </artifactId> <version> 3.5.4 </version> </dependency> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis-spring </artifactId> <version> 2.0.4 </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-jdbc </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.18 </version> </dependency> </dependencies> </project> \u914d\u7f6e 1\u3001web.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version= \"4.0\" > <!-- Spring--> <context-param> <param-name> contextConfigLocation </param-name> <param-value> classpath:applicationContext.xml </param-value> </context-param> <listener> <listener-class> org.springframework.web.context.ContextLoaderListener </listener-class> </listener> <!-- Spring MVC--> <servlet> <servlet-name> spring-mvc </servlet-name> <servlet-class> org.springframework.web.servlet.DispatcherServlet </servlet-class> <init-param> <param-name> contextConfigLocation </param-name> <param-value> classpath:spring-mvc.xml </param-value> </init-param> <!-- \u8868\u793a\u5bb9\u5668\u5728\u542f\u52a8\u65f6\u7acb\u5373\u52a0\u8f7dservlet --> <load-on-startup> 1 </load-on-startup> </servlet> <servlet-mapping> <servlet-name> spring-mvc </servlet-name> <!-- \u5904\u7406\u6240\u6709URL --> <url-pattern> / </url-pattern> </servlet-mapping> <!-- \u5904\u7406\u4e71\u7801--> <filter> <filter-name> CharacterEncodingFilter </filter-name> <filter-class> org.springframework.web.filter.CharacterEncodingFilter </filter-class> <init-param> <param-name> encoding </param-name> <param-value> utf-8 </param-value> </init-param> </filter> <filter-mapping> <filter-name> CharacterEncodingFilter </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> </web-app> 2\u3001applicationContext.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xmlns:tx= \"http://www.springframework.org/schema/tx\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd \" > <!-- \u8bfb\u53d6\u6570\u636e\u5e93\u914d\u7f6e--> <bean id= \"propertyConfigurer\" class= \"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\" > <property name= \"location\" value= \"classpath:db.properties\" /> </bean> <!-- \u914d\u7f6edataSource--> <bean id= \"dataSource\" class= \"org.springframework.jdbc.datasource.DriverManagerDataSource\" > <property name= \"driverClassName\" value= \"${driver}\" /> <property name= \"url\" value= \"${url}\" /> <property name= \"username\" value= \"${username}\" /> <property name= \"password\" value= \"${password}\" /> </bean> <!-- \u914d\u7f6e\u5de5\u5382--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"dataSource\" /> <property name= \"configLocation\" value= \"classpath:mybatis-config.xml\" /> </bean> <!-- \u7533\u660e\u5f0f\u4e8b\u52a1--> <!-- \u4e8b\u52a1\u7ba1\u7406\u5668--> <bean id= \"txManager\" class= \"org.springframework.jdbc.datasource.DataSourceTransactionManager\" > <property name= \"dataSource\" ref= \"dataSource\" /> </bean> <tx:advice id= \"txAdvice\" transaction-manager= \"txManager\" > <tx:attributes> <tx:method name= \"save\" propagation= \"REQUIRED\" /> <tx:method name= \"get\" read-only= \"true\" /> <tx:method name= \"*\" propagation= \"REQUIRED\" /> </tx:attributes> </tx:advice> <aop:config> <aop:pointcut id= \"pointcut\" expression= \"execution(* com.pengshiyu.service.impl.*.* (..))\" /> <aop:advisor advice-ref= \"txAdvice\" pointcut-ref= \"pointcut\" /> </aop:config> <!-- \u626b\u63cf\u5305\u4e0b\u7684\u6ce8\u89e3--> <context:component-scan base-package= \"com.pengshiyu\" /> </beans> 3\u3001db.properties driver = com . mysql . cj . jdbc . Driver url = jdbc : mysql : // localhost : 3306 / data username = root password = 123456 4\u3001spring-mvc.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\" > <!-- \u626b\u63cf\u5305\u4e0b\u7684\u6ce8\u89e3--> <context:component-scan base-package= \"com.pengshiyu.controller\" /> </beans> 5\u3001mybatis-config.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <configuration> <typeAliases> <package name= \"com.pengshiyu.vo\" /> </typeAliases> <mappers> <mapper resource= \"mappers/user.mapper.xml\" /> </mappers> </configuration> 6\u3001user.mapper.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <mapper namespace= \"com.pengshiyu.vo.user.mapper\" > <!-- \u521b\u5efausers\u8868 create table users( id int PRIMARY key auto_increment, name varchar(20), password varchar(20) ) \u63d2\u5165\u6d4b\u8bd5\u6570\u636e insert into users(name, `password`) values(\"\u5c0f\u660e\", \"123456\"); insert into users(name, `password`) values(\"\u5c0f\u738b\", \"123457\"); insert into users(name, `password`) values(\"\u5c0f\u8d75\", \"123458\"); insert into users(name, `password`) values(\"\u5c0f\u56db\", \"123459\"); --> <select id= \"selectList\" resultType= \"User\" > select * from users </select> <select id= \"selectOne\" resultType= \"User\" > select * from users where id = #{id} </select> <!-- \u81ea\u589e\u4e3b\u952e\u5c01\u88c5\u5230\u4e86\u5bf9\u8c61\u7684id\u5c5e\u6027\u4e0a --> <insert id= \"insert\" useGeneratedKeys= \"true\" keyProperty= \"id\" > insert into users(name, password) values(#{name}, #{password}) </insert> <delete id= \"delete\" > delete from users where id = #{id} </delete> <update id= \"update\" > update users set name = #{name}, password = #{password} where id = #{id} </update> </mapper> \u5b9e\u4f53\u7c7b package com.pengshiyu.vo ; public class User { private int id ; private String name ; private String password ; public User ( int id , String name , String password ) { this . id = id ; this . name = name ; this . password = password ; } public User () { } public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } public String getPassword () { return password ; } public void setPassword ( String password ) { this . password = password ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"User{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", password='\" + password + '\\'' + '}' ; } } Dao package com.pengshiyu.dao ; import com.pengshiyu.vo.User ; import java.util.List ; public interface UserDao { public List < User > list (); public User detail ( int id ); public int delete ( int id ); public int update ( User user ); public int insert ( User user ); } \u5b9e\u73b0\u7c7b package com.pengshiyu.dao.impl ; import com.pengshiyu.dao.UserDao ; import com.pengshiyu.vo.User ; import org.apache.ibatis.session.SqlSessionFactory ; import org.mybatis.spring.support.SqlSessionDaoSupport ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.stereotype.Repository ; import java.util.List ; @Repository ( \"userDao\" ) public class UserDaoImpl extends SqlSessionDaoSupport implements UserDao { @Autowired @Override public void setSqlSessionFactory ( SqlSessionFactory sqlSessionFactory ) { super . setSqlSessionFactory ( sqlSessionFactory ); } public List < User > list () { return getSqlSession (). selectList ( \"com.pengshiyu.vo.user.mapper.selectList\" ); } public User detail ( int id ) { return getSqlSession (). selectOne ( \"com.pengshiyu.vo.user.mapper.selectOne\" , id ); } public int delete ( int id ) { return getSqlSession (). delete ( \"com.pengshiyu.vo.user.mapper.delete\" , id ); } public int update ( User user ) { return getSqlSession (). update ( \"com.pengshiyu.vo.user.mapper.update\" , user ); } public int insert ( User user ) { return getSqlSession (). insert ( \"com.pengshiyu.vo.user.mapper.insert\" , user ); } } Service package com.pengshiyu.service ; import com.pengshiyu.vo.User ; import java.util.List ; public interface UserService { public List < User > list (); public User detail ( int id ); public int delete ( int id ); public int update ( User user ); public int insert ( User user ); } \u5b9e\u73b0\u7c7b package com.pengshiyu.service.impl ; import com.pengshiyu.dao.UserDao ; import com.pengshiyu.service.UserService ; import com.pengshiyu.vo.User ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.stereotype.Service ; import java.util.List ; @Service ( \"userService\" ) public class UserServiceImpl implements UserService { @Autowired private UserDao userDao ; public void setUserDao ( UserDao userDao ) { this . userDao = userDao ; } public List < User > list () { return userDao . list (); } public User detail ( int id ) { return userDao . detail ( id ); } public int delete ( int id ) { return userDao . delete ( id ); } public int update ( User user ) { return userDao . update ( user ); } public int insert ( User user ) { return userDao . insert ( user ); } } Controller package com.pengshiyu.controller ; import com.pengshiyu.service.UserService ; import com.pengshiyu.vo.User ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.stereotype.Controller ; import org.springframework.ui.ModelMap ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RequestMethod ; import java.io.IOException ; import java.util.List ; @Controller @RequestMapping ( \"/user\" ) public class UserController { @Autowired private UserService userService ; public void setUserService ( UserService userService ) { this . userService = userService ; } @RequestMapping ( \"/list\" ) public String list ( ModelMap modelMap ) throws IOException { List < User > list = userService . list (); System . out . println ( list ); modelMap . addAttribute ( \"list\" , list ); return \"/list.jsp\" ; } @RequestMapping ( \"/detail\" ) public String detail ( int id , ModelMap modelMap ) throws IOException { User user = userService . detail ( id ); modelMap . addAttribute ( \"user\" , user ); return \"/detail.jsp\" ; } @RequestMapping ( \"/update\" ) public String update ( int id , ModelMap modelMap ) throws IOException { User user = userService . detail ( id ); modelMap . addAttribute ( \"title\" , \"\u4fee\u6539\" ); modelMap . addAttribute ( \"user\" , user ); return \"/edit.jsp\" ; } @RequestMapping ( \"/add\" ) public String add ( ModelMap modelMap ) throws IOException { User user = new User (); modelMap . addAttribute ( \"title\" , \"\u6dfb\u52a0\" ); modelMap . addAttribute ( \"user\" , user ); return \"/edit.jsp\" ; } @RequestMapping ( \"/delete\" ) public String delete ( int id ) throws IOException { userService . delete ( id ); return \"redirect:list\" ; } @RequestMapping ( value = \"/edit\" , method = RequestMethod . POST ) public String edit ( User user , ModelMap modelMap ) throws IOException { if ( user . getId () != 0 ) { userService . update ( user ); } else { userService . insert ( user ); } return \"redirect:detail?id=\" + user . getId (); } } \u62e6\u622a\u5668 \u6b64\u9879\u76ee\u4e2d\u5e76\u6ca1\u6709\u914d\u7f6e\u751f\u6548 package com.pengshiyu.interceptor ; import org.springframework.web.servlet.HandlerInterceptor ; import org.springframework.web.servlet.ModelAndView ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.util.List ; public class MyInterceptor implements HandlerInterceptor { private List < String > allowedUrls ; // \u5728\u8bf7\u6c42\u5904\u7406\u7684\u65b9\u6cd5\u6267\u884c\u4e4b\u524d\u6267\u884c\uff0c // \u8fd4\u56detrue\u6267\u884c\u4e0b\u4e00\u4e2a\u62e6\u622a\u5668\uff0c // \u8fd4\u56defalse\u4e0d\u6267\u884c\u4e0b\u4e00\u4e2a\u62e6\u622a\u5668 public boolean preHandle ( HttpServletRequest request , HttpServletResponse response , Object handler ) throws Exception { System . out . println ( \"preHandle\" ); // \u89e3\u51b3\u4e2d\u6587\u6253\u5370\u4e71\u7801\u8f93\u51fa response . setContentType ( \"text/html;charset=utf-8\" ); // \u5224\u65adsession Object user = request . getSession (). getAttribute ( \"user\" ); if ( user != null ){ return true ; } // \u5224\u65ad\u653e\u884c\u8def\u5f84 String url = request . getRequestURL (). toString (); System . out . println ( url ); for ( String temp : allowedUrls ){ if ( url . endsWith ( temp )){ return true ; } } // \u5982\u679c\u6ca1\u6709\u767b\u5f55\u5c31\u91cd\u5b9a\u5411\u5230\u767b\u5f55\u9875\u9762 response . sendRedirect ( \"/login.do\" ); return false ; } // \u5728\u5904\u7406\u65b9\u6cd5\u6267\u884c\u4e4b\u540e\u6267\u884c public void postHandle ( HttpServletRequest request , HttpServletResponse response , Object handler , ModelAndView modelAndView ) throws Exception { System . out . println ( \"postHandle\" ); } // \u5728DispatcherServlet \u4e4b\u540e\u6267\u884c \u6e05\u7406\u5de5\u4f5c public void afterCompletion ( HttpServletRequest request , HttpServletResponse response , Object handler , Exception ex ) throws Exception { System . out . println ( \"afterCompletion\" ); } public List < String > getAllowedUrls () { return allowedUrls ; } public void setAllowedUrls ( List < String > allowedUrls ) { this . allowedUrls = allowedUrls ; } } \u9875\u9762 list.jsp <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <%@ taglib prefix = \"c\" uri = \"http://java.sun.com/jsp/jstl/core\" %> <h2> list </h2> <button> <a href= \"/user/add\" > \u6dfb\u52a0 </a> </button> <table> <tr> <th> \u7f16\u53f7 </th> <th> \u59d3\u540d </th> <th> \u5bc6\u7801 </th> <th> \u8be6\u7ec6 </th> <th> \u5220\u9664 </th> </tr> <c:forEach items= \"${list}\" var= \"item\" > <tr> <td> ${item.id} </td> <td> ${item.name} </td> <td> ${item.password} </td> <td><a href= \"/user/detail?id=${item.id}\" > \u8be6\u7ec6 </a></td> <td><a href= \"/user/update?id=${item.id}\" > \u4fee\u6539 </a></td> <td><a href= \"/user/delete?id=${item.id}\" > \u5220\u9664 </a></td> </tr> </c:forEach> </table> detail.jsp <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <%@ taglib prefix = \"c\" uri = \"http://java.sun.com/jsp/jstl/core\" %> <h2> detail </h2> <p> <a href= \"/user/list\" > \u8fd4\u56de\u5217\u8868 </a> </p> <button><a href= \"/user/update?id=${user.id}\" > \u7f16\u8f91 </a></button> <p> id: ${user.id} </p> <p> name: ${user.name} </p> <p> password: ${user.password} </p> edit.jsp <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <%@ taglib prefix = \"c\" uri = \"http://java.sun.com/jsp/jstl/core\" %> <h2> ${title} </h2> <p> <a href= \"/user/list\" > \u8fd4\u56de\u5217\u8868 </a> </p> <form action= \"/user/edit\" method= \"POST\" > <input type= \"text\" name= \"id\" value= \"${user.id}\" hidden /> <p> <label for= \"name\" > name </label> <input id= \"\" type= \"text\" name= \"name\" value= \"${user.name}\" /> </p> <p> <label for= \"password\" > password </label> <input type= \"text\" name= \"password\" value= \"${user.password}\" /> </p> <p> <input type= \"submit\" /> </p> </form> \u9879\u76ee\u4ee3\u7801 https://gitee.com/mouday/spring-springmvc-mybatis-demo","title":"\u6574\u5408 SSM"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/27-\u6574\u5408springmvc&spring&mybatis/#ssm","text":"\u9879\u76ee\u7ed3\u6784 . \u251c\u2500\u2500 pom . xml \u2514\u2500\u2500 src \u2514\u2500\u2500 main \u251c\u2500\u2500 java \u2502 \u2514\u2500\u2500 com \u2502 \u2514\u2500\u2500 pengshiyu \u2502 \u251c\u2500\u2500 controller \u2502 \u2502 \u2514\u2500\u2500 UserController . java \u2502 \u251c\u2500\u2500 dao \u2502 \u2502 \u251c\u2500\u2500 UserDao . java \u2502 \u2502 \u2514\u2500\u2500 impl \u2502 \u2502 \u2514\u2500\u2500 UserDaoImpl . java \u2502 \u251c\u2500\u2500 interceptor \u2502 \u2502 \u2514\u2500\u2500 MyInterceptor . java \u2502 \u251c\u2500\u2500 service \u2502 \u2502 \u251c\u2500\u2500 UserService . java \u2502 \u2502 \u2514\u2500\u2500 impl \u2502 \u2502 \u2514\u2500\u2500 UserServiceImpl . java \u2502 \u2514\u2500\u2500 vo \u2502 \u2514\u2500\u2500 User . java \u251c\u2500\u2500 resources \u2502 \u251c\u2500\u2500 applicationContext . xml \u2502 \u251c\u2500\u2500 db . properties \u2502 \u251c\u2500\u2500 mappers \u2502 \u2502 \u2514\u2500\u2500 user . mapper . xml \u2502 \u251c\u2500\u2500 mybatis - config . xml \u2502 \u2514\u2500\u2500 spring - mvc . xml \u2514\u2500\u2500 webapp \u251c\u2500\u2500 WEB - INF \u2502 \u2514\u2500\u2500 web . xml \u251c\u2500\u2500 detail . jsp \u251c\u2500\u2500 edit . jsp \u2514\u2500\u2500 list . jsp","title":"\u6574\u5408 SSM"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/27-\u6574\u5408springmvc&spring&mybatis/#_1","text":"pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> org.example </groupId> <artifactId> spring-mvc-demo </artifactId> <version> 1.0-SNAPSHOT </version> <build> <plugins> <!-- tomcat7\u63d2\u4ef6 maven \u547d\u4ee4 tomcat7:run \u542f\u52a8\u9879\u76ee--> <plugin> <groupId> org.apache.tomcat.maven </groupId> <artifactId> tomcat7-maven-plugin </artifactId> <version> 2.2 </version> <configuration> <port> 8080 </port> <path> / </path> <uriEncoding> UTF-8 </uriEncoding> <!--\u6dfb\u52a0\u5ffd\u7565war\u5305\u68c0\u67e5\u6807\u7b7e\uff0c\u5219\u53ef\u4ee5\u8ba9tomcat7\uff1arun\u6307\u4ee4\u6b63\u5e38\u542f\u52a8tomcat--> <ignorePackaging> true </ignorePackaging> <contextFile> src/main/webapp/WEB-INF/web.xml </contextFile> <contextReloadable> true </contextReloadable> </configuration> </plugin> </plugins> </build> <dependencies> <!-- https://mvnrepository.com/artifact/org.springframework/spring-core --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-core </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-beans --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-beans </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-context --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-context </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-context-support </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-web --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-web </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-webmvc </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-aop --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-aop </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-expression --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-expression </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/commons-logging/commons-logging --> <dependency> <groupId> commons-logging </groupId> <artifactId> commons-logging </artifactId> <version> 1.2 </version> </dependency> <dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 4.0.1 </version> <scope> provided </scope> </dependency> <dependency> <groupId> taglibs </groupId> <artifactId> standard </artifactId> <version> 1.1.2 </version> </dependency> <dependency> <groupId> jstl </groupId> <artifactId> jstl </artifactId> <version> 1.2 </version> </dependency> <!-- \u6587\u4ef6\u4e0a\u4f20--> <!-- https://mvnrepository.com/artifact/commons-io/commons-io --> <dependency> <groupId> commons-io </groupId> <artifactId> commons-io </artifactId> <version> 2.7 </version> </dependency> <!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --> <dependency> <groupId> commons-fileupload </groupId> <artifactId> commons-fileupload </artifactId> <version> 1.4 </version> </dependency> <!-- JSON--> <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations --> <dependency> <groupId> com.fasterxml.jackson.core </groupId> <artifactId> jackson-annotations </artifactId> <version> 2.11.0 </version> </dependency> <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --> <dependency> <groupId> com.fasterxml.jackson.core </groupId> <artifactId> jackson-databind </artifactId> <version> 2.11.0 </version> </dependency> <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core --> <dependency> <groupId> com.fasterxml.jackson.core </groupId> <artifactId> jackson-core </artifactId> <version> 2.11.0 </version> </dependency> <dependency> <groupId> org.aspectj </groupId> <artifactId> aspectjweaver </artifactId> <version> 1.9.5 </version> </dependency> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis </artifactId> <version> 3.5.4 </version> </dependency> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis-spring </artifactId> <version> 2.0.4 </version> </dependency> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-jdbc </artifactId> <version> 5.2.6.RELEASE </version> </dependency> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.18 </version> </dependency> </dependencies> </project>","title":"\u4f9d\u8d56"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/27-\u6574\u5408springmvc&spring&mybatis/#_2","text":"1\u3001web.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <web-app xmlns= \"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\" version= \"4.0\" > <!-- Spring--> <context-param> <param-name> contextConfigLocation </param-name> <param-value> classpath:applicationContext.xml </param-value> </context-param> <listener> <listener-class> org.springframework.web.context.ContextLoaderListener </listener-class> </listener> <!-- Spring MVC--> <servlet> <servlet-name> spring-mvc </servlet-name> <servlet-class> org.springframework.web.servlet.DispatcherServlet </servlet-class> <init-param> <param-name> contextConfigLocation </param-name> <param-value> classpath:spring-mvc.xml </param-value> </init-param> <!-- \u8868\u793a\u5bb9\u5668\u5728\u542f\u52a8\u65f6\u7acb\u5373\u52a0\u8f7dservlet --> <load-on-startup> 1 </load-on-startup> </servlet> <servlet-mapping> <servlet-name> spring-mvc </servlet-name> <!-- \u5904\u7406\u6240\u6709URL --> <url-pattern> / </url-pattern> </servlet-mapping> <!-- \u5904\u7406\u4e71\u7801--> <filter> <filter-name> CharacterEncodingFilter </filter-name> <filter-class> org.springframework.web.filter.CharacterEncodingFilter </filter-class> <init-param> <param-name> encoding </param-name> <param-value> utf-8 </param-value> </init-param> </filter> <filter-mapping> <filter-name> CharacterEncodingFilter </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> </web-app> 2\u3001applicationContext.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xmlns:tx= \"http://www.springframework.org/schema/tx\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd \" > <!-- \u8bfb\u53d6\u6570\u636e\u5e93\u914d\u7f6e--> <bean id= \"propertyConfigurer\" class= \"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\" > <property name= \"location\" value= \"classpath:db.properties\" /> </bean> <!-- \u914d\u7f6edataSource--> <bean id= \"dataSource\" class= \"org.springframework.jdbc.datasource.DriverManagerDataSource\" > <property name= \"driverClassName\" value= \"${driver}\" /> <property name= \"url\" value= \"${url}\" /> <property name= \"username\" value= \"${username}\" /> <property name= \"password\" value= \"${password}\" /> </bean> <!-- \u914d\u7f6e\u5de5\u5382--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"dataSource\" /> <property name= \"configLocation\" value= \"classpath:mybatis-config.xml\" /> </bean> <!-- \u7533\u660e\u5f0f\u4e8b\u52a1--> <!-- \u4e8b\u52a1\u7ba1\u7406\u5668--> <bean id= \"txManager\" class= \"org.springframework.jdbc.datasource.DataSourceTransactionManager\" > <property name= \"dataSource\" ref= \"dataSource\" /> </bean> <tx:advice id= \"txAdvice\" transaction-manager= \"txManager\" > <tx:attributes> <tx:method name= \"save\" propagation= \"REQUIRED\" /> <tx:method name= \"get\" read-only= \"true\" /> <tx:method name= \"*\" propagation= \"REQUIRED\" /> </tx:attributes> </tx:advice> <aop:config> <aop:pointcut id= \"pointcut\" expression= \"execution(* com.pengshiyu.service.impl.*.* (..))\" /> <aop:advisor advice-ref= \"txAdvice\" pointcut-ref= \"pointcut\" /> </aop:config> <!-- \u626b\u63cf\u5305\u4e0b\u7684\u6ce8\u89e3--> <context:component-scan base-package= \"com.pengshiyu\" /> </beans> 3\u3001db.properties driver = com . mysql . cj . jdbc . Driver url = jdbc : mysql : // localhost : 3306 / data username = root password = 123456 4\u3001spring-mvc.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\" > <!-- \u626b\u63cf\u5305\u4e0b\u7684\u6ce8\u89e3--> <context:component-scan base-package= \"com.pengshiyu.controller\" /> </beans> 5\u3001mybatis-config.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <configuration> <typeAliases> <package name= \"com.pengshiyu.vo\" /> </typeAliases> <mappers> <mapper resource= \"mappers/user.mapper.xml\" /> </mappers> </configuration> 6\u3001user.mapper.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <mapper namespace= \"com.pengshiyu.vo.user.mapper\" > <!-- \u521b\u5efausers\u8868 create table users( id int PRIMARY key auto_increment, name varchar(20), password varchar(20) ) \u63d2\u5165\u6d4b\u8bd5\u6570\u636e insert into users(name, `password`) values(\"\u5c0f\u660e\", \"123456\"); insert into users(name, `password`) values(\"\u5c0f\u738b\", \"123457\"); insert into users(name, `password`) values(\"\u5c0f\u8d75\", \"123458\"); insert into users(name, `password`) values(\"\u5c0f\u56db\", \"123459\"); --> <select id= \"selectList\" resultType= \"User\" > select * from users </select> <select id= \"selectOne\" resultType= \"User\" > select * from users where id = #{id} </select> <!-- \u81ea\u589e\u4e3b\u952e\u5c01\u88c5\u5230\u4e86\u5bf9\u8c61\u7684id\u5c5e\u6027\u4e0a --> <insert id= \"insert\" useGeneratedKeys= \"true\" keyProperty= \"id\" > insert into users(name, password) values(#{name}, #{password}) </insert> <delete id= \"delete\" > delete from users where id = #{id} </delete> <update id= \"update\" > update users set name = #{name}, password = #{password} where id = #{id} </update> </mapper>","title":"\u914d\u7f6e"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/27-\u6574\u5408springmvc&spring&mybatis/#_3","text":"package com.pengshiyu.vo ; public class User { private int id ; private String name ; private String password ; public User ( int id , String name , String password ) { this . id = id ; this . name = name ; this . password = password ; } public User () { } public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } public String getPassword () { return password ; } public void setPassword ( String password ) { this . password = password ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"User{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", password='\" + password + '\\'' + '}' ; } }","title":"\u5b9e\u4f53\u7c7b"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/27-\u6574\u5408springmvc&spring&mybatis/#dao","text":"package com.pengshiyu.dao ; import com.pengshiyu.vo.User ; import java.util.List ; public interface UserDao { public List < User > list (); public User detail ( int id ); public int delete ( int id ); public int update ( User user ); public int insert ( User user ); } \u5b9e\u73b0\u7c7b package com.pengshiyu.dao.impl ; import com.pengshiyu.dao.UserDao ; import com.pengshiyu.vo.User ; import org.apache.ibatis.session.SqlSessionFactory ; import org.mybatis.spring.support.SqlSessionDaoSupport ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.stereotype.Repository ; import java.util.List ; @Repository ( \"userDao\" ) public class UserDaoImpl extends SqlSessionDaoSupport implements UserDao { @Autowired @Override public void setSqlSessionFactory ( SqlSessionFactory sqlSessionFactory ) { super . setSqlSessionFactory ( sqlSessionFactory ); } public List < User > list () { return getSqlSession (). selectList ( \"com.pengshiyu.vo.user.mapper.selectList\" ); } public User detail ( int id ) { return getSqlSession (). selectOne ( \"com.pengshiyu.vo.user.mapper.selectOne\" , id ); } public int delete ( int id ) { return getSqlSession (). delete ( \"com.pengshiyu.vo.user.mapper.delete\" , id ); } public int update ( User user ) { return getSqlSession (). update ( \"com.pengshiyu.vo.user.mapper.update\" , user ); } public int insert ( User user ) { return getSqlSession (). insert ( \"com.pengshiyu.vo.user.mapper.insert\" , user ); } }","title":"Dao"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/27-\u6574\u5408springmvc&spring&mybatis/#service","text":"package com.pengshiyu.service ; import com.pengshiyu.vo.User ; import java.util.List ; public interface UserService { public List < User > list (); public User detail ( int id ); public int delete ( int id ); public int update ( User user ); public int insert ( User user ); } \u5b9e\u73b0\u7c7b package com.pengshiyu.service.impl ; import com.pengshiyu.dao.UserDao ; import com.pengshiyu.service.UserService ; import com.pengshiyu.vo.User ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.stereotype.Service ; import java.util.List ; @Service ( \"userService\" ) public class UserServiceImpl implements UserService { @Autowired private UserDao userDao ; public void setUserDao ( UserDao userDao ) { this . userDao = userDao ; } public List < User > list () { return userDao . list (); } public User detail ( int id ) { return userDao . detail ( id ); } public int delete ( int id ) { return userDao . delete ( id ); } public int update ( User user ) { return userDao . update ( user ); } public int insert ( User user ) { return userDao . insert ( user ); } }","title":"Service"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/27-\u6574\u5408springmvc&spring&mybatis/#controller","text":"package com.pengshiyu.controller ; import com.pengshiyu.service.UserService ; import com.pengshiyu.vo.User ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.stereotype.Controller ; import org.springframework.ui.ModelMap ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RequestMethod ; import java.io.IOException ; import java.util.List ; @Controller @RequestMapping ( \"/user\" ) public class UserController { @Autowired private UserService userService ; public void setUserService ( UserService userService ) { this . userService = userService ; } @RequestMapping ( \"/list\" ) public String list ( ModelMap modelMap ) throws IOException { List < User > list = userService . list (); System . out . println ( list ); modelMap . addAttribute ( \"list\" , list ); return \"/list.jsp\" ; } @RequestMapping ( \"/detail\" ) public String detail ( int id , ModelMap modelMap ) throws IOException { User user = userService . detail ( id ); modelMap . addAttribute ( \"user\" , user ); return \"/detail.jsp\" ; } @RequestMapping ( \"/update\" ) public String update ( int id , ModelMap modelMap ) throws IOException { User user = userService . detail ( id ); modelMap . addAttribute ( \"title\" , \"\u4fee\u6539\" ); modelMap . addAttribute ( \"user\" , user ); return \"/edit.jsp\" ; } @RequestMapping ( \"/add\" ) public String add ( ModelMap modelMap ) throws IOException { User user = new User (); modelMap . addAttribute ( \"title\" , \"\u6dfb\u52a0\" ); modelMap . addAttribute ( \"user\" , user ); return \"/edit.jsp\" ; } @RequestMapping ( \"/delete\" ) public String delete ( int id ) throws IOException { userService . delete ( id ); return \"redirect:list\" ; } @RequestMapping ( value = \"/edit\" , method = RequestMethod . POST ) public String edit ( User user , ModelMap modelMap ) throws IOException { if ( user . getId () != 0 ) { userService . update ( user ); } else { userService . insert ( user ); } return \"redirect:detail?id=\" + user . getId (); } }","title":"Controller"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/27-\u6574\u5408springmvc&spring&mybatis/#_4","text":"\u6b64\u9879\u76ee\u4e2d\u5e76\u6ca1\u6709\u914d\u7f6e\u751f\u6548 package com.pengshiyu.interceptor ; import org.springframework.web.servlet.HandlerInterceptor ; import org.springframework.web.servlet.ModelAndView ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.util.List ; public class MyInterceptor implements HandlerInterceptor { private List < String > allowedUrls ; // \u5728\u8bf7\u6c42\u5904\u7406\u7684\u65b9\u6cd5\u6267\u884c\u4e4b\u524d\u6267\u884c\uff0c // \u8fd4\u56detrue\u6267\u884c\u4e0b\u4e00\u4e2a\u62e6\u622a\u5668\uff0c // \u8fd4\u56defalse\u4e0d\u6267\u884c\u4e0b\u4e00\u4e2a\u62e6\u622a\u5668 public boolean preHandle ( HttpServletRequest request , HttpServletResponse response , Object handler ) throws Exception { System . out . println ( \"preHandle\" ); // \u89e3\u51b3\u4e2d\u6587\u6253\u5370\u4e71\u7801\u8f93\u51fa response . setContentType ( \"text/html;charset=utf-8\" ); // \u5224\u65adsession Object user = request . getSession (). getAttribute ( \"user\" ); if ( user != null ){ return true ; } // \u5224\u65ad\u653e\u884c\u8def\u5f84 String url = request . getRequestURL (). toString (); System . out . println ( url ); for ( String temp : allowedUrls ){ if ( url . endsWith ( temp )){ return true ; } } // \u5982\u679c\u6ca1\u6709\u767b\u5f55\u5c31\u91cd\u5b9a\u5411\u5230\u767b\u5f55\u9875\u9762 response . sendRedirect ( \"/login.do\" ); return false ; } // \u5728\u5904\u7406\u65b9\u6cd5\u6267\u884c\u4e4b\u540e\u6267\u884c public void postHandle ( HttpServletRequest request , HttpServletResponse response , Object handler , ModelAndView modelAndView ) throws Exception { System . out . println ( \"postHandle\" ); } // \u5728DispatcherServlet \u4e4b\u540e\u6267\u884c \u6e05\u7406\u5de5\u4f5c public void afterCompletion ( HttpServletRequest request , HttpServletResponse response , Object handler , Exception ex ) throws Exception { System . out . println ( \"afterCompletion\" ); } public List < String > getAllowedUrls () { return allowedUrls ; } public void setAllowedUrls ( List < String > allowedUrls ) { this . allowedUrls = allowedUrls ; } }","title":"\u62e6\u622a\u5668"},{"location":"Java/Java\u5f00\u53d1\u6846\u67b6/27-\u6574\u5408springmvc&spring&mybatis/#_5","text":"list.jsp <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <%@ taglib prefix = \"c\" uri = \"http://java.sun.com/jsp/jstl/core\" %> <h2> list </h2> <button> <a href= \"/user/add\" > \u6dfb\u52a0 </a> </button> <table> <tr> <th> \u7f16\u53f7 </th> <th> \u59d3\u540d </th> <th> \u5bc6\u7801 </th> <th> \u8be6\u7ec6 </th> <th> \u5220\u9664 </th> </tr> <c:forEach items= \"${list}\" var= \"item\" > <tr> <td> ${item.id} </td> <td> ${item.name} </td> <td> ${item.password} </td> <td><a href= \"/user/detail?id=${item.id}\" > \u8be6\u7ec6 </a></td> <td><a href= \"/user/update?id=${item.id}\" > \u4fee\u6539 </a></td> <td><a href= \"/user/delete?id=${item.id}\" > \u5220\u9664 </a></td> </tr> </c:forEach> </table> detail.jsp <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <%@ taglib prefix = \"c\" uri = \"http://java.sun.com/jsp/jstl/core\" %> <h2> detail </h2> <p> <a href= \"/user/list\" > \u8fd4\u56de\u5217\u8868 </a> </p> <button><a href= \"/user/update?id=${user.id}\" > \u7f16\u8f91 </a></button> <p> id: ${user.id} </p> <p> name: ${user.name} </p> <p> password: ${user.password} </p> edit.jsp <%@ page language = \"java\" contentType = \"text/html; charset=UTF-8\" pageEncoding = \"UTF-8\" %> <%@ taglib prefix = \"c\" uri = \"http://java.sun.com/jsp/jstl/core\" %> <h2> ${title} </h2> <p> <a href= \"/user/list\" > \u8fd4\u56de\u5217\u8868 </a> </p> <form action= \"/user/edit\" method= \"POST\" > <input type= \"text\" name= \"id\" value= \"${user.id}\" hidden /> <p> <label for= \"name\" > name </label> <input id= \"\" type= \"text\" name= \"name\" value= \"${user.name}\" /> </p> <p> <label for= \"password\" > password </label> <input type= \"text\" name= \"password\" value= \"${user.password}\" /> </p> <p> <input type= \"submit\" /> </p> </form> \u9879\u76ee\u4ee3\u7801 https://gitee.com/mouday/spring-springmvc-mybatis-demo","title":"\u9875\u9762"},{"location":"Java/Java\u6559\u7a0b\u7b14\u8bb0/\u65e5\u671f\u4e0e\u65f6\u95f4/\u57fa\u672c\u6982\u5ff5/","text":"\u57fa\u672c\u6982\u5ff5 \u539f\u6587\uff1a https://www.liaoxuefeng.com/wiki/1252599548343744/1298613246361634 1\u3001\u65e5\u671f\uff1a \u6307\u67d0\u4e00\u5929\uff0c\u79bb\u6563\u7684 2019 - 11 - 20 2\u3001\u65f6\u95f4\uff1a \u4e0d\u5e26\u65e5\u671f\u7684\u65f6\u95f4\uff1a \u65e0\u6cd5\u786e\u5b9a\u4e00\u4e2a\u552f\u4e00\u65f6\u523b 12 : 30 : 59 \u5e26\u65e5\u671f\u7684\u65f6\u95f4\uff1a\u80fd\u552f\u4e00\u786e\u5b9a\u67d0\u4e2a\u65f6\u523b 2020 - 1 - 1 20 : 21 : 59 3\u3001\u672c\u5730\u65f6\u95f4 \u4e0d\u540c\u7684\u65f6\u533a\uff0c\u5728\u540c\u4e00\u65f6\u523b\uff0c\u672c\u5730\u65f6\u95f4\u662f\u4e0d\u540c\u7684 \u5149\u9760\u672c\u5730\u65f6\u95f4\u8fd8\u65e0\u6cd5\u552f\u4e00\u786e\u5b9a\u4e00\u4e2a\u51c6\u786e\u7684\u65f6\u523b 4\u3001\u65f6\u533a \u5168\u7403\u4e00\u5171\u5206\u4e3a 24 \u4e2a\u65f6\u533a \u6807\u51c6\u65f6\u533a\uff1a\u4f26\u6566\u6240\u5728\u7684\u65f6\u533a \u5317\u4eac\u6240\u5728\u7684\u65f6\u533a\u662f\u4e1c\u516b\u533a 5\u3001\u8868\u793a\u65b9\u5f0f\uff1a GMT \u6216\u8005 UTC \u52a0\u65f6\u533a\u504f\u79fb GMT + 08 : 00 \u6216\u8005 UTC + 08 : 00 \u8868\u793a\u4e1c\u516b\u533a CST\uff08\u4e0d\u63a8\u8350\uff0c\u5bb9\u6613\u6df7\u6dc6\uff09 China Standard Time \u4e2d\u56fd\u6807\u51c6\u65f6\u95f4 Central Standard Time USA \u7f8e\u56fd\u4e2d\u90e8\u65f6\u95f4 \u4ee5\u6d32\uff0f\u57ce\u5e02\u8868\u793a Asia / Shanghai \uff0c\u8868\u793a\u4e0a\u6d77\u6240\u5728\u5730\u7684\u65f6\u533a 6\u3001\u590f\u4ee4\u65f6 \u590f\u5929\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u628a\u65f6\u95f4\u5f80\u540e\u62e8 1 \u5c0f\u65f6\uff0c \u590f\u5929\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u518d\u628a\u65f6\u95f4\u5f80\u524d\u62e8 1 \u5c0f\u65f6 7\u3001\u672c\u5730\u5316 Locale \u8868\u793a\u4e00\u4e2a\u56fd\u5bb6\u6216\u5730\u533a\u7684\u65e5\u671f\u3001\u65f6\u95f4\u3001\u6570\u5b57\u3001\u8d27\u5e01\u7b49\u683c\u5f0f \u6784\u6210\uff1a\u8bed\u8a00_\u56fd\u5bb6\u7684\u5b57\u6bcd\u7f29\u5199 \u8bed\u8a00\u4f7f\u7528\u5c0f\u5199\uff0c\u56fd\u5bb6\u4f7f\u7528\u5927\u5199\u3002 zh_CN \u8868\u793a\u4e2d\u6587 + \u4e2d\u56fd en_US \u8868\u793a\u82f1\u6587 + \u7f8e\u56fd \u65e5\u671f Locale\uff0c\u4e2d\u56fd\u548c\u7f8e\u56fd\u7684\u8868\u793a\u65b9\u5f0f\u5982\u4e0b\uff1a zh_CN \uff1a 2016 - 11 - 30 en_US \uff1a 11 / 30 / 2016 \u5c0f\u7ed3 \u6982\u5ff5\uff1a\u65e5\u671f\u3001\u65f6\u95f4\u3001\u65f6\u523b \u7531\u4e8e\u590f\u4ee4\u65f6\u7684\u5b58\u5728\uff0c\u540c\u4e00\u5730\u533a\u7528 GMT/UTC \u548c\u57ce\u5e02\u8868\u793a\u7684\u65f6\u533a\u53ef\u80fd\u5bfc\u81f4\u65f6\u95f4\u4e0d\u540c","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"Java/Java\u6559\u7a0b\u7b14\u8bb0/\u65e5\u671f\u4e0e\u65f6\u95f4/\u57fa\u672c\u6982\u5ff5/#_1","text":"\u539f\u6587\uff1a https://www.liaoxuefeng.com/wiki/1252599548343744/1298613246361634","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"Java/Java\u6559\u7a0b\u7b14\u8bb0/\u65e5\u671f\u4e0e\u65f6\u95f4/\u57fa\u672c\u6982\u5ff5/#1","text":"\u6307\u67d0\u4e00\u5929\uff0c\u79bb\u6563\u7684 2019 - 11 - 20","title":"1\u3001\u65e5\u671f\uff1a"},{"location":"Java/Java\u6559\u7a0b\u7b14\u8bb0/\u65e5\u671f\u4e0e\u65f6\u95f4/\u57fa\u672c\u6982\u5ff5/#2","text":"\u4e0d\u5e26\u65e5\u671f\u7684\u65f6\u95f4\uff1a \u65e0\u6cd5\u786e\u5b9a\u4e00\u4e2a\u552f\u4e00\u65f6\u523b 12 : 30 : 59 \u5e26\u65e5\u671f\u7684\u65f6\u95f4\uff1a\u80fd\u552f\u4e00\u786e\u5b9a\u67d0\u4e2a\u65f6\u523b 2020 - 1 - 1 20 : 21 : 59","title":"2\u3001\u65f6\u95f4\uff1a"},{"location":"Java/Java\u6559\u7a0b\u7b14\u8bb0/\u65e5\u671f\u4e0e\u65f6\u95f4/\u57fa\u672c\u6982\u5ff5/#3","text":"\u4e0d\u540c\u7684\u65f6\u533a\uff0c\u5728\u540c\u4e00\u65f6\u523b\uff0c\u672c\u5730\u65f6\u95f4\u662f\u4e0d\u540c\u7684 \u5149\u9760\u672c\u5730\u65f6\u95f4\u8fd8\u65e0\u6cd5\u552f\u4e00\u786e\u5b9a\u4e00\u4e2a\u51c6\u786e\u7684\u65f6\u523b","title":"3\u3001\u672c\u5730\u65f6\u95f4"},{"location":"Java/Java\u6559\u7a0b\u7b14\u8bb0/\u65e5\u671f\u4e0e\u65f6\u95f4/\u57fa\u672c\u6982\u5ff5/#4","text":"\u5168\u7403\u4e00\u5171\u5206\u4e3a 24 \u4e2a\u65f6\u533a \u6807\u51c6\u65f6\u533a\uff1a\u4f26\u6566\u6240\u5728\u7684\u65f6\u533a \u5317\u4eac\u6240\u5728\u7684\u65f6\u533a\u662f\u4e1c\u516b\u533a","title":"4\u3001\u65f6\u533a"},{"location":"Java/Java\u6559\u7a0b\u7b14\u8bb0/\u65e5\u671f\u4e0e\u65f6\u95f4/\u57fa\u672c\u6982\u5ff5/#5","text":"GMT \u6216\u8005 UTC \u52a0\u65f6\u533a\u504f\u79fb GMT + 08 : 00 \u6216\u8005 UTC + 08 : 00 \u8868\u793a\u4e1c\u516b\u533a CST\uff08\u4e0d\u63a8\u8350\uff0c\u5bb9\u6613\u6df7\u6dc6\uff09 China Standard Time \u4e2d\u56fd\u6807\u51c6\u65f6\u95f4 Central Standard Time USA \u7f8e\u56fd\u4e2d\u90e8\u65f6\u95f4 \u4ee5\u6d32\uff0f\u57ce\u5e02\u8868\u793a Asia / Shanghai \uff0c\u8868\u793a\u4e0a\u6d77\u6240\u5728\u5730\u7684\u65f6\u533a","title":"5\u3001\u8868\u793a\u65b9\u5f0f\uff1a"},{"location":"Java/Java\u6559\u7a0b\u7b14\u8bb0/\u65e5\u671f\u4e0e\u65f6\u95f4/\u57fa\u672c\u6982\u5ff5/#6","text":"\u590f\u5929\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u628a\u65f6\u95f4\u5f80\u540e\u62e8 1 \u5c0f\u65f6\uff0c \u590f\u5929\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u518d\u628a\u65f6\u95f4\u5f80\u524d\u62e8 1 \u5c0f\u65f6","title":"6\u3001\u590f\u4ee4\u65f6"},{"location":"Java/Java\u6559\u7a0b\u7b14\u8bb0/\u65e5\u671f\u4e0e\u65f6\u95f4/\u57fa\u672c\u6982\u5ff5/#7","text":"Locale \u8868\u793a\u4e00\u4e2a\u56fd\u5bb6\u6216\u5730\u533a\u7684\u65e5\u671f\u3001\u65f6\u95f4\u3001\u6570\u5b57\u3001\u8d27\u5e01\u7b49\u683c\u5f0f \u6784\u6210\uff1a\u8bed\u8a00_\u56fd\u5bb6\u7684\u5b57\u6bcd\u7f29\u5199 \u8bed\u8a00\u4f7f\u7528\u5c0f\u5199\uff0c\u56fd\u5bb6\u4f7f\u7528\u5927\u5199\u3002 zh_CN \u8868\u793a\u4e2d\u6587 + \u4e2d\u56fd en_US \u8868\u793a\u82f1\u6587 + \u7f8e\u56fd \u65e5\u671f Locale\uff0c\u4e2d\u56fd\u548c\u7f8e\u56fd\u7684\u8868\u793a\u65b9\u5f0f\u5982\u4e0b\uff1a zh_CN \uff1a 2016 - 11 - 30 en_US \uff1a 11 / 30 / 2016","title":"7\u3001\u672c\u5730\u5316"},{"location":"Java/Java\u6559\u7a0b\u7b14\u8bb0/\u65e5\u671f\u4e0e\u65f6\u95f4/\u57fa\u672c\u6982\u5ff5/#_2","text":"\u6982\u5ff5\uff1a\u65e5\u671f\u3001\u65f6\u95f4\u3001\u65f6\u523b \u7531\u4e8e\u590f\u4ee4\u65f6\u7684\u5b58\u5728\uff0c\u540c\u4e00\u5730\u533a\u7528 GMT/UTC \u548c\u57ce\u5e02\u8868\u793a\u7684\u65f6\u533a\u53ef\u80fd\u5bfc\u81f4\u65f6\u95f4\u4e0d\u540c","title":"\u5c0f\u7ed3"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/","text":"\u9636\u6bb5 2\uff1a\u6570\u636e\u5e93\u5f00\u53d1 4-1-\u6570\u636e\u5e93\u53ca MySQL \u57fa\u7840 4-2-SQL \u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5 5-JDBC \u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8.md 6-JDBC \u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636.md","title":"\u9636\u6bb5 2\uff1a\u6570\u636e\u5e93\u5f00\u53d1"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/#2","text":"4-1-\u6570\u636e\u5e93\u53ca MySQL \u57fa\u7840 4-2-SQL \u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5 5-JDBC \u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8.md 6-JDBC \u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636.md","title":"\u9636\u6bb5 2\uff1a\u6570\u636e\u5e93\u5f00\u53d1"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-1-\u6570\u636e\u5e93\u53caMySQL\u57fa\u7840/","text":"\u8bfe\u65f6 1 \u6570\u636e\u5e93\u6982\u8ff0 1\u3001\u5e38\u89c1\u6570\u636e\u5e93 Oracle \u7532\u9aa8\u6587 DB2 IBM SQL Server \u5fae\u8f6f Sybase \u8d5b\u5c14\u65af MySQL \u7532\u9aa8\u6587 2\u3001\u7406\u89e3\u6570\u636e\u5e93 RDBMS = Manager + Database Relational Database Management System \u5173\u7cfb\u578b\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf Database = N \u4e2a Table Table: \u8868\u7ed3\u6784\u3001\u8868\u8bb0\u5f55 \u8bfe\u65f6 2 Java \u5e94\u7528\u4e0e\u6570\u636e\u5e93\u7684\u5173\u7cfb ... \u8bfe\u65f6 3-4 \u5b89\u88c5/\u5220\u9664 MySQL \u5b89\u88c5\u8def\u5f84\u4e0d\u8981\u6709\u4e2d\u6587 MAC brew \u5b89\u88c5/\u5378\u8f7d mysql $ brew install mysql $ brew uninstall mysql \u8bfe\u65f6 5 MySQL \u5b89\u88c5\u8def\u5f84\u4ee5\u53ca\u914d\u7f6e\u4fe1\u606f mysqld \u670d\u52a1\u7aef mysql \u5ba2\u6237\u7aef \u8bfe\u65f6 6 \u5f00\u542f\u5173\u95ed\u670d\u52a1\u5668\u4ee5\u53ca\u767b\u5f55\u9000\u51fa\u5ba2\u6237\u7aef mysql \u542f\u52a8/\u5173\u95ed\u670d\u52a1 $ mysql.server start $ mysql.server stop \u767b\u5f55\u9000\u51fa\u5ba2\u6237\u7aef # \u767b\u5f55 $ mysql -uroot -p # \u67e5\u770b\u6570\u636e\u5e93 > show databases ; # \u9000\u51fa > exit/quit ; \u8bfe\u65f6 7 SQL \u8bed\u8a00\u7684\u6982\u8ff0 SQL Structured Query Language \u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00 SQL \u65b9\u8a00 \u67d0\u4e9b\u6570\u636e\u5e93\u7684\u72ec\u6709\u8bed\u6cd5\uff0c \u4f8b\u5982\uff1alimit \u8bed\u53e5\u53ea\u5728 MySQL \u4e2d\u4f7f\u7528 SQL \u8bed\u6cd5 1\u3001\u5355\u884c\u6216\u591a\u884c\u4e66\u5199\uff0c\u5206\u53f7\u7ed3\u5c3e 2\u3001\u53ef\u4ee5\u4f7f\u7528\u7a7a\u683c\u6216\u7f29\u8fdb\u589e\u5f3a\u53ef\u8bfb\u6027 3\u3001MySQL \u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u5efa\u8bae\u4f7f\u7528\u5927\u5199 SQL \u8bed\u53e5\u5206\u7c7b \u7b80\u79f0 \u5168\u79f0 \u4e2d\u6587 \u8bf4\u660e DDL Data Definition Language \u6570\u636e\u5b9a\u4e49\u8bed\u8a00 \u5b9a\u4e49\u5e93\u3001\u8868\u3001\u5217\u7ed3\u6784 DCL Data Control Language \u6570\u636e\u63a7\u5236\u8bed\u8a00 \u5b9a\u4e49\u8bbf\u95ee\u6743\u9650\u548c\u5b89\u5168\u7ea7\u522b DML Data Manipulation Language \u6570\u636e\u64cd\u4f5c\u8bed\u8a00 \u64cd\u4f5c\u6570\u636e\uff0c\u589e\u3001\u5220\u3001\u6539 DQL Data Query Language \u6570\u636e\u67e5\u8be2\u8bed\u8a00 \u67e5\u8be2\u6570\u636e \u8bfe\u65f6 8 DDL\uff08\u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff09\u4e4b\u64cd\u4f5c\u6570\u636e\u5e93 -- \u67e5\u770b\u6240\u6709\u6570\u636e\u5e93\uff1a show databases ; -- \u9009\u62e9\u6570\u636e\u5e93\uff1a use < database_name > ; -- \u521b\u5efa\u6570\u636e\u5e93\uff1a create database [ if not exists ] < database_name > [ charset = utf8 ]; -- \u5220\u9664\u6570\u636e\u5e93\uff1a drop database [ if exists ] < database_name > ; -- \u4fee\u6539\u6570\u636e\u5e93\u7f16\u7801\uff1a alter database < database_name > character set utf8 \u8bfe\u65f6 9-10 \u6570\u636e\u7c7b\u578b\u4ecb\u7ecd int \u6574\u578b double \u6d6e\u70b9\u578b\uff0c\u4f8b\u5982 double(5, 2) \u8868\u793a\u6700\u591a 5 \u4f4d\uff0c\u5176\u4e2d 2 \u4f4d\u5c0f\u6570,\u5373\u6700\u5927 999.99 decimal \u6d6e\u70b9\u578b\uff0c\u8d27\u5e01\u4f7f\u7528\uff0c\u4e0d\u4f1a\u51fa\u73b0\u7cbe\u5ea6\u7f3a\u5931 char \u5b9a\u957f\u5b57\u7b26\u4e32\uff0cchar(255)\uff0c\u957f\u5ea6\u4e0d\u8db3\u6307\u5b9a\u957f\u5ea6\u4f1a\u8865\u8db3\u5230\u6307\u5b9a\u957f\u5ea6\uff0c\u6bd4\u53d8\u957f\u8282\u7701\u7a7a\u95f4 varchar \u53d8\u957f\u5b57\u7b26\u4e32 varchar(65535) text(clob) \u5b57\u7b26\u4e32 tynytext(255B), text(64K), mediumtext(16M), longtext(4G) blob \u5b57\u8282\u7c7b\u578b tynyblob(255B), blob(64K), mediumblob(16M), longblob(4G) date \u65e5\u671f yyyy-MM-dd time \u65f6\u95f4 hh:mm:ss timestamp \u65f6\u95f4\u6233 \u8bfe\u65f6 11 DDL\uff08\u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff09\u4e4b\u64cd\u4f5c\u8868 1\u3001\u521b\u5efa\u8868, \u6ce8\u610f\u6700\u540e\u4e00\u5217\u6ca1\u6709\u9017\u53f7 create table [ if not exists ] < table_name > ( < \u5217\u540d > < \u5217\u7c7b\u578b > , ... < \u5217\u540d > < \u5217\u7c7b\u578b > ); eg: -- \u521b\u5efa\u6570\u636e\u5e93 create database school ; -- \u5207\u6362\u6570\u636e\u5e93 use school ; -- \u521b\u5efa\u6570\u636e\u8868 create table tb_stu ( number char ( 11 ), name varchar ( 50 ), age int , gender varchar ( 10 ) ); -- \u67e5\u770b\u5f53\u524d\u6570\u636e\u5e93\u4e2d\u6240\u6709\u8868 show tables ; -- \u67e5\u770b\u6307\u5b9a\u8868\u7684\u521b\u5efa\u8bed\u53e5 show create table tb_stu ; show create table stu \\ G d -- \u67e5\u770b\u8868\u7ed3\u6784 desc tb_stu ; -- \u5220\u9664\u8868 drop table ts_stu ; show tables ; 2\u3001\u4fee\u6539\u8868 -- \u524d\u7f00 alter table < table_name > -- \u6dfb\u52a0\u5217 alter table < table_name > add ( < \u5217\u540d > < \u5217\u7c7b\u578b > , ... < \u5217\u540d > < \u5217\u7c7b\u578b > ); -- \u4fee\u6539\u5217\u7c7b\u578b -- \u5982\u679c\u5df2\u5b58\u5728\u6570\u636e\uff0c\u65b0\u7c7b\u578b\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u5df2\u5b58\u5728\u6570\u636e alter table < table_name > modify \u5217\u540d \u5217\u7c7b\u578b ; -- \u4fee\u6539\u5217\u540d\u79f0 alter table < table_name > change \u539f\u5217\u540d \u65b0\u5217\u540d \u5217\u7c7b\u578b ; -- \u5220\u9664\u5217 alter table < table_name > drop \u5217\u540d ; -- \u4fee\u6539\u8868\u540d alter table \u539f\u8868\u540d rename to \u65b0\u8868\u540d ; \u8bfe\u65f6 12-13-14 DML\uff08\u6570\u636e\u64cd\u4f5c\u8bed\u8a00\uff09 \u67e5\u8be2\u6240\u6709\u8bb0\u5f55 select * from < table_name > ; 1\u3001\u63d2\u5165\u6570\u636e insert into < table_name > ( \u5217\u540d 1 , \u5217\u540d 2 ,...) values ( \u5217\u503c 1 , \u5217\u503c 1 ,...); \u6ca1\u6709\u6307\u5b9a\u7684\u5217\u7b49\u540c\u4e8e\u63d2\u5165\u9ed8\u8ba4\u503c \u503c\u7684\u987a\u5e8f\u4e0e\u6307\u5b9a\u5217\u987a\u5e8f\u5bf9\u5e94 \u5217\u540d\u53ef\u7701\u7565\uff08\u4e0d\u5efa\u8bae\uff09 \u5b57\u7b26\u4e32\u7c7b\u578b\u4f7f\u7528\u5355\u5f15\u53f7\uff0c\u4e0d\u80fd\u4f7f\u7528\u53cc\u5f15\u53f7 \u65e5\u671f\u7c7b\u578b\u4e5f\u8981\u4f7f\u7528\u5355\u5f15\u53f7 2\u3001\u4fee\u6539\u6570\u636e update \u8868\u540d set \u5217\u540d 1 = \u5217\u503c 1 , \u5217\u540d 2 = \u5217\u503c 2 ,...[ where\u6761\u4ef6 ] \u6761\u4ef6\u5fc5\u987b\u662f\u4e00\u4e2a boolean \u7c7b\u578b\u7684\u503c\u6216\u8868\u8fbe\u5f0f \u8fd0\u7b97\u7b26\uff1a=\u3001!=\u3001<>\u3001>\u3001<\u3001>=\u3001<=\u3001between...and\u3001in(...)\u3001is null\u3001not\u3001or\u3001and 3\u3001\u5220\u9664\u6570\u636e delete from \u8868\u540d [ where\u6761\u4ef6 ] -- truncate\u662fDDL\u8bed\u53e5\uff0c\u5148\u5220\u9664drop\uff0c\u5728\u521b\u5efacreae\uff0c\u65e0\u6cd5\u56de\u6eda truncate table \u8868\u540d \u8bfe\u65f6 15 DCL\uff08\u6570\u636e\u63a7\u5236\u8bed\u8a00\uff09 1\u3001\u521b\u5efa\u7528\u6237 \u4e00\u4e2a\u9879\u76ee\u521b\u5efa\u4e00\u4e2a\u7528\u6237\uff0c\u4e00\u4e2a\u9879\u76ee\u5bf9\u5e94\u7684\u6570\u636e\u5e93\u53ea\u6709\u4e00\u4e2a -- \u7528\u6237\u53ea\u80fd\u5728\u6307\u5b9a\u7684ip\u5730\u5740\u4e0a\u767b\u5f55 create user \u7528\u6237\u540d @ ip\u5730\u5740 identified by \u5bc6\u7801 ; -- \u7528\u6237\u53ef\u4ee5\u5728\u4efb\u610fip\u5730\u5740\u4e0a\u767b\u5f55 create user \u7528\u6237\u540d @ '%' identified by \u5bc6\u7801 ; 2\u3001\u7528\u6237\u6388\u6743 (1) \u7ed9\u7528\u6237\u5206\u6d3e\u6307\u5b9a\u6743\u9650 grant \u6743\u9650 1 ,... \u6743\u9650 n on \u6570\u636e\u5e93 . * to \u7528\u6237\u540d @ ip\u5730\u5740 eg: grant create , alter , drop , insert , update , delete , select on db1 . * to user1 @ localhost ; (2) \u7ed9\u7528\u6237\u5206\u6d3e\u6240\u6709\u6743\u9650 grant all on \u6570\u636e\u5e93 . * to \u7528\u6237\u540d @ ip\u5730\u5740 3\u3001\u64a4\u9500\u6388\u6743 (1) \u64a4\u9500\u6307\u5b9a\u6743\u9650 revoke \u6743\u9650 1 ,... \u6743\u9650 n on \u6570\u636e\u5e93 . * from \u7528\u6237\u540d @ ip\u5730\u5740 eg: revoke create , alter , drop on db1 . * from user1 @ localhost ; (2) \u64a4\u9500\u6307\u5b9a\u6743\u9650 revoke \u6743\u9650 1 ,... \u6743\u9650 n on \u6570\u636e\u5e93 . * from \u7528\u6237\u540d @ ip\u5730\u5740 4\u3001\u67e5\u770b\u6743\u9650 show grants for \u7528\u6237\u540d @ ip\u5730\u5740 ; 5\u3001\u5220\u9664\u7528\u6237 drop user \u7528\u6237\u540d @ ip\u5730\u5740 ; \u8bfe\u65f6 16 DQL\uff08\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff09\u4e4b\u57fa\u7840\u67e5\u8be2\u4e4b\u5217\u63a7\u5236 -- \u67e5\u8be2\u6240\u6709\u5217 select * from \u8868\u540d ; -- \u67e5\u8be2\u6307\u5b9a\u5217 select \u5217\u540d 1 , \u5217\u540d 2 ... \u5217\u540d n from \u8868\u540d ; -- \u8bb0\u5f55\u53bb\u91cd select distinct * from \u8868\u540d ; select distinct \u5217\u540d from \u8868\u540d ; -- \u5217\u8fd0\u7b97 -- \uff081\uff09\u52a0\u51cf\u4e58\u9664 select age - 1 from table -- \uff082\uff09\u5b57\u7b26\u4e32\u8fde\u63a5\uff0c\u4e0d\u80fd\u7528\u52a0\u53f7\u8fde\u63a5+ select concat ( '$' , salary ) from table ; -- \uff083\uff09\u8f6c\u6362null\u503c\uff0c \u4efb\u4f55\u503c\u4e0enull\u76f8\u52a0\u90fd\u662fnull select ifnull ( salary , 0 ) + 1000 from table ; -- ifnull(salary, 0) \u5982\u679csalary is null \u90a3\u4e48 salary->0 -- \uff084\uff09\u5217\u522b\u540d select name as \u59d3\u540d from table ; select name \u59d3\u540d from table ; \u8bfe\u65f6 17 DQL\uff08\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff09\u4e4b\u6761\u4ef6\u67e5\u8be2 \u4f7f\u7528 where \u5b50\u53e5\u63a7\u5236\u8bb0\u5f55 select * from table where salary > 500 ; select * from table where name in ( '\u674e\u767d' , '\u675c\u752b' ); select * from table where salary between 200 and 500 ; \u8bfe\u65f6 18 DQL\uff08\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff09\u4e4b\u6a21\u7cca\u67e5\u8be2 \u4e0b\u5212\u7ebf _ \u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26 \u767e\u5206\u53f7 % \u4ee3\u8868[0,n]\u4e2a\u5b57\u7b26 select * from table where name like '\u5f20_' ; select * from table where name like '\u5f20%' ; \u8bfe\u65f6 19 DQL\uff08\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff09\u4e4b\u6392\u5e8f \u9ed8\u8ba4\u5347\u5e8f\u6392\u5e8f -- \u5347\u5e8f \u9ed8\u8ba4, asc\u53ef\u7701\u7565 select * from table order by id asc ; -- \u964d\u5e8f select * from table order by id desc ; -- \u591a\u5217\u6392\u5e8f select * from table order by salary asc , id desc ; \u8bfe\u65f6 20 DQL\uff08\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff09\u4e4b\u805a\u5408\u51fd\u6570 -- \u7edf\u8ba1\u6709\u6548\u884c\u6570\uff0c\u6574\u884c\u5168\u662fnull\u4e0d\u8ba1\u6570 select count ( * ) from table ; -- \u7edf\u8ba1\u4e0d\u662fnull\u7684\u884c\u6570 select count ( id ) from table ; -- \u6c42\u548c select sum ( salary ) from table ; -- \u6700\u5c0f\u503c select min ( salary ) from table ; -- \u6700\u5927\u503c select max ( salary ) from table ; -- \u5e73\u5747\u503c select avg ( salary ) from table ; select count ( * ) \u4eba\u6570 , sum ( salary ) \u603b\u548c , avg ( salary ) \u5e73\u5747\u503c , max ( salary ) \u6700\u9ad8 , min ( salary ) \u6700\u4f4e from table ; \u8bfe\u65f6 21 DQL\uff08\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff09\u4e4b\u5206\u7ec4\u67e5\u8be2 select job , count ( * ) from table group by job ; -- \u5148\u8fc7\u6ee4\u518d\u5206\u7ec4 select job , count ( * ) from table where salary > 1500 group by job ; -- \u5148\u8fc7\u6ee4\uff0c\u518d\u5206\u7ec4\uff0c\u518d\u5bf9\u5206\u7ec4\u7ed3\u679c\u8fc7\u6ee4 select job , count ( * ) from table where salary > 1500 group by job having count ( * ) >= 2 ; \u8bfe\u65f6 22 DQL\uff08\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff09\u4e4b limit \u65b9\u8a00 \u8ba1\u7b97\u516c\u5f0f\uff1a \u8df3\u8fc7\u884c\u6570 = ( \u5f53\u524d\u9875 - 1 ) * \u6bcf\u9875\u8bb0\u5f55\u6570 select * from table limit count ; select * from table limit count OFFSET offset ; select * from table limit offset , count ;","title":"4 1 \u6570\u636e\u5e93\u53caMySQL\u57fa\u7840"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-1-\u6570\u636e\u5e93\u53caMySQL\u57fa\u7840/#1","text":"1\u3001\u5e38\u89c1\u6570\u636e\u5e93 Oracle \u7532\u9aa8\u6587 DB2 IBM SQL Server \u5fae\u8f6f Sybase \u8d5b\u5c14\u65af MySQL \u7532\u9aa8\u6587 2\u3001\u7406\u89e3\u6570\u636e\u5e93 RDBMS = Manager + Database Relational Database Management System \u5173\u7cfb\u578b\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf Database = N \u4e2a Table Table: \u8868\u7ed3\u6784\u3001\u8868\u8bb0\u5f55","title":"\u8bfe\u65f6 1 \u6570\u636e\u5e93\u6982\u8ff0"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-1-\u6570\u636e\u5e93\u53caMySQL\u57fa\u7840/#2-java","text":"...","title":"\u8bfe\u65f6 2 Java \u5e94\u7528\u4e0e\u6570\u636e\u5e93\u7684\u5173\u7cfb"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-1-\u6570\u636e\u5e93\u53caMySQL\u57fa\u7840/#3-4-mysql","text":"\u5b89\u88c5\u8def\u5f84\u4e0d\u8981\u6709\u4e2d\u6587 MAC brew \u5b89\u88c5/\u5378\u8f7d mysql $ brew install mysql $ brew uninstall mysql","title":"\u8bfe\u65f6 3-4 \u5b89\u88c5/\u5220\u9664 MySQL"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-1-\u6570\u636e\u5e93\u53caMySQL\u57fa\u7840/#5-mysql","text":"mysqld \u670d\u52a1\u7aef mysql \u5ba2\u6237\u7aef","title":"\u8bfe\u65f6 5 MySQL \u5b89\u88c5\u8def\u5f84\u4ee5\u53ca\u914d\u7f6e\u4fe1\u606f"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-1-\u6570\u636e\u5e93\u53caMySQL\u57fa\u7840/#6","text":"mysql \u542f\u52a8/\u5173\u95ed\u670d\u52a1 $ mysql.server start $ mysql.server stop \u767b\u5f55\u9000\u51fa\u5ba2\u6237\u7aef # \u767b\u5f55 $ mysql -uroot -p # \u67e5\u770b\u6570\u636e\u5e93 > show databases ; # \u9000\u51fa > exit/quit ;","title":"\u8bfe\u65f6 6 \u5f00\u542f\u5173\u95ed\u670d\u52a1\u5668\u4ee5\u53ca\u767b\u5f55\u9000\u51fa\u5ba2\u6237\u7aef"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-1-\u6570\u636e\u5e93\u53caMySQL\u57fa\u7840/#7-sql","text":"SQL Structured Query Language \u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00 SQL \u65b9\u8a00 \u67d0\u4e9b\u6570\u636e\u5e93\u7684\u72ec\u6709\u8bed\u6cd5\uff0c \u4f8b\u5982\uff1alimit \u8bed\u53e5\u53ea\u5728 MySQL \u4e2d\u4f7f\u7528 SQL \u8bed\u6cd5 1\u3001\u5355\u884c\u6216\u591a\u884c\u4e66\u5199\uff0c\u5206\u53f7\u7ed3\u5c3e 2\u3001\u53ef\u4ee5\u4f7f\u7528\u7a7a\u683c\u6216\u7f29\u8fdb\u589e\u5f3a\u53ef\u8bfb\u6027 3\u3001MySQL \u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u5efa\u8bae\u4f7f\u7528\u5927\u5199 SQL \u8bed\u53e5\u5206\u7c7b \u7b80\u79f0 \u5168\u79f0 \u4e2d\u6587 \u8bf4\u660e DDL Data Definition Language \u6570\u636e\u5b9a\u4e49\u8bed\u8a00 \u5b9a\u4e49\u5e93\u3001\u8868\u3001\u5217\u7ed3\u6784 DCL Data Control Language \u6570\u636e\u63a7\u5236\u8bed\u8a00 \u5b9a\u4e49\u8bbf\u95ee\u6743\u9650\u548c\u5b89\u5168\u7ea7\u522b DML Data Manipulation Language \u6570\u636e\u64cd\u4f5c\u8bed\u8a00 \u64cd\u4f5c\u6570\u636e\uff0c\u589e\u3001\u5220\u3001\u6539 DQL Data Query Language \u6570\u636e\u67e5\u8be2\u8bed\u8a00 \u67e5\u8be2\u6570\u636e","title":"\u8bfe\u65f6 7 SQL \u8bed\u8a00\u7684\u6982\u8ff0"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-1-\u6570\u636e\u5e93\u53caMySQL\u57fa\u7840/#8-ddl","text":"-- \u67e5\u770b\u6240\u6709\u6570\u636e\u5e93\uff1a show databases ; -- \u9009\u62e9\u6570\u636e\u5e93\uff1a use < database_name > ; -- \u521b\u5efa\u6570\u636e\u5e93\uff1a create database [ if not exists ] < database_name > [ charset = utf8 ]; -- \u5220\u9664\u6570\u636e\u5e93\uff1a drop database [ if exists ] < database_name > ; -- \u4fee\u6539\u6570\u636e\u5e93\u7f16\u7801\uff1a alter database < database_name > character set utf8","title":"\u8bfe\u65f6 8 DDL\uff08\u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff09\u4e4b\u64cd\u4f5c\u6570\u636e\u5e93"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-1-\u6570\u636e\u5e93\u53caMySQL\u57fa\u7840/#9-10","text":"int \u6574\u578b double \u6d6e\u70b9\u578b\uff0c\u4f8b\u5982 double(5, 2) \u8868\u793a\u6700\u591a 5 \u4f4d\uff0c\u5176\u4e2d 2 \u4f4d\u5c0f\u6570,\u5373\u6700\u5927 999.99 decimal \u6d6e\u70b9\u578b\uff0c\u8d27\u5e01\u4f7f\u7528\uff0c\u4e0d\u4f1a\u51fa\u73b0\u7cbe\u5ea6\u7f3a\u5931 char \u5b9a\u957f\u5b57\u7b26\u4e32\uff0cchar(255)\uff0c\u957f\u5ea6\u4e0d\u8db3\u6307\u5b9a\u957f\u5ea6\u4f1a\u8865\u8db3\u5230\u6307\u5b9a\u957f\u5ea6\uff0c\u6bd4\u53d8\u957f\u8282\u7701\u7a7a\u95f4 varchar \u53d8\u957f\u5b57\u7b26\u4e32 varchar(65535) text(clob) \u5b57\u7b26\u4e32 tynytext(255B), text(64K), mediumtext(16M), longtext(4G) blob \u5b57\u8282\u7c7b\u578b tynyblob(255B), blob(64K), mediumblob(16M), longblob(4G) date \u65e5\u671f yyyy-MM-dd time \u65f6\u95f4 hh:mm:ss timestamp \u65f6\u95f4\u6233","title":"\u8bfe\u65f6 9-10 \u6570\u636e\u7c7b\u578b\u4ecb\u7ecd"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-1-\u6570\u636e\u5e93\u53caMySQL\u57fa\u7840/#11-ddl","text":"1\u3001\u521b\u5efa\u8868, \u6ce8\u610f\u6700\u540e\u4e00\u5217\u6ca1\u6709\u9017\u53f7 create table [ if not exists ] < table_name > ( < \u5217\u540d > < \u5217\u7c7b\u578b > , ... < \u5217\u540d > < \u5217\u7c7b\u578b > ); eg: -- \u521b\u5efa\u6570\u636e\u5e93 create database school ; -- \u5207\u6362\u6570\u636e\u5e93 use school ; -- \u521b\u5efa\u6570\u636e\u8868 create table tb_stu ( number char ( 11 ), name varchar ( 50 ), age int , gender varchar ( 10 ) ); -- \u67e5\u770b\u5f53\u524d\u6570\u636e\u5e93\u4e2d\u6240\u6709\u8868 show tables ; -- \u67e5\u770b\u6307\u5b9a\u8868\u7684\u521b\u5efa\u8bed\u53e5 show create table tb_stu ; show create table stu \\ G d -- \u67e5\u770b\u8868\u7ed3\u6784 desc tb_stu ; -- \u5220\u9664\u8868 drop table ts_stu ; show tables ; 2\u3001\u4fee\u6539\u8868 -- \u524d\u7f00 alter table < table_name > -- \u6dfb\u52a0\u5217 alter table < table_name > add ( < \u5217\u540d > < \u5217\u7c7b\u578b > , ... < \u5217\u540d > < \u5217\u7c7b\u578b > ); -- \u4fee\u6539\u5217\u7c7b\u578b -- \u5982\u679c\u5df2\u5b58\u5728\u6570\u636e\uff0c\u65b0\u7c7b\u578b\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u5df2\u5b58\u5728\u6570\u636e alter table < table_name > modify \u5217\u540d \u5217\u7c7b\u578b ; -- \u4fee\u6539\u5217\u540d\u79f0 alter table < table_name > change \u539f\u5217\u540d \u65b0\u5217\u540d \u5217\u7c7b\u578b ; -- \u5220\u9664\u5217 alter table < table_name > drop \u5217\u540d ; -- \u4fee\u6539\u8868\u540d alter table \u539f\u8868\u540d rename to \u65b0\u8868\u540d ;","title":"\u8bfe\u65f6 11 DDL\uff08\u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff09\u4e4b\u64cd\u4f5c\u8868"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-1-\u6570\u636e\u5e93\u53caMySQL\u57fa\u7840/#12-13-14-dml","text":"\u67e5\u8be2\u6240\u6709\u8bb0\u5f55 select * from < table_name > ; 1\u3001\u63d2\u5165\u6570\u636e insert into < table_name > ( \u5217\u540d 1 , \u5217\u540d 2 ,...) values ( \u5217\u503c 1 , \u5217\u503c 1 ,...); \u6ca1\u6709\u6307\u5b9a\u7684\u5217\u7b49\u540c\u4e8e\u63d2\u5165\u9ed8\u8ba4\u503c \u503c\u7684\u987a\u5e8f\u4e0e\u6307\u5b9a\u5217\u987a\u5e8f\u5bf9\u5e94 \u5217\u540d\u53ef\u7701\u7565\uff08\u4e0d\u5efa\u8bae\uff09 \u5b57\u7b26\u4e32\u7c7b\u578b\u4f7f\u7528\u5355\u5f15\u53f7\uff0c\u4e0d\u80fd\u4f7f\u7528\u53cc\u5f15\u53f7 \u65e5\u671f\u7c7b\u578b\u4e5f\u8981\u4f7f\u7528\u5355\u5f15\u53f7 2\u3001\u4fee\u6539\u6570\u636e update \u8868\u540d set \u5217\u540d 1 = \u5217\u503c 1 , \u5217\u540d 2 = \u5217\u503c 2 ,...[ where\u6761\u4ef6 ] \u6761\u4ef6\u5fc5\u987b\u662f\u4e00\u4e2a boolean \u7c7b\u578b\u7684\u503c\u6216\u8868\u8fbe\u5f0f \u8fd0\u7b97\u7b26\uff1a=\u3001!=\u3001<>\u3001>\u3001<\u3001>=\u3001<=\u3001between...and\u3001in(...)\u3001is null\u3001not\u3001or\u3001and 3\u3001\u5220\u9664\u6570\u636e delete from \u8868\u540d [ where\u6761\u4ef6 ] -- truncate\u662fDDL\u8bed\u53e5\uff0c\u5148\u5220\u9664drop\uff0c\u5728\u521b\u5efacreae\uff0c\u65e0\u6cd5\u56de\u6eda truncate table \u8868\u540d","title":"\u8bfe\u65f6 12-13-14 DML\uff08\u6570\u636e\u64cd\u4f5c\u8bed\u8a00\uff09"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-1-\u6570\u636e\u5e93\u53caMySQL\u57fa\u7840/#15-dcl","text":"1\u3001\u521b\u5efa\u7528\u6237 \u4e00\u4e2a\u9879\u76ee\u521b\u5efa\u4e00\u4e2a\u7528\u6237\uff0c\u4e00\u4e2a\u9879\u76ee\u5bf9\u5e94\u7684\u6570\u636e\u5e93\u53ea\u6709\u4e00\u4e2a -- \u7528\u6237\u53ea\u80fd\u5728\u6307\u5b9a\u7684ip\u5730\u5740\u4e0a\u767b\u5f55 create user \u7528\u6237\u540d @ ip\u5730\u5740 identified by \u5bc6\u7801 ; -- \u7528\u6237\u53ef\u4ee5\u5728\u4efb\u610fip\u5730\u5740\u4e0a\u767b\u5f55 create user \u7528\u6237\u540d @ '%' identified by \u5bc6\u7801 ; 2\u3001\u7528\u6237\u6388\u6743 (1) \u7ed9\u7528\u6237\u5206\u6d3e\u6307\u5b9a\u6743\u9650 grant \u6743\u9650 1 ,... \u6743\u9650 n on \u6570\u636e\u5e93 . * to \u7528\u6237\u540d @ ip\u5730\u5740 eg: grant create , alter , drop , insert , update , delete , select on db1 . * to user1 @ localhost ; (2) \u7ed9\u7528\u6237\u5206\u6d3e\u6240\u6709\u6743\u9650 grant all on \u6570\u636e\u5e93 . * to \u7528\u6237\u540d @ ip\u5730\u5740 3\u3001\u64a4\u9500\u6388\u6743 (1) \u64a4\u9500\u6307\u5b9a\u6743\u9650 revoke \u6743\u9650 1 ,... \u6743\u9650 n on \u6570\u636e\u5e93 . * from \u7528\u6237\u540d @ ip\u5730\u5740 eg: revoke create , alter , drop on db1 . * from user1 @ localhost ; (2) \u64a4\u9500\u6307\u5b9a\u6743\u9650 revoke \u6743\u9650 1 ,... \u6743\u9650 n on \u6570\u636e\u5e93 . * from \u7528\u6237\u540d @ ip\u5730\u5740 4\u3001\u67e5\u770b\u6743\u9650 show grants for \u7528\u6237\u540d @ ip\u5730\u5740 ; 5\u3001\u5220\u9664\u7528\u6237 drop user \u7528\u6237\u540d @ ip\u5730\u5740 ;","title":"\u8bfe\u65f6 15 DCL\uff08\u6570\u636e\u63a7\u5236\u8bed\u8a00\uff09"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-1-\u6570\u636e\u5e93\u53caMySQL\u57fa\u7840/#16-dql","text":"-- \u67e5\u8be2\u6240\u6709\u5217 select * from \u8868\u540d ; -- \u67e5\u8be2\u6307\u5b9a\u5217 select \u5217\u540d 1 , \u5217\u540d 2 ... \u5217\u540d n from \u8868\u540d ; -- \u8bb0\u5f55\u53bb\u91cd select distinct * from \u8868\u540d ; select distinct \u5217\u540d from \u8868\u540d ; -- \u5217\u8fd0\u7b97 -- \uff081\uff09\u52a0\u51cf\u4e58\u9664 select age - 1 from table -- \uff082\uff09\u5b57\u7b26\u4e32\u8fde\u63a5\uff0c\u4e0d\u80fd\u7528\u52a0\u53f7\u8fde\u63a5+ select concat ( '$' , salary ) from table ; -- \uff083\uff09\u8f6c\u6362null\u503c\uff0c \u4efb\u4f55\u503c\u4e0enull\u76f8\u52a0\u90fd\u662fnull select ifnull ( salary , 0 ) + 1000 from table ; -- ifnull(salary, 0) \u5982\u679csalary is null \u90a3\u4e48 salary->0 -- \uff084\uff09\u5217\u522b\u540d select name as \u59d3\u540d from table ; select name \u59d3\u540d from table ;","title":"\u8bfe\u65f6 16 DQL\uff08\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff09\u4e4b\u57fa\u7840\u67e5\u8be2\u4e4b\u5217\u63a7\u5236"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-1-\u6570\u636e\u5e93\u53caMySQL\u57fa\u7840/#17-dql","text":"\u4f7f\u7528 where \u5b50\u53e5\u63a7\u5236\u8bb0\u5f55 select * from table where salary > 500 ; select * from table where name in ( '\u674e\u767d' , '\u675c\u752b' ); select * from table where salary between 200 and 500 ;","title":"\u8bfe\u65f6 17 DQL\uff08\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff09\u4e4b\u6761\u4ef6\u67e5\u8be2"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-1-\u6570\u636e\u5e93\u53caMySQL\u57fa\u7840/#18-dql","text":"\u4e0b\u5212\u7ebf _ \u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26 \u767e\u5206\u53f7 % \u4ee3\u8868[0,n]\u4e2a\u5b57\u7b26 select * from table where name like '\u5f20_' ; select * from table where name like '\u5f20%' ;","title":"\u8bfe\u65f6 18 DQL\uff08\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff09\u4e4b\u6a21\u7cca\u67e5\u8be2"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-1-\u6570\u636e\u5e93\u53caMySQL\u57fa\u7840/#19-dql","text":"\u9ed8\u8ba4\u5347\u5e8f\u6392\u5e8f -- \u5347\u5e8f \u9ed8\u8ba4, asc\u53ef\u7701\u7565 select * from table order by id asc ; -- \u964d\u5e8f select * from table order by id desc ; -- \u591a\u5217\u6392\u5e8f select * from table order by salary asc , id desc ;","title":"\u8bfe\u65f6 19 DQL\uff08\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff09\u4e4b\u6392\u5e8f"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-1-\u6570\u636e\u5e93\u53caMySQL\u57fa\u7840/#20-dql","text":"-- \u7edf\u8ba1\u6709\u6548\u884c\u6570\uff0c\u6574\u884c\u5168\u662fnull\u4e0d\u8ba1\u6570 select count ( * ) from table ; -- \u7edf\u8ba1\u4e0d\u662fnull\u7684\u884c\u6570 select count ( id ) from table ; -- \u6c42\u548c select sum ( salary ) from table ; -- \u6700\u5c0f\u503c select min ( salary ) from table ; -- \u6700\u5927\u503c select max ( salary ) from table ; -- \u5e73\u5747\u503c select avg ( salary ) from table ; select count ( * ) \u4eba\u6570 , sum ( salary ) \u603b\u548c , avg ( salary ) \u5e73\u5747\u503c , max ( salary ) \u6700\u9ad8 , min ( salary ) \u6700\u4f4e from table ;","title":"\u8bfe\u65f6 20 DQL\uff08\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff09\u4e4b\u805a\u5408\u51fd\u6570"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-1-\u6570\u636e\u5e93\u53caMySQL\u57fa\u7840/#21-dql","text":"select job , count ( * ) from table group by job ; -- \u5148\u8fc7\u6ee4\u518d\u5206\u7ec4 select job , count ( * ) from table where salary > 1500 group by job ; -- \u5148\u8fc7\u6ee4\uff0c\u518d\u5206\u7ec4\uff0c\u518d\u5bf9\u5206\u7ec4\u7ed3\u679c\u8fc7\u6ee4 select job , count ( * ) from table where salary > 1500 group by job having count ( * ) >= 2 ;","title":"\u8bfe\u65f6 21 DQL\uff08\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff09\u4e4b\u5206\u7ec4\u67e5\u8be2"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-1-\u6570\u636e\u5e93\u53caMySQL\u57fa\u7840/#22-dql-limit","text":"\u8ba1\u7b97\u516c\u5f0f\uff1a \u8df3\u8fc7\u884c\u6570 = ( \u5f53\u524d\u9875 - 1 ) * \u6bcf\u9875\u8bb0\u5f55\u6570 select * from table limit count ; select * from table limit count OFFSET offset ; select * from table limit offset , count ;","title":"\u8bfe\u65f6 22 DQL\uff08\u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff09\u4e4b limit \u65b9\u8a00"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/","text":"4.2-SQL\u8fdb\u9636\uff1a\u7ea6\u675f\u3001\u5173\u7cfb\u3001\u8fde\u63a5 \u8bfe\u65f61 1.\u5355\u8868\u7684\u67e5\u8be2\u7ec3\u4e60 \u53ef\u89c6\u5316\u5ba2\u6237\u7aef SQLyog -- \u67e5\u8be2\u90e8\u95e8\u7f16\u53f7\u4e3a30\u7684\u6240\u6709\u5458\u5de5 select * from emp where deptno = 30 ; -- \u67e5\u8be2\u6240\u6709\u9500\u552e\u5458\u7684\u59d3\u540d\u3001\u7f16\u53f7\u548c\u90e8\u95e8\u7f16\u53f7 select ename , empno , deptno from emp where job = '\u9500\u552e\u5458' -- \u67e5\u8be2\u5956\u91d1\u9ad8\u4e8e\u5de5\u8d44\u7684\u5458\u5de5 select * from emp where comm > sal ; -- \u67e5\u8be2\u5956\u91d1\u9ad8\u4e8e\u5de5\u8d4460%\u7684\u5458\u5de5 select * from emp where comm > sal * 0 . 6 ; -- \u67e5\u8be2\u90e8\u95e8\u7f16\u53f7\u4e3a10\u4e2d\u6240\u6709\u7ecf\u7406\uff0c\u548c\u90e8\u95e8\u7f16\u53f7\u7f16\u53f7\u4e3a20\u4e2d\u6240\u6709\u9500\u552e\u5458\u7684\u8be6\u7ec6\u8d44\u6599 select * from emp where ( deptno = 10 and job = '\u7ecf\u7406' ) or ( deptno = 20 and job = '\u9500\u552e\u5458' ); -- \u67e5\u8be2\u90e8\u95e8\u7f16\u53f7\u4e3a10\u4e2d\u6240\u6709\u7ecf\u7406\uff0c\u548c\u90e8\u95e8\u7f16\u53f7\u7f16\u53f7\u4e3a20\u4e2d\u6240\u6709\u9500\u552e\u5458\uff0c -- \u8fd8\u6709\u65e2\u4e0d\u662f\u7ecf\u7406\u53c8\u4e0d\u662f\u9500\u552e\u5458\u4f46\u5de5\u8d44\u5927\u4e8e\u7b49\u4e8e20000\u7684\u6240\u6709\u5458\u5de5\u8be6\u7ec6\u8d44\u6599 select * from emp where ( deptno = 10 and job = '\u7ecf\u7406' ) or ( deptno = 20 and job = '\u9500\u552e\u5458' ) or ( job not in ( '\u7ecf\u7406' , '\u9500\u552e\u5458' ) and sal >= 2000 ); -- \u65e0\u5956\u91d1\u6216\u5956\u91d1\u4f4e\u4e8e1000\u7684\u5458\u5de5 select * from emp where comm is null or comm < 1000 ; -- \u67e5\u8be2\u540d\u5b57\u75313\u4e2a\u5b57\u7ec4\u6210\u7684\u5458\u5de5(3\u4e2a\u4e0b\u5212\u7ebf) select * from emp where ename like '___' ; -- \u67e5\u8be22000\u5e74\u5165\u804c\u7684\u5458\u5de5 select * from emp where hiredate like '2000-%' ; -- \u67e5\u8be2\u6240\u6709\u5458\u5de5\uff0c\u7528\u7f16\u53f7\u5347\u5e8f\u6392\u5e8f select * from emp order by empno asc ; -- \u67e5\u8be2\u6240\u6709\u5458\u5de5\u8be6\u7ec6\u4fe1\u606f\uff0c\u7528\u5de5\u8d44\u964d\u5e8f\u6392\u5e8f\uff0c\u5982\u679c\u5de5\u8d44\u76f8\u540c\u4f7f\u7528\u5165\u804c\u65e5\u671f\u5347\u5e8f\u6392\u5e8f select * from emp order by sal desc , hiredate asc ; -- \u67e5\u8be2\u6bcf\u4e2a\u90e8\u95e8\u7684\u5e73\u5747\u5de5\u8d44 select deptno , avg ( sal ) from emp group by deptno ; -- \u67e5\u8be2\u6bcf\u4e2a\u90e8\u95e8\u96c7\u5458\u6570\u91cf select deptno , count ( * ) from emp group by deptno ; -- \u67e5\u8be2\u6bcf\u79cd\u5de5\u4f5c\u7684\u6700\u9ad8\u5de5\u8d44\uff0c\u6700\u4f4e\u5de5\u8d44\uff0c\u4eba\u6570 select job , max ( sal ), min ( sal ), count ( * ) from emp group by job ; \u8bfe\u65f62 2.mysql\u7f16\u7801\u95ee\u9898 -- \u67e5\u770bMySQL\u7684\u6570\u636e\u5e93\u7f16\u7801 show variables like 'char%' ; -- \u4e34\u65f6\u8bbe\u7f6e\u53d8\u91cf set character_set_client = utf8 set character_set_results = utf8 \u6c38\u4e45\u8bbe\u7f6e: my.ini\u4e2d\u914d\u7f6e \u8bfe\u65f63 3.mysql\u5907\u4efd\u4e0e\u6062\u590d\u6570\u636e\u5e93 1\u3001\u5907\u4efd\uff1a\u6570\u636e\u5e93->SQL\u8bed\u53e5 $ mysqldump -u\u7528\u6237\u540d -p\u5bc6\u7801 \u6570\u636e\u5e93\u540d > \u8981\u751f\u6210\u7684SQL\u811a\u672c\u8def\u5f84 2\u3001\u6062\u590d\uff1aSQL\u8bed\u53e5->\u6570\u636e\u5e93 $ mysql -u\u7528\u6237\u540d -p\u5bc6\u7801 \u6570\u636e\u5e93\u540d < \u8981\u751f\u6210\u7684SQL\u811a\u672c\u8def\u5f84 # \u6216\u8005 > source \u8981\u751f\u6210\u7684SQL\u811a\u672c\u8def\u5f84 \u8bfe\u65f64 4.\u7ea6\u675f\u4e4b\u4e3b\u952e\u7ea6\u675f \u7279\u70b9\uff1a\u552f\u4e00\uff0c\u975e\u7a7a\uff0c\u88ab\u5f15\u7528 \u6307\u5b9aid\u5217\u4e3a\u4e3b\u952e\u5217 -- 1\u3001\u521b\u5efa\u8868\u65f6\u6307\u5b9a\u4e3b\u952e create table stu ( id int primary key , name varchar ( 20 ) ) -- \u6216\u8005 create table stu ( id int , name varchar ( 20 ), primary key ( id ) ) -- 2\u3001\u5df2\u5b58\u5728\u8868\u6dfb\u52a0\u4e3b\u952e alter table stu add primary key ( id ); -- 3\u3001\u5220\u9664\u4e3b\u952e alter table stu drop primary key ; \u8bfe\u65f65 5.\u4e3b\u952e\u81ea\u589e\u957f \u4fdd\u8bc1\u63d2\u5165\u6570\u636e\u65f6\u4e3b\u952e\u552f\u4e00\u975e\u7a7a -- 1\u3001\u521b\u5efa\u8868\u65f6\u6307\u5b9a\u4e3b\u952e\u81ea\u589e\u957f create table stu ( id int primary key auto_increment , name varchar ( 20 ) ) -- \u8bbe\u7f6e\u5b57\u6bb5\u81ea\u589e\u957f alter table stu change id id int auto_increment ; -- \u5220\u9664\u81ea\u589e\u957f alter table stu change id id int ; uuid\u4f5c\u4e3a\u4e3b\u952e \u8bfe\u65f66 6.\u975e\u7a7a\u548c\u552f\u4e00\u7ea6\u675f \u975e\u7a7a\u7ea6\u675f\uff1a\u4e0d\u80fd\u4e3anull not null \u552f\u4e00\u7ea6\u675f:\u4e0d\u80fd\u91cd\u590d unique create table stu ( id int primary key auto_increment , name varchar ( 20 ) not null unique ) \u8bfe\u65f67 7.\u6982\u8ff0\u6a21\u578b\u3001\u5bf9\u8c61\u6a21\u578b\u3001\u5173\u7cfb\u6a21\u578b 1\u3001\u5bf9\u8c61\u6a21\u578b is a \u7ee7\u627f has a \u5173\u8054 1\u5bf91 1\u5bf9\u591a \u591a\u5bf9\u591a use a 2\u3001\u5173\u7cfb\u6a21\u578b \u6570\u636e\u5e93\u4e2d\u7684\u8868 \u4ee3\u7801\u5b9e\u73b0 // \u4e00\u5bf9\u4e00\u5173\u7cfb \u4e08\u592b-\u59bb\u5b50 class Husband { private Wife wife ; } class Wife { private Husband husband ; } // \u4e00\u5bf9\u591a\u5173\u7cfb \u90e8\u95e8-\u5458\u5de5 class Employee { private Department department ; } class Department { private List < Employee > employee ; } // \u591a\u5bf9\u591a\u5173\u7cfb \u8001\u5e08-\u5b66\u751f class Student { private List < Teacher > teachers } class Teacher { private List < Student > students } \u5916\u952e\u7ea6\u675f \u5916\u952e\u5f15\u7528\u4e3b\u952e\uff0c\u5fc5\u987b\u5f15\u7528\u53e6\u4e00\u5f20\u8868\u4e3b\u952e \u5916\u952e\u53ef\u4ee5\u91cd\u590d \u5916\u952e\u53ef\u4ee5\u4e3a\u7a7a \u4e00\u5f20\u8868\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a\u5916\u952e \u8bfe\u65f68 8.\u5916\u952e\u7ea6\u675f create table dept ( deptno int primary key auto_increment , dname varchar ( 50 ) ) insert into dept values ( 10 , '\u4eba\u529b\u90e8' ); insert into dept values ( 20 , '\u7814\u53d1\u90e8' ); insert into dept values ( 30 , '\u8d22\u52a1\u90e8' ); -- \u521b\u5efa\u8868\u65f6\u6dfb\u52a0\u5916\u952e\u7ea6\u675f create table emp ( empno int primary key auto_increment , ename varchar ( 50 ), dno int , constraint fk_emp_dept foreign key ( dno ) references dept ( deptno ) ) -- \u6dfb\u52a0\u5916\u952e\u7ea6\u675f alter table emp add constraint fk_emp_dept foreign key ( dno ) references dept ( deptno ) insert into emp ( ename ) values ( '\u5f20\u4e09' ); insert into emp ( ename , dno ) values ( '\u674e\u56db' , 10 ); insert into emp ( ename , dno ) values ( '\u738b\u4e94' , 20 ); \u8bfe\u65f69 9.\u4e00\u5bf9\u4e00\u5173\u7cfb \u4ece\u8868\u7684\u4e3b\u952e\u5c31\u662f\u5916\u952e create table husband ( hid int primary key auto_increment , hname varchar ( 50 ) ) insert into husband ( hname ) values ( '\u5218\u5907' ), ( '\u5173\u7fbd' ), ( '\u5f20\u98de' ) create table wife ( wid int primary key auto_increment , wname varchar ( 50 ), constraint fk_wife_husband foreign key ( wid ) references husband ( hid ) ) -- wid \u975e\u7a7a\uff0c\u552f\u4e00\uff0c\u5f15\u7528hid insert into wife ( wid , wname ) values ( 1 , '\u6768\u8d35\u5983' ); insert into wife ( wid , wname ) values ( 2 , '\u897f\u65bd' ); \u8bfe\u65f610 10.\u591a\u5bf9\u591a\u5173\u7cfb create table student ( sid int primary key auto_increment , sname varchar ( 50 ) ) create table teacher ( tid int primary key auto_increment , tname varchar ( 50 ) ) create table stu_tea ( sid int , tid int , constraint fk_student foreign key ( sid ) references student ( sid ), constraint fk_teacher foreign key ( tid ) references teacher ( tid ) ) insert into student ( sname ) values ( '\u6bb5\u8a89' ); insert into student ( sname ) values ( '\u4e54\u5cf0' ); insert into student ( sname ) values ( '\u865a\u7af9' ); insert into teacher ( tname ) values ( '\u9ec4\u8001\u5e08' ); insert into teacher ( tname ) values ( '\u5218\u8001\u5e08' ); insert into teacher ( tname ) values ( '\u674e\u8001\u5e08' ); insert into stu_tea ( sid , tid ) values ( 1 , 1 ); insert into stu_tea ( sid , tid ) values ( 2 , 1 ); insert into stu_tea ( sid , tid ) values ( 3 , 1 ); insert into stu_tea ( sid , tid ) values ( 1 , 2 ); insert into stu_tea ( sid , tid ) values ( 3 , 2 ); insert into stu_tea ( sid , tid ) values ( 1 , 3 ); insert into stu_tea ( sid , tid ) values ( 2 , 3 ); \u8bfe\u65f611 11.\u5408\u5e76\u7ed3\u679c\u96c6 \u8981\u5408\u5e76\u7684\u7ed3\u679c\u96c6\u8868\u7ed3\u6784\u4e00\u6837(\u5217\u6570, \u5217\u7c7b\u578b) create table tb_a ( id int , a_name varchar ( 50 )); insert into tb_a ( id , a_name ) values ( 1 , '1' ); insert into tb_a ( id , a_name ) values ( 2 , '2' ); insert into tb_a ( id , a_name ) values ( 3 , '3' ); create table tb_b ( id int , b_name varchar ( 50 )); insert into tb_b ( id , b_name ) values ( 3 , '3' ); insert into tb_b ( id , b_name ) values ( 4 , '4' ); insert into tb_b ( id , b_name ) values ( 5 , '5' ); -- \u4e0d\u5408\u5e76\u91cd\u590d\u884c select * from tb_a union all select * from tb_b ; -- \u5408\u5e76\u91cd\u590d\u884c select * from tb_a union select * from tb_b ; \u8bfe\u65f612 12.\u8fde\u63a5\u67e5\u8be2\u4e4b\u5185\u8fde\u63a5\uff08\u65b9\u8a00\uff09 -- \u65b9\u8a00 select * from \u8868 1 \u522b\u540d 1 , \u8868 2 \u522b\u540d 2 where \u522b\u540d 1 . xx = \u522b\u540d 2 . xx ; -- \u6807\u51c6 (\u63a8\u8350) select * from \u8868 1 \u522b\u540d 1 inner join \u8868 2 \u522b\u540d 2 on \u522b\u540d 1 . xx = \u522b\u540d 2 . xx ; -- \u81ea\u7136 select * from \u8868 1 \u522b\u540d 1 natural join \u8868 2 \u522b\u540d 2 \u7b1b\u5361\u5c14\u79ef: ( a , b , c ) X ( 1 , 2 ) -> a1 , a2 , b1 , b2 , c1 , c2 -- \u7b1b\u5361\u5c14\u79ef select * from emp , dept -- \u5458\u5de5\u5bf9\u5e94\u90e8\u95e8\u4fe1\u606f select * from emp , dept where emp . dno = dept . deptno ; -- \u6253\u5370\u6240\u6709\u5458\u5de5\u7684\u59d3\u540d\uff0c\u90e8\u95e8\u540d\u79f0, \u53d6\u522b\u540d select e . ename , d . dname from emp e , dept d where e . dno = d . deptno ; \u8bfe\u65f613 13.\u8fde\u63a5\u67e5\u8be2\u4e4b\u5185\u8fde\u63a5\uff08\u6807\u7b7e\u548c\u81ea\u7136\uff09 -- \u6807\u51c6\u63a8\u8350 select * from emp inner join dept on emp . dno = dept . deptno ; -- \u81ea\u52a8\u52a0where\u6761\u4ef6 select * from emp natural join dept \u8bfe\u65f614 14.\u8fde\u63a5\u67e5\u8be2\u4e4b\u5916\u8fde\u63a5 \u4e3b\u8868\u4e2d\u6240\u6709\u8bb0\u5f55\u90fd\u4f1a\u6253\u5370, \u526f\u8868\u6ca1\u6709null\u8865\u4f4d -- \u5de6\u5916\u8fde\u63a5, \u5de6\u8868\u4e3a\u4e3b select e . ename , ifnull ( d . dname , '\u65e0\u90e8\u95e8' ) as dname from emp e left outer join dept d on e . dno = d . deptno ; -- \u53f3\u5916\u8fde\u63a5, \u53f3\u8868\u4e3a\u4e3b select e . ename , d . dname from emp e right outer join dept d on e . dno = d . deptno ; -- \u5168\u5916\u8fde\u63a5 select e . ename , d . dname from emp e left outer join dept d on e . dno = d . deptno ; union select e . ename , d . dname from emp e right outer join dept d on e . dno = d . deptno ; \u8bfe\u65f615 15.\u5b50\u67e5\u8be2 \u67e5\u8be2\u4e2d\u6709\u67e5\u8be2 -- \u67e5\u8be2\u672c\u516c\u53f8\u5de5\u8d44\u6700\u9ad8\u7684\u5458\u5de5\u8be6\u7ec6\u4fe1\u606f select * from emp where sal = ( select max ( sal ) from emp ); \u5b50\u67e5\u8be2\u51fa\u73b0\u7684\u4f4d\u7f6e from \u540e\u4f5c\u4e3a\u8868\u5b58\u5728 ( \u591a\u884c\u591a\u5217 ) where \u540e\u4f5c\u4e3a\u6761\u4ef6\u5b58\u5728 \u6761\u4ef6 -- \u5355\u884c\u5355\u5217 select * from \u8868 1 \u522b\u540d 1 where \u5217 1 [ = , > , < , >= , <= , != ] ( select \u5217 from \u8868 2 \u522b\u540d 2 where \u6761\u4ef6 ) -- \u591a\u884c\u5355\u5217 select * from \u8868 1 \u522b\u540d 1 where \u5217 1 [ in , all , any ] ( select \u5217 from \u8868 2 \u522b\u540d 2 where \u6761\u4ef6 ) -- \u5355\u884c\u591a\u5217\uff08\u4e00\u4e2a\u5bf9\u8c61\uff09 select * from \u8868 1 \u522b\u540d 1 where ( \u5217 1 , \u5217 2 ) in ( select \u5217 1 , \u5217 2 from \u8868 2 \u522b\u540d 2 where \u6761\u4ef6 ) -- \u591a\u884c\u591a\u5217 select * from \u8868 1 \u522b\u540d 1 , ( select ...) \u522b\u540d 2 where \u6761\u4ef6 eg: -- \u5de5\u8d44\u9ad8\u4e8e\u5e73\u5747\u5de5\u8d44\u7684\u5458\u5de5 select * from emp where sal > ( select avg ( sal ) from emp ); -- \u5927\u4e8e30\u90e8\u95e8\u6240\u6709\u4eba\u7684\u5de5\u8d44\u7684\u5458\u5de5 select * from emp where sal > all ( select sal from emp where deptno = 30 ); -- \u548c\u674e\u767d\u5c97\u4f4d\u90e8\u95e8\u90fd\u76f8\u540c\u7684\u5458\u5de5 select * from emp where ( job , deptno ) in ( select jobm , deptno from emp where ename = '\u674e\u767d' ); \u8bfe\u65f616 16.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c1\u9898 \u67e5\u8be2\u81f3\u5c11\u6709\u4e00\u4e2a\u5458\u5de5\u7684\u90e8\u95e8\uff0c\u663e\u793a\u90e8\u95e8\u7f16\u53f7\uff0c\u90e8\u95e8\u540d\u79f0\uff0c\u90e8\u95e8\u4f4d\u7f6e\uff0c\u90e8\u95e8\u4eba\u6570 -- \u90e8\u95e8\u7f16\u53f7\uff0c\u90e8\u95e8\u540d\u79f0\uff0c\u90e8\u95e8\u4f4d\u7f6e select * from dept ; -- \u90e8\u95e8\u4eba\u6570 select deptno , count ( * ) from emp group by deptno -- \u6574\u5408 select d . * e1 . cnt from dept d inner join ( select deptno , count ( * ) cnt from emp group by deptno ) as e1 on d . deptno = e1 . deptno \u8bfe\u65f617 17.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c2\u9898 \u5217\u51fa\u6240\u6709\u5458\u5de5\u7684\u59d3\u540d\u53ca\u5176\u76f4\u63a5\u4e0a\u7ea7\u7684\u59d3\u540d select e . ename , m . ename from emp e left outer join emp m on e . mgr = m . empno ; \u8bfe\u65f618 18.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c4\u9898 \u5217\u51fa\u53d7\u96c7\u65e5\u671f\u65e9\u4e8e\u76f4\u63a5\u4e0a\u7ea7\u7684\u6240\u6709\u5458\u5de5\u7f16\u53f7\uff0c\u59d3\u540d\uff0c\u90e8\u95e8\u540d\u79f0 -- 1\u3001\u5148\u67e5\u8be2\u5458\u5de5 select e . empno , e . ename , e . deptno from emp e , emp m where e . mgr = m . empno and e . hiredate < m . hiredate -- 2\u3001\u67e5\u8be2\u90e8\u95e8\u540d\u79f0 select e . empno , e . ename , d . dname from emp e , emp m , dept d where e . mgr = m . empno and e . hiredate < m . hiredate and e . deptno = d . deptno \u8bfe\u65f619 19.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c5\u9898 \u5217\u51fa\u90e8\u95e8\u540d\u79f0\u548c\u8fd9\u4e9b\u90e8\u95e8\u7684\u5458\u5de5\u4fe1\u606f\uff0c\u540c\u65f6\u5217\u51fa\u54ea\u4e9b\u6ca1\u6709\u5458\u5de5\u7684\u90e8\u95e8 select * from emp e right outer join dept d on e . deptno = d . deptno ; \u8bfe\u65f620 20.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c7\u9898 \u5217\u51fa\u6700\u4f4e\u85aa\u91d1\u5927\u4e8e15000\u7684\u5404\u79cd\u5de5\u4f5c\u53ca\u4ece\u4e8b\u6b64\u5de5\u4f5c\u7684\u5458\u5de5\u4eba\u6570 select job , count ( * ) from emp e group by job having min ( sal ) > 15000 \u8bfe\u65f621 21.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c8\u9898 \u5217\u51fa\u5728\u9500\u552e\u90e8\u5de5\u4f5c\u7684\u5458\u5de5\u59d3\u540d\uff0c\u5047\u5b9a\u4e0d\u77e5\u9053\u9500\u552e\u90e8\u7684\u90e8\u95e8\u7f16\u53f7 select ename from emp e where e . deptno = ( select deptno from dept where dname = '\u9500\u552e\u90e8' ) \u8bfe\u65f622 22.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c9\u9898 \u5217\u51fa\u85aa\u91d1\u9ad8\u4e8e\u516c\u53f8\u5e73\u5747\u85aa\u91d1\u7684\u6240\u6709\u5458\u5de5\u4fe1\u606f\uff0c\u6240\u5728\u90e8\u95e8\u540d\u79f0\uff0c\u4e0a\u7ea7\u9886\u5bfc\uff0c\u5de5\u8d44\u7b49\u7ea7 -- \u85aa\u91d1\u9ad8\u4e8e\u516c\u53f8\u5e73\u5747\u85aa\u91d1\u7684\u6240\u6709\u5458\u5de5\u4fe1\u606f select * from emp where e . sal > ( select avg ( sal ) from emp ) select e . * , d . dname , m . ename , s . grade from emp e left outer join dept d on e . deptno = d . deptno left outer join emp m on e . mgr = m . empno left outer join salgrade s on e . sal between s . losal and s . hisal where e . sal > ( select avg ( sal ) from emp ) \u8bfe\u65f623 23.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c10\u9898 \u5217\u51fa\u4e0e\u5e9e\u7edf\u4ece\u4e8b\u76f8\u540c\u5de5\u4f5c\u7684\u6240\u6709\u5458\u5de5\u53ca\u90e8\u95e8\u540d\u79f0 select e . * , d . dname from emp e left outer join dept d on e . deptno = d . deptno where e . job = ( select job from emp where ename = '\u5e9e\u7edf' ) \u8bfe\u65f624 24.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c11\u9898 \u5217\u51fa\u85aa\u91d1\u9ad8\u4e8e\u90e8\u95e830\u5de5\u4f5c\u7684\u6240\u6709\u5458\u5de5\u7684\u85aa\u91d1\u7684\u5458\u5de5\u59d3\u540d\u548c\u85aa\u91d1\uff0c\u90e8\u95e8\u540d\u79f0 select e . ename , e . sal , d . dname from ename e left outer join deptno d on e . deptno = d . deptno where e . sal > ( select max ( sal ) from emp where deptno = 30 ) \u8bfe\u65f625 24.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c13\u9898 \u67e5\u51fa\u5e74\u4efd\uff0c\u5229\u6da6\uff0c\u5e74\u5ea6\u589e\u957f\u6bd4 select * from tb_year year zz 2000 100 2001 150 2002 250 2003 300 select y1 . * ifnull ( concat (( y1 . zz - y2 . zz ) / y2 . zz * 100 , '%' ), '0%' ) \u589e\u957f\u6bd4 from tb_year y1 left outer join tb_year y2 on y1 . year = y2 . year + 1","title":"4.2-SQL\u8fdb\u9636\uff1a\u7ea6\u675f\u3001\u5173\u7cfb\u3001\u8fde\u63a5"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#42-sql","text":"","title":"4.2-SQL\u8fdb\u9636\uff1a\u7ea6\u675f\u3001\u5173\u7cfb\u3001\u8fde\u63a5"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#1-1","text":"\u53ef\u89c6\u5316\u5ba2\u6237\u7aef SQLyog -- \u67e5\u8be2\u90e8\u95e8\u7f16\u53f7\u4e3a30\u7684\u6240\u6709\u5458\u5de5 select * from emp where deptno = 30 ; -- \u67e5\u8be2\u6240\u6709\u9500\u552e\u5458\u7684\u59d3\u540d\u3001\u7f16\u53f7\u548c\u90e8\u95e8\u7f16\u53f7 select ename , empno , deptno from emp where job = '\u9500\u552e\u5458' -- \u67e5\u8be2\u5956\u91d1\u9ad8\u4e8e\u5de5\u8d44\u7684\u5458\u5de5 select * from emp where comm > sal ; -- \u67e5\u8be2\u5956\u91d1\u9ad8\u4e8e\u5de5\u8d4460%\u7684\u5458\u5de5 select * from emp where comm > sal * 0 . 6 ; -- \u67e5\u8be2\u90e8\u95e8\u7f16\u53f7\u4e3a10\u4e2d\u6240\u6709\u7ecf\u7406\uff0c\u548c\u90e8\u95e8\u7f16\u53f7\u7f16\u53f7\u4e3a20\u4e2d\u6240\u6709\u9500\u552e\u5458\u7684\u8be6\u7ec6\u8d44\u6599 select * from emp where ( deptno = 10 and job = '\u7ecf\u7406' ) or ( deptno = 20 and job = '\u9500\u552e\u5458' ); -- \u67e5\u8be2\u90e8\u95e8\u7f16\u53f7\u4e3a10\u4e2d\u6240\u6709\u7ecf\u7406\uff0c\u548c\u90e8\u95e8\u7f16\u53f7\u7f16\u53f7\u4e3a20\u4e2d\u6240\u6709\u9500\u552e\u5458\uff0c -- \u8fd8\u6709\u65e2\u4e0d\u662f\u7ecf\u7406\u53c8\u4e0d\u662f\u9500\u552e\u5458\u4f46\u5de5\u8d44\u5927\u4e8e\u7b49\u4e8e20000\u7684\u6240\u6709\u5458\u5de5\u8be6\u7ec6\u8d44\u6599 select * from emp where ( deptno = 10 and job = '\u7ecf\u7406' ) or ( deptno = 20 and job = '\u9500\u552e\u5458' ) or ( job not in ( '\u7ecf\u7406' , '\u9500\u552e\u5458' ) and sal >= 2000 ); -- \u65e0\u5956\u91d1\u6216\u5956\u91d1\u4f4e\u4e8e1000\u7684\u5458\u5de5 select * from emp where comm is null or comm < 1000 ; -- \u67e5\u8be2\u540d\u5b57\u75313\u4e2a\u5b57\u7ec4\u6210\u7684\u5458\u5de5(3\u4e2a\u4e0b\u5212\u7ebf) select * from emp where ename like '___' ; -- \u67e5\u8be22000\u5e74\u5165\u804c\u7684\u5458\u5de5 select * from emp where hiredate like '2000-%' ; -- \u67e5\u8be2\u6240\u6709\u5458\u5de5\uff0c\u7528\u7f16\u53f7\u5347\u5e8f\u6392\u5e8f select * from emp order by empno asc ; -- \u67e5\u8be2\u6240\u6709\u5458\u5de5\u8be6\u7ec6\u4fe1\u606f\uff0c\u7528\u5de5\u8d44\u964d\u5e8f\u6392\u5e8f\uff0c\u5982\u679c\u5de5\u8d44\u76f8\u540c\u4f7f\u7528\u5165\u804c\u65e5\u671f\u5347\u5e8f\u6392\u5e8f select * from emp order by sal desc , hiredate asc ; -- \u67e5\u8be2\u6bcf\u4e2a\u90e8\u95e8\u7684\u5e73\u5747\u5de5\u8d44 select deptno , avg ( sal ) from emp group by deptno ; -- \u67e5\u8be2\u6bcf\u4e2a\u90e8\u95e8\u96c7\u5458\u6570\u91cf select deptno , count ( * ) from emp group by deptno ; -- \u67e5\u8be2\u6bcf\u79cd\u5de5\u4f5c\u7684\u6700\u9ad8\u5de5\u8d44\uff0c\u6700\u4f4e\u5de5\u8d44\uff0c\u4eba\u6570 select job , max ( sal ), min ( sal ), count ( * ) from emp group by job ;","title":"\u8bfe\u65f61 1.\u5355\u8868\u7684\u67e5\u8be2\u7ec3\u4e60"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#2-2mysql","text":"-- \u67e5\u770bMySQL\u7684\u6570\u636e\u5e93\u7f16\u7801 show variables like 'char%' ; -- \u4e34\u65f6\u8bbe\u7f6e\u53d8\u91cf set character_set_client = utf8 set character_set_results = utf8 \u6c38\u4e45\u8bbe\u7f6e: my.ini\u4e2d\u914d\u7f6e","title":"\u8bfe\u65f62 2.mysql\u7f16\u7801\u95ee\u9898"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#3-3mysql","text":"1\u3001\u5907\u4efd\uff1a\u6570\u636e\u5e93->SQL\u8bed\u53e5 $ mysqldump -u\u7528\u6237\u540d -p\u5bc6\u7801 \u6570\u636e\u5e93\u540d > \u8981\u751f\u6210\u7684SQL\u811a\u672c\u8def\u5f84 2\u3001\u6062\u590d\uff1aSQL\u8bed\u53e5->\u6570\u636e\u5e93 $ mysql -u\u7528\u6237\u540d -p\u5bc6\u7801 \u6570\u636e\u5e93\u540d < \u8981\u751f\u6210\u7684SQL\u811a\u672c\u8def\u5f84 # \u6216\u8005 > source \u8981\u751f\u6210\u7684SQL\u811a\u672c\u8def\u5f84","title":"\u8bfe\u65f63 3.mysql\u5907\u4efd\u4e0e\u6062\u590d\u6570\u636e\u5e93"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#4-4","text":"\u7279\u70b9\uff1a\u552f\u4e00\uff0c\u975e\u7a7a\uff0c\u88ab\u5f15\u7528 \u6307\u5b9aid\u5217\u4e3a\u4e3b\u952e\u5217 -- 1\u3001\u521b\u5efa\u8868\u65f6\u6307\u5b9a\u4e3b\u952e create table stu ( id int primary key , name varchar ( 20 ) ) -- \u6216\u8005 create table stu ( id int , name varchar ( 20 ), primary key ( id ) ) -- 2\u3001\u5df2\u5b58\u5728\u8868\u6dfb\u52a0\u4e3b\u952e alter table stu add primary key ( id ); -- 3\u3001\u5220\u9664\u4e3b\u952e alter table stu drop primary key ;","title":"\u8bfe\u65f64 4.\u7ea6\u675f\u4e4b\u4e3b\u952e\u7ea6\u675f"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#5-5","text":"\u4fdd\u8bc1\u63d2\u5165\u6570\u636e\u65f6\u4e3b\u952e\u552f\u4e00\u975e\u7a7a -- 1\u3001\u521b\u5efa\u8868\u65f6\u6307\u5b9a\u4e3b\u952e\u81ea\u589e\u957f create table stu ( id int primary key auto_increment , name varchar ( 20 ) ) -- \u8bbe\u7f6e\u5b57\u6bb5\u81ea\u589e\u957f alter table stu change id id int auto_increment ; -- \u5220\u9664\u81ea\u589e\u957f alter table stu change id id int ; uuid\u4f5c\u4e3a\u4e3b\u952e","title":"\u8bfe\u65f65 5.\u4e3b\u952e\u81ea\u589e\u957f"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#6-6","text":"\u975e\u7a7a\u7ea6\u675f\uff1a\u4e0d\u80fd\u4e3anull not null \u552f\u4e00\u7ea6\u675f:\u4e0d\u80fd\u91cd\u590d unique create table stu ( id int primary key auto_increment , name varchar ( 20 ) not null unique )","title":"\u8bfe\u65f66 6.\u975e\u7a7a\u548c\u552f\u4e00\u7ea6\u675f"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#7-7","text":"1\u3001\u5bf9\u8c61\u6a21\u578b is a \u7ee7\u627f has a \u5173\u8054 1\u5bf91 1\u5bf9\u591a \u591a\u5bf9\u591a use a 2\u3001\u5173\u7cfb\u6a21\u578b \u6570\u636e\u5e93\u4e2d\u7684\u8868 \u4ee3\u7801\u5b9e\u73b0 // \u4e00\u5bf9\u4e00\u5173\u7cfb \u4e08\u592b-\u59bb\u5b50 class Husband { private Wife wife ; } class Wife { private Husband husband ; } // \u4e00\u5bf9\u591a\u5173\u7cfb \u90e8\u95e8-\u5458\u5de5 class Employee { private Department department ; } class Department { private List < Employee > employee ; } // \u591a\u5bf9\u591a\u5173\u7cfb \u8001\u5e08-\u5b66\u751f class Student { private List < Teacher > teachers } class Teacher { private List < Student > students } \u5916\u952e\u7ea6\u675f \u5916\u952e\u5f15\u7528\u4e3b\u952e\uff0c\u5fc5\u987b\u5f15\u7528\u53e6\u4e00\u5f20\u8868\u4e3b\u952e \u5916\u952e\u53ef\u4ee5\u91cd\u590d \u5916\u952e\u53ef\u4ee5\u4e3a\u7a7a \u4e00\u5f20\u8868\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a\u5916\u952e","title":"\u8bfe\u65f67 7.\u6982\u8ff0\u6a21\u578b\u3001\u5bf9\u8c61\u6a21\u578b\u3001\u5173\u7cfb\u6a21\u578b"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#8-8","text":"create table dept ( deptno int primary key auto_increment , dname varchar ( 50 ) ) insert into dept values ( 10 , '\u4eba\u529b\u90e8' ); insert into dept values ( 20 , '\u7814\u53d1\u90e8' ); insert into dept values ( 30 , '\u8d22\u52a1\u90e8' ); -- \u521b\u5efa\u8868\u65f6\u6dfb\u52a0\u5916\u952e\u7ea6\u675f create table emp ( empno int primary key auto_increment , ename varchar ( 50 ), dno int , constraint fk_emp_dept foreign key ( dno ) references dept ( deptno ) ) -- \u6dfb\u52a0\u5916\u952e\u7ea6\u675f alter table emp add constraint fk_emp_dept foreign key ( dno ) references dept ( deptno ) insert into emp ( ename ) values ( '\u5f20\u4e09' ); insert into emp ( ename , dno ) values ( '\u674e\u56db' , 10 ); insert into emp ( ename , dno ) values ( '\u738b\u4e94' , 20 );","title":"\u8bfe\u65f68 8.\u5916\u952e\u7ea6\u675f"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#9-9","text":"\u4ece\u8868\u7684\u4e3b\u952e\u5c31\u662f\u5916\u952e create table husband ( hid int primary key auto_increment , hname varchar ( 50 ) ) insert into husband ( hname ) values ( '\u5218\u5907' ), ( '\u5173\u7fbd' ), ( '\u5f20\u98de' ) create table wife ( wid int primary key auto_increment , wname varchar ( 50 ), constraint fk_wife_husband foreign key ( wid ) references husband ( hid ) ) -- wid \u975e\u7a7a\uff0c\u552f\u4e00\uff0c\u5f15\u7528hid insert into wife ( wid , wname ) values ( 1 , '\u6768\u8d35\u5983' ); insert into wife ( wid , wname ) values ( 2 , '\u897f\u65bd' );","title":"\u8bfe\u65f69 9.\u4e00\u5bf9\u4e00\u5173\u7cfb"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#10-10","text":"create table student ( sid int primary key auto_increment , sname varchar ( 50 ) ) create table teacher ( tid int primary key auto_increment , tname varchar ( 50 ) ) create table stu_tea ( sid int , tid int , constraint fk_student foreign key ( sid ) references student ( sid ), constraint fk_teacher foreign key ( tid ) references teacher ( tid ) ) insert into student ( sname ) values ( '\u6bb5\u8a89' ); insert into student ( sname ) values ( '\u4e54\u5cf0' ); insert into student ( sname ) values ( '\u865a\u7af9' ); insert into teacher ( tname ) values ( '\u9ec4\u8001\u5e08' ); insert into teacher ( tname ) values ( '\u5218\u8001\u5e08' ); insert into teacher ( tname ) values ( '\u674e\u8001\u5e08' ); insert into stu_tea ( sid , tid ) values ( 1 , 1 ); insert into stu_tea ( sid , tid ) values ( 2 , 1 ); insert into stu_tea ( sid , tid ) values ( 3 , 1 ); insert into stu_tea ( sid , tid ) values ( 1 , 2 ); insert into stu_tea ( sid , tid ) values ( 3 , 2 ); insert into stu_tea ( sid , tid ) values ( 1 , 3 ); insert into stu_tea ( sid , tid ) values ( 2 , 3 );","title":"\u8bfe\u65f610 10.\u591a\u5bf9\u591a\u5173\u7cfb"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#11-11","text":"\u8981\u5408\u5e76\u7684\u7ed3\u679c\u96c6\u8868\u7ed3\u6784\u4e00\u6837(\u5217\u6570, \u5217\u7c7b\u578b) create table tb_a ( id int , a_name varchar ( 50 )); insert into tb_a ( id , a_name ) values ( 1 , '1' ); insert into tb_a ( id , a_name ) values ( 2 , '2' ); insert into tb_a ( id , a_name ) values ( 3 , '3' ); create table tb_b ( id int , b_name varchar ( 50 )); insert into tb_b ( id , b_name ) values ( 3 , '3' ); insert into tb_b ( id , b_name ) values ( 4 , '4' ); insert into tb_b ( id , b_name ) values ( 5 , '5' ); -- \u4e0d\u5408\u5e76\u91cd\u590d\u884c select * from tb_a union all select * from tb_b ; -- \u5408\u5e76\u91cd\u590d\u884c select * from tb_a union select * from tb_b ;","title":"\u8bfe\u65f611 11.\u5408\u5e76\u7ed3\u679c\u96c6"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#12-12","text":"-- \u65b9\u8a00 select * from \u8868 1 \u522b\u540d 1 , \u8868 2 \u522b\u540d 2 where \u522b\u540d 1 . xx = \u522b\u540d 2 . xx ; -- \u6807\u51c6 (\u63a8\u8350) select * from \u8868 1 \u522b\u540d 1 inner join \u8868 2 \u522b\u540d 2 on \u522b\u540d 1 . xx = \u522b\u540d 2 . xx ; -- \u81ea\u7136 select * from \u8868 1 \u522b\u540d 1 natural join \u8868 2 \u522b\u540d 2 \u7b1b\u5361\u5c14\u79ef: ( a , b , c ) X ( 1 , 2 ) -> a1 , a2 , b1 , b2 , c1 , c2 -- \u7b1b\u5361\u5c14\u79ef select * from emp , dept -- \u5458\u5de5\u5bf9\u5e94\u90e8\u95e8\u4fe1\u606f select * from emp , dept where emp . dno = dept . deptno ; -- \u6253\u5370\u6240\u6709\u5458\u5de5\u7684\u59d3\u540d\uff0c\u90e8\u95e8\u540d\u79f0, \u53d6\u522b\u540d select e . ename , d . dname from emp e , dept d where e . dno = d . deptno ;","title":"\u8bfe\u65f612 12.\u8fde\u63a5\u67e5\u8be2\u4e4b\u5185\u8fde\u63a5\uff08\u65b9\u8a00\uff09"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#13-13","text":"-- \u6807\u51c6\u63a8\u8350 select * from emp inner join dept on emp . dno = dept . deptno ; -- \u81ea\u52a8\u52a0where\u6761\u4ef6 select * from emp natural join dept","title":"\u8bfe\u65f613 13.\u8fde\u63a5\u67e5\u8be2\u4e4b\u5185\u8fde\u63a5\uff08\u6807\u7b7e\u548c\u81ea\u7136\uff09"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#14-14","text":"\u4e3b\u8868\u4e2d\u6240\u6709\u8bb0\u5f55\u90fd\u4f1a\u6253\u5370, \u526f\u8868\u6ca1\u6709null\u8865\u4f4d -- \u5de6\u5916\u8fde\u63a5, \u5de6\u8868\u4e3a\u4e3b select e . ename , ifnull ( d . dname , '\u65e0\u90e8\u95e8' ) as dname from emp e left outer join dept d on e . dno = d . deptno ; -- \u53f3\u5916\u8fde\u63a5, \u53f3\u8868\u4e3a\u4e3b select e . ename , d . dname from emp e right outer join dept d on e . dno = d . deptno ; -- \u5168\u5916\u8fde\u63a5 select e . ename , d . dname from emp e left outer join dept d on e . dno = d . deptno ; union select e . ename , d . dname from emp e right outer join dept d on e . dno = d . deptno ;","title":"\u8bfe\u65f614 14.\u8fde\u63a5\u67e5\u8be2\u4e4b\u5916\u8fde\u63a5"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#15-15","text":"\u67e5\u8be2\u4e2d\u6709\u67e5\u8be2 -- \u67e5\u8be2\u672c\u516c\u53f8\u5de5\u8d44\u6700\u9ad8\u7684\u5458\u5de5\u8be6\u7ec6\u4fe1\u606f select * from emp where sal = ( select max ( sal ) from emp ); \u5b50\u67e5\u8be2\u51fa\u73b0\u7684\u4f4d\u7f6e from \u540e\u4f5c\u4e3a\u8868\u5b58\u5728 ( \u591a\u884c\u591a\u5217 ) where \u540e\u4f5c\u4e3a\u6761\u4ef6\u5b58\u5728 \u6761\u4ef6 -- \u5355\u884c\u5355\u5217 select * from \u8868 1 \u522b\u540d 1 where \u5217 1 [ = , > , < , >= , <= , != ] ( select \u5217 from \u8868 2 \u522b\u540d 2 where \u6761\u4ef6 ) -- \u591a\u884c\u5355\u5217 select * from \u8868 1 \u522b\u540d 1 where \u5217 1 [ in , all , any ] ( select \u5217 from \u8868 2 \u522b\u540d 2 where \u6761\u4ef6 ) -- \u5355\u884c\u591a\u5217\uff08\u4e00\u4e2a\u5bf9\u8c61\uff09 select * from \u8868 1 \u522b\u540d 1 where ( \u5217 1 , \u5217 2 ) in ( select \u5217 1 , \u5217 2 from \u8868 2 \u522b\u540d 2 where \u6761\u4ef6 ) -- \u591a\u884c\u591a\u5217 select * from \u8868 1 \u522b\u540d 1 , ( select ...) \u522b\u540d 2 where \u6761\u4ef6 eg: -- \u5de5\u8d44\u9ad8\u4e8e\u5e73\u5747\u5de5\u8d44\u7684\u5458\u5de5 select * from emp where sal > ( select avg ( sal ) from emp ); -- \u5927\u4e8e30\u90e8\u95e8\u6240\u6709\u4eba\u7684\u5de5\u8d44\u7684\u5458\u5de5 select * from emp where sal > all ( select sal from emp where deptno = 30 ); -- \u548c\u674e\u767d\u5c97\u4f4d\u90e8\u95e8\u90fd\u76f8\u540c\u7684\u5458\u5de5 select * from emp where ( job , deptno ) in ( select jobm , deptno from emp where ename = '\u674e\u767d' );","title":"\u8bfe\u65f615 15.\u5b50\u67e5\u8be2"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#16-161","text":"\u67e5\u8be2\u81f3\u5c11\u6709\u4e00\u4e2a\u5458\u5de5\u7684\u90e8\u95e8\uff0c\u663e\u793a\u90e8\u95e8\u7f16\u53f7\uff0c\u90e8\u95e8\u540d\u79f0\uff0c\u90e8\u95e8\u4f4d\u7f6e\uff0c\u90e8\u95e8\u4eba\u6570 -- \u90e8\u95e8\u7f16\u53f7\uff0c\u90e8\u95e8\u540d\u79f0\uff0c\u90e8\u95e8\u4f4d\u7f6e select * from dept ; -- \u90e8\u95e8\u4eba\u6570 select deptno , count ( * ) from emp group by deptno -- \u6574\u5408 select d . * e1 . cnt from dept d inner join ( select deptno , count ( * ) cnt from emp group by deptno ) as e1 on d . deptno = e1 . deptno","title":"\u8bfe\u65f616 16.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c1\u9898"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#17-172","text":"\u5217\u51fa\u6240\u6709\u5458\u5de5\u7684\u59d3\u540d\u53ca\u5176\u76f4\u63a5\u4e0a\u7ea7\u7684\u59d3\u540d select e . ename , m . ename from emp e left outer join emp m on e . mgr = m . empno ;","title":"\u8bfe\u65f617 17.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c2\u9898"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#18-184","text":"\u5217\u51fa\u53d7\u96c7\u65e5\u671f\u65e9\u4e8e\u76f4\u63a5\u4e0a\u7ea7\u7684\u6240\u6709\u5458\u5de5\u7f16\u53f7\uff0c\u59d3\u540d\uff0c\u90e8\u95e8\u540d\u79f0 -- 1\u3001\u5148\u67e5\u8be2\u5458\u5de5 select e . empno , e . ename , e . deptno from emp e , emp m where e . mgr = m . empno and e . hiredate < m . hiredate -- 2\u3001\u67e5\u8be2\u90e8\u95e8\u540d\u79f0 select e . empno , e . ename , d . dname from emp e , emp m , dept d where e . mgr = m . empno and e . hiredate < m . hiredate and e . deptno = d . deptno","title":"\u8bfe\u65f618 18.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c4\u9898"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#19-195","text":"\u5217\u51fa\u90e8\u95e8\u540d\u79f0\u548c\u8fd9\u4e9b\u90e8\u95e8\u7684\u5458\u5de5\u4fe1\u606f\uff0c\u540c\u65f6\u5217\u51fa\u54ea\u4e9b\u6ca1\u6709\u5458\u5de5\u7684\u90e8\u95e8 select * from emp e right outer join dept d on e . deptno = d . deptno ;","title":"\u8bfe\u65f619 19.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c5\u9898"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#20-207","text":"\u5217\u51fa\u6700\u4f4e\u85aa\u91d1\u5927\u4e8e15000\u7684\u5404\u79cd\u5de5\u4f5c\u53ca\u4ece\u4e8b\u6b64\u5de5\u4f5c\u7684\u5458\u5de5\u4eba\u6570 select job , count ( * ) from emp e group by job having min ( sal ) > 15000","title":"\u8bfe\u65f620 20.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c7\u9898"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#21-218","text":"\u5217\u51fa\u5728\u9500\u552e\u90e8\u5de5\u4f5c\u7684\u5458\u5de5\u59d3\u540d\uff0c\u5047\u5b9a\u4e0d\u77e5\u9053\u9500\u552e\u90e8\u7684\u90e8\u95e8\u7f16\u53f7 select ename from emp e where e . deptno = ( select deptno from dept where dname = '\u9500\u552e\u90e8' )","title":"\u8bfe\u65f621 21.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c8\u9898"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#22-229","text":"\u5217\u51fa\u85aa\u91d1\u9ad8\u4e8e\u516c\u53f8\u5e73\u5747\u85aa\u91d1\u7684\u6240\u6709\u5458\u5de5\u4fe1\u606f\uff0c\u6240\u5728\u90e8\u95e8\u540d\u79f0\uff0c\u4e0a\u7ea7\u9886\u5bfc\uff0c\u5de5\u8d44\u7b49\u7ea7 -- \u85aa\u91d1\u9ad8\u4e8e\u516c\u53f8\u5e73\u5747\u85aa\u91d1\u7684\u6240\u6709\u5458\u5de5\u4fe1\u606f select * from emp where e . sal > ( select avg ( sal ) from emp ) select e . * , d . dname , m . ename , s . grade from emp e left outer join dept d on e . deptno = d . deptno left outer join emp m on e . mgr = m . empno left outer join salgrade s on e . sal between s . losal and s . hisal where e . sal > ( select avg ( sal ) from emp )","title":"\u8bfe\u65f622 22.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c9\u9898"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#23-2310","text":"\u5217\u51fa\u4e0e\u5e9e\u7edf\u4ece\u4e8b\u76f8\u540c\u5de5\u4f5c\u7684\u6240\u6709\u5458\u5de5\u53ca\u90e8\u95e8\u540d\u79f0 select e . * , d . dname from emp e left outer join dept d on e . deptno = d . deptno where e . job = ( select job from emp where ename = '\u5e9e\u7edf' )","title":"\u8bfe\u65f623 23.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c10\u9898"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#24-2411","text":"\u5217\u51fa\u85aa\u91d1\u9ad8\u4e8e\u90e8\u95e830\u5de5\u4f5c\u7684\u6240\u6709\u5458\u5de5\u7684\u85aa\u91d1\u7684\u5458\u5de5\u59d3\u540d\u548c\u85aa\u91d1\uff0c\u90e8\u95e8\u540d\u79f0 select e . ename , e . sal , d . dname from ename e left outer join deptno d on e . deptno = d . deptno where e . sal > ( select max ( sal ) from emp where deptno = 30 )","title":"\u8bfe\u65f624 24.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c11\u9898"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/4-2-SQL\u8fdb\u9636-\u7ea6\u675f\u5173\u7cfb\u8fde\u63a5/#25-2413","text":"\u67e5\u51fa\u5e74\u4efd\uff0c\u5229\u6da6\uff0c\u5e74\u5ea6\u589e\u957f\u6bd4 select * from tb_year year zz 2000 100 2001 150 2002 250 2003 300 select y1 . * ifnull ( concat (( y1 . zz - y2 . zz ) / y2 . zz * 100 , '%' ), '0%' ) \u589e\u957f\u6bd4 from tb_year y1 left outer join tb_year y2 on y1 . year = y2 . year + 1","title":"\u8bfe\u65f625 24.\u591a\u8868\u67e5\u8be2\u7ec3\u4e60\u7b2c13\u9898"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/5-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8/","text":"5-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8 \u8bfe\u65f61-2 1.\u4ec0\u4e48\u662fJDBC JDBC \u6570\u636e\u5e93\u8bbf\u95ee\u89c4\u8303 \u5e94\u7528\u7a0b\u5e8f <-> JDBC <-> MySQL\u9a71\u52a8 <-> MySQL <-> Oracle\u9a71\u52a8 <-> Oracle \u5bfc\u5165jar\u5305 \u52a0\u8f7d\u9a71\u52a8 Class.forName('\u7c7b\u540d') \u7ed9\u51faurl\u3001username\u3001password \u4f7f\u7528DriverManager\u7c7b\u5f97\u5230Connection\u7c7b maven\u5bfc\u5165\u4f9d\u8d56 <dependencies> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.18 </version> </dependency> </dependencies> \u8fde\u63a5\u793a\u4f8b import java.sql.Connection ; import java.sql.DriverManager ; class Demo { // MySQL >= 8.0 \u914d\u7f6e\u53c2\u6570 private static final String JDBC_DRIVER = \"com.mysql.cj.jdbc.Driver\" ; private static final String DB_URL = \"jdbc:mysql://localhost:3306/data\" ; private static final String USER = \"root\" ; private static final String PASSWORD = \"123456\" ; public static void main ( String [] args ) throws Exception { // \u6ce8\u518c JDBC \u9a71\u52a8 Class . forName ( JDBC_DRIVER ); // \u7b49\u6548\u4e8e // com.mysql.cj.jdbc.Driver driver = new com.mysql.cj.jdbc.Driver(); // DriverManager.registerDriver(driver); // \u6253\u5f00\u94fe\u63a5 Connection conn = DriverManager . getConnection ( DB_URL , USER , PASSWORD ); // \u5173\u95ed\u94fe\u63a5 conn . close (); } } \u6240\u6709\u7684java.sql.Driver\u5b9e\u73b0\u7c7b\uff0c\u90fd\u63d0\u4f9b\u4e86static\u4ee3\u7801\u5757\uff0c \u5757\u5185\u4ee3\u7801\u628a\u81ea\u5df1\u6ce8\u518c\u5230DriverManager\u4e2d jdbc4.0\u4e4b\u540e \u6bcf\u4e2a\u9a71\u52a8jar\u5305\u4e2d\uff0c\u5728META-INF/services\u76ee\u5f55\u4e0b\u63d0\u4f9b\u4e86\u4e00\u4e2ajava.sql.Driver\u6587\u4ef6 \u5185\u5bb9\u5c31\u662f\u8be5\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u540d\u79f0 \u8bfe\u65f63 3.JDBC\u5b8c\u6210\u589e\u3001\u5220\u3001\u6539\u3001\u67e5 1\u3001\u589e\u3001\u5220\u3001\u6539 // \u53d1\u9001DML, DDL int Statement . executeUpdate ( String sql ); \u4ee3\u7801\u793a\u4f8b // \u6ce8\u518c JDBC \u9a71\u52a8 Class . forName ( JDBC_DRIVER ); // \u6253\u5f00\u94fe\u63a5 Connection conn = DriverManager . getConnection ( DB_URL , USER , PASSWORD ); Statement statement = conn . createStatement (); // \u589e\u5220\u6539 // String sql = \"insert into student(sname) values('\u9646\u5c0f\u51e4')\"; // String sql = \"update student set sname='\u82b1\u65e0\u7f3a' where sid=4\"; String sql = \"delete from student where sid=4\" ; int ret = statement . executeUpdate ( sql ); System . out . println ( ret ); // \u5173\u95ed\u94fe\u63a5 conn . close (); 2\u3001\u67e5\u8be2 ResultSet executeQuery ( String querySql ); boolean ResultSet . next (); // \u83b7\u53d6\u5217\u6570\u636e ResultSet . getString () ResultSet . getObject () ResultSet . getInt () ResultSet . getDouble () \u884c\u5149\u6807 beforeFirst <- \u9ed8\u8ba4\u5149\u6807\u4f4d\u7f6e first last AfterLast // \u6253\u5f00\u94fe\u63a5 Connection conn = DriverManager . getConnection ( DB_URL , USER , PASSWORD ); Statement statement = conn . createStatement (); // \u67e5\u8be2 String sql = \"select * from student\" ; ResultSet ret = statement . executeQuery ( sql ); while ( ret . next ()){ // \u901a\u8fc7\u5217\u5e8f\u53f7\u83b7\u53d6 int uid = ret . getInt ( 1 ); // \u901a\u8fc7\u5217\u540d\u79f0\u83b7\u53d6 String name = ret . getString ( \"sname\" ); System . out . println ( uid + \", \" + name ); } // \u5173\u95ed\u8d44\u6e90 ret . close (); statement . close (); conn . close (); \u8bfe\u65f64 4.JDBC\u4e4b\u4ee3\u7801\u89c4\u8303\u5316 // \u5b9a\u4e49 try { // \u5b9e\u4f8b\u5316 } finally { // \u5173\u95ed\u8d44\u6e90 } \u8bfe\u65f65 5.\u7ed3\u679c\u96c6\u5149\u6807\u4e0e\u5143\u6570\u636e JBDC\u4e3b\u8981\u7684\u7c7b DriverManager Connection conn = DriverManager . getConnection ( DB_URL , USER , PASSWORD ); Statement statement = conn . createStatement (); int executeUpdate ( String sql ) // \u6267\u884c\u589e\u3001\u5220\u3001\u6539 ResultSet executeQuery ( String sql ) // \u6267\u884c\u67e5\u8be2 boolean execute ( String sql ) // \u6267\u884c\u589e\u3001\u5220\u3001\u6539\u3001\u67e5 ResultSet\u6eda\u52a8\u7ed3\u679c\u96c6 \u4e00\u4e2a\u4e8c\u7ef4\u8868\u683c\uff0c\u5185\u90e8\u7ef4\u62a4\u4e86\u4e00\u4e2a\u884c\u5149\u6807\uff08\u6e38\u6807\uff09 next () // \u6700\u5e38\u7528 beforeFirst () afterLast () first () last () getRow () absolute () relative () isBeforeFirst () isAfterLast () isFirst () isLast () \u5143\u6570\u636e // \u5143\u6570\u636e ResultSetMetaData ResultSet . getMetaData () // \u83b7\u53d6\u7ed3\u679c\u96c6\u5217\u6570 int ResultSetMetaData . getColumnCount () // \u83b7\u53d6\u6307\u5b9a\u5217\u7684\u5217\u540d String ResultSetMetaData . getColumnName ( int colIndex ) \u8bfe\u65f66 6.\u7ed3\u679c\u96c6\u7684\u7279\u6027\uff08\u662f\u5426\u53ef\u6eda\u52a8\u3001\u662f\u5426\u654f\u611f\u3001\u662f\u5426\u53ef\u66f4\u65b0\uff09 \u786e\u5b9a\u7ed3\u679c\u96c6\u7279\u6027 1\u3001\u662f\u5426\u53ef\u6eda\u52a8 2\u3001\u662f\u5426\u654f\u611f 3\u3001\u662f\u5426\u53ef\u66f4\u65b0 // \u4e0d\u6eda\u52a8, \u4e0d\u654f\u611f\uff0c\u4e0d\u53ef\u66f4\u65b0 Statement createStatement () // \u6eda\u52a8\u652f\u6301 Statement createStatement ( int resultSetType , int resultSetConcurrency ) resultSetType: ResultSet . TYPE_FORWARD_ONLY // \u4e0d\u6eda\u52a8 ResultSet . TYPE_SCROLL_INSENSITIVE // \u6eda\u52a8\uff0c\u4e0d\u968f\u6570\u636e\u5e93\u53d8\u5316\u800c\u53d8\u5316 ResultSet . TYPE_SCROLL_SENSITIVE // \u6eda\u52a8\uff0c\u4e0d\u968f\u6570\u636e\u5e93\u53d8\u5316\u800c\u53d8\u5316 resultSetConcurrency // \u662f\u5426\u901a\u8fc7\u4fee\u6539\u7ed3\u679c\u96c6\u4e8c\u53cd\u5411\u5f71\u54cd\u6570\u636e\u5e93 ResultSet . CONCUR_READ_ONLY // \u7ed3\u679c\u96c6\u53ea\u8bfb ResultSet . CONCUR_UPDATABLE // \u7ed3\u679c\u96c6\u53ef\u66f4\u65b0 \u8bfe\u65f67 7.PreparedStatement\u7684\u7528\u6cd5 PreparedStatement\u662fStatement\u5b50\u63a5\u53e3 1\u3001\u9632\u6b62SQL\u6ce8\u5165\u653b\u51fb 2\u3001\u63d0\u9ad8\u4ee3\u7801\u53ef\u8bfb\u6027\uff0c\u53ef\u7ef4\u62a4\u6027 3\u3001\u63d0\u9ad8\u6548\u7387 // \u6253\u5f00\u94fe\u63a5 Connection conn = DriverManager . getConnection ( DB_URL , USER , PASSWORD ); // \u4f7f\u7528\u9884\u5904\u7406\u67e5\u8be2\uff0c \u4f7f\u7528\uff1f\u5360\u4f4d String sql = \"select * from student where sid = ?\" ; PreparedStatement statement = conn . prepareStatement ( sql ); // \u4e3a\u53c2\u6570\u8d4b\u503c statement . setInt ( 1 , 1 ); // \u83b7\u53d6\u6570\u636e ResultSet ret = statement . executeQuery (); while ( ret . next ()){ String name = ret . getString ( \"sname\" ); System . out . println ( name ); } // \u5173\u95ed\u8d44\u6e90 ret . close (); statement . close (); conn . close (); \u8bfe\u65f68 8.\u9884\u5904\u7406\u7684\u539f\u7406 \u670d\u52a1\u5668\u5de5\u4f5c\uff1a \uff081\uff09\u6821\u9a8c\uff1asql\u8bed\u53e5\u7684\u8bed\u6cd5 \uff082\uff09\u7f16\u8bd1\uff1a\u4e3a\u4e00\u4e2a\u4e0e\u51fd\u6570\u76f8\u4f3c\u7684\u4e1c\u897f \uff083\uff09\u6267\u884c\uff1a\u8c03\u7528\u51fd\u6570 PreparedStatement \uff081\uff09\u5148\u5c06sql\u53d1\u7ed9\u6570\u636e\u5e93\uff0c\u6570\u636e\u5e93\u5148\u8fdb\u884c\u6821\u9a8c \uff082\uff09\u6267\u884c\u7684\u65f6\u5019\u53ea\u53d1\u9001\u53c2\u6570 \u8bfe\u65f69 9.mysql\u7684\u9884\u7f16\u8bd1\u529f\u80fd\u9ed8\u8ba4\u662f\u5173\u95ed\u7684 prepare myfun from 'select * from student where sid = ?' set @ uid = 1 execute myfun using @ uid \u8bbe\u7f6e\u8fde\u63a5\u53c2\u6570\uff1a useServerPrepStmts=true cachePrepStmts=true DB_URL = \"jdbc:mysql://localhost:3306/data?useServerPrepStmts=true&cachePrepStmts=true\" ; \u8bfe\u65f610 10.JdbcUtils1.0\u5c0f\u5de5\u5177 JdbcUtils.java package util ; import java.io.IOException ; import java.io.InputStream ; import java.sql.Connection ; import java.sql.DriverManager ; import java.sql.SQLException ; import java.util.Properties ; public class JdbcUtils { // \u914d\u7f6e\u6587\u4ef6\u8def\u5f84 private static String dbconfig = \"dbconfig.properties\" ; private static Properties prop = null ; // \u9759\u6001\u4ee3\u7801\u5757\u53ea\u6267\u884c\u4e00\u6b21 static { // \u521d\u59cb\u5316\u6570\u636e\u5e93\u914d\u7f6e\u53c2\u6570 try { InputStream in = JdbcUtils . class . getClassLoader (). getResourceAsStream ( dbconfig ); prop = new Properties (); prop . load ( in ); } catch ( IOException e ) { throw new RuntimeException ( e ); } // \u52a0\u8f7d\u9a71\u52a8 try { Class . forName ( prop . getProperty ( \"driver\" )); } catch ( ClassNotFoundException e ) { throw new RuntimeException ( e ); } } public static Connection getConnection () throws SQLException { return DriverManager . getConnection ( prop . getProperty ( \"url\" ), prop . getProperty ( \"username\" ), prop . getProperty ( \"password\" ) ); } public static void main ( String [] args ) throws SQLException { Connection conn = getConnection (); System . out . println ( conn ); } } dbconfig.properties driver = com . mysql . cj . jdbc . Driver url = jdbc : mysql : //localhost:3306/data username = root password = 123456 \u8bfe\u65f611 11.\u9762\u5411\u63a5\u53e3\u7f16\u7a0b DAO\u6a21\u5f0f data access object \u5199\u4e00\u4e2a\u7c7b\uff0c\u628a\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u4ee3\u7801\u5c01\u88c5\u8d77\u6765 DAO\u5728\u6570\u636e\u5e93\u4e0e\u4e1a\u52a1\u903b\u8f91\uff08service\uff09\u4e4b\u95f4 \u5b9e\u4f53\u57df\uff0c\u5373\u64cd\u4f5c\u7684\u5bf9\u8c61 DAO\u6a21\u5f0f\u6b65\u9aa4 \uff081\uff09\u63d0\u4f9b\u4e00\u4e2aDAO\u63a5\u53e3 \uff082\uff09\u63d0\u4f9b\u4e00\u4e2aDAO\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b \uff083\uff09\u5728\u7f16\u5199\u4e00\u4e2aDAO\u5de5\u5382\uff0cService\u901a\u8fc7\u5de5\u5382\u6765\u83b7\u53d6DAO\u5b9e\u73b0 daoconfig.properties UserDaoClassName = UserDaoImpl UserDao.java public interface UserDao { } UserDaoImpl.java public class UserDaoImpl implements UserDao { } DaoFactory.java import java.io.IOException ; import java.io.InputStream ; import java.util.Properties ; public class DaoFactory { // \u914d\u7f6e\u6587\u4ef6\u8def\u5f84 private static String dbconfig = \"daoconfig.properties\" ; private static Properties prop = null ; // \u9759\u6001\u4ee3\u7801\u5757\u53ea\u6267\u884c\u4e00\u6b21 static { // \u521d\u59cb\u5316\u6570\u636e\u5e93\u914d\u7f6e\u53c2\u6570 try { InputStream in = DaoFactory . class . getClassLoader (). getResourceAsStream ( dbconfig ); prop = new Properties (); prop . load ( in ); } catch ( IOException e ) { throw new RuntimeException ( e ); } } /** * \u8fd4\u56de\u4e00\u4e2aUserDao\u7684\u5177\u4f53\u5b9e\u73b0\u7c7b */ public static UserDao getUserDao () { String daoClassName = prop . getProperty ( \"UserDaoClassName\" ); // \u901a\u8fc7\u53cd\u5c04\u521b\u5efa\u5b9e\u73b0\u7c7b\u7684\u5bf9\u8c61 try { Class Clazz = Class . forName ( daoClassName ); return ( UserDao ) Clazz . newInstance (); } catch ( Exception e ) { throw new RuntimeException ( e ); } } } \u8bfe\u65f612 12.\u4fee\u6539\u6848\u4f8b\uff0c\u5176\u4e2ddao\u5c42\u4e3ajdbc User.java public class User { private String username ; private int age ; public String getUsername () { return username ; } public int getAge () { return age ; } public void setUsername ( String username ) { this . username = username ; } public void setAge ( int age ) { this . age = age ; } @Override public String toString () { return \"User{\" + \"username='\" + username + '\\'' + \", age=\" + age + '}' ; } } daoconfig.properties UserDaoClassName = UserDaoImpl UserDao.java public interface UserDao { public void addUser ( User user ); public User getUserByUsername ( String username ); } UserDaoImpl.java import util.JdbcUtils ; import java.sql.Connection ; import java.sql.PreparedStatement ; import java.sql.ResultSet ; import java.sql.SQLException ; /** * create table user( * id int primary key auto_increment, * username varchar(50), * age int * ) */ public class UserDaoImpl implements UserDao { /** * ORM \u5bf9\u8c61\u5173\u7cfb\u6620\u5c04 * @param user */ @Override public void addUser ( User user ) { Connection conn = null ; PreparedStatement statement = null ; try { // \u5f97\u5230\u8fde\u63a5 conn = JdbcUtils . getConnection (); String sql = \"insert into user(username, age) values(?, ?)\" ; // \u51c6\u5907\u6a21\u677f statement = conn . prepareStatement ( sql ); // \u8d4b\u503c statement . setString ( 1 , user . getUsername ()); statement . setInt ( 2 , user . getAge ()); // \u6267\u884c statement . executeUpdate (); } catch ( Exception e ) { throw new RuntimeException ( e ); } finally { try { if ( statement != null ) { statement . close (); } if ( conn != null ) { conn . close (); } } catch ( SQLException e ) { } } } @Override public User getUserByUsername ( String username ) { Connection conn = null ; PreparedStatement statement = null ; try { // \u5f97\u5230\u8fde\u63a5 conn = JdbcUtils . getConnection (); String sql = \"select * from user where username = ? limit 1\" ; // \u51c6\u5907\u6a21\u677f statement = conn . prepareStatement ( sql ); // \u8d4b\u503c statement . setString ( 1 , username ); // \u6267\u884c ResultSet resultSet = statement . executeQuery (); if ( resultSet . next ()){ User user = new User (); user . setUsername ( resultSet . getString ( \"username\" )); user . setAge ( resultSet . getInt ( \"age\" )); return user ; } else { return null ; } } catch ( Exception e ) { throw new RuntimeException ( e ); } finally { try { if ( statement != null ) { statement . close (); } if ( conn != null ) { conn . close (); } } catch ( SQLException e ) { } } } } DaoFactory.java import java.io.IOException ; import java.io.InputStream ; import java.util.Properties ; public class DaoFactory { // \u914d\u7f6e\u6587\u4ef6\u8def\u5f84 private static String dbconfig = \"daoconfig.properties\" ; private static Properties prop = null ; // \u9759\u6001\u4ee3\u7801\u5757\u53ea\u6267\u884c\u4e00\u6b21 static { // \u521d\u59cb\u5316\u6570\u636e\u5e93\u914d\u7f6e\u53c2\u6570 try { InputStream in = DaoFactory . class . getClassLoader (). getResourceAsStream ( dbconfig ); prop = new Properties (); prop . load ( in ); } catch ( IOException e ) { throw new RuntimeException ( e ); } } /** * \u8fd4\u56de\u4e00\u4e2aUserDao\u7684\u5177\u4f53\u5b9e\u73b0\u7c7b */ public static UserDao getUserDao () { String daoClassName = prop . getProperty ( \"UserDaoClassName\" ); // \u901a\u8fc7\u53cd\u5c04\u521b\u5efa\u5b9e\u73b0\u7c7b\u7684\u5bf9\u8c61 try { Class Clazz = Class . forName ( daoClassName ); return ( UserDao ) Clazz . newInstance (); } catch ( Exception e ) { throw new RuntimeException ( e ); } } } Service.java // \u6dfb\u52a0\u6d4b\u8bd5 UserDao userDao = DaoFactory . getUserDao (); User user = new User (); user . setUsername ( \"\u5c0f\u660e\" ); user . setAge ( 23 ); userDao . addUser ( user ); // \u67e5\u8be2\u6d4b\u8bd5 User user1 = userDao . getUserByUsername ( \"\u5c0f\u660e\" ); System . out . println ( user1 ); \u8bfe\u65f613 13.util\u5305\u4e0b\u7684Date\u4e0esql\u5305\u4e0b\u7684\u65f6\u95f4\u7c7b\u578b\u4e4b\u95f4\u7684\u8f6c\u6362 Data -> java.sql.Data Time -> java.sql.Time Timestamp -> java.sql.Timestamp \u9886\u57df\u5bf9\u8c61\u4e2d\u6240\u6709\u5c5e\u6027\u4e0d\u80fd\u51fa\u73b0java.sql\u5305\u5185\u5bb9 \u7ee7\u627f\u5173\u7cfb java . util . Date - java . sql . Date \u7236\u7c7b\u8f6c\u5b50\u7c7b\uff1autil.Data -> sql.Date\u3001Time\u3001Timestamp java . util . Date UtilDate = new java . util . Date (); long longDate = UtilDate . getTime (); java . sql . Date sqlData = new java . sql . Date ( longDate ); \u5b50\u7c7b\u8f6c\u7236\u7c7b\uff1asql.Date\u3001Time\u3001Timestamp -> util.Data java . util . Date UtilDate = new java . sql . Date ( System . currentTimeMillis ()); \u8bfe\u65f614 14.\u5927\u6570\u636e \u53ef\u4ee5\u5c06\u6587\u4ef6\u5b58\u5165MySQL my.ini\u914d\u7f6e max_allowed_packet=10485760 \u8bfe\u65f615 15.\u6279\u5904\u7406 \u6279\u5904\u7406\u53ea\u9488\u5bf9\u66f4\u65b0\uff08\u589e\uff0c\u5220\uff0c\u6539\uff09 \u4e00\u6b21\u5411\u670d\u52a1\u5668\u53d1\u9001\u591a\u6761sql\u8bed\u53e5 \u5f00\u542f\u6279\u5904\u7406\u53c2\u6570 rewriteBatchedStatements=true dbconfig.properties driver = com . mysql . cj . jdbc . Driver url = jdbc : mysql : //localhost:3306/data?rewriteBatchedStatements=true username = root password = 123456 import util.JdbcUtils ; import java.sql.Connection ; import java.sql.PreparedStatement ; import java.sql.SQLException ; class Demo { public static void main ( String [] args ) throws SQLException { Connection conn = JdbcUtils . getConnection (); String sql = \"insert into user(username)values(?)\" ; PreparedStatement statement = conn . prepareStatement ( sql ); for ( int i = 0 ; i < 10000 ; i ++){ statement . setString ( 1 , \"name\" + i ); statement . addBatch (); // \u88c5\u7bb1 } long start = System . currentTimeMillis (); statement . executeBatch (); // \u63d0\u4ea4\u6570\u636e long end = System . currentTimeMillis (); System . out . println ( end - start ); // 107 } }","title":"5-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/5-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8/#5-jdbc","text":"","title":"5-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/5-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8/#1-2-1jdbc","text":"JDBC \u6570\u636e\u5e93\u8bbf\u95ee\u89c4\u8303 \u5e94\u7528\u7a0b\u5e8f <-> JDBC <-> MySQL\u9a71\u52a8 <-> MySQL <-> Oracle\u9a71\u52a8 <-> Oracle \u5bfc\u5165jar\u5305 \u52a0\u8f7d\u9a71\u52a8 Class.forName('\u7c7b\u540d') \u7ed9\u51faurl\u3001username\u3001password \u4f7f\u7528DriverManager\u7c7b\u5f97\u5230Connection\u7c7b maven\u5bfc\u5165\u4f9d\u8d56 <dependencies> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.18 </version> </dependency> </dependencies> \u8fde\u63a5\u793a\u4f8b import java.sql.Connection ; import java.sql.DriverManager ; class Demo { // MySQL >= 8.0 \u914d\u7f6e\u53c2\u6570 private static final String JDBC_DRIVER = \"com.mysql.cj.jdbc.Driver\" ; private static final String DB_URL = \"jdbc:mysql://localhost:3306/data\" ; private static final String USER = \"root\" ; private static final String PASSWORD = \"123456\" ; public static void main ( String [] args ) throws Exception { // \u6ce8\u518c JDBC \u9a71\u52a8 Class . forName ( JDBC_DRIVER ); // \u7b49\u6548\u4e8e // com.mysql.cj.jdbc.Driver driver = new com.mysql.cj.jdbc.Driver(); // DriverManager.registerDriver(driver); // \u6253\u5f00\u94fe\u63a5 Connection conn = DriverManager . getConnection ( DB_URL , USER , PASSWORD ); // \u5173\u95ed\u94fe\u63a5 conn . close (); } } \u6240\u6709\u7684java.sql.Driver\u5b9e\u73b0\u7c7b\uff0c\u90fd\u63d0\u4f9b\u4e86static\u4ee3\u7801\u5757\uff0c \u5757\u5185\u4ee3\u7801\u628a\u81ea\u5df1\u6ce8\u518c\u5230DriverManager\u4e2d jdbc4.0\u4e4b\u540e \u6bcf\u4e2a\u9a71\u52a8jar\u5305\u4e2d\uff0c\u5728META-INF/services\u76ee\u5f55\u4e0b\u63d0\u4f9b\u4e86\u4e00\u4e2ajava.sql.Driver\u6587\u4ef6 \u5185\u5bb9\u5c31\u662f\u8be5\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u540d\u79f0","title":"\u8bfe\u65f61-2 1.\u4ec0\u4e48\u662fJDBC"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/5-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8/#3-3jdbc","text":"1\u3001\u589e\u3001\u5220\u3001\u6539 // \u53d1\u9001DML, DDL int Statement . executeUpdate ( String sql ); \u4ee3\u7801\u793a\u4f8b // \u6ce8\u518c JDBC \u9a71\u52a8 Class . forName ( JDBC_DRIVER ); // \u6253\u5f00\u94fe\u63a5 Connection conn = DriverManager . getConnection ( DB_URL , USER , PASSWORD ); Statement statement = conn . createStatement (); // \u589e\u5220\u6539 // String sql = \"insert into student(sname) values('\u9646\u5c0f\u51e4')\"; // String sql = \"update student set sname='\u82b1\u65e0\u7f3a' where sid=4\"; String sql = \"delete from student where sid=4\" ; int ret = statement . executeUpdate ( sql ); System . out . println ( ret ); // \u5173\u95ed\u94fe\u63a5 conn . close (); 2\u3001\u67e5\u8be2 ResultSet executeQuery ( String querySql ); boolean ResultSet . next (); // \u83b7\u53d6\u5217\u6570\u636e ResultSet . getString () ResultSet . getObject () ResultSet . getInt () ResultSet . getDouble () \u884c\u5149\u6807 beforeFirst <- \u9ed8\u8ba4\u5149\u6807\u4f4d\u7f6e first last AfterLast // \u6253\u5f00\u94fe\u63a5 Connection conn = DriverManager . getConnection ( DB_URL , USER , PASSWORD ); Statement statement = conn . createStatement (); // \u67e5\u8be2 String sql = \"select * from student\" ; ResultSet ret = statement . executeQuery ( sql ); while ( ret . next ()){ // \u901a\u8fc7\u5217\u5e8f\u53f7\u83b7\u53d6 int uid = ret . getInt ( 1 ); // \u901a\u8fc7\u5217\u540d\u79f0\u83b7\u53d6 String name = ret . getString ( \"sname\" ); System . out . println ( uid + \", \" + name ); } // \u5173\u95ed\u8d44\u6e90 ret . close (); statement . close (); conn . close ();","title":"\u8bfe\u65f63 3.JDBC\u5b8c\u6210\u589e\u3001\u5220\u3001\u6539\u3001\u67e5"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/5-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8/#4-4jdbc","text":"// \u5b9a\u4e49 try { // \u5b9e\u4f8b\u5316 } finally { // \u5173\u95ed\u8d44\u6e90 }","title":"\u8bfe\u65f64 4.JDBC\u4e4b\u4ee3\u7801\u89c4\u8303\u5316"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/5-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8/#5-5","text":"JBDC\u4e3b\u8981\u7684\u7c7b DriverManager Connection conn = DriverManager . getConnection ( DB_URL , USER , PASSWORD ); Statement statement = conn . createStatement (); int executeUpdate ( String sql ) // \u6267\u884c\u589e\u3001\u5220\u3001\u6539 ResultSet executeQuery ( String sql ) // \u6267\u884c\u67e5\u8be2 boolean execute ( String sql ) // \u6267\u884c\u589e\u3001\u5220\u3001\u6539\u3001\u67e5 ResultSet\u6eda\u52a8\u7ed3\u679c\u96c6 \u4e00\u4e2a\u4e8c\u7ef4\u8868\u683c\uff0c\u5185\u90e8\u7ef4\u62a4\u4e86\u4e00\u4e2a\u884c\u5149\u6807\uff08\u6e38\u6807\uff09 next () // \u6700\u5e38\u7528 beforeFirst () afterLast () first () last () getRow () absolute () relative () isBeforeFirst () isAfterLast () isFirst () isLast () \u5143\u6570\u636e // \u5143\u6570\u636e ResultSetMetaData ResultSet . getMetaData () // \u83b7\u53d6\u7ed3\u679c\u96c6\u5217\u6570 int ResultSetMetaData . getColumnCount () // \u83b7\u53d6\u6307\u5b9a\u5217\u7684\u5217\u540d String ResultSetMetaData . getColumnName ( int colIndex )","title":"\u8bfe\u65f65 5.\u7ed3\u679c\u96c6\u5149\u6807\u4e0e\u5143\u6570\u636e"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/5-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8/#6-6","text":"\u786e\u5b9a\u7ed3\u679c\u96c6\u7279\u6027 1\u3001\u662f\u5426\u53ef\u6eda\u52a8 2\u3001\u662f\u5426\u654f\u611f 3\u3001\u662f\u5426\u53ef\u66f4\u65b0 // \u4e0d\u6eda\u52a8, \u4e0d\u654f\u611f\uff0c\u4e0d\u53ef\u66f4\u65b0 Statement createStatement () // \u6eda\u52a8\u652f\u6301 Statement createStatement ( int resultSetType , int resultSetConcurrency ) resultSetType: ResultSet . TYPE_FORWARD_ONLY // \u4e0d\u6eda\u52a8 ResultSet . TYPE_SCROLL_INSENSITIVE // \u6eda\u52a8\uff0c\u4e0d\u968f\u6570\u636e\u5e93\u53d8\u5316\u800c\u53d8\u5316 ResultSet . TYPE_SCROLL_SENSITIVE // \u6eda\u52a8\uff0c\u4e0d\u968f\u6570\u636e\u5e93\u53d8\u5316\u800c\u53d8\u5316 resultSetConcurrency // \u662f\u5426\u901a\u8fc7\u4fee\u6539\u7ed3\u679c\u96c6\u4e8c\u53cd\u5411\u5f71\u54cd\u6570\u636e\u5e93 ResultSet . CONCUR_READ_ONLY // \u7ed3\u679c\u96c6\u53ea\u8bfb ResultSet . CONCUR_UPDATABLE // \u7ed3\u679c\u96c6\u53ef\u66f4\u65b0","title":"\u8bfe\u65f66 6.\u7ed3\u679c\u96c6\u7684\u7279\u6027\uff08\u662f\u5426\u53ef\u6eda\u52a8\u3001\u662f\u5426\u654f\u611f\u3001\u662f\u5426\u53ef\u66f4\u65b0\uff09"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/5-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8/#7-7preparedstatement","text":"PreparedStatement\u662fStatement\u5b50\u63a5\u53e3 1\u3001\u9632\u6b62SQL\u6ce8\u5165\u653b\u51fb 2\u3001\u63d0\u9ad8\u4ee3\u7801\u53ef\u8bfb\u6027\uff0c\u53ef\u7ef4\u62a4\u6027 3\u3001\u63d0\u9ad8\u6548\u7387 // \u6253\u5f00\u94fe\u63a5 Connection conn = DriverManager . getConnection ( DB_URL , USER , PASSWORD ); // \u4f7f\u7528\u9884\u5904\u7406\u67e5\u8be2\uff0c \u4f7f\u7528\uff1f\u5360\u4f4d String sql = \"select * from student where sid = ?\" ; PreparedStatement statement = conn . prepareStatement ( sql ); // \u4e3a\u53c2\u6570\u8d4b\u503c statement . setInt ( 1 , 1 ); // \u83b7\u53d6\u6570\u636e ResultSet ret = statement . executeQuery (); while ( ret . next ()){ String name = ret . getString ( \"sname\" ); System . out . println ( name ); } // \u5173\u95ed\u8d44\u6e90 ret . close (); statement . close (); conn . close ();","title":"\u8bfe\u65f67 7.PreparedStatement\u7684\u7528\u6cd5"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/5-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8/#8-8","text":"\u670d\u52a1\u5668\u5de5\u4f5c\uff1a \uff081\uff09\u6821\u9a8c\uff1asql\u8bed\u53e5\u7684\u8bed\u6cd5 \uff082\uff09\u7f16\u8bd1\uff1a\u4e3a\u4e00\u4e2a\u4e0e\u51fd\u6570\u76f8\u4f3c\u7684\u4e1c\u897f \uff083\uff09\u6267\u884c\uff1a\u8c03\u7528\u51fd\u6570 PreparedStatement \uff081\uff09\u5148\u5c06sql\u53d1\u7ed9\u6570\u636e\u5e93\uff0c\u6570\u636e\u5e93\u5148\u8fdb\u884c\u6821\u9a8c \uff082\uff09\u6267\u884c\u7684\u65f6\u5019\u53ea\u53d1\u9001\u53c2\u6570","title":"\u8bfe\u65f68 8.\u9884\u5904\u7406\u7684\u539f\u7406"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/5-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8/#9-9mysql","text":"prepare myfun from 'select * from student where sid = ?' set @ uid = 1 execute myfun using @ uid \u8bbe\u7f6e\u8fde\u63a5\u53c2\u6570\uff1a useServerPrepStmts=true cachePrepStmts=true DB_URL = \"jdbc:mysql://localhost:3306/data?useServerPrepStmts=true&cachePrepStmts=true\" ;","title":"\u8bfe\u65f69 9.mysql\u7684\u9884\u7f16\u8bd1\u529f\u80fd\u9ed8\u8ba4\u662f\u5173\u95ed\u7684"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/5-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8/#10-10jdbcutils10","text":"JdbcUtils.java package util ; import java.io.IOException ; import java.io.InputStream ; import java.sql.Connection ; import java.sql.DriverManager ; import java.sql.SQLException ; import java.util.Properties ; public class JdbcUtils { // \u914d\u7f6e\u6587\u4ef6\u8def\u5f84 private static String dbconfig = \"dbconfig.properties\" ; private static Properties prop = null ; // \u9759\u6001\u4ee3\u7801\u5757\u53ea\u6267\u884c\u4e00\u6b21 static { // \u521d\u59cb\u5316\u6570\u636e\u5e93\u914d\u7f6e\u53c2\u6570 try { InputStream in = JdbcUtils . class . getClassLoader (). getResourceAsStream ( dbconfig ); prop = new Properties (); prop . load ( in ); } catch ( IOException e ) { throw new RuntimeException ( e ); } // \u52a0\u8f7d\u9a71\u52a8 try { Class . forName ( prop . getProperty ( \"driver\" )); } catch ( ClassNotFoundException e ) { throw new RuntimeException ( e ); } } public static Connection getConnection () throws SQLException { return DriverManager . getConnection ( prop . getProperty ( \"url\" ), prop . getProperty ( \"username\" ), prop . getProperty ( \"password\" ) ); } public static void main ( String [] args ) throws SQLException { Connection conn = getConnection (); System . out . println ( conn ); } } dbconfig.properties driver = com . mysql . cj . jdbc . Driver url = jdbc : mysql : //localhost:3306/data username = root password = 123456","title":"\u8bfe\u65f610 10.JdbcUtils1.0\u5c0f\u5de5\u5177"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/5-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8/#11-11","text":"DAO\u6a21\u5f0f data access object \u5199\u4e00\u4e2a\u7c7b\uff0c\u628a\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u4ee3\u7801\u5c01\u88c5\u8d77\u6765 DAO\u5728\u6570\u636e\u5e93\u4e0e\u4e1a\u52a1\u903b\u8f91\uff08service\uff09\u4e4b\u95f4 \u5b9e\u4f53\u57df\uff0c\u5373\u64cd\u4f5c\u7684\u5bf9\u8c61 DAO\u6a21\u5f0f\u6b65\u9aa4 \uff081\uff09\u63d0\u4f9b\u4e00\u4e2aDAO\u63a5\u53e3 \uff082\uff09\u63d0\u4f9b\u4e00\u4e2aDAO\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b \uff083\uff09\u5728\u7f16\u5199\u4e00\u4e2aDAO\u5de5\u5382\uff0cService\u901a\u8fc7\u5de5\u5382\u6765\u83b7\u53d6DAO\u5b9e\u73b0 daoconfig.properties UserDaoClassName = UserDaoImpl UserDao.java public interface UserDao { } UserDaoImpl.java public class UserDaoImpl implements UserDao { } DaoFactory.java import java.io.IOException ; import java.io.InputStream ; import java.util.Properties ; public class DaoFactory { // \u914d\u7f6e\u6587\u4ef6\u8def\u5f84 private static String dbconfig = \"daoconfig.properties\" ; private static Properties prop = null ; // \u9759\u6001\u4ee3\u7801\u5757\u53ea\u6267\u884c\u4e00\u6b21 static { // \u521d\u59cb\u5316\u6570\u636e\u5e93\u914d\u7f6e\u53c2\u6570 try { InputStream in = DaoFactory . class . getClassLoader (). getResourceAsStream ( dbconfig ); prop = new Properties (); prop . load ( in ); } catch ( IOException e ) { throw new RuntimeException ( e ); } } /** * \u8fd4\u56de\u4e00\u4e2aUserDao\u7684\u5177\u4f53\u5b9e\u73b0\u7c7b */ public static UserDao getUserDao () { String daoClassName = prop . getProperty ( \"UserDaoClassName\" ); // \u901a\u8fc7\u53cd\u5c04\u521b\u5efa\u5b9e\u73b0\u7c7b\u7684\u5bf9\u8c61 try { Class Clazz = Class . forName ( daoClassName ); return ( UserDao ) Clazz . newInstance (); } catch ( Exception e ) { throw new RuntimeException ( e ); } } }","title":"\u8bfe\u65f611 11.\u9762\u5411\u63a5\u53e3\u7f16\u7a0b"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/5-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8/#12-12daojdbc","text":"User.java public class User { private String username ; private int age ; public String getUsername () { return username ; } public int getAge () { return age ; } public void setUsername ( String username ) { this . username = username ; } public void setAge ( int age ) { this . age = age ; } @Override public String toString () { return \"User{\" + \"username='\" + username + '\\'' + \", age=\" + age + '}' ; } } daoconfig.properties UserDaoClassName = UserDaoImpl UserDao.java public interface UserDao { public void addUser ( User user ); public User getUserByUsername ( String username ); } UserDaoImpl.java import util.JdbcUtils ; import java.sql.Connection ; import java.sql.PreparedStatement ; import java.sql.ResultSet ; import java.sql.SQLException ; /** * create table user( * id int primary key auto_increment, * username varchar(50), * age int * ) */ public class UserDaoImpl implements UserDao { /** * ORM \u5bf9\u8c61\u5173\u7cfb\u6620\u5c04 * @param user */ @Override public void addUser ( User user ) { Connection conn = null ; PreparedStatement statement = null ; try { // \u5f97\u5230\u8fde\u63a5 conn = JdbcUtils . getConnection (); String sql = \"insert into user(username, age) values(?, ?)\" ; // \u51c6\u5907\u6a21\u677f statement = conn . prepareStatement ( sql ); // \u8d4b\u503c statement . setString ( 1 , user . getUsername ()); statement . setInt ( 2 , user . getAge ()); // \u6267\u884c statement . executeUpdate (); } catch ( Exception e ) { throw new RuntimeException ( e ); } finally { try { if ( statement != null ) { statement . close (); } if ( conn != null ) { conn . close (); } } catch ( SQLException e ) { } } } @Override public User getUserByUsername ( String username ) { Connection conn = null ; PreparedStatement statement = null ; try { // \u5f97\u5230\u8fde\u63a5 conn = JdbcUtils . getConnection (); String sql = \"select * from user where username = ? limit 1\" ; // \u51c6\u5907\u6a21\u677f statement = conn . prepareStatement ( sql ); // \u8d4b\u503c statement . setString ( 1 , username ); // \u6267\u884c ResultSet resultSet = statement . executeQuery (); if ( resultSet . next ()){ User user = new User (); user . setUsername ( resultSet . getString ( \"username\" )); user . setAge ( resultSet . getInt ( \"age\" )); return user ; } else { return null ; } } catch ( Exception e ) { throw new RuntimeException ( e ); } finally { try { if ( statement != null ) { statement . close (); } if ( conn != null ) { conn . close (); } } catch ( SQLException e ) { } } } } DaoFactory.java import java.io.IOException ; import java.io.InputStream ; import java.util.Properties ; public class DaoFactory { // \u914d\u7f6e\u6587\u4ef6\u8def\u5f84 private static String dbconfig = \"daoconfig.properties\" ; private static Properties prop = null ; // \u9759\u6001\u4ee3\u7801\u5757\u53ea\u6267\u884c\u4e00\u6b21 static { // \u521d\u59cb\u5316\u6570\u636e\u5e93\u914d\u7f6e\u53c2\u6570 try { InputStream in = DaoFactory . class . getClassLoader (). getResourceAsStream ( dbconfig ); prop = new Properties (); prop . load ( in ); } catch ( IOException e ) { throw new RuntimeException ( e ); } } /** * \u8fd4\u56de\u4e00\u4e2aUserDao\u7684\u5177\u4f53\u5b9e\u73b0\u7c7b */ public static UserDao getUserDao () { String daoClassName = prop . getProperty ( \"UserDaoClassName\" ); // \u901a\u8fc7\u53cd\u5c04\u521b\u5efa\u5b9e\u73b0\u7c7b\u7684\u5bf9\u8c61 try { Class Clazz = Class . forName ( daoClassName ); return ( UserDao ) Clazz . newInstance (); } catch ( Exception e ) { throw new RuntimeException ( e ); } } } Service.java // \u6dfb\u52a0\u6d4b\u8bd5 UserDao userDao = DaoFactory . getUserDao (); User user = new User (); user . setUsername ( \"\u5c0f\u660e\" ); user . setAge ( 23 ); userDao . addUser ( user ); // \u67e5\u8be2\u6d4b\u8bd5 User user1 = userDao . getUserByUsername ( \"\u5c0f\u660e\" ); System . out . println ( user1 );","title":"\u8bfe\u65f612 12.\u4fee\u6539\u6848\u4f8b\uff0c\u5176\u4e2ddao\u5c42\u4e3ajdbc"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/5-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8/#13-13utildatesql","text":"Data -> java.sql.Data Time -> java.sql.Time Timestamp -> java.sql.Timestamp \u9886\u57df\u5bf9\u8c61\u4e2d\u6240\u6709\u5c5e\u6027\u4e0d\u80fd\u51fa\u73b0java.sql\u5305\u5185\u5bb9 \u7ee7\u627f\u5173\u7cfb java . util . Date - java . sql . Date \u7236\u7c7b\u8f6c\u5b50\u7c7b\uff1autil.Data -> sql.Date\u3001Time\u3001Timestamp java . util . Date UtilDate = new java . util . Date (); long longDate = UtilDate . getTime (); java . sql . Date sqlData = new java . sql . Date ( longDate ); \u5b50\u7c7b\u8f6c\u7236\u7c7b\uff1asql.Date\u3001Time\u3001Timestamp -> util.Data java . util . Date UtilDate = new java . sql . Date ( System . currentTimeMillis ());","title":"\u8bfe\u65f613 13.util\u5305\u4e0b\u7684Date\u4e0esql\u5305\u4e0b\u7684\u65f6\u95f4\u7c7b\u578b\u4e4b\u95f4\u7684\u8f6c\u6362"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/5-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8/#14-14","text":"\u53ef\u4ee5\u5c06\u6587\u4ef6\u5b58\u5165MySQL my.ini\u914d\u7f6e max_allowed_packet=10485760","title":"\u8bfe\u65f614 14.\u5927\u6570\u636e"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/5-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u5165\u95e8/#15-15","text":"\u6279\u5904\u7406\u53ea\u9488\u5bf9\u66f4\u65b0\uff08\u589e\uff0c\u5220\uff0c\u6539\uff09 \u4e00\u6b21\u5411\u670d\u52a1\u5668\u53d1\u9001\u591a\u6761sql\u8bed\u53e5 \u5f00\u542f\u6279\u5904\u7406\u53c2\u6570 rewriteBatchedStatements=true dbconfig.properties driver = com . mysql . cj . jdbc . Driver url = jdbc : mysql : //localhost:3306/data?rewriteBatchedStatements=true username = root password = 123456 import util.JdbcUtils ; import java.sql.Connection ; import java.sql.PreparedStatement ; import java.sql.SQLException ; class Demo { public static void main ( String [] args ) throws SQLException { Connection conn = JdbcUtils . getConnection (); String sql = \"insert into user(username)values(?)\" ; PreparedStatement statement = conn . prepareStatement ( sql ); for ( int i = 0 ; i < 10000 ; i ++){ statement . setString ( 1 , \"name\" + i ); statement . addBatch (); // \u88c5\u7bb1 } long start = System . currentTimeMillis (); statement . executeBatch (); // \u63d0\u4ea4\u6570\u636e long end = System . currentTimeMillis (); System . out . println ( end - start ); // 107 } }","title":"\u8bfe\u65f615 15.\u6279\u5904\u7406"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/","text":"JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636 \u7b2c1 \u7ae0 \uff1a \u4e8b\u52a1\u5904\u7406 \u8bfe\u65f61 \u4e8b\u52a1\u7684\u56db\u5927\u7279\u6027\uff08ACID\uff09 \u539f\u5b50\u6027 Atomicity \u64cd\u4f5c\u4e0d\u53ef\u518d\u5206\u5272\uff0c\u8981\u4e48\u6210\u529f\uff0c\u8981\u4e48\u5931\u8d25 \u4e00\u81f4\u6027 Consistency \u6570\u636e\u72b6\u6001\u4e0e\u4e1a\u52a1\u89c4\u5219\u4fdd\u6301\u4e00\u81f4 \u9694\u79bb\u6027 Isolation \u5e76\u53d1\u4e8b\u52a1\u4e0d\u4f1a\u76f8\u4e92\u5e72\u6270 \u6301\u4e45\u6027 Durability \u6570\u636e\u64cd\u4f5c\u5fc5\u987b\u88ab\u6301\u4e45\u5316\u5230\u6570\u636e\u5e93\u4e2d \u8bfe\u65f62\uff1aMySQL\u4e2d\u5f00\u542f\u548c\u5173\u95ed\u4e8b\u52a1 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cMySQL\u6ca1\u6267\u884c\u4e00\u6761SQL\u8bed\u53e5\uff0c\u90fd\u662f\u5355\u72ec\u7684\u4e8b\u52a1 \u5982\u679c\u8981\u5728\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u5305\u542b\u591a\u6761SQL\u8bed\u53e5\uff0c\u90a3\u4e48\u9700\u8981\u5f00\u542f\u4e8b\u52a1\u548c\u7ed3\u675f\u4e8b\u52a1 -- \u5f00\u542f\u4e8b\u52a1 start transaction -- \u7ed3\u675f\u4e8b\u52a1 commit -- \u6216\u8005 rollback \u8bfe\u65f63 JDBC\u4e2d\u5b8c\u6210\u4e8b\u52a1\u5904\u7406 // \u5f00\u542f\u4e8b\u52a1\uff0c\u8bbe\u7f6e\u4e0d\u81ea\u52a8\u63d0\u4ea4\uff0c \u9ed8\u8ba4true conn . setAutoCommit ( false ); // \u63d0\u4ea4\u4e8b\u52a1 conn . commit () // \u56de\u6eda\u4e8b\u52a1 conn . rollback () \u4ee3\u7801\u683c\u5f0f try { conn . setAutoCommit ( false ); ... conn . commit () } catch (){ conn . rollback () } \u8f6c\u8d26\u793a\u4f8b import util.JdbcUtils ; import java.sql.Connection ; import java.sql.PreparedStatement ; import java.sql.SQLException ; /** * create table account( * id int primary key auto_increment, * username varchar(50), * balance int * ) * * insert into account(username, balance) values ('\u5f20\u4e09', 1000), ('\u738b\u4e94', 1000) */ class Demo { public static void transferMoney ( int fromId , int toId , int money ) throws SQLException { Connection conn = JdbcUtils . getConnection (); conn . setAutoCommit ( false ); try { updateBalance ( conn , fromId , - money ); if ( true ){ throw new RuntimeException ( \"\u65ad\u7f51\u4e86\" ); } updateBalance ( conn , toId , money ); conn . commit (); } catch ( Exception e ) { conn . rollback (); throw new RuntimeException ( e ); } finally { conn . close (); } } public static void updateBalance ( Connection conn , int id , int money ) throws SQLException { String sql = \"update account set balance = balance + ? where id = ?\" ; PreparedStatement statement = conn . prepareStatement ( sql ); statement . setInt ( 1 , money ); statement . setInt ( 2 , id ); statement . executeUpdate (); } public static void main ( String [] args ) throws SQLException { transferMoney ( 1 , 2 , 100 ); } } \u8bfe\u65f64 \u4e8b\u52a1\u7684\u9694\u79bb\u7ea7\u522b \u4e8b\u52a1\u5e76\u53d1\u95ee\u9898 \u810f\u8bfb\uff1a\u8bfb\u53d6\u5230\u53e6\u4e00\u4e2a\u4e8b\u52a1\u672a\u63d0\u4ea4\u6570\u636e \u4e0d\u53ef\u91cd\u590d\u8bfb\uff1a\u4e24\u6b21\u8bfb\u53d6\u4e0d\u4e00\u81f4 \u5e7b\u8bfb\uff1a\u8bfb\u5230\u53e6\u4e00\u4e2a\u4e8b\u52a1\u5df2\u63d0\u4ea4\u6570\u636e \u56db\u5927\u9694\u79bb\u7ea7\u522b \u4e32\u884c\u5316 \u4e0d\u4f1a\u51fa\u73b0\u5e76\u53d1\uff0c\u6027\u80fd\u6700\u5dee\uff08\u575a\u51b3\u4e0d\u7528\uff09 \u53ef\u91cd\u590d\u5ea6 \u9632\u6b62\u810f\u8bfb\u548c\u4e0d\u53ef\u91cd\u590d\u8bfb\uff0c\u4e0d\u80fd\u5904\u7406\u5e7b\u8bfb\uff08MySQL\u9ed8\u8ba4\uff09 \u8bfb\u5df2\u63d0\u4ea4 \u9632\u6b62\u810f\u8bfb \u8bfb\u672a\u63d0\u4ea4 \u6027\u80fd\u6700\u597d -- \u67e5\u770b\u9694\u79bb\u7ea7\u522b select @@ tx_isolation -- \u8bbe\u7f6e\u9694\u79bb\u7ea7\u522b set transaction isolationlevel [ 1 , 2 , 3 , 4 ] \u7b2c2 \u7ae0 \uff1a \u8fde\u63a5\u6c60 \u8bfe\u65f65 dbcp\u8fde\u63a5\u6c60 1\u3001\u6c60\u53c2\u6570 \u521d\u59cb\u5927\u5c0f\uff1a10\u4e2a \u6700\u5c0f\u7a7a\u95f2\u8fde\u63a5\u6570\uff1a3\u4e2a \u589e\u91cf\uff1a\u4e00\u6b21\u521b\u5efa\u6700\u5c0f\u5355\u4f4d5\u4e2a \u6700\u5927\u7a7a\u95f2\u8fde\u63a5\u6570\uff1a12\u4e2a \u6700\u5927\u8fde\u63a5\u6570\uff1a20\u4e2a \u6700\u5927\u7b49\u5f85\u65f6\u95f4\uff1a1000\u6beb\u79d2 2\u3001\u56db\u5927\u8fde\u63a5\u53c2\u6570 \u8fde\u63a5\u6c60\u4e5f\u662f\u4f7f\u75284\u4e2a\u8fde\u63a5\u53c2\u6570\u6765\u5b8c\u6210\u521b\u5efa\u8fde\u63a5\u5bf9\u8c61 3\u3001\u8fde\u63a5\u6c60\u5fc5\u987b\u5b9e\u73b0\u63a5\u53e3: javax.sql.DataSource \u8fde\u63a5\u6c60\u7684close() \u65b9\u6cd5\u4e0d\u662f\u5173\u95ed\uff0c\u800c\u662f\u5f52\u8fd8 \u4f9d\u8d56 <dependency> <groupId> org.apache.commons </groupId> <artifactId> commons-dbcp2 </artifactId> <version> 2.7.0 </version> </dependency> <dependency> <groupId> org.apache.commons </groupId> <artifactId> commons-pool2 </artifactId> <version> 2.8.0 </version> </dependency> import org.apache.commons.dbcp2.BasicDataSource ; import java.sql.Connection ; import java.sql.SQLException ; class Demo { public static void main ( String [] args ) throws SQLException { // \u914d\u7f6e4\u4e2a\u5fc5\u8981\u53c2\u6570 BasicDataSource dataSource = new BasicDataSource (); dataSource . setDriverClassName ( \"com.mysql.cj.jdbc.Driver\" ); dataSource . setUrl ( \"jdbc:mysql://localhost:3306/data\" ); dataSource . setUsername ( \"root\" ); dataSource . setPassword ( \"123456\" ); // \u914d\u7f6e\u8fde\u63a5\u6c60\u53c2\u6570 dataSource . setMaxWaitMillis ( 1000 ); // \u83b7\u53d6\u8fde\u63a5\u5bf9\u8c61 Connection conn = dataSource . getConnection (); System . out . println ( conn . getClass (). getName ()); // \u5f52\u8fd8\u8fde\u63a5 conn . close (); } } \u8bfe\u65f66 \u88c5\u9970\u8005\u6a21\u5f0f \u5bf9\u8c61\u589e\u5f3a\u7684\u624b\u6bb5 \uff081\uff09\u7ee7\u627f \uff082\uff09\u88c5\u9970\u8005\u6a21\u5f0f \uff083\uff09\u52a8\u6001\u4ee3\u7406 1\u3001\u7ee7\u627f\uff1a \u4f1a\u4f7f\u5f97\u7c7b\u589e\u591a \u589e\u5f3a\u7684\u5185\u5bb9\u662f\u56fa\u5b9a\u7684 \u88ab\u589e\u5f3a\u7684\u5bf9\u8c61\u4e5f\u662f\u56fa\u5b9a\u7684 2\u3001\u88c5\u9970\u8005\u6a21\u5f0f \u589e\u5f3a\u7684\u5bf9\u8c61\u662f\u4e0d\u80fd\u4fee\u6539\u7684 \u88ab\u589e\u5f3a\u7684\u5bf9\u8c61\u53ef\u4ee5\u662f\u4efb\u610f\u7684 InputStream FileInputStream \u8282\u70b9\u6d41 BufferedInputStream \u88c5\u9970\u6d41 is a has a use a // MyConnection is Connection class MyConnection implements Connection { // MyConnection has Connection private Connection conn ; // \u5e95\u5c42\u5bf9\u8c61\uff0c\u88ab\u589e\u5f3a\u7684\u5bf9\u8c61 // \u901a\u8fc7\u6784\u9020\u5668\u4f20\u9012\u5e95\u5c42\u5bf9\u8c61 public MyConnection ( Connection conn ){ this . conn = conn ; } public Statement createStatement (){ return this . conn . createStatement (); } // \u589e\u5f3a\u70b9 public void close (){ } } 3\u3001\u52a8\u6001\u4ee3\u7406 \u88ab\u589e\u5f3a\u7684\u5bf9\u8c61\u53ef\u4ee5\u5207\u6362 \u589e\u5f3a\u7684\u5185\u5bb9\u4e5f\u53ef\u4ee5\u5207\u6362 \u8bfe\u65f67 c3p0\u8fde\u63a5\u6c60\u7684\u57fa\u672c\u4f7f\u7528\u65b9\u5f0f \u4f9d\u8d56 <dependency> <groupId> com.mchange </groupId> <artifactId> c3p0 </artifactId> <version> 0.9.5.5 </version> </dependency> import com.mchange.v2.c3p0.ComboPooledDataSource ; import java.beans.PropertyVetoException ; import java.sql.Connection ; import java.sql.SQLException ; class Demo { public static void main ( String [] args ) throws PropertyVetoException , SQLException { // \u914d\u7f6e4\u4e2a\u5fc5\u8981\u53c2\u6570 ComboPooledDataSource dataSource = new ComboPooledDataSource (); dataSource . setDriverClass ( \"com.mysql.cj.jdbc.Driver\" ); dataSource . setJdbcUrl ( \"jdbc:mysql://localhost:3306/data\" ); dataSource . setUser ( \"root\" ); dataSource . setPassword ( \"123456\" ); // \u914d\u7f6e\u8fde\u63a5\u6c60\u53c2\u6570 dataSource . setAcquireIncrement ( 5 ); dataSource . setInitialPoolSize ( 3 ); dataSource . setMinPoolSize ( 3 ); dataSource . setMaxPoolSize ( 20 ); // \u83b7\u53d6\u8fde\u63a5\u5bf9\u8c61 Connection conn = dataSource . getConnection (); System . out . println ( conn . getClass (). getName ()); // \u5f52\u8fd8\u8fde\u63a5 conn . close (); } } \u8bfe\u65f68 c3p0\u8fde\u63a5\u7684\u914d\u7f6e\u6587\u4ef6\u4f7f\u7528 \u5fc5\u987b\u547d\u540d\u4e3a\uff1ac3p0-config.xml \u5fc5\u987b\u653e\u5728src\u76ee\u5f55\u4e0b <?xml version=\"1.0\" encoding=\"utf-8\"?> <c3p0-config> <!-- \u8fd9\u662f\u9ed8\u8ba4\u914d\u7f6e\u4fe1\u606f --> <default-config> <!-- \u8fde\u63a5\u56db\u5927\u53c2\u6570\u914d\u7f6e --> <property name= \"driverClass\" > com.mysql.cj.jdbc.Driver </property> <property name= \"jdbcUrl\" > jdbc:mysql://localhost:3306/data </property> <property name= \"user\" > root </property> <property name= \"password\" > 123456 </property> <!-- \u6c60\u53c2\u6570\u914d\u7f6e --> <property name= \"acquireIncrement\" > 3 </property> <property name= \"initialPoolSize\" > 10 </property> <property name= \"minPoolSize\" > 2 </property> <property name= \"maxPoolSize\" > 10 </property> </default-config> </c3p0-config> \u8fde\u63a5\u4f1a\u62a5\u9519\uff1ajava.sql.SQLException: No suitable driver import com.mchange.v2.c3p0.ComboPooledDataSource ; import java.sql.Connection ; import java.sql.SQLException ; class Demo { public static void main ( String [] args ) throws SQLException { ComboPooledDataSource dataSource = new ComboPooledDataSource (); // \u83b7\u53d6\u8fde\u63a5\u5bf9\u8c61 Connection conn = dataSource . getConnection (); System . out . println ( conn . getClass (). getName ()); // \u5f52\u8fd8\u8fde\u63a5 conn . close (); } } \u7b2c3 \u7ae0 \uff1a JDBC\u5de5\u5177\u7c7b \u8bfe\u65f69-10 JdbcUtils\u5c0f\u5de5\u5177 import com.mchange.v2.c3p0.ComboPooledDataSource ; import javax.sql.DataSource ; import java.sql.Connection ; import java.sql.SQLException ; public class JdbcUtil { // \u9700\u8981\u914d\u7f6ec3p0-config.xml private static ComboPooledDataSource dataSource = new ComboPooledDataSource (); // \u8fd4\u56de\u8fde\u63a5\u5bf9\u8c61 public static Connection getConnection () throws SQLException { return dataSource . getConnection (); } // \u8fd4\u56de\u8fde\u63a5\u6c60\u5bf9\u8c61 public static DataSource getDataSource (){ return dataSource ; } } \u8bfe\u65f611 JNDI\u914d\u7f6e JNDI(Java Naming and Directory Interface, Java\u547d\u540d\u548c\u76ee\u5f55\u63a5\u53e3) \u8bfe\u65f612 ThreadLocal \u89e3\u51b3\u591a\u7ebf\u7a0b\u5e76\u53d1\u95ee\u9898\u7684\u5de5\u5177\u7c7b,\u5b83\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u672c\u5730\u7684\u526f\u672c\u53d8\u91cf\u673a\u5236\uff0c \u5b9e\u73b0\u4e86\u548c\u5176\u5b83\u7ebf\u7a0b\u9694\u79bb\uff0c\u5e76\u4e14\u8fd9\u79cd\u53d8\u91cf\u53ea\u5728\u672c\u7ebf\u7a0b\u7684\u751f\u547d\u5468\u671f\u5185\u8d77\u4f5c\u7528\uff0c \u53ef\u4ee5\u51cf\u5c11\u540c\u4e00\u4e2a\u7ebf\u7a0b\u5185\u591a\u4e2a\u65b9\u6cd5\u4e4b\u95f4\u7684\u516c\u5171\u53d8\u91cf\u4f20\u9012\u7684\u590d\u6742\u5ea6 import java.sql.SQLException ; import java.util.HashMap ; import java.util.Map ; class Demo { public static void main ( String [] args ) throws SQLException { ThreadLocal < String > tl = new ThreadLocal < String >(); // \u6dfb\u52a0 tl . set ( \"Tom\" ); // \u83b7\u53d6 String name = tl . get (); System . out . println ( name ); // \u79fb\u9664 tl . remove (); } } ThreadLocal\u7684\u6838\u5fc3\u4ee3\u7801 class TL < T >{ private Map < Thread , T > map = new HashMap < Thread , T >(); public void set ( T value ){ this . map . put ( Thread . currentThread (), value ); } public T get (){ return this . map . get ( Thread . currentThread ()); } public void remove (){ this . map . remove ( Thread . currentThread ()); } } \u8bfe\u65f613 dbutils\u539f\u7406 \u4f9d\u8d56 <dependency> <groupId> commons-dbutils </groupId> <artifactId> commons-dbutils </artifactId> <version> 1.7 </version> </dependency> \u793a\u4f8b Student.class public class Student { private int sid ; private String sname ; public int getSid () { return sid ; } public void setSid ( int sid ) { this . sid = sid ; } public String getSname () { return sname ; } public void setSname ( String sname ) { this . sname = sname ; } public Student () { } @Override public String toString () { return \"Student{\" + \"sid=\" + sid + \", sname='\" + sname + '\\'' + '}' ; } } Demo.class 1\u3001\u67e5\u8be2\u64cd\u4f5c import org.apache.commons.dbutils.QueryRunner ; import org.apache.commons.dbutils.handlers.BeanHandler ; import java.sql.SQLException ; class Demo { public static void main ( String [] args ) throws SQLException { // \u63d0\u4f9b\u6570\u636e\u5e93\u8fde\u63a5\u6c60 QueryRunner qr = new QueryRunner ( JdbcUtil . getDataSource ()); // \u67e5\u8be2\u64cd\u4f5c // sql\u6a21\u677f String sql = \"select * from student where sid = ?\" ; // \u53c2\u6570 Object [] params = { 3 }; // \u63d0\u4f9b\u7ed3\u679c\u96c6\u5904\u7406\u5668 Student student = qr . query ( sql , new BeanHandler < Student >( Student . class ), params ); System . out . println ( student ); // Student{sid=3, sname='\u6768\u4e0d\u6094'} } } 2\u3001\u66f4\u65b0\u64cd\u4f5c String sql = \"update student set sname=? where sid = ?\" ; Object [] params = { \"\u6768\u4e0d\u6094\" , 3 }; qr . update ( sql , params ); \u8bfe\u65f614 dbUtils\u7ed3\u679c\u96c6\u5904\u7406\u5668\u4ecb\u7ecd common-dbutils.jar QueryRunner // update\u6267\u884c\u589e\uff0c\u5220\uff0c\u6539 int update ( String sql , Object ... params ) int update ( Connection conn , String sql , Object ... params ) // query\u6267\u884c\u67e5\u8be2 T query ( String sql , ResultSetHandler rsh , Object ... params ) T query ( Connection conn , String sql , ResultSetHandler rsh , Object ... params ) ResultSetHandler\u63a5\u53e3 BeanHandler\uff08\u5355\u884c\uff09 \u4e00\u884c\u8f6c\u6362\u6210\u6307\u5b9a\u7c7b\u578b\u7684javaBean\u5bf9\u8c61 BeanListHandler(\u591a\u884c) \u591a\u884c\u8f6c\u4e3alist\u5bf9\u8c61 MapHandler(\u5355\u884c) \u4e00\u884c\u7ed3\u679c\u8f6c\u4e3aMap\u5bf9\u8c61 MapListHandler(\u591a\u884c) \u591a\u884c\u7ed3\u679c\u8f6c\u4e3aMap\u5bf9\u8c61\u5217\u8868 ScalarHandler \u5355\u884c\u5355\u5217 \u901a\u5e38\u7528\u4e8e select count(*) from table 1\u3001BeanListHandler import org.apache.commons.dbutils.QueryRunner ; import org.apache.commons.dbutils.handlers.BeanListHandler ; import java.sql.SQLException ; import java.util.List ; class Demo { public static void main ( String [] args ) throws SQLException { // \u63d0\u4f9b\u6570\u636e\u5e93\u8fde\u63a5\u6c60 QueryRunner qr = new QueryRunner ( JdbcUtil . getDataSource ()); String sql = \"select * from student\" ; List < Student > students = qr . query ( sql , new BeanListHandler < Student >( Student . class )); System . out . println ( students ); } } 2\u3001MapListHandler import org.apache.commons.dbutils.QueryRunner ; import org.apache.commons.dbutils.handlers.MapListHandler ; import java.sql.SQLException ; import java.util.List ; import java.util.Map ; class Demo { public static void main ( String [] args ) throws SQLException { QueryRunner qr = new QueryRunner ( JdbcUtil . getDataSource ()); String sql = \"select * from student\" ; List < Map < String , Object >> students = qr . query ( sql , new MapListHandler ()); System . out . println ( students ); } } 3\u3001ScalarHandler import org.apache.commons.dbutils.QueryRunner ; import org.apache.commons.dbutils.handlers.ScalarHandler ; import java.sql.SQLException ; class Demo { public static void main ( String [] args ) throws SQLException { QueryRunner qr = new QueryRunner ( JdbcUtil . getDataSource ()); String sql = \"select count(*) from student\" ; Number cnt = ( Number ) qr . query ( sql , new ScalarHandler ()); long count = cnt . longValue (); System . out . println ( count ); } } \u8bfe\u65f615 \u7f16\u5199TxQueryRunner\u914d\u5408JdbcUtils\u6765\u5904\u7406\u4e8b\u52a1 class TxQueryRunner extends QueryRunner { // \u91cd\u5199\u90e8\u5206\u65b9\u6cd5 } \u8bfe\u65f616 JdbcUtils\u5904\u7406\u591a\u7ebf\u7a0b\u5e76\u53d1\u8bbf\u95ee\u95ee\u9898 \u4f7f\u7528 ThreadLocal \u7b2c4 \u7ae0 \uff1a \u5206\u9875 \u8bfe\u65f617 \u5206\u9875\u51c6\u5907\u5de5\u4f5c \u5206\u9875\u4f18\u70b9\uff1a\u53ea\u67e5\u8be2\u4e00\u9875\uff0c\u4e0d\u7528\u67e5\u8be2\u6240\u6709\u9875 class pageBean < T >{ // \u5f53\u524d\u9875\u7801 private int currentPage ; // \u603b\u9875\u6570 private int totalPage ; // \u603b\u8bb0\u5f55\u6570 private int totalRecord ; // \u9875\u9762\u5927\u5c0f private int pageSize ; // \u9875\u9762\u6570\u636e private List < T > beanList ; } \u8bfe\u65f618\uff1a\u5904\u7406\u5206\u9875\u5404\u5c42\u5206\u5de5 \u7b2cn\u9875/\u5171N\u9875 \u9996\u9875 \u4e0a\u4e00\u9875 1 2 3 4 5 6 \u4e0b\u4e00\u9875 \u5c3e\u9875 \u8bfe\u65f619 \u5206\u9875\u5904\u7406\u7b2c\u4e00\u9636\u6bb5\u5b8c\u6210 \u8bfe\u65f620 \u5206\u9875\u4e4b\u9875\u9762\u9875\u7801\u5217\u8868\u8ba1\u7b97 \u8ba1\u7b97\u516c\u5f0f pageSize = 10 begin = currentPage - 5 end = currentPage + 4 \u5982\u679c\u603b\u9875\u6570<=10, \u90a3\u4e48bedin=1, end=\u603b\u9875\u6570 \u5934\u6ea2\u51fa\uff1a\u5f53begin<1, \u90a3\u4e48begin=1 \u5c3e\u6ea2\u51fa\uff1a\u5f53end>\u603b\u9875\u6570, \u90a3\u4e48end>\u603b\u9875\u6570 \u8bfe\u65f621 \u5206\u9875\u4e4b\u67e5\u8be2\u6761\u4ef6\u4e22\u5931\u95ee\u9898 \u8d85\u94fe\u63a5\u4e2d\u8981\u4fdd\u7559\u53c2\u6570 \u8bfe\u65f622 \u5206\u9875\u4e4b\u67e5\u8be2\u6761\u4ef6\u4fdd\u5b58\u5230PageBean\u7684url\u4e2d","title":"6 JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#1","text":"","title":"\u7b2c1 \u7ae0 \uff1a \u4e8b\u52a1\u5904\u7406"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#1-acid","text":"\u539f\u5b50\u6027 Atomicity \u64cd\u4f5c\u4e0d\u53ef\u518d\u5206\u5272\uff0c\u8981\u4e48\u6210\u529f\uff0c\u8981\u4e48\u5931\u8d25 \u4e00\u81f4\u6027 Consistency \u6570\u636e\u72b6\u6001\u4e0e\u4e1a\u52a1\u89c4\u5219\u4fdd\u6301\u4e00\u81f4 \u9694\u79bb\u6027 Isolation \u5e76\u53d1\u4e8b\u52a1\u4e0d\u4f1a\u76f8\u4e92\u5e72\u6270 \u6301\u4e45\u6027 Durability \u6570\u636e\u64cd\u4f5c\u5fc5\u987b\u88ab\u6301\u4e45\u5316\u5230\u6570\u636e\u5e93\u4e2d","title":"\u8bfe\u65f61 \u4e8b\u52a1\u7684\u56db\u5927\u7279\u6027\uff08ACID\uff09"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#2mysql","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cMySQL\u6ca1\u6267\u884c\u4e00\u6761SQL\u8bed\u53e5\uff0c\u90fd\u662f\u5355\u72ec\u7684\u4e8b\u52a1 \u5982\u679c\u8981\u5728\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u5305\u542b\u591a\u6761SQL\u8bed\u53e5\uff0c\u90a3\u4e48\u9700\u8981\u5f00\u542f\u4e8b\u52a1\u548c\u7ed3\u675f\u4e8b\u52a1 -- \u5f00\u542f\u4e8b\u52a1 start transaction -- \u7ed3\u675f\u4e8b\u52a1 commit -- \u6216\u8005 rollback","title":"\u8bfe\u65f62\uff1aMySQL\u4e2d\u5f00\u542f\u548c\u5173\u95ed\u4e8b\u52a1"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#3-jdbc","text":"// \u5f00\u542f\u4e8b\u52a1\uff0c\u8bbe\u7f6e\u4e0d\u81ea\u52a8\u63d0\u4ea4\uff0c \u9ed8\u8ba4true conn . setAutoCommit ( false ); // \u63d0\u4ea4\u4e8b\u52a1 conn . commit () // \u56de\u6eda\u4e8b\u52a1 conn . rollback () \u4ee3\u7801\u683c\u5f0f try { conn . setAutoCommit ( false ); ... conn . commit () } catch (){ conn . rollback () } \u8f6c\u8d26\u793a\u4f8b import util.JdbcUtils ; import java.sql.Connection ; import java.sql.PreparedStatement ; import java.sql.SQLException ; /** * create table account( * id int primary key auto_increment, * username varchar(50), * balance int * ) * * insert into account(username, balance) values ('\u5f20\u4e09', 1000), ('\u738b\u4e94', 1000) */ class Demo { public static void transferMoney ( int fromId , int toId , int money ) throws SQLException { Connection conn = JdbcUtils . getConnection (); conn . setAutoCommit ( false ); try { updateBalance ( conn , fromId , - money ); if ( true ){ throw new RuntimeException ( \"\u65ad\u7f51\u4e86\" ); } updateBalance ( conn , toId , money ); conn . commit (); } catch ( Exception e ) { conn . rollback (); throw new RuntimeException ( e ); } finally { conn . close (); } } public static void updateBalance ( Connection conn , int id , int money ) throws SQLException { String sql = \"update account set balance = balance + ? where id = ?\" ; PreparedStatement statement = conn . prepareStatement ( sql ); statement . setInt ( 1 , money ); statement . setInt ( 2 , id ); statement . executeUpdate (); } public static void main ( String [] args ) throws SQLException { transferMoney ( 1 , 2 , 100 ); } }","title":"\u8bfe\u65f63 JDBC\u4e2d\u5b8c\u6210\u4e8b\u52a1\u5904\u7406"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#4","text":"\u4e8b\u52a1\u5e76\u53d1\u95ee\u9898 \u810f\u8bfb\uff1a\u8bfb\u53d6\u5230\u53e6\u4e00\u4e2a\u4e8b\u52a1\u672a\u63d0\u4ea4\u6570\u636e \u4e0d\u53ef\u91cd\u590d\u8bfb\uff1a\u4e24\u6b21\u8bfb\u53d6\u4e0d\u4e00\u81f4 \u5e7b\u8bfb\uff1a\u8bfb\u5230\u53e6\u4e00\u4e2a\u4e8b\u52a1\u5df2\u63d0\u4ea4\u6570\u636e \u56db\u5927\u9694\u79bb\u7ea7\u522b \u4e32\u884c\u5316 \u4e0d\u4f1a\u51fa\u73b0\u5e76\u53d1\uff0c\u6027\u80fd\u6700\u5dee\uff08\u575a\u51b3\u4e0d\u7528\uff09 \u53ef\u91cd\u590d\u5ea6 \u9632\u6b62\u810f\u8bfb\u548c\u4e0d\u53ef\u91cd\u590d\u8bfb\uff0c\u4e0d\u80fd\u5904\u7406\u5e7b\u8bfb\uff08MySQL\u9ed8\u8ba4\uff09 \u8bfb\u5df2\u63d0\u4ea4 \u9632\u6b62\u810f\u8bfb \u8bfb\u672a\u63d0\u4ea4 \u6027\u80fd\u6700\u597d -- \u67e5\u770b\u9694\u79bb\u7ea7\u522b select @@ tx_isolation -- \u8bbe\u7f6e\u9694\u79bb\u7ea7\u522b set transaction isolationlevel [ 1 , 2 , 3 , 4 ]","title":"\u8bfe\u65f64 \u4e8b\u52a1\u7684\u9694\u79bb\u7ea7\u522b"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#2","text":"","title":"\u7b2c2 \u7ae0 \uff1a \u8fde\u63a5\u6c60"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#5-dbcp","text":"1\u3001\u6c60\u53c2\u6570 \u521d\u59cb\u5927\u5c0f\uff1a10\u4e2a \u6700\u5c0f\u7a7a\u95f2\u8fde\u63a5\u6570\uff1a3\u4e2a \u589e\u91cf\uff1a\u4e00\u6b21\u521b\u5efa\u6700\u5c0f\u5355\u4f4d5\u4e2a \u6700\u5927\u7a7a\u95f2\u8fde\u63a5\u6570\uff1a12\u4e2a \u6700\u5927\u8fde\u63a5\u6570\uff1a20\u4e2a \u6700\u5927\u7b49\u5f85\u65f6\u95f4\uff1a1000\u6beb\u79d2 2\u3001\u56db\u5927\u8fde\u63a5\u53c2\u6570 \u8fde\u63a5\u6c60\u4e5f\u662f\u4f7f\u75284\u4e2a\u8fde\u63a5\u53c2\u6570\u6765\u5b8c\u6210\u521b\u5efa\u8fde\u63a5\u5bf9\u8c61 3\u3001\u8fde\u63a5\u6c60\u5fc5\u987b\u5b9e\u73b0\u63a5\u53e3: javax.sql.DataSource \u8fde\u63a5\u6c60\u7684close() \u65b9\u6cd5\u4e0d\u662f\u5173\u95ed\uff0c\u800c\u662f\u5f52\u8fd8 \u4f9d\u8d56 <dependency> <groupId> org.apache.commons </groupId> <artifactId> commons-dbcp2 </artifactId> <version> 2.7.0 </version> </dependency> <dependency> <groupId> org.apache.commons </groupId> <artifactId> commons-pool2 </artifactId> <version> 2.8.0 </version> </dependency> import org.apache.commons.dbcp2.BasicDataSource ; import java.sql.Connection ; import java.sql.SQLException ; class Demo { public static void main ( String [] args ) throws SQLException { // \u914d\u7f6e4\u4e2a\u5fc5\u8981\u53c2\u6570 BasicDataSource dataSource = new BasicDataSource (); dataSource . setDriverClassName ( \"com.mysql.cj.jdbc.Driver\" ); dataSource . setUrl ( \"jdbc:mysql://localhost:3306/data\" ); dataSource . setUsername ( \"root\" ); dataSource . setPassword ( \"123456\" ); // \u914d\u7f6e\u8fde\u63a5\u6c60\u53c2\u6570 dataSource . setMaxWaitMillis ( 1000 ); // \u83b7\u53d6\u8fde\u63a5\u5bf9\u8c61 Connection conn = dataSource . getConnection (); System . out . println ( conn . getClass (). getName ()); // \u5f52\u8fd8\u8fde\u63a5 conn . close (); } }","title":"\u8bfe\u65f65 dbcp\u8fde\u63a5\u6c60"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#6","text":"\u5bf9\u8c61\u589e\u5f3a\u7684\u624b\u6bb5 \uff081\uff09\u7ee7\u627f \uff082\uff09\u88c5\u9970\u8005\u6a21\u5f0f \uff083\uff09\u52a8\u6001\u4ee3\u7406 1\u3001\u7ee7\u627f\uff1a \u4f1a\u4f7f\u5f97\u7c7b\u589e\u591a \u589e\u5f3a\u7684\u5185\u5bb9\u662f\u56fa\u5b9a\u7684 \u88ab\u589e\u5f3a\u7684\u5bf9\u8c61\u4e5f\u662f\u56fa\u5b9a\u7684 2\u3001\u88c5\u9970\u8005\u6a21\u5f0f \u589e\u5f3a\u7684\u5bf9\u8c61\u662f\u4e0d\u80fd\u4fee\u6539\u7684 \u88ab\u589e\u5f3a\u7684\u5bf9\u8c61\u53ef\u4ee5\u662f\u4efb\u610f\u7684 InputStream FileInputStream \u8282\u70b9\u6d41 BufferedInputStream \u88c5\u9970\u6d41 is a has a use a // MyConnection is Connection class MyConnection implements Connection { // MyConnection has Connection private Connection conn ; // \u5e95\u5c42\u5bf9\u8c61\uff0c\u88ab\u589e\u5f3a\u7684\u5bf9\u8c61 // \u901a\u8fc7\u6784\u9020\u5668\u4f20\u9012\u5e95\u5c42\u5bf9\u8c61 public MyConnection ( Connection conn ){ this . conn = conn ; } public Statement createStatement (){ return this . conn . createStatement (); } // \u589e\u5f3a\u70b9 public void close (){ } } 3\u3001\u52a8\u6001\u4ee3\u7406 \u88ab\u589e\u5f3a\u7684\u5bf9\u8c61\u53ef\u4ee5\u5207\u6362 \u589e\u5f3a\u7684\u5185\u5bb9\u4e5f\u53ef\u4ee5\u5207\u6362","title":"\u8bfe\u65f66 \u88c5\u9970\u8005\u6a21\u5f0f"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#7-c3p0","text":"\u4f9d\u8d56 <dependency> <groupId> com.mchange </groupId> <artifactId> c3p0 </artifactId> <version> 0.9.5.5 </version> </dependency> import com.mchange.v2.c3p0.ComboPooledDataSource ; import java.beans.PropertyVetoException ; import java.sql.Connection ; import java.sql.SQLException ; class Demo { public static void main ( String [] args ) throws PropertyVetoException , SQLException { // \u914d\u7f6e4\u4e2a\u5fc5\u8981\u53c2\u6570 ComboPooledDataSource dataSource = new ComboPooledDataSource (); dataSource . setDriverClass ( \"com.mysql.cj.jdbc.Driver\" ); dataSource . setJdbcUrl ( \"jdbc:mysql://localhost:3306/data\" ); dataSource . setUser ( \"root\" ); dataSource . setPassword ( \"123456\" ); // \u914d\u7f6e\u8fde\u63a5\u6c60\u53c2\u6570 dataSource . setAcquireIncrement ( 5 ); dataSource . setInitialPoolSize ( 3 ); dataSource . setMinPoolSize ( 3 ); dataSource . setMaxPoolSize ( 20 ); // \u83b7\u53d6\u8fde\u63a5\u5bf9\u8c61 Connection conn = dataSource . getConnection (); System . out . println ( conn . getClass (). getName ()); // \u5f52\u8fd8\u8fde\u63a5 conn . close (); } }","title":"\u8bfe\u65f67 c3p0\u8fde\u63a5\u6c60\u7684\u57fa\u672c\u4f7f\u7528\u65b9\u5f0f"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#8-c3p0","text":"\u5fc5\u987b\u547d\u540d\u4e3a\uff1ac3p0-config.xml \u5fc5\u987b\u653e\u5728src\u76ee\u5f55\u4e0b <?xml version=\"1.0\" encoding=\"utf-8\"?> <c3p0-config> <!-- \u8fd9\u662f\u9ed8\u8ba4\u914d\u7f6e\u4fe1\u606f --> <default-config> <!-- \u8fde\u63a5\u56db\u5927\u53c2\u6570\u914d\u7f6e --> <property name= \"driverClass\" > com.mysql.cj.jdbc.Driver </property> <property name= \"jdbcUrl\" > jdbc:mysql://localhost:3306/data </property> <property name= \"user\" > root </property> <property name= \"password\" > 123456 </property> <!-- \u6c60\u53c2\u6570\u914d\u7f6e --> <property name= \"acquireIncrement\" > 3 </property> <property name= \"initialPoolSize\" > 10 </property> <property name= \"minPoolSize\" > 2 </property> <property name= \"maxPoolSize\" > 10 </property> </default-config> </c3p0-config> \u8fde\u63a5\u4f1a\u62a5\u9519\uff1ajava.sql.SQLException: No suitable driver import com.mchange.v2.c3p0.ComboPooledDataSource ; import java.sql.Connection ; import java.sql.SQLException ; class Demo { public static void main ( String [] args ) throws SQLException { ComboPooledDataSource dataSource = new ComboPooledDataSource (); // \u83b7\u53d6\u8fde\u63a5\u5bf9\u8c61 Connection conn = dataSource . getConnection (); System . out . println ( conn . getClass (). getName ()); // \u5f52\u8fd8\u8fde\u63a5 conn . close (); } }","title":"\u8bfe\u65f68 c3p0\u8fde\u63a5\u7684\u914d\u7f6e\u6587\u4ef6\u4f7f\u7528"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#3-jdbc_1","text":"","title":"\u7b2c3 \u7ae0 \uff1a JDBC\u5de5\u5177\u7c7b"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#9-10-jdbcutils","text":"import com.mchange.v2.c3p0.ComboPooledDataSource ; import javax.sql.DataSource ; import java.sql.Connection ; import java.sql.SQLException ; public class JdbcUtil { // \u9700\u8981\u914d\u7f6ec3p0-config.xml private static ComboPooledDataSource dataSource = new ComboPooledDataSource (); // \u8fd4\u56de\u8fde\u63a5\u5bf9\u8c61 public static Connection getConnection () throws SQLException { return dataSource . getConnection (); } // \u8fd4\u56de\u8fde\u63a5\u6c60\u5bf9\u8c61 public static DataSource getDataSource (){ return dataSource ; } }","title":"\u8bfe\u65f69-10 JdbcUtils\u5c0f\u5de5\u5177"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#11-jndi","text":"JNDI(Java Naming and Directory Interface, Java\u547d\u540d\u548c\u76ee\u5f55\u63a5\u53e3)","title":"\u8bfe\u65f611 JNDI\u914d\u7f6e"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#12-threadlocal","text":"\u89e3\u51b3\u591a\u7ebf\u7a0b\u5e76\u53d1\u95ee\u9898\u7684\u5de5\u5177\u7c7b,\u5b83\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u672c\u5730\u7684\u526f\u672c\u53d8\u91cf\u673a\u5236\uff0c \u5b9e\u73b0\u4e86\u548c\u5176\u5b83\u7ebf\u7a0b\u9694\u79bb\uff0c\u5e76\u4e14\u8fd9\u79cd\u53d8\u91cf\u53ea\u5728\u672c\u7ebf\u7a0b\u7684\u751f\u547d\u5468\u671f\u5185\u8d77\u4f5c\u7528\uff0c \u53ef\u4ee5\u51cf\u5c11\u540c\u4e00\u4e2a\u7ebf\u7a0b\u5185\u591a\u4e2a\u65b9\u6cd5\u4e4b\u95f4\u7684\u516c\u5171\u53d8\u91cf\u4f20\u9012\u7684\u590d\u6742\u5ea6 import java.sql.SQLException ; import java.util.HashMap ; import java.util.Map ; class Demo { public static void main ( String [] args ) throws SQLException { ThreadLocal < String > tl = new ThreadLocal < String >(); // \u6dfb\u52a0 tl . set ( \"Tom\" ); // \u83b7\u53d6 String name = tl . get (); System . out . println ( name ); // \u79fb\u9664 tl . remove (); } } ThreadLocal\u7684\u6838\u5fc3\u4ee3\u7801 class TL < T >{ private Map < Thread , T > map = new HashMap < Thread , T >(); public void set ( T value ){ this . map . put ( Thread . currentThread (), value ); } public T get (){ return this . map . get ( Thread . currentThread ()); } public void remove (){ this . map . remove ( Thread . currentThread ()); } }","title":"\u8bfe\u65f612 ThreadLocal"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#13-dbutils","text":"\u4f9d\u8d56 <dependency> <groupId> commons-dbutils </groupId> <artifactId> commons-dbutils </artifactId> <version> 1.7 </version> </dependency> \u793a\u4f8b Student.class public class Student { private int sid ; private String sname ; public int getSid () { return sid ; } public void setSid ( int sid ) { this . sid = sid ; } public String getSname () { return sname ; } public void setSname ( String sname ) { this . sname = sname ; } public Student () { } @Override public String toString () { return \"Student{\" + \"sid=\" + sid + \", sname='\" + sname + '\\'' + '}' ; } } Demo.class 1\u3001\u67e5\u8be2\u64cd\u4f5c import org.apache.commons.dbutils.QueryRunner ; import org.apache.commons.dbutils.handlers.BeanHandler ; import java.sql.SQLException ; class Demo { public static void main ( String [] args ) throws SQLException { // \u63d0\u4f9b\u6570\u636e\u5e93\u8fde\u63a5\u6c60 QueryRunner qr = new QueryRunner ( JdbcUtil . getDataSource ()); // \u67e5\u8be2\u64cd\u4f5c // sql\u6a21\u677f String sql = \"select * from student where sid = ?\" ; // \u53c2\u6570 Object [] params = { 3 }; // \u63d0\u4f9b\u7ed3\u679c\u96c6\u5904\u7406\u5668 Student student = qr . query ( sql , new BeanHandler < Student >( Student . class ), params ); System . out . println ( student ); // Student{sid=3, sname='\u6768\u4e0d\u6094'} } } 2\u3001\u66f4\u65b0\u64cd\u4f5c String sql = \"update student set sname=? where sid = ?\" ; Object [] params = { \"\u6768\u4e0d\u6094\" , 3 }; qr . update ( sql , params );","title":"\u8bfe\u65f613 dbutils\u539f\u7406"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#14-dbutils","text":"common-dbutils.jar QueryRunner // update\u6267\u884c\u589e\uff0c\u5220\uff0c\u6539 int update ( String sql , Object ... params ) int update ( Connection conn , String sql , Object ... params ) // query\u6267\u884c\u67e5\u8be2 T query ( String sql , ResultSetHandler rsh , Object ... params ) T query ( Connection conn , String sql , ResultSetHandler rsh , Object ... params ) ResultSetHandler\u63a5\u53e3 BeanHandler\uff08\u5355\u884c\uff09 \u4e00\u884c\u8f6c\u6362\u6210\u6307\u5b9a\u7c7b\u578b\u7684javaBean\u5bf9\u8c61 BeanListHandler(\u591a\u884c) \u591a\u884c\u8f6c\u4e3alist\u5bf9\u8c61 MapHandler(\u5355\u884c) \u4e00\u884c\u7ed3\u679c\u8f6c\u4e3aMap\u5bf9\u8c61 MapListHandler(\u591a\u884c) \u591a\u884c\u7ed3\u679c\u8f6c\u4e3aMap\u5bf9\u8c61\u5217\u8868 ScalarHandler \u5355\u884c\u5355\u5217 \u901a\u5e38\u7528\u4e8e select count(*) from table 1\u3001BeanListHandler import org.apache.commons.dbutils.QueryRunner ; import org.apache.commons.dbutils.handlers.BeanListHandler ; import java.sql.SQLException ; import java.util.List ; class Demo { public static void main ( String [] args ) throws SQLException { // \u63d0\u4f9b\u6570\u636e\u5e93\u8fde\u63a5\u6c60 QueryRunner qr = new QueryRunner ( JdbcUtil . getDataSource ()); String sql = \"select * from student\" ; List < Student > students = qr . query ( sql , new BeanListHandler < Student >( Student . class )); System . out . println ( students ); } } 2\u3001MapListHandler import org.apache.commons.dbutils.QueryRunner ; import org.apache.commons.dbutils.handlers.MapListHandler ; import java.sql.SQLException ; import java.util.List ; import java.util.Map ; class Demo { public static void main ( String [] args ) throws SQLException { QueryRunner qr = new QueryRunner ( JdbcUtil . getDataSource ()); String sql = \"select * from student\" ; List < Map < String , Object >> students = qr . query ( sql , new MapListHandler ()); System . out . println ( students ); } } 3\u3001ScalarHandler import org.apache.commons.dbutils.QueryRunner ; import org.apache.commons.dbutils.handlers.ScalarHandler ; import java.sql.SQLException ; class Demo { public static void main ( String [] args ) throws SQLException { QueryRunner qr = new QueryRunner ( JdbcUtil . getDataSource ()); String sql = \"select count(*) from student\" ; Number cnt = ( Number ) qr . query ( sql , new ScalarHandler ()); long count = cnt . longValue (); System . out . println ( count ); } }","title":"\u8bfe\u65f614 dbUtils\u7ed3\u679c\u96c6\u5904\u7406\u5668\u4ecb\u7ecd"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#15-txqueryrunnerjdbcutils","text":"class TxQueryRunner extends QueryRunner { // \u91cd\u5199\u90e8\u5206\u65b9\u6cd5 }","title":"\u8bfe\u65f615 \u7f16\u5199TxQueryRunner\u914d\u5408JdbcUtils\u6765\u5904\u7406\u4e8b\u52a1"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#16-jdbcutils","text":"\u4f7f\u7528 ThreadLocal","title":"\u8bfe\u65f616 JdbcUtils\u5904\u7406\u591a\u7ebf\u7a0b\u5e76\u53d1\u8bbf\u95ee\u95ee\u9898"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#4_1","text":"","title":"\u7b2c4 \u7ae0 \uff1a \u5206\u9875"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#17","text":"\u5206\u9875\u4f18\u70b9\uff1a\u53ea\u67e5\u8be2\u4e00\u9875\uff0c\u4e0d\u7528\u67e5\u8be2\u6240\u6709\u9875 class pageBean < T >{ // \u5f53\u524d\u9875\u7801 private int currentPage ; // \u603b\u9875\u6570 private int totalPage ; // \u603b\u8bb0\u5f55\u6570 private int totalRecord ; // \u9875\u9762\u5927\u5c0f private int pageSize ; // \u9875\u9762\u6570\u636e private List < T > beanList ; }","title":"\u8bfe\u65f617 \u5206\u9875\u51c6\u5907\u5de5\u4f5c"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#18","text":"\u7b2cn\u9875/\u5171N\u9875 \u9996\u9875 \u4e0a\u4e00\u9875 1 2 3 4 5 6 \u4e0b\u4e00\u9875 \u5c3e\u9875","title":"\u8bfe\u65f618\uff1a\u5904\u7406\u5206\u9875\u5404\u5c42\u5206\u5de5"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#19","text":"","title":"\u8bfe\u65f619 \u5206\u9875\u5904\u7406\u7b2c\u4e00\u9636\u6bb5\u5b8c\u6210"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#20","text":"\u8ba1\u7b97\u516c\u5f0f pageSize = 10 begin = currentPage - 5 end = currentPage + 4 \u5982\u679c\u603b\u9875\u6570<=10, \u90a3\u4e48bedin=1, end=\u603b\u9875\u6570 \u5934\u6ea2\u51fa\uff1a\u5f53begin<1, \u90a3\u4e48begin=1 \u5c3e\u6ea2\u51fa\uff1a\u5f53end>\u603b\u9875\u6570, \u90a3\u4e48end>\u603b\u9875\u6570","title":"\u8bfe\u65f620 \u5206\u9875\u4e4b\u9875\u9762\u9875\u7801\u5217\u8868\u8ba1\u7b97"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#21","text":"\u8d85\u94fe\u63a5\u4e2d\u8981\u4fdd\u7559\u53c2\u6570","title":"\u8bfe\u65f621 \u5206\u9875\u4e4b\u67e5\u8be2\u6761\u4ef6\u4e22\u5931\u95ee\u9898"},{"location":"Java/Java\u6570\u636e\u5e93\u5f00\u53d1/6-JDBC\u6570\u636e\u5e93\u5f00\u53d1\u8fdb\u9636/#22-pagebeanurl","text":"","title":"\u8bfe\u65f622 \u5206\u9875\u4e4b\u67e5\u8be2\u6761\u4ef6\u4fdd\u5b58\u5230PageBean\u7684url\u4e2d"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/","text":"\u9636\u6bb5 1\uff1aJava \u8bed\u8a00\u57fa\u7840 \u89c6\u9891\u5730\u5740\uff1ahttps://edu.aliyun.com/roadmap/java 1-Java \u7f16\u7a0b\u5165\u95e8 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5f02\u5e38 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u63a5\u53e3 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7ee7\u627f 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u94fe\u8868 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5185\u90e8\u7c7b 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61 3-Java \u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b 3-Java \u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04 3-Java \u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93 3-Java \u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6 3-Java \u9ad8\u7ea7\u7f16\u7a0b-\u6570\u636e\u5e93\u7f16\u7a0b 3-Java \u9ad8\u7ea7\u7f16\u7a0b-\u7f51\u7edc\u7f16\u7a0b 3-Java \u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c 3-Java \u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93","title":"\u9636\u6bb5 1\uff1aJava \u8bed\u8a00\u57fa\u7840"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/#1java","text":"\u89c6\u9891\u5730\u5740\uff1ahttps://edu.aliyun.com/roadmap/java 1-Java \u7f16\u7a0b\u5165\u95e8 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5f02\u5e38 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u63a5\u53e3 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7ee7\u627f 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u94fe\u8868 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5185\u90e8\u7c7b 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32 2-Java \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61 3-Java \u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b 3-Java \u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04 3-Java \u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93 3-Java \u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6 3-Java \u9ad8\u7ea7\u7f16\u7a0b-\u6570\u636e\u5e93\u7f16\u7a0b 3-Java \u9ad8\u7ea7\u7f16\u7a0b-\u7f51\u7edc\u7f16\u7a0b 3-Java \u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c 3-Java \u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93","title":"\u9636\u6bb5 1\uff1aJava \u8bed\u8a00\u57fa\u7840"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/","text":"Java 1\u3001\u7f16\u7a0b\u57fa\u7840\u81ea\u6d4b\u8003\u8bd5 2\u3001Java\u53d1\u5c55\u7b80\u4ecb \u5b8c\u5584\u7684\u751f\u6001\u7cfb\u7edf OAK\uff08\u6a61\u6811\uff09\u5e73\u53f0 HotJava\u6d4f\u89c8\u5668 sun: Stanford University NetWork Java \u6807\u51c6\u5f00\u53d1 J2SE\u3001JAVA SE Java \u5d4c\u5165\u5f0f\u5f00\u53d1 J2ME\u3001JAVA ME Java \u4f01\u5f00\u5f00\u53d1 J2EE\u3001JAVA EE 3\u3001Java\u8bed\u8a00\u7279\u70b9 1\u3001\u884c\u4e1a\u5185\u901a\u7528\u7684\u6280\u672f\u5b9e\u73b0\u6807\u51c6 2\u3001\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00 3\u3001\u63d0\u4f9b\u4e86\u5185\u5b58\u56de\u6536\u5904\u7406\u673a\u5236 4\u3001\u907f\u514d\u4e86\u590d\u6742\u7684\u6307\u9488\u95ee\u9898 5\u3001\u652f\u6301\u591a\u7ebf\u7a0b\u7f16\u7a0b 6\u3001\u9ad8\u6548\u7684\u7f51\u7edc\u5904\u7406\u80fd\u529b 7\u3001\u826f\u597d\u7684\u53ef\u79fb\u690d\u6027 8\u3001\u8bed\u8a00\u8db3\u591f\u7b80\u5355 4\u3001Java\u53ef\u79fb\u690d\u6027 JVM Java\u865a\u62df\u673a\uff08Java Virtual Machine\uff09 JVM \u8c03\u4f18\u95ee\u9898 \u7f16\u8bd1\u578b + \u89e3\u91ca\u578b Java\u6e90\u6587\u4ef6.java -> \u5b57\u8282\u7801.class -> \u673a\u5668\u7801 5\u3001JDK\u7b80\u4ecb \u751f\u4ea7\u73af\u5883\u4f7f\u7528JDK1.8 JDK Java Development Kit\uff08\u5305\u542bJRE\uff09 JRE Java Runtime Envrinment 6\u3001JDK\u5b89\u88c5\u4e0e\u914d\u7f6e \u73af\u5883\u53d8\u91cf\u914d\u7f6e Windows\uff1a Path \u7f16\u8bd1\u547d\u4ee4\uff1ajavac.exe \u89e3\u91ca\u547d\u4ee4\uff1ajava.exe 7\u3001\u7f16\u7a0b\u8d77\u6b65 \u6e90\u4ee3\u7801\uff1aHello.java public class Hello { // \u4e2d\u62ec\u53f7[] \u53ef\u5728\u53d8\u91cf\u540d\u524d\uff0c\u4e5f\u53ef\u4ee5\u5728\u540e public static void main ( String [] args ) { System . out . println ( \"Hello World!\" ); } } \u7f16\u8bd1\u6267\u884c $ ls Hello.java $ javac Hello.java # \u7f16\u8bd1\u6587\u4ef6\u4e3a\u5b57\u8282\u7801\u6587\u4ef6 $ ls Hello.class Hello.java $ java Hello # JVM\u6267\u884cjava\u7a0b\u5e8f Hello World! 1\u3001\u5b9a\u4e49\u7c7b\uff1a public class \u7c7b\u540d {} // \u7c7b\u540d\u5fc5\u987b\u4e0e\u6587\u4ef6\u540d\u4e00\u81f4 class \u7c7b\u540d {} // \u7c7b\u540d\u53ef\u4ee5\u4e0e\u6587\u4ef6\u540d\u4e0d\u4e00\u81f4 \u5728\u4e00\u4e2a.java\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u6709\u591a\u4e2aclass\u5b9a\u4e49 \u4e00\u4e2ajava\u6587\u4ef6\u4e2d\uff0c\u53ea\u80fd\u6709\u4e00\u4e2apublic class\uff08\u63a8\u8350\uff09 \u547d\u540d\u89c4\u8303\uff1a\u6bcf\u4e2a\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\u5927\u5199 2\u3001\u4e3b\u65b9\u6cd5 \u7a0b\u5e8f\u6267\u884c\u8d77\u70b9\uff0c\u4e00\u5b9a\u8981\u5b9a\u4e49\u5728\u7c7b\u4e2d \u4e3b\u65b9\u6cd5\u6240\u5728\u7c7b\uff0c\u79f0\u4e3a\u4e3b\u7c7b 3\u3001\u7cfb\u7edf\u8f93\u51fa System . out . println (); // \u8f93\u51fa\u6362\u884c line System . out . print (); // \u8f93\u51fa\u4e0d\u6362\u884c 8\u3001JShell\u5de5\u5177 JDK > 1.9 $ jshell jshell > 9\u3001CLASSPATH\u73af\u5883\u5c5e\u6027 \u9ed8\u8ba4\u4e3a\u5f53\u524d\u6240\u5728\u76ee\u5f55 export CLASSPATH = . # Linux set CLASSPATH = . # Windows \u53ef\u914d\u7f6e\u4e3a\u7cfb\u7edf\u53d8\u91cf PATH # \u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u8def\u5f84\u914d\u7f6e\uff0c\u5b9a\u4e49\u6240\u6709\u53ef\u6267\u884c\u7a0b\u5e8f\u8def\u5f84 CLASSPATH # JRE\u63d0\u4f9b\u7684\u52a0\u8f7d\u7c7b\u7684\u8def\u5f84 10\u3001\u6ce8\u91ca \u7f16\u8bd1\u65f6\u4e0d\u5904\u7406\u6ce8\u91ca // \u5355\u884c\u6ce8\u91ca /* \u591a\u884c\u6ce8\u91ca */ /** \u6587\u6863\u6ce8\u91ca */ 11 \u6807\u8bc6\u7b26\u4e0e\u5173\u952e\u5b57 \u6807\u8bc6\u7b26\uff1a \u5305\u542b\uff1a\u5b57\u6bcd\u3001\u6570\u5b57\u3001 _ \u3001$ \u5b57\u6bcd\u5f00\u5934 \u5173\u952e\u5b57 \u7279\u6b8a\u542b\u4e49\uff0c\u5982 class JDK 1.4 assert \u7528\u4e8e\u5f02\u5e38\u5904\u7406 JDK 1.5 enum \u7528\u4e8e\u679a\u4e3e\u5b9a\u4e49 \u672a\u4f7f\u7528\uff1agoto\u3001const \u7279\u6b8a\u542b\u4e49\uff1atrue\u3001false\u3001null 12\u3001Java\u6570\u636e\u7c7b\u578b\u7b80\u4ecb \u5206\u7c7b \u57fa\u672c\u6570\u636e\u7c7b\u578b\uff1a\u5177\u4f53\u7684\u6570\u5b57\u5355\u5143 \u6570\u503c\u578b -\u6574\u578b\uff1abyte-8\u3001short-16\u3001 int-32\u3001long-64 # \u9ed8\u8ba4\u503c 0 -\u6d6e\u70b9\u578b\uff1afloat-32\u3001double-64 # \u9ed8\u8ba4\u503c 0 \u5e03\u5c14\u578b\uff1aboolean # \u9ed8\u8ba4\u503c false \u5b57\u7b26\u578b\uff1achar-16 # \u9ed8\u8ba4\u503c \\u0000 \u5f15\u7528\u6570\u636e\u7c7b\u578b\uff1a\u6d89\u53ca\u5185\u5b58\u5173\u7cfb\u7684\u4f7f\u7528 \u6570\u7ec4\u3001\u7c7b\u3001\u63a5\u53e3 # \u9ed8\u8ba4\u503cnull \u53c2\u8003\u539f\u5219 \u63cf\u8ff0\u6570\u5b57\uff1a\u6574\u6570int\u3001\u5c0f\u6570double \u6570\u636e\u4f20\u8f93\u3001\u6587\u5b57\u7f16\u7801\u8f6c\u6362\uff1abyte\uff08\u4e8c\u8fdb\u5236\u64cd\u4f5c\uff09 \u5904\u7406\u4e2d\u6587\uff1achar \u63cf\u8ff0\u5185\u5b58\u6216\u6587\u4ef6\u5927\u5c0f\uff0c\u81ea\u589e\u4e3b\u952e\uff1a\u4f7f\u7528long 13\u3001\u6574\u578b\u6570\u636e\u7c7b\u578b \u5b9a\u4e49 // int \u53d8\u91cf\u540d\u79f0 = \u5e38\u91cf; int x = 10 ; \u8303\u4f8b\uff1a\u8d85\u8fc7int\u8303\u56f4 \u6570\u636e\u6ea2\u51fa // int int\u53d8\u91cf = int\u6570\u503c int max = Integer . MAX_VALUE ; // \u83b7\u53d6int\u6700\u5927\u503c int min = Integer . MIN_VALUE ; // \u83b7\u53d6int\u6700\u5c0f\u503c System . out . println ( \"min: \" + min ); System . out . println ( \"max: \" + max ); // int\u53d8\u91cf + int\u5e38\u91cf = int\u7ed3\u679c System . out . println ( \"max + 1: \" + ( max + 1 )); System . out . println ( \"=================\" ); // long long\u53d8\u91cf = int\u6570\u503c long long_max = Integer . MAX_VALUE ; long long_min = Integer . MIN_VALUE ; System . out . println ( \"long_min: \" + long_min ); System . out . println ( \"long_max: \" + long_max ); // long\u53d8\u91cf + int\u5e38\u91cf = long\u7ed3\u679c System . out . println ( \"long_min + 1: \" + ( long_max + 1 )); /* min: -2147483648 max: 2147483647VAl max + 1: -2147483648 ================= long_min: -2147483648 long_max: 2147483647 long_min + 1: 2147483648 */ \u6570\u503c\u5e38\u91cf\u9ed8\u8ba4\u662fint \u6570\u503c\u5e38\u91cf\u540e\u9762\u52a0L\uff08\u63a8\u8350\uff09\u6216l\u8f6c\u6362\u4e3along\u578b long l = 123L ; \u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\uff1a\u5c0f\u7c7b\u578b -> \u5927\u7c7b\u578b \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff1a\u5927\u7c7b\u578b -> \u5c0f\u7c7b\u578b long l = 123 ; // \u81ea\u52a8\u8f6c\u6362 int i = ( int ) 123 ; // \u5f3a\u5236\u8f6c\u6362\uff08\u4e0d\u5efa\u8bae\uff09 byte b = 200 ; // \u9519\u8bef: \u4e0d\u517c\u5bb9\u7684\u7c7b\u578b: \u4eceint\u8f6c\u6362\u5230byte\u53ef\u80fd\u4f1a\u6709\u635f\u5931 \u5e38\u91cf\u4f1a\u81ea\u52a8\u8f6c\u6362 \u53d8\u91cf\u9700\u8981\u5f3a\u5236\u8f6c\u6362 14\u3001\u6d6e\u70b9\u578b\u6570\u636e \u5c0f\u6570\u5e38\u91cf\u5bf9\u5e94double // \u5b9a\u4e49double double x = 10.2 ; // double + int = double // \u5b9a\u4e49float float x = ( float ) 10.2 ; // \u5f3a\u5236\u8f6c\u6362 float y = 10.2F ; // int / int => int // 10/4=2 // (double)int / int => double // (double)10/4 = 2.5 15\u3001\u5b57\u7b26\u578b \u5355\u5f15\u53f7''\u63cf\u8ff0 1\u3001\u5b9a\u4e49\u5b57\u7b26\u53d8\u91cf // \u5b9a\u4e49\u5b57\u7b26\u53d8\u91cf char c = 'B' ; // \u83b7\u53d6\u5b57\u7b26\u7f16\u7801 int num = c ; \u4efb\u4f55\u7f16\u7a0b\u8bed\u8a00\u7684\u5b57\u7b26\u90fd\u53ef\u4ee5\u4e0eint\u8fdb\u884c\u8f6c\u6362 \u5b57\u7b26\u96c6 \u5b57\u7b26\u8303\u56f4 \u6570\u503c \u5927\u5199\u5b57\u6bcd 'A'-'Z' 65-90 \u5c0f\u5199\u5b57\u6bcd 'a'-'z' 97-122 \u6570\u5b57\u8303\u56f4 '0'-'9' 48-57 2\u3001\u5c0f\u5199\u8f6c\u5927\u5199\u793a\u4f8b char a = 'a' ; int num = a ; num = num - 32 ; System . out . println (( char ) num ); // A 3\u3001\u4fdd\u5b58\u4e2d\u6587\u6570\u636e java\u4f7f\u7528Unicode\u5341\u516d\u8fdb\u5236\u7684\u7f16\u7801\uff0c\u53ef\u4ee5\u5305\u542b\u4efb\u610f\u5b57\u7b26 char a = '\u4e2d' ; int num = a ; System . out . println ( num ); // 20013 16\u3001\u5e03\u5c14\u578b // \u5b9a\u4e49\u5e03\u5c14\u578b boolean flag = true ; // \u6267\u884c\u5224\u65ad\u903b\u8f91 if ( flag ){ System . out . println ( \"true\" ); } else { System . out . println ( \"false\" ); } // true \u90e8\u5206\u7f16\u7a0b\u8bed\u8a00\u4e0d\u63d0\u4f9b\u5e03\u5c14\u578b\uff0c\u4f7f\u75280\u66ff\u4ee3false\uff0c\u5176\u4ed6\u503c\u66ff\u4ee3true java\u4e2d\u5e03\u5c14\u578b\u7684\u53d6\u503c\u4e3a\uff1atrue\uff0cfalse 17\u3001String\u5b57\u7b26\u4e32 \u4efb\u4f55\u7f16\u7a0b\u8bed\u8a00\u91cc\u90fd\u6ca1\u6709\u63d0\u4f9b\u6240\u8c13\u5b57\u7b26\u4e32\u8fd9\u79cd\u57fa\u672c\u6570\u636e \u53cc\u5f15\u53f7 \"\" \u63cf\u8ff0\u5b57\u7b26\u4e32 String str = \"Hello\" ; // \u5b57\u7b26\u4e32\u63cf\u8ff0 str = str + \" World\" ; // \u5b57\u7b26\u4e32\u8fde\u63a5 str += \"!\" ; System . out . println ( str ); // Hello World! Java\u4e2d\uff1a\u6570\u636e\u8303\u56f4\u5927\u7c7b\u578b + \u6570\u636e\u8303\u56f4\u5c0f\u7c7b\u578b\uff08\u81ea\u52a8\u8f6c\u4e3a\u8303\u56f4\u5927\u7684\u7c7b\u578b\uff09 \u5982\u679c\u6709\u5b57\u7b26\u4e32String\uff0c\u6240\u6709\u6570\u636e\u7c7b\u578b\u90fd\u4f1a\u8f6c\u4e3aString\u7c7b\u578b System . out . println ( \"\u6570\u503c\u8ba1\u7b97\u7ed3\u679c\uff1a\" + ( 1 + 1 )); // \u6570\u503c\u8ba1\u7b97\u7ed3\u679c\uff1a2 System . out . println ( \"\u5b57\u7b26\u62fc\u63a5\u7ed3\u679c\uff1a\" + 1 + 1 ); // \u5b57\u7b26\u62fc\u63a5\u7ed3\u679c\uff1a11 \u8f6c\u4e49\u5b57\u7b26, \u591a\u7528\u4e8e\u6253\u5370\u8f93\u51fa Tab \\ t \u6362\u884c \\ n \u5f15\u53f7 \\\" \u5355\u5f15\u53f7 \\' \u659c\u7ebf \\\\ 18\u3001\u8fd0\u7b97\u7b26\u7b80\u4ecb \u6240\u6709\u7684\u7a0b\u5e8f\u5f00\u53d1\uff0c\u90fd\u662f\u4e00\u79cd\u6570\u5b57\u7684\u5904\u7406\u6e38\u620f \u5bf9\u4e8e\u6570\u5b57\u5904\u7406\u7684\u64cd\u4f5c\u6a21\u5f0f\u5c31\u79f0\u4e3a\u8fd0\u7b97\u7b26 \u7a0b\u5e8f\u4f1a\u63d0\u4f9b\u57fa\u7840\u8fd0\u7b97\u7b26\uff0c\u5b58\u5728\u4f18\u5148\u7ea7\uff08\u62ec\u53f7\u4f18\u5148\u7ea7\u6700\u9ad8\uff09 19\u3001\u6570\u5b66\u8fd0\u7b97\u7b26 \u652f\u6301\u56db\u5219\u8fd0\u7b97 \u7b80\u5316\u8fd0\u7b97\u7b26 += \u3001 -= \u3001 *= \u3001 /= \u3001 %= ++ \u53d8\u91cf\u3001 --\u53d8\u91cf\uff1a\u5148\u8fdb\u884c\u53d8\u91cf\u81ea\u589e\u81ea\u51cf\uff0c\u800c\u540e\u518d\u8fdb\u884c\u6570\u5b57\u8ba1\u7b97 \u53d8\u91cf ++ \u3001\u53d8\u91cf --\uff1a\u5148\u4f7f\u7528\u53d8\u91cf\u8fdb\u884c\u8ba1\u7b97\uff0c\u518d\u8fdb\u884c\u53d8\u91cf\u81ea\u589e\u81ea\u51cf \u5185\u5b58\u8f83\u5c11\u7684\u65f6\u5019\u4f7f\u7528\uff0c\u73b0\u5728\u4e0d\u63a8\u8350\u4f7f\u7528 int x = 10 ; int y = 20 ; // (++x) + (y--) => 11 + 20 = 31; x=11; y=19 int result = ++ x + y --; System . out . println ( \"result: \" + result ); System . out . println ( \"x: \" + x ); System . out . println ( \"y: \" + y ); // result: 31 // x: 11 // y: 19 20\u3001\u5173\u7cfb\u8fd0\u7b97\u7b26 > \u3001 < >= \u3001 <= == \u6bd4\u8f83 // = \u8d4b\u503c \u6240\u6709\u7684\u5173\u7cfb\u5224\u65ad\u8fd4\u56de\u503c\u90fd\u662fboolean \u6570\u636e\u7c7b\u578b\u4e4b\u95f4\u63d0\u4f9b\u81ea\u52a8\u8f6c\u578b\u652f\u6301\uff0c\u5b57\u7b26\u5224\u65ad\u4f1a\u81ea\u52a8\u8f6c\u4e3aint char c = '\u4e2d' ; boolean flag = c > 1 ; System . out . println ( flag ); // true 21\u3001\u903b\u8f91\u8fd0\u7b97\u7b26 \u4e09\u76ee\u8fd0\u7b97\u7b26 \u5173\u7cfb\u8fd0\u7b97 \uff1f \u6ee1\u8db3\u65f6\u7684\u5185\u5bb9 : \u4e0d\u6ee1\u8db3\u65f6\u7684\u5185\u5bb9 \u5224\u65ad\u5b57\u7b26\u5927\u5c0f, \u5d4c\u5957\u5c42\u6570\u4e0d\u5b9c\u8fc7\u591a int x = 10 ; int y = 20 ; // int max = x > y ? x : y; int max ; if ( x > y ){ max = x ; } else { max = y ; } System . out . println ( max ); // 20 22\u3001\u4f4d\u8fd0\u7b97 \u76f4\u63a5\u8fdb\u884c\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u8ba1\u7b97\u5904\u7406 \u4e0e & \u6216 | \u5f02\u6216 ^ \u53cd\u7801 ~ \u79fb\u4f4d << >> \u5341\u8fdb\u5236\u4e0e\u4e8c\u8fdb\u5236\u8f6c\u6362 \u6570\u5b57\u96642\u53d6\u4f59 # \u5341\u8fdb\u5236\u8f6c\u4e8c\u8fdb\u5236 13 / 2 = 6 ...1 6 / 2 = 3 ...0 3 / 2 = 1 ...1 1 / 2 = 0 ...1 13 = > 1101 # \u5c0610\u4ece\u5341\u8fdb\u5236\u8f6c\u4e8c\u8fdb\u5236 $ echo \"obase=2;10\" | bc # \u4e8c\u8fdb\u5236\u8f6c\u4e3a\u5341\u8fdb\u5236 8 4 2 1 1 1 0 1 = > 8 + 4 + 1 = 13 \u4f4d\u8fd0\u7b97 13 1101 7 0111 & 0101 => 5 | 1111 => 15 ^ 1010 => 10 \u79fb\u4f4d\u8ba1\u7b97 // 2\u76843\u6b21\u65b9 8 2 << 2 = 8 2 -> 0010 -> 1000 -> 8 \u533a\u522b & && | || 1\u3001& | \u4f4d\u8fd0\u7b97\u548c\u903b\u8f91\u8fd0\u7b97 \u903b\u8f91\u5224\u65ad\u7684\u65f6\u5019\uff0c\u6240\u6709\u5224\u65ad\u90fd\u8981\u6267\u884c \u4f4d\u8fd0\u7b97\u7684\u65f6\u5019\u53ea\u662f\u5bf9\u5f53\u524d\u6570\u636e\u8fdb\u884c\u4e0e\u548c\u6216\u5904\u7406 2\u3001&& || \u77ed\u8def\u8fd0\u7b97 && \u5982\u679c\u524d\u9762\u6761\u4ef6\u8fd4\u56defalse\uff0c\u540e\u7eed\u6761\u4ef6\u4e0d\u518d\u6267\u884c || \u5982\u679c\u524d\u9762\u6761\u4ef6\u8fd4\u56detrue\uff0c\u540e\u7eed\u6761\u4ef6\u4e0d\u518d\u6267\u884c 23\u3001IF\u5206\u652f\u7ed3\u6784 \u987a\u5e8f\u7ed3\u6784\uff0c\u5206\u652f\u7ed3\u6784\uff0c\u5faa\u73af\u7ed3\u6784 if\u8bed\u53e5 \u9488\u5bf9\u5173\u7cfb\u8868\u8fbe\u5f0f\u8fdb\u884c\u5224\u65ad\u5904\u7406\u7684\u5206\u652f\u64cd\u4f5c if ( boolean ){ } [ else { // \u53ef\u9009 }] 24\u3001SWITCH\u5f00\u5173\u8bed\u53e5 \u53ef\u4ee5\u5224\u65ad int \u3001 char \u3001\u679a\u4e3e\u3001 String \uff08 JDK >= 1 . 7 \uff09 \u5982\u679c\u6ca1\u6709\u5728case\u540e\u9762\u8ffd\u52a0break\uff0c\u90a3\u4e48\u4f1a\u4ececase\u6761\u4ef6\u5f00\u59cb\u6267\u884c\u5230\u6700\u540e switch ( \u6570\u636e ) { case \u6570\u503c : { [ break ;] } case \u6570\u503c : { [ break ;] } default : { } } \u793a\u4f8b String s = \"Hello\" ; switch ( s ){ case \"hello\" : { System . out . println ( \"hello\" ); break ; } case \"Hello\" : { System . out . println ( \"Hello\" ); break ; } default : { System . out . println ( \"default\" ); } } // Hello 25\u3001while\u5faa\u73af \u5faa\u73af\u7ed3\u6784\uff1a\u67d0\u4e00\u6bb5\u4ee3\u7801\u88ab\u91cd\u590d\u6267\u884c \u5982\u679c\u4e0d\u4fee\u6539\u5faa\u73af\u6761\u4ef6\uff0c\u4f1a\u9020\u6210\u6b7b\u5faa\u73af // \u81f3\u5c11\u6267\u884c 0 \u6b21 \u5e38\u7528 while ( boolean ) { } // \u81f3\u5c11\u6267\u884c 1 \u6b21 do { } while ( boolean ); // \u6ce8\u610f\u8fd9\u91cc\u7684\u5206\u53f7 26\u3001for\u5faa\u73af for ( \u5b9a\u4e49\u5faa\u73af\u521d\u59cb\u503c ; \u5faa\u73af\u5224\u65ad ; \u4fee\u6539\u5faa\u73af\u53c2\u6570 ) { } // eg: int sum = 0 ; for ( int i = 1 ; i < 10 ; i ++) { sum += i ; } System . out . println ( sum ); // 45 while \u548c for\u5faa\u73af\u9009\u62e9 1\u3001\u660e\u786e\u5faa\u73af\u6b21\u6570\uff0c\u4f18\u5148\u9009\u62e9for\u5faa\u73af 2\u3001\u4e0d\u77e5\u9053\u5faa\u73af\u6b21\u6570\uff0c\u4f46\u662f\u77e5\u9053\u5faa\u73af\u7ed3\u675f\u6761\u4ef6\uff0c\u9009\u62e9while\u5faa\u73af 27\u3001\u5faa\u73af\u63a7\u5236 break \u9000\u51fa\u6574\u4e2a\u5faa\u73af\u7ed3\u6784 continue \u7ed3\u675f\u5f53\u524d\u5faa\u73af\uff0c\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u6b21\u5faa\u73af\uff0c\u53ef\u4ee5\u5b9e\u73b0\u90e8\u5206goto\u529f\u80fd C\u8bed\u8a00\u4e2d\u7684goto \u4e0d\u5efa\u8bae\u4f7f\u7528 // \u4f7f\u7528continue \u8df3\u51fa\u4e24\u5c42\u5faa\u73af \u4e0d\u5efa\u8bae\u4f7f\u7528 Point: for ( int i = 1 ; i < 3 ; i ++) { for ( int j = 1 ; j < 3 ; j ++) { if ( i == j ) { continue Point ; } System . out . println ( i + \" + \" + j + \" = \" + ( i + j )); } } /* \u4e0d\u4f7f\u7528 continue Point; 1 + 1 = 2 1 + 2 = 3 2 + 1 = 3 2 + 2 = 4 \u4f7f\u7528 continue Point; 2 + 1 = 3 */ 28\u3001\u5faa\u73af\u5d4c\u5957 \u5faa\u73af\u5d4c\u5957\uff1a\u5faa\u73af\u8bed\u53e5\u4e2d\u5d4c\u5957\u5176\u4ed6\u5faa\u73af\u8bed\u53e5 \u5d4c\u5957\u5c42\u6b21\u8d8a\u591a\uff0c\u590d\u6742\u5ea6\u8d8a\u9ad8 \u5b9e\u4f8b1\u3001\u6253\u5370\u4e58\u6cd5\u53e3\u8bc0\u8868 for ( int i = 1 ; i <= 9 ; i ++) { for ( int j = 1 ; j <= i ; j ++) { System . out . print ( j + \" * \" + i + \" = \" + ( i * j ) + \"\\t\" ); } System . out . println (); } /* 1 * 1 = 1 1 * 2 = 2 2 * 2 = 4 1 * 3 = 3 2 * 3 = 6 3 * 3 = 9 ... */ \u5b9e\u4f8b2\u3001\u6253\u5370\u91d1\u5b57\u5854 int sum = 5 ; // \u603b\u884c\u6570 // \u6253\u5370\u4e58\u6cd5\u53e3\u8bc0\u8868 for ( int i = 1 ; i <= sum ; i ++) { // \u6253\u5370\u7a7a\u683c for ( int j = 1 ; j <= sum - i ; j ++) { System . out . print ( \" \" ); } // \u6253\u5370\u661f\u661f for ( int k = 1 ; k <= i ; k ++) { System . out . print ( \"* \" ); } System . out . println (); } /* * * * * * * * * * * * * * * * */ 29\u3001\u65b9\u6cd5\u7684\u5b9a\u4e49 \u65b9\u6cd5method\uff0c\u51fd\u6570function \u65b9\u6cd5\u672c\u8d28\uff1a \u65b9\u4fbf\u4f7f\u7528\u8005\u91cd\u590d\u8c03\u7528\u7684\u4e00\u6bb5\u4ee3\u7801\u5757 \u524d\u63d0\uff1a \u65b9\u6cd5\u5728\u4e3b\u7c7b\u4e2d\u5b9a\u4e49\uff0c\u5e76\u4e14\u7531\u4e3b\u65b9\u6cd5\u76f4\u63a5\u8c03\u7528 public static \u8fd4\u56de\u503c\u7c7b\u578b \u65b9\u6cd5\u540d\u79f0 ([ \u53c2\u6570\u7c7b\u578b \u53c2\u6570\u540d ...]){ // \u65b9\u6cd5\u8981\u6267\u884c\u7684\u4ee3\u7801 [ return [ \u8fd4\u56de\u503c ];] } \u8fd4\u56de\u503c\u53ef\u4ee5\u4f7f\u7528\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b \u8fd4\u56de\u503c\u7c7b\u578b\u8981\u548c\u5b9a\u4e49\u8fd4\u56de\u503c\u7c7b\u578b\u4e00\u81f4 \u4e0d\u8fd4\u56de\u503c\u4f7f\u7528 void \uff0c \u53ef\u4ee5\u4f7f\u7528 return \u7ed3\u675f\u8c03\u7528 \u65b9\u6cd5\u540d\u547d\u540d\u89c4\u8303\uff1a \u7b2c\u4e00\u4e2a\u5355\u8bcd\u5c0f\u5199\uff0c\u540e\u7eed\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199 30\u3001\u65b9\u6cd5\u91cd\u8f7d \u5b9a\u4e49\uff1a\u65b9\u6cd5\u540d\u76f8\u540c\uff0c\u53c2\u6570\u7684\u7c7b\u578b\u6216\u4e2a\u6570\u4e0d\u540c\u7684\u65f6\u5019\u5c31\u79f0\u4e3a\u65b9\u6cd5\u91cd\u8f7d \u548c\u8fd4\u56de\u503c\u6ca1\u6709\u5173\u7cfb \u5f00\u53d1\u539f\u5219\uff1a \u65b9\u6cd5\u91cd\u8f7d\uff0c\u5efa\u8bae\u76f8\u540c\u7684\u8fd4\u56de\u503c eg: System . out . println ( 10 ); System . out . println ( 'A' ); System . out . println ( \"hello\" ); \u81ea\u5b9a\u4e49\u65b9\u6cd5\u91cd\u8f7d public static void main ( String [] args ) { int resultA = sum ( 10 , 10 ); int resultB = sum ( 10 , 10 , 10 ); double resultC = sum ( 10.1 , 10.2 ); System . out . println ( resultA ); // 20 System . out . println ( resultB ); // 30 System . out . println ( resultC ); // 20.299999999999997 } // \u5b9a\u4e49\u6c42\u548c\u65b9\u6cd5 public static int sum ( int a , int b ) { return a + b ; } public static int sum ( int a , int b , int c ) { return a + b + c ; } public static double sum ( double a , double b ) { return a + b ; } 31\u3001\u65b9\u6cd5\u9012\u5f52\u8c03\u7528 \u9012\u5f52\u8c03\u7528\uff1a\u4e00\u4e2a\u65b9\u6cd5\u81ea\u5df1\u8c03\u7528\u81ea\u5df1 \u6ce8\u610f\uff1a 1\u3001\u4e00\u5b9a\u8981\u8bbe\u7f6e\u9012\u5f52\u8c03\u7528\u7684\u7ed3\u675f\u6761\u4ef6 2\u3001\u6bcf\u6b21\u8c03\u7528\u4e00\u5b9a\u8981\u4fee\u6539\u4f20\u9012\u7684\u53c2\u6570\u6761\u4ef6 \u9012\u5f52\u4e0d\u5efa\u8bae\u7528\uff0c\u5904\u7406\u4e0d\u5f53\u4f1a\u9020\u6210\u5806\u6808\u6ea2\u51fa while\u5b9e\u73b01-10\u7d2f\u52a0 int x = 1 ; int sum = 0 ; while ( x <= 10 ) { // \u7ed3\u675f\u6761\u4ef6 sum += x ; x ++; // \u53c2\u6570\u6761\u4ef6 } System . out . println ( sum ); // 55 \u9012\u5f52\u5b9e\u73b01-10\u7d2f\u52a0 public static void main ( String [] args ) { int s = sum ( 10 ); System . out . println ( s ); // 55 } public static int sum ( int num ) { if ( num == 1 ) { // \u7ed3\u675f\u6761\u4ef6 return 1 ; } else { return num + sum ( num - 1 ); // \u53c2\u6570\u53d8\u5316 } }","title":"1 Java\u7f16\u7a0b\u5165\u95e8"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#1","text":"","title":"1\u3001\u7f16\u7a0b\u57fa\u7840\u81ea\u6d4b\u8003\u8bd5"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#2java","text":"\u5b8c\u5584\u7684\u751f\u6001\u7cfb\u7edf OAK\uff08\u6a61\u6811\uff09\u5e73\u53f0 HotJava\u6d4f\u89c8\u5668 sun: Stanford University NetWork Java \u6807\u51c6\u5f00\u53d1 J2SE\u3001JAVA SE Java \u5d4c\u5165\u5f0f\u5f00\u53d1 J2ME\u3001JAVA ME Java \u4f01\u5f00\u5f00\u53d1 J2EE\u3001JAVA EE","title":"2\u3001Java\u53d1\u5c55\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#3java","text":"1\u3001\u884c\u4e1a\u5185\u901a\u7528\u7684\u6280\u672f\u5b9e\u73b0\u6807\u51c6 2\u3001\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00 3\u3001\u63d0\u4f9b\u4e86\u5185\u5b58\u56de\u6536\u5904\u7406\u673a\u5236 4\u3001\u907f\u514d\u4e86\u590d\u6742\u7684\u6307\u9488\u95ee\u9898 5\u3001\u652f\u6301\u591a\u7ebf\u7a0b\u7f16\u7a0b 6\u3001\u9ad8\u6548\u7684\u7f51\u7edc\u5904\u7406\u80fd\u529b 7\u3001\u826f\u597d\u7684\u53ef\u79fb\u690d\u6027 8\u3001\u8bed\u8a00\u8db3\u591f\u7b80\u5355","title":"3\u3001Java\u8bed\u8a00\u7279\u70b9"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#4java","text":"JVM Java\u865a\u62df\u673a\uff08Java Virtual Machine\uff09 JVM \u8c03\u4f18\u95ee\u9898 \u7f16\u8bd1\u578b + \u89e3\u91ca\u578b Java\u6e90\u6587\u4ef6.java -> \u5b57\u8282\u7801.class -> \u673a\u5668\u7801","title":"4\u3001Java\u53ef\u79fb\u690d\u6027"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#5jdk","text":"\u751f\u4ea7\u73af\u5883\u4f7f\u7528JDK1.8 JDK Java Development Kit\uff08\u5305\u542bJRE\uff09 JRE Java Runtime Envrinment","title":"5\u3001JDK\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#6jdk","text":"\u73af\u5883\u53d8\u91cf\u914d\u7f6e Windows\uff1a Path \u7f16\u8bd1\u547d\u4ee4\uff1ajavac.exe \u89e3\u91ca\u547d\u4ee4\uff1ajava.exe","title":"6\u3001JDK\u5b89\u88c5\u4e0e\u914d\u7f6e"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#7","text":"\u6e90\u4ee3\u7801\uff1aHello.java public class Hello { // \u4e2d\u62ec\u53f7[] \u53ef\u5728\u53d8\u91cf\u540d\u524d\uff0c\u4e5f\u53ef\u4ee5\u5728\u540e public static void main ( String [] args ) { System . out . println ( \"Hello World!\" ); } } \u7f16\u8bd1\u6267\u884c $ ls Hello.java $ javac Hello.java # \u7f16\u8bd1\u6587\u4ef6\u4e3a\u5b57\u8282\u7801\u6587\u4ef6 $ ls Hello.class Hello.java $ java Hello # JVM\u6267\u884cjava\u7a0b\u5e8f Hello World! 1\u3001\u5b9a\u4e49\u7c7b\uff1a public class \u7c7b\u540d {} // \u7c7b\u540d\u5fc5\u987b\u4e0e\u6587\u4ef6\u540d\u4e00\u81f4 class \u7c7b\u540d {} // \u7c7b\u540d\u53ef\u4ee5\u4e0e\u6587\u4ef6\u540d\u4e0d\u4e00\u81f4 \u5728\u4e00\u4e2a.java\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u6709\u591a\u4e2aclass\u5b9a\u4e49 \u4e00\u4e2ajava\u6587\u4ef6\u4e2d\uff0c\u53ea\u80fd\u6709\u4e00\u4e2apublic class\uff08\u63a8\u8350\uff09 \u547d\u540d\u89c4\u8303\uff1a\u6bcf\u4e2a\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\u5927\u5199 2\u3001\u4e3b\u65b9\u6cd5 \u7a0b\u5e8f\u6267\u884c\u8d77\u70b9\uff0c\u4e00\u5b9a\u8981\u5b9a\u4e49\u5728\u7c7b\u4e2d \u4e3b\u65b9\u6cd5\u6240\u5728\u7c7b\uff0c\u79f0\u4e3a\u4e3b\u7c7b 3\u3001\u7cfb\u7edf\u8f93\u51fa System . out . println (); // \u8f93\u51fa\u6362\u884c line System . out . print (); // \u8f93\u51fa\u4e0d\u6362\u884c","title":"7\u3001\u7f16\u7a0b\u8d77\u6b65"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#8jshell","text":"JDK > 1.9 $ jshell jshell >","title":"8\u3001JShell\u5de5\u5177"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#9classpath","text":"\u9ed8\u8ba4\u4e3a\u5f53\u524d\u6240\u5728\u76ee\u5f55 export CLASSPATH = . # Linux set CLASSPATH = . # Windows \u53ef\u914d\u7f6e\u4e3a\u7cfb\u7edf\u53d8\u91cf PATH # \u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u8def\u5f84\u914d\u7f6e\uff0c\u5b9a\u4e49\u6240\u6709\u53ef\u6267\u884c\u7a0b\u5e8f\u8def\u5f84 CLASSPATH # JRE\u63d0\u4f9b\u7684\u52a0\u8f7d\u7c7b\u7684\u8def\u5f84","title":"9\u3001CLASSPATH\u73af\u5883\u5c5e\u6027"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#10","text":"\u7f16\u8bd1\u65f6\u4e0d\u5904\u7406\u6ce8\u91ca // \u5355\u884c\u6ce8\u91ca /* \u591a\u884c\u6ce8\u91ca */ /** \u6587\u6863\u6ce8\u91ca */","title":"10\u3001\u6ce8\u91ca"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#11","text":"\u6807\u8bc6\u7b26\uff1a \u5305\u542b\uff1a\u5b57\u6bcd\u3001\u6570\u5b57\u3001 _ \u3001$ \u5b57\u6bcd\u5f00\u5934 \u5173\u952e\u5b57 \u7279\u6b8a\u542b\u4e49\uff0c\u5982 class JDK 1.4 assert \u7528\u4e8e\u5f02\u5e38\u5904\u7406 JDK 1.5 enum \u7528\u4e8e\u679a\u4e3e\u5b9a\u4e49 \u672a\u4f7f\u7528\uff1agoto\u3001const \u7279\u6b8a\u542b\u4e49\uff1atrue\u3001false\u3001null","title":"11 \u6807\u8bc6\u7b26\u4e0e\u5173\u952e\u5b57"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#12java","text":"\u5206\u7c7b \u57fa\u672c\u6570\u636e\u7c7b\u578b\uff1a\u5177\u4f53\u7684\u6570\u5b57\u5355\u5143 \u6570\u503c\u578b -\u6574\u578b\uff1abyte-8\u3001short-16\u3001 int-32\u3001long-64 # \u9ed8\u8ba4\u503c 0 -\u6d6e\u70b9\u578b\uff1afloat-32\u3001double-64 # \u9ed8\u8ba4\u503c 0 \u5e03\u5c14\u578b\uff1aboolean # \u9ed8\u8ba4\u503c false \u5b57\u7b26\u578b\uff1achar-16 # \u9ed8\u8ba4\u503c \\u0000 \u5f15\u7528\u6570\u636e\u7c7b\u578b\uff1a\u6d89\u53ca\u5185\u5b58\u5173\u7cfb\u7684\u4f7f\u7528 \u6570\u7ec4\u3001\u7c7b\u3001\u63a5\u53e3 # \u9ed8\u8ba4\u503cnull \u53c2\u8003\u539f\u5219 \u63cf\u8ff0\u6570\u5b57\uff1a\u6574\u6570int\u3001\u5c0f\u6570double \u6570\u636e\u4f20\u8f93\u3001\u6587\u5b57\u7f16\u7801\u8f6c\u6362\uff1abyte\uff08\u4e8c\u8fdb\u5236\u64cd\u4f5c\uff09 \u5904\u7406\u4e2d\u6587\uff1achar \u63cf\u8ff0\u5185\u5b58\u6216\u6587\u4ef6\u5927\u5c0f\uff0c\u81ea\u589e\u4e3b\u952e\uff1a\u4f7f\u7528long","title":"12\u3001Java\u6570\u636e\u7c7b\u578b\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#13","text":"\u5b9a\u4e49 // int \u53d8\u91cf\u540d\u79f0 = \u5e38\u91cf; int x = 10 ; \u8303\u4f8b\uff1a\u8d85\u8fc7int\u8303\u56f4 \u6570\u636e\u6ea2\u51fa // int int\u53d8\u91cf = int\u6570\u503c int max = Integer . MAX_VALUE ; // \u83b7\u53d6int\u6700\u5927\u503c int min = Integer . MIN_VALUE ; // \u83b7\u53d6int\u6700\u5c0f\u503c System . out . println ( \"min: \" + min ); System . out . println ( \"max: \" + max ); // int\u53d8\u91cf + int\u5e38\u91cf = int\u7ed3\u679c System . out . println ( \"max + 1: \" + ( max + 1 )); System . out . println ( \"=================\" ); // long long\u53d8\u91cf = int\u6570\u503c long long_max = Integer . MAX_VALUE ; long long_min = Integer . MIN_VALUE ; System . out . println ( \"long_min: \" + long_min ); System . out . println ( \"long_max: \" + long_max ); // long\u53d8\u91cf + int\u5e38\u91cf = long\u7ed3\u679c System . out . println ( \"long_min + 1: \" + ( long_max + 1 )); /* min: -2147483648 max: 2147483647VAl max + 1: -2147483648 ================= long_min: -2147483648 long_max: 2147483647 long_min + 1: 2147483648 */ \u6570\u503c\u5e38\u91cf\u9ed8\u8ba4\u662fint \u6570\u503c\u5e38\u91cf\u540e\u9762\u52a0L\uff08\u63a8\u8350\uff09\u6216l\u8f6c\u6362\u4e3along\u578b long l = 123L ; \u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\uff1a\u5c0f\u7c7b\u578b -> \u5927\u7c7b\u578b \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff1a\u5927\u7c7b\u578b -> \u5c0f\u7c7b\u578b long l = 123 ; // \u81ea\u52a8\u8f6c\u6362 int i = ( int ) 123 ; // \u5f3a\u5236\u8f6c\u6362\uff08\u4e0d\u5efa\u8bae\uff09 byte b = 200 ; // \u9519\u8bef: \u4e0d\u517c\u5bb9\u7684\u7c7b\u578b: \u4eceint\u8f6c\u6362\u5230byte\u53ef\u80fd\u4f1a\u6709\u635f\u5931 \u5e38\u91cf\u4f1a\u81ea\u52a8\u8f6c\u6362 \u53d8\u91cf\u9700\u8981\u5f3a\u5236\u8f6c\u6362","title":"13\u3001\u6574\u578b\u6570\u636e\u7c7b\u578b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#14","text":"\u5c0f\u6570\u5e38\u91cf\u5bf9\u5e94double // \u5b9a\u4e49double double x = 10.2 ; // double + int = double // \u5b9a\u4e49float float x = ( float ) 10.2 ; // \u5f3a\u5236\u8f6c\u6362 float y = 10.2F ; // int / int => int // 10/4=2 // (double)int / int => double // (double)10/4 = 2.5","title":"14\u3001\u6d6e\u70b9\u578b\u6570\u636e"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#15","text":"\u5355\u5f15\u53f7''\u63cf\u8ff0 1\u3001\u5b9a\u4e49\u5b57\u7b26\u53d8\u91cf // \u5b9a\u4e49\u5b57\u7b26\u53d8\u91cf char c = 'B' ; // \u83b7\u53d6\u5b57\u7b26\u7f16\u7801 int num = c ; \u4efb\u4f55\u7f16\u7a0b\u8bed\u8a00\u7684\u5b57\u7b26\u90fd\u53ef\u4ee5\u4e0eint\u8fdb\u884c\u8f6c\u6362 \u5b57\u7b26\u96c6 \u5b57\u7b26\u8303\u56f4 \u6570\u503c \u5927\u5199\u5b57\u6bcd 'A'-'Z' 65-90 \u5c0f\u5199\u5b57\u6bcd 'a'-'z' 97-122 \u6570\u5b57\u8303\u56f4 '0'-'9' 48-57 2\u3001\u5c0f\u5199\u8f6c\u5927\u5199\u793a\u4f8b char a = 'a' ; int num = a ; num = num - 32 ; System . out . println (( char ) num ); // A 3\u3001\u4fdd\u5b58\u4e2d\u6587\u6570\u636e java\u4f7f\u7528Unicode\u5341\u516d\u8fdb\u5236\u7684\u7f16\u7801\uff0c\u53ef\u4ee5\u5305\u542b\u4efb\u610f\u5b57\u7b26 char a = '\u4e2d' ; int num = a ; System . out . println ( num ); // 20013","title":"15\u3001\u5b57\u7b26\u578b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#16","text":"// \u5b9a\u4e49\u5e03\u5c14\u578b boolean flag = true ; // \u6267\u884c\u5224\u65ad\u903b\u8f91 if ( flag ){ System . out . println ( \"true\" ); } else { System . out . println ( \"false\" ); } // true \u90e8\u5206\u7f16\u7a0b\u8bed\u8a00\u4e0d\u63d0\u4f9b\u5e03\u5c14\u578b\uff0c\u4f7f\u75280\u66ff\u4ee3false\uff0c\u5176\u4ed6\u503c\u66ff\u4ee3true java\u4e2d\u5e03\u5c14\u578b\u7684\u53d6\u503c\u4e3a\uff1atrue\uff0cfalse","title":"16\u3001\u5e03\u5c14\u578b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#17string","text":"\u4efb\u4f55\u7f16\u7a0b\u8bed\u8a00\u91cc\u90fd\u6ca1\u6709\u63d0\u4f9b\u6240\u8c13\u5b57\u7b26\u4e32\u8fd9\u79cd\u57fa\u672c\u6570\u636e \u53cc\u5f15\u53f7 \"\" \u63cf\u8ff0\u5b57\u7b26\u4e32 String str = \"Hello\" ; // \u5b57\u7b26\u4e32\u63cf\u8ff0 str = str + \" World\" ; // \u5b57\u7b26\u4e32\u8fde\u63a5 str += \"!\" ; System . out . println ( str ); // Hello World! Java\u4e2d\uff1a\u6570\u636e\u8303\u56f4\u5927\u7c7b\u578b + \u6570\u636e\u8303\u56f4\u5c0f\u7c7b\u578b\uff08\u81ea\u52a8\u8f6c\u4e3a\u8303\u56f4\u5927\u7684\u7c7b\u578b\uff09 \u5982\u679c\u6709\u5b57\u7b26\u4e32String\uff0c\u6240\u6709\u6570\u636e\u7c7b\u578b\u90fd\u4f1a\u8f6c\u4e3aString\u7c7b\u578b System . out . println ( \"\u6570\u503c\u8ba1\u7b97\u7ed3\u679c\uff1a\" + ( 1 + 1 )); // \u6570\u503c\u8ba1\u7b97\u7ed3\u679c\uff1a2 System . out . println ( \"\u5b57\u7b26\u62fc\u63a5\u7ed3\u679c\uff1a\" + 1 + 1 ); // \u5b57\u7b26\u62fc\u63a5\u7ed3\u679c\uff1a11 \u8f6c\u4e49\u5b57\u7b26, \u591a\u7528\u4e8e\u6253\u5370\u8f93\u51fa Tab \\ t \u6362\u884c \\ n \u5f15\u53f7 \\\" \u5355\u5f15\u53f7 \\' \u659c\u7ebf \\\\","title":"17\u3001String\u5b57\u7b26\u4e32"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#18","text":"\u6240\u6709\u7684\u7a0b\u5e8f\u5f00\u53d1\uff0c\u90fd\u662f\u4e00\u79cd\u6570\u5b57\u7684\u5904\u7406\u6e38\u620f \u5bf9\u4e8e\u6570\u5b57\u5904\u7406\u7684\u64cd\u4f5c\u6a21\u5f0f\u5c31\u79f0\u4e3a\u8fd0\u7b97\u7b26 \u7a0b\u5e8f\u4f1a\u63d0\u4f9b\u57fa\u7840\u8fd0\u7b97\u7b26\uff0c\u5b58\u5728\u4f18\u5148\u7ea7\uff08\u62ec\u53f7\u4f18\u5148\u7ea7\u6700\u9ad8\uff09","title":"18\u3001\u8fd0\u7b97\u7b26\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#19","text":"\u652f\u6301\u56db\u5219\u8fd0\u7b97 \u7b80\u5316\u8fd0\u7b97\u7b26 += \u3001 -= \u3001 *= \u3001 /= \u3001 %= ++ \u53d8\u91cf\u3001 --\u53d8\u91cf\uff1a\u5148\u8fdb\u884c\u53d8\u91cf\u81ea\u589e\u81ea\u51cf\uff0c\u800c\u540e\u518d\u8fdb\u884c\u6570\u5b57\u8ba1\u7b97 \u53d8\u91cf ++ \u3001\u53d8\u91cf --\uff1a\u5148\u4f7f\u7528\u53d8\u91cf\u8fdb\u884c\u8ba1\u7b97\uff0c\u518d\u8fdb\u884c\u53d8\u91cf\u81ea\u589e\u81ea\u51cf \u5185\u5b58\u8f83\u5c11\u7684\u65f6\u5019\u4f7f\u7528\uff0c\u73b0\u5728\u4e0d\u63a8\u8350\u4f7f\u7528 int x = 10 ; int y = 20 ; // (++x) + (y--) => 11 + 20 = 31; x=11; y=19 int result = ++ x + y --; System . out . println ( \"result: \" + result ); System . out . println ( \"x: \" + x ); System . out . println ( \"y: \" + y ); // result: 31 // x: 11 // y: 19","title":"19\u3001\u6570\u5b66\u8fd0\u7b97\u7b26"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#20","text":"> \u3001 < >= \u3001 <= == \u6bd4\u8f83 // = \u8d4b\u503c \u6240\u6709\u7684\u5173\u7cfb\u5224\u65ad\u8fd4\u56de\u503c\u90fd\u662fboolean \u6570\u636e\u7c7b\u578b\u4e4b\u95f4\u63d0\u4f9b\u81ea\u52a8\u8f6c\u578b\u652f\u6301\uff0c\u5b57\u7b26\u5224\u65ad\u4f1a\u81ea\u52a8\u8f6c\u4e3aint char c = '\u4e2d' ; boolean flag = c > 1 ; System . out . println ( flag ); // true","title":"20\u3001\u5173\u7cfb\u8fd0\u7b97\u7b26"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#21","text":"\u4e09\u76ee\u8fd0\u7b97\u7b26 \u5173\u7cfb\u8fd0\u7b97 \uff1f \u6ee1\u8db3\u65f6\u7684\u5185\u5bb9 : \u4e0d\u6ee1\u8db3\u65f6\u7684\u5185\u5bb9 \u5224\u65ad\u5b57\u7b26\u5927\u5c0f, \u5d4c\u5957\u5c42\u6570\u4e0d\u5b9c\u8fc7\u591a int x = 10 ; int y = 20 ; // int max = x > y ? x : y; int max ; if ( x > y ){ max = x ; } else { max = y ; } System . out . println ( max ); // 20","title":"21\u3001\u903b\u8f91\u8fd0\u7b97\u7b26"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#22","text":"\u76f4\u63a5\u8fdb\u884c\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u8ba1\u7b97\u5904\u7406 \u4e0e & \u6216 | \u5f02\u6216 ^ \u53cd\u7801 ~ \u79fb\u4f4d << >> \u5341\u8fdb\u5236\u4e0e\u4e8c\u8fdb\u5236\u8f6c\u6362 \u6570\u5b57\u96642\u53d6\u4f59 # \u5341\u8fdb\u5236\u8f6c\u4e8c\u8fdb\u5236 13 / 2 = 6 ...1 6 / 2 = 3 ...0 3 / 2 = 1 ...1 1 / 2 = 0 ...1 13 = > 1101 # \u5c0610\u4ece\u5341\u8fdb\u5236\u8f6c\u4e8c\u8fdb\u5236 $ echo \"obase=2;10\" | bc # \u4e8c\u8fdb\u5236\u8f6c\u4e3a\u5341\u8fdb\u5236 8 4 2 1 1 1 0 1 = > 8 + 4 + 1 = 13 \u4f4d\u8fd0\u7b97 13 1101 7 0111 & 0101 => 5 | 1111 => 15 ^ 1010 => 10 \u79fb\u4f4d\u8ba1\u7b97 // 2\u76843\u6b21\u65b9 8 2 << 2 = 8 2 -> 0010 -> 1000 -> 8 \u533a\u522b & && | || 1\u3001& | \u4f4d\u8fd0\u7b97\u548c\u903b\u8f91\u8fd0\u7b97 \u903b\u8f91\u5224\u65ad\u7684\u65f6\u5019\uff0c\u6240\u6709\u5224\u65ad\u90fd\u8981\u6267\u884c \u4f4d\u8fd0\u7b97\u7684\u65f6\u5019\u53ea\u662f\u5bf9\u5f53\u524d\u6570\u636e\u8fdb\u884c\u4e0e\u548c\u6216\u5904\u7406 2\u3001&& || \u77ed\u8def\u8fd0\u7b97 && \u5982\u679c\u524d\u9762\u6761\u4ef6\u8fd4\u56defalse\uff0c\u540e\u7eed\u6761\u4ef6\u4e0d\u518d\u6267\u884c || \u5982\u679c\u524d\u9762\u6761\u4ef6\u8fd4\u56detrue\uff0c\u540e\u7eed\u6761\u4ef6\u4e0d\u518d\u6267\u884c","title":"22\u3001\u4f4d\u8fd0\u7b97"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#23if","text":"\u987a\u5e8f\u7ed3\u6784\uff0c\u5206\u652f\u7ed3\u6784\uff0c\u5faa\u73af\u7ed3\u6784 if\u8bed\u53e5 \u9488\u5bf9\u5173\u7cfb\u8868\u8fbe\u5f0f\u8fdb\u884c\u5224\u65ad\u5904\u7406\u7684\u5206\u652f\u64cd\u4f5c if ( boolean ){ } [ else { // \u53ef\u9009 }]","title":"23\u3001IF\u5206\u652f\u7ed3\u6784"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#24switch","text":"\u53ef\u4ee5\u5224\u65ad int \u3001 char \u3001\u679a\u4e3e\u3001 String \uff08 JDK >= 1 . 7 \uff09 \u5982\u679c\u6ca1\u6709\u5728case\u540e\u9762\u8ffd\u52a0break\uff0c\u90a3\u4e48\u4f1a\u4ececase\u6761\u4ef6\u5f00\u59cb\u6267\u884c\u5230\u6700\u540e switch ( \u6570\u636e ) { case \u6570\u503c : { [ break ;] } case \u6570\u503c : { [ break ;] } default : { } } \u793a\u4f8b String s = \"Hello\" ; switch ( s ){ case \"hello\" : { System . out . println ( \"hello\" ); break ; } case \"Hello\" : { System . out . println ( \"Hello\" ); break ; } default : { System . out . println ( \"default\" ); } } // Hello","title":"24\u3001SWITCH\u5f00\u5173\u8bed\u53e5"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#25while","text":"\u5faa\u73af\u7ed3\u6784\uff1a\u67d0\u4e00\u6bb5\u4ee3\u7801\u88ab\u91cd\u590d\u6267\u884c \u5982\u679c\u4e0d\u4fee\u6539\u5faa\u73af\u6761\u4ef6\uff0c\u4f1a\u9020\u6210\u6b7b\u5faa\u73af // \u81f3\u5c11\u6267\u884c 0 \u6b21 \u5e38\u7528 while ( boolean ) { } // \u81f3\u5c11\u6267\u884c 1 \u6b21 do { } while ( boolean ); // \u6ce8\u610f\u8fd9\u91cc\u7684\u5206\u53f7","title":"25\u3001while\u5faa\u73af"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#26for","text":"for ( \u5b9a\u4e49\u5faa\u73af\u521d\u59cb\u503c ; \u5faa\u73af\u5224\u65ad ; \u4fee\u6539\u5faa\u73af\u53c2\u6570 ) { } // eg: int sum = 0 ; for ( int i = 1 ; i < 10 ; i ++) { sum += i ; } System . out . println ( sum ); // 45 while \u548c for\u5faa\u73af\u9009\u62e9 1\u3001\u660e\u786e\u5faa\u73af\u6b21\u6570\uff0c\u4f18\u5148\u9009\u62e9for\u5faa\u73af 2\u3001\u4e0d\u77e5\u9053\u5faa\u73af\u6b21\u6570\uff0c\u4f46\u662f\u77e5\u9053\u5faa\u73af\u7ed3\u675f\u6761\u4ef6\uff0c\u9009\u62e9while\u5faa\u73af","title":"26\u3001for\u5faa\u73af"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#27","text":"break \u9000\u51fa\u6574\u4e2a\u5faa\u73af\u7ed3\u6784 continue \u7ed3\u675f\u5f53\u524d\u5faa\u73af\uff0c\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u6b21\u5faa\u73af\uff0c\u53ef\u4ee5\u5b9e\u73b0\u90e8\u5206goto\u529f\u80fd C\u8bed\u8a00\u4e2d\u7684goto \u4e0d\u5efa\u8bae\u4f7f\u7528 // \u4f7f\u7528continue \u8df3\u51fa\u4e24\u5c42\u5faa\u73af \u4e0d\u5efa\u8bae\u4f7f\u7528 Point: for ( int i = 1 ; i < 3 ; i ++) { for ( int j = 1 ; j < 3 ; j ++) { if ( i == j ) { continue Point ; } System . out . println ( i + \" + \" + j + \" = \" + ( i + j )); } } /* \u4e0d\u4f7f\u7528 continue Point; 1 + 1 = 2 1 + 2 = 3 2 + 1 = 3 2 + 2 = 4 \u4f7f\u7528 continue Point; 2 + 1 = 3 */","title":"27\u3001\u5faa\u73af\u63a7\u5236"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#28","text":"\u5faa\u73af\u5d4c\u5957\uff1a\u5faa\u73af\u8bed\u53e5\u4e2d\u5d4c\u5957\u5176\u4ed6\u5faa\u73af\u8bed\u53e5 \u5d4c\u5957\u5c42\u6b21\u8d8a\u591a\uff0c\u590d\u6742\u5ea6\u8d8a\u9ad8 \u5b9e\u4f8b1\u3001\u6253\u5370\u4e58\u6cd5\u53e3\u8bc0\u8868 for ( int i = 1 ; i <= 9 ; i ++) { for ( int j = 1 ; j <= i ; j ++) { System . out . print ( j + \" * \" + i + \" = \" + ( i * j ) + \"\\t\" ); } System . out . println (); } /* 1 * 1 = 1 1 * 2 = 2 2 * 2 = 4 1 * 3 = 3 2 * 3 = 6 3 * 3 = 9 ... */ \u5b9e\u4f8b2\u3001\u6253\u5370\u91d1\u5b57\u5854 int sum = 5 ; // \u603b\u884c\u6570 // \u6253\u5370\u4e58\u6cd5\u53e3\u8bc0\u8868 for ( int i = 1 ; i <= sum ; i ++) { // \u6253\u5370\u7a7a\u683c for ( int j = 1 ; j <= sum - i ; j ++) { System . out . print ( \" \" ); } // \u6253\u5370\u661f\u661f for ( int k = 1 ; k <= i ; k ++) { System . out . print ( \"* \" ); } System . out . println (); } /* * * * * * * * * * * * * * * * */","title":"28\u3001\u5faa\u73af\u5d4c\u5957"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#29","text":"\u65b9\u6cd5method\uff0c\u51fd\u6570function \u65b9\u6cd5\u672c\u8d28\uff1a \u65b9\u4fbf\u4f7f\u7528\u8005\u91cd\u590d\u8c03\u7528\u7684\u4e00\u6bb5\u4ee3\u7801\u5757 \u524d\u63d0\uff1a \u65b9\u6cd5\u5728\u4e3b\u7c7b\u4e2d\u5b9a\u4e49\uff0c\u5e76\u4e14\u7531\u4e3b\u65b9\u6cd5\u76f4\u63a5\u8c03\u7528 public static \u8fd4\u56de\u503c\u7c7b\u578b \u65b9\u6cd5\u540d\u79f0 ([ \u53c2\u6570\u7c7b\u578b \u53c2\u6570\u540d ...]){ // \u65b9\u6cd5\u8981\u6267\u884c\u7684\u4ee3\u7801 [ return [ \u8fd4\u56de\u503c ];] } \u8fd4\u56de\u503c\u53ef\u4ee5\u4f7f\u7528\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b \u8fd4\u56de\u503c\u7c7b\u578b\u8981\u548c\u5b9a\u4e49\u8fd4\u56de\u503c\u7c7b\u578b\u4e00\u81f4 \u4e0d\u8fd4\u56de\u503c\u4f7f\u7528 void \uff0c \u53ef\u4ee5\u4f7f\u7528 return \u7ed3\u675f\u8c03\u7528 \u65b9\u6cd5\u540d\u547d\u540d\u89c4\u8303\uff1a \u7b2c\u4e00\u4e2a\u5355\u8bcd\u5c0f\u5199\uff0c\u540e\u7eed\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199","title":"29\u3001\u65b9\u6cd5\u7684\u5b9a\u4e49"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#30","text":"\u5b9a\u4e49\uff1a\u65b9\u6cd5\u540d\u76f8\u540c\uff0c\u53c2\u6570\u7684\u7c7b\u578b\u6216\u4e2a\u6570\u4e0d\u540c\u7684\u65f6\u5019\u5c31\u79f0\u4e3a\u65b9\u6cd5\u91cd\u8f7d \u548c\u8fd4\u56de\u503c\u6ca1\u6709\u5173\u7cfb \u5f00\u53d1\u539f\u5219\uff1a \u65b9\u6cd5\u91cd\u8f7d\uff0c\u5efa\u8bae\u76f8\u540c\u7684\u8fd4\u56de\u503c eg: System . out . println ( 10 ); System . out . println ( 'A' ); System . out . println ( \"hello\" ); \u81ea\u5b9a\u4e49\u65b9\u6cd5\u91cd\u8f7d public static void main ( String [] args ) { int resultA = sum ( 10 , 10 ); int resultB = sum ( 10 , 10 , 10 ); double resultC = sum ( 10.1 , 10.2 ); System . out . println ( resultA ); // 20 System . out . println ( resultB ); // 30 System . out . println ( resultC ); // 20.299999999999997 } // \u5b9a\u4e49\u6c42\u548c\u65b9\u6cd5 public static int sum ( int a , int b ) { return a + b ; } public static int sum ( int a , int b , int c ) { return a + b + c ; } public static double sum ( double a , double b ) { return a + b ; }","title":"30\u3001\u65b9\u6cd5\u91cd\u8f7d"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/1-Java\u7f16\u7a0b\u5165\u95e8/#31","text":"\u9012\u5f52\u8c03\u7528\uff1a\u4e00\u4e2a\u65b9\u6cd5\u81ea\u5df1\u8c03\u7528\u81ea\u5df1 \u6ce8\u610f\uff1a 1\u3001\u4e00\u5b9a\u8981\u8bbe\u7f6e\u9012\u5f52\u8c03\u7528\u7684\u7ed3\u675f\u6761\u4ef6 2\u3001\u6bcf\u6b21\u8c03\u7528\u4e00\u5b9a\u8981\u4fee\u6539\u4f20\u9012\u7684\u53c2\u6570\u6761\u4ef6 \u9012\u5f52\u4e0d\u5efa\u8bae\u7528\uff0c\u5904\u7406\u4e0d\u5f53\u4f1a\u9020\u6210\u5806\u6808\u6ea2\u51fa while\u5b9e\u73b01-10\u7d2f\u52a0 int x = 1 ; int sum = 0 ; while ( x <= 10 ) { // \u7ed3\u675f\u6761\u4ef6 sum += x ; x ++; // \u53c2\u6570\u6761\u4ef6 } System . out . println ( sum ); // 55 \u9012\u5f52\u5b9e\u73b01-10\u7d2f\u52a0 public static void main ( String [] args ) { int s = sum ( 10 ); System . out . println ( s ); // 55 } public static int sum ( int num ) { if ( num == 1 ) { // \u7ed3\u675f\u6761\u4ef6 return 1 ; } else { return num + sum ( num - 1 ); // \u53c2\u6570\u53d8\u5316 } }","title":"31\u3001\u65b9\u6cd5\u9012\u5f52\u8c03\u7528"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5185\u90e8\u7c7b/","text":"\u7b2c28 \u7ae0 \uff1a \u5185\u90e8\u7c7b 126 \u5185\u90e8\u7c7b\u57fa\u672c\u6982\u5ff5 \u5185\u90e8\u7c7b\uff1a\u7c7b\u7684\u5185\u90e8\u5b9a\u4e49\u5176\u4ed6\u7684\u7c7b // \u5916\u90e8\u7c7b class Outer { private String message = \"\u79c1\u6709\u5c5e\u6027\" ; // \u666e\u901a\u65b9\u6cd5 public void fun (){ // \u5b9e\u4f8b\u5316\u5185\u90e8\u7c7b\u5e76\u8c03\u7528\u5185\u90e8\u7c7b\u65b9\u6cd5 Inner in = new Inner (); in . printInfo (); } // \u5185\u90e8\u7c7b class Inner { public void printInfo (){ // \u5185\u90e8\u7c7b\u4f7f\u7528\u5916\u90e8\u7c7b\u4e2d\u7684\u5c5e\u6027 System . out . println ( Outer . this . message ); } } } class Demo { public static void main ( String [] args ) { // \u5b9e\u4f8b\u5316\u5916\u90e8\u7c7b Outer outer = new Outer (); outer . fun (); // \u79c1\u6709\u5c5e\u6027 } } \u4e0d\u4f7f\u7528\u5185\u90e8\u7c7b\u5b9e\u73b0\u4e0a\u9762\u4ee3\u7801 // \u5916\u90e8\u7c7b class Outer { private String message = \"\u79c1\u6709\u5c5e\u6027\" ; // \u666e\u901a\u65b9\u6cd5 public void fun (){ // \u5b9e\u4f8b\u5316\u5185\u90e8\u7c7b\u5e76\u8c03\u7528\u5185\u90e8\u7c7b\u65b9\u6cd5 Inner inner = new Inner ( this ); inner . printInfo (); } public String getMessage (){ return this . message ; } } // \u5185\u90e8\u7c7b class Inner { private Outer outer ; public Inner ( Outer outer ){ this . outer = outer ; } public void printInfo (){ // \u5185\u90e8\u7c7b\u4f7f\u7528\u5916\u90e8\u7c7b\u4e2d\u7684\u5c5e\u6027 System . out . println ( this . outer . getMessage ()); } } class Demo { public static void main ( String [] args ) { // \u5b9e\u4f8b\u5316\u5916\u90e8\u7c7b Outer outer = new Outer (); outer . fun (); // \u79c1\u6709\u5c5e\u6027 } } \u7f3a\u70b9\uff1a\u4ece\u6574\u4f53\u4ee3\u7801\u7ed3\u6784\u4e0a\u6765\u8bb2\uff0c\u5185\u90e8\u7c7b\u7684\u7ed3\u6784\u5e76\u4e0d\u5408\u7406\uff0c\u7834\u574f\u4e86\u7c7b\u7ed3\u6784 \u4f18\u52bf\uff1a\u8f7b\u677e\u8bbf\u95ee\u5916\u90e8\u7c7b\u4e2d\u7684\u79c1\u6709\u5c5e\u6027 127 \u5185\u90e8\u7c7b\u76f8\u5173\u8bf4\u660e \u5185\u90e8\u7c7b\u5b9e\u4f8b\u5316\u683c\u5f0f\uff1a \u5916\u90e8\u7c7b . \u5185\u90e8\u7c7b \u5185\u90e8\u7c7b\u5bf9\u8c61 = new \u5916\u90e8\u7c7b (). new \u5185\u90e8\u7c7b (); \u4e0a\u9762\u5b9e\u4f8b\u7f16\u8bd1\u540e\u51fa\u73b0\u6587\u4ef6 Demo . java Demo . class Outer . class Outer $ Inner . class \u5176\u4e2d\u7684 $ \u6362\u5230\u7a0b\u5e8f\u4e4b\u4e2d\u5c31\u662f . \u5185\u90e8\u7c7b\u53ef\u4ee5\u4f7f\u7528private\u79c1\u6709\u5316 \u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u4e2d\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u5185\u90e8\u7ed3\u6784 \u793a\u4f8b\uff1a\u5185\u90e8\u63a5\u53e3 interface Ichannel { public void send ( IMessage message ); interface IMessage { public String getContent (); } } class ChannelImpl implements Ichannel { public void send ( IMessage message ){ System . out . println ( message . getContent ()); } class MessageImpl implements IMessage { public String getContent (){ return \"\u5185\u90e8\u6d88\u606f\" ; } } } class Demo { public static void main ( String [] args ) { Ichannel channel = new ChannelImpl (); channel . send ((( ChannelImpl ) channel ). new MessageImpl ()); // \u5185\u90e8\u6d88\u606f } } \u793a\u4f8b\uff1a\u5185\u90e8\u62bd\u8c61\u7c7b // \u5b9a\u4e49\u63a5\u53e3 interface Ichannel { public void send (); // \u5185\u90e8\u62bd\u8c61\u7c7b abstract class AbstractMessage { public abstract String getContent (); } } class ChannelImpl implements Ichannel { public void send (){ AbstractMessage message = new MessageImpl (); System . out . println ( message . getContent ()); } class MessageImpl extends AbstractMessage { public String getContent (){ return \"\u5185\u90e8\u6d88\u606f\" ; } } } class Demo { public static void main ( String [] args ) { Ichannel channel = new ChannelImpl (); channel . send (); // \u5185\u90e8\u6d88\u606f } } \u793a\u4f8b\uff1a\u5185\u90e8\u7c7b\u5b9e\u73b0\u63a5\u53e3 // \u5b9a\u4e49\u63a5\u53e3 interface Ichannel { public void send (); class ChannelImpl implements Ichannel { public void send (){ System . out . println ( \"hello\" ); } } public static Ichannel getInstance (){ return new ChannelImpl (); } } class Demo { public static void main ( String [] args ) { Ichannel channel = Ichannel . getInstance (); channel . send (); // hello } } 128 static\u5b9a\u4e49\u5185\u90e8\u7c7b \u5982\u679c\u5185\u90e8\u7c7b\u4f7f\u7528\u4e86static\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5185\u90e8\u7c7b\u5c31\u53d8\u6210\u4e86\u5916\u90e8\u7c7b static\u5185\u90e8\u7c7b\u5b9e\u4f8b\u5316\u683c\u5f0f\uff1a \u5916\u90e8\u7c7b . \u5185\u90e8\u7c7b \u5185\u90e8\u7c7b\u5bf9\u8c61 = new \u5916\u90e8\u7c7b . \u5185\u90e8\u7c7b (); class Outer { private static final String MESSAGE = \"\u9759\u6001\u6d88\u606f\" ; static class Inner { public void print (){ System . out . println ( Outer . MESSAGE ); } } } class Demo { public static void main ( String [] args ) { Outer . Inner Inner = new Outer . Inner (); Inner . print (); // \u9759\u6001\u6d88\u606f } } static\u5b9a\u4e49\u4e00\u7ec4\u76f8\u5173\u5185\u90e8\u63a5\u53e3 interface IMessageWrap { static interface IMessage { public String getContent (); } static interface IChannel { public boolean connect (); } public static void send ( IMessage message , IChannel channel ){ if ( channel . connect ()){ System . out . println ( message . getContent ()); } else { System . out . println ( \"\u65e0\u6cd5\u8fde\u63a5\u901a\u9053\" ); } } } class MessageImpl implements IMessageWrap . IMessage { public String getContent (){ return \"\u6d88\u606f\u5185\u5bb9\" ; } } class ChannelImpl implements IMessageWrap . IChannel { public boolean connect (){ return true ; } } class Demo { public static void main ( String [] args ) { IMessageWrap . send ( new MessageImpl (), new ChannelImpl ()) ; // \u6d88\u606f\u5185\u5bb9 } } 129 \u65b9\u6cd5\u4e2d\u5b9a\u4e49\u5185\u90e8\u7c7b \u5185\u90e8\u7c7b\u53ef\u4ee5\u5728\u4efb\u610f\u7ed3\u6784\u4e2d\u5b9a\u4e49 \u5305\u62ec\uff1a\u7c7b\uff0c\u65b9\u6cd5\uff0c\u4ee3\u7801\u5757 \u65b9\u6cd5\u4e2d\u5b9a\u4e49\u5185\u90e8\u7c7b JDK >= 1.8 \u5185\u90e8\u7c7b\u76f4\u63a5\u8bbf\u95ee\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570 JDK < 1.8 \u9700\u8981\u52a0\u5173\u952e\u5b57final public void fun ( final long time ) class Outer { private String msg = \"\u79c1\u6709\u6d88\u606f\" ; public void fun ( long time ){ // \u65b9\u6cd5\u4e2d\u5b9a\u4e49\u5185\u90e8\u7c7b class Inner { public void print (){ System . out . println ( Outer . this . msg ); System . out . println ( time ); } } // \u65b9\u6cd5\u4e2d\u76f4\u63a5\u5b9e\u4f8b\u5316\u5185\u90e8\u7c7b new Inner (). print (); } } class Demo { public static void main ( String [] args ) { new Outer (). fun ( 1234567890L ); // \u79c1\u6709\u6d88\u606f // 1234567890 } } 130 \u533f\u540d\u5185\u90e8\u7c7b \u533f\u540d\u5185\u90e8\u7c7b\u662f\u4e00\u79cd\u7b80\u5316\u7684\u5185\u90e8\u7c7b\u5904\u7406\u5f62\u5f0f \u4e3b\u8981\u5728\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u7684\u5b50\u7c7b\u4e0a\u4f7f\u7528 interface IMessage { public void send (); } class MessageImpl implements IMessage { public void send (){ System . out . println ( \"Hello Java\" ); } } class Demo { public static void main ( String [] args ) { IMessage message = new MessageImpl (); message . send (); // Hello Java } } \u5982\u679c MessageImpl \u5b9e\u73b0\u53ea\u4f7f\u7528\u4e00\u6b21\uff0c\u53ef\u4ee5\u4f7f\u7528\u533f\u540d\u5185\u90e8\u7c7b interface IMessage { public void send (); } class Demo { public static void main ( String [] args ) { IMessage message = new IMessage () { public void send (){ System . out . println ( \"Hello Java\" ); } }; message . send (); // Hello Java } } \u63a5\u53e3\u4e2d\u5b9a\u4e49\u533f\u540d\u5185\u90e8\u7c7b interface IMessage { public void send (); public static IMessage getInstance (){ return new IMessage () { public void send () { System . out . println ( \"Hello Java\" ); } }; } } class Demo { public static void main ( String [] args ) { IMessage . getInstance (). send (); // Hello Java } } \u7b2c29 \u7ae0 \uff1a \u51fd\u6570\u5f0f\u7f16\u7a0b 131 Lambda\u8868\u8fbe\u5f0f JDK >= 1.8 \u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\uff1a Scala https://www.scala-lang.org/ haskell https://www.haskell.org/ interface IMessage { public void send (); } class Demo { public static void main ( String [] args ) { IMessage message = new IMessage () { public void send (){ System . out . println ( \"Hello Java\" ); } }; message . send (); // Hello Java } } \u4f7f\u7528Lambda @FunctionalInterface interface IMessage { public void send (); } class Demo { public static void main ( String [] args ) { IMessage message = () -> { System . out . println ( \"Hello Java\" ); }; message . send (); // Hello Java } } \u4f7f\u7528Lambda \u8868\u8fbe\u5f0f\u7684\u8981\u6c42: SAM (Single Abstract Method)\u53ea\u6709\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5 \u88ab\u79f0\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3, \u91cc\u8fb9\u7684\u65b9\u6cd5\u53ea\u80fd\u6709\u4e00\u4e2a Lambda\u8868\u8fbe\u5f0f\u7684\u683c\u5f0f\uff1a \u65b9\u6cd5\u6ca1\u6709\u53c2\u6570\uff1a ()->{}; \u65b9\u6cd5\u6709\u53c2\u6570\uff1a(\u53c2\u6570, \u53c2\u6570)->{}; \u5982\u679c\u53ea\u6709\u4e00\u884c\u8bed\u53e5\u8fd4\u56de\uff1a(\u53c2\u6570, \u53c2\u6570)->\u8bed\u53e5; // \u51fd\u6570\u5f0f\u63a5\u53e3 @FunctionalInterface interface IMath { public int add ( int x , int y ); } class Demo { public static void main ( String [] args ) { IMath math = ( x , y ) -> { return x + y ; }; System . out . println ( math . add ( 1 , 1 )); // 2 } } \u4e00\u884c\u8fd4\u56de\u8bed\u53e5\u7b80\u5316\u5199\u6cd5 IMath math = ( x , y ) -> x + y ; \u4f18\u52bf\uff1a\u7b80\u5316\u4ee3\u7801 132 \u65b9\u6cd5\u5f15\u7528 \u5f15\u7528\u6570\u636e\u7c7b\u578b\u6700\u5927\u7684\u7279\u70b9\u662f\u53ef\u4ee5\u8fdb\u884c\u5185\u5b58\u6307\u5411\u5904\u7406 JDK < 1.8 \u5bf9\u8c61\u5f15\u7528\u64cd\u4f5c JDK >= 1.8 \u65b9\u6cd5\u5f15\u7528\u64cd\u4f5c\uff1a\u4e0d\u540c\u7684\u65b9\u6cd5\u540d\u53ef\u4ee5\u63cf\u8ff0\u540c\u4e00\u4e2a\u65b9\u6cd5 \u5f15\u7528\u9759\u6001\u65b9\u6cd5\uff1a \u7c7b\u540d\u79f0::static \u65b9\u6cd5\u540d\u79f0 \u5f15\u7528\u5b9e\u4f8b\u5bf9\u8c61\u65b9\u6cd5\uff1a \u5b9e\u4f8b\u5316\u5bf9\u8c61::\u666e\u901a\u65b9\u6cd5 \u5f15\u7528\u7279\u5b9a\u7c7b\u578b\u7684\u65b9\u6cd5\uff1a\u7279\u5b9a\u7c7b::\u666e\u901a\u65b9\u6cd5 \u5f15\u7528\u6784\u9020\u65b9\u6cd5\uff1a\u7c7b\u540d\u79f0::new \u793a\u4f8b\uff1a\u5f15\u7528\u9759\u6001\u65b9\u6cd5 // static String valueOf(int i) @FunctionalInterface interface IFunction < P , R >{ public R change ( P p ); } class Demo { public static void main ( String [] args ) { IFunction < Integer , String > function = String :: valueOf ; String str = function . change ( 12 ); System . out . println ( str . length ()); // 2 } } \u65b9\u6cd5\u5f15\u7528\u53ef\u4ee5\u4e3a\u4e00\u4e2a\u65b9\u6cd5\u5b9a\u4e49\u591a\u4e2a\u540d\u5b57 \u8981\u6c42\u662f\u51fd\u6570\u5f0f\u63a5\u53e3 \u793a\u4f8b\uff1a\u5f15\u7528\u5b9e\u4f8b\u5bf9\u8c61\u65b9\u6cd5 // String toUpperCase() @FunctionalInterface interface IFunction < R >{ public R upper (); } class Demo { public static void main ( String [] args ) { IFunction < String > function = \"Hello Java\" :: toUpperCase ; System . out . println ( function . upper ()); // HELLO JAVA } } \u5f15\u7528\u666e\u901a\u65b9\u6cd5\u4e00\u822c\u90fd\u9700\u8981\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u5982\u679c\u4e0d\u7ed9\u51fa\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u8fd8\u8981\u5f15\u7528\u666e\u901a\u65b9\u6cd5 \u53ef\u4ee5\u4f7f\u7528\u5f15\u7528\u7279\u5b9a\u7c7b\u578b\u7684\u65b9\u6cd5 \u793a\u4f8b\uff1a\u5f15\u7528\u7279\u5b9a\u7c7b\u578b\u7684\u65b9\u6cd5 // int compareTo(String anotherString) @FunctionalInterface interface IFunction < P >{ public int compare ( P p1 , P p2 ); } class Demo { public static void main ( String [] args ) { IFunction < String > function = String :: compareTo ; System . out . println ( function . compare ( \"hello\" , \"java\" )); // -2 } } \u793a\u4f8b\uff1a\u5f15\u7528\u6784\u9020\u65b9\u6cd5 class Person { private String name ; private int age ; public Person ( String name , int age ){ this . name = name ; this . age = age ; } @Override public String toString (){ return \"Person<\" + this . name + \" \" + this . age + \">\" ; } } @FunctionalInterface interface IFunction < C >{ public C create ( String name , int age ); } class Demo { public static void main ( String [] args ) { IFunction < Person > function = Person :: new ; System . out . println ( function . create ( \"\u5f20\u4e09\" , 18 )); // Person<\u5f20\u4e09 18> } } \u65b9\u6cd5\u5f15\u7528\uff0c\u53ea\u662f\u5f25\u8865\u5bf9\u5f15\u7528\u652f\u6301 133 \u5185\u5efa\u51fd\u6570\u5f0f\u63a5\u53e3 \u5982\u679c\u81ea\u5b9a\u4e49Lambda\u8868\u8fbe\u5f0f\uff0c\u9700\u8981\u4f7f\u7528@FunctionalInterface\u6ce8\u89e3\u6765\u58f0\u660e java.util.function \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u51fd\u6570\u5f0f\u63a5\u53e3 1\u3001\u529f\u80fd\u6027\u51fd\u6570\u5f0f\u63a5\u53e3 @FunctionalInterface public interface Function < T , R >{ R apply ( T t ); } f \u793a\u4f8b import java.util.function.Function ; class Demo { public static void main ( String [] args ) { Function < String , Boolean > fun = \"**Hello\" :: startsWith ; System . out . println ( fun . apply ( \"**\" )); // true } } 2\u3001\u6d88\u8d39\u578b\u51fd\u6570\u5f0f\u63a5\u53e3 \u6ca1\u6709\u8fd4\u56de\u503c @FunctionalInterface public interface Consumer < T >{ void accept ( T t ); } \u793a\u4f8b import java.util.function.Consumer ; class Demo { public static void main ( String [] args ) { Consumer < String > fun = System . out :: println ; fun . accept ( \"Hello\" ); // Hello } } 3\u3001\u4f9b\u7ed9\u578b\u51fd\u6570\u5f0f\u63a5\u53e3 \u6ca1\u6709\u63a5\u6536\u53c2\u6570\uff0c\u6709\u8fd4\u56de\u503c @FunctionalInterface public interface Supplier < T >{ T get (); } \u793a\u4f8b import java.util.function.Supplier ; class Demo { public static void main ( String [] args ) { Supplier < String > fun = \"Hello Java\" :: toLowerCase ; System . out . println ( fun . get ()); // hello java } } 4\u3001\u65ad\u8a00\u578b\u51fd\u6570\u5f0f\u63a5\u53e3 \u8fdb\u884c\u5224\u65ad\u5904\u7406 @FunctionalInterface public interface Predicate < T >{ boolean test ( T t ); } \u793a\u4f8b import java.util.function.Predicate ; class Demo { public static void main ( String [] args ) { Predicate < String > fun = \"Hello\" :: equalsIgnoreCase ; System . out . println ( fun . test ( \"HELLO\" )); // true } }","title":"\u7b2c28 \u7ae0 \uff1a \u5185\u90e8\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5185\u90e8\u7c7b/#28","text":"","title":"\u7b2c28 \u7ae0 \uff1a \u5185\u90e8\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5185\u90e8\u7c7b/#126","text":"\u5185\u90e8\u7c7b\uff1a\u7c7b\u7684\u5185\u90e8\u5b9a\u4e49\u5176\u4ed6\u7684\u7c7b // \u5916\u90e8\u7c7b class Outer { private String message = \"\u79c1\u6709\u5c5e\u6027\" ; // \u666e\u901a\u65b9\u6cd5 public void fun (){ // \u5b9e\u4f8b\u5316\u5185\u90e8\u7c7b\u5e76\u8c03\u7528\u5185\u90e8\u7c7b\u65b9\u6cd5 Inner in = new Inner (); in . printInfo (); } // \u5185\u90e8\u7c7b class Inner { public void printInfo (){ // \u5185\u90e8\u7c7b\u4f7f\u7528\u5916\u90e8\u7c7b\u4e2d\u7684\u5c5e\u6027 System . out . println ( Outer . this . message ); } } } class Demo { public static void main ( String [] args ) { // \u5b9e\u4f8b\u5316\u5916\u90e8\u7c7b Outer outer = new Outer (); outer . fun (); // \u79c1\u6709\u5c5e\u6027 } } \u4e0d\u4f7f\u7528\u5185\u90e8\u7c7b\u5b9e\u73b0\u4e0a\u9762\u4ee3\u7801 // \u5916\u90e8\u7c7b class Outer { private String message = \"\u79c1\u6709\u5c5e\u6027\" ; // \u666e\u901a\u65b9\u6cd5 public void fun (){ // \u5b9e\u4f8b\u5316\u5185\u90e8\u7c7b\u5e76\u8c03\u7528\u5185\u90e8\u7c7b\u65b9\u6cd5 Inner inner = new Inner ( this ); inner . printInfo (); } public String getMessage (){ return this . message ; } } // \u5185\u90e8\u7c7b class Inner { private Outer outer ; public Inner ( Outer outer ){ this . outer = outer ; } public void printInfo (){ // \u5185\u90e8\u7c7b\u4f7f\u7528\u5916\u90e8\u7c7b\u4e2d\u7684\u5c5e\u6027 System . out . println ( this . outer . getMessage ()); } } class Demo { public static void main ( String [] args ) { // \u5b9e\u4f8b\u5316\u5916\u90e8\u7c7b Outer outer = new Outer (); outer . fun (); // \u79c1\u6709\u5c5e\u6027 } } \u7f3a\u70b9\uff1a\u4ece\u6574\u4f53\u4ee3\u7801\u7ed3\u6784\u4e0a\u6765\u8bb2\uff0c\u5185\u90e8\u7c7b\u7684\u7ed3\u6784\u5e76\u4e0d\u5408\u7406\uff0c\u7834\u574f\u4e86\u7c7b\u7ed3\u6784 \u4f18\u52bf\uff1a\u8f7b\u677e\u8bbf\u95ee\u5916\u90e8\u7c7b\u4e2d\u7684\u79c1\u6709\u5c5e\u6027","title":"126 \u5185\u90e8\u7c7b\u57fa\u672c\u6982\u5ff5"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5185\u90e8\u7c7b/#127","text":"\u5185\u90e8\u7c7b\u5b9e\u4f8b\u5316\u683c\u5f0f\uff1a \u5916\u90e8\u7c7b . \u5185\u90e8\u7c7b \u5185\u90e8\u7c7b\u5bf9\u8c61 = new \u5916\u90e8\u7c7b (). new \u5185\u90e8\u7c7b (); \u4e0a\u9762\u5b9e\u4f8b\u7f16\u8bd1\u540e\u51fa\u73b0\u6587\u4ef6 Demo . java Demo . class Outer . class Outer $ Inner . class \u5176\u4e2d\u7684 $ \u6362\u5230\u7a0b\u5e8f\u4e4b\u4e2d\u5c31\u662f . \u5185\u90e8\u7c7b\u53ef\u4ee5\u4f7f\u7528private\u79c1\u6709\u5316 \u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u4e2d\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u5185\u90e8\u7ed3\u6784 \u793a\u4f8b\uff1a\u5185\u90e8\u63a5\u53e3 interface Ichannel { public void send ( IMessage message ); interface IMessage { public String getContent (); } } class ChannelImpl implements Ichannel { public void send ( IMessage message ){ System . out . println ( message . getContent ()); } class MessageImpl implements IMessage { public String getContent (){ return \"\u5185\u90e8\u6d88\u606f\" ; } } } class Demo { public static void main ( String [] args ) { Ichannel channel = new ChannelImpl (); channel . send ((( ChannelImpl ) channel ). new MessageImpl ()); // \u5185\u90e8\u6d88\u606f } } \u793a\u4f8b\uff1a\u5185\u90e8\u62bd\u8c61\u7c7b // \u5b9a\u4e49\u63a5\u53e3 interface Ichannel { public void send (); // \u5185\u90e8\u62bd\u8c61\u7c7b abstract class AbstractMessage { public abstract String getContent (); } } class ChannelImpl implements Ichannel { public void send (){ AbstractMessage message = new MessageImpl (); System . out . println ( message . getContent ()); } class MessageImpl extends AbstractMessage { public String getContent (){ return \"\u5185\u90e8\u6d88\u606f\" ; } } } class Demo { public static void main ( String [] args ) { Ichannel channel = new ChannelImpl (); channel . send (); // \u5185\u90e8\u6d88\u606f } } \u793a\u4f8b\uff1a\u5185\u90e8\u7c7b\u5b9e\u73b0\u63a5\u53e3 // \u5b9a\u4e49\u63a5\u53e3 interface Ichannel { public void send (); class ChannelImpl implements Ichannel { public void send (){ System . out . println ( \"hello\" ); } } public static Ichannel getInstance (){ return new ChannelImpl (); } } class Demo { public static void main ( String [] args ) { Ichannel channel = Ichannel . getInstance (); channel . send (); // hello } }","title":"127 \u5185\u90e8\u7c7b\u76f8\u5173\u8bf4\u660e"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5185\u90e8\u7c7b/#128-static","text":"\u5982\u679c\u5185\u90e8\u7c7b\u4f7f\u7528\u4e86static\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5185\u90e8\u7c7b\u5c31\u53d8\u6210\u4e86\u5916\u90e8\u7c7b static\u5185\u90e8\u7c7b\u5b9e\u4f8b\u5316\u683c\u5f0f\uff1a \u5916\u90e8\u7c7b . \u5185\u90e8\u7c7b \u5185\u90e8\u7c7b\u5bf9\u8c61 = new \u5916\u90e8\u7c7b . \u5185\u90e8\u7c7b (); class Outer { private static final String MESSAGE = \"\u9759\u6001\u6d88\u606f\" ; static class Inner { public void print (){ System . out . println ( Outer . MESSAGE ); } } } class Demo { public static void main ( String [] args ) { Outer . Inner Inner = new Outer . Inner (); Inner . print (); // \u9759\u6001\u6d88\u606f } } static\u5b9a\u4e49\u4e00\u7ec4\u76f8\u5173\u5185\u90e8\u63a5\u53e3 interface IMessageWrap { static interface IMessage { public String getContent (); } static interface IChannel { public boolean connect (); } public static void send ( IMessage message , IChannel channel ){ if ( channel . connect ()){ System . out . println ( message . getContent ()); } else { System . out . println ( \"\u65e0\u6cd5\u8fde\u63a5\u901a\u9053\" ); } } } class MessageImpl implements IMessageWrap . IMessage { public String getContent (){ return \"\u6d88\u606f\u5185\u5bb9\" ; } } class ChannelImpl implements IMessageWrap . IChannel { public boolean connect (){ return true ; } } class Demo { public static void main ( String [] args ) { IMessageWrap . send ( new MessageImpl (), new ChannelImpl ()) ; // \u6d88\u606f\u5185\u5bb9 } }","title":"128 static\u5b9a\u4e49\u5185\u90e8\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5185\u90e8\u7c7b/#129","text":"\u5185\u90e8\u7c7b\u53ef\u4ee5\u5728\u4efb\u610f\u7ed3\u6784\u4e2d\u5b9a\u4e49 \u5305\u62ec\uff1a\u7c7b\uff0c\u65b9\u6cd5\uff0c\u4ee3\u7801\u5757 \u65b9\u6cd5\u4e2d\u5b9a\u4e49\u5185\u90e8\u7c7b JDK >= 1.8 \u5185\u90e8\u7c7b\u76f4\u63a5\u8bbf\u95ee\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570 JDK < 1.8 \u9700\u8981\u52a0\u5173\u952e\u5b57final public void fun ( final long time ) class Outer { private String msg = \"\u79c1\u6709\u6d88\u606f\" ; public void fun ( long time ){ // \u65b9\u6cd5\u4e2d\u5b9a\u4e49\u5185\u90e8\u7c7b class Inner { public void print (){ System . out . println ( Outer . this . msg ); System . out . println ( time ); } } // \u65b9\u6cd5\u4e2d\u76f4\u63a5\u5b9e\u4f8b\u5316\u5185\u90e8\u7c7b new Inner (). print (); } } class Demo { public static void main ( String [] args ) { new Outer (). fun ( 1234567890L ); // \u79c1\u6709\u6d88\u606f // 1234567890 } }","title":"129 \u65b9\u6cd5\u4e2d\u5b9a\u4e49\u5185\u90e8\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5185\u90e8\u7c7b/#130","text":"\u533f\u540d\u5185\u90e8\u7c7b\u662f\u4e00\u79cd\u7b80\u5316\u7684\u5185\u90e8\u7c7b\u5904\u7406\u5f62\u5f0f \u4e3b\u8981\u5728\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u7684\u5b50\u7c7b\u4e0a\u4f7f\u7528 interface IMessage { public void send (); } class MessageImpl implements IMessage { public void send (){ System . out . println ( \"Hello Java\" ); } } class Demo { public static void main ( String [] args ) { IMessage message = new MessageImpl (); message . send (); // Hello Java } } \u5982\u679c MessageImpl \u5b9e\u73b0\u53ea\u4f7f\u7528\u4e00\u6b21\uff0c\u53ef\u4ee5\u4f7f\u7528\u533f\u540d\u5185\u90e8\u7c7b interface IMessage { public void send (); } class Demo { public static void main ( String [] args ) { IMessage message = new IMessage () { public void send (){ System . out . println ( \"Hello Java\" ); } }; message . send (); // Hello Java } } \u63a5\u53e3\u4e2d\u5b9a\u4e49\u533f\u540d\u5185\u90e8\u7c7b interface IMessage { public void send (); public static IMessage getInstance (){ return new IMessage () { public void send () { System . out . println ( \"Hello Java\" ); } }; } } class Demo { public static void main ( String [] args ) { IMessage . getInstance (). send (); // Hello Java } }","title":"130 \u533f\u540d\u5185\u90e8\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5185\u90e8\u7c7b/#29","text":"","title":"\u7b2c29 \u7ae0 \uff1a \u51fd\u6570\u5f0f\u7f16\u7a0b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5185\u90e8\u7c7b/#131-lambda","text":"JDK >= 1.8 \u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\uff1a Scala https://www.scala-lang.org/ haskell https://www.haskell.org/ interface IMessage { public void send (); } class Demo { public static void main ( String [] args ) { IMessage message = new IMessage () { public void send (){ System . out . println ( \"Hello Java\" ); } }; message . send (); // Hello Java } } \u4f7f\u7528Lambda @FunctionalInterface interface IMessage { public void send (); } class Demo { public static void main ( String [] args ) { IMessage message = () -> { System . out . println ( \"Hello Java\" ); }; message . send (); // Hello Java } } \u4f7f\u7528Lambda \u8868\u8fbe\u5f0f\u7684\u8981\u6c42: SAM (Single Abstract Method)\u53ea\u6709\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5 \u88ab\u79f0\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3, \u91cc\u8fb9\u7684\u65b9\u6cd5\u53ea\u80fd\u6709\u4e00\u4e2a Lambda\u8868\u8fbe\u5f0f\u7684\u683c\u5f0f\uff1a \u65b9\u6cd5\u6ca1\u6709\u53c2\u6570\uff1a ()->{}; \u65b9\u6cd5\u6709\u53c2\u6570\uff1a(\u53c2\u6570, \u53c2\u6570)->{}; \u5982\u679c\u53ea\u6709\u4e00\u884c\u8bed\u53e5\u8fd4\u56de\uff1a(\u53c2\u6570, \u53c2\u6570)->\u8bed\u53e5; // \u51fd\u6570\u5f0f\u63a5\u53e3 @FunctionalInterface interface IMath { public int add ( int x , int y ); } class Demo { public static void main ( String [] args ) { IMath math = ( x , y ) -> { return x + y ; }; System . out . println ( math . add ( 1 , 1 )); // 2 } } \u4e00\u884c\u8fd4\u56de\u8bed\u53e5\u7b80\u5316\u5199\u6cd5 IMath math = ( x , y ) -> x + y ; \u4f18\u52bf\uff1a\u7b80\u5316\u4ee3\u7801","title":"131 Lambda\u8868\u8fbe\u5f0f"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5185\u90e8\u7c7b/#132","text":"\u5f15\u7528\u6570\u636e\u7c7b\u578b\u6700\u5927\u7684\u7279\u70b9\u662f\u53ef\u4ee5\u8fdb\u884c\u5185\u5b58\u6307\u5411\u5904\u7406 JDK < 1.8 \u5bf9\u8c61\u5f15\u7528\u64cd\u4f5c JDK >= 1.8 \u65b9\u6cd5\u5f15\u7528\u64cd\u4f5c\uff1a\u4e0d\u540c\u7684\u65b9\u6cd5\u540d\u53ef\u4ee5\u63cf\u8ff0\u540c\u4e00\u4e2a\u65b9\u6cd5 \u5f15\u7528\u9759\u6001\u65b9\u6cd5\uff1a \u7c7b\u540d\u79f0::static \u65b9\u6cd5\u540d\u79f0 \u5f15\u7528\u5b9e\u4f8b\u5bf9\u8c61\u65b9\u6cd5\uff1a \u5b9e\u4f8b\u5316\u5bf9\u8c61::\u666e\u901a\u65b9\u6cd5 \u5f15\u7528\u7279\u5b9a\u7c7b\u578b\u7684\u65b9\u6cd5\uff1a\u7279\u5b9a\u7c7b::\u666e\u901a\u65b9\u6cd5 \u5f15\u7528\u6784\u9020\u65b9\u6cd5\uff1a\u7c7b\u540d\u79f0::new \u793a\u4f8b\uff1a\u5f15\u7528\u9759\u6001\u65b9\u6cd5 // static String valueOf(int i) @FunctionalInterface interface IFunction < P , R >{ public R change ( P p ); } class Demo { public static void main ( String [] args ) { IFunction < Integer , String > function = String :: valueOf ; String str = function . change ( 12 ); System . out . println ( str . length ()); // 2 } } \u65b9\u6cd5\u5f15\u7528\u53ef\u4ee5\u4e3a\u4e00\u4e2a\u65b9\u6cd5\u5b9a\u4e49\u591a\u4e2a\u540d\u5b57 \u8981\u6c42\u662f\u51fd\u6570\u5f0f\u63a5\u53e3 \u793a\u4f8b\uff1a\u5f15\u7528\u5b9e\u4f8b\u5bf9\u8c61\u65b9\u6cd5 // String toUpperCase() @FunctionalInterface interface IFunction < R >{ public R upper (); } class Demo { public static void main ( String [] args ) { IFunction < String > function = \"Hello Java\" :: toUpperCase ; System . out . println ( function . upper ()); // HELLO JAVA } } \u5f15\u7528\u666e\u901a\u65b9\u6cd5\u4e00\u822c\u90fd\u9700\u8981\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u5982\u679c\u4e0d\u7ed9\u51fa\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u8fd8\u8981\u5f15\u7528\u666e\u901a\u65b9\u6cd5 \u53ef\u4ee5\u4f7f\u7528\u5f15\u7528\u7279\u5b9a\u7c7b\u578b\u7684\u65b9\u6cd5 \u793a\u4f8b\uff1a\u5f15\u7528\u7279\u5b9a\u7c7b\u578b\u7684\u65b9\u6cd5 // int compareTo(String anotherString) @FunctionalInterface interface IFunction < P >{ public int compare ( P p1 , P p2 ); } class Demo { public static void main ( String [] args ) { IFunction < String > function = String :: compareTo ; System . out . println ( function . compare ( \"hello\" , \"java\" )); // -2 } } \u793a\u4f8b\uff1a\u5f15\u7528\u6784\u9020\u65b9\u6cd5 class Person { private String name ; private int age ; public Person ( String name , int age ){ this . name = name ; this . age = age ; } @Override public String toString (){ return \"Person<\" + this . name + \" \" + this . age + \">\" ; } } @FunctionalInterface interface IFunction < C >{ public C create ( String name , int age ); } class Demo { public static void main ( String [] args ) { IFunction < Person > function = Person :: new ; System . out . println ( function . create ( \"\u5f20\u4e09\" , 18 )); // Person<\u5f20\u4e09 18> } } \u65b9\u6cd5\u5f15\u7528\uff0c\u53ea\u662f\u5f25\u8865\u5bf9\u5f15\u7528\u652f\u6301","title":"132 \u65b9\u6cd5\u5f15\u7528"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5185\u90e8\u7c7b/#133","text":"\u5982\u679c\u81ea\u5b9a\u4e49Lambda\u8868\u8fbe\u5f0f\uff0c\u9700\u8981\u4f7f\u7528@FunctionalInterface\u6ce8\u89e3\u6765\u58f0\u660e java.util.function \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u51fd\u6570\u5f0f\u63a5\u53e3 1\u3001\u529f\u80fd\u6027\u51fd\u6570\u5f0f\u63a5\u53e3 @FunctionalInterface public interface Function < T , R >{ R apply ( T t ); } f \u793a\u4f8b import java.util.function.Function ; class Demo { public static void main ( String [] args ) { Function < String , Boolean > fun = \"**Hello\" :: startsWith ; System . out . println ( fun . apply ( \"**\" )); // true } } 2\u3001\u6d88\u8d39\u578b\u51fd\u6570\u5f0f\u63a5\u53e3 \u6ca1\u6709\u8fd4\u56de\u503c @FunctionalInterface public interface Consumer < T >{ void accept ( T t ); } \u793a\u4f8b import java.util.function.Consumer ; class Demo { public static void main ( String [] args ) { Consumer < String > fun = System . out :: println ; fun . accept ( \"Hello\" ); // Hello } } 3\u3001\u4f9b\u7ed9\u578b\u51fd\u6570\u5f0f\u63a5\u53e3 \u6ca1\u6709\u63a5\u6536\u53c2\u6570\uff0c\u6709\u8fd4\u56de\u503c @FunctionalInterface public interface Supplier < T >{ T get (); } \u793a\u4f8b import java.util.function.Supplier ; class Demo { public static void main ( String [] args ) { Supplier < String > fun = \"Hello Java\" :: toLowerCase ; System . out . println ( fun . get ()); // hello java } } 4\u3001\u65ad\u8a00\u578b\u51fd\u6570\u5f0f\u63a5\u53e3 \u8fdb\u884c\u5224\u65ad\u5904\u7406 @FunctionalInterface public interface Predicate < T >{ boolean test ( T t ); } \u793a\u4f8b import java.util.function.Predicate ; class Demo { public static void main ( String [] args ) { Predicate < String > fun = \"Hello\" :: equalsIgnoreCase ; System . out . println ( fun . test ( \"HELLO\" )); // true } }","title":"133 \u5185\u5efa\u51fd\u6570\u5f0f\u63a5\u53e3"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/","text":"\u7b2c15 \u7ae0 \uff1a Annotation\u6ce8\u89e3 71 Annotation\u7b80\u4ecb JDK>=1.5 \u4f5c\u7528 1\u3001\u51cf\u5c11\u7a0b\u5e8f\u914d\u7f6e\u7684\u4ee3\u7801 2\u3001\u8fdb\u884c\u7ed3\u6784\u5316\u5b9a\u4e49 \u4ee5\u6ce8\u89e3\u7684\u5f62\u5f0f\u5b9e\u73b0\u7a0b\u5e8f\u5f00\u53d1 \u7a0b\u5e8f\u4ee3\u7801\uff08\u8d44\u6e90\u8c03\u5ea6\uff09 \u8d44\u6e90\uff1a\u5173\u7cfb\u578b\u6570\u636e\u5e93 + NoSQL\u7cfb\u7edf + \u6d88\u606f\u670d\u52a1 + \u6570\u636e\u670d\u52a1 \u914d\u7f6e\u6587\u4ef6\uff1a\u6570\u636e\u5e93\u8fde\u63a5\u8d44\u6e90 + \u5176\u4ed6\u8fde\u63a5\u8d44\u6e90 \u7a0b\u5e8f\u5f00\u53d1\u7ed3\u6784\u7684\u5386\u53f2 \u7b2c\u4e00\u9636\u6bb5\uff1a\u6240\u6709\u914d\u7f6e\u90fd\u5199\u5728\u7a0b\u5e8f\u4ee3\u7801\u4e2d\uff0c\u4e0d\u5229\u4e8e\u7ef4\u62a4 \u7b2c\u4e8c\u9636\u6bb5\uff1a\u5f15\u5165\u914d\u7f6e\u6587\u4ef6\uff0c\u9002\u7528\u4e8e\u914d\u7f6e\u9879\u4e0d\u591a\u7684\u60c5\u51b5 \u7b2c\u4e09\u9636\u6bb5\uff1a\u914d\u7f6e\u4fe1\u606f\u91cd\u65b0\u5199\u56de\u7a0b\u5e8f\u91cc\uff0c\u5229\u7528\u7279\u6b8a\u6807\u8bb0\u4e0e\u4ee3\u7801\u5206\u79bb @Override @Deprecated @SuppressWarnings 72 \u51c6\u786e\u8986\u5199 \u95ee\u9898\uff1a 1\u3001\u7ee7\u627f\u5fd8\u8bb0\u5199extends 2\u3001\u8986\u5199\u65b9\u6cd5\u5355\u8bcd\u62fc\u9519 @Override \u660e\u786e\u8868\u793a\u8be5\u65b9\u6cd5\u662f\u8986\u5199\u65b9\u6cd5 \u7a0b\u5e8f\u7f16\u8bd1\u65f6\u68c0\u67e5\u9519\u8bef\uff0c\u4fdd\u8bc1\u8986\u5199\u51c6\u786e\u6027 class Resource { public void connect (){ System . out . println ( \"\u8d44\u6e90\u8fde\u63a5\" ); } } class Database extends Resource { @Override public void connect (){ System . out . println ( \"\u6570\u636e\u5e93\u8d44\u6e90\u8fde\u63a5\" ); } } class Demo { public static void main ( String [] args ) { Database db = new Database (); // \u8c03\u7528\u5b50\u7c7b\u7684\u65b9\u6cd5 db . connect (); // \u6570\u636e\u5e93\u8d44\u6e90\u8fde\u63a5 } } 73 \u8fc7\u671f\u58f0\u660e @Deprecated \u8f6f\u4ef6\u9879\u76ee\u8fed\u4ee3\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u80fd\u6709\u7684\u5730\u65b9\u8003\u8651\u4e0d\u5468\uff0c\u4e0d\u80fd\u76f4\u63a5\u5220\u9664\u8fd9\u4e9b\u64cd\u4f5c \u7ed9\u4e00\u4e2a\u8fc7\u6e21\u65f6\u95f4\uff0c\u8001\u7cfb\u7edf\u53ef\u4ee5\u7ee7\u7eed\u7528\uff0c\u65b0\u9879\u76ee\u4e0d\u8981\u7528\u4e86 class Database { @Deprecated public void connect (){ System . out . println ( \"\u6570\u636e\u5e93\u8d44\u6e90\u8fde\u63a5\" ); } public void connection (){ System . out . println ( \"\u65b0\u7684\u65b9\u5f0f\uff1a\u6570\u636e\u5e93\u8d44\u6e90\u8fde\u63a5\" ); } } class Demo { public static void main ( String [] args ) { Database db = new Database (); db . connect (); /* \u6ce8: Demo.java\u4f7f\u7528\u6216\u8986\u76d6\u4e86\u5df2\u8fc7\u65f6\u7684 API\u3002 \u6ce8: \u6709\u5173\u8be6\u7ec6\u4fe1\u606f, \u8bf7\u4f7f\u7528 -Xlint:deprecation \u91cd\u65b0\u7f16\u8bd1\u3002 \u6570\u636e\u5e93\u8d44\u6e90\u8fde\u63a5 */ } } 74 \u538b\u5236\u8b66\u544a \u9690\u85cf\u8b66\u544a\u63d0\u793a class Database { @Deprecated public void connect (){ System . out . println ( \"\u6570\u636e\u5e93\u8d44\u6e90\u8fde\u63a5\" ); } } class Demo { // \u9690\u85cf deprecation \u8b66\u544a @SuppressWarnings ({ \"deprecation\" }) public static void main ( String [] args ) { Database db = new Database (); db . connect (); // \u6570\u636e\u5e93\u8d44\u6e90\u8fde\u63a5 } } \u7b2c16 \u7ae0 \uff1a \u591a\u6001\u6027 75 \u591a\u6001\u6027\u7b80\u4ecb \u591a\u6001\u662f\u5728\u7ee7\u627f\u7684\u57fa\u7840\u4e0a\u6269\u5c55\u51fa\u6765\u7684\u6982\u5ff5\uff0c\u5b9e\u73b0\u7236\u5b50\u7c7b\u4e4b\u95f4\u7684\u8f6c\u6362\u5904\u7406 Java\u4e2d\u591a\u6001\u7684\u4e24\u79cd\u5b9e\u73b0\u6a21\u5f0f 1\u3001\u65b9\u6cd5\u591a\u6001\u6027 -\u65b9\u6cd5\u91cd\u8f7d\uff1a\u540c\u4e00\u4e2a\u65b9\u6cd5\u540d\u79f0\u53ef\u4ee5\u6839\u636e\u4f20\u5165\u7684\u53c2\u6570\u7c7b\u578b\uff0c\u4e2a\u6570\u7684\u4e0d\u540c\uff0c\u5b9e\u73b0\u4e0d\u540c\u529f\u80fd\u7684\u6267\u884c -\u65b9\u6cd5\u8986\u5199\uff1a\u540c\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5728\u4e0d\u540c\u5b50\u7c7b\u4e2d\u6709\u4e0d\u540c\u7684\u5b9e\u73b0 2\u3001\u5bf9\u8c61\u591a\u6001\u6027\uff08\u7236\u5b50\u4e4b\u95f4\u8f6c\u6362\u5904\u7406\uff09 -\u5bf9\u8c61\u5411\u4e0a\u8f6c\u578b \u7236\u7c7b \u7236\u7c7b\u5b9e\u4f8b = \u5b50\u7c7b\u5b9e\u4f8b \uff08\u81ea\u52a8\u8f6c\u6362\uff09 -\u5bf9\u8c61\u5411\u4e0b\u8f6c\u578b \u5b50\u7c7b \u5b50\u7c7b\u5b9e\u4f8b = \uff08\u5b50\u7c7b\uff09\u7236\u7c7b\u5b9e\u4f8b \uff08\u5f3a\u5236\u8f6c\u6362\uff09 \u65b9\u6cd5\u91cd\u8f7d class Demo { public static void print (){ System . out . println ( \"\u9ed8\u8ba4\u8f93\u51fa\" ); } public static void print ( String message ){ System . out . println ( message ); } public static void main ( String [] args ) { Demo . print (); // \u9ed8\u8ba4\u8f93\u51fa Demo . print ( \"\u81ea\u5b9a\u4e49\u8f93\u51fa\" ); // \u81ea\u5b9a\u4e49\u8f93\u51fa } } \u65b9\u6cd5\u8986\u5199 class Database { public void connect (){ System . out . println ( \"\u6570\u636e\u5e93\u8fde\u63a5\" ); } } class MySQLDatabase extends Database { @Override public void connect (){ System . out . println ( \"MySQL\u6570\u636e\u5e93\u8fde\u63a5\" ); } } class RedisDatabase extends Database { @Override public void connect (){ System . out . println ( \"Redis\u6570\u636e\u5e93\u8fde\u63a5\" ); } } class Demo { public static void main ( String [] args ) { Database db = null ; db = new Database (); db . connect (); // \u6570\u636e\u5e93\u8fde\u63a5 db = new MySQLDatabase (); db . connect (); // MySQL\u6570\u636e\u5e93\u8fde\u63a5 db = new RedisDatabase (); db . connect (); // Redis\u6570\u636e\u5e93\u8fde\u63a5 } } 76 \u5bf9\u8c61\u5411\u4e0a\u8f6c\u578b \u5411\u4e0a\u8f6c\u578b\u7684\u4f18\u52bf\uff1a\u53c2\u6570\u53ef\u4ee5\u7edf\u4e00\u8bbe\u8ba1\uff08\u63a5\u6536\u6216\u8fd4\u56de\u53c2\u6570\u7edf\u4e00\u6027\uff09 \u91cd\u8f7d\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u76f8\u540c\u7684\u6548\u679c\uff0c\u5982\u679c\u5b50\u7c7b\u8fc7\u591a\uff0c\u4ee3\u7801\u4e0d\u5229\u7ef4\u62a4 class Database { public void connect (){ System . out . println ( \"\u6570\u636e\u5e93\u8fde\u63a5\" ); } } class MySQLDatabase extends Database { @Override public void connect (){ System . out . println ( \"MySQL\u6570\u636e\u5e93\u8fde\u63a5\" ); } } class RedisDatabase extends Database { @Override public void connect (){ System . out . println ( \"Redis\u6570\u636e\u5e93\u8fde\u63a5\" ); } } class Demo { // \u63a5\u6536\u7edf\u4e00\u7684\u53c2\u6570 Database \u548c\u5176\u5b50\u7c7b public static void connect ( Database db ){ db . connect (); } public static void main ( String [] args ) { // \u76f8\u5f53\u4e8e Database db = new Database() Demo . connect ( new Database ()) ; // \u81ea\u52a8\u5411\u4e0a\u8f6c\u578b \u76f8\u5f53\u4e8e Database db = new MySQLDatabase() Demo . connect ( new MySQLDatabase ()) ; // \u81ea\u52a8\u5411\u4e0a\u8f6c\u578b \u76f8\u5f53\u4e8e Database db = new RedisDatabase() Demo . connect ( new RedisDatabase ()) ; } } 77 \u5bf9\u8c61\u5411\u4e0b\u8f6c\u578b \u5411\u4e0b\u8f6c\u578b\u4e3b\u8981\u7279\u70b9\uff1a \u9700\u8981\u4f7f\u7528\u5230\u5b50\u7c7b\u81ea\u5df1\u7684\u7279\u6b8a\u65b9\u6cd5 class Person { public void eat (){ System . out . println ( \"I can eat\" ); } } class SuperMan extends Person { public void fly (){ System . out . println ( \"I can fly\" ); } } class Demo { public static void main ( String [] args ) { // \u5411\u4e0a\u81ea\u52a8\u8f6c\u578b Person person = new SuperMan () ; person . eat () ; // I can eat // \u5411\u4e0b\u5f3a\u5236\u8f6c\u578b SuperMan superMan = ( SuperMan ) person ; superMan . fly () ; // I can fly } } \u5411\u4e0a\u63cf\u8ff0\u7684\u662f\u4e00\u4e9b\u516c\u5171\u7279\u5f81 \u5411\u4e0b\u63cf\u8ff0\u7684\u662f\u5b50\u7c7b\u7279\u6b8a\u7684\u5b9a\u4e49, \u4e0d\u5b89\u5168 \u5411\u4e0b\u8f6c\u578b\u4e4b\u524d\u4e00\u5b9a\u8981\u6709\u5411\u4e0a\u8f6c\u578b 78 instanceof\u5173\u952e\u5b57 \u8bed\u6cd5 \u5bf9\u8c61 instanceof \u7c7b \u5982\u679c\u8981\u6267\u884c\u5411\u4e0b\u8f6c\u578b\u8981\u5148\u505a\u7c7b\u578b\u5224\u65ad // \u5411\u4e0a\u81ea\u52a8\u8f6c\u578b Person person = new SuperMan () ; person instanceof Person ; // true person instanceof SuperMan ; // true // \u5411\u4e0b\u5f3a\u5236\u8f6c\u578b SuperMan superMan = ( SuperMan ) person ; superMan instanceof Person ; // true superMan instanceof SuperMan ; // true \u7b2c17 \u7ae0 \uff1a Object\u7c7b 79 Object\u7c7b\u7684\u57fa\u672c\u6982\u5ff5 Java\u4e2d\u53ea\u6709\u4e00\u4e2a\u7c7b\u4e0d\u5b58\u5728\u7ee7\u627f\u5173\u7cfb\uff0cObject\u53ef\u4ee5\u63a5\u6536\u6240\u6709\u7684\u6570\u636e\u7c7b\u578b \u6240\u6709\u7c7b\u9ed8\u8ba4\u90fd\u662fObject\u5b50\u7c7b \u4e24\u79cd\u5b9a\u4e49\u65b9\u5f0f\u7b49\u4ef7 class Person {} class Person extends Object {} Object\u7c7b\u63d0\u4f9b\u65e0\u53c2\u6784\u9020\u65b9\u6cd5 class Person {} class Demo { public static void main ( String [] args ) { Object obj = new Person () ; if ( obj instanceof Person ){ Person person = ( Person ) obj ; } } } Object\u53ef\u4ee5\u63a5\u6536\u6240\u6709\u5f15\u7528\u7c7b\u578b\uff0c\u4e07\u80fd\u6570\u636e\u7c7b\u578b \u9002\u5408\u8fdb\u884c\u7a0b\u5e8f\u7684\u6807\u51c6\u8bbe\u8ba1 Object\u63a5\u6536\u6570\u7ec4 Object obj = new int [] { 1 , 2 , 3 } ; if ( obj instanceof int []){ int [] data = ( int []) obj ; for ( int x : data ){ System . out . println ( x ); } } 80 \u53d6\u5f97\u5bf9\u8c61\u4fe1\u606f toString() \u4eceObject\u7ee7\u627f\u800c\u6765 \u5bf9\u8c61\u76f4\u63a5\u8f93\u51fa\u8c03\u7528\u7684\u662ftoString() class Person { private String name ; private int age ; public Person (){} public Person ( String name , int age ){ this . name = name ; this . age = age ; } @Override public String toString (){ return \"name: \" + this . name + \" age: \" + this . age ; } } class Demo { public static void main ( String [] args ) { Person person = new Person ( \"\u5f20\u4e09\" , 23 ); System . out . println ( person ); // name: \u5f20\u4e09 age: 23 } } 81 \u5bf9\u8c61\u6bd4\u8f83 Object\u63d0\u4f9b equals\u6bd4\u8f83\u5bf9\u8c61\u5185\u5bb9 \u9ed8\u8ba4\u6bd4\u8f83\u5bf9\u8c61\u5730\u5740 class Person { private String name ; private int age ; public Person (){} public Person ( String name , int age ){ this . name = name ; this . age = age ; } @Override public boolean equals ( Object obj ){ // \u5904\u7406null if ( obj == null ){ return false ; } // \u540c\u5bf9\u8c61\u6bd4\u8f83 if ( this == obj ){ return true ; } // \u4e0d\u540c\u7c7b\u578b\u6bd4\u8f83 if (!( obj instanceof Person )){ return false ; } Person person = ( Person ) obj ; return this . name == person . name && this . age == person . age ; } } class Demo { public static void main ( String [] args ) { Person person1 = new Person ( \"\u5f20\u4e09\" , 23 ); Person person2 = new Person ( \"\u5f20\u4e09\" , 23 ); System . out . println ( person1 . equals ( person1 )); // true System . out . println ( person1 . equals ( person2 )); // true System . out . println ( person1 . equals ( null )); // false System . out . println ( person1 . equals ( \"\u674e\u56db\" )); // false } } \u7b2c18 \u7ae0 \uff1a \u62bd\u8c61\u7c7b\u7684\u5b9a\u4e49\u4e0e\u4f7f\u7528 82 \u62bd\u8c61\u7c7b\u57fa\u672c\u6982\u5ff5 \u7c7b\u7ee7\u627f\u4e3b\u8981\u4f5c\u7528\u5728\u4e8e\u53ef\u4ee5\u6269\u5145\u5df2\u6709\u7c7b\u7684\u529f\u80fd\uff0c\u4e0d\u8fc7\u4e0d\u80fd\u5f3a\u5236\u5b50\u7c7b\u5fc5\u987b\u8986\u5199\u54ea\u4e9b\u7c7b \u7236\u7c7b\u8bbe\u8ba1\u4f18\u5148\u8003\u8651\u62bd\u8c61\u7c7b \u62bd\u8c61\u7c7b\uff1a\u5bf9\u5b50\u7c7b\u8986\u5199\u65b9\u6cd5\u8fdb\u884c\u7ea6\u5b9a \u62bd\u8c61\u65b9\u6cd5\uff1aabstract\u5173\u952e\u5b57\u5b9a\u4e49\u5e76\u4e14\u6ca1\u6709\u63d0\u4f9b\u65b9\u6cd5\u4f53\u7684\u65b9\u6cd5 \u62bd\u8c61\u7c7b\uff1a\u62bd\u8c61\u65b9\u6cd5\u6240\u5728\u7684\u7c7b\u5fc5\u987b\u4e3a\u62bd\u8c61\u7c7b \u62bd\u8c61\u7c7b\u4e0d\u662f\u5b8c\u6574\u7684\u7c7b\uff0c\u4e0d\u80fd\u76f4\u63a5\u5b9e\u4f8b\u5316 \u4f7f\u7528\u62bd\u8c61\u7c7b\uff1a 1\u3001\u62bd\u8c61\u7c7b\u5fc5\u987b\u63d0\u4f9b\u5b50\u7c7b\uff0c\u5b50\u7c7b\u4f7f\u7528extends\u7ee7\u627f\u62bd\u8c61\u7c7b 2\u3001\u62bd\u8c61\u7c7b\u5b50\u7c7b\u4e00\u5b9a\u8981\u8986\u5199\u62bd\u8c61\u7c7b\u4e2d\u7684\u5168\u90e8\u62bd\u8c61\u65b9\u6cd5 3\u3001\u62bd\u8c61\u7c7b\u7684\u5bf9\u8c61\u5b9e\u4f8b\u5316\u53ef\u4ee5\u5229\u7528\u5bf9\u8c61\u591a\u6001\u6027\u901a\u8fc7\u5b50\u7c7b\u5411\u4e0a\u8f6c\u578b\u7684\u65b9\u5f0f\u5b8c\u6210 \u62bd\u8c61\u7c7b\u53ea\u662f\u6bd4\u666e\u901a\u7c7b\u589e\u52a0\u4e86\u62bd\u8c61\u65b9\u6cd5\uff0c\u4ee5\u53ca\u5bf9\u5b50\u7c7b\u7684\u5f3a\u5236\u6027\u8986\u5199\u8981\u6c42\uff0c\u4f7f\u7528\u548c\u666e\u901a\u7c7b\u5b8c\u5168\u76f8\u540c \u6838\u5fc3\u95ee\u9898\uff1a\u62bd\u8c61\u7c7b\u65e0\u6cd5\u76f4\u63a5\u5b9e\u4f8b\u5316 \u4e3b\u8981\u76ee\u7684\uff1a\u8fdb\u884c\u8fc7\u6e21\u64cd\u4f5c\uff0c\u89e3\u51b3\u7c7b\u7ee7\u627f\u95ee\u9898\u4e2d\u4ee3\u7801\u91cd\u590d\u5904\u7406 // \u5b9a\u4e49\u62bd\u8c61\u7c7b abstract class Database { private String type ; // \u62bd\u8c61\u65b9\u6cd5 public abstract void connect () ; // \u666e\u901a\u65b9\u6cd5 public void setType ( String type ){ this . type = type ; } public String getType (){ return this . type ; } } class MySQLDatabase extends Database { @Override public void connect (){ System . out . println ( \"MySQL\u6570\u636e\u5e93\u8fde\u63a5\" ); } } class Demo { public static void main ( String [] args ) { Database db = new MySQLDatabase (); db . connect (); // MySQL\u6570\u636e\u5e93\u8fde\u63a5 } } 83 \u62bd\u8c61\u7c7b\u7684\u76f8\u5173\u8bf4\u660e \u6ce8\u610f\u8981\u70b9\uff1a 1\u3001\u5b9a\u4e49\u62bd\u8c61\u7c7b\u4e0d\u80fd\u4f7f\u7528final \u5173\u952e\u5b57\u5b9a\u4e49\uff0c\u62bd\u8c61\u7c7b\u5fc5\u987b\u6709\u5b50\u7c7b 2\u3001\u62bd\u8c61\u7c7b\u662f\u666e\u901a\u7c7b\u7684\u52a0\u5f3a\u7248\uff0c\u62bd\u8c61\u7c7b\u53ef\u4ee5\u63d0\u4f9b\u6784\u9020\u65b9\u6cd5 3\u3001\u62bd\u8c61\u7c7b\u5141\u8bb8\u6ca1\u6709\u62bd\u8c61\u65b9\u6cd5\uff0c\u65e0\u6cd5new\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u5fc5\u987b\u7531\u5b50\u7c7b\u5b8c\u6210 4\u3001\u62bd\u8c61\u7c7b\u53ef\u4ee5\u63d0\u4f9bstatic \u65b9\u6cd5\uff0c\u4e0d\u53d7\u62bd\u8c61\u7c7b\u7ed3\u6784\u9650\u5236 static \u65b9\u6cd5\u6c38\u8fdc\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u8c03\u7528 // \u5b9a\u4e49\u62bd\u8c61\u7c7b abstract class Database {} // \u5b50\u7c7b\u7ee7\u627f class MySQLDatabase extends Database {} class Demo { public static void main ( String [] args ) { Database db = new MySQLDatabase (); } } 84 \u6a21\u677f\u8bbe\u8ba1\u6a21\u5f0f \u62bd\u8c61\u7c7b\u7684\u5b9a\u4e49\u6bd4\u666e\u901a\u7c7b\u66f4\u9ad8\u4e00\u5c42 \u62bd\u8c61\u7c7b\u597d\u5904 1\u3001\u5bf9\u5b50\u7c7b\u65b9\u6cd5\u7edf\u4e00\u7ba1\u7406 2\u3001\u63d0\u4f9b\u4e00\u4e9b\u666e\u901a\u65b9\u6cd5\uff0c\u5e76\u4e14\u666e\u901a\u65b9\u6cd5\u53ef\u8c03\u7528\u62bd\u8c61\u65b9\u6cd5 // \u5b9a\u4e49\u62bd\u8c61\u7c7b abstract class Action { public static final int EAT = 1 ; public static final int SLEEP = 2 ; public void command ( int code ){ switch ( code ){ case EAT :{ this . eat (); break ; } case SLEEP : { this . sleep (); break ; } case EAT + SLEEP : { this . eat (); this . sleep (); break ; } } } public abstract void eat (); public abstract void sleep (); } class Dog extends Action { public void eat (){ System . out . println ( \"Dog eat\" ); } public void sleep (){ System . out . println ( \"Dog sleep\" ); } } class Cat extends Action { public void eat (){ System . out . println ( \"Cat eat\" ); } public void sleep (){ System . out . println ( \"Cat sleep\" ); } } class Demo { public static void main ( String [] args ) { Action dog = new Dog (); dog . command ( Action . EAT ); // Dog eat Action cat = new Cat (); cat . command ( Action . EAT + Action . SLEEP ); // Cat eat // Cat sleep } } 85 \u5305\u88c5\u7c7b\u5b9e\u73b0\u539f\u7406\u5206\u6790 \u5305\u88c5\u7c7b\u9488\u5bf9\u57fa\u672c\u6570\u636e\u7c7b\u578b\u5bf9\u8c61\u8f6c\u6362\u800c\u5b9e\u73b0 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e0d\u662f\u4e00\u4e2a\u7c7b \u57fa\u672c\u6570\u636e\u7c7b\u578b\u4ee5\u7c7b\u7684\u5f62\u5f0f\u8fdb\u884c\u5904\u7406\uff0c\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u5305\u88c5 \u88c5\u7bb1\uff1a\u5c06\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4fdd\u5b58\u5230\u5305\u88c5\u7c7b\u4e2d \u62c6\u7bb1\uff1a\u4ece\u5305\u88c5\u7c7b\u5bf9\u8c61\u4e2d\u83b7\u53d6\u57fa\u672c\u6570\u636e\u7c7b\u578b // \u5b9a\u4e49\u5305\u88c5\u7c7b class Int { private int data ; public Int ( int data ){ this . data = data ; } public int intValue (){ return this . data ; } } class Demo { public static void main ( String [] args ) { // \u88c5\u7bb1 \u57fa\u672c\u6570\u636e\u7c7b\u578b => \u5bf9\u8c61\u7c7b\u578b Object obj = new Int ( 12 ) ; // \u62c6\u7bb1 \u5bf9\u8c61\u7c7b\u578b => \u57fa\u672c\u6570\u636e\u7c7b\u578b int x = (( Int ) obj ). intValue (); System . out . println ( x ) ; // 12 } } \u57fa\u672c\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u5305\u88c5\u7c7b\u540e\uff0c\u53ef\u4ee5\u5411\u5bf9\u8c61\u4e00\u6837\u8fdb\u884c\u5f15\u7528\u4f20\u9012 8\u79cd\u57fa\u672c\u6570\u636e\u7c7b\u578b Object - \u6570\u503c\u578b Number { abstract } - Byte : byte - 8 - Short : short - 16 - Integer : int - 32 - Long : long - 64 - Float : float - 32 - Double : double - 64 - \u5e03\u5c14\u578b Boolean \uff1a boolean - \u5b57\u7b26\u578b Character \uff1a char - 16 Java\u4e2d\u6709\u4e24\u79cd\u5305\u88c5\u7c7b\uff1a 1\u3001\u5bf9\u8c61\u578b\u5305\u88c5\u7c7bObject\u5b50\u7c7b\uff1aBoolean\uff0cCharacter 2\u3001\u6570\u503c\u578b\u5305\u88c5\u7c7bNumber\u5b50\u7c7b\uff1aByte\uff0cShort\uff0c Integer\uff0c Long\uff0c Float\uff0c Double Number\u7c7b\u63d0\u4f9b\u7684\u65b9\u6cd5\uff1a byte byteValue () short shortValue () abstract int intValue () abstract long longValue () abstract float floatValue () abstract double doubleValue () 86 \u88c5\u7bb1\u4e0e\u62c6\u7bb1 Integer Integer obj = new Integer ( 12 ) ; int x = obj . intValue (); System . out . println ( x ) ; // 12 boolean booleanValue () JDK >= 1.5 \u81ea\u52a8\u88c5\u7bb1\u62c6\u7bb1 JDK >= 1.9 \u8fc7\u671f Integer obj = 2 ; int x = obj ; // \u76f4\u63a5\u53c2\u4e0e\u6570\u5b66\u8fd0\u7b97 System . out . println ( x * obj ) ; // 4 \u81ea\u52a8\u88c5\u7bb1\u597d\u5904\u662fObject\u53ef\u76f4\u63a5\u63a5\u6536\u57fa\u672c\u6570\u636e\u7c7b\u578b // \u81ea\u52a8\u88c5\u7bb1\u4e3aInteger\uff0c\u518d\u81ea\u52a8\u5411\u4e0a\u8f6c\u578b\u4e3aObject Object obj = 2 ; // \u5148\u5411\u4e0b\u8f6c\u578b\u4e3aInteger\uff0c\u518d\u81ea\u52a8\u62c6\u7bb1 int x = ( Integer ) obj ; \u76f8\u7b49\u5224\u65ad\uff0c\u4e00\u5b9a\u4f7f\u7528equals\u5b8c\u6210 Integer x = 12 ; Integer y = 12 ; System . out . println ( x == y ); // true Integer x = 127 ; Integer y = 127 ; System . out . println ( x == y ); // true Integer x = 128 ; Integer y = 128 ; System . out . println ( x == y ); // false System . out . println ( x . equals ( y )); // true Integer x = - 128 ; Integer y = - 128 ; System . out . println ( x == y ); // true Integer x = - 129 ; Integer y = - 129 ; System . out . println ( x == y ); // false","title":"\u7b2c15 \u7ae0 \uff1a Annotation\u6ce8\u89e3"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#15-annotation","text":"","title":"\u7b2c15 \u7ae0 \uff1a Annotation\u6ce8\u89e3"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#71-annotation","text":"JDK>=1.5 \u4f5c\u7528 1\u3001\u51cf\u5c11\u7a0b\u5e8f\u914d\u7f6e\u7684\u4ee3\u7801 2\u3001\u8fdb\u884c\u7ed3\u6784\u5316\u5b9a\u4e49 \u4ee5\u6ce8\u89e3\u7684\u5f62\u5f0f\u5b9e\u73b0\u7a0b\u5e8f\u5f00\u53d1 \u7a0b\u5e8f\u4ee3\u7801\uff08\u8d44\u6e90\u8c03\u5ea6\uff09 \u8d44\u6e90\uff1a\u5173\u7cfb\u578b\u6570\u636e\u5e93 + NoSQL\u7cfb\u7edf + \u6d88\u606f\u670d\u52a1 + \u6570\u636e\u670d\u52a1 \u914d\u7f6e\u6587\u4ef6\uff1a\u6570\u636e\u5e93\u8fde\u63a5\u8d44\u6e90 + \u5176\u4ed6\u8fde\u63a5\u8d44\u6e90 \u7a0b\u5e8f\u5f00\u53d1\u7ed3\u6784\u7684\u5386\u53f2 \u7b2c\u4e00\u9636\u6bb5\uff1a\u6240\u6709\u914d\u7f6e\u90fd\u5199\u5728\u7a0b\u5e8f\u4ee3\u7801\u4e2d\uff0c\u4e0d\u5229\u4e8e\u7ef4\u62a4 \u7b2c\u4e8c\u9636\u6bb5\uff1a\u5f15\u5165\u914d\u7f6e\u6587\u4ef6\uff0c\u9002\u7528\u4e8e\u914d\u7f6e\u9879\u4e0d\u591a\u7684\u60c5\u51b5 \u7b2c\u4e09\u9636\u6bb5\uff1a\u914d\u7f6e\u4fe1\u606f\u91cd\u65b0\u5199\u56de\u7a0b\u5e8f\u91cc\uff0c\u5229\u7528\u7279\u6b8a\u6807\u8bb0\u4e0e\u4ee3\u7801\u5206\u79bb @Override @Deprecated @SuppressWarnings","title":"71 Annotation\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#72","text":"\u95ee\u9898\uff1a 1\u3001\u7ee7\u627f\u5fd8\u8bb0\u5199extends 2\u3001\u8986\u5199\u65b9\u6cd5\u5355\u8bcd\u62fc\u9519 @Override \u660e\u786e\u8868\u793a\u8be5\u65b9\u6cd5\u662f\u8986\u5199\u65b9\u6cd5 \u7a0b\u5e8f\u7f16\u8bd1\u65f6\u68c0\u67e5\u9519\u8bef\uff0c\u4fdd\u8bc1\u8986\u5199\u51c6\u786e\u6027 class Resource { public void connect (){ System . out . println ( \"\u8d44\u6e90\u8fde\u63a5\" ); } } class Database extends Resource { @Override public void connect (){ System . out . println ( \"\u6570\u636e\u5e93\u8d44\u6e90\u8fde\u63a5\" ); } } class Demo { public static void main ( String [] args ) { Database db = new Database (); // \u8c03\u7528\u5b50\u7c7b\u7684\u65b9\u6cd5 db . connect (); // \u6570\u636e\u5e93\u8d44\u6e90\u8fde\u63a5 } }","title":"72 \u51c6\u786e\u8986\u5199"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#73","text":"@Deprecated \u8f6f\u4ef6\u9879\u76ee\u8fed\u4ee3\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u80fd\u6709\u7684\u5730\u65b9\u8003\u8651\u4e0d\u5468\uff0c\u4e0d\u80fd\u76f4\u63a5\u5220\u9664\u8fd9\u4e9b\u64cd\u4f5c \u7ed9\u4e00\u4e2a\u8fc7\u6e21\u65f6\u95f4\uff0c\u8001\u7cfb\u7edf\u53ef\u4ee5\u7ee7\u7eed\u7528\uff0c\u65b0\u9879\u76ee\u4e0d\u8981\u7528\u4e86 class Database { @Deprecated public void connect (){ System . out . println ( \"\u6570\u636e\u5e93\u8d44\u6e90\u8fde\u63a5\" ); } public void connection (){ System . out . println ( \"\u65b0\u7684\u65b9\u5f0f\uff1a\u6570\u636e\u5e93\u8d44\u6e90\u8fde\u63a5\" ); } } class Demo { public static void main ( String [] args ) { Database db = new Database (); db . connect (); /* \u6ce8: Demo.java\u4f7f\u7528\u6216\u8986\u76d6\u4e86\u5df2\u8fc7\u65f6\u7684 API\u3002 \u6ce8: \u6709\u5173\u8be6\u7ec6\u4fe1\u606f, \u8bf7\u4f7f\u7528 -Xlint:deprecation \u91cd\u65b0\u7f16\u8bd1\u3002 \u6570\u636e\u5e93\u8d44\u6e90\u8fde\u63a5 */ } }","title":"73 \u8fc7\u671f\u58f0\u660e"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#74","text":"\u9690\u85cf\u8b66\u544a\u63d0\u793a class Database { @Deprecated public void connect (){ System . out . println ( \"\u6570\u636e\u5e93\u8d44\u6e90\u8fde\u63a5\" ); } } class Demo { // \u9690\u85cf deprecation \u8b66\u544a @SuppressWarnings ({ \"deprecation\" }) public static void main ( String [] args ) { Database db = new Database (); db . connect (); // \u6570\u636e\u5e93\u8d44\u6e90\u8fde\u63a5 } }","title":"74 \u538b\u5236\u8b66\u544a"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#16","text":"","title":"\u7b2c16 \u7ae0 \uff1a \u591a\u6001\u6027"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#75","text":"\u591a\u6001\u662f\u5728\u7ee7\u627f\u7684\u57fa\u7840\u4e0a\u6269\u5c55\u51fa\u6765\u7684\u6982\u5ff5\uff0c\u5b9e\u73b0\u7236\u5b50\u7c7b\u4e4b\u95f4\u7684\u8f6c\u6362\u5904\u7406 Java\u4e2d\u591a\u6001\u7684\u4e24\u79cd\u5b9e\u73b0\u6a21\u5f0f 1\u3001\u65b9\u6cd5\u591a\u6001\u6027 -\u65b9\u6cd5\u91cd\u8f7d\uff1a\u540c\u4e00\u4e2a\u65b9\u6cd5\u540d\u79f0\u53ef\u4ee5\u6839\u636e\u4f20\u5165\u7684\u53c2\u6570\u7c7b\u578b\uff0c\u4e2a\u6570\u7684\u4e0d\u540c\uff0c\u5b9e\u73b0\u4e0d\u540c\u529f\u80fd\u7684\u6267\u884c -\u65b9\u6cd5\u8986\u5199\uff1a\u540c\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5728\u4e0d\u540c\u5b50\u7c7b\u4e2d\u6709\u4e0d\u540c\u7684\u5b9e\u73b0 2\u3001\u5bf9\u8c61\u591a\u6001\u6027\uff08\u7236\u5b50\u4e4b\u95f4\u8f6c\u6362\u5904\u7406\uff09 -\u5bf9\u8c61\u5411\u4e0a\u8f6c\u578b \u7236\u7c7b \u7236\u7c7b\u5b9e\u4f8b = \u5b50\u7c7b\u5b9e\u4f8b \uff08\u81ea\u52a8\u8f6c\u6362\uff09 -\u5bf9\u8c61\u5411\u4e0b\u8f6c\u578b \u5b50\u7c7b \u5b50\u7c7b\u5b9e\u4f8b = \uff08\u5b50\u7c7b\uff09\u7236\u7c7b\u5b9e\u4f8b \uff08\u5f3a\u5236\u8f6c\u6362\uff09 \u65b9\u6cd5\u91cd\u8f7d class Demo { public static void print (){ System . out . println ( \"\u9ed8\u8ba4\u8f93\u51fa\" ); } public static void print ( String message ){ System . out . println ( message ); } public static void main ( String [] args ) { Demo . print (); // \u9ed8\u8ba4\u8f93\u51fa Demo . print ( \"\u81ea\u5b9a\u4e49\u8f93\u51fa\" ); // \u81ea\u5b9a\u4e49\u8f93\u51fa } } \u65b9\u6cd5\u8986\u5199 class Database { public void connect (){ System . out . println ( \"\u6570\u636e\u5e93\u8fde\u63a5\" ); } } class MySQLDatabase extends Database { @Override public void connect (){ System . out . println ( \"MySQL\u6570\u636e\u5e93\u8fde\u63a5\" ); } } class RedisDatabase extends Database { @Override public void connect (){ System . out . println ( \"Redis\u6570\u636e\u5e93\u8fde\u63a5\" ); } } class Demo { public static void main ( String [] args ) { Database db = null ; db = new Database (); db . connect (); // \u6570\u636e\u5e93\u8fde\u63a5 db = new MySQLDatabase (); db . connect (); // MySQL\u6570\u636e\u5e93\u8fde\u63a5 db = new RedisDatabase (); db . connect (); // Redis\u6570\u636e\u5e93\u8fde\u63a5 } }","title":"75 \u591a\u6001\u6027\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#76","text":"\u5411\u4e0a\u8f6c\u578b\u7684\u4f18\u52bf\uff1a\u53c2\u6570\u53ef\u4ee5\u7edf\u4e00\u8bbe\u8ba1\uff08\u63a5\u6536\u6216\u8fd4\u56de\u53c2\u6570\u7edf\u4e00\u6027\uff09 \u91cd\u8f7d\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u76f8\u540c\u7684\u6548\u679c\uff0c\u5982\u679c\u5b50\u7c7b\u8fc7\u591a\uff0c\u4ee3\u7801\u4e0d\u5229\u7ef4\u62a4 class Database { public void connect (){ System . out . println ( \"\u6570\u636e\u5e93\u8fde\u63a5\" ); } } class MySQLDatabase extends Database { @Override public void connect (){ System . out . println ( \"MySQL\u6570\u636e\u5e93\u8fde\u63a5\" ); } } class RedisDatabase extends Database { @Override public void connect (){ System . out . println ( \"Redis\u6570\u636e\u5e93\u8fde\u63a5\" ); } } class Demo { // \u63a5\u6536\u7edf\u4e00\u7684\u53c2\u6570 Database \u548c\u5176\u5b50\u7c7b public static void connect ( Database db ){ db . connect (); } public static void main ( String [] args ) { // \u76f8\u5f53\u4e8e Database db = new Database() Demo . connect ( new Database ()) ; // \u81ea\u52a8\u5411\u4e0a\u8f6c\u578b \u76f8\u5f53\u4e8e Database db = new MySQLDatabase() Demo . connect ( new MySQLDatabase ()) ; // \u81ea\u52a8\u5411\u4e0a\u8f6c\u578b \u76f8\u5f53\u4e8e Database db = new RedisDatabase() Demo . connect ( new RedisDatabase ()) ; } }","title":"76 \u5bf9\u8c61\u5411\u4e0a\u8f6c\u578b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#77","text":"\u5411\u4e0b\u8f6c\u578b\u4e3b\u8981\u7279\u70b9\uff1a \u9700\u8981\u4f7f\u7528\u5230\u5b50\u7c7b\u81ea\u5df1\u7684\u7279\u6b8a\u65b9\u6cd5 class Person { public void eat (){ System . out . println ( \"I can eat\" ); } } class SuperMan extends Person { public void fly (){ System . out . println ( \"I can fly\" ); } } class Demo { public static void main ( String [] args ) { // \u5411\u4e0a\u81ea\u52a8\u8f6c\u578b Person person = new SuperMan () ; person . eat () ; // I can eat // \u5411\u4e0b\u5f3a\u5236\u8f6c\u578b SuperMan superMan = ( SuperMan ) person ; superMan . fly () ; // I can fly } } \u5411\u4e0a\u63cf\u8ff0\u7684\u662f\u4e00\u4e9b\u516c\u5171\u7279\u5f81 \u5411\u4e0b\u63cf\u8ff0\u7684\u662f\u5b50\u7c7b\u7279\u6b8a\u7684\u5b9a\u4e49, \u4e0d\u5b89\u5168 \u5411\u4e0b\u8f6c\u578b\u4e4b\u524d\u4e00\u5b9a\u8981\u6709\u5411\u4e0a\u8f6c\u578b","title":"77 \u5bf9\u8c61\u5411\u4e0b\u8f6c\u578b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#78-instanceof","text":"\u8bed\u6cd5 \u5bf9\u8c61 instanceof \u7c7b \u5982\u679c\u8981\u6267\u884c\u5411\u4e0b\u8f6c\u578b\u8981\u5148\u505a\u7c7b\u578b\u5224\u65ad // \u5411\u4e0a\u81ea\u52a8\u8f6c\u578b Person person = new SuperMan () ; person instanceof Person ; // true person instanceof SuperMan ; // true // \u5411\u4e0b\u5f3a\u5236\u8f6c\u578b SuperMan superMan = ( SuperMan ) person ; superMan instanceof Person ; // true superMan instanceof SuperMan ; // true","title":"78 instanceof\u5173\u952e\u5b57"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#17-object","text":"","title":"\u7b2c17 \u7ae0 \uff1a Object\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#79-object","text":"Java\u4e2d\u53ea\u6709\u4e00\u4e2a\u7c7b\u4e0d\u5b58\u5728\u7ee7\u627f\u5173\u7cfb\uff0cObject\u53ef\u4ee5\u63a5\u6536\u6240\u6709\u7684\u6570\u636e\u7c7b\u578b \u6240\u6709\u7c7b\u9ed8\u8ba4\u90fd\u662fObject\u5b50\u7c7b \u4e24\u79cd\u5b9a\u4e49\u65b9\u5f0f\u7b49\u4ef7 class Person {} class Person extends Object {} Object\u7c7b\u63d0\u4f9b\u65e0\u53c2\u6784\u9020\u65b9\u6cd5 class Person {} class Demo { public static void main ( String [] args ) { Object obj = new Person () ; if ( obj instanceof Person ){ Person person = ( Person ) obj ; } } } Object\u53ef\u4ee5\u63a5\u6536\u6240\u6709\u5f15\u7528\u7c7b\u578b\uff0c\u4e07\u80fd\u6570\u636e\u7c7b\u578b \u9002\u5408\u8fdb\u884c\u7a0b\u5e8f\u7684\u6807\u51c6\u8bbe\u8ba1 Object\u63a5\u6536\u6570\u7ec4 Object obj = new int [] { 1 , 2 , 3 } ; if ( obj instanceof int []){ int [] data = ( int []) obj ; for ( int x : data ){ System . out . println ( x ); } }","title":"79 Object\u7c7b\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#80","text":"toString() \u4eceObject\u7ee7\u627f\u800c\u6765 \u5bf9\u8c61\u76f4\u63a5\u8f93\u51fa\u8c03\u7528\u7684\u662ftoString() class Person { private String name ; private int age ; public Person (){} public Person ( String name , int age ){ this . name = name ; this . age = age ; } @Override public String toString (){ return \"name: \" + this . name + \" age: \" + this . age ; } } class Demo { public static void main ( String [] args ) { Person person = new Person ( \"\u5f20\u4e09\" , 23 ); System . out . println ( person ); // name: \u5f20\u4e09 age: 23 } }","title":"80 \u53d6\u5f97\u5bf9\u8c61\u4fe1\u606f"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#81","text":"Object\u63d0\u4f9b equals\u6bd4\u8f83\u5bf9\u8c61\u5185\u5bb9 \u9ed8\u8ba4\u6bd4\u8f83\u5bf9\u8c61\u5730\u5740 class Person { private String name ; private int age ; public Person (){} public Person ( String name , int age ){ this . name = name ; this . age = age ; } @Override public boolean equals ( Object obj ){ // \u5904\u7406null if ( obj == null ){ return false ; } // \u540c\u5bf9\u8c61\u6bd4\u8f83 if ( this == obj ){ return true ; } // \u4e0d\u540c\u7c7b\u578b\u6bd4\u8f83 if (!( obj instanceof Person )){ return false ; } Person person = ( Person ) obj ; return this . name == person . name && this . age == person . age ; } } class Demo { public static void main ( String [] args ) { Person person1 = new Person ( \"\u5f20\u4e09\" , 23 ); Person person2 = new Person ( \"\u5f20\u4e09\" , 23 ); System . out . println ( person1 . equals ( person1 )); // true System . out . println ( person1 . equals ( person2 )); // true System . out . println ( person1 . equals ( null )); // false System . out . println ( person1 . equals ( \"\u674e\u56db\" )); // false } }","title":"81 \u5bf9\u8c61\u6bd4\u8f83"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#18","text":"","title":"\u7b2c18 \u7ae0 \uff1a \u62bd\u8c61\u7c7b\u7684\u5b9a\u4e49\u4e0e\u4f7f\u7528"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#82","text":"\u7c7b\u7ee7\u627f\u4e3b\u8981\u4f5c\u7528\u5728\u4e8e\u53ef\u4ee5\u6269\u5145\u5df2\u6709\u7c7b\u7684\u529f\u80fd\uff0c\u4e0d\u8fc7\u4e0d\u80fd\u5f3a\u5236\u5b50\u7c7b\u5fc5\u987b\u8986\u5199\u54ea\u4e9b\u7c7b \u7236\u7c7b\u8bbe\u8ba1\u4f18\u5148\u8003\u8651\u62bd\u8c61\u7c7b \u62bd\u8c61\u7c7b\uff1a\u5bf9\u5b50\u7c7b\u8986\u5199\u65b9\u6cd5\u8fdb\u884c\u7ea6\u5b9a \u62bd\u8c61\u65b9\u6cd5\uff1aabstract\u5173\u952e\u5b57\u5b9a\u4e49\u5e76\u4e14\u6ca1\u6709\u63d0\u4f9b\u65b9\u6cd5\u4f53\u7684\u65b9\u6cd5 \u62bd\u8c61\u7c7b\uff1a\u62bd\u8c61\u65b9\u6cd5\u6240\u5728\u7684\u7c7b\u5fc5\u987b\u4e3a\u62bd\u8c61\u7c7b \u62bd\u8c61\u7c7b\u4e0d\u662f\u5b8c\u6574\u7684\u7c7b\uff0c\u4e0d\u80fd\u76f4\u63a5\u5b9e\u4f8b\u5316 \u4f7f\u7528\u62bd\u8c61\u7c7b\uff1a 1\u3001\u62bd\u8c61\u7c7b\u5fc5\u987b\u63d0\u4f9b\u5b50\u7c7b\uff0c\u5b50\u7c7b\u4f7f\u7528extends\u7ee7\u627f\u62bd\u8c61\u7c7b 2\u3001\u62bd\u8c61\u7c7b\u5b50\u7c7b\u4e00\u5b9a\u8981\u8986\u5199\u62bd\u8c61\u7c7b\u4e2d\u7684\u5168\u90e8\u62bd\u8c61\u65b9\u6cd5 3\u3001\u62bd\u8c61\u7c7b\u7684\u5bf9\u8c61\u5b9e\u4f8b\u5316\u53ef\u4ee5\u5229\u7528\u5bf9\u8c61\u591a\u6001\u6027\u901a\u8fc7\u5b50\u7c7b\u5411\u4e0a\u8f6c\u578b\u7684\u65b9\u5f0f\u5b8c\u6210 \u62bd\u8c61\u7c7b\u53ea\u662f\u6bd4\u666e\u901a\u7c7b\u589e\u52a0\u4e86\u62bd\u8c61\u65b9\u6cd5\uff0c\u4ee5\u53ca\u5bf9\u5b50\u7c7b\u7684\u5f3a\u5236\u6027\u8986\u5199\u8981\u6c42\uff0c\u4f7f\u7528\u548c\u666e\u901a\u7c7b\u5b8c\u5168\u76f8\u540c \u6838\u5fc3\u95ee\u9898\uff1a\u62bd\u8c61\u7c7b\u65e0\u6cd5\u76f4\u63a5\u5b9e\u4f8b\u5316 \u4e3b\u8981\u76ee\u7684\uff1a\u8fdb\u884c\u8fc7\u6e21\u64cd\u4f5c\uff0c\u89e3\u51b3\u7c7b\u7ee7\u627f\u95ee\u9898\u4e2d\u4ee3\u7801\u91cd\u590d\u5904\u7406 // \u5b9a\u4e49\u62bd\u8c61\u7c7b abstract class Database { private String type ; // \u62bd\u8c61\u65b9\u6cd5 public abstract void connect () ; // \u666e\u901a\u65b9\u6cd5 public void setType ( String type ){ this . type = type ; } public String getType (){ return this . type ; } } class MySQLDatabase extends Database { @Override public void connect (){ System . out . println ( \"MySQL\u6570\u636e\u5e93\u8fde\u63a5\" ); } } class Demo { public static void main ( String [] args ) { Database db = new MySQLDatabase (); db . connect (); // MySQL\u6570\u636e\u5e93\u8fde\u63a5 } }","title":"82 \u62bd\u8c61\u7c7b\u57fa\u672c\u6982\u5ff5"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#83","text":"\u6ce8\u610f\u8981\u70b9\uff1a 1\u3001\u5b9a\u4e49\u62bd\u8c61\u7c7b\u4e0d\u80fd\u4f7f\u7528final \u5173\u952e\u5b57\u5b9a\u4e49\uff0c\u62bd\u8c61\u7c7b\u5fc5\u987b\u6709\u5b50\u7c7b 2\u3001\u62bd\u8c61\u7c7b\u662f\u666e\u901a\u7c7b\u7684\u52a0\u5f3a\u7248\uff0c\u62bd\u8c61\u7c7b\u53ef\u4ee5\u63d0\u4f9b\u6784\u9020\u65b9\u6cd5 3\u3001\u62bd\u8c61\u7c7b\u5141\u8bb8\u6ca1\u6709\u62bd\u8c61\u65b9\u6cd5\uff0c\u65e0\u6cd5new\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u5fc5\u987b\u7531\u5b50\u7c7b\u5b8c\u6210 4\u3001\u62bd\u8c61\u7c7b\u53ef\u4ee5\u63d0\u4f9bstatic \u65b9\u6cd5\uff0c\u4e0d\u53d7\u62bd\u8c61\u7c7b\u7ed3\u6784\u9650\u5236 static \u65b9\u6cd5\u6c38\u8fdc\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u8c03\u7528 // \u5b9a\u4e49\u62bd\u8c61\u7c7b abstract class Database {} // \u5b50\u7c7b\u7ee7\u627f class MySQLDatabase extends Database {} class Demo { public static void main ( String [] args ) { Database db = new MySQLDatabase (); } }","title":"83 \u62bd\u8c61\u7c7b\u7684\u76f8\u5173\u8bf4\u660e"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#84","text":"\u62bd\u8c61\u7c7b\u7684\u5b9a\u4e49\u6bd4\u666e\u901a\u7c7b\u66f4\u9ad8\u4e00\u5c42 \u62bd\u8c61\u7c7b\u597d\u5904 1\u3001\u5bf9\u5b50\u7c7b\u65b9\u6cd5\u7edf\u4e00\u7ba1\u7406 2\u3001\u63d0\u4f9b\u4e00\u4e9b\u666e\u901a\u65b9\u6cd5\uff0c\u5e76\u4e14\u666e\u901a\u65b9\u6cd5\u53ef\u8c03\u7528\u62bd\u8c61\u65b9\u6cd5 // \u5b9a\u4e49\u62bd\u8c61\u7c7b abstract class Action { public static final int EAT = 1 ; public static final int SLEEP = 2 ; public void command ( int code ){ switch ( code ){ case EAT :{ this . eat (); break ; } case SLEEP : { this . sleep (); break ; } case EAT + SLEEP : { this . eat (); this . sleep (); break ; } } } public abstract void eat (); public abstract void sleep (); } class Dog extends Action { public void eat (){ System . out . println ( \"Dog eat\" ); } public void sleep (){ System . out . println ( \"Dog sleep\" ); } } class Cat extends Action { public void eat (){ System . out . println ( \"Cat eat\" ); } public void sleep (){ System . out . println ( \"Cat sleep\" ); } } class Demo { public static void main ( String [] args ) { Action dog = new Dog (); dog . command ( Action . EAT ); // Dog eat Action cat = new Cat (); cat . command ( Action . EAT + Action . SLEEP ); // Cat eat // Cat sleep } }","title":"84 \u6a21\u677f\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#85","text":"\u5305\u88c5\u7c7b\u9488\u5bf9\u57fa\u672c\u6570\u636e\u7c7b\u578b\u5bf9\u8c61\u8f6c\u6362\u800c\u5b9e\u73b0 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e0d\u662f\u4e00\u4e2a\u7c7b \u57fa\u672c\u6570\u636e\u7c7b\u578b\u4ee5\u7c7b\u7684\u5f62\u5f0f\u8fdb\u884c\u5904\u7406\uff0c\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u5305\u88c5 \u88c5\u7bb1\uff1a\u5c06\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4fdd\u5b58\u5230\u5305\u88c5\u7c7b\u4e2d \u62c6\u7bb1\uff1a\u4ece\u5305\u88c5\u7c7b\u5bf9\u8c61\u4e2d\u83b7\u53d6\u57fa\u672c\u6570\u636e\u7c7b\u578b // \u5b9a\u4e49\u5305\u88c5\u7c7b class Int { private int data ; public Int ( int data ){ this . data = data ; } public int intValue (){ return this . data ; } } class Demo { public static void main ( String [] args ) { // \u88c5\u7bb1 \u57fa\u672c\u6570\u636e\u7c7b\u578b => \u5bf9\u8c61\u7c7b\u578b Object obj = new Int ( 12 ) ; // \u62c6\u7bb1 \u5bf9\u8c61\u7c7b\u578b => \u57fa\u672c\u6570\u636e\u7c7b\u578b int x = (( Int ) obj ). intValue (); System . out . println ( x ) ; // 12 } } \u57fa\u672c\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u5305\u88c5\u7c7b\u540e\uff0c\u53ef\u4ee5\u5411\u5bf9\u8c61\u4e00\u6837\u8fdb\u884c\u5f15\u7528\u4f20\u9012 8\u79cd\u57fa\u672c\u6570\u636e\u7c7b\u578b Object - \u6570\u503c\u578b Number { abstract } - Byte : byte - 8 - Short : short - 16 - Integer : int - 32 - Long : long - 64 - Float : float - 32 - Double : double - 64 - \u5e03\u5c14\u578b Boolean \uff1a boolean - \u5b57\u7b26\u578b Character \uff1a char - 16 Java\u4e2d\u6709\u4e24\u79cd\u5305\u88c5\u7c7b\uff1a 1\u3001\u5bf9\u8c61\u578b\u5305\u88c5\u7c7bObject\u5b50\u7c7b\uff1aBoolean\uff0cCharacter 2\u3001\u6570\u503c\u578b\u5305\u88c5\u7c7bNumber\u5b50\u7c7b\uff1aByte\uff0cShort\uff0c Integer\uff0c Long\uff0c Float\uff0c Double Number\u7c7b\u63d0\u4f9b\u7684\u65b9\u6cd5\uff1a byte byteValue () short shortValue () abstract int intValue () abstract long longValue () abstract float floatValue () abstract double doubleValue ()","title":"85 \u5305\u88c5\u7c7b\u5b9e\u73b0\u539f\u7406\u5206\u6790"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u591a\u6001\u62bd\u8c61/#86","text":"Integer Integer obj = new Integer ( 12 ) ; int x = obj . intValue (); System . out . println ( x ) ; // 12 boolean booleanValue () JDK >= 1.5 \u81ea\u52a8\u88c5\u7bb1\u62c6\u7bb1 JDK >= 1.9 \u8fc7\u671f Integer obj = 2 ; int x = obj ; // \u76f4\u63a5\u53c2\u4e0e\u6570\u5b66\u8fd0\u7b97 System . out . println ( x * obj ) ; // 4 \u81ea\u52a8\u88c5\u7bb1\u597d\u5904\u662fObject\u53ef\u76f4\u63a5\u63a5\u6536\u57fa\u672c\u6570\u636e\u7c7b\u578b // \u81ea\u52a8\u88c5\u7bb1\u4e3aInteger\uff0c\u518d\u81ea\u52a8\u5411\u4e0a\u8f6c\u578b\u4e3aObject Object obj = 2 ; // \u5148\u5411\u4e0b\u8f6c\u578b\u4e3aInteger\uff0c\u518d\u81ea\u52a8\u62c6\u7bb1 int x = ( Integer ) obj ; \u76f8\u7b49\u5224\u65ad\uff0c\u4e00\u5b9a\u4f7f\u7528equals\u5b8c\u6210 Integer x = 12 ; Integer y = 12 ; System . out . println ( x == y ); // true Integer x = 127 ; Integer y = 127 ; System . out . println ( x == y ); // true Integer x = 128 ; Integer y = 128 ; System . out . println ( x == y ); // false System . out . println ( x . equals ( y )); // true Integer x = - 128 ; Integer y = - 128 ; System . out . println ( x == y ); // true Integer x = - 129 ; Integer y = - 129 ; System . out . println ( x == y ); // false","title":"86 \u88c5\u7bb1\u4e0e\u62c6\u7bb1"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/","text":"\u7b2c10 \u7ae0 \uff1a String\u7c7b\u7279\u70b9\u5206\u6790 42 String\u7c7b\u7b80\u4ecb \u53cc\u5f15\u53f7\u5b9a\u4e49 +\u8fde\u63a5\u5b57\u7b26\u4e32 \u5b57\u7b26\u521b\u4e32\u4e0d\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b \u5176\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6570\u7ec4\uff0c\u6bcf\u4e00\u4e2a\u5b57\u7b26\u90fd\u4fdd\u5b58\u5230\u6570\u7ec4\u4e2d JDK 1.9\u652f\u6301\u7684\u5b57\u7b26\u4e32\u5f62\u5f0f\u589e\u591a\u4e86 JDK 1.9 \u4e4b\u540e\u5b57\u7b26\u4e32\u6570\u7ec4\u4f7f\u7528byte\u7c7b\u578b JDK 1.8 \u5b57\u7b26\u4e32\u6570\u7ec4\u4f7f\u7528char\u7c7b\u578b \u5b57\u7b26\u4e32\u6570\u7ec4\u662f\u5b57\u7b26\u7684\u5305\u88c5 \u5b57\u7b26\u4e32\u4e0d\u53ef\u53d8 // \u76f4\u63a5\u8d4b\u503c String name = \"\u5b57\u7b26\u4e32\" ; // \u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316 String company = new String ( \"\u5b9e\u4f8b\u5316\u5b57\u7b26\u4e32\" ) ; 43 \u5b57\u7b26\u4e32\u6bd4\u8f83 int\u578b\u53d8\u91cf\u4f7f\u7528 == \u5224\u65ad\u76f8\u7b49 String \u7c7b\u578b\u4f7f\u7528 equals(String str) String name1 = \"\u5b57\u7b26\u4e32\" ; String name2 = \"\u5b57\u7b26\u4e32\" ; String name3 = new String ( \"\u5b57\u7b26\u4e32\" ) ; System . out . println ( name1 == name2 ) ; // true System . out . println ( name1 == name3 ) ; // false System . out . println ( name1 . equals ( name2 )); // true System . out . println ( name1 . equals ( name3 )); // true \u533a\u522b == \u6bd4\u8f83\u6570\u503c, \u5982\u679c\u7528\u4e8e\u5bf9\u8c61\u6bd4\u8f83\uff0c\u5219\u6bd4\u8f83\u5185\u5b58\u5730\u5740 equals \u6bd4\u8f83\u5b57\u7b26\u4e32\u5185\u5bb9 44 \u5b57\u7b26\u4e32\u5e38\u91cf \u53cc\u5f15\u53f7\u63cf\u8ff0\u7684\u662fString\u7c7b\u7684\u4e00\u4e2a\u533f\u540d\u5bf9\u8c61 \u5b57\u7b26\u4e32\u76f4\u63a5\u8d4b\u503c\uff0c\u662f\u5c06\u4e00\u4e2a\u533f\u540d\u5b57\u7b26\u4e32\u5bf9\u8c61\u5f15\u7528\u8d4b\u503c \u5b57\u7b26\u4e32\u6bd4\u8f83\u7684\u65f6\u5019\uff0c\u5b57\u7b26\u4e32\u5e38\u91cf\u5199\u524d\u9762 String name = null ; System . out . println ( \"\u5b57\u7b26\u4e32\" . equals ( name )); // false System . out . println ( name . equals ( \"\u5b57\u7b26\u4e32\" )); // NullPointerException 45 String\u7c7b\u5bf9\u8c61\u4e24\u79cd\u5b9e\u4f8b\u5316\u65b9\u5f0f\u6bd4\u8f83 \u5b57\u7b26\u4e32\u6c60 \u76f4\u63a5\u8d4b\u503c\u5b57\u7b26\u4e32\uff0c\u4f1a\u5728\u5b57\u7b26\u4e32\u6570\u636e\u6c60\u81ea\u52a8\u4fdd\u5b58\uff0c\u5b9e\u4f8b\u91cd\u7528\uff0c\u63d0\u9ad8\u64cd\u4f5c\u6027\u80fd \u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316\uff0c\u4f1a\u5f00\u8f9f\u65b0\u7684\u5806\u5185\u5b58\u7a7a\u95f4 \u624b\u5de5\u5165\u6c60 Strint(\"\").intern() String name1 = new String ( \"\u5b57\u7b26\u4e32\" ) ; String name2 = \"\u5b57\u7b26\u4e32\" ; System . out . println ( name1 == name2 ) ; // false String name1 = new String ( \"\u5b57\u7b26\u4e32\" ). intern () ; String name2 = \"\u5b57\u7b26\u4e32\" ; System . out . println ( name1 == name2 ) ; // true 46 String\u5bf9\u8c61\u5e38\u91cf\u6c60 \u5bf9\u8c61\u6c60\u4e3b\u8981\u76ee\u7684\u662f\u5b9e\u73b0\u6570\u636e\u7684\u5171\u4eab\u5904\u7406 \u9759\u6001\u5e38\u91cf\u6c60\uff1a\u7c7b.class\u52a0\u8f7d\u65f6\u81ea\u52a8\u5206\u914d String name1 = \"\u5b57\u7b26\u4e32\" ; String name2 = \"\u5b57\" + \"\u7b26\" + \"\u4e32\" ; System . out . println ( name1 == name2 ) ; // true \u8fd0\u884c\u65f6\u5e38\u91cf\u6c60\uff1a\u7c7b.class\u52a0\u8f7d\u540e\u7684\u5e38\u91cf\u6c60 String name1 = \"\u5b57\u7b26\u4e32\" ; String str = \"\u7b26\" ; String name2 = \"\u5b57\" + str + \"\u4e32\" ; System . out . println ( name1 == name2 ) ; // false \u7a0b\u5e8f\u52a0\u8f7d\u65f6\u5e76\u4e0d\u786e\u5b9astr \u662f\u4ec0\u4e48\u5185\u5bb9\uff0c\u53ef\u4ee5\u88ab\u4fee\u6539 47 \u5b57\u7b26\u4e32\u4fee\u6539\u5206\u6790 \u5b57\u7b26\u4e32\u5185\u5bb9\u4e0d\u53ef\u4fee\u6539 String\u7c7b\u662f\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\uff0c\u957f\u5ea6\u4e0d\u53ef\u4ee5\u88ab\u6539\u53d8 \u5b57\u7b26\u4e32\u62fc\u63a5\uff0c\u5e76\u4e0d\u662f\u4fee\u6539\u4fee\u6539\u4e86\u5b57\u7b26\u4e32\uff0c\u800c\u662f\u4fee\u6539\u4e86\u5b57\u7b26\u4e32\u7684\u6307\u5411 String\u7c7b\u4e0d\u8981\u8fdb\u884c\u9891\u7e41\u4fee\u6539\uff0c\u4f1a\u4ea7\u751f\u5783\u573e String str = \"\u5b57\" ; // -> \u5b57 str += \"\u7b26\" ; // -> \u7b26 \u5b57\u7b26 str += \"\u4e32\" ; // -> \u4e32 \u5b57\u7b26\u4e32 System . out . println ( str ) ; // \u5b57\u7b26\u4e32 48 \u4e3b\u65b9\u6cd5\u7ec4\u6210\u5206\u6790 public static void main ( String [] args ) { } \u4e3b\u65b9\u6cd5\u662f\u4e00\u5207\u7684\u5f00\u59cb\u70b9 public \u6743\u9650\u516c\u5f00 static \u7531\u7c7b\u76f4\u63a5\u8c03\u7528 void \u65e0\u8fd4\u56de main \u56fa\u5b9a\u65b9\u6cd5\u540d String[] args \u63a5\u6536\u542f\u52a8\u53c2\u6570\uff1b\u53c2\u6570\u672c\u8eab\u6709\u7a7a\u683c\uff0c\u9700\u8981\u7528\u53cc\u5f15\u53f7 class Demo { public static void main ( String [] args ) { for ( String arg : args ){ System . out . println ( arg ) ; } } } $ java Demo first \"\u4f60 \u597d\" first \u4f60 \u597d \u7b2c11 \u7ae0 \uff1a String\u7c7b\u5e38\u7528\u65b9\u6cd5 49 JavaDoc\u6587\u6863\u7b80\u4ecb Java JDK 1.9\u4e4b\u524d \u52a0\u8f7dJVM\u5c31\u52a0\u8f7d\u5e38\u7528\u7c7b\u5e93 Java JDK 1.9 \u6a21\u5757\u5316 \u6587\u6863\u7ed3\u6784\uff1a \u5b8c\u6574\u5b9a\u4e49 \u76f8\u5173\u8bf4\u660e \u6210\u5458\u5c5e\u6027\u6458\u8981 \u6784\u9020\u65b9\u6cd5\u6458\u8981 Deprecated \u8868\u793a\u4e0d\u5efa\u8bae\u4f7f\u7528 \u65b9\u6cd5\u6458\u8981 \u65b9\u6cd5\u548c\u6210\u5458\u7684\u8be6\u7ec6\u89e3\u91ca https://docs.oracle.com/javase/8/docs/api/ 50 \u5b57\u7b26\u4e32\u4e0e\u5b57\u7b26\u6570\u7ec4 JDK 1.9\u4ee5\u524d\uff0c\u4f7f\u7528\u5b57\u7b26\u6570\u7ec4\u5305\u88c5\u5b9e\u73b0\u5b57\u7b26\u4e32 \u6784\u9020\u65b9\u6cd5 String(char[] value) String(char[] value, int offset, int count) \u666e\u901a\u65b9\u6cd5 char charAt(int index) \u83b7\u53d6\u6307\u5b9a\u7d22\u5f15\u5b57\u7b26\uff0c\u4e0b\u6807\u4ece0\u5f00\u59cb char[] toCharArray() \u5b57\u7b26\u4e32\u8f6c\u5b57\u7b26\u6570\u7ec4 \u5b9e\u4f8b\u4ee3\u7801\uff1a 1\u3001\u5c06\u5c0f\u5199\u5b57\u7b26\u8f6c\u4e3a\u5927\u5199 String str = \"helloworld\" ; char [] str_list = str . toCharArray (); for ( int i = 0 ; i < str_list . length ; i ++){ str_list [ i ] -= 32 ; // a 97 -> A 65 \u76f8\u5dee32 } System . out . println ( new String ( str_list )); // HELLOWORLD System . out . println ( new String ( str_list , 0 , 5 )); // HELLO 2\u3001\u5224\u65ad\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u5b57\u7b26\u662f\u5426\u90fd\u7531\u6570\u5b57\u7ec4\u6210 class Demo { public static void main ( String [] args ) { System . out . println ( isNumber ( \"hello\" )); // false System . out . println ( isNumber ( \"123\" )); // true } public static boolean isNumber ( String str ){ char [] charList = str . toCharArray (); for ( char c : charList ){ if ( c < '0' || c > '9' ){ return false ; } } return true ; } } \u4e2d\u6587\u5904\u7406\u4f7f\u7528char\u5b57\u7b26 51 \u5b57\u7b26\u4e32\u4e0e\u5b57\u8282\u6570\u7ec4 \u6784\u9020\u65b9\u6cd5 String(byte[] bytes) String(byte[] bytes, inf offset, int length) \u666e\u901a\u65b9\u6cd5 byte[] getBytes() \u5b57\u7b26\u4e32\u8f6c\u5b57\u8282\u6570\u7ec4 byte[] getBytes(String charsetName) \u7f16\u7801\u8f6c\u6362 \u5b57\u8282\u6709\u957f\u5ea6\u9650\u5236 -128 ~ 127 \u5b9e\u4f8b\uff1a \u901a\u8fc7\u5b57\u8282\u6570\u7ec4\u5c06\u5b57\u7b26\u4e32\u5b57\u7b26\u5c0f\u5199\u8f6c\u5927\u5199 String str = \"helloworld\" ; byte [] byte_list = str . getBytes (); for ( int i = 0 ; i < byte_list . length ; i ++){ byte_list [ i ] -= 32 ; // a 97 -> A 65 \u76f8\u5dee32 } System . out . println ( new String ( byte_list )); // HELLOWORLD System . out . println ( new String ( byte_list , 0 , 5 )); // HELLO 52 \u5b57\u7b26\u4e32\u6bd4\u8f83 boolean equals(String str) \u533a\u5206\u5927\u5c0f\u5199\u76f8\u7b49\u5224\u65ad boolean equalsIgnoreCase(String str) \u4e0d\u533a\u5206\u5927\u5c0f\u5199\u76f8\u7b49\u5224\u65ad // \u533a\u5206\u5927\u5c0f\u5199 \"HELLO\" . equals ( \"hello\" ); // false // \u4e0d\u533a\u5206\u5927\u5c0f\u5199 \"HELLO\" . equalsIgnoreCase ( \"hello\" ); // true int compareTo(String str) \u8fdb\u884c\u5b57\u7b26\u4e32\u5927\u5c0f\u6bd4\u8f83 int compareToIgnoreCase(String str) \u4e0d\u533a\u5206\u5927\u5c0f\u5199\u8fdb\u884c\u5b57\u7b26\u4e32\u5927\u5c0f\u6bd4\u8f83 \u5927\u4e8e>0 \u7b49\u4e8e=0 \u5c0f\u4e8e<0 \"HELLO\" . compareTo ( \"hello\" ); // -32 \"HELLO\" . compareToIgnoreCase ( \"hello\" ); // 0 53 \u5b57\u7b26\u4e32\u67e5\u627e boolean contains(String str) \u5224\u65ad\u5b50\u4e32\u662f\u5426\u5b58\u5728 JDK>=1.5 int indexOf(String str) \u4ece\u5f00\u5934\u67e5\u627e\u5b50\u5b57\u7b26\u4e32\u4f4d\u7f6e \u6ca1\u6709\u67e5\u5230\u8fd4\u56de -1 int indexOf(String str, int fromIndex) \u4ece\u6307\u5b9a\u4f4d\u7f6e\u67e5\u627e\u5b50\u5b57\u7b26\u4e32\u4f4d\u7f6e int lastIndexOf(String str) \u4ece\u540e\u5411\u524d\u67e5\u627e\u5b50\u5b57\u7b26\u4e32\u4f4d\u7f6e int lastIndexOf(String str, int fromIndex) \u4ece\u540e\u5411\u524d\u6307\u5b9a\u4f4d\u7f6e\u67e5\u627e\u5b50\u5b57\u7b26\u4e32\u4f4d\u7f6e boolean startsWith(String prefix) \u662f\u5426\u4ee5\u6307\u5b9a\u5b57\u7b26\u5f00\u5934 boolean startsWith(String prefix, int offset) \u6307\u5b9a\u4f4d\u7f6e\u5f00\u59cb\u662f\u5426\u4ee5\u6307\u5b9a\u5b57\u7b26\u5f00\u5934 boolean endsWith(String suffix) \u662f\u5426\u4ee5\u6307\u5b9a\u5b57\u7b26\u7ed3\u5c3e String str = \"Hello World\" ; str . contains ( \"Hello\" ); // true str . indexOf ( \"World\" ); // 6 str . indexOf ( \"World\" , 6 ); // 6 str . lastIndexOf ( \"World\" ); // 6 str . lastIndexOf ( \"World\" , 6 ); // 6 str . startsWith ( \"World\" ); // false str . startsWith ( \"World\" , 6 ); // true str . endsWith ( \"World\" ); // ture 54 \u5b57\u7b26\u4e32\u66ff\u6362 String replaceAll(String regex, String replacement) \u5168\u90e8\u66ff\u6362 String replaceFirst(String regex, String replacement) \u66ff\u6362\u9996\u4e2a String str = \"Hello World\" ; str . replaceAll ( \"l\" , \"X\" ); // HeXXo WorXd str . replaceFirst ( \"l\" , \"X\" ); // HeXlo World 55 \u5b57\u7b26\u4e32\u62c6\u5206 String[] split(String regex) \u62c6\u5206\u5b57\u7b26\u4e32\u4e3a\u6570\u7ec4 String[] split(String regex, int limit) \u6307\u5b9a\u62c6\u5206\u6b21\u6570 String str1 = \"Hello World Java\" ; String [] strList1 = str1 . split ( \" \" ) ; // {\"Hello\", \"World\", \"Java\"} String [] strList2 = str1 . split ( \" \" , 2 ) ; // {\"Hello\", \"World Java\"} // \u62c6\u5206\u7279\u6b8a\u5b57\u7b26\u4f7f\u7528 \\\\ \u8f6c\u4e49 String str2 = \"192.168.0.1\" ; String [] strList2 = str2 . split ( \"\\\\.\" ) ; // {\"192\", \"168\", \"0\", \"1\"} 56 \u5b57\u7b26\u4e32\u622a\u53d6 String substring(int beginIndex) \u622a\u53d6\u5b57\u7b26\u4e32 String substring(int beginIndex, int endIndex) \u6307\u5b9a\u7ed3\u675f\u4f4d\u7d22\u5f15 \u901a\u8fc7\u8ba1\u7b97\u786e\u5b9a\u7d22\u5f15 String str = \"http://www.baidu.com/logo.png\" ; // \u8ba1\u7b97\u5f00\u59cb\u7ed3\u675f\u4f4d\u7f6e int beginIndex = str . indexOf ( \"/\" , str . indexOf ( \"com\" )) + 1 ; int endIndex = str . lastIndexOf ( \".\" ) ; // \u622a\u53d6\u5b57\u7b26\u4e32 String name = str . substring ( beginIndex , endIndex ); System . out . println ( name ); // logo 57 \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 static String format(Locale l, String format, Object... args) static String format(String format, Object... args) \u5e38\u7528\u5360\u4f4d\u7b26 \u5b57\u7b26\u4e32 %s \u5b57\u7b26 %c \u6574\u6570 %d \u5c0f\u6570 %f String name = \"\u5c0f\u660e\" ; int age = 23 ; double score = 98.995321 ; // \u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570 String . format ( \"%s: %d - %5.2f\" , name , age , score ); // \u5c0f\u660e: 23 - 99.00 58 \u5176\u5b83\u64cd\u4f5c\u65b9\u6cd5 String concat(String str) \u8fd0\u884c\u65f6\u62fc\u63a5 String intern() \u5b57\u7b26\u4e32\u5165\u6c60 boolean isEmpty() \u5224\u65ad\u957f\u5ea6\u4e3a0 \u4e0d\u662fnull \u662f \"\" int length() \u8ba1\u7b97\u957f\u5ea6\uff0c \u533a\u522b\u6570\u7ec4\u5c5e\u6027length String trim() \u53bb\u9664\u5de6\u53f3\u7a7a\u767d String toLowerCase() \u5b57\u6bcd\u8f6c\u5c0f\u5199 String toUpperCase() \u5b57\u6bcd\u8f6c\u5927\u5199 static String join(CharSequence delimiter, CharSequence... elements) static String join(CharSequence delimiter, Iterable<? extends CharSequence> elements) \u5b9e\u4f8b 1\u3001\u9996\u5b57\u6bcd\u8f6c\u5927\u5199 /** * \u9996\u5b57\u6bcd\u8f6c\u5927\u5199 */ public static String initCap ( String str ) { if ( str == null || \"\" . equals ( str )){ return str ; // \u539f\u6837\u8fd4\u56de } if ( str . length () == 1 ){ return str . toUpperCase (); } else { return str . substring ( 0 , 1 ). toUpperCase () + str . substring ( 1 ); } } initCap ( null ); // null initCap ( \"\" ); // \"\" initCap ( \"a\" ); // \"A\" initCap ( \"hello\" ); // \"Hello\" 2\u3001\u5b57\u7b26\u4e32\u6570\u7ec4\u8f6c\u5b57\u7b26\u4e32 String . join ( \"-\" , \"a\" , \"b\" , \"c\" ); // a-b-c String . join ( \"-\" , new String []{ \"a\" , \"b\" , \"c\" }); // a-b-c","title":"\u7b2c10 \u7ae0 \uff1a String\u7c7b\u7279\u70b9\u5206\u6790"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/#10-string","text":"","title":"\u7b2c10 \u7ae0 \uff1a String\u7c7b\u7279\u70b9\u5206\u6790"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/#42-string","text":"\u53cc\u5f15\u53f7\u5b9a\u4e49 +\u8fde\u63a5\u5b57\u7b26\u4e32 \u5b57\u7b26\u521b\u4e32\u4e0d\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b \u5176\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6570\u7ec4\uff0c\u6bcf\u4e00\u4e2a\u5b57\u7b26\u90fd\u4fdd\u5b58\u5230\u6570\u7ec4\u4e2d JDK 1.9\u652f\u6301\u7684\u5b57\u7b26\u4e32\u5f62\u5f0f\u589e\u591a\u4e86 JDK 1.9 \u4e4b\u540e\u5b57\u7b26\u4e32\u6570\u7ec4\u4f7f\u7528byte\u7c7b\u578b JDK 1.8 \u5b57\u7b26\u4e32\u6570\u7ec4\u4f7f\u7528char\u7c7b\u578b \u5b57\u7b26\u4e32\u6570\u7ec4\u662f\u5b57\u7b26\u7684\u5305\u88c5 \u5b57\u7b26\u4e32\u4e0d\u53ef\u53d8 // \u76f4\u63a5\u8d4b\u503c String name = \"\u5b57\u7b26\u4e32\" ; // \u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316 String company = new String ( \"\u5b9e\u4f8b\u5316\u5b57\u7b26\u4e32\" ) ;","title":"42 String\u7c7b\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/#43","text":"int\u578b\u53d8\u91cf\u4f7f\u7528 == \u5224\u65ad\u76f8\u7b49 String \u7c7b\u578b\u4f7f\u7528 equals(String str) String name1 = \"\u5b57\u7b26\u4e32\" ; String name2 = \"\u5b57\u7b26\u4e32\" ; String name3 = new String ( \"\u5b57\u7b26\u4e32\" ) ; System . out . println ( name1 == name2 ) ; // true System . out . println ( name1 == name3 ) ; // false System . out . println ( name1 . equals ( name2 )); // true System . out . println ( name1 . equals ( name3 )); // true \u533a\u522b == \u6bd4\u8f83\u6570\u503c, \u5982\u679c\u7528\u4e8e\u5bf9\u8c61\u6bd4\u8f83\uff0c\u5219\u6bd4\u8f83\u5185\u5b58\u5730\u5740 equals \u6bd4\u8f83\u5b57\u7b26\u4e32\u5185\u5bb9","title":"43 \u5b57\u7b26\u4e32\u6bd4\u8f83"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/#44","text":"\u53cc\u5f15\u53f7\u63cf\u8ff0\u7684\u662fString\u7c7b\u7684\u4e00\u4e2a\u533f\u540d\u5bf9\u8c61 \u5b57\u7b26\u4e32\u76f4\u63a5\u8d4b\u503c\uff0c\u662f\u5c06\u4e00\u4e2a\u533f\u540d\u5b57\u7b26\u4e32\u5bf9\u8c61\u5f15\u7528\u8d4b\u503c \u5b57\u7b26\u4e32\u6bd4\u8f83\u7684\u65f6\u5019\uff0c\u5b57\u7b26\u4e32\u5e38\u91cf\u5199\u524d\u9762 String name = null ; System . out . println ( \"\u5b57\u7b26\u4e32\" . equals ( name )); // false System . out . println ( name . equals ( \"\u5b57\u7b26\u4e32\" )); // NullPointerException","title":"44 \u5b57\u7b26\u4e32\u5e38\u91cf"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/#45-string","text":"\u5b57\u7b26\u4e32\u6c60 \u76f4\u63a5\u8d4b\u503c\u5b57\u7b26\u4e32\uff0c\u4f1a\u5728\u5b57\u7b26\u4e32\u6570\u636e\u6c60\u81ea\u52a8\u4fdd\u5b58\uff0c\u5b9e\u4f8b\u91cd\u7528\uff0c\u63d0\u9ad8\u64cd\u4f5c\u6027\u80fd \u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316\uff0c\u4f1a\u5f00\u8f9f\u65b0\u7684\u5806\u5185\u5b58\u7a7a\u95f4 \u624b\u5de5\u5165\u6c60 Strint(\"\").intern() String name1 = new String ( \"\u5b57\u7b26\u4e32\" ) ; String name2 = \"\u5b57\u7b26\u4e32\" ; System . out . println ( name1 == name2 ) ; // false String name1 = new String ( \"\u5b57\u7b26\u4e32\" ). intern () ; String name2 = \"\u5b57\u7b26\u4e32\" ; System . out . println ( name1 == name2 ) ; // true","title":"45 String\u7c7b\u5bf9\u8c61\u4e24\u79cd\u5b9e\u4f8b\u5316\u65b9\u5f0f\u6bd4\u8f83"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/#46-string","text":"\u5bf9\u8c61\u6c60\u4e3b\u8981\u76ee\u7684\u662f\u5b9e\u73b0\u6570\u636e\u7684\u5171\u4eab\u5904\u7406 \u9759\u6001\u5e38\u91cf\u6c60\uff1a\u7c7b.class\u52a0\u8f7d\u65f6\u81ea\u52a8\u5206\u914d String name1 = \"\u5b57\u7b26\u4e32\" ; String name2 = \"\u5b57\" + \"\u7b26\" + \"\u4e32\" ; System . out . println ( name1 == name2 ) ; // true \u8fd0\u884c\u65f6\u5e38\u91cf\u6c60\uff1a\u7c7b.class\u52a0\u8f7d\u540e\u7684\u5e38\u91cf\u6c60 String name1 = \"\u5b57\u7b26\u4e32\" ; String str = \"\u7b26\" ; String name2 = \"\u5b57\" + str + \"\u4e32\" ; System . out . println ( name1 == name2 ) ; // false \u7a0b\u5e8f\u52a0\u8f7d\u65f6\u5e76\u4e0d\u786e\u5b9astr \u662f\u4ec0\u4e48\u5185\u5bb9\uff0c\u53ef\u4ee5\u88ab\u4fee\u6539","title":"46 String\u5bf9\u8c61\u5e38\u91cf\u6c60"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/#47","text":"\u5b57\u7b26\u4e32\u5185\u5bb9\u4e0d\u53ef\u4fee\u6539 String\u7c7b\u662f\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\uff0c\u957f\u5ea6\u4e0d\u53ef\u4ee5\u88ab\u6539\u53d8 \u5b57\u7b26\u4e32\u62fc\u63a5\uff0c\u5e76\u4e0d\u662f\u4fee\u6539\u4fee\u6539\u4e86\u5b57\u7b26\u4e32\uff0c\u800c\u662f\u4fee\u6539\u4e86\u5b57\u7b26\u4e32\u7684\u6307\u5411 String\u7c7b\u4e0d\u8981\u8fdb\u884c\u9891\u7e41\u4fee\u6539\uff0c\u4f1a\u4ea7\u751f\u5783\u573e String str = \"\u5b57\" ; // -> \u5b57 str += \"\u7b26\" ; // -> \u7b26 \u5b57\u7b26 str += \"\u4e32\" ; // -> \u4e32 \u5b57\u7b26\u4e32 System . out . println ( str ) ; // \u5b57\u7b26\u4e32","title":"47 \u5b57\u7b26\u4e32\u4fee\u6539\u5206\u6790"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/#48","text":"public static void main ( String [] args ) { } \u4e3b\u65b9\u6cd5\u662f\u4e00\u5207\u7684\u5f00\u59cb\u70b9 public \u6743\u9650\u516c\u5f00 static \u7531\u7c7b\u76f4\u63a5\u8c03\u7528 void \u65e0\u8fd4\u56de main \u56fa\u5b9a\u65b9\u6cd5\u540d String[] args \u63a5\u6536\u542f\u52a8\u53c2\u6570\uff1b\u53c2\u6570\u672c\u8eab\u6709\u7a7a\u683c\uff0c\u9700\u8981\u7528\u53cc\u5f15\u53f7 class Demo { public static void main ( String [] args ) { for ( String arg : args ){ System . out . println ( arg ) ; } } } $ java Demo first \"\u4f60 \u597d\" first \u4f60 \u597d","title":"48 \u4e3b\u65b9\u6cd5\u7ec4\u6210\u5206\u6790"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/#11-string","text":"","title":"\u7b2c11 \u7ae0 \uff1a String\u7c7b\u5e38\u7528\u65b9\u6cd5"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/#49-javadoc","text":"Java JDK 1.9\u4e4b\u524d \u52a0\u8f7dJVM\u5c31\u52a0\u8f7d\u5e38\u7528\u7c7b\u5e93 Java JDK 1.9 \u6a21\u5757\u5316 \u6587\u6863\u7ed3\u6784\uff1a \u5b8c\u6574\u5b9a\u4e49 \u76f8\u5173\u8bf4\u660e \u6210\u5458\u5c5e\u6027\u6458\u8981 \u6784\u9020\u65b9\u6cd5\u6458\u8981 Deprecated \u8868\u793a\u4e0d\u5efa\u8bae\u4f7f\u7528 \u65b9\u6cd5\u6458\u8981 \u65b9\u6cd5\u548c\u6210\u5458\u7684\u8be6\u7ec6\u89e3\u91ca https://docs.oracle.com/javase/8/docs/api/","title":"49 JavaDoc\u6587\u6863\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/#50","text":"JDK 1.9\u4ee5\u524d\uff0c\u4f7f\u7528\u5b57\u7b26\u6570\u7ec4\u5305\u88c5\u5b9e\u73b0\u5b57\u7b26\u4e32 \u6784\u9020\u65b9\u6cd5 String(char[] value) String(char[] value, int offset, int count) \u666e\u901a\u65b9\u6cd5 char charAt(int index) \u83b7\u53d6\u6307\u5b9a\u7d22\u5f15\u5b57\u7b26\uff0c\u4e0b\u6807\u4ece0\u5f00\u59cb char[] toCharArray() \u5b57\u7b26\u4e32\u8f6c\u5b57\u7b26\u6570\u7ec4 \u5b9e\u4f8b\u4ee3\u7801\uff1a 1\u3001\u5c06\u5c0f\u5199\u5b57\u7b26\u8f6c\u4e3a\u5927\u5199 String str = \"helloworld\" ; char [] str_list = str . toCharArray (); for ( int i = 0 ; i < str_list . length ; i ++){ str_list [ i ] -= 32 ; // a 97 -> A 65 \u76f8\u5dee32 } System . out . println ( new String ( str_list )); // HELLOWORLD System . out . println ( new String ( str_list , 0 , 5 )); // HELLO 2\u3001\u5224\u65ad\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u5b57\u7b26\u662f\u5426\u90fd\u7531\u6570\u5b57\u7ec4\u6210 class Demo { public static void main ( String [] args ) { System . out . println ( isNumber ( \"hello\" )); // false System . out . println ( isNumber ( \"123\" )); // true } public static boolean isNumber ( String str ){ char [] charList = str . toCharArray (); for ( char c : charList ){ if ( c < '0' || c > '9' ){ return false ; } } return true ; } } \u4e2d\u6587\u5904\u7406\u4f7f\u7528char\u5b57\u7b26","title":"50 \u5b57\u7b26\u4e32\u4e0e\u5b57\u7b26\u6570\u7ec4"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/#51","text":"\u6784\u9020\u65b9\u6cd5 String(byte[] bytes) String(byte[] bytes, inf offset, int length) \u666e\u901a\u65b9\u6cd5 byte[] getBytes() \u5b57\u7b26\u4e32\u8f6c\u5b57\u8282\u6570\u7ec4 byte[] getBytes(String charsetName) \u7f16\u7801\u8f6c\u6362 \u5b57\u8282\u6709\u957f\u5ea6\u9650\u5236 -128 ~ 127 \u5b9e\u4f8b\uff1a \u901a\u8fc7\u5b57\u8282\u6570\u7ec4\u5c06\u5b57\u7b26\u4e32\u5b57\u7b26\u5c0f\u5199\u8f6c\u5927\u5199 String str = \"helloworld\" ; byte [] byte_list = str . getBytes (); for ( int i = 0 ; i < byte_list . length ; i ++){ byte_list [ i ] -= 32 ; // a 97 -> A 65 \u76f8\u5dee32 } System . out . println ( new String ( byte_list )); // HELLOWORLD System . out . println ( new String ( byte_list , 0 , 5 )); // HELLO","title":"51 \u5b57\u7b26\u4e32\u4e0e\u5b57\u8282\u6570\u7ec4"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/#52","text":"boolean equals(String str) \u533a\u5206\u5927\u5c0f\u5199\u76f8\u7b49\u5224\u65ad boolean equalsIgnoreCase(String str) \u4e0d\u533a\u5206\u5927\u5c0f\u5199\u76f8\u7b49\u5224\u65ad // \u533a\u5206\u5927\u5c0f\u5199 \"HELLO\" . equals ( \"hello\" ); // false // \u4e0d\u533a\u5206\u5927\u5c0f\u5199 \"HELLO\" . equalsIgnoreCase ( \"hello\" ); // true int compareTo(String str) \u8fdb\u884c\u5b57\u7b26\u4e32\u5927\u5c0f\u6bd4\u8f83 int compareToIgnoreCase(String str) \u4e0d\u533a\u5206\u5927\u5c0f\u5199\u8fdb\u884c\u5b57\u7b26\u4e32\u5927\u5c0f\u6bd4\u8f83 \u5927\u4e8e>0 \u7b49\u4e8e=0 \u5c0f\u4e8e<0 \"HELLO\" . compareTo ( \"hello\" ); // -32 \"HELLO\" . compareToIgnoreCase ( \"hello\" ); // 0","title":"52 \u5b57\u7b26\u4e32\u6bd4\u8f83"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/#53","text":"boolean contains(String str) \u5224\u65ad\u5b50\u4e32\u662f\u5426\u5b58\u5728 JDK>=1.5 int indexOf(String str) \u4ece\u5f00\u5934\u67e5\u627e\u5b50\u5b57\u7b26\u4e32\u4f4d\u7f6e \u6ca1\u6709\u67e5\u5230\u8fd4\u56de -1 int indexOf(String str, int fromIndex) \u4ece\u6307\u5b9a\u4f4d\u7f6e\u67e5\u627e\u5b50\u5b57\u7b26\u4e32\u4f4d\u7f6e int lastIndexOf(String str) \u4ece\u540e\u5411\u524d\u67e5\u627e\u5b50\u5b57\u7b26\u4e32\u4f4d\u7f6e int lastIndexOf(String str, int fromIndex) \u4ece\u540e\u5411\u524d\u6307\u5b9a\u4f4d\u7f6e\u67e5\u627e\u5b50\u5b57\u7b26\u4e32\u4f4d\u7f6e boolean startsWith(String prefix) \u662f\u5426\u4ee5\u6307\u5b9a\u5b57\u7b26\u5f00\u5934 boolean startsWith(String prefix, int offset) \u6307\u5b9a\u4f4d\u7f6e\u5f00\u59cb\u662f\u5426\u4ee5\u6307\u5b9a\u5b57\u7b26\u5f00\u5934 boolean endsWith(String suffix) \u662f\u5426\u4ee5\u6307\u5b9a\u5b57\u7b26\u7ed3\u5c3e String str = \"Hello World\" ; str . contains ( \"Hello\" ); // true str . indexOf ( \"World\" ); // 6 str . indexOf ( \"World\" , 6 ); // 6 str . lastIndexOf ( \"World\" ); // 6 str . lastIndexOf ( \"World\" , 6 ); // 6 str . startsWith ( \"World\" ); // false str . startsWith ( \"World\" , 6 ); // true str . endsWith ( \"World\" ); // ture","title":"53 \u5b57\u7b26\u4e32\u67e5\u627e"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/#54","text":"String replaceAll(String regex, String replacement) \u5168\u90e8\u66ff\u6362 String replaceFirst(String regex, String replacement) \u66ff\u6362\u9996\u4e2a String str = \"Hello World\" ; str . replaceAll ( \"l\" , \"X\" ); // HeXXo WorXd str . replaceFirst ( \"l\" , \"X\" ); // HeXlo World","title":"54 \u5b57\u7b26\u4e32\u66ff\u6362"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/#55","text":"String[] split(String regex) \u62c6\u5206\u5b57\u7b26\u4e32\u4e3a\u6570\u7ec4 String[] split(String regex, int limit) \u6307\u5b9a\u62c6\u5206\u6b21\u6570 String str1 = \"Hello World Java\" ; String [] strList1 = str1 . split ( \" \" ) ; // {\"Hello\", \"World\", \"Java\"} String [] strList2 = str1 . split ( \" \" , 2 ) ; // {\"Hello\", \"World Java\"} // \u62c6\u5206\u7279\u6b8a\u5b57\u7b26\u4f7f\u7528 \\\\ \u8f6c\u4e49 String str2 = \"192.168.0.1\" ; String [] strList2 = str2 . split ( \"\\\\.\" ) ; // {\"192\", \"168\", \"0\", \"1\"}","title":"55 \u5b57\u7b26\u4e32\u62c6\u5206"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/#56","text":"String substring(int beginIndex) \u622a\u53d6\u5b57\u7b26\u4e32 String substring(int beginIndex, int endIndex) \u6307\u5b9a\u7ed3\u675f\u4f4d\u7d22\u5f15 \u901a\u8fc7\u8ba1\u7b97\u786e\u5b9a\u7d22\u5f15 String str = \"http://www.baidu.com/logo.png\" ; // \u8ba1\u7b97\u5f00\u59cb\u7ed3\u675f\u4f4d\u7f6e int beginIndex = str . indexOf ( \"/\" , str . indexOf ( \"com\" )) + 1 ; int endIndex = str . lastIndexOf ( \".\" ) ; // \u622a\u53d6\u5b57\u7b26\u4e32 String name = str . substring ( beginIndex , endIndex ); System . out . println ( name ); // logo","title":"56 \u5b57\u7b26\u4e32\u622a\u53d6"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/#57","text":"static String format(Locale l, String format, Object... args) static String format(String format, Object... args) \u5e38\u7528\u5360\u4f4d\u7b26 \u5b57\u7b26\u4e32 %s \u5b57\u7b26 %c \u6574\u6570 %d \u5c0f\u6570 %f String name = \"\u5c0f\u660e\" ; int age = 23 ; double score = 98.995321 ; // \u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570 String . format ( \"%s: %d - %5.2f\" , name , age , score ); // \u5c0f\u660e: 23 - 99.00","title":"57 \u5b57\u7b26\u4e32\u683c\u5f0f\u5316"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5b57\u7b26\u4e32/#58","text":"String concat(String str) \u8fd0\u884c\u65f6\u62fc\u63a5 String intern() \u5b57\u7b26\u4e32\u5165\u6c60 boolean isEmpty() \u5224\u65ad\u957f\u5ea6\u4e3a0 \u4e0d\u662fnull \u662f \"\" int length() \u8ba1\u7b97\u957f\u5ea6\uff0c \u533a\u522b\u6570\u7ec4\u5c5e\u6027length String trim() \u53bb\u9664\u5de6\u53f3\u7a7a\u767d String toLowerCase() \u5b57\u6bcd\u8f6c\u5c0f\u5199 String toUpperCase() \u5b57\u6bcd\u8f6c\u5927\u5199 static String join(CharSequence delimiter, CharSequence... elements) static String join(CharSequence delimiter, Iterable<? extends CharSequence> elements) \u5b9e\u4f8b 1\u3001\u9996\u5b57\u6bcd\u8f6c\u5927\u5199 /** * \u9996\u5b57\u6bcd\u8f6c\u5927\u5199 */ public static String initCap ( String str ) { if ( str == null || \"\" . equals ( str )){ return str ; // \u539f\u6837\u8fd4\u56de } if ( str . length () == 1 ){ return str . toUpperCase (); } else { return str . substring ( 0 , 1 ). toUpperCase () + str . substring ( 1 ); } } initCap ( null ); // null initCap ( \"\" ); // \"\" initCap ( \"a\" ); // \"A\" initCap ( \"hello\" ); // \"Hello\" 2\u3001\u5b57\u7b26\u4e32\u6570\u7ec4\u8f6c\u5b57\u7b26\u4e32 String . join ( \"-\" , \"a\" , \"b\" , \"c\" ); // a-b-c String . join ( \"-\" , new String []{ \"a\" , \"b\" , \"c\" }); // a-b-c","title":"58 \u5176\u5b83\u64cd\u4f5c\u65b9\u6cd5"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5f02\u5e38/","text":"\u7b2c27 \u7ae0 \uff1a \u5f02\u5e38\u7684\u6355\u83b7\u53ca\u5904\u7406 116 \u8ba4\u8bc6\u5f02\u5e38\u5bf9\u7a0b\u5e8f\u7684\u5f71\u54cd \u51fa\u73b0\u9519\u8bef\u540e\uff0c\u7a0b\u5e8f\u4e2d\u65ad\u6267\u884c \u4e3a\u4e86\u4fdd\u8bc1\u7a0b\u5e8f\u51fa\u73b0\u975e\u81f4\u547d\u9519\u8bef\u4e4b\u540e\uff0c\u7a0b\u5e8f\u4f9d\u7136\u53ef\u4ee5\u6b63\u5e38\u5b8c\u6210 \u5f02\u5e38\u5904\u7406\u673a\u5236\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u987a\u5229\u6267\u884c 117 \u5904\u7406\u5f02\u5e38 \u8bed\u6cd5 try { } catch ( \u5f02\u5e38\u7c7b\u578b \u5f02\u5e38\u5bf9\u8c61 ){ // \u5904\u7406\u5f02\u5e38 } catch ( \u5f02\u5e38\u7c7b\u578b \u5f02\u5e38\u5bf9\u8c61 ){ // \u5904\u7406\u5f02\u5e38 } ... finally { // \u4e0d\u7ba1\u662f\u5426\u51fa\u73b0\u5f02\u5e38\u90fd\u4f1a\u6267\u884c } \u5f02\u5e38 System . out . println ( 2 / 0 ); // java.lang.ArithmeticException: / by zero \u5f02\u5e38\u6355\u83b7 try { System . out . println ( 2 / 0 ); } catch ( ArithmeticException e ){ System . out . println ( e ); // java.lang.ArithmeticException: / by zero } \u6253\u5370\u5b8c\u6210\u7684\u5f02\u5e38\u4fe1\u606f printStackTrace() try { System . out . println ( 2 / 0 ); } catch ( ArithmeticException e ){ e . printStackTrace (); // java.lang.ArithmeticException: / by zero // at Demo.main(Demo.java:4) } 118 \u5904\u7406\u591a\u4e2a\u5f02\u5e38 \u5982\u679c\u660e\u786e\u77e5\u9053\u4f1a\u53d1\u751f\u4ec0\u4e48\u5f02\u5e38\uff0c\u53ef\u4ee5\u4f7f\u7528if\u505a\u5224\u65ad 119 \u5f02\u5e38\u5904\u7406\u6d41\u7a0b Error \u7a0b\u5e8f\u8fd8\u672a\u6267\u884c\u6027\u51fa\u73b0\u7684\u9519\u8bef\uff0c\u5f00\u53d1\u8005\u65e0\u6cd5\u5904\u7406 Exception \u7a0b\u5e8f\u4e2d\u51fa\u73b0\u7684\u5f02\u5e38\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5904\u7406 \u5f02\u5e38\u4f53\u7cfb Object - Throwable - Exception \u6240\u6709\u5f02\u5e38\u90fd\u53ef\u4ee5\u7528 Exception \u5904\u7406 \u6355\u83b7\u8303\u56f4\u5927\u7684\u5f02\u5e38\u8981\u653e\u5728\u6700\u540e 120 throws\u5173\u952e\u5b57 \u544a\u8bc9\u8c03\u7528\u8005\u53ef\u80fd\u4f1a\u51fa\u73b0\u7684\u5f02\u5e38 \u5982\u679c\u4e3b\u65b9\u6cd5\u7ee7\u7eed\u629b\u51fa\u5f02\u5e38\uff0c\u8868\u793a\u6b64\u5f02\u5e38\u4ea4\u7531JVM\u5904\u7406 class Demo { public static int div ( int x , int y ) throws ArithmeticException { return x / y ; } public static void main ( String [] args ) { try { int x = div ( 1 , 0 ) ; } catch ( ArithmeticException e ){ e . printStackTrace (); } } } 121 throw\u5173\u952e\u5b57 \u624b\u52a8\u629b\u51fa\u5f02\u5e38 try { throw new Exception ( \"\u4e3b\u52a8\u629b\u51fa\u5f02\u5e38\" ); } catch ( Exception e ){ e . printStackTrace (); // java.lang.Exception: \u4e3b\u52a8\u629b\u51fa\u5f02\u5e38 } \u533a\u522b\uff1athrow & throws throw \u5728\u4ee3\u7801\u5757\u4e2d\u4f7f\u7528\uff0c\u4e3b\u52a8\u629b\u51fa\u5f02\u5e38\u5bf9\u8c61 throws \u5728\u65b9\u6cd5\u5b9a\u4e49\u4e0a\u4f7f\u7528\uff0c\u660e\u786e\u544a\u8bc9\u8c03\u7528\u8005\u53ef\u80fd\u4ea7\u751f\u7684\u5f02\u5e38 122 \u5f02\u5e38\u5904\u7406\u6a21\u578b try { result = x / y ; } catch ( Exception e ){ throw e ; } finally { System . out . println ( \"\u7ed3\u675f...\" ); } \u7b80\u5316\u5199\u6cd5 try { result = x / y ; } finally { System . out . println ( \"\u7ed3\u675f...\" ); } 123 RuntimeException \u51fd\u6570\u5b9a\u4e49\u6807\u6ce8\u4e86\u53ef\u80fd\u629b\u51fa\u7684\u5f02\u5e38\uff0c\u4e0d\u8fc7\u5e76\u6ca1\u6709\u8981\u6c42\u5f3a\u5236\u5904\u7406 \u533a\u522b RuntimeException & Exception RuntimeException \u662f Exception\u5b50\u7c7b RuntimeException \u5b50\u7c7b\u4e0d\u8981\u6c42\u5f3a\u5236\u5904\u7406\u5f02\u5e38 Exception \u5fc5\u987b\u5904\u7406 124 \u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b \u7ee7\u627f RuntimeException\uff08\u53ef\u9009\u5904\u7406\uff09\uff0cException\uff08\u5fc5\u987b\u5904\u7406\uff09 // \u5982\u679c\u7ee7\u627f\u81eaException // \u9519\u8bef: \u672a\u62a5\u544a\u7684\u5f02\u5e38\u9519\u8befMyException; \u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u6355\u83b7\u6216\u58f0\u660e\u4ee5\u4fbf\u629b\u51fa class MyException extends RuntimeException { public MyException ( String message ){ super ( message ); } } class Demo { public static void main ( String [] args ) { throw new MyException ( \"\u81ea\u5b9a\u4e49\u5f02\u5e38\" ); // Exception in thread \"main\" MyException: \u81ea\u5b9a\u4e49\u5f02\u5e38 } } 125 assert\u65ad\u8a00 JDK >= 1.4 \u786e\u5b9a\u4ee3\u7801\u6267\u884c\u5230\u67d0\u884c\u4e4b\u540e\uff0c\u4e00\u5b9a\u662f\u6240\u671f\u5f85\u7684\u7ed3\u679c \u4e0d\u4e00\u5b9a\u662f\u51c6\u786e\u7684\uff0c\u4e5f\u53ef\u80fd\u51fa\u73b0\u504f\u5dee\uff0c\u4f46\u662f\u8fd9\u79cd\u504f\u5dee\u4e0d\u5e94\u8be5\u5f71\u54cd\u7a0b\u5e8f\u7684\u6b63\u5e38\u6267\u884c Java\u4e2d\u7684\u65ad\u8a00\u9700\u8981\u6307\u5b9a\u8fd0\u884c\u53c2\u6570\u624d\u751f\u6548 int x = 9 ; assert x == 10 ; \u7f16\u8bd1\u8fd0\u884c\u6ca1\u6709\u4efb\u4f55\u7ed3\u679c \u542f\u7528\u65ad\u8a00 java - ea Demo \u7a0b\u5e8f\u629b\u51fa\u5f02\u5e38 Exception in thread \"main\" java . lang . AssertionError","title":"\u7b2c27 \u7ae0 \uff1a \u5f02\u5e38\u7684\u6355\u83b7\u53ca\u5904\u7406"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5f02\u5e38/#27","text":"","title":"\u7b2c27 \u7ae0 \uff1a \u5f02\u5e38\u7684\u6355\u83b7\u53ca\u5904\u7406"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5f02\u5e38/#116","text":"\u51fa\u73b0\u9519\u8bef\u540e\uff0c\u7a0b\u5e8f\u4e2d\u65ad\u6267\u884c \u4e3a\u4e86\u4fdd\u8bc1\u7a0b\u5e8f\u51fa\u73b0\u975e\u81f4\u547d\u9519\u8bef\u4e4b\u540e\uff0c\u7a0b\u5e8f\u4f9d\u7136\u53ef\u4ee5\u6b63\u5e38\u5b8c\u6210 \u5f02\u5e38\u5904\u7406\u673a\u5236\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u987a\u5229\u6267\u884c","title":"116 \u8ba4\u8bc6\u5f02\u5e38\u5bf9\u7a0b\u5e8f\u7684\u5f71\u54cd"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5f02\u5e38/#117","text":"\u8bed\u6cd5 try { } catch ( \u5f02\u5e38\u7c7b\u578b \u5f02\u5e38\u5bf9\u8c61 ){ // \u5904\u7406\u5f02\u5e38 } catch ( \u5f02\u5e38\u7c7b\u578b \u5f02\u5e38\u5bf9\u8c61 ){ // \u5904\u7406\u5f02\u5e38 } ... finally { // \u4e0d\u7ba1\u662f\u5426\u51fa\u73b0\u5f02\u5e38\u90fd\u4f1a\u6267\u884c } \u5f02\u5e38 System . out . println ( 2 / 0 ); // java.lang.ArithmeticException: / by zero \u5f02\u5e38\u6355\u83b7 try { System . out . println ( 2 / 0 ); } catch ( ArithmeticException e ){ System . out . println ( e ); // java.lang.ArithmeticException: / by zero } \u6253\u5370\u5b8c\u6210\u7684\u5f02\u5e38\u4fe1\u606f printStackTrace() try { System . out . println ( 2 / 0 ); } catch ( ArithmeticException e ){ e . printStackTrace (); // java.lang.ArithmeticException: / by zero // at Demo.main(Demo.java:4) }","title":"117 \u5904\u7406\u5f02\u5e38"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5f02\u5e38/#118","text":"\u5982\u679c\u660e\u786e\u77e5\u9053\u4f1a\u53d1\u751f\u4ec0\u4e48\u5f02\u5e38\uff0c\u53ef\u4ee5\u4f7f\u7528if\u505a\u5224\u65ad","title":"118 \u5904\u7406\u591a\u4e2a\u5f02\u5e38"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5f02\u5e38/#119","text":"Error \u7a0b\u5e8f\u8fd8\u672a\u6267\u884c\u6027\u51fa\u73b0\u7684\u9519\u8bef\uff0c\u5f00\u53d1\u8005\u65e0\u6cd5\u5904\u7406 Exception \u7a0b\u5e8f\u4e2d\u51fa\u73b0\u7684\u5f02\u5e38\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5904\u7406 \u5f02\u5e38\u4f53\u7cfb Object - Throwable - Exception \u6240\u6709\u5f02\u5e38\u90fd\u53ef\u4ee5\u7528 Exception \u5904\u7406 \u6355\u83b7\u8303\u56f4\u5927\u7684\u5f02\u5e38\u8981\u653e\u5728\u6700\u540e","title":"119 \u5f02\u5e38\u5904\u7406\u6d41\u7a0b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5f02\u5e38/#120-throws","text":"\u544a\u8bc9\u8c03\u7528\u8005\u53ef\u80fd\u4f1a\u51fa\u73b0\u7684\u5f02\u5e38 \u5982\u679c\u4e3b\u65b9\u6cd5\u7ee7\u7eed\u629b\u51fa\u5f02\u5e38\uff0c\u8868\u793a\u6b64\u5f02\u5e38\u4ea4\u7531JVM\u5904\u7406 class Demo { public static int div ( int x , int y ) throws ArithmeticException { return x / y ; } public static void main ( String [] args ) { try { int x = div ( 1 , 0 ) ; } catch ( ArithmeticException e ){ e . printStackTrace (); } } }","title":"120 throws\u5173\u952e\u5b57"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5f02\u5e38/#121-throw","text":"\u624b\u52a8\u629b\u51fa\u5f02\u5e38 try { throw new Exception ( \"\u4e3b\u52a8\u629b\u51fa\u5f02\u5e38\" ); } catch ( Exception e ){ e . printStackTrace (); // java.lang.Exception: \u4e3b\u52a8\u629b\u51fa\u5f02\u5e38 } \u533a\u522b\uff1athrow & throws throw \u5728\u4ee3\u7801\u5757\u4e2d\u4f7f\u7528\uff0c\u4e3b\u52a8\u629b\u51fa\u5f02\u5e38\u5bf9\u8c61 throws \u5728\u65b9\u6cd5\u5b9a\u4e49\u4e0a\u4f7f\u7528\uff0c\u660e\u786e\u544a\u8bc9\u8c03\u7528\u8005\u53ef\u80fd\u4ea7\u751f\u7684\u5f02\u5e38","title":"121 throw\u5173\u952e\u5b57"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5f02\u5e38/#122","text":"try { result = x / y ; } catch ( Exception e ){ throw e ; } finally { System . out . println ( \"\u7ed3\u675f...\" ); } \u7b80\u5316\u5199\u6cd5 try { result = x / y ; } finally { System . out . println ( \"\u7ed3\u675f...\" ); }","title":"122 \u5f02\u5e38\u5904\u7406\u6a21\u578b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5f02\u5e38/#123-runtimeexception","text":"\u51fd\u6570\u5b9a\u4e49\u6807\u6ce8\u4e86\u53ef\u80fd\u629b\u51fa\u7684\u5f02\u5e38\uff0c\u4e0d\u8fc7\u5e76\u6ca1\u6709\u8981\u6c42\u5f3a\u5236\u5904\u7406 \u533a\u522b RuntimeException & Exception RuntimeException \u662f Exception\u5b50\u7c7b RuntimeException \u5b50\u7c7b\u4e0d\u8981\u6c42\u5f3a\u5236\u5904\u7406\u5f02\u5e38 Exception \u5fc5\u987b\u5904\u7406","title":"123 RuntimeException"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5f02\u5e38/#124","text":"\u7ee7\u627f RuntimeException\uff08\u53ef\u9009\u5904\u7406\uff09\uff0cException\uff08\u5fc5\u987b\u5904\u7406\uff09 // \u5982\u679c\u7ee7\u627f\u81eaException // \u9519\u8bef: \u672a\u62a5\u544a\u7684\u5f02\u5e38\u9519\u8befMyException; \u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u6355\u83b7\u6216\u58f0\u660e\u4ee5\u4fbf\u629b\u51fa class MyException extends RuntimeException { public MyException ( String message ){ super ( message ); } } class Demo { public static void main ( String [] args ) { throw new MyException ( \"\u81ea\u5b9a\u4e49\u5f02\u5e38\" ); // Exception in thread \"main\" MyException: \u81ea\u5b9a\u4e49\u5f02\u5e38 } }","title":"124 \u81ea\u5b9a\u4e49\u5f02\u5e38\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u5f02\u5e38/#125-assert","text":"JDK >= 1.4 \u786e\u5b9a\u4ee3\u7801\u6267\u884c\u5230\u67d0\u884c\u4e4b\u540e\uff0c\u4e00\u5b9a\u662f\u6240\u671f\u5f85\u7684\u7ed3\u679c \u4e0d\u4e00\u5b9a\u662f\u51c6\u786e\u7684\uff0c\u4e5f\u53ef\u80fd\u51fa\u73b0\u504f\u5dee\uff0c\u4f46\u662f\u8fd9\u79cd\u504f\u5dee\u4e0d\u5e94\u8be5\u5f71\u54cd\u7a0b\u5e8f\u7684\u6b63\u5e38\u6267\u884c Java\u4e2d\u7684\u65ad\u8a00\u9700\u8981\u6307\u5b9a\u8fd0\u884c\u53c2\u6570\u624d\u751f\u6548 int x = 9 ; assert x == 10 ; \u7f16\u8bd1\u8fd0\u884c\u6ca1\u6709\u4efb\u4f55\u7ed3\u679c \u542f\u7528\u65ad\u8a00 java - ea Demo \u7a0b\u5e8f\u629b\u51fa\u5f02\u5e38 Exception in thread \"main\" java . lang . AssertionError","title":"125 assert\u65ad\u8a00"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u63a5\u53e3/","text":"\u7b2c20 \u7ae0 \uff1a \u63a5\u53e3\u7684\u5b9a\u4e49\u4e0e\u4f7f\u7528 87 \u63a5\u53e3\u57fa\u672c\u5b9a\u4e49 \u62bd\u8c61\u7c7b\u6bd4\u666e\u901a\u7c7b\u7684 \u4f18\u52bf\uff1a\u53ef\u4ee5\u5bf9\u5b50\u7c7b\u8986\u5199\u65b9\u6cd5\u63a7\u5236\uff0c \u7f3a\u70b9\uff1a\u6d89\u53ca\u5b89\u5168\u64cd\u4f5c\u95ee\u9898 \u63a5\u53e3\uff1a\u7eaf\u7cb9\u7684\u62bd\u8c61\u7c7b\uff0c\u62bd\u8c61\u65b9\u6cd5\u548c\u5168\u5c40\u5e38\u91cf JDK 1.8 Lambda \u5b9a\u4e49\uff0c\u63a5\u53e3\u540d\u524d\u52a0\u5165\u5b57\u6bcdI interface I\u7c7b\u540d {} 1\u3001\u63a5\u53e3\u9700\u8981\u88ab\u5b50\u7c7b\u5b9e\u73b0implements,\u4e00\u4e2a\u5b50\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u7236\u63a5\u53e3 2\u3001\u5b50\u7c7b\u5982\u679c\u4e0d\u662f\u62bd\u8c61\u7c7b\uff0c\u4e00\u5b9a\u8981\u8986\u5199\u63a5\u53e3\u4e2d\u5168\u90e8\u62bd\u8c61\u65b9\u6cd5 3\u3001\u63a5\u53e3\u5bf9\u8c61\u53ef\u4ee5\u5229\u7528\u5b50\u7c7b\u5bf9\u8c61\u7684\u5411\u4e0a\u8f6c\u578b\u8fdb\u884c\u5b9e\u4f8b\u5316 \u5b9e\u73b0\u63a5\u53e3\u7c7b\u589e\u52a0\u540e\u7f00\uff1aImpl // \u5b9a\u4e49\u63a5\u53e3 interface IMessage { // \u5168\u5c40\u5e38\u91cf public static final String NAME = \"Tom\" ; // \u62bd\u8c61\u65b9\u6cd5 public abstract String getInfo () ; } interface IChanel { // \u62bd\u8c61\u65b9\u6cd5 public abstract boolean connect () ; } // \u5b9e\u73b0\u63a5\u53e3 class MessageImpl implements IMessage , IChanel { public String getInfo () { return \"hi \" + NAME ; } public boolean connect () { return true ; } } class Demo { public static void main ( String [] args ) { IMessage message = new MessageImpl (); System . out . println ( message . getInfo ()); } } \u5229\u7528\u63a5\u53e3\uff0c\u5b50\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u591a\u5b9e\u73b0 MessageImpl \u662f IMessage, IChanel \u4e24\u4e2a\u63a5\u53e3\u7684\u5b9e\u73b0\u5b50\u7c7b \u63a5\u53e3\u4e0d\u80fd\u7ee7\u627f\u7236\u7c7b Object\u7c7b\u5bf9\u8c61\u53ef\u4ee5\u63a5\u6536\u6240\u6709\u6570\u636e\u7c7b\u578b \u5305\u62ec\uff1a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u7c7b\u5bf9\u8c61\uff0c\u63a5\u53e3\u5bf9\u8c61\uff0c\u6570\u7ec4 \u63a5\u53e3\u63cf\u8ff0\u7684\u516c\u5171\u5b9a\u4e49\u6807\u51c6\uff0c\u9ed8\u8ba4public\uff0c \u8986\u5199\u53ea\u80fd\u662fpublic \u4ee5\u4e0b\u4e24\u79cd\u5199\u6cd5\u7b49\u4ef7 interface IMessage { public static final String NAME = \"Tom\" ; public abstract String getInfo () ; } interface IMessage { String NAME = \"Tom\" ; String getInfo () ; } \u4e00\u4e2a\u62bd\u8c61\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u7236\u63a5\u53e3 \u4e00\u4e2a\u666e\u901a\u7c7b\u53ef\u4ee5\u7ee7\u627f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b9e\u73b0\u591a\u4e2a\u7236\u63a5\u53e3\uff0c \u5148\u7ee7\u627f\u518d\u5b9e\u73b0 \u63a5\u53e3\u4e2d\u53ef\u4ee5\u7701\u7565 abstract\uff0c \u62bd\u8c61\u7c7b\u4e2d\u4e0d\u80fd\u7701\u7565 // \u5b9a\u4e49\u63a5\u53e3 interface IMessage { // \u5168\u5c40\u5e38\u91cf public static final String NAME = \"Tom\" ; // \u62bd\u8c61\u65b9\u6cd5 public abstract String getInfo () ; } interface IChanel { // \u62bd\u8c61\u65b9\u6cd5 public abstract boolean connect () ; } abstract class DatabaseAbstract { public abstract boolean getConnect (); } // \u5355\u7ee7\u627f\u591a\u5b9e\u73b0 class MessageImpl extends DatabaseAbstract implements IMessage , IChanel { public String getInfo () { return \"hi \" + NAME ; } public boolean connect () { return true ; } public boolean getConnect (){ return true ; } } class Demo { public static void main ( String [] args ) { IMessage message = new MessageImpl (); System . out . println ( message . getInfo ()); } } \u63a5\u53e3\u591a\u7ee7\u627f \u63a5\u53e3\u65e0\u6cd5\u7ee7\u627f\u4e00\u4e2a\u7236\u7c7b\uff0c\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u7236\u63a5\u53e3 // \u5b9a\u4e49\u63a5\u53e3 interface IMessage { public abstract String getInfo () ; } interface IChanel { public abstract boolean connect () ; } interface IServer extends IMessage , IChanel { public abstract boolean getConnect (); } class MessageImpl implements IServer { public String getInfo () { return \"\" ; } public boolean connect () { return true ; } public boolean getConnect (){ return true ; } } class Demo { public static void main ( String [] args ) { IMessage message = new MessageImpl (); } } \u63a5\u53e3\u4e09\u79cd\u4f7f\u7528\u5f62\u5f0f 1\u3001\u8fdb\u884c\u6807\u51c6\u8bbe\u7f6e 2\u3001\u8868\u793a\u4e00\u79cd\u64cd\u4f5c\u80fd\u529b 3\u3001\u66b4\u9732\u8fdc\u7a0b\u65b9\u6cd5\u89c6\u56fe\uff0c\u4e00\u822c\u5728RPC\u5206\u5e03\u5f0f\u5f00\u53d1\u4f7f\u7528 88 \u63a5\u53e3\u5b9a\u4e49\u52a0\u5f3a JDK < 1.8 \u5982\u679c\u63a5\u53e3\u8bbe\u8ba1\u4e0d\u5f53\uff0c\u589e\u52a0\u65b9\u6cd5\u96be\u4ee5\u7ef4\u62a4 \u589e\u52a0\u8fc7\u6e21\u62bd\u8c61\u7c7b\u5b9e\u73b0\u63a5\u53e3\uff0c\u518d\u7528\u5b50\u7c7b\u7ee7\u627f\u62bd\u8c61\u7c7b JDK >= 1.8 \u5141\u8bb8\u63a5\u53e3\u4e2d\u5b9a\u4e49\u666e\u901a\u65b9\u6cd5 // \u5b9a\u4e49\u63a5\u53e3 interface IMessage { public abstract String getInfo () ; } // \u8fc7\u6e21\u62bd\u8c61\u7c7b abstract class MessageImpl implements IMessage { public abstract String getInfo (); // \u6269\u5145\u7684\u65b0\u65b9\u6cd5 public String getMessage (){ return \"message\" ; } } class Message extends MessageImpl { public String getInfo (){ return \"info\" ; } } class Demo { public static void main ( String [] args ) { Message message = new Message (); System . out . println ( message . getInfo ()); // info // \u8c03\u7528\u65b0\u65b9\u6cd5 System . out . println ( message . getMessage ()); // message } } \u63a5\u53e3\u4e2d\u589e\u52a0default\u666e\u901a\u65b9\u6cd5 // \u5b9a\u4e49\u63a5\u53e3 interface IMessage { public abstract String getInfo () ; // \u6269\u5145\u7684\u65b0\u65b9\u6cd5 public default String getMessage (){ return \"message\" ; } } class Message implements IMessage { public String getInfo (){ return \"info\" ; } } class Demo { public static void main ( String [] args ) { Message message = new Message (); System . out . println ( message . getInfo ()); // info // \u8c03\u7528\u65b0\u65b9\u6cd5 System . out . println ( message . getMessage ()); // message } } \u63a5\u53e3\u4e2d\u53ef\u4ee5\u589e\u52a0static\u65b9\u6cd5 // \u5b9a\u4e49\u63a5\u53e3 interface IMessage { public abstract String getInfo () ; public static IMessage getInstance (){ return new Message (); } } class Message implements IMessage { public String getInfo (){ return \"info\" ; } } class Demo { public static void main ( String [] args ) { IMessage message = IMessage . getInstance (); System . out . println ( message . getInfo ()); // info } } \u63a5\u53e3\u4e2d\u4e0d\u5efa\u8bae\u4f7fstatic \u548cdefault 89 \u4f7f\u7528\u63a5\u53e3\u5b9a\u4e49\u6807\u51c6 \u63a5\u53e3\u5e94\u7528\uff1a\u5b9a\u5236\u6807\u51c6 \u7535\u8111 - USB - \u952e\u76d8\u3001\u9f20\u6807 // \u5b9a\u4e49\u63a5\u53e3 interface IUsb { public abstract boolean check () ; public abstract void work (); } class Computer { public void plugin ( IUsb usb ){ if ( usb . check ()){ usb . work (); } else { System . out . println ( \"\u8bbe\u5907\u8fde\u63a5\u5f02\u5e38\" ); } } } class Keyboard implements IUsb { public boolean check (){ return true ; } public void work (){ System . out . println ( \"\u952e\u76d8\u5f00\u59cb\u5de5\u4f5c\" ); } } class Mouse implements IUsb { public boolean check (){ return false ; } public void work (){ System . out . println ( \"\u9f20\u6807\u5f00\u59cb\u5de5\u4f5c\" ); } } class Demo { public static void main ( String [] args ) { Computer computer = new Computer (); Keyboard keyboard = new Keyboard (); Mouse mouse = new Mouse (); computer . plugin ( keyboard ); // \u952e\u76d8\u5f00\u59cb\u5de5\u4f5c computer . plugin ( mouse ); // \u8bbe\u5907\u8fde\u63a5\u5f02\u5e38 } } 90 \u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f Factory new\u5173\u952e\u5b57 \u9020\u6210\u4ee3\u7801\u8026\u5408 JVM\uff0c\u5229\u7528\u865a\u62df\u673a\u6765\u8fd0\u884cJava\u7a0b\u5e8f \u826f\u597d\u7684\u8bbe\u8ba1\u5e94\u8be5\u907f\u514d\u8026\u5408 \u5ba2\u6237\u7aef\u7c7b\u4e0e\u63a5\u53e3\u7c7b\u7684\u5b50\u7c7b\u6ca1\u6709\u5173\u8054\uff0c\u901a\u8fc7Factory\u8054\u7cfb \u5982\u679c\u5b50\u7c7b\u8fdb\u884c\u6269\u5145\uff0c\u4fee\u6539Factroy\u7c7b\u5373\u53ef \u5de5\u5382\u6a21\u5f0f\u53ef\u4ee5\u9690\u85cf\u5b9e\u73b0\u5b50\u7c7b interface IFood { public abstract void eat (); } class Apple implements IFood { public void eat (){ System . out . println ( \"\u5403\u82f9\u679c\" ); } } class Bread implements IFood { public void eat (){ System . out . println ( \"\u5403\u9762\u5305\" ); } } class Factory { public static IFood getFood ( String foodName ){ if ( \"apple\" . equals ( foodName )){ return new Apple (); } else if ( \"bread\" . equals ( foodName )){ return new Bread (); } else { return null ; } } } class Demo { public static void main ( String [] args ) { IFood food = null ; food = Factory . getFood ( \"apple\" ); food . eat (); // \u5403\u82f9\u679c food = Factory . getFood ( \"bread\" ); food . eat (); // \u5403\u9762\u5305 } } 91 \u4ee3\u7406\u8bbe\u8ba1\u6a21\u5f0f Proxy \u4ee3\u7406\u6a21\u5f0f\u4e3b\u8981\u529f\u80fd\u662f\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u5c06\u6240\u6709\u5f00\u53d1\u6ce8\u610f\u529b\u53ea\u96c6\u4e2d\u5728\u6838\u5fc3\u4e1a\u52a1\u529f\u80fd\u4e0a \u4ee3\u7406\u6a21\u5f0f\u7279\u70b9\uff1a \u4e00\u4e2a\u63a5\u53e3\u63d0\u4f9b\u4e24\u4e2a\u5b50\u7c7b\uff1a \uff081\uff09\u5176\u4e2d\u4e00\u4e2a\u5b50\u7c7b\u662f\u771f\u5b9e\u4e1a\u52a1\u64cd\u4f5c\u7c7b \uff082\uff09\u53e6\u4e00\u4e2a\u5b50\u7c7b\u662f\u4ee3\u7406\u4e1a\u52a1\u64cd\u4f5c\u7c7b \u6ca1\u6709\u4ee3\u7406\u4e1a\u52a1\uff0c\u771f\u5b9e\u4e1a\u52a1\u65e0\u6cd5\u6b63\u5e38\u6267\u884c \u7c7b\u4f3cPython\u7684\u8bed\u6cd5\u7cd6\u88c5\u9970\u5668 interface IEat { public abstract void get (); } class RealEat implements IEat { public void get (){ System . out . println ( \"RealEat\" ); } } class ProxyEat implements IEat { private IEat eat ; public ProxyEat ( IEat eat ){ this . eat = eat ; } public void get (){ this . preEat (); this . eat . get (); this . afterEat (); } public void preEat (){ System . out . println ( \"preEat\" ); } public void afterEat (){ System . out . println ( \"afterEat\" ); } } class Demo { public static void main ( String [] args ) { IEat eat = new ProxyEat ( new RealEat ()); eat . get (); /** preEat RealEat afterEat */ } } 92 \u62bd\u8c61\u7c7b\u4e0e\u63a5\u53e3\u533a\u522b \u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u5b9a\u4e49\u975e\u5e38\u76f8\u4f3c JDK>=1.8 \u63a5\u53e3\u53ef\u4ee5\u5b9a\u4e49default\u3001static\u65b9\u6cd5 \u533a\u522b 1\u3001\u5b9a\u4e49 \uff081\uff09abstract class \u62bd\u8c61\u7c7b\u540d\u79f0{} \uff082\uff09interface \u63a5\u53e3\u7c7b\u540d\u79f0{} 2\u3001\u7ec4\u6210 \uff081\uff09\u6784\u9020\u65b9\u6cd5\u3001\u666e\u901a\u65b9\u6cd5\u3001\u9759\u6001\u65b9\u6cd5\u3001\u5168\u5c40\u5e38\u91cf\u3001\u666e\u901a\u6210\u5458 \uff082\uff09\u62bd\u8c61\u65b9\u6cd5\u3001\u5168\u5c40\u5e38\u91cf\u3001default\u65b9\u6cd5\u3001static\u65b9\u6cd5 3\u3001\u6743\u9650 \uff081\uff09\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u6743\u9650 \uff082\uff09\u53ea\u80fd\u591f\u4f7f\u7528public 4\u3001\u5b50\u7c7b\u4f7f\u7528 \uff081\uff09\u5b50\u7c7b\u901a\u8fc7extends \u5173\u952e\u5b57\u53ef\u4ee5\u7ee7\u627f\u4e00\u4e2a\u62bd\u8c61\u7c7b \uff082\uff09\u5b50\u7c7b\u4f7f\u7528implements \u5173\u952e\u5b57\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3 5\u3001\u4e24\u8005\u5173\u7cfb \uff081\uff09\u62bd\u8c61\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3 \uff082\uff09\u63a5\u53e3\u4e0d\u5141\u8bb8\u7ee7\u627f\u62bd\u8c61\u7c7b\uff0c\u4f46\u662f\u5141\u8bb8\u7ee7\u627f\u591a\u4e2a\u7236\u63a5\u53e3 6\u3001\u4f7f\u7528 \uff081\uff09\u62bd\u8c61\u7c7b\u6216\u63a5\u53e3\u5fc5\u987b\u5b9a\u4e49\u5b50\u7c7b \uff082\uff09\u5b50\u7c7b\u4e00\u5b9a\u8981\u8986\u5199\u62bd\u8c61\u7c7b\u6216\u63a5\u53e3\u4e2d\u7684\u5168\u90e8\u62bd\u8c61\u65b9\u6cd5 \uff083\uff09\u901a\u8fc7\u5b50\u7c7b\u5411\u4e0a\u8f6c\u578b\u5b9e\u73b0\u62bd\u8c61\u7c7b\u6216\u63a5\u53e3\u5bf9\u8c61\u5b9e\u4f8b\u5316 \u539f\u5219\uff1a \u5f53\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u90fd\u53ef\u4ee5\u4f7f\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u4f18\u5148\u8003\u8651\u63a5\u53e3 \u56e0\u4e3a\u63a5\u53e3\u53ef\u4ee5\u907f\u514d\u5b50\u7c7b\u7684\u5355\u7ee7\u627f\u5c40\u9650 \u6b63\u5e38\u7684\u8bbe\u8ba1\u89d2\u5ea6\uff0c\u4e5f\u9700\u8981\u4ece\u63a5\u53e3\u5f00\u59cb\u8fdb\u884c\u9879\u76ee\u7684\u6574\u4f53\u8bbe\u8ba1 93 \u6848\u4f8b\u5206\u6790\u4e00\uff08\u83b7\u53d6\u7c7b\u4fe1\u606f\uff09 \u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u662fJava\u6700\u6838\u5fc3\u7684\u6982\u5ff5 \u5b9a\u4e49ClassName\u63a5\u53e3 -\u62bd\u8c61\u65b9\u6cd5getClassName \u7c7bCompany\u5b9e\u73b0\u63a5\u53e3ClassName -\u65b9\u6cd5getClassName\u83b7\u53d6\u8be5\u7c7b\u540d\u79f0 \u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528Company\u7c7b // \u63a5\u53e3\u524d\u7f00 I interface IClassName { public String getClassName (); } class Company implements IClassName { public String getClassName (){ return \"Company\" ; } } class Demo { public static void main ( String [] args ) { IClassName className = new Company (); System . out . println ( className . getClassName ()); // Company } } 94 \u6848\u4f8b\u5206\u6790\u4e8c\uff08\u7ed8\u56fe\u5904\u7406\uff09 interface IGraphical { public void paint (); } class Point { private int x ; private int y ; public Point ( int x , int y ){ this . x = x ; this . y = y ; } @Override public String toString (){ return \"Point(\" + this . x + \", \" + this . y + \")\" ; } } class Triangle implements IGraphical { private Point p1 ; private Point p2 ; private Point p3 ; public Triangle ( Point p1 , Point p2 , Point p3 ){ this . p1 = p1 ; this . p2 = p2 ; this . p3 = p3 ; } public void paint (){ System . out . println ( \"Triangle: \" + this . p1 + this . p2 + this . p3 ); } } class Rectangle implements IGraphical { private Point p1 ; private Point p2 ; private Point p3 ; private Point p4 ; public Rectangle ( Point p1 , Point p2 , Point p3 , Point p4 ){ this . p1 = p1 ; this . p2 = p2 ; this . p3 = p3 ; this . p4 = p4 ; } public void paint (){ System . out . println ( \"Rectangle: \" + this . p1 + this . p2 + this . p3 + this . p4 ); } } class Factory { public static IGraphical getInstance ( String className , Point ... points ){ if ( \"Triangle\" . equalsIgnoreCase ( className )){ return new Triangle ( points [ 0 ], points [ 1 ], points [ 2 ]) ; } else if ( \"Rectangle\" . equalsIgnoreCase ( className )){ return new Rectangle ( points [ 0 ], points [ 1 ], points [ 2 ], points [ 3 ]) ; } else { return null ; } } } class Demo { public static void main ( String [] args ) { IGraphical g1 = Factory . getInstance ( \"rectangle\" , new Point ( 1 , 2 ), new Point ( 3 , 4 ), new Point ( 5 , 6 ), new Point ( 7 , 8 ) ); g1 . paint (); // Rectangle: Point(1, 2)Point(3, 4)Point(5, 6)Point(7, 8) IGraphical g2 = Factory . getInstance ( \"triangle\" , new Point ( 1 , 2 ), new Point ( 3 , 4 ), new Point ( 5 , 6 ) ); g2 . paint (); // Triangle: Point(1, 2)Point(3, 4)Point(5, 6) } } 95 \u6848\u4f8b\u5206\u6790\u4e09\uff08\u56fe\u5f62\uff09 \u5b9a\u4e49\u4e00\u4e2a\u5f62\u72b6Shape \u62bd\u8c61\u65b9\u6cd5\uff1a\u9762\u79efarea\u3001\u5468\u957fperimeter \u5b9a\u4e49\u4e8c\u7ef4\u5f62\u72b6 \u77e9\u5f62\uff0c\u4e09\u89d2\u5f62\uff0c\u692d\u5706\u7b49\u5b50\u7c7b abstract class AbstractShape { // \u5468\u957f public abstract double getPerimeter (); // \u9762\u79ef public abstract double getArea (); } class Circle extends AbstractShape { private double radius ; private final double PI = 3.14 ; public Circle ( double radius ){ this . radius = radius ; } public double getPerimeter (){ return 2 * PI * this . radius ; } public double getArea (){ return PI * this . radius * this . radius ; } } class Rectangle extends AbstractShape { private double length ; private double width ; public Rectangle ( double length , double width ){ this . length = length ; this . width = width ; } public double getPerimeter (){ return 2 * ( this . length + this . width ) ; } public double getArea (){ return this . length * this . width ; } } class Factory { public static AbstractShape getInstance ( String className , double ... args ){ if ( \"Rectangle\" . equalsIgnoreCase ( className )){ return new Rectangle ( args [ 0 ], args [ 1 ]) ; } else if ( \"Circle\" . equalsIgnoreCase ( className )){ return new Circle ( args [ 0 ]) ; } else { return null ; } } } class Demo { public static void main ( String [] args ) { AbstractShape shape = Factory . getInstance ( \"Rectangle\" , 2.0 , 3.0 ) ; System . out . println ( shape . getArea ()); // 6.0 System . out . println ( shape . getPerimeter ()); // 10.0 } }","title":"\u7b2c20 \u7ae0 \uff1a \u63a5\u53e3\u7684\u5b9a\u4e49\u4e0e\u4f7f\u7528"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u63a5\u53e3/#20","text":"","title":"\u7b2c20 \u7ae0 \uff1a \u63a5\u53e3\u7684\u5b9a\u4e49\u4e0e\u4f7f\u7528"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u63a5\u53e3/#87","text":"\u62bd\u8c61\u7c7b\u6bd4\u666e\u901a\u7c7b\u7684 \u4f18\u52bf\uff1a\u53ef\u4ee5\u5bf9\u5b50\u7c7b\u8986\u5199\u65b9\u6cd5\u63a7\u5236\uff0c \u7f3a\u70b9\uff1a\u6d89\u53ca\u5b89\u5168\u64cd\u4f5c\u95ee\u9898 \u63a5\u53e3\uff1a\u7eaf\u7cb9\u7684\u62bd\u8c61\u7c7b\uff0c\u62bd\u8c61\u65b9\u6cd5\u548c\u5168\u5c40\u5e38\u91cf JDK 1.8 Lambda \u5b9a\u4e49\uff0c\u63a5\u53e3\u540d\u524d\u52a0\u5165\u5b57\u6bcdI interface I\u7c7b\u540d {} 1\u3001\u63a5\u53e3\u9700\u8981\u88ab\u5b50\u7c7b\u5b9e\u73b0implements,\u4e00\u4e2a\u5b50\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u7236\u63a5\u53e3 2\u3001\u5b50\u7c7b\u5982\u679c\u4e0d\u662f\u62bd\u8c61\u7c7b\uff0c\u4e00\u5b9a\u8981\u8986\u5199\u63a5\u53e3\u4e2d\u5168\u90e8\u62bd\u8c61\u65b9\u6cd5 3\u3001\u63a5\u53e3\u5bf9\u8c61\u53ef\u4ee5\u5229\u7528\u5b50\u7c7b\u5bf9\u8c61\u7684\u5411\u4e0a\u8f6c\u578b\u8fdb\u884c\u5b9e\u4f8b\u5316 \u5b9e\u73b0\u63a5\u53e3\u7c7b\u589e\u52a0\u540e\u7f00\uff1aImpl // \u5b9a\u4e49\u63a5\u53e3 interface IMessage { // \u5168\u5c40\u5e38\u91cf public static final String NAME = \"Tom\" ; // \u62bd\u8c61\u65b9\u6cd5 public abstract String getInfo () ; } interface IChanel { // \u62bd\u8c61\u65b9\u6cd5 public abstract boolean connect () ; } // \u5b9e\u73b0\u63a5\u53e3 class MessageImpl implements IMessage , IChanel { public String getInfo () { return \"hi \" + NAME ; } public boolean connect () { return true ; } } class Demo { public static void main ( String [] args ) { IMessage message = new MessageImpl (); System . out . println ( message . getInfo ()); } } \u5229\u7528\u63a5\u53e3\uff0c\u5b50\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u591a\u5b9e\u73b0 MessageImpl \u662f IMessage, IChanel \u4e24\u4e2a\u63a5\u53e3\u7684\u5b9e\u73b0\u5b50\u7c7b \u63a5\u53e3\u4e0d\u80fd\u7ee7\u627f\u7236\u7c7b Object\u7c7b\u5bf9\u8c61\u53ef\u4ee5\u63a5\u6536\u6240\u6709\u6570\u636e\u7c7b\u578b \u5305\u62ec\uff1a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u7c7b\u5bf9\u8c61\uff0c\u63a5\u53e3\u5bf9\u8c61\uff0c\u6570\u7ec4 \u63a5\u53e3\u63cf\u8ff0\u7684\u516c\u5171\u5b9a\u4e49\u6807\u51c6\uff0c\u9ed8\u8ba4public\uff0c \u8986\u5199\u53ea\u80fd\u662fpublic \u4ee5\u4e0b\u4e24\u79cd\u5199\u6cd5\u7b49\u4ef7 interface IMessage { public static final String NAME = \"Tom\" ; public abstract String getInfo () ; } interface IMessage { String NAME = \"Tom\" ; String getInfo () ; } \u4e00\u4e2a\u62bd\u8c61\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u7236\u63a5\u53e3 \u4e00\u4e2a\u666e\u901a\u7c7b\u53ef\u4ee5\u7ee7\u627f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b9e\u73b0\u591a\u4e2a\u7236\u63a5\u53e3\uff0c \u5148\u7ee7\u627f\u518d\u5b9e\u73b0 \u63a5\u53e3\u4e2d\u53ef\u4ee5\u7701\u7565 abstract\uff0c \u62bd\u8c61\u7c7b\u4e2d\u4e0d\u80fd\u7701\u7565 // \u5b9a\u4e49\u63a5\u53e3 interface IMessage { // \u5168\u5c40\u5e38\u91cf public static final String NAME = \"Tom\" ; // \u62bd\u8c61\u65b9\u6cd5 public abstract String getInfo () ; } interface IChanel { // \u62bd\u8c61\u65b9\u6cd5 public abstract boolean connect () ; } abstract class DatabaseAbstract { public abstract boolean getConnect (); } // \u5355\u7ee7\u627f\u591a\u5b9e\u73b0 class MessageImpl extends DatabaseAbstract implements IMessage , IChanel { public String getInfo () { return \"hi \" + NAME ; } public boolean connect () { return true ; } public boolean getConnect (){ return true ; } } class Demo { public static void main ( String [] args ) { IMessage message = new MessageImpl (); System . out . println ( message . getInfo ()); } } \u63a5\u53e3\u591a\u7ee7\u627f \u63a5\u53e3\u65e0\u6cd5\u7ee7\u627f\u4e00\u4e2a\u7236\u7c7b\uff0c\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u7236\u63a5\u53e3 // \u5b9a\u4e49\u63a5\u53e3 interface IMessage { public abstract String getInfo () ; } interface IChanel { public abstract boolean connect () ; } interface IServer extends IMessage , IChanel { public abstract boolean getConnect (); } class MessageImpl implements IServer { public String getInfo () { return \"\" ; } public boolean connect () { return true ; } public boolean getConnect (){ return true ; } } class Demo { public static void main ( String [] args ) { IMessage message = new MessageImpl (); } } \u63a5\u53e3\u4e09\u79cd\u4f7f\u7528\u5f62\u5f0f 1\u3001\u8fdb\u884c\u6807\u51c6\u8bbe\u7f6e 2\u3001\u8868\u793a\u4e00\u79cd\u64cd\u4f5c\u80fd\u529b 3\u3001\u66b4\u9732\u8fdc\u7a0b\u65b9\u6cd5\u89c6\u56fe\uff0c\u4e00\u822c\u5728RPC\u5206\u5e03\u5f0f\u5f00\u53d1\u4f7f\u7528","title":"87 \u63a5\u53e3\u57fa\u672c\u5b9a\u4e49"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u63a5\u53e3/#88","text":"JDK < 1.8 \u5982\u679c\u63a5\u53e3\u8bbe\u8ba1\u4e0d\u5f53\uff0c\u589e\u52a0\u65b9\u6cd5\u96be\u4ee5\u7ef4\u62a4 \u589e\u52a0\u8fc7\u6e21\u62bd\u8c61\u7c7b\u5b9e\u73b0\u63a5\u53e3\uff0c\u518d\u7528\u5b50\u7c7b\u7ee7\u627f\u62bd\u8c61\u7c7b JDK >= 1.8 \u5141\u8bb8\u63a5\u53e3\u4e2d\u5b9a\u4e49\u666e\u901a\u65b9\u6cd5 // \u5b9a\u4e49\u63a5\u53e3 interface IMessage { public abstract String getInfo () ; } // \u8fc7\u6e21\u62bd\u8c61\u7c7b abstract class MessageImpl implements IMessage { public abstract String getInfo (); // \u6269\u5145\u7684\u65b0\u65b9\u6cd5 public String getMessage (){ return \"message\" ; } } class Message extends MessageImpl { public String getInfo (){ return \"info\" ; } } class Demo { public static void main ( String [] args ) { Message message = new Message (); System . out . println ( message . getInfo ()); // info // \u8c03\u7528\u65b0\u65b9\u6cd5 System . out . println ( message . getMessage ()); // message } } \u63a5\u53e3\u4e2d\u589e\u52a0default\u666e\u901a\u65b9\u6cd5 // \u5b9a\u4e49\u63a5\u53e3 interface IMessage { public abstract String getInfo () ; // \u6269\u5145\u7684\u65b0\u65b9\u6cd5 public default String getMessage (){ return \"message\" ; } } class Message implements IMessage { public String getInfo (){ return \"info\" ; } } class Demo { public static void main ( String [] args ) { Message message = new Message (); System . out . println ( message . getInfo ()); // info // \u8c03\u7528\u65b0\u65b9\u6cd5 System . out . println ( message . getMessage ()); // message } } \u63a5\u53e3\u4e2d\u53ef\u4ee5\u589e\u52a0static\u65b9\u6cd5 // \u5b9a\u4e49\u63a5\u53e3 interface IMessage { public abstract String getInfo () ; public static IMessage getInstance (){ return new Message (); } } class Message implements IMessage { public String getInfo (){ return \"info\" ; } } class Demo { public static void main ( String [] args ) { IMessage message = IMessage . getInstance (); System . out . println ( message . getInfo ()); // info } } \u63a5\u53e3\u4e2d\u4e0d\u5efa\u8bae\u4f7fstatic \u548cdefault","title":"88 \u63a5\u53e3\u5b9a\u4e49\u52a0\u5f3a"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u63a5\u53e3/#89","text":"\u63a5\u53e3\u5e94\u7528\uff1a\u5b9a\u5236\u6807\u51c6 \u7535\u8111 - USB - \u952e\u76d8\u3001\u9f20\u6807 // \u5b9a\u4e49\u63a5\u53e3 interface IUsb { public abstract boolean check () ; public abstract void work (); } class Computer { public void plugin ( IUsb usb ){ if ( usb . check ()){ usb . work (); } else { System . out . println ( \"\u8bbe\u5907\u8fde\u63a5\u5f02\u5e38\" ); } } } class Keyboard implements IUsb { public boolean check (){ return true ; } public void work (){ System . out . println ( \"\u952e\u76d8\u5f00\u59cb\u5de5\u4f5c\" ); } } class Mouse implements IUsb { public boolean check (){ return false ; } public void work (){ System . out . println ( \"\u9f20\u6807\u5f00\u59cb\u5de5\u4f5c\" ); } } class Demo { public static void main ( String [] args ) { Computer computer = new Computer (); Keyboard keyboard = new Keyboard (); Mouse mouse = new Mouse (); computer . plugin ( keyboard ); // \u952e\u76d8\u5f00\u59cb\u5de5\u4f5c computer . plugin ( mouse ); // \u8bbe\u5907\u8fde\u63a5\u5f02\u5e38 } }","title":"89 \u4f7f\u7528\u63a5\u53e3\u5b9a\u4e49\u6807\u51c6"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u63a5\u53e3/#90-factory","text":"new\u5173\u952e\u5b57 \u9020\u6210\u4ee3\u7801\u8026\u5408 JVM\uff0c\u5229\u7528\u865a\u62df\u673a\u6765\u8fd0\u884cJava\u7a0b\u5e8f \u826f\u597d\u7684\u8bbe\u8ba1\u5e94\u8be5\u907f\u514d\u8026\u5408 \u5ba2\u6237\u7aef\u7c7b\u4e0e\u63a5\u53e3\u7c7b\u7684\u5b50\u7c7b\u6ca1\u6709\u5173\u8054\uff0c\u901a\u8fc7Factory\u8054\u7cfb \u5982\u679c\u5b50\u7c7b\u8fdb\u884c\u6269\u5145\uff0c\u4fee\u6539Factroy\u7c7b\u5373\u53ef \u5de5\u5382\u6a21\u5f0f\u53ef\u4ee5\u9690\u85cf\u5b9e\u73b0\u5b50\u7c7b interface IFood { public abstract void eat (); } class Apple implements IFood { public void eat (){ System . out . println ( \"\u5403\u82f9\u679c\" ); } } class Bread implements IFood { public void eat (){ System . out . println ( \"\u5403\u9762\u5305\" ); } } class Factory { public static IFood getFood ( String foodName ){ if ( \"apple\" . equals ( foodName )){ return new Apple (); } else if ( \"bread\" . equals ( foodName )){ return new Bread (); } else { return null ; } } } class Demo { public static void main ( String [] args ) { IFood food = null ; food = Factory . getFood ( \"apple\" ); food . eat (); // \u5403\u82f9\u679c food = Factory . getFood ( \"bread\" ); food . eat (); // \u5403\u9762\u5305 } }","title":"90 \u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f Factory"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u63a5\u53e3/#91-proxy","text":"\u4ee3\u7406\u6a21\u5f0f\u4e3b\u8981\u529f\u80fd\u662f\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u5c06\u6240\u6709\u5f00\u53d1\u6ce8\u610f\u529b\u53ea\u96c6\u4e2d\u5728\u6838\u5fc3\u4e1a\u52a1\u529f\u80fd\u4e0a \u4ee3\u7406\u6a21\u5f0f\u7279\u70b9\uff1a \u4e00\u4e2a\u63a5\u53e3\u63d0\u4f9b\u4e24\u4e2a\u5b50\u7c7b\uff1a \uff081\uff09\u5176\u4e2d\u4e00\u4e2a\u5b50\u7c7b\u662f\u771f\u5b9e\u4e1a\u52a1\u64cd\u4f5c\u7c7b \uff082\uff09\u53e6\u4e00\u4e2a\u5b50\u7c7b\u662f\u4ee3\u7406\u4e1a\u52a1\u64cd\u4f5c\u7c7b \u6ca1\u6709\u4ee3\u7406\u4e1a\u52a1\uff0c\u771f\u5b9e\u4e1a\u52a1\u65e0\u6cd5\u6b63\u5e38\u6267\u884c \u7c7b\u4f3cPython\u7684\u8bed\u6cd5\u7cd6\u88c5\u9970\u5668 interface IEat { public abstract void get (); } class RealEat implements IEat { public void get (){ System . out . println ( \"RealEat\" ); } } class ProxyEat implements IEat { private IEat eat ; public ProxyEat ( IEat eat ){ this . eat = eat ; } public void get (){ this . preEat (); this . eat . get (); this . afterEat (); } public void preEat (){ System . out . println ( \"preEat\" ); } public void afterEat (){ System . out . println ( \"afterEat\" ); } } class Demo { public static void main ( String [] args ) { IEat eat = new ProxyEat ( new RealEat ()); eat . get (); /** preEat RealEat afterEat */ } }","title":"91 \u4ee3\u7406\u8bbe\u8ba1\u6a21\u5f0f Proxy"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u63a5\u53e3/#92","text":"\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u5b9a\u4e49\u975e\u5e38\u76f8\u4f3c JDK>=1.8 \u63a5\u53e3\u53ef\u4ee5\u5b9a\u4e49default\u3001static\u65b9\u6cd5 \u533a\u522b 1\u3001\u5b9a\u4e49 \uff081\uff09abstract class \u62bd\u8c61\u7c7b\u540d\u79f0{} \uff082\uff09interface \u63a5\u53e3\u7c7b\u540d\u79f0{} 2\u3001\u7ec4\u6210 \uff081\uff09\u6784\u9020\u65b9\u6cd5\u3001\u666e\u901a\u65b9\u6cd5\u3001\u9759\u6001\u65b9\u6cd5\u3001\u5168\u5c40\u5e38\u91cf\u3001\u666e\u901a\u6210\u5458 \uff082\uff09\u62bd\u8c61\u65b9\u6cd5\u3001\u5168\u5c40\u5e38\u91cf\u3001default\u65b9\u6cd5\u3001static\u65b9\u6cd5 3\u3001\u6743\u9650 \uff081\uff09\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u6743\u9650 \uff082\uff09\u53ea\u80fd\u591f\u4f7f\u7528public 4\u3001\u5b50\u7c7b\u4f7f\u7528 \uff081\uff09\u5b50\u7c7b\u901a\u8fc7extends \u5173\u952e\u5b57\u53ef\u4ee5\u7ee7\u627f\u4e00\u4e2a\u62bd\u8c61\u7c7b \uff082\uff09\u5b50\u7c7b\u4f7f\u7528implements \u5173\u952e\u5b57\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3 5\u3001\u4e24\u8005\u5173\u7cfb \uff081\uff09\u62bd\u8c61\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3 \uff082\uff09\u63a5\u53e3\u4e0d\u5141\u8bb8\u7ee7\u627f\u62bd\u8c61\u7c7b\uff0c\u4f46\u662f\u5141\u8bb8\u7ee7\u627f\u591a\u4e2a\u7236\u63a5\u53e3 6\u3001\u4f7f\u7528 \uff081\uff09\u62bd\u8c61\u7c7b\u6216\u63a5\u53e3\u5fc5\u987b\u5b9a\u4e49\u5b50\u7c7b \uff082\uff09\u5b50\u7c7b\u4e00\u5b9a\u8981\u8986\u5199\u62bd\u8c61\u7c7b\u6216\u63a5\u53e3\u4e2d\u7684\u5168\u90e8\u62bd\u8c61\u65b9\u6cd5 \uff083\uff09\u901a\u8fc7\u5b50\u7c7b\u5411\u4e0a\u8f6c\u578b\u5b9e\u73b0\u62bd\u8c61\u7c7b\u6216\u63a5\u53e3\u5bf9\u8c61\u5b9e\u4f8b\u5316 \u539f\u5219\uff1a \u5f53\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u90fd\u53ef\u4ee5\u4f7f\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u4f18\u5148\u8003\u8651\u63a5\u53e3 \u56e0\u4e3a\u63a5\u53e3\u53ef\u4ee5\u907f\u514d\u5b50\u7c7b\u7684\u5355\u7ee7\u627f\u5c40\u9650 \u6b63\u5e38\u7684\u8bbe\u8ba1\u89d2\u5ea6\uff0c\u4e5f\u9700\u8981\u4ece\u63a5\u53e3\u5f00\u59cb\u8fdb\u884c\u9879\u76ee\u7684\u6574\u4f53\u8bbe\u8ba1","title":"92 \u62bd\u8c61\u7c7b\u4e0e\u63a5\u53e3\u533a\u522b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u63a5\u53e3/#93","text":"\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u662fJava\u6700\u6838\u5fc3\u7684\u6982\u5ff5 \u5b9a\u4e49ClassName\u63a5\u53e3 -\u62bd\u8c61\u65b9\u6cd5getClassName \u7c7bCompany\u5b9e\u73b0\u63a5\u53e3ClassName -\u65b9\u6cd5getClassName\u83b7\u53d6\u8be5\u7c7b\u540d\u79f0 \u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528Company\u7c7b // \u63a5\u53e3\u524d\u7f00 I interface IClassName { public String getClassName (); } class Company implements IClassName { public String getClassName (){ return \"Company\" ; } } class Demo { public static void main ( String [] args ) { IClassName className = new Company (); System . out . println ( className . getClassName ()); // Company } }","title":"93 \u6848\u4f8b\u5206\u6790\u4e00\uff08\u83b7\u53d6\u7c7b\u4fe1\u606f\uff09"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u63a5\u53e3/#94","text":"interface IGraphical { public void paint (); } class Point { private int x ; private int y ; public Point ( int x , int y ){ this . x = x ; this . y = y ; } @Override public String toString (){ return \"Point(\" + this . x + \", \" + this . y + \")\" ; } } class Triangle implements IGraphical { private Point p1 ; private Point p2 ; private Point p3 ; public Triangle ( Point p1 , Point p2 , Point p3 ){ this . p1 = p1 ; this . p2 = p2 ; this . p3 = p3 ; } public void paint (){ System . out . println ( \"Triangle: \" + this . p1 + this . p2 + this . p3 ); } } class Rectangle implements IGraphical { private Point p1 ; private Point p2 ; private Point p3 ; private Point p4 ; public Rectangle ( Point p1 , Point p2 , Point p3 , Point p4 ){ this . p1 = p1 ; this . p2 = p2 ; this . p3 = p3 ; this . p4 = p4 ; } public void paint (){ System . out . println ( \"Rectangle: \" + this . p1 + this . p2 + this . p3 + this . p4 ); } } class Factory { public static IGraphical getInstance ( String className , Point ... points ){ if ( \"Triangle\" . equalsIgnoreCase ( className )){ return new Triangle ( points [ 0 ], points [ 1 ], points [ 2 ]) ; } else if ( \"Rectangle\" . equalsIgnoreCase ( className )){ return new Rectangle ( points [ 0 ], points [ 1 ], points [ 2 ], points [ 3 ]) ; } else { return null ; } } } class Demo { public static void main ( String [] args ) { IGraphical g1 = Factory . getInstance ( \"rectangle\" , new Point ( 1 , 2 ), new Point ( 3 , 4 ), new Point ( 5 , 6 ), new Point ( 7 , 8 ) ); g1 . paint (); // Rectangle: Point(1, 2)Point(3, 4)Point(5, 6)Point(7, 8) IGraphical g2 = Factory . getInstance ( \"triangle\" , new Point ( 1 , 2 ), new Point ( 3 , 4 ), new Point ( 5 , 6 ) ); g2 . paint (); // Triangle: Point(1, 2)Point(3, 4)Point(5, 6) } }","title":"94 \u6848\u4f8b\u5206\u6790\u4e8c\uff08\u7ed8\u56fe\u5904\u7406\uff09"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u63a5\u53e3/#95","text":"\u5b9a\u4e49\u4e00\u4e2a\u5f62\u72b6Shape \u62bd\u8c61\u65b9\u6cd5\uff1a\u9762\u79efarea\u3001\u5468\u957fperimeter \u5b9a\u4e49\u4e8c\u7ef4\u5f62\u72b6 \u77e9\u5f62\uff0c\u4e09\u89d2\u5f62\uff0c\u692d\u5706\u7b49\u5b50\u7c7b abstract class AbstractShape { // \u5468\u957f public abstract double getPerimeter (); // \u9762\u79ef public abstract double getArea (); } class Circle extends AbstractShape { private double radius ; private final double PI = 3.14 ; public Circle ( double radius ){ this . radius = radius ; } public double getPerimeter (){ return 2 * PI * this . radius ; } public double getArea (){ return PI * this . radius * this . radius ; } } class Rectangle extends AbstractShape { private double length ; private double width ; public Rectangle ( double length , double width ){ this . length = length ; this . width = width ; } public double getPerimeter (){ return 2 * ( this . length + this . width ) ; } public double getArea (){ return this . length * this . width ; } } class Factory { public static AbstractShape getInstance ( String className , double ... args ){ if ( \"Rectangle\" . equalsIgnoreCase ( className )){ return new Rectangle ( args [ 0 ], args [ 1 ]) ; } else if ( \"Circle\" . equalsIgnoreCase ( className )){ return new Circle ( args [ 0 ]) ; } else { return null ; } } } class Demo { public static void main ( String [] args ) { AbstractShape shape = Factory . getInstance ( \"Rectangle\" , 2.0 , 3.0 ) ; System . out . println ( shape . getArea ()); // 6.0 System . out . println ( shape . getPerimeter ()); // 10.0 } }","title":"95 \u6848\u4f8b\u5206\u6790\u4e09\uff08\u56fe\u5f62\uff09"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/","text":"\u4e03\u3001\u6570\u7ec4\u7684\u5b9a\u4e49\u4e0e\u4f7f\u7528 25 \u6570\u7ec4\u7684\u57fa\u672c\u5b9a\u4e49 \u6570\u7ec4\uff1a\u4e00\u7ec4\u76f8\u5173\u53d8\u91cf\u7684\u96c6\u5408 \u5f15\u7528\u6570\u636e\u7c7b\u578b \u6570\u7ec4\u5b9a\u4e49 1\u3001\u6570\u7ec4\u52a8\u6001\u521d\u59cb\u5316(\u9ed8\u8ba4\u503c\u662f\u5bf9\u5e94\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c) \u6570\u636e\u7c7b\u578b \u6570\u7ec4\u540d\u79f0 [] = new \u6570\u636e\u7c7b\u578b[\u957f\u5ea6]; \u6570\u636e\u7c7b\u578b[] \u6570\u7ec4\u540d\u79f0 = new \u6570\u636e\u7c7b\u578b[\u957f\u5ea6]; 2\u3001\u6570\u7ec4\u9759\u6001\u521d\u59cb\u5316 \u7b80\u5199\uff1a \u6570\u636e\u7c7b\u578b \u6570\u7ec4\u540d\u79f0 [] = {\u6570\u636e1\uff0c \u6570\u636e2\uff0c \u6570\u636e3...}; \u5b8c\u6574\u683c\u5f0f\uff08\u63a8\u8350\uff09\uff1a \u6570\u636e\u7c7b\u578b \u6570\u7ec4\u540d\u79f0 [] = new \u6570\u636e\u7c7b\u578b[] {\u6570\u636e1\uff0c \u6570\u636e2\uff0c \u6570\u636e3...}; \u4e0b\u6807\u8bbf\u95ee\u5143\u7d20\uff0c\u4e0b\u6807\u4ece0\u5f00\u59cb \u4e0b\u6807\u8303\u56f4\uff1a0 ~ \u957f\u5ea6-1 // 1\u3001\u52a8\u6001\u521d\u59cb\u5316 int data [] = new int [ 3 ]; // \u8bbe\u7f6e\u503c data [ 0 ] = 1 ; data [ 1 ] = 2 ; data [ 2 ] = 3 ; //\u904d\u5386\uff0c\u83b7\u53d6\u503c for ( int i = 0 ; i < data . length ; i ++) { System . out . println ( data [ i ]); // 1 2 3 } // 2\u3001\u9759\u6001\u521d\u59cb\u5316 int [] data = new int []{ 1 , 2 , 3 }; //\u904d\u5386\uff0c\u83b7\u53d6\u503c for ( int i = 0 ; i < data . length ; i ++) { System . out . println ( data [ i ]); // 1 2 3 } 26 \u6570\u7ec4\u5f15\u7528\u4f20\u9012\u5206\u6790 \u6570\u7ec4\u662f\u5f15\u7528\u6570\u636e\u7c7b\u578b int [] data = new int []{ 1 , 2 , 3 }; int [] temp = data ; temp [ 0 ] = 10 ; //\u904d\u5386\uff0c\u83b7\u53d6\u503c for ( int i = 0 ; i < data . length ; i ++) { System . out . println ( data [ i ]); // 10 2 3 } 27 foreach\u8f93\u51fa JDK>=1.5 \u907f\u514d\u64cd\u4f5c\u4e0b\u6807\uff0c\u4ece.NET\u5f15\u5165 \u8bed\u6cd5 foreach ( \u6570\u636e\u7c7b\u578b \u53d8\u91cf : \u6570\u7ec4 | \u96c6\u5408 ) {} int [] data = new int []{ 1 , 2 , 3 }; for ( int temp : data ) { System . out . println ( temp ); // 1 2 3 } 28 \u4e8c\u7ef4\u6570\u7ec4 \u5b9a\u4e49 1\u3001\u52a8\u6001\u521d\u59cb\u5316 \u6570\u636e\u7c7b\u578b [][] \u6570\u7ec4\u540d\u79f0 = new \u6570\u636e\u7c7b\u578b [ \u884c\u4e2a\u6570 ][ \u5217\u4e2a\u6570 ] ; 2\u3001\u9759\u6001\u521d\u59cb\u5316 \u6570\u636e\u7c7b\u578b [][] \u6570\u7ec4\u540d\u79f0 = new \u6570\u636e\u7c7b\u578b [][] {{\u6570\u636e 1 , \u6570\u636e 2 , ... } , {\u6570\u636e 1 , \u6570\u636e 2 , ... } ... } ; int [][] data = new int [][]{{ 1 , 2 , 3 }, { 4 , 5 , 6 }}; // for\u5faa\u73af for ( int x = 0 ; x < data . length ; x ++) { for ( int y = 0 ; y < data [ x ]. length ; y ++) { System . out . println ( data [ x ][ y ]) ; // 1 2 3 4 5 6 } } // foreach \u5faa\u73af for ( int [] row : data ) { for ( int cell : row ) { System . out . println ( cell ) ; // 1 2 3 4 5 6 } } 29 \u6570\u7ec4\u4e0e\u65b9\u6cd5 \u540c\u4e00\u5757\u5806\u5185\u5b58\u88ab\u4e0d\u540c\u6808\u53d8\u91cf\u6307\u5411 class ArrayDemo { public static int [] getArray (){ int [] arr = new int [] { 1 , 2 , 3 }; return arr ; } public static void printArray ( int [] arr ){ for ( int x : arr ) { System . out . println ( x ); } } public static void main ( String [] args ) { int [] arr = getArray (); printArray ( arr ); // 1 2 3 } } \u4e3b\u7c7b\uff1a\u4e3b\u65b9\u6cd5\u6240\u5728\u7684\u7c7b \u4e3b\u7c7b\u7684\u529f\u80fd\u4e0d\u80fd\u8fc7\u4e8e\u590d\u6742 // \u5c01\u88c5\u8d77\u6765\u7684\u6570\u7ec4\u5de5\u5177\u7c7b class ArrayUtil { public static int getSum ( int [] arr ){ int sum = 0 ; for ( int x : arr ){ sum += x ; } return sum ; } public static double getAvg ( int [] arr ){ return getSum ( arr ) / arr . length ; } public static int getMax ( int [] arr ){ // \u5047\u8bbe\u6700\u5927\u503c\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20 int max = arr [ 0 ]; for ( int x : arr ){ if ( x > max ){ max = x ; } } return max ; } public static int getMin ( int [] arr ){ // \u5047\u8bbe\u6700\u5c0f\u503c\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20 int min = arr [ 0 ]; for ( int x : arr ){ if ( x < min ){ min = x ; } } return min ; } public static void main ( String [] args ) { int [] arr = new int [] { 1 , 2 , 3 , 4 , 5 }; System . out . println ( \"sum: \" + ArrayUtil . getSum ( arr )); System . out . println ( \"avg: \" + ArrayUtil . getAvg ( arr )); System . out . println ( \"max: \" + ArrayUtil . getMax ( arr )); System . out . println ( \"min: \" + ArrayUtil . getMin ( arr )); /** sum: 15 avg: 3.0 max: 5 min: 1 */ } } 30 \u6570\u7ec4\u6392\u5e8f\u6848\u4f8b\u5206\u6790 \u7c7b\u4e2d\u6ca1\u6709\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528static \u9759\u6001\u65b9\u6cd5\uff0c\u76f4\u63a5\u4f7f\u7528\u7c7b\u540d\u8c03\u7528 // \u5c01\u88c5\u8d77\u6765\u7684\u6570\u7ec4\u5de5\u5177\u7c7b class ArrayUtil { public static void sort ( int [] arr ){ // \u7b2c\u4e00\u5c42 \u63a7\u5236\u6bd4\u8f83\u6b21\u6570 length - 1 for ( int y = 0 ; y < arr . length - 1 ; y ++){ // \u7b2c\u4e8c\u5c42 \u65e0\u5e8f\u533a\u505a\u6bd4\u8f83\u5373\u53ef length - n - 1 for ( int x = 0 ; x < arr . length - y - 1 ; x ++){ if ( arr [ x ] > arr [ x + 1 ]){ int temp = arr [ x ]; arr [ x ] = arr [ x + 1 ]; arr [ x + 1 ] = temp ; } } } } public static void printArray ( int [] arr ){ System . out . print ( \"[ \" ); for ( int x : arr ){ System . out . print ( x ); System . out . print ( \" \" ); } System . out . println ( \"]\" ); } public static void main ( String [] args ) { int [] arr = new int [] { 4 , 5 , 1 , 3 , 2 }; ArrayUtil . sort ( arr ) ; ArrayUtil . printArray ( arr ); // [ 1 2 3 4 5 ] } } 31 \u6570\u7ec4\u8f6c\u7f6e\u6848\u4f8b\u5206\u6790 \u65b9\u5f0f\u4e00\uff1a \u4f7f\u7528\u4e34\u65f6\u6570\u7ec4\uff0c\u589e\u52a0\u4e86\u5783\u573e public static int [] reverse ( int [] arr ){ int [] temp = new int [ arr . length ] ; int foot = arr . length - 1 ; for ( int i = 0 ; i < arr . length ; i ++){ temp [ foot --] = arr [ i ]; } return temp ; } public static void main ( String [] args ) { int [] arr = new int [] { 1 , 2 , 3 , 4 , 5 }; arr = ArrayUtil . reverse ( arr ) ; ArrayUtil . printArray ( arr ); // [ 5 4 3 2 1 ] } java\u4e2d\u6574\u6570\u76f8\u9664\uff0c\u5411\u4e0b\u53d6\u6574 System . out . println ( 5 / 3 ); // 1 System . out . println ( 5.0 / 3 ); // 1.66 \u65b9\u5f0f\u4e8c\uff1a \u4f7f\u7528\u6570\u7ec4\u81ea\u8eab\u4ea4\u6362\uff0c\u4f7f\u7528if\uff0c\u589e\u52a0\u4e86\u65f6\u95f4\u590d\u6742\u5ea6 public static void reverse ( int [] arr ){ int center = arr . length / 2 ; int head = 0 ; int tail = arr . length - 1 ; for ( int i = 0 ; i < center ; i ++){ int temp = arr [ head ]; arr [ head ] = arr [ tail ]; arr [ tail ] = temp ; head ++; tail --; } } public static void main ( String [] args ) { int [] arr = new int [] { 1 , 2 , 3 , 4 , 5 }; ArrayUtil . reverse ( arr ) ; ArrayUtil . printArray ( arr ); // [ 5 4 3 2 1 ] } 32 \u6570\u7ec4\u76f8\u5173\u7c7b\u5e93 1\u3001\u6570\u7ec4\u6392\u5e8f java.util.Arrays.sort(\u6570\u7ec4) int [] arr = new int [] { 5 , 4 , 2 , 3 , 1 }; java . util . Arrays . sort ( arr ); ArrayUtil . printArray ( arr ); // [ 1 2 3 4 5 ] 2\u3001\u6570\u7ec4\u62f7\u8d1d System.arraycopy(\u6e90\u6570\u7ec4, \u6e90\u6570\u7ec4\u5f00\u59cb\u70b9, \u76ee\u6807\u6570\u7ec4, \u76ee\u6807\u6570\u7ec4\u5f00\u59cb\u70b9, \u62f7\u8d1d\u957f\u5ea6) int [] arr1 = new int [] { 1 , 2 , 3 , 4 , 5 }; int [] arr2 = new int [] { 11 , 22 , 33 , 44 , 55 }; System . arraycopy ( arr1 , 1 , arr2 , 1 , 3 ) ; ArrayUtil . printArray ( arr2 ); // [ 11 2 3 4 55 ] \u81ea\u5b9a\u4e49\u65b9\u6cd5\u5b9e\u73b0 public static void arraycopy ( int [] source , int sourceIndex , int [] target , int targetIndex , int length ){ for ( int i = 0 ; i < length ; i ++){ target [ targetIndex + i ] = source [ sourceIndex + i ]; } } public static void main ( String [] args ) { int [] arr1 = new int [] { 1 , 2 , 3 , 4 , 5 }; int [] arr2 = new int [] { 11 , 22 , 33 , 44 , 55 }; ArrayUtil . arraycopy ( arr1 , 1 , arr2 , 1 , 3 ) ; ArrayUtil . printArray ( arr2 ); // [ 11 2 3 4 55 ] } 33 \u65b9\u6cd5\u53ef\u53d8\u53c2\u6570 JDK >= 1.5 // \u63a5\u6536\u53ef\u53d8\u53c2\u6570 public static int getSum ( int ... arr ){ int sum = 0 ; for ( int x : arr ){ sum += x ; } return sum ; } public static void main ( String [] args ) { int sum1 = ArrayUtil . getSum ( 1 , 2 , 3 , 4 , 5 ); int sum2 = ArrayUtil . getSum ( new int [] { 1 , 2 , 3 , 4 , 5 }); System . out . println ( sum1 ); // 15 System . out . println ( sum1 ); // 15 } 34 \u5bf9\u8c61\u6570\u7ec4 class Person { private String name ; private int age ; public Person ( String name , int age ){ this . name = name ; this . age = age ; } public String getInfo (){ return \"name: \" + this . name + \" age: \" + this . age ; } } \u52a8\u6001\u521d\u59cb\u5316 Person [] persons = new Person [ 3 ]; persons [ 0 ] = new Person ( \"\u5f20\u4e09\" , 23 ) ; persons [ 1 ] = new Person ( \"\u674e\u56db\" , 24 ) ; persons [ 2 ] = new Person ( \"\u738b\u4e94\" , 25 ) ; for ( Person person : persons ) { System . out . println ( person . getInfo ()); } /** name: \u5f20\u4e09 age: 23 name: \u674e\u56db age: 24 name: \u738b\u4e94 age: 25 */ \u9759\u6001\u521d\u59cb\u5316 Person [] persons = new Person []{ new Person ( \"\u5f20\u4e09\" , 23 ), new Person ( \"\u674e\u56db\" , 24 ), new Person ( \"\u738b\u4e94\" , 25 ) }; for ( Person person : persons ) { System . out . println ( person . getInfo ()); } /** name: \u5f20\u4e09 age: 23 name: \u674e\u56db age: 24 name: \u738b\u4e94 age: 25 */ \u6570\u7ec4\u7279\u5f81\uff1a 1\u3001\u6570\u7ec4\u7f3a\u70b9\uff1a\u957f\u5ea6\u56fa\u5b9a 2\u3001\u6570\u7ec4\u4f18\u52bf\uff1a\u7ebf\u6027\u4fdd\u5b58\uff0c\u6839\u636e\u7d22\u5f15\u53d6\u503c\uff0c\u901f\u5ea6\u8f83\u5feb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a1 \u516b\u3001\u5f15\u7528\u4f20\u9012\u5b9e\u9645\u5e94\u7528 35 \u7c7b\u5173\u8054\u7ed3\u6784 class Car { private String name ; private double price ; private Person person ; public Car ( String name , double price ){ this . name = name ; this . price = price ; } // \u8bbe\u7f6e\u3001\u83b7\u53d6\u8f66\u4e3b public void setPerson ( Person person ){ this . person = person ; } public Person getPerson (){ return this . person ; } public String getInfo (){ return \"name: \" + this . name + \" price: \" + this . price ; } } class Person { private String name ; private int age ; private Car car ; public Person ( String name , int age ){ this . name = name ; this . age = age ; } public String getInfo (){ return \"name: \" + this . name + \" age: \" + this . age ; } // \u8bbe\u7f6e\u3001\u83b7\u53d6\u8f66\u8f86 public void setCar ( Car car ){ this . car = car ; } public Car getCar (){ return this . car ; } public static void main ( String [] args ) { Person person = new Person ( \"\u5f20\u4e09\" , 23 ) ; Car car = new Car ( \"\u7279\u65af\u62c9\" , 24 ) ; // \u5173\u8054\u8f66\u8f86\u548c\u4eba person . setCar ( car ) ; car . setPerson ( person ) ; // \u901a\u8fc7\u4eba\u83b7\u53d6\u8f66\u8f86 System . out . println ( person . getCar (). getInfo ()) ; // name: \u7279\u65af\u62c9 price: 24.0 // \u901a\u8fc7\u8f66\u8f86\u83b7\u53d6\u4eba System . out . println ( car . getPerson (). getInfo ()) ; // name: \u5f20\u4e09 age: 23 } } 36 \u81ea\u8eab\u5173\u8054 class Car { private String name ; private double price ; private Person person ; public Car ( String name , double price ){ this . name = name ; this . price = price ; } // \u8bbe\u7f6e\u3001\u83b7\u53d6\u8f66\u4e3b public void setPerson ( Person person ){ this . person = person ; } public Person getPerson (){ return this . person ; } public String getInfo (){ return \"name: \" + this . name + \" price: \" + this . price ; } } class Person { private String name ; private int age ; private Car car ; private Person [] children ; public Person ( String name , int age ){ this . name = name ; this . age = age ; } // \u589e\u52a0\u5b69\u5b50\u6570\u7ec4 public Person [] getChildren (){ return this . children ; } public void setChildren ( Person [] children ){ this . children = children ; } public String getInfo (){ return \"name: \" + this . name + \" age: \" + this . age ; } // \u8bbe\u7f6e\u3001\u83b7\u53d6\u8f66\u8f86 public void setCar ( Car car ){ this . car = car ; } public Car getCar (){ return this . car ; } public static void main ( String [] args ) { Person person = new Person ( \"\u5f20\u4e09\" , 23 ) ; // \u6dfb\u52a0\u5b69\u5b50 Person childA = new Person ( \"\u5c0f\u5f20\" , 19 ) ; Person childB = new Person ( \"\u5c0f\u738b\" , 19 ) ; // \u7ed9\u5b69\u5b50\u4e70\u8f66 childA . setCar ( new Car ( \"\u6cd5\u62c9\u5229\" , 2000000.00 )) ; childB . setCar ( new Car ( \"\u5bbe\u5229\" , 8000000.00 )) ; person . setChildren ( new Person [] { childA , childB }) ; System . out . println ( person . getInfo ()) ; for ( Person child : person . getChildren ()){ System . out . println ( \"\\t|\" + child . getInfo ()) ; System . out . println ( \"\\t\\t|\" + child . getCar (). getInfo ()) ; } /** name: \u5f20\u4e09 age: 23 |name: \u5c0f\u5f20 age: 19 |name: \u6cd5\u62c9\u5229 price: 2000000.0 |name: \u5c0f\u738b age: 19 |name: \u5bbe\u5229 price: 8000000.0 */ } } 37 \u5408\u6210\u8bbe\u8ba1\u6a21\u5f0f \u62c6\u5206+\u7ec4\u5408 class \u7535\u8111 { private \u4e3b\u673a \u5bf9\u8c61 ; private \u663e\u793a\u5668 \u5bf9\u8c61\u6570\u7ec4 ; } class \u663e\u793a\u5668 {} class \u4e3b\u673a { private CPU \u5bf9\u8c61 ; private \u952e\u76d8 \u5bf9\u8c61 ; private \u952e\u76d8 \u5bf9\u8c61 ; } class CPU {} class \u952e\u76d8 {} class \u952e\u76d8 {} 38 \u7efc\u5408\u5b9e\u6218\uff1a\u6570\u636e\u8868\u4e0e\u7b80\u5355Java\u7c7b\u6620\u5c04\u8f6c\u6362 \u6570\u636e\u8868\u4e0e\u7b80\u5355Java\u7c7b\u4e4b\u95f4\u57fa\u672c\u6620\u5c04\u5173\u7cfb \u6570\u636e\u5b9e\u4f53\u8868\u8bbe\u8ba1 = \u7c7b\u7684\u5b9a\u4e49 \u8868\u4e2d\u7684\u5b57\u6bb5 = \u7c7b\u7684\u6210\u5458\u5c5e\u6027 \u8868\u7684\u4e00\u884c\u8bb0\u5f55 = \u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b\u5316\u5bf9\u8c61 \u8868\u7684\u591a\u884c\u8bb0\u5f55 = \u5bf9\u8c61\u6570\u7ec4 \u8868\u7684\u5916\u952e\u5173\u8054 = \u5f15\u7528\u5173\u8054 \u96c7\u5458\u548c\u90e8\u95e8\u5173\u7cfb \u4e00\u4e2a\u90e8\u95e8\u5bf9\u5e94\u591a\u4e2a\u96c7\u5458 \u4e00\u4e2a\u96c7\u5458\u5bf9\u5e94\u4e00\u4e2a\u90e8\u95e8 \u5b9a\u4e49\u9636\u6bb5\uff1a \u5b9a\u4e49\u5b9e\u4f53\u7c7b \u914d\u7f6e\u5173\u8054\u5b57\u6bb5 \u5f00\u53d1\u9636\u6bb5\uff1a \u5b9a\u4e49\u5bf9\u8c61 \u5173\u8054\u5173\u7cfb \u6839\u636e\u5173\u7cfb\u83b7\u53d6\u6570\u636e 39 \u7efc\u5408\u5b9e\u6218\uff1a\u4e00\u5bf9\u591a\u6620\u5c04 \u73ed\u7ea7\u5bf9\u5b66\u751f 40 \u7efc\u5408\u5b9e\u6218\uff1a\u591a\u5bf9\u591a\u6620\u5c04 \u5546\u54c1\u548c\u987e\u5ba2 41 \u7efc\u5408\u5b9e\u6218\uff1a\u590d\u6742\u591a\u5bf9\u591a\u6620\u5c04 \u7528\u6237 \u6743\u9650","title":"\u4e03\u3001\u6570\u7ec4\u7684\u5b9a\u4e49\u4e0e\u4f7f\u7528"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/#_1","text":"","title":"\u4e03\u3001\u6570\u7ec4\u7684\u5b9a\u4e49\u4e0e\u4f7f\u7528"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/#25","text":"\u6570\u7ec4\uff1a\u4e00\u7ec4\u76f8\u5173\u53d8\u91cf\u7684\u96c6\u5408 \u5f15\u7528\u6570\u636e\u7c7b\u578b \u6570\u7ec4\u5b9a\u4e49 1\u3001\u6570\u7ec4\u52a8\u6001\u521d\u59cb\u5316(\u9ed8\u8ba4\u503c\u662f\u5bf9\u5e94\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c) \u6570\u636e\u7c7b\u578b \u6570\u7ec4\u540d\u79f0 [] = new \u6570\u636e\u7c7b\u578b[\u957f\u5ea6]; \u6570\u636e\u7c7b\u578b[] \u6570\u7ec4\u540d\u79f0 = new \u6570\u636e\u7c7b\u578b[\u957f\u5ea6]; 2\u3001\u6570\u7ec4\u9759\u6001\u521d\u59cb\u5316 \u7b80\u5199\uff1a \u6570\u636e\u7c7b\u578b \u6570\u7ec4\u540d\u79f0 [] = {\u6570\u636e1\uff0c \u6570\u636e2\uff0c \u6570\u636e3...}; \u5b8c\u6574\u683c\u5f0f\uff08\u63a8\u8350\uff09\uff1a \u6570\u636e\u7c7b\u578b \u6570\u7ec4\u540d\u79f0 [] = new \u6570\u636e\u7c7b\u578b[] {\u6570\u636e1\uff0c \u6570\u636e2\uff0c \u6570\u636e3...}; \u4e0b\u6807\u8bbf\u95ee\u5143\u7d20\uff0c\u4e0b\u6807\u4ece0\u5f00\u59cb \u4e0b\u6807\u8303\u56f4\uff1a0 ~ \u957f\u5ea6-1 // 1\u3001\u52a8\u6001\u521d\u59cb\u5316 int data [] = new int [ 3 ]; // \u8bbe\u7f6e\u503c data [ 0 ] = 1 ; data [ 1 ] = 2 ; data [ 2 ] = 3 ; //\u904d\u5386\uff0c\u83b7\u53d6\u503c for ( int i = 0 ; i < data . length ; i ++) { System . out . println ( data [ i ]); // 1 2 3 } // 2\u3001\u9759\u6001\u521d\u59cb\u5316 int [] data = new int []{ 1 , 2 , 3 }; //\u904d\u5386\uff0c\u83b7\u53d6\u503c for ( int i = 0 ; i < data . length ; i ++) { System . out . println ( data [ i ]); // 1 2 3 }","title":"25 \u6570\u7ec4\u7684\u57fa\u672c\u5b9a\u4e49"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/#26","text":"\u6570\u7ec4\u662f\u5f15\u7528\u6570\u636e\u7c7b\u578b int [] data = new int []{ 1 , 2 , 3 }; int [] temp = data ; temp [ 0 ] = 10 ; //\u904d\u5386\uff0c\u83b7\u53d6\u503c for ( int i = 0 ; i < data . length ; i ++) { System . out . println ( data [ i ]); // 10 2 3 }","title":"26 \u6570\u7ec4\u5f15\u7528\u4f20\u9012\u5206\u6790"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/#27-foreach","text":"JDK>=1.5 \u907f\u514d\u64cd\u4f5c\u4e0b\u6807\uff0c\u4ece.NET\u5f15\u5165 \u8bed\u6cd5 foreach ( \u6570\u636e\u7c7b\u578b \u53d8\u91cf : \u6570\u7ec4 | \u96c6\u5408 ) {} int [] data = new int []{ 1 , 2 , 3 }; for ( int temp : data ) { System . out . println ( temp ); // 1 2 3 }","title":"27 foreach\u8f93\u51fa"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/#28","text":"\u5b9a\u4e49 1\u3001\u52a8\u6001\u521d\u59cb\u5316 \u6570\u636e\u7c7b\u578b [][] \u6570\u7ec4\u540d\u79f0 = new \u6570\u636e\u7c7b\u578b [ \u884c\u4e2a\u6570 ][ \u5217\u4e2a\u6570 ] ; 2\u3001\u9759\u6001\u521d\u59cb\u5316 \u6570\u636e\u7c7b\u578b [][] \u6570\u7ec4\u540d\u79f0 = new \u6570\u636e\u7c7b\u578b [][] {{\u6570\u636e 1 , \u6570\u636e 2 , ... } , {\u6570\u636e 1 , \u6570\u636e 2 , ... } ... } ; int [][] data = new int [][]{{ 1 , 2 , 3 }, { 4 , 5 , 6 }}; // for\u5faa\u73af for ( int x = 0 ; x < data . length ; x ++) { for ( int y = 0 ; y < data [ x ]. length ; y ++) { System . out . println ( data [ x ][ y ]) ; // 1 2 3 4 5 6 } } // foreach \u5faa\u73af for ( int [] row : data ) { for ( int cell : row ) { System . out . println ( cell ) ; // 1 2 3 4 5 6 } }","title":"28 \u4e8c\u7ef4\u6570\u7ec4"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/#29","text":"\u540c\u4e00\u5757\u5806\u5185\u5b58\u88ab\u4e0d\u540c\u6808\u53d8\u91cf\u6307\u5411 class ArrayDemo { public static int [] getArray (){ int [] arr = new int [] { 1 , 2 , 3 }; return arr ; } public static void printArray ( int [] arr ){ for ( int x : arr ) { System . out . println ( x ); } } public static void main ( String [] args ) { int [] arr = getArray (); printArray ( arr ); // 1 2 3 } } \u4e3b\u7c7b\uff1a\u4e3b\u65b9\u6cd5\u6240\u5728\u7684\u7c7b \u4e3b\u7c7b\u7684\u529f\u80fd\u4e0d\u80fd\u8fc7\u4e8e\u590d\u6742 // \u5c01\u88c5\u8d77\u6765\u7684\u6570\u7ec4\u5de5\u5177\u7c7b class ArrayUtil { public static int getSum ( int [] arr ){ int sum = 0 ; for ( int x : arr ){ sum += x ; } return sum ; } public static double getAvg ( int [] arr ){ return getSum ( arr ) / arr . length ; } public static int getMax ( int [] arr ){ // \u5047\u8bbe\u6700\u5927\u503c\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20 int max = arr [ 0 ]; for ( int x : arr ){ if ( x > max ){ max = x ; } } return max ; } public static int getMin ( int [] arr ){ // \u5047\u8bbe\u6700\u5c0f\u503c\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20 int min = arr [ 0 ]; for ( int x : arr ){ if ( x < min ){ min = x ; } } return min ; } public static void main ( String [] args ) { int [] arr = new int [] { 1 , 2 , 3 , 4 , 5 }; System . out . println ( \"sum: \" + ArrayUtil . getSum ( arr )); System . out . println ( \"avg: \" + ArrayUtil . getAvg ( arr )); System . out . println ( \"max: \" + ArrayUtil . getMax ( arr )); System . out . println ( \"min: \" + ArrayUtil . getMin ( arr )); /** sum: 15 avg: 3.0 max: 5 min: 1 */ } }","title":"29 \u6570\u7ec4\u4e0e\u65b9\u6cd5"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/#30","text":"\u7c7b\u4e2d\u6ca1\u6709\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528static \u9759\u6001\u65b9\u6cd5\uff0c\u76f4\u63a5\u4f7f\u7528\u7c7b\u540d\u8c03\u7528 // \u5c01\u88c5\u8d77\u6765\u7684\u6570\u7ec4\u5de5\u5177\u7c7b class ArrayUtil { public static void sort ( int [] arr ){ // \u7b2c\u4e00\u5c42 \u63a7\u5236\u6bd4\u8f83\u6b21\u6570 length - 1 for ( int y = 0 ; y < arr . length - 1 ; y ++){ // \u7b2c\u4e8c\u5c42 \u65e0\u5e8f\u533a\u505a\u6bd4\u8f83\u5373\u53ef length - n - 1 for ( int x = 0 ; x < arr . length - y - 1 ; x ++){ if ( arr [ x ] > arr [ x + 1 ]){ int temp = arr [ x ]; arr [ x ] = arr [ x + 1 ]; arr [ x + 1 ] = temp ; } } } } public static void printArray ( int [] arr ){ System . out . print ( \"[ \" ); for ( int x : arr ){ System . out . print ( x ); System . out . print ( \" \" ); } System . out . println ( \"]\" ); } public static void main ( String [] args ) { int [] arr = new int [] { 4 , 5 , 1 , 3 , 2 }; ArrayUtil . sort ( arr ) ; ArrayUtil . printArray ( arr ); // [ 1 2 3 4 5 ] } }","title":"30 \u6570\u7ec4\u6392\u5e8f\u6848\u4f8b\u5206\u6790"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/#31","text":"\u65b9\u5f0f\u4e00\uff1a \u4f7f\u7528\u4e34\u65f6\u6570\u7ec4\uff0c\u589e\u52a0\u4e86\u5783\u573e public static int [] reverse ( int [] arr ){ int [] temp = new int [ arr . length ] ; int foot = arr . length - 1 ; for ( int i = 0 ; i < arr . length ; i ++){ temp [ foot --] = arr [ i ]; } return temp ; } public static void main ( String [] args ) { int [] arr = new int [] { 1 , 2 , 3 , 4 , 5 }; arr = ArrayUtil . reverse ( arr ) ; ArrayUtil . printArray ( arr ); // [ 5 4 3 2 1 ] } java\u4e2d\u6574\u6570\u76f8\u9664\uff0c\u5411\u4e0b\u53d6\u6574 System . out . println ( 5 / 3 ); // 1 System . out . println ( 5.0 / 3 ); // 1.66 \u65b9\u5f0f\u4e8c\uff1a \u4f7f\u7528\u6570\u7ec4\u81ea\u8eab\u4ea4\u6362\uff0c\u4f7f\u7528if\uff0c\u589e\u52a0\u4e86\u65f6\u95f4\u590d\u6742\u5ea6 public static void reverse ( int [] arr ){ int center = arr . length / 2 ; int head = 0 ; int tail = arr . length - 1 ; for ( int i = 0 ; i < center ; i ++){ int temp = arr [ head ]; arr [ head ] = arr [ tail ]; arr [ tail ] = temp ; head ++; tail --; } } public static void main ( String [] args ) { int [] arr = new int [] { 1 , 2 , 3 , 4 , 5 }; ArrayUtil . reverse ( arr ) ; ArrayUtil . printArray ( arr ); // [ 5 4 3 2 1 ] }","title":"31 \u6570\u7ec4\u8f6c\u7f6e\u6848\u4f8b\u5206\u6790"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/#32","text":"1\u3001\u6570\u7ec4\u6392\u5e8f java.util.Arrays.sort(\u6570\u7ec4) int [] arr = new int [] { 5 , 4 , 2 , 3 , 1 }; java . util . Arrays . sort ( arr ); ArrayUtil . printArray ( arr ); // [ 1 2 3 4 5 ] 2\u3001\u6570\u7ec4\u62f7\u8d1d System.arraycopy(\u6e90\u6570\u7ec4, \u6e90\u6570\u7ec4\u5f00\u59cb\u70b9, \u76ee\u6807\u6570\u7ec4, \u76ee\u6807\u6570\u7ec4\u5f00\u59cb\u70b9, \u62f7\u8d1d\u957f\u5ea6) int [] arr1 = new int [] { 1 , 2 , 3 , 4 , 5 }; int [] arr2 = new int [] { 11 , 22 , 33 , 44 , 55 }; System . arraycopy ( arr1 , 1 , arr2 , 1 , 3 ) ; ArrayUtil . printArray ( arr2 ); // [ 11 2 3 4 55 ] \u81ea\u5b9a\u4e49\u65b9\u6cd5\u5b9e\u73b0 public static void arraycopy ( int [] source , int sourceIndex , int [] target , int targetIndex , int length ){ for ( int i = 0 ; i < length ; i ++){ target [ targetIndex + i ] = source [ sourceIndex + i ]; } } public static void main ( String [] args ) { int [] arr1 = new int [] { 1 , 2 , 3 , 4 , 5 }; int [] arr2 = new int [] { 11 , 22 , 33 , 44 , 55 }; ArrayUtil . arraycopy ( arr1 , 1 , arr2 , 1 , 3 ) ; ArrayUtil . printArray ( arr2 ); // [ 11 2 3 4 55 ] }","title":"32 \u6570\u7ec4\u76f8\u5173\u7c7b\u5e93"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/#33","text":"JDK >= 1.5 // \u63a5\u6536\u53ef\u53d8\u53c2\u6570 public static int getSum ( int ... arr ){ int sum = 0 ; for ( int x : arr ){ sum += x ; } return sum ; } public static void main ( String [] args ) { int sum1 = ArrayUtil . getSum ( 1 , 2 , 3 , 4 , 5 ); int sum2 = ArrayUtil . getSum ( new int [] { 1 , 2 , 3 , 4 , 5 }); System . out . println ( sum1 ); // 15 System . out . println ( sum1 ); // 15 }","title":"33 \u65b9\u6cd5\u53ef\u53d8\u53c2\u6570"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/#34","text":"class Person { private String name ; private int age ; public Person ( String name , int age ){ this . name = name ; this . age = age ; } public String getInfo (){ return \"name: \" + this . name + \" age: \" + this . age ; } } \u52a8\u6001\u521d\u59cb\u5316 Person [] persons = new Person [ 3 ]; persons [ 0 ] = new Person ( \"\u5f20\u4e09\" , 23 ) ; persons [ 1 ] = new Person ( \"\u674e\u56db\" , 24 ) ; persons [ 2 ] = new Person ( \"\u738b\u4e94\" , 25 ) ; for ( Person person : persons ) { System . out . println ( person . getInfo ()); } /** name: \u5f20\u4e09 age: 23 name: \u674e\u56db age: 24 name: \u738b\u4e94 age: 25 */ \u9759\u6001\u521d\u59cb\u5316 Person [] persons = new Person []{ new Person ( \"\u5f20\u4e09\" , 23 ), new Person ( \"\u674e\u56db\" , 24 ), new Person ( \"\u738b\u4e94\" , 25 ) }; for ( Person person : persons ) { System . out . println ( person . getInfo ()); } /** name: \u5f20\u4e09 age: 23 name: \u674e\u56db age: 24 name: \u738b\u4e94 age: 25 */ \u6570\u7ec4\u7279\u5f81\uff1a 1\u3001\u6570\u7ec4\u7f3a\u70b9\uff1a\u957f\u5ea6\u56fa\u5b9a 2\u3001\u6570\u7ec4\u4f18\u52bf\uff1a\u7ebf\u6027\u4fdd\u5b58\uff0c\u6839\u636e\u7d22\u5f15\u53d6\u503c\uff0c\u901f\u5ea6\u8f83\u5feb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a1","title":"34 \u5bf9\u8c61\u6570\u7ec4"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/#_2","text":"","title":"\u516b\u3001\u5f15\u7528\u4f20\u9012\u5b9e\u9645\u5e94\u7528"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/#35","text":"class Car { private String name ; private double price ; private Person person ; public Car ( String name , double price ){ this . name = name ; this . price = price ; } // \u8bbe\u7f6e\u3001\u83b7\u53d6\u8f66\u4e3b public void setPerson ( Person person ){ this . person = person ; } public Person getPerson (){ return this . person ; } public String getInfo (){ return \"name: \" + this . name + \" price: \" + this . price ; } } class Person { private String name ; private int age ; private Car car ; public Person ( String name , int age ){ this . name = name ; this . age = age ; } public String getInfo (){ return \"name: \" + this . name + \" age: \" + this . age ; } // \u8bbe\u7f6e\u3001\u83b7\u53d6\u8f66\u8f86 public void setCar ( Car car ){ this . car = car ; } public Car getCar (){ return this . car ; } public static void main ( String [] args ) { Person person = new Person ( \"\u5f20\u4e09\" , 23 ) ; Car car = new Car ( \"\u7279\u65af\u62c9\" , 24 ) ; // \u5173\u8054\u8f66\u8f86\u548c\u4eba person . setCar ( car ) ; car . setPerson ( person ) ; // \u901a\u8fc7\u4eba\u83b7\u53d6\u8f66\u8f86 System . out . println ( person . getCar (). getInfo ()) ; // name: \u7279\u65af\u62c9 price: 24.0 // \u901a\u8fc7\u8f66\u8f86\u83b7\u53d6\u4eba System . out . println ( car . getPerson (). getInfo ()) ; // name: \u5f20\u4e09 age: 23 } }","title":"35 \u7c7b\u5173\u8054\u7ed3\u6784"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/#36","text":"class Car { private String name ; private double price ; private Person person ; public Car ( String name , double price ){ this . name = name ; this . price = price ; } // \u8bbe\u7f6e\u3001\u83b7\u53d6\u8f66\u4e3b public void setPerson ( Person person ){ this . person = person ; } public Person getPerson (){ return this . person ; } public String getInfo (){ return \"name: \" + this . name + \" price: \" + this . price ; } } class Person { private String name ; private int age ; private Car car ; private Person [] children ; public Person ( String name , int age ){ this . name = name ; this . age = age ; } // \u589e\u52a0\u5b69\u5b50\u6570\u7ec4 public Person [] getChildren (){ return this . children ; } public void setChildren ( Person [] children ){ this . children = children ; } public String getInfo (){ return \"name: \" + this . name + \" age: \" + this . age ; } // \u8bbe\u7f6e\u3001\u83b7\u53d6\u8f66\u8f86 public void setCar ( Car car ){ this . car = car ; } public Car getCar (){ return this . car ; } public static void main ( String [] args ) { Person person = new Person ( \"\u5f20\u4e09\" , 23 ) ; // \u6dfb\u52a0\u5b69\u5b50 Person childA = new Person ( \"\u5c0f\u5f20\" , 19 ) ; Person childB = new Person ( \"\u5c0f\u738b\" , 19 ) ; // \u7ed9\u5b69\u5b50\u4e70\u8f66 childA . setCar ( new Car ( \"\u6cd5\u62c9\u5229\" , 2000000.00 )) ; childB . setCar ( new Car ( \"\u5bbe\u5229\" , 8000000.00 )) ; person . setChildren ( new Person [] { childA , childB }) ; System . out . println ( person . getInfo ()) ; for ( Person child : person . getChildren ()){ System . out . println ( \"\\t|\" + child . getInfo ()) ; System . out . println ( \"\\t\\t|\" + child . getCar (). getInfo ()) ; } /** name: \u5f20\u4e09 age: 23 |name: \u5c0f\u5f20 age: 19 |name: \u6cd5\u62c9\u5229 price: 2000000.0 |name: \u5c0f\u738b age: 19 |name: \u5bbe\u5229 price: 8000000.0 */ } }","title":"36 \u81ea\u8eab\u5173\u8054"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/#37","text":"\u62c6\u5206+\u7ec4\u5408 class \u7535\u8111 { private \u4e3b\u673a \u5bf9\u8c61 ; private \u663e\u793a\u5668 \u5bf9\u8c61\u6570\u7ec4 ; } class \u663e\u793a\u5668 {} class \u4e3b\u673a { private CPU \u5bf9\u8c61 ; private \u952e\u76d8 \u5bf9\u8c61 ; private \u952e\u76d8 \u5bf9\u8c61 ; } class CPU {} class \u952e\u76d8 {} class \u952e\u76d8 {}","title":"37 \u5408\u6210\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/#38-java","text":"\u6570\u636e\u8868\u4e0e\u7b80\u5355Java\u7c7b\u4e4b\u95f4\u57fa\u672c\u6620\u5c04\u5173\u7cfb \u6570\u636e\u5b9e\u4f53\u8868\u8bbe\u8ba1 = \u7c7b\u7684\u5b9a\u4e49 \u8868\u4e2d\u7684\u5b57\u6bb5 = \u7c7b\u7684\u6210\u5458\u5c5e\u6027 \u8868\u7684\u4e00\u884c\u8bb0\u5f55 = \u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b\u5316\u5bf9\u8c61 \u8868\u7684\u591a\u884c\u8bb0\u5f55 = \u5bf9\u8c61\u6570\u7ec4 \u8868\u7684\u5916\u952e\u5173\u8054 = \u5f15\u7528\u5173\u8054 \u96c7\u5458\u548c\u90e8\u95e8\u5173\u7cfb \u4e00\u4e2a\u90e8\u95e8\u5bf9\u5e94\u591a\u4e2a\u96c7\u5458 \u4e00\u4e2a\u96c7\u5458\u5bf9\u5e94\u4e00\u4e2a\u90e8\u95e8 \u5b9a\u4e49\u9636\u6bb5\uff1a \u5b9a\u4e49\u5b9e\u4f53\u7c7b \u914d\u7f6e\u5173\u8054\u5b57\u6bb5 \u5f00\u53d1\u9636\u6bb5\uff1a \u5b9a\u4e49\u5bf9\u8c61 \u5173\u8054\u5173\u7cfb \u6839\u636e\u5173\u7cfb\u83b7\u53d6\u6570\u636e","title":"38 \u7efc\u5408\u5b9e\u6218\uff1a\u6570\u636e\u8868\u4e0e\u7b80\u5355Java\u7c7b\u6620\u5c04\u8f6c\u6362"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/#39","text":"\u73ed\u7ea7\u5bf9\u5b66\u751f","title":"39 \u7efc\u5408\u5b9e\u6218\uff1a\u4e00\u5bf9\u591a\u6620\u5c04"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/#40","text":"\u5546\u54c1\u548c\u987e\u5ba2","title":"40 \u7efc\u5408\u5b9e\u6218\uff1a\u591a\u5bf9\u591a\u6620\u5c04"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6570\u7ec4/#41","text":"\u7528\u6237 \u6743\u9650","title":"41 \u7efc\u5408\u5b9e\u6218\uff1a\u590d\u6742\u591a\u5bf9\u591a\u6620\u5c04"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/","text":"\u7b2c22 \u7ae0 \uff1a \u6cdb\u578b 96 \u6cdb\u578b\u95ee\u9898\u5f15\u51fa JDK >= 1.5 \u4e3b\u8981\u4e3a\u4e86\u89e3\u51b3 ClassCastException \u4e3e\u4f8b\uff1a \u8981\u63cf\u8ff0\u4e00\u4e2a\u5750\u6807\u7c7b\uff0c\u5141\u8bb8\u5b58\u653e\u4ee5\u4e0b\u5750\u6807\u6570\u636e\u7c7b\u578b \u6574\u578b x = 10, y = 20 \u6d6e\u70b9\u578b x = 10.1, y = 20.2 \u5b57\u7b26\u4e32\u578b x = \u4e1c\u7ecf 10 \u5ea6 , y = \u5317\u7eac 20 \u5ea6 \u53ef\u4ee5\u4f7f\u7528Object\uff0c\u4e0d\u8fc7\u4f1a\u51fa\u73b0\u8f6c\u578b\u64cd\u4f5c \u6574\u578b\uff1a \u57fa\u672c\u6570\u636e\u7c7b\u578b -> Integer\u5305\u88c5\u7c7b -> \u81ea\u52a8\u5411\u4e0a\u8f6c\u578b\u4e3aObject \u6d6e\u70b9\u578b \uff1a\u57fa\u672c\u6570\u636e\u7c7b\u578b -> Double\u5305\u88c5\u7c7b -> \u81ea\u52a8\u5411\u4e0a\u8f6c\u8f6c\u578b\u4e3aObject \u5b57\u7b26\u4e32\u578b \uff1aString\u5bf9\u8c61 -> \u81ea\u52a8\u5411\u4e0a\u8f6c\u8f6c\u578b\u4e3aObject class Point { private Object x ; private Object y ; public Point ( Object x , Object y ){ this . x = x ; this . y = y ; } public void setX ( Object x ){ this . x = x ; } public void setY ( Object y ){ this . y = y ; } public Object getX (){ return this . x ; } public Object getY (){ return this . y ; } @Override public String toString (){ return \"Point(\" + this . x + \", \" + this . y + \")\" ; } } class Demo { public static void main ( String [] args ) { Point p1 = new Point ( 1 , 2 ); System . out . println ( p1 ); // Point(1, 2) int x = ( Integer ) p1 . getX () ; System . out . println ( x ); // 1 Point p2 = new Point ( 1.1 , 2.2 ); System . out . println ( p2 ); // Point(1.1, 2.2) // Object \u4e0d\u80fd\u7ea6\u675f\u4f20\u5165\u7684\u53c2\u6570 Point p3 = new Point ( 10 , \"\u5317\u7eac20\u5ea6\" ); System . out . println ( p3 ); // Point(10, \u5317\u7eac20\u5ea6) } } 97 \u6cdb\u578b\u57fa\u672c\u5b9a\u4e49 \u7c7b\u4e2d\u5c5e\u6027\u6216\u65b9\u6cd5\u7684\u53c2\u6570\u4e0e\u8fd4\u56de\u503c\u7c7b\u578b\u7531\u5bf9\u8c61\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u52a8\u6001\u51b3\u5b9a \u9700\u8981\u5728\u7c7b\u5b9a\u4e49\u7684\u65f6\u5019\u660e\u786e\u7684\u5b9a\u4e49\u5360\u4f4d\u7b26(\u6cdb\u578b\u6807\u8bb0) \u5b9e\u4f8b\u5316\u4e0d\u8bbe\u7f6e\u6cdb\u578b\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4f7f\u7528Object Point < Integer > p1 = new Point < Integer >( 1 , 2 ); \u6cdb\u578b\u7684\u597d\u5904\uff1a 1\u3001\u7f16\u8bd1\u65f6\u68c0\u67e5\u7c7b\u578b\uff0c\u907f\u514d\u51fa\u73b0\u5b89\u5168\u9690\u60a3 2\u3001\u907f\u514d\u5411\u4e0b\u8f6c\u578b\u64cd\u4f5c \u6cdb\u578b\u6ce8\u610f\u70b9\uff1a 1\u3001\u53ea\u80fd\u4f7f\u7528\u5f15\u7528\u7c7b\u578b\uff0c\u57fa\u672c\u7c7b\u578b\u8981\u4f7f\u7528\u5305\u88c5\u7c7b 2\u3001JDK >=1.7\u5f00\u59cb\u53ef\u4ee5\u7b80\u5199 Point < Integer > p1 = new Point <>( 1 , 2 ); \u4f7f\u7528\u6cdb\u578b\u53ef\u4ee5\u89e3\u51b3\u5927\u90e8\u5206\u7684\u7c7b\u5bf9\u8c61\u5f3a\u5236\u8f6c\u6362\u5904\u7406 class Point < T >{ private T x ; private T y ; public Point (){} public Point ( T x , T y ){ this . x = x ; this . y = y ; } public void setX ( T x ){ this . x = x ; } public void setY ( T y ){ this . y = y ; } public T getX (){ return this . x ; } public T getY (){ return this . y ; } @Override public String toString (){ return \"Point(\" + this . x + \", \" + this . y + \")\" ; } } class Demo { public static void main ( String [] args ) { Point < Integer > p1 = new Point < Integer >( 1 , 2 ); System . out . println ( p1 ); // Point(1, 2) int x = ( Integer ) p1 . getX () ; System . out . println ( x ); // 1 Point < Double > p2 = new Point < Double >( 1.1 , 2.2 ); System . out . println ( p2 ); // Point(1.1, 2.2) Point < String > p3 = new Point < String >( \"\u4e1c\u7ecf30\u5ea6\" , \"\u5317\u7eac20\u5ea6\" ); System . out . println ( p3 ); // Point(10, \u5317\u7eac20\u5ea6) } } 98 \u6cdb\u578b\u901a\u914d\u7b26 \u76ee\u524d\u7684\u6cdb\u578b\u8fdb\u884c\u5f15\u7528\u4f20\u9012 class Message < T >{ private T content ; public void setContent ( T message ){ this . content = message ; } public T getContent (){ return this . content ; } } class Demo { public static void main ( String [] args ) { Message < String > message = new Message <>(); message . setContent ( \"Hello Java\" ); showMessage ( message ); } // \u53ea\u80fd\u63a5\u6536Message<String> \u5bf9\u8c61 public static void showMessage ( Message < String > message ){ System . out . println ( message . getContent ()); // Hello Java } } \u4fee\u6539\u4e3a\u901a\u914d\u7b26\u63a5\u6536\u6570\u636e public static void showMessage ( Message <?> message ) { System . out . println ( message . getContent ()); // Hello Java } \u8bbe\u7f6e\u6cdb\u578b\u8303\u56f4 // \u8bbe\u7f6e\u6cdb\u578b\u4e0a\u9650 // ? extends \u7c7b // \u4f8b\u5982\uff1a\u53ea\u5141\u8bb8\u8bbe\u7f6eNumber \u6216\u5176\u5b50\u7c7b ? extends Number // \u8bbe\u7f6e\u6cdb\u578b\u4e0b\u9650 // ? super \u7c7b // \u4f8b\u5982\uff1a\u53ea\u80fd\u591f\u4f7f\u7528String \u6216\u5176\u7236\u7c7b ? super String public static void showMessage ( Message <? extends Number > message ) { System . out . println ( message . getContent ()); } public static void showMessage ( Message <? super String > message ) { System . out . println ( message . getContent ()); } 99 \u6cdb\u578b\u63a5\u53e3 1\u3001\u5b9e\u73b0\u7c7b\u7ee7\u7eed\u4f7f\u7528\u6cdb\u578b interface IMessage < T >{ public void echo ( T t ); } class Messageimpl < S > implements IMessage < S > { public void echo ( S t ){ System . out . println ( t ); } } class Demo { public static void main ( String [] args ) { Messageimpl < String > message = new Messageimpl <>(); message . echo ( \"Hello\" ); // Hello } } 2\u3001\u5b9e\u73b0\u7c7b\u4e0d\u4f7f\u7528\u6cdb\u578b interface IMessage < T >{ public void echo ( T t ); } class Messageimpl implements IMessage < String > { public void echo ( String t ){ System . out . println ( t ); } } class Demo { public static void main ( String [] args ) { Messageimpl message = new Messageimpl (); message . echo ( \"Hello\" ); // Hello } } 100 \u6cdb\u578b\u65b9\u6cd5 \u6cdb\u578b\u65b9\u6cd5\uff1a\u6cdb\u578b\u6807\u8bb0\u5199\u5230\u4e86\u65b9\u6cd5\u4e0a \u6cdb\u578b\u65b9\u6cd5\u4e0d\u4e00\u5b9a\u975e\u8981\u51fa\u73b0\u5728\u6cdb\u578b\u7c7b\u4e2d class Demo { public static < T > T [] getArray ( T ... args ){ return args ; } public static void main ( String [] args ) { Integer [] list = getArray ( 1 , 2 , 3 ); for ( int x : list ){ System . out . println ( x ); // 1 2 3 } } } \u7b2c23 \u7ae0 \uff1a \u5305\u7684\u5b9a\u4e49\u53ca\u4f7f\u7528 101 \u5305\u7684\u5b9a\u4e49 \u5305 == \u76ee\u5f55 \u201c.\u201d\u8868\u793a\u5206\u9694\u5b50\u76ee\u5f55 package com.name.demo ; public class Hello {} \u7f16\u8bd1\u540e\u7684.class\u6587\u4ef6\u9700\u8981\u4fdd\u5b58\u5230\u6307\u5b9a\u76ee\u5f55\u4e2d \u6253\u5305\u5904\u7406 $ javac -d . Hello.java -d \u8868\u793a\u8981\u751f\u6210\u7684\u76ee\u5f55\uff0cpackage\u5b9a\u4e49\u7684\u7ed3\u6784 . \u8868\u793a\u5f53\u524d\u6240\u5728\u76ee\u5f55 \u7a0b\u5e8f\u6267\u884c\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u5e26\u7740\u5305\u6267\u884c\u7a0b\u5e8f $ java com.name.demo.Hello 102 \u5305\u7684\u5bfc\u5165 \u76f4\u63a5\u7f16\u8bd1,\u8ba9java\u51b3\u5b9a\u7f16\u8bd1\u5148\u540e\u987a\u5e8f $ java -d . *.java \u6ce8\u610f\uff1a 1\u3001 public class \u7c7b\u540d\u5fc5\u987b\u4e0e\u6587\u4ef6\u540d\u4fdd\u6301\u4e00\u81f4 2\u3001\u8981\u88ab\u5176\u4ed6\u5305\u6240\u4f7f\u7528\u7684\u7c7b\u8981\u52a0 public 3\u3001\u4e00\u822c\u4e00\u4e2ajava\u6587\u4ef6\u53ea\u6709\u4e00\u4e2aclass\u7c7b 4\u3001 class \u7c7b\u540d\u79f0\u53ef\u4ee5\u4e0e\u6587\u4ef6\u540d\u4e0d\u4e00\u81f4\uff0c\u53ef\u4ee5\u63d0\u4f9b\u591a\u4e2a\u7c7b\uff0c\u4f1a\u88ab\u7f16\u8bd1\u4e3a\u591a\u4e2aclass\u6587\u4ef6 \u800c\u4e14\u53ea\u80fd\u88ab\u672c\u5305\u6240\u8bbf\u95ee \u5305\u540d\u5fc5\u987b\u91c7\u7528\u5c0f\u5199\u5b57\u6bcd\u5b9a\u4e49 \u5bfc\u5165\u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26 * \u4e0d\u8868\u793a\u5168\u90e8\u52a0\u8f7d\uff0c\u4f1a\u6839\u636e\u9700\u8981\u52a0\u8f7d \u4f1a\u51fa\u73b0\u5f15\u7528\u4e0d\u660e\u786e\u95ee\u9898 \u4f7f\u7528\u7684\u65f6\u5019\u76f4\u63a5\u5199\u5b8c\u6574\u8def\u5f84 import com.name.demo ; com . name . demo . Hello (); \u5bfc\u5305\u793a\u4f8b Message.java package com.name.demo ; public class Message { public void printMessage ( String message ){ System . out . println ( message ); } } Demo.java import com.name.demo.Message ; class Demo { public static void main ( String [] args ) { Message message = new Message (); message . printMessage ( \"Hello Message\" ) ; } } \u6253\u5305\u6267\u884c # \u7f16\u8bd1\u6253\u5305\u6587\u4ef6 $ javac - d . * . java # \u6267\u884c $ java Demo Hello Message \u6587\u4ef6\u76ee\u5f55 \u251c\u2500\u2500 Demo . class \u251c\u2500\u2500 Demo . java \u251c\u2500\u2500 Message . java \u2514\u2500\u2500 com \u2514\u2500\u2500 name \u2514\u2500\u2500 demo \u2514\u2500\u2500 Message . class 103 \u9759\u6001\u5bfc\u5165 JDK >=1.5 import static com.name.demo.Demo.* ; Message.java package com.name.demo ; public class Message { public static void echoMessage ( String message ){ System . out . println ( message ); } } Demo.java import static com.name.demo.Message.* ; class Demo { public static void main ( String [] args ) { echoMessage ( \"Hello Message\" ) ; } } 104 \u751f\u6210jar\u6587\u4ef6 jar\u6587\u4ef6\uff1a \u7ba1\u7406class\u6587\u4ef6 \u6b65\u9aa4\uff1a \u6253\u5305\u7f16\u8bd1 javac -d . Message.java \u6253\u5305jar jar -cvf name.jar com -c create \u521b\u5efa\u6587\u4ef6 -v verbose \u8be6\u7ec6\u8f93\u51fa -f file \u8981\u751f\u6210\u7684jar\u6587\u4ef6 rar\u6253\u5f00jar\u6587\u4ef6 \u6bcf\u4e2a.jar\u6587\u4ef6\u90fd\u662f\u72ec\u7acb\u7684\u7a0b\u5e8f\u8def\u5f84\uff0c\u5fc5\u987b\u901a\u8fc7CLASSPATH\u914d\u7f6e windows: \u4ee5\u5206\u53f7\u5206\u9694 $ SET CLASSPATH = . ; d: \\n ame.jar Mac\uff1a\u4ee5\u5192\u53f7\u5206\u9694 $ export CLASSPATH = \".:/root/name.jar\" JDK < 1.9 \u6240\u6709\u7c7b\u7684jar\u6587\u4ef6\uff1a rt.jar tools.jar JDK >= 1.9 \u6a21\u5757\u5316\u8bbe\u8ba1 105 \u7cfb\u7edf\u5e38\u7528\u5305 Java\u81ea\u8eab\u63d0\u4f9b\u7c7b\u5e93 \u7b2c\u4e09\u65b9\u63d0\u4f9b\u652f\u6301\u7c7b\u5e93 java.lang String, Number, Object JDK 1.1\u81ea\u52a8\u5bfc\u5165 java.lang.reflect \u53cd\u5c04\u673a\u5236 java.util \u5de5\u5177\u7c7b\uff0c\u6570\u636e\u7ed3\u6784 java.io \u8f93\u5165\u8f93\u51fa java.net \u7f51\u7edc\u5f00\u53d1 java.sql \u6570\u636e\u5e93\u7f16\u7a0b java.applet \u5d4c\u5957\u7f51\u9875\u6267\u884c java.awt \u56fe\u5f62\u754c\u9762GUI\u5f00\u53d1Windows\u4f4d\u7f6e java.swing\uff08JDK1.2\uff09\u8f7b\u91cf\u7ea7\u56fe\u5f62\u5f00\u53d1\u5305 106 \u8bbf\u95ee\u63a7\u5236\u6743\u9650 \u9762\u5411\u5bf9\u8c61\u4e09\u4e2a\u7279\u70b9\uff1a\u5c01\u88c5\uff0c\u7ee7\u627f\uff0c\u591a\u6001 \u8bbf\u95ee\u63a7\u5236\u6743\u9650 \u8bbf\u95ee\u8303\u56f4 private default protected public \u540c\u5305\u540c\u7c7b true true true true \u540c\u5305\u4e0d\u540c\u7c7b true true true \u4e0d\u540c\u5305\u7684\u5b50\u7c7b true true \u4e0d\u540c\u5305\u7684\u6240\u6709\u7c7b true \u53c2\u8003\u9009\u62e9 \u5c5e\u6027\u5b9a\u4e49 private \u65b9\u6cd5\u5b9a\u4e49 public \u901a\u8fc7\u5b50\u7c7b\u8bbf\u95eeprotected \u5c5e\u6027 Message.java package com.util.a ; public class Message { protected String info = \"message info\" ; } TestMessage.java package com.util.b ; import com.util.a.Message ; public class TestMessage extends Message { public void showInfo (){ System . out . println ( super . info ); } } Demo.java import com.util.b.TestMessage ; public class Demo { public static void main ( String [] args ) { new TestMessage (). showInfo (); } } \u7b2c24 \u7ae0 \uff1a UML\u56fe\u5f62 107 \u7c7b\u56fe UML\u7edf\u4e00\u5efa\u6a21\u8bed\u8a00\uff1a \u5229\u7528\u56fe\u5f62\u5316\u7684\u5f62\u5f0f\u6765\u5b9e\u73b0\u7a0b\u5e8f\u7c7b\u5173\u7cfb\u7684\u63cf\u8ff0 \u4e09\u5c42\u7ed3\u6784\u8868\u793a \u7c7b\u540d\u79f0 \u5c5e\u6027 \u65b9\u6cd5 \u62bd\u8c61\u7c7b\u5c5e\u6027\u659c\u4f53abstract \u5c5e\u6027\u683c\u5f0f\uff1a\u8bbf\u95ee\u6743\u9650 \u5c5e\u6027\u540d\u79f0: \u5c5e\u6027\u7c7b\u578b public + protected # private - \u65b9\u6cd5\u683c\u5f0f\uff1a\u8bbf\u95ee\u6743\u9650 \u65b9\u6cd5\u540d\u79f0(): \u8fd4\u56de\u503c \u753b\u56fe\u5de5\u5177 Rational Role PowerDesigner \u5b50\u7c7b\u5b9e\u73b0\u63a5\u53e3 \u4e09\u89d2\u548c\u865a\u7ebf \u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b \u4e09\u89d2\u548c\u5b9e\u7ebf 108 \u65f6\u5e8f\u56fe \u63cf\u8ff0\u4ee3\u7801\u7684\u6267\u884c\u6d41\u7a0b 109 \u7528\u4f8b\u56fe \u63cf\u8ff0\u7a0b\u5e8f\u6267\u884c\u5206\u914d \u4e00\u822c\u51fa\u73b0\u5728\u9879\u76ee\u8bbe\u8ba1\u8fc7\u7a0b \u7b2c25 \u7ae0 \uff1a \u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f 110 \u5355\u4f8b\u8bbe\u8ba1 \u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\uff1a\u53ea\u5141\u8bb8\u63d0\u4f9b\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61 -\u997f\u6c49\u5f0f\uff1a\u7cfb\u7edf\u52a0\u8f7d\u5c31\u5b9e\u4f8b\u5316 -\u61d2\u6c49\u5f0f\uff1a\u7b2c\u4e00\u6b21\u4f7f\u7528\u7684\u65f6\u5019\u5b9e\u4f8b\u5316 \u591a\u4f8b\u8bbe\u8ba1\u6a21\u5f0f \u5355\u4f8b\u6a21\u5f0f\u7279\u70b9\uff1a \u6784\u9020\u65b9\u6cd5\u79c1\u6709\u5316\uff0c\u5185\u90e8\u63d0\u4f9bstatic\u65b9\u6cd5\u83b7\u53d6\u5b9e\u4f8b\u5316\u5bf9\u8c61 \u997f\u6c49\u5f0f\u5355\u4f8b\u6a21\u5f0f class Singleton { private static Singleton singleton = new Singleton (); // \u6784\u9020\u51fd\u6570\u79c1\u6709\u5316 private Singleton (){}; public static Singleton getInstance (){ return singleton ; } } class Demo { public static void main ( String [] args ) { Singleton singleton = Singleton . getInstance (); } } \u61d2\u6c49\u5f0f\u5355\u4f8b\u6a21\u5f0f class Singleton { private static Singleton singleton ; // \u6784\u9020\u51fd\u6570\u79c1\u6709\u5316 private Singleton (){}; public static Singleton getInstance (){ // \u7b2c\u4e00\u6b21\u4f7f\u7528\u5b9e\u4f8b\u5316 if ( singleton == null ){ singleton = new Singleton (); } return singleton ; } } 111 \u591a\u4f8b\u8bbe\u8ba1 class Color { private String title ; private static final Color RED = new Color ( \"\u7ea2\u8272\" ); private static final Color GREEN = new Color ( \"\u7eff\u8272\" ); private static final Color BLUE = new Color ( \"\u84dd\u8272\" ); private Color ( String title ){ this . title = title ; }; public static Color getInstance ( String color ){ switch ( color ){ case \"red\" : return RED ; case \"green\" : return GREEN ; case \"blue\" : return BLUE ; default : return null ; } } @Override public String toString (){ return this . title ; } } class Demo { public static void main ( String [] args ) { Color red = Color . getInstance ( \"red\" ) ; System . out . println ( red ); } } \u5355\u4f8b\u548c\u591a\u4f8b\u90fd\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u9759\u6001\u83b7\u53d6\u5b9e\u4f8b\u5316\u7684\u65b9\u6cd5 \u7b2c26 \u7ae0 \uff1a \u679a\u4e3e 112 \u5b9a\u4e49\u679a\u4e3e\u7c7b JDK >= 1.5 \u679a\u4e3e\u4e3b\u8981\u7528\u4e8e\u5b9a\u4e49\u6709\u9650\u4e2a\u6570\u5bf9\u8c61\u7684\u4e00\u79cd\u7ed3\u6784\uff08\u591a\u4f8b\u8bbe\u8ba1\uff09 \u679a\u4e3e\u53ef\u4ee5\u5728\u7a0b\u5e8f\u7f16\u8bd1\u65f6\u5224\u65ad\u5b9e\u4f8b\u5316\u5bf9\u8c61\u662f\u5426\u5b58\u5728 enum Color { RED , GREEN , BLUE } class Demo { public static void main ( String [] args ) { for ( Color color : Color . values ()){ System . out . println ( color ); } // RED GREEN BLUE } } switch\u4e2d\u5bf9\u679a\u4e3e\u7c7b\u5224\u65ad enum Color { RED , GREEN , BLUE } class Demo { public static void main ( String [] args ) { Color color = Color . RED ; switch ( color ){ case RED : System . out . println ( \"\u7ea2\u8272\" ); break ; case GREEN : System . out . println ( \"\u7eff\u8272\" ); break ; case BLUE : System . out . println ( \"\u84dd\u8272\" ); break ; default : System . out . println ( \"default\" ); } // \u7ea2\u8272 } } 113 Enum\u7c7b \u679a\u4e3e\u672c\u8d28\u662f\u4e00\u4e2a\u7c7b \u679a\u4e3e\u4e2d\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u5e8f\u53f7\u90fd\u662f\u6839\u636e\u679a\u4e3e\u5bf9\u8c61\u7684\u5b9a\u4e49\u987a\u5e8f\u6765\u51b3\u5b9a\u7684 enum Color { RED , GREEN , BLUE } class Demo { public static void main ( String [] args ) { for ( Color color : Color . values ()){ System . out . println ( color . ordinal () + \" - \" + color . name ()); } /** 0 - RED 1 - GREEN 2 - BLUE */ } } enum\u548cEnum\u533a\u522b enum \u662fJDK 1.5\u4e4b\u540e\u63d0\u4f9b\u7684\u5173\u952e\u5b57\uff0c\u5b9a\u4e49\u679a\u4e3e\u7c7b Enum \u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5173\u952e\u5b57enum\u5b9a\u4e49\u7684\u7c7b\u9ed8\u8ba4\u7ee7\u627f\u6b64\u7c7b 114 \u5b9a\u4e49\u679a\u4e3e\u7ed3\u6784 \u679a\u4e3e\u7c7b\u672c\u8eab\u5c5e\u4e8e\u591a\u4f8b\u8bbe\u8ba1\u6a21\u5f0f \u5728\u679a\u4e3e\u7c7b\u4e2d\u5b9a\u4e49\u5176\u4ed6\u7ed3\u6784 // \u679a\u4e3e\u7c7b enum Color { // \u679a\u4e3e\u5bf9\u8c61\u8981\u5199\u5728\u9996\u884c RED ( \"\u7ea2\u8272\" ), GREEN ( \"\u7eff\u8272\" ), BLUE ( \"\u84dd\u8272\" ) ; // \u5b9a\u4e49\u5c5e\u6027 private String title ; private Color ( String title ){ this . title = title ; } @Override public String toString (){ return this . title ; } } class Demo { public static void main ( String [] args ) { for ( Color color : Color . values ()){ System . out . println ( color . ordinal () + \" - \" + color . name () + \" - \" + color ); } /** 0 - RED - \u7ea2\u8272 1 - GREEN - \u7eff\u8272 2 - BLUE - \u84dd\u8272 */ } } \u679a\u4e3e\u7c7b\u4e2d\u53ef\u4ee5\u5b9e\u73b0\u63a5\u53e3\u7ee7\u627f interface Imessage { public String getMessage (); } enum Color implements Imessage { RED ( \"\u7ea2\u8272\" ), GREEN ( \"\u7eff\u8272\" ), BLUE ( \"\u84dd\u8272\" ) ; private String title ; private Color ( String title ){ this . title = title ; } @Override public String toString (){ return this . title ; } public String getMessage (){ return this . title ; } } class Demo { public static void main ( String [] args ) { Imessage message = Color . RED ; System . out . println ( message . getMessage ()); // \u7ea2\u8272 } } \u679a\u4e3e\u7c7b\u53ef\u4ee5\u76f4\u63a5\u5b9a\u4e49\u62bd\u8c61\u65b9\u6cd5\uff0c \u5e76\u4e14\u8981\u6c42\u6bcf\u4e00\u4e2a\u679a\u4e3e\u5bf9\u8c61\u90fd\u8981\u72ec\u7acb\u8986\u5199\u6b64\u62bd\u8c61\u65b9\u6cd5 enum Color { RED ( \"\u7ea2\u8272\" ){ public String getMessage (){ return this . toString (); } }, GREEN ( \"\u7eff\u8272\" ){ public String getMessage (){ return this . toString (); } }, BLUE ( \"\u84dd\u8272\" ){ public String getMessage (){ return this . toString (); } } ; private String title ; private Color ( String title ){ this . title = title ; } @Override public String toString (){ return this . title ; } public abstract String getMessage () ; } class Demo { public static void main ( String [] args ) { System . out . println ( Color . RED . getMessage ()); // \u7ea2\u8272 } } \u679a\u4e3e\u7c7b\u4e0d\u5efa\u8bae\u5199\u592a\u591a\u5185\u5bb9 115 \u679a\u4e3e\u5e94\u7528\u6848\u4f8b enum Sex { MAN ( \"\u7537\" ), FEMALE ( \"\u5973\" ) ; private String title ; private Sex ( String title ){ this . title = title ; } @Override public String toString (){ return this . title ; } } class Person { private String name ; private int age ; private Sex sex ; public Person ( String name , int age , Sex sex ){ this . name = name ; this . age = age ; this . sex = sex ; } @Override public String toString (){ return \"Person(\" + this . name + \" \" + this . age + \" \" + this . sex + \")\" ; } } class Demo { public static void main ( String [] args ) { Person person = new Person ( \"\u5f20\u4e09\" , 23 , Sex . MAN ); System . out . println ( person ); // Person(\u5f20\u4e09 23 \u7537) } }","title":"\u7b2c22 \u7ae0 \uff1a \u6cdb\u578b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#22","text":"","title":"\u7b2c22 \u7ae0 \uff1a \u6cdb\u578b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#96","text":"JDK >= 1.5 \u4e3b\u8981\u4e3a\u4e86\u89e3\u51b3 ClassCastException \u4e3e\u4f8b\uff1a \u8981\u63cf\u8ff0\u4e00\u4e2a\u5750\u6807\u7c7b\uff0c\u5141\u8bb8\u5b58\u653e\u4ee5\u4e0b\u5750\u6807\u6570\u636e\u7c7b\u578b \u6574\u578b x = 10, y = 20 \u6d6e\u70b9\u578b x = 10.1, y = 20.2 \u5b57\u7b26\u4e32\u578b x = \u4e1c\u7ecf 10 \u5ea6 , y = \u5317\u7eac 20 \u5ea6 \u53ef\u4ee5\u4f7f\u7528Object\uff0c\u4e0d\u8fc7\u4f1a\u51fa\u73b0\u8f6c\u578b\u64cd\u4f5c \u6574\u578b\uff1a \u57fa\u672c\u6570\u636e\u7c7b\u578b -> Integer\u5305\u88c5\u7c7b -> \u81ea\u52a8\u5411\u4e0a\u8f6c\u578b\u4e3aObject \u6d6e\u70b9\u578b \uff1a\u57fa\u672c\u6570\u636e\u7c7b\u578b -> Double\u5305\u88c5\u7c7b -> \u81ea\u52a8\u5411\u4e0a\u8f6c\u8f6c\u578b\u4e3aObject \u5b57\u7b26\u4e32\u578b \uff1aString\u5bf9\u8c61 -> \u81ea\u52a8\u5411\u4e0a\u8f6c\u8f6c\u578b\u4e3aObject class Point { private Object x ; private Object y ; public Point ( Object x , Object y ){ this . x = x ; this . y = y ; } public void setX ( Object x ){ this . x = x ; } public void setY ( Object y ){ this . y = y ; } public Object getX (){ return this . x ; } public Object getY (){ return this . y ; } @Override public String toString (){ return \"Point(\" + this . x + \", \" + this . y + \")\" ; } } class Demo { public static void main ( String [] args ) { Point p1 = new Point ( 1 , 2 ); System . out . println ( p1 ); // Point(1, 2) int x = ( Integer ) p1 . getX () ; System . out . println ( x ); // 1 Point p2 = new Point ( 1.1 , 2.2 ); System . out . println ( p2 ); // Point(1.1, 2.2) // Object \u4e0d\u80fd\u7ea6\u675f\u4f20\u5165\u7684\u53c2\u6570 Point p3 = new Point ( 10 , \"\u5317\u7eac20\u5ea6\" ); System . out . println ( p3 ); // Point(10, \u5317\u7eac20\u5ea6) } }","title":"96 \u6cdb\u578b\u95ee\u9898\u5f15\u51fa"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#97","text":"\u7c7b\u4e2d\u5c5e\u6027\u6216\u65b9\u6cd5\u7684\u53c2\u6570\u4e0e\u8fd4\u56de\u503c\u7c7b\u578b\u7531\u5bf9\u8c61\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u52a8\u6001\u51b3\u5b9a \u9700\u8981\u5728\u7c7b\u5b9a\u4e49\u7684\u65f6\u5019\u660e\u786e\u7684\u5b9a\u4e49\u5360\u4f4d\u7b26(\u6cdb\u578b\u6807\u8bb0) \u5b9e\u4f8b\u5316\u4e0d\u8bbe\u7f6e\u6cdb\u578b\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4f7f\u7528Object Point < Integer > p1 = new Point < Integer >( 1 , 2 ); \u6cdb\u578b\u7684\u597d\u5904\uff1a 1\u3001\u7f16\u8bd1\u65f6\u68c0\u67e5\u7c7b\u578b\uff0c\u907f\u514d\u51fa\u73b0\u5b89\u5168\u9690\u60a3 2\u3001\u907f\u514d\u5411\u4e0b\u8f6c\u578b\u64cd\u4f5c \u6cdb\u578b\u6ce8\u610f\u70b9\uff1a 1\u3001\u53ea\u80fd\u4f7f\u7528\u5f15\u7528\u7c7b\u578b\uff0c\u57fa\u672c\u7c7b\u578b\u8981\u4f7f\u7528\u5305\u88c5\u7c7b 2\u3001JDK >=1.7\u5f00\u59cb\u53ef\u4ee5\u7b80\u5199 Point < Integer > p1 = new Point <>( 1 , 2 ); \u4f7f\u7528\u6cdb\u578b\u53ef\u4ee5\u89e3\u51b3\u5927\u90e8\u5206\u7684\u7c7b\u5bf9\u8c61\u5f3a\u5236\u8f6c\u6362\u5904\u7406 class Point < T >{ private T x ; private T y ; public Point (){} public Point ( T x , T y ){ this . x = x ; this . y = y ; } public void setX ( T x ){ this . x = x ; } public void setY ( T y ){ this . y = y ; } public T getX (){ return this . x ; } public T getY (){ return this . y ; } @Override public String toString (){ return \"Point(\" + this . x + \", \" + this . y + \")\" ; } } class Demo { public static void main ( String [] args ) { Point < Integer > p1 = new Point < Integer >( 1 , 2 ); System . out . println ( p1 ); // Point(1, 2) int x = ( Integer ) p1 . getX () ; System . out . println ( x ); // 1 Point < Double > p2 = new Point < Double >( 1.1 , 2.2 ); System . out . println ( p2 ); // Point(1.1, 2.2) Point < String > p3 = new Point < String >( \"\u4e1c\u7ecf30\u5ea6\" , \"\u5317\u7eac20\u5ea6\" ); System . out . println ( p3 ); // Point(10, \u5317\u7eac20\u5ea6) } }","title":"97 \u6cdb\u578b\u57fa\u672c\u5b9a\u4e49"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#98","text":"\u76ee\u524d\u7684\u6cdb\u578b\u8fdb\u884c\u5f15\u7528\u4f20\u9012 class Message < T >{ private T content ; public void setContent ( T message ){ this . content = message ; } public T getContent (){ return this . content ; } } class Demo { public static void main ( String [] args ) { Message < String > message = new Message <>(); message . setContent ( \"Hello Java\" ); showMessage ( message ); } // \u53ea\u80fd\u63a5\u6536Message<String> \u5bf9\u8c61 public static void showMessage ( Message < String > message ){ System . out . println ( message . getContent ()); // Hello Java } } \u4fee\u6539\u4e3a\u901a\u914d\u7b26\u63a5\u6536\u6570\u636e public static void showMessage ( Message <?> message ) { System . out . println ( message . getContent ()); // Hello Java } \u8bbe\u7f6e\u6cdb\u578b\u8303\u56f4 // \u8bbe\u7f6e\u6cdb\u578b\u4e0a\u9650 // ? extends \u7c7b // \u4f8b\u5982\uff1a\u53ea\u5141\u8bb8\u8bbe\u7f6eNumber \u6216\u5176\u5b50\u7c7b ? extends Number // \u8bbe\u7f6e\u6cdb\u578b\u4e0b\u9650 // ? super \u7c7b // \u4f8b\u5982\uff1a\u53ea\u80fd\u591f\u4f7f\u7528String \u6216\u5176\u7236\u7c7b ? super String public static void showMessage ( Message <? extends Number > message ) { System . out . println ( message . getContent ()); } public static void showMessage ( Message <? super String > message ) { System . out . println ( message . getContent ()); }","title":"98 \u6cdb\u578b\u901a\u914d\u7b26"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#99","text":"1\u3001\u5b9e\u73b0\u7c7b\u7ee7\u7eed\u4f7f\u7528\u6cdb\u578b interface IMessage < T >{ public void echo ( T t ); } class Messageimpl < S > implements IMessage < S > { public void echo ( S t ){ System . out . println ( t ); } } class Demo { public static void main ( String [] args ) { Messageimpl < String > message = new Messageimpl <>(); message . echo ( \"Hello\" ); // Hello } } 2\u3001\u5b9e\u73b0\u7c7b\u4e0d\u4f7f\u7528\u6cdb\u578b interface IMessage < T >{ public void echo ( T t ); } class Messageimpl implements IMessage < String > { public void echo ( String t ){ System . out . println ( t ); } } class Demo { public static void main ( String [] args ) { Messageimpl message = new Messageimpl (); message . echo ( \"Hello\" ); // Hello } }","title":"99 \u6cdb\u578b\u63a5\u53e3"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#100","text":"\u6cdb\u578b\u65b9\u6cd5\uff1a\u6cdb\u578b\u6807\u8bb0\u5199\u5230\u4e86\u65b9\u6cd5\u4e0a \u6cdb\u578b\u65b9\u6cd5\u4e0d\u4e00\u5b9a\u975e\u8981\u51fa\u73b0\u5728\u6cdb\u578b\u7c7b\u4e2d class Demo { public static < T > T [] getArray ( T ... args ){ return args ; } public static void main ( String [] args ) { Integer [] list = getArray ( 1 , 2 , 3 ); for ( int x : list ){ System . out . println ( x ); // 1 2 3 } } }","title":"100 \u6cdb\u578b\u65b9\u6cd5"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#23","text":"","title":"\u7b2c23 \u7ae0 \uff1a \u5305\u7684\u5b9a\u4e49\u53ca\u4f7f\u7528"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#101","text":"\u5305 == \u76ee\u5f55 \u201c.\u201d\u8868\u793a\u5206\u9694\u5b50\u76ee\u5f55 package com.name.demo ; public class Hello {} \u7f16\u8bd1\u540e\u7684.class\u6587\u4ef6\u9700\u8981\u4fdd\u5b58\u5230\u6307\u5b9a\u76ee\u5f55\u4e2d \u6253\u5305\u5904\u7406 $ javac -d . Hello.java -d \u8868\u793a\u8981\u751f\u6210\u7684\u76ee\u5f55\uff0cpackage\u5b9a\u4e49\u7684\u7ed3\u6784 . \u8868\u793a\u5f53\u524d\u6240\u5728\u76ee\u5f55 \u7a0b\u5e8f\u6267\u884c\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u5e26\u7740\u5305\u6267\u884c\u7a0b\u5e8f $ java com.name.demo.Hello","title":"101 \u5305\u7684\u5b9a\u4e49"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#102","text":"\u76f4\u63a5\u7f16\u8bd1,\u8ba9java\u51b3\u5b9a\u7f16\u8bd1\u5148\u540e\u987a\u5e8f $ java -d . *.java \u6ce8\u610f\uff1a 1\u3001 public class \u7c7b\u540d\u5fc5\u987b\u4e0e\u6587\u4ef6\u540d\u4fdd\u6301\u4e00\u81f4 2\u3001\u8981\u88ab\u5176\u4ed6\u5305\u6240\u4f7f\u7528\u7684\u7c7b\u8981\u52a0 public 3\u3001\u4e00\u822c\u4e00\u4e2ajava\u6587\u4ef6\u53ea\u6709\u4e00\u4e2aclass\u7c7b 4\u3001 class \u7c7b\u540d\u79f0\u53ef\u4ee5\u4e0e\u6587\u4ef6\u540d\u4e0d\u4e00\u81f4\uff0c\u53ef\u4ee5\u63d0\u4f9b\u591a\u4e2a\u7c7b\uff0c\u4f1a\u88ab\u7f16\u8bd1\u4e3a\u591a\u4e2aclass\u6587\u4ef6 \u800c\u4e14\u53ea\u80fd\u88ab\u672c\u5305\u6240\u8bbf\u95ee \u5305\u540d\u5fc5\u987b\u91c7\u7528\u5c0f\u5199\u5b57\u6bcd\u5b9a\u4e49 \u5bfc\u5165\u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26 * \u4e0d\u8868\u793a\u5168\u90e8\u52a0\u8f7d\uff0c\u4f1a\u6839\u636e\u9700\u8981\u52a0\u8f7d \u4f1a\u51fa\u73b0\u5f15\u7528\u4e0d\u660e\u786e\u95ee\u9898 \u4f7f\u7528\u7684\u65f6\u5019\u76f4\u63a5\u5199\u5b8c\u6574\u8def\u5f84 import com.name.demo ; com . name . demo . Hello (); \u5bfc\u5305\u793a\u4f8b Message.java package com.name.demo ; public class Message { public void printMessage ( String message ){ System . out . println ( message ); } } Demo.java import com.name.demo.Message ; class Demo { public static void main ( String [] args ) { Message message = new Message (); message . printMessage ( \"Hello Message\" ) ; } } \u6253\u5305\u6267\u884c # \u7f16\u8bd1\u6253\u5305\u6587\u4ef6 $ javac - d . * . java # \u6267\u884c $ java Demo Hello Message \u6587\u4ef6\u76ee\u5f55 \u251c\u2500\u2500 Demo . class \u251c\u2500\u2500 Demo . java \u251c\u2500\u2500 Message . java \u2514\u2500\u2500 com \u2514\u2500\u2500 name \u2514\u2500\u2500 demo \u2514\u2500\u2500 Message . class","title":"102 \u5305\u7684\u5bfc\u5165"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#103","text":"JDK >=1.5 import static com.name.demo.Demo.* ; Message.java package com.name.demo ; public class Message { public static void echoMessage ( String message ){ System . out . println ( message ); } } Demo.java import static com.name.demo.Message.* ; class Demo { public static void main ( String [] args ) { echoMessage ( \"Hello Message\" ) ; } }","title":"103 \u9759\u6001\u5bfc\u5165"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#104-jar","text":"jar\u6587\u4ef6\uff1a \u7ba1\u7406class\u6587\u4ef6 \u6b65\u9aa4\uff1a \u6253\u5305\u7f16\u8bd1 javac -d . Message.java \u6253\u5305jar jar -cvf name.jar com -c create \u521b\u5efa\u6587\u4ef6 -v verbose \u8be6\u7ec6\u8f93\u51fa -f file \u8981\u751f\u6210\u7684jar\u6587\u4ef6 rar\u6253\u5f00jar\u6587\u4ef6 \u6bcf\u4e2a.jar\u6587\u4ef6\u90fd\u662f\u72ec\u7acb\u7684\u7a0b\u5e8f\u8def\u5f84\uff0c\u5fc5\u987b\u901a\u8fc7CLASSPATH\u914d\u7f6e windows: \u4ee5\u5206\u53f7\u5206\u9694 $ SET CLASSPATH = . ; d: \\n ame.jar Mac\uff1a\u4ee5\u5192\u53f7\u5206\u9694 $ export CLASSPATH = \".:/root/name.jar\" JDK < 1.9 \u6240\u6709\u7c7b\u7684jar\u6587\u4ef6\uff1a rt.jar tools.jar JDK >= 1.9 \u6a21\u5757\u5316\u8bbe\u8ba1","title":"104 \u751f\u6210jar\u6587\u4ef6"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#105","text":"Java\u81ea\u8eab\u63d0\u4f9b\u7c7b\u5e93 \u7b2c\u4e09\u65b9\u63d0\u4f9b\u652f\u6301\u7c7b\u5e93 java.lang String, Number, Object JDK 1.1\u81ea\u52a8\u5bfc\u5165 java.lang.reflect \u53cd\u5c04\u673a\u5236 java.util \u5de5\u5177\u7c7b\uff0c\u6570\u636e\u7ed3\u6784 java.io \u8f93\u5165\u8f93\u51fa java.net \u7f51\u7edc\u5f00\u53d1 java.sql \u6570\u636e\u5e93\u7f16\u7a0b java.applet \u5d4c\u5957\u7f51\u9875\u6267\u884c java.awt \u56fe\u5f62\u754c\u9762GUI\u5f00\u53d1Windows\u4f4d\u7f6e java.swing\uff08JDK1.2\uff09\u8f7b\u91cf\u7ea7\u56fe\u5f62\u5f00\u53d1\u5305","title":"105 \u7cfb\u7edf\u5e38\u7528\u5305"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#106","text":"\u9762\u5411\u5bf9\u8c61\u4e09\u4e2a\u7279\u70b9\uff1a\u5c01\u88c5\uff0c\u7ee7\u627f\uff0c\u591a\u6001 \u8bbf\u95ee\u63a7\u5236\u6743\u9650 \u8bbf\u95ee\u8303\u56f4 private default protected public \u540c\u5305\u540c\u7c7b true true true true \u540c\u5305\u4e0d\u540c\u7c7b true true true \u4e0d\u540c\u5305\u7684\u5b50\u7c7b true true \u4e0d\u540c\u5305\u7684\u6240\u6709\u7c7b true \u53c2\u8003\u9009\u62e9 \u5c5e\u6027\u5b9a\u4e49 private \u65b9\u6cd5\u5b9a\u4e49 public \u901a\u8fc7\u5b50\u7c7b\u8bbf\u95eeprotected \u5c5e\u6027 Message.java package com.util.a ; public class Message { protected String info = \"message info\" ; } TestMessage.java package com.util.b ; import com.util.a.Message ; public class TestMessage extends Message { public void showInfo (){ System . out . println ( super . info ); } } Demo.java import com.util.b.TestMessage ; public class Demo { public static void main ( String [] args ) { new TestMessage (). showInfo (); } }","title":"106 \u8bbf\u95ee\u63a7\u5236\u6743\u9650"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#24-uml","text":"","title":"\u7b2c24 \u7ae0 \uff1a UML\u56fe\u5f62"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#107","text":"UML\u7edf\u4e00\u5efa\u6a21\u8bed\u8a00\uff1a \u5229\u7528\u56fe\u5f62\u5316\u7684\u5f62\u5f0f\u6765\u5b9e\u73b0\u7a0b\u5e8f\u7c7b\u5173\u7cfb\u7684\u63cf\u8ff0 \u4e09\u5c42\u7ed3\u6784\u8868\u793a \u7c7b\u540d\u79f0 \u5c5e\u6027 \u65b9\u6cd5 \u62bd\u8c61\u7c7b\u5c5e\u6027\u659c\u4f53abstract \u5c5e\u6027\u683c\u5f0f\uff1a\u8bbf\u95ee\u6743\u9650 \u5c5e\u6027\u540d\u79f0: \u5c5e\u6027\u7c7b\u578b public + protected # private - \u65b9\u6cd5\u683c\u5f0f\uff1a\u8bbf\u95ee\u6743\u9650 \u65b9\u6cd5\u540d\u79f0(): \u8fd4\u56de\u503c \u753b\u56fe\u5de5\u5177 Rational Role PowerDesigner \u5b50\u7c7b\u5b9e\u73b0\u63a5\u53e3 \u4e09\u89d2\u548c\u865a\u7ebf \u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b \u4e09\u89d2\u548c\u5b9e\u7ebf","title":"107 \u7c7b\u56fe"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#108","text":"\u63cf\u8ff0\u4ee3\u7801\u7684\u6267\u884c\u6d41\u7a0b","title":"108 \u65f6\u5e8f\u56fe"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#109","text":"\u63cf\u8ff0\u7a0b\u5e8f\u6267\u884c\u5206\u914d \u4e00\u822c\u51fa\u73b0\u5728\u9879\u76ee\u8bbe\u8ba1\u8fc7\u7a0b","title":"109 \u7528\u4f8b\u56fe"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#25","text":"","title":"\u7b2c25 \u7ae0 \uff1a \u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#110","text":"\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\uff1a\u53ea\u5141\u8bb8\u63d0\u4f9b\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61 -\u997f\u6c49\u5f0f\uff1a\u7cfb\u7edf\u52a0\u8f7d\u5c31\u5b9e\u4f8b\u5316 -\u61d2\u6c49\u5f0f\uff1a\u7b2c\u4e00\u6b21\u4f7f\u7528\u7684\u65f6\u5019\u5b9e\u4f8b\u5316 \u591a\u4f8b\u8bbe\u8ba1\u6a21\u5f0f \u5355\u4f8b\u6a21\u5f0f\u7279\u70b9\uff1a \u6784\u9020\u65b9\u6cd5\u79c1\u6709\u5316\uff0c\u5185\u90e8\u63d0\u4f9bstatic\u65b9\u6cd5\u83b7\u53d6\u5b9e\u4f8b\u5316\u5bf9\u8c61 \u997f\u6c49\u5f0f\u5355\u4f8b\u6a21\u5f0f class Singleton { private static Singleton singleton = new Singleton (); // \u6784\u9020\u51fd\u6570\u79c1\u6709\u5316 private Singleton (){}; public static Singleton getInstance (){ return singleton ; } } class Demo { public static void main ( String [] args ) { Singleton singleton = Singleton . getInstance (); } } \u61d2\u6c49\u5f0f\u5355\u4f8b\u6a21\u5f0f class Singleton { private static Singleton singleton ; // \u6784\u9020\u51fd\u6570\u79c1\u6709\u5316 private Singleton (){}; public static Singleton getInstance (){ // \u7b2c\u4e00\u6b21\u4f7f\u7528\u5b9e\u4f8b\u5316 if ( singleton == null ){ singleton = new Singleton (); } return singleton ; } }","title":"110 \u5355\u4f8b\u8bbe\u8ba1"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#111","text":"class Color { private String title ; private static final Color RED = new Color ( \"\u7ea2\u8272\" ); private static final Color GREEN = new Color ( \"\u7eff\u8272\" ); private static final Color BLUE = new Color ( \"\u84dd\u8272\" ); private Color ( String title ){ this . title = title ; }; public static Color getInstance ( String color ){ switch ( color ){ case \"red\" : return RED ; case \"green\" : return GREEN ; case \"blue\" : return BLUE ; default : return null ; } } @Override public String toString (){ return this . title ; } } class Demo { public static void main ( String [] args ) { Color red = Color . getInstance ( \"red\" ) ; System . out . println ( red ); } } \u5355\u4f8b\u548c\u591a\u4f8b\u90fd\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u9759\u6001\u83b7\u53d6\u5b9e\u4f8b\u5316\u7684\u65b9\u6cd5","title":"111 \u591a\u4f8b\u8bbe\u8ba1"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#26","text":"","title":"\u7b2c26 \u7ae0 \uff1a \u679a\u4e3e"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#112","text":"JDK >= 1.5 \u679a\u4e3e\u4e3b\u8981\u7528\u4e8e\u5b9a\u4e49\u6709\u9650\u4e2a\u6570\u5bf9\u8c61\u7684\u4e00\u79cd\u7ed3\u6784\uff08\u591a\u4f8b\u8bbe\u8ba1\uff09 \u679a\u4e3e\u53ef\u4ee5\u5728\u7a0b\u5e8f\u7f16\u8bd1\u65f6\u5224\u65ad\u5b9e\u4f8b\u5316\u5bf9\u8c61\u662f\u5426\u5b58\u5728 enum Color { RED , GREEN , BLUE } class Demo { public static void main ( String [] args ) { for ( Color color : Color . values ()){ System . out . println ( color ); } // RED GREEN BLUE } } switch\u4e2d\u5bf9\u679a\u4e3e\u7c7b\u5224\u65ad enum Color { RED , GREEN , BLUE } class Demo { public static void main ( String [] args ) { Color color = Color . RED ; switch ( color ){ case RED : System . out . println ( \"\u7ea2\u8272\" ); break ; case GREEN : System . out . println ( \"\u7eff\u8272\" ); break ; case BLUE : System . out . println ( \"\u84dd\u8272\" ); break ; default : System . out . println ( \"default\" ); } // \u7ea2\u8272 } }","title":"112 \u5b9a\u4e49\u679a\u4e3e\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#113-enum","text":"\u679a\u4e3e\u672c\u8d28\u662f\u4e00\u4e2a\u7c7b \u679a\u4e3e\u4e2d\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u5e8f\u53f7\u90fd\u662f\u6839\u636e\u679a\u4e3e\u5bf9\u8c61\u7684\u5b9a\u4e49\u987a\u5e8f\u6765\u51b3\u5b9a\u7684 enum Color { RED , GREEN , BLUE } class Demo { public static void main ( String [] args ) { for ( Color color : Color . values ()){ System . out . println ( color . ordinal () + \" - \" + color . name ()); } /** 0 - RED 1 - GREEN 2 - BLUE */ } } enum\u548cEnum\u533a\u522b enum \u662fJDK 1.5\u4e4b\u540e\u63d0\u4f9b\u7684\u5173\u952e\u5b57\uff0c\u5b9a\u4e49\u679a\u4e3e\u7c7b Enum \u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5173\u952e\u5b57enum\u5b9a\u4e49\u7684\u7c7b\u9ed8\u8ba4\u7ee7\u627f\u6b64\u7c7b","title":"113 Enum\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#114","text":"\u679a\u4e3e\u7c7b\u672c\u8eab\u5c5e\u4e8e\u591a\u4f8b\u8bbe\u8ba1\u6a21\u5f0f \u5728\u679a\u4e3e\u7c7b\u4e2d\u5b9a\u4e49\u5176\u4ed6\u7ed3\u6784 // \u679a\u4e3e\u7c7b enum Color { // \u679a\u4e3e\u5bf9\u8c61\u8981\u5199\u5728\u9996\u884c RED ( \"\u7ea2\u8272\" ), GREEN ( \"\u7eff\u8272\" ), BLUE ( \"\u84dd\u8272\" ) ; // \u5b9a\u4e49\u5c5e\u6027 private String title ; private Color ( String title ){ this . title = title ; } @Override public String toString (){ return this . title ; } } class Demo { public static void main ( String [] args ) { for ( Color color : Color . values ()){ System . out . println ( color . ordinal () + \" - \" + color . name () + \" - \" + color ); } /** 0 - RED - \u7ea2\u8272 1 - GREEN - \u7eff\u8272 2 - BLUE - \u84dd\u8272 */ } } \u679a\u4e3e\u7c7b\u4e2d\u53ef\u4ee5\u5b9e\u73b0\u63a5\u53e3\u7ee7\u627f interface Imessage { public String getMessage (); } enum Color implements Imessage { RED ( \"\u7ea2\u8272\" ), GREEN ( \"\u7eff\u8272\" ), BLUE ( \"\u84dd\u8272\" ) ; private String title ; private Color ( String title ){ this . title = title ; } @Override public String toString (){ return this . title ; } public String getMessage (){ return this . title ; } } class Demo { public static void main ( String [] args ) { Imessage message = Color . RED ; System . out . println ( message . getMessage ()); // \u7ea2\u8272 } } \u679a\u4e3e\u7c7b\u53ef\u4ee5\u76f4\u63a5\u5b9a\u4e49\u62bd\u8c61\u65b9\u6cd5\uff0c \u5e76\u4e14\u8981\u6c42\u6bcf\u4e00\u4e2a\u679a\u4e3e\u5bf9\u8c61\u90fd\u8981\u72ec\u7acb\u8986\u5199\u6b64\u62bd\u8c61\u65b9\u6cd5 enum Color { RED ( \"\u7ea2\u8272\" ){ public String getMessage (){ return this . toString (); } }, GREEN ( \"\u7eff\u8272\" ){ public String getMessage (){ return this . toString (); } }, BLUE ( \"\u84dd\u8272\" ){ public String getMessage (){ return this . toString (); } } ; private String title ; private Color ( String title ){ this . title = title ; } @Override public String toString (){ return this . title ; } public abstract String getMessage () ; } class Demo { public static void main ( String [] args ) { System . out . println ( Color . RED . getMessage ()); // \u7ea2\u8272 } } \u679a\u4e3e\u7c7b\u4e0d\u5efa\u8bae\u5199\u592a\u591a\u5185\u5bb9","title":"114 \u5b9a\u4e49\u679a\u4e3e\u7ed3\u6784"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u6cdb\u578b/#115","text":"enum Sex { MAN ( \"\u7537\" ), FEMALE ( \"\u5973\" ) ; private String title ; private Sex ( String title ){ this . title = title ; } @Override public String toString (){ return this . title ; } } class Person { private String name ; private int age ; private Sex sex ; public Person ( String name , int age , Sex sex ){ this . name = name ; this . age = age ; this . sex = sex ; } @Override public String toString (){ return \"Person(\" + this . name + \" \" + this . age + \" \" + this . sex + \")\" ; } } class Demo { public static void main ( String [] args ) { Person person = new Person ( \"\u5f20\u4e09\" , 23 , Sex . MAN ); System . out . println ( person ); // Person(\u5f20\u4e09 23 \u7537) } }","title":"115 \u679a\u4e3e\u5e94\u7528\u6848\u4f8b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/","text":"2\u3001\u9762\u5411\u5bf9\u8c61\u7b80\u4ecb Java\u8bed\u8a00\u6700\u5927\u7279\u70b9\uff1a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bbe\u8ba1 \u9762\u5411\u8fc7\u7a0b\uff1aC\u8bed\u8a00\uff0c\u9762\u5bf9\u4e00\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848 \u9762\u5411\u5bf9\u8c61\uff1aC++/Java\uff0c\u6a21\u5757\u5316\u8bbe\u8ba1\uff0c\u8fdb\u884c\u91cd\u7528\u914d\u7f6e\uff0c\u8003\u8651\u6807\u51c6 1\u3001\u9762\u5411\u5bf9\u8c61\u4e09\u4e2a\u4e3b\u8981\u7279\u5f81\uff1a \u5c01\u88c5\u6027\uff1a\u5185\u90e8\u64cd\u4f5c\u5bf9\u5916\u90e8\u4e0d\u53ef\u89c1 \u7ee7\u627f\u6027\uff1a\u5df2\u6709\u7ed3\u6784\u7684\u57fa\u7840\u4e0a\u7ee7\u7eed\u8fdb\u884c\u529f\u80fd\u6269\u5145 \u591a\u6001\u6027\uff1a\u662f\u5728\u7ee7\u627f\u6027\u7684\u57fa\u7840\u4e0a\u6269\u5145\u800c\u6765\u7684\u6982\u5ff5\uff0c\u6307\u7c7b\u578b\u7684\u8f6c\u6362\u5904\u7406 2\u3001\u9762\u5411\u5bf9\u8c61\u5f00\u53d1\u4e09\u4e2a\u6b65\u9aa4\uff1a OOA\uff1a\u9762\u5411\u5bf9\u8c61\u5206\u6790 OOD\uff1a\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1 OOP\uff1a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b 3\u3001\u7c7b\u4e0e\u5bf9\u8c61 \u7c7b\uff1a\u5bf9\u67d0\u4e00\u7c7b\u4e8b\u7269\u5171\u6027\u7684\u62bd\u8c61 \u5bf9\u8c61\uff1a\u63cf\u8ff0\u4e00\u4e2a\u5177\u4f53\u7684\u4ea7\u7269 \u7c7b\u662f\u4e00\u4e2a\u6a21\u578b\uff0c\u5bf9\u8c61\u662f\u7c7b\u53ef\u4ee5\u4f7f\u7528\u7684\u5b9e\u4f8b \u5148\u6709\u7c7b\u518d\u6709\u5bf9\u8c61 \u7c7b\u7684\u7ec4\u6210\uff1a \u6210\u5458\u5c5e\u6027Field \u7b80\u79f0\u5c5e\u6027 \u64cd\u4f5c\u65b9\u6cd5Method \u5bf9\u8c61\u7684\u884c\u4e3a 4\u3001\u7c7b\u4e0e\u5bf9\u8c61\u7684\u5b9a\u4e49\u53ca\u4f7f\u7528 Java\u4e2d\uff0c\u7c7b\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u7ed3\u6784\u4f53 \u5c5e\u6027\u5c31\u662f\u53d8\u91cf \u65b9\u6cd5\u5c31\u662f\u53ef\u4ee5\u91cd\u590d\u6267\u884c\u7684\u4ee3\u7801 // \u5b9a\u4e49\u7c7b class Person { // \u5b9a\u4e49\u5c5e\u6027 String name ; // \u5f15\u7528\u6570\u636e\u7c7b\u578b \u9ed8\u8ba4\u503c null int age ; // \u57fa\u7840\u6570\u636e\u7c7b\u578b \u9ed8\u8ba4\u503c 0 // \u5b9a\u4e49\u65b9\u6cd5 public void tell (){ System . out . println ( \"\u59d3\u540d\uff1a\" + this . name + \" \u5e74\u9f84\uff1a\" + this . age ); } public static void main ( String [] args ) { Person person = new Person (); person . name = \"\u5f20\u4e09\" ; person . age = 18 ; person . tell (); // \u59d3\u540d\uff1a\u5f20\u4e09 \u5e74\u9f84\uff1a18 } } \u751f\u4ea7\u5bf9\u8c61\u4e24\u79cd\u65b9\u5f0f\uff1a 1\u3001\u58f0\u660e\u5e76\u5b9e\u4f8b\u5316\u5bf9\u8c61 \u7c7b\u540d\u79f0 \u5bf9\u8c61\u540d\u79f0 = new \u7c7b\u540d\u79f0(); 2\u3001\u5206\u6b65\u5b8c\u6210 \uff081\uff09\u58f0\u660e\u5bf9\u8c61\uff1a\u7c7b\u540d\u79f0 \u5bf9\u8c61\u540d\u79f0 = null; \uff082\uff09\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff1a\u5bf9\u8c61\u540d\u79f0 = new \u7c7b\u540d\u79f0(); \u5b9e\u4f8b\u5316\u5bf9\u8c61\u8c03\u7528\u64cd\u4f5c\uff1a \u8c03\u7528\u5c5e\u6027\uff1a\u5b9e\u4f8b\u5316\u5bf9\u8c61.\u6210\u5458\u5c5e\u6027\uff1b \u8c03\u7528\u65b9\u6cd5\uff1a\u5b9e\u4f8b\u5316\u5bf9\u8c61.\u65b9\u6cd5\u540d\u79f0(); 5\u3001\u5185\u5b58\u5bf9\u8c61\u5206\u6790 \u6700\u5e38\u7528\u76842\u5757\u5185\u5b58\u7a7a\u95f4 \u5806\u5185\u5b58\uff1a\u4fdd\u5b58\u5bf9\u8c61\u5177\u4f53\u4fe1\u606f new\u5f00\u8f9f\u5806\u5185\u5b58\u7a7a\u95f4 \u6808\u5185\u5b58\uff1a\u4fdd\u5b58\u4e00\u5757\u5806\u5185\u5b58\u5730\u5740 /** \u6808\u5185\u5b58 \u5806\u5185\u5b58 \u5730\u5740Ox0001 -> \u5bf9\u8c61\u5185\u5bb9 */ // \u65b9\u5f0f\u4e00 Person person = new Person (); // \u65b9\u5f0f\u4e8c Person person = null ; person = new Person (); \u6240\u6709\u7684\u5bf9\u8c61\u5728\u8c03\u7528\u5c5e\u6027\u6216\u65b9\u6cd5\u4e4b\u524d\uff0c\u5fc5\u987b\u5b9e\u4f8b\u5316 6\u3001\u5bf9\u8c61\u5f15\u7528\u5206\u6790 \u540c\u4e00\u5757\u5806\u5185\u5b58\u53ef\u4ee5\u88ab\u4e0d\u540c\u7684\u6808\u5185\u5b58\u6240\u6307\u5411\uff0c\u4e5f\u53ef\u4ee5\u66f4\u6362\u6307\u5411 \u4fee\u6539person2, person1\u4e5f\u4f1a\u88ab\u4fee\u6539 Person person1 = new Person (); person1 . name = \"\u5f20\u4e09\" ; person1 . age = 19 ; Person person2 = person1 ; person2 . tell (); // \u59d3\u540d\uff1a\u5f20\u4e09 \u5e74\u9f84\uff1a19 \u5f15\u7528\u4f20\u9012\u53ef\u4ee5\u53d1\u751f\u5728\u65b9\u6cd5\u8c03\u7528 public static void main ( String [] args ) { Person person = new Person (); person . name = \"\u5f20\u4e09\" ; person . age = 18 ; change ( person ); // \u76f8\u5f53\u4e8e: Person temp = person; person . tell (); // \u59d3\u540d\uff1a\u674e\u56db \u5e74\u9f84\uff1a18 } public static void change ( Person temp ){ temp . name = \"\u674e\u56db\" ; // \u65b9\u6cd5\u7ed3\u675f\u540e\u65ad\u5f00\u5f15\u7528 } 7\u3001\u5f15\u7528\u4e8e\u5783\u573e\u4ea7\u751f\u5206\u6790 \u5783\u573e\u7a7a\u95f4\uff1a\u6ca1\u6709\u4efb\u4f55\u6808\u5185\u5b58\u6307\u5411\u7684\u5806\u5185\u5b58\u7a7a\u95f4 \u5783\u573e\u4f1a\u88abGC\uff08Garbage Collector\uff09\u5783\u573e\u6536\u96c6\u5668\u5b9a\u671f\u56de\u6536 \u5783\u573e\u8fc7\u591a\u4f1a\u5f71\u54cdGC\u6027\u80fd \u4e00\u4e2a\u6808\u5185\u5b58\u53ea\u80fd\u4fdd\u5b58\u6709\u4e00\u4e2a\u5806\u5185\u5b58\u7684\u5730\u5740\u6570\u636e Person person1 = new Person (); // Ox0001 Person person2 = new Person (); // Ox0002 person2 = person1 ; // \u6b64\u65f6 person2 \u6307\u5411\u7684 Ox0002 \u5bf9\u8c61\u6210\u4e3a\u4e86\u5783\u573e 8\u3001\u6210\u5458\u5c5e\u6027\u5c01\u88c5 \u5c01\u88c5\uff1a\u5bf9\u6570\u636e\u8fdb\u884c\u4fdd\u62a4 private\u5173\u952e\u5b57\u5bf9\u5916\u4e0d\u53ef\u89c1 \u4f7f\u7528setter\u3001getter\u8bbe\u7f6e\u6216\u83b7\u53d6\u5c5e\u6027 \u7c7b\u4e2d\u7684\u6240\u6709\u5c5e\u6027\u90fd\u5fc5\u987b\u4f7f\u7528private\u5c01\u88c5\uff0c\u9700\u8981\u63d0\u4f9bsetter\u3001getter\u65b9\u6cd5 class Person { // \u79c1\u6709\u5316\u5c5e\u6027 private String name ; // \u5bf9\u5916\u63d0\u4f9bgeter\uff0c setter\u65b9\u6cd5 public void setName ( String n ){ name = n ; } public String getName (){ return name ; } public static void main ( String [] args ) { Person person = new Person (); person . setName ( \"\u5f20\u4e09\" ); System . out . println ( person . getName ()); // \u5f20\u4e09 } } 9\u3001\u6784\u9020\u65b9\u6cd5\u4e0e\u533f\u540d\u5bf9\u8c61 \u73b0\u6709\u7a0b\u5e8f\u4f7f\u7528\u7c7b\uff0c\u7ecf\u8fc7\u4e862\u4e2a\u6b65\u9aa4\uff1a 1\u3001\u58f0\u660e\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u53ea\u80fd\u4f7f\u7528\u9ed8\u8ba4\u503c 2\u3001\u901a\u8fc7 setter \u65b9\u6cd5\u8bbe\u7f6e\u5c5e\u6027 \u6784\u9020\u65b9\u6cd5: \u5b9e\u4f8b\u5316\u5bf9\u8c61\u65f6\u8fdb\u884c\u6570\u636e\u521d\u59cb\u5316 1\u3001\u6784\u9020\u65b9\u6cd5\u540d\u4e0e\u7c7b\u540d\u5fc5\u987b\u4e00\u81f4 2\u3001\u6784\u9020\u65b9\u6cd5\u65e0\u8fd4\u56de\u503c 3\u3001\u6784\u9020\u65b9\u6cd5\u5728new\u5b9e\u4f8b\u5316\u5bf9\u8c61\u65f6\u81ea\u52a8\u8c03\u7528 class Person { // \u79c1\u6709\u5316\u5c5e\u6027 private String name ; // \u6709\u53c2\u6784\u9020\u65b9\u6cd5 public Person ( String n ){ name = n ; } public static void main ( String [] args ) { Person person = new Person ( \"\u5f20\u4e09\" ); System . out . println ( person . getName ()); // \u5f20\u4e09 } } \uff081\uff09Person \u5b9a\u4e49\u5bf9\u8c61\u6240\u5c5e\u7c7b\u578b\uff0c\u7c7b\u578b\u51b3\u5b9a\u53ef\u4ee5\u8c03\u7528\u7684\u65b9\u6cd5 \uff082\uff09person \u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u540d\u79f0 \uff083\uff09new \u5f00\u8f9f\u65b0\u7684\u5806\u5185\u5b58\u7a7a\u95f4 \uff084\uff09Person(\"\u5f20\u4e09\") \u8c03\u7528\u6784\u9020\u51fd\u6570\uff08\u6709\u53c2\uff0c\u65e0\u53c2\uff09 \u6240\u6709\u7684\u7c7b\u90fd\u4f1a\u63d0\u4f9b\u6709\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u7a0b\u5e8f\u7f16\u8bd1\u65f6\u81ea\u52a8\u521b\u5efa\uff0c\u5982\u679c\u660e\u786e\u6784\u9020\u65b9\u6cd5\u5219\u4e0d\u81ea\u52a8\u521b\u5efa \u7ed3\u8bba\uff1a\u4e00\u4e2a\u7c7b\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5 \u95ee\u9898\uff1a\u6784\u9020\u65b9\u6cd5\u6ca1\u6709\u8fd4\u56de\u503c\uff1f\u4e0d\u4f7f\u7528void \u6784\u9020\u65b9\u6cd5\u4e0e\u666e\u901a\u65b9\u6cd5\u533a\u522b\uff1a \u6784\u9020\u65b9\u6cd5\u5728\u7c7b\u5bf9\u8c61\u5b9e\u4f8b\u5316\u65f6\u8c03\u7528 \u666e\u901a\u65b9\u6cd5\u5728\u7c7b\u5bf9\u8c61\u5b9e\u4f8b\u5316\u4e4b\u540e\u8c03\u7528 \u6784\u9020\u65b9\u6cd5\u91cd\u8f7d \u53ea\u7528\u8003\u8651\u65b9\u6cd5\u7b7e\u540d\uff08\u53c2\u6570\u4e2a\u6570\uff0c\u7c7b\u578b\uff0c\u987a\u5e8f\uff09 \u6309\u7167\u53c2\u6570\u6570\u91cf\u987a\u5e8f\u6392\u5217\u6784\u9020\u65b9\u6cd5 class Person { // \u79c1\u6709\u5316\u5c5e\u6027 private String name ; // \u65e0\u53c2\u6784\u9020\u65b9\u6cd5 public Person (){ } // \u6709\u53c2\u6784\u9020\u65b9\u6cd5 public Person ( String n ){ name = n ; } public String getName (){ return name ; } public static void main ( String [] args ) { Person person = new Person ( \"\u5f20\u4e09\" ); System . out . println ( person . getName ()); // \u5f20\u4e09 } } \u533f\u540d\u5bf9\u8c61 new Person ( \"\u5f20\u4e09\" ). getName ()); // \u5f20\u4e09 \u4f7f\u7528\u4e00\u6b21\u540e\u5c31\u4f1a\u88abGC\u56de\u6536\u91ca\u653e \u65b9\u6cd5\u53ef\u4ee5\u4f20\u9012\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b 10\u3001this\u8c03\u7528\u672c\u7c7b\u5c5e\u6027 \u4e09\u7c7b\u63cf\u8ff0 1\u3001\u5f53\u524d\u7c7b\u4e2d\u7684\u5c5e\u6027 this.\u5c5e\u6027 2\u3001\u5f53\u524d\u7c7b\u4e2d\u7684\u65b9\u6cd5\uff08\u6784\u9020\u65b9\u6cd5\uff1athis()\u3001\u666e\u901a\u65b9\u6cd5\uff1athis.\u65b9\u6cd5()\uff09 3\u3001\u63cf\u8ff0\u5f53\u524d\u5bf9\u8c61 \u8bbf\u95ee\u672c\u7c7b\u4e2d\u7684\u5c5e\u6027\u4e00\u5b9a\u8981\u52a0this public Person ( String name , int age ){ this . name = name ; this . age = age ; } 11\u3001this\u8c03\u7528\u672c\u7c7b\u65b9\u6cd5 1\u3001\u8c03\u7528\u666e\u901a\u65b9\u6cd5 setName ( name ) ; // \u6216\u8005 this . setName ( name ) ; \u597d\u7684\u4ee3\u7801\uff1a \u4ee3\u7801\u7ed3\u6784\u53ef\u4ee5\u91cd\u7528 \u6ca1\u6709\u91cd\u590d\u4ee3\u7801 2\u3001\u8c03\u7528\u6784\u9020\u65b9\u6cd5 this() \u5fc5\u987b\u5728\u5b9e\u4f8b\u5316\u65b0\u5bf9\u8c61\u7684\u65f6\u5019\u8c03\u7528 \u53ea\u5141\u8bb8\u653e\u5728\u6784\u9020\u51fd\u6570\u9996\u884c \u76f8\u4e92\u8c03\u7528\u5fc5\u987b\u6709\u51fa\u53e3 // \u65e0\u53c2\u6784\u9020\u65b9\u6cd5 public Person (){ this ( \"\u5f20\u4e09\" ); } // \u6709\u53c2\u6784\u9020\u65b9\u6cd5 public Person ( String name ){ this . name = name ; } \u6784\u9020\u65b9\u6cd5\u8c03\u7528\u5b9e\u73b0\u9ed8\u8ba4\u53c2\u6570 class Person { // \u79c1\u6709\u5316\u5c5e\u6027 private String name ; private int age ; // \u65e0\u53c2\u6784\u9020\u65b9\u6cd5 public Person (){ this ( \"\u5f20\u4e09\" ); } // \u4e00\u53c2\u6784\u9020\u65b9\u6cd5 public Person ( String name ){ this ( name , 21 ); } // \u4e24\u53c2\u6784\u9020\u65b9\u6cd5 public Person ( String name , int age ){ this . name = name ; this . age = age ; } public void getInfo (){ System . out . println ( \"name: \" + this . name + \" age: \" + this . age ); } public static void main ( String [] args ) { new Person (). getInfo (); new Person ( \"\u674e\u56db\" ). getInfo (); new Person ( \"\u738b\u4e94\" , 22 ). getInfo (); /* name: \u5f20\u4e09 age: 21 name: \u674e\u56db age: 21 name: \u738b\u4e94 age: 22 */ } } 12\u3001\u7efc\u5408\u5b9e\u6218\uff1a\u7b80\u5355Java\u7c7b \u7b80\u5355Java\u7c7b\uff1a \u53ef\u4ee5\u63cf\u8ff0\u67d0\u4e00\u7c7b\u4fe1\u606f\u7684\u7a0b\u5e8f\u7c7b\uff0c\u6ca1\u6709\u7279\u522b\u590d\u6742\u7684\u64cd\u4f5c\uff0c\u53ea\u4f5c\u4e3a\u4e00\u79cd\u4fe1\u606f\u5b58\u50a8\u7684\u5a92\u4ecb \u6838\u5fc3\u7ed3\u6784 1\u3001\u7c7b\u540d\u6709\u610f\u4e49\uff0c\u660e\u786e\u63cf\u8ff0\u67d0\u4e00\u7c7b\u4e8b\u7269 2\u3001\u5c5e\u6027\u5fc5\u987b\u4f7f\u7528private\u5c01\u88c5\uff0c\u63d0\u4f9bsetter\u3001getter 3\u3001\u53ef\u4ee5\u63d0\u4f9b\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u5fc5\u987b\u4fdd\u7559\u65e0\u53c2\u6784\u9020\u65b9\u6cd5 4\u3001\u4e0d\u5141\u8bb8\u6709\u4efb\u4f55\u8f93\u51fa\uff0c\u5185\u6709\u83b7\u53d6\u5fc5\u987b\u8fd4\u56de \u975e\u5fc5\u987b\uff1a 1\u3001\u53ef\u4ee5\u63d0\u4f9b\u83b7\u53d6\u5bf9\u8c61\u8be6\u7ec6\u4fe1\u606f\u65b9\u6cd5\uff0cgetInfo() \u6d89\u53ca\u6982\u5ff5 \u6570\u636e\u7c7b\u578b\u3001\u7c7b\u7684\u5b9a\u4e49\u3001private\u5c01\u88c5\u3001\u65b9\u6cd5\u5b9a\u4e49\u3001\u5bf9\u8c61\u5b9e\u4f8b\u5316 class Person { // \u79c1\u6709\u5316\u5c5e\u6027 private String name ; private int age ; // \u65e0\u53c2\u6784\u9020\u65b9\u6cd5 public Person (){ this ( \"\u5f20\u4e09\" , 23 ); } // \u4e24\u53c2\u6784\u9020\u65b9\u6cd5 public Person ( String name , int age ){ this . name = name ; this . age = age ; } // setter getter public void setName ( String name ){ this . name = name ; } public String getName (){ return this . name ; } public void setAge ( int age ){ this . age = age ; } public int getAge (){ return this . age ; } public String getInfo (){ return \"name: \" + this . name + \" age: \" + this . age ; } public static void main ( String [] args ) { System . out . println ( new Person ( \"\u738b\u4e94\" , 22 ). getInfo ()); // name: \u738b\u4e94 age: 22 } } 13\u3001\u58f0\u660estatic\u5c5e\u6027 static\u4fee\u9970\u7684\u5c5e\u6027\u4e3a\u516c\u5171\u5c5e\u6027\uff0c\u4e00\u4e2a\u5bf9\u8c61\u4fee\u6539\uff0c\u6240\u6709\u5bf9\u8c61\u90fd\u4f1a\u88ab\u4fee\u6539 \u5e94\u8be5\u7531\u7c7b\u6765\u8fdb\u884c\u8bbf\u95ee\uff0c\u800c\u4e0d\u662f\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7531\u7c7b\u540d\u6765\u8c03\u7528 static \u5c5e\u6027\u4e0d\u53d7\u7c7b\u5b9e\u4f8b\u5316\u9650\u5236\uff0c\u4e0d\u5b9e\u4f8b\u5316\u4e5f\u53ef\u4ee5\u8c03\u7528 \u8fdb\u884c\u7c7b\u8bbe\u8ba1\u65f6\u9996\u9009\u975estatic\u5c5e\u6027\uff0c\u6d89\u53ca\u516c\u5171\u4fe1\u606f\u624d\u4f7f\u7528static \u5168\u5c40\u6570\u636e\u533a \u6808\u5185\u5b58 \u5806\u5185\u5b58 static \u6570\u636e person1 -> { name , age } person1 -> { name , age } class Person { String name ; static String country ; public Person ( String name ){ this . name = name ; } public static void main ( String [] args ) { Person person1 = new Person ( \"\u5f20\u4e09\" ); Person person2 = new Person ( \"\u674e\u56db\" ); Person . country = \"\u4e2d\u56fd\" ; System . out . println ( person1 . country ); System . out . println ( person2 . country ); // \u4e2d\u56fd \u4e2d\u56fd } } 14\u3001\u58f0\u660estatic\u65b9\u6cd5 static\u65b9\u6cd5\u53ea\u5141\u8bb8\u8c03\u7528static\u5c5e\u6027\u6216static\u65b9\u6cd5 static\u5c5e\u6027\u548c\u65b9\u6cd5\u90fd\u53ef\u4ee5\u5728\u6ca1\u6709\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u524d\u63d0\u4e0b\u4f7f\u7528 \u5e94\u7528\u573a\u666f\uff1a \u56de\u907f\u5b9e\u4f8b\u5316\u5bf9\u8c61\u8c03\u7528\u5e76\u4e14\u63cf\u8ff0\u516c\u5171\u5c5e\u6027\u7684\u60c5\u51b5 15\u3001static\u5e94\u7528\u6848\u4f8b \u5b9e\u73b0\u5b9e\u4f8b\u5316\u5bf9\u8c61\u4e2a\u6570\u7edf\u8ba1 class Person { static int count ; public Person (){ count ++; System . out . println ( \"\u7b2c \" + count + \" \u4e2a\u5b9e\u4f8b\" ); } public static void main ( String [] args ) { new Person (); new Person (); new Person (); /* \u7b2c 1 \u4e2a\u5b9e\u4f8b \u7b2c 2 \u4e2a\u5b9e\u4f8b \u7b2c 3 \u4e2a\u5b9e\u4f8b */ } } 16\u3001\u666e\u901a\u4ee3\u7801\u5757 \u4ee3\u7801\u5757\uff1a\u7531\"{}\"\u5b9a\u4e49\u7684\u7ed3\u6784 \u5206\u7c7b\uff1a 1\u3001\u666e\u901a\u4ee3\u7801\u5757 2\u3001\u6784\u9020\u4ee3\u7801\u5757 3\u3001\u9759\u6001\u4ee3\u7801\u5757 4\u3001\u540c\u6b65\u4ee3\u7801\u5757\uff08\u591a\u7ebf\u7a0b\uff09 \u666e\u901a\u4ee3\u7801\u5757 \u5b9a\u4e49\u5728\u65b9\u6cd5\u4e2d\u7684\u4ee3\u7801\u5757 // \u666e\u901a\u4ee3\u7801\u5757 { int age = 12 ; System . out . println ( age ); // 12 } int age = 15 ; System . out . println ( age ); // 15 17\u3001\u6784\u9020\u4ee3\u7801\u5757 \u6784\u9020\u5757\u4f18\u5148\u4e8e\u6784\u9020\u65b9\u6cd5\u6267\u884c\uff0c\u6bcf\u6b21\u5b9e\u4f8b\u5316\u90fd\u4f1a\u8c03\u7528\u6784\u9020\u4ee3\u7801\u5757 class Person { public Person (){ System . out . println ( \"\u6784\u9020\u65b9\u6cd5\" ); } { System . out . println ( \"\u6784\u9020\u4ee3\u7801\u5757\" ); } public static void main ( String [] args ) { new Person (); new Person (); /** \u6784\u9020\u4ee3\u7801\u5757 \u6784\u9020\u65b9\u6cd5 \u6784\u9020\u4ee3\u7801\u5757 \u6784\u9020\u65b9\u6cd5 */ } } 18\u3001\u9759\u6001\u4ee3\u7801\u5757 static\u5173\u952e\u5b57\u5b9a\u4e49\u7684\u4ee3\u7801\u5757 \u9759\u6001\u4ee3\u7801\u5757\u4f18\u5148\u4e8e\u6784\u9020\u51fd\u6570\u6267\u884c\uff0c\u4e0d\u7ba1\u5b9e\u4f8b\u5316\u591a\u5c11\u6b21\u53ea\u4f1a\u6267\u884c\u4e00\u6b21 \u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u9759\u6001\u5c5e\u6027\u521d\u59cb\u5316 \u9759\u6001\u4ee3\u7801\u5757\u4f18\u5148\u4e8e\u4e3b\u65b9\u6cd5\u5148\u6267\u884c class Person { public Person (){ System . out . println ( \"\u6784\u9020\u65b9\u6cd5\" ); } { System . out . println ( \"\u6784\u9020\u4ee3\u7801\u5757\" ); } static { System . out . println ( \"\u9759\u6001\u4ee3\u7801\u5757\" ); } public static void main ( String [] args ) { System . out . println ( \"\u4e3b\u65b9\u6cd5\u4ee3\u7801\u5757\" ); new Person (); new Person (); /** \u9759\u6001\u4ee3\u7801\u5757 \u4e3b\u65b9\u6cd5\u4ee3\u7801\u5757 \u6784\u9020\u4ee3\u7801\u5757 \u6784\u9020\u65b9\u6cd5 \u6784\u9020\u4ee3\u7801\u5757 \u6784\u9020\u65b9\u6cd5 / } } 19\u3001\u6848\u4f8b\u5206\u6790\u4e00\uff08Address\uff09 \u5b9e\u73b0\u4e00\u4e2a\u5730\u5740\u7c7b\uff0c\u5305\u542b\u56fd\u5bb6\uff0c\u7701\u4efd\uff0c\u57ce\u5e02\uff0c\u8857\u9053\uff0c\u90ae\u653f\u7f16\u7801 \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355java\u7c7b class Address { private String country ; private String province ; private String city ; private String street ; private String zipcode ; // setter public void setCountry ( String country ){ this . country = country ; } public void setProvince ( String province ){ this . province = province ; } public void setCity ( String city ){ this . city = city ; } public void setStreet ( String street ){ this . street = street ; } public void setZipcode ( String zipcode ){ this . zipcode = zipcode ; } // getter public String getCountry (){ return this . country ; } public String getProvince (){ return this . province ; } public String getCity (){ return this . city ; } public String getStreet (){ return this . street ; } public String getZipcode (){ return this . zipcode ; } // info public String getInfo (){ return \"\u56fd\u5bb6: \" + this . country + \", \u7701\u4efd: \" + this . province + \", \u57ce\u5e02: \" + this . city + \", \u8857\u9053: \" + this . street + \", \u90ae\u653f\u7f16\u7801: \" + this . zipcode ; } public Address ( String country , String province , String city , String street , String zipcode ){ this . country = country ; this . province = province ; this . city = city ; this . street = street ; this . zipcode = zipcode ; } public static void main ( String [] args ) { Address address = new Address ( \"\u4e2d\u56fd\" , \"\u5317\u4eac\" , \"\u671d\u9633\" , \"\u5927\u671b\u8def\" , \"10001\" ); System . out . println ( address . getInfo ()); // \u56fd\u5bb6: \u4e2d\u56fd, \u7701\u4efd: \u5317\u4eac, \u57ce\u5e02: \u671d\u9633, \u8857\u9053: \u5927\u671b\u8def, \u90ae\u653f\u7f16\u7801: 10001 } } 20\u3001\u6848\u4f8b\u5206\u6790\u4e8c\uff08Employee\uff09 \u5b9e\u73b0\u4e00\u4e2a\u5458\u5de5\u7c7b\uff0c\u5305\u542b\u7f16\u53f7\uff0c\u59d3\u540d\uff0c\u85aa\u6c34\uff0c\u7a0e\u7387\uff0c\u8fd8\u5305\u62ec\u85aa\u6c34\u589e\u957f\u8ba1\u7b97\u548c\u589e\u957f\u540e\u7684\u5de5\u8d44 class Employee { private long no ; private String name ; private double salary ; private double rate ; // setter getter ... public String getInfo (){ return \"\u7f16\u53f7\uff1a\" + this . no + \", \u59d3\u540d\uff1a \" + this . name + \", \u85aa\u6c34 \" + this . salary + \", \u6da8\u5e45\uff1a \" + this . rate ; } public void increaseSalary (){ this . salary = this . salary * ( 1 + this . rate ); } public Employee ( long no , String name , double salary , double rate ){ this . no = no ; this . name = name ; this . salary = salary ; this . rate = rate ; } public static void main ( String [] args ){ Employee employee = new Employee ( 1L , \"\u5f20\u4e09\" , 3000.0 , 0.3 ); System . out . println ( employee . getInfo ()); // \u7f16\u53f7\uff1a1, \u59d3\u540d\uff1a \u5f20\u4e09, \u85aa\u6c34 3000.0, \u6da8\u5e45\uff1a 0.3 employee . increaseSalary (); System . out . println ( employee . getInfo ()); // \u7f16\u53f7\uff1a1, \u59d3\u540d\uff1a \u5f20\u4e09, \u85aa\u6c34 3900.0, \u6da8\u5e45\uff1a 0.3 } } 21\u3001\u6848\u4f8b\u5206\u6790\u4e09\uff08Dog\uff09 \u521b\u5efaDog\u7c7b\uff0c\u6709\u540d\u5b57\uff0c\u989c\u8272\uff0c\u5e74\u9f84\uff0c\u5b9a\u4e49\u6784\u9020\u65b9\u6cd5\u521d\u59cb\u5316\u5c5e\u6027 class Dog { private String name ; private String color ; private int age ; // getter setter public Dog ( String name , String color , int age ){ this . name = name ; this . color = color ; this . age = age ; } public static void main ( String [] args ) { Dog dog = new Dog ( \"\u5c0f\u9ed1\" , \"\u9ed1\u8272\" , 2 ); } } 22\u3001\u6848\u4f8b\u5206\u6790\u56db\uff08Account\uff09 \u5b9a\u4e49\u94f6\u884c\u8d26\u6237\u7c7b\uff0c\u5305\u62ec 1\u3001\u6570\u636e\uff1a\u8d26\u6237\u540d\u79f0\uff0c\u8d26\u6237\u4f59\u989d 2\u3001\u65b9\u6cd5\uff1a\u5f00\u6237\uff08\u8bbe\u7f6e\u8d26\u53f7\uff0c\u4f59\u989d\uff09\uff0c\u5229\u7528\u6784\u9020\u65b9\u6cd5\u5b8c\u6210 3\u3001\u67e5\u8be2\u4f59\u989d class Account { private String name ; private double balance ; public Account ( String name ){ this ( name , 0.0 ); } public Account ( String name , double balance ){ this . name = name ;; this . balance = balance ;; } // \u67e5\u8be2\u4f59\u989d public double getBalance (){ return this . balance ; } public static void main ( String [] args ) { Account account = new Account ( \"\u5f20\u4e09\" , 2000.0 ); System . out . println ( account . getBalance ()); // 2000.0 } } 23\u3001\u6848\u4f8b\u5206\u6790\u4e94\uff08User\uff09 \u521b\u5efa\u7528\u6237\u7c7b 1\u3001\u7528\u6237\u540d\uff0c\u8bb0\u5f55\u7528\u6237\u4e2a\u6570 2\u3001\u83b7\u53d6\u7528\u6237\u6570 class User { private String name ; private static int count = 0 ; public User ( String name ){ this . name = name ; count ++; } public static int getCount (){ return count ; } public static void main ( String [] args ) { User user1 = new User ( \"\u5c0f\u660e\" ); User user2 = new User ( \"\u5c0f\u7ea2\" ); User user3 = new User ( \"\u5c0f\u82b1\" ); System . out . println ( User . getCount ()); // 3 } } 24\u3001\u6848\u4f8b\u5206\u6790\u516d\uff08Book\uff09 \u521b\u5efa\u56fe\u4e66\u7c7b \u6570\u636e\uff1a\u4e66\u540d\uff0c\u4ef7\u683c\uff0c\u7f16\u53f7\uff08\u5229\u7528\u9759\u6001\u6570\u636e\u5b9e\u73b0\u81ea\u52a8\u7f16\u53f7\uff09 \u65b9\u6cd5\uff1a\u7edf\u8ba1\u603b\u6570 class Book { private int uid ; private String name ; private double price ; private static int count = 0 ; public Book ( String name , Double price ){ count ++; this . uid = count ; this . name = name ; this . price = price ; } public String getInfo (){ return \"<\" + this . uid + \"> <<\" + this . name + \">> \" + this . price ; } public static int getCount (){ return count ; } public static void main ( String [] args ) { Book book1 = new Book ( \"\u4eca\u65e5\u5934\u6761\" , 12.0 ); Book book2 = new Book ( \"\u767e\u5ea6\" , 14.0 ); Book book3 = new Book ( \"\u817e\u8baf\" , 11.0 ); System . out . println ( Book . getCount ()); // 3 System . out . println ( book3 . getInfo ()); // <3> <<\u817e\u8baf>> 11.0 } }","title":"2 Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b \u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#2","text":"Java\u8bed\u8a00\u6700\u5927\u7279\u70b9\uff1a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bbe\u8ba1 \u9762\u5411\u8fc7\u7a0b\uff1aC\u8bed\u8a00\uff0c\u9762\u5bf9\u4e00\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848 \u9762\u5411\u5bf9\u8c61\uff1aC++/Java\uff0c\u6a21\u5757\u5316\u8bbe\u8ba1\uff0c\u8fdb\u884c\u91cd\u7528\u914d\u7f6e\uff0c\u8003\u8651\u6807\u51c6 1\u3001\u9762\u5411\u5bf9\u8c61\u4e09\u4e2a\u4e3b\u8981\u7279\u5f81\uff1a \u5c01\u88c5\u6027\uff1a\u5185\u90e8\u64cd\u4f5c\u5bf9\u5916\u90e8\u4e0d\u53ef\u89c1 \u7ee7\u627f\u6027\uff1a\u5df2\u6709\u7ed3\u6784\u7684\u57fa\u7840\u4e0a\u7ee7\u7eed\u8fdb\u884c\u529f\u80fd\u6269\u5145 \u591a\u6001\u6027\uff1a\u662f\u5728\u7ee7\u627f\u6027\u7684\u57fa\u7840\u4e0a\u6269\u5145\u800c\u6765\u7684\u6982\u5ff5\uff0c\u6307\u7c7b\u578b\u7684\u8f6c\u6362\u5904\u7406 2\u3001\u9762\u5411\u5bf9\u8c61\u5f00\u53d1\u4e09\u4e2a\u6b65\u9aa4\uff1a OOA\uff1a\u9762\u5411\u5bf9\u8c61\u5206\u6790 OOD\uff1a\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1 OOP\uff1a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b","title":"2\u3001\u9762\u5411\u5bf9\u8c61\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#3","text":"\u7c7b\uff1a\u5bf9\u67d0\u4e00\u7c7b\u4e8b\u7269\u5171\u6027\u7684\u62bd\u8c61 \u5bf9\u8c61\uff1a\u63cf\u8ff0\u4e00\u4e2a\u5177\u4f53\u7684\u4ea7\u7269 \u7c7b\u662f\u4e00\u4e2a\u6a21\u578b\uff0c\u5bf9\u8c61\u662f\u7c7b\u53ef\u4ee5\u4f7f\u7528\u7684\u5b9e\u4f8b \u5148\u6709\u7c7b\u518d\u6709\u5bf9\u8c61 \u7c7b\u7684\u7ec4\u6210\uff1a \u6210\u5458\u5c5e\u6027Field \u7b80\u79f0\u5c5e\u6027 \u64cd\u4f5c\u65b9\u6cd5Method \u5bf9\u8c61\u7684\u884c\u4e3a","title":"3\u3001\u7c7b\u4e0e\u5bf9\u8c61"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#4","text":"Java\u4e2d\uff0c\u7c7b\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u7ed3\u6784\u4f53 \u5c5e\u6027\u5c31\u662f\u53d8\u91cf \u65b9\u6cd5\u5c31\u662f\u53ef\u4ee5\u91cd\u590d\u6267\u884c\u7684\u4ee3\u7801 // \u5b9a\u4e49\u7c7b class Person { // \u5b9a\u4e49\u5c5e\u6027 String name ; // \u5f15\u7528\u6570\u636e\u7c7b\u578b \u9ed8\u8ba4\u503c null int age ; // \u57fa\u7840\u6570\u636e\u7c7b\u578b \u9ed8\u8ba4\u503c 0 // \u5b9a\u4e49\u65b9\u6cd5 public void tell (){ System . out . println ( \"\u59d3\u540d\uff1a\" + this . name + \" \u5e74\u9f84\uff1a\" + this . age ); } public static void main ( String [] args ) { Person person = new Person (); person . name = \"\u5f20\u4e09\" ; person . age = 18 ; person . tell (); // \u59d3\u540d\uff1a\u5f20\u4e09 \u5e74\u9f84\uff1a18 } } \u751f\u4ea7\u5bf9\u8c61\u4e24\u79cd\u65b9\u5f0f\uff1a 1\u3001\u58f0\u660e\u5e76\u5b9e\u4f8b\u5316\u5bf9\u8c61 \u7c7b\u540d\u79f0 \u5bf9\u8c61\u540d\u79f0 = new \u7c7b\u540d\u79f0(); 2\u3001\u5206\u6b65\u5b8c\u6210 \uff081\uff09\u58f0\u660e\u5bf9\u8c61\uff1a\u7c7b\u540d\u79f0 \u5bf9\u8c61\u540d\u79f0 = null; \uff082\uff09\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff1a\u5bf9\u8c61\u540d\u79f0 = new \u7c7b\u540d\u79f0(); \u5b9e\u4f8b\u5316\u5bf9\u8c61\u8c03\u7528\u64cd\u4f5c\uff1a \u8c03\u7528\u5c5e\u6027\uff1a\u5b9e\u4f8b\u5316\u5bf9\u8c61.\u6210\u5458\u5c5e\u6027\uff1b \u8c03\u7528\u65b9\u6cd5\uff1a\u5b9e\u4f8b\u5316\u5bf9\u8c61.\u65b9\u6cd5\u540d\u79f0();","title":"4\u3001\u7c7b\u4e0e\u5bf9\u8c61\u7684\u5b9a\u4e49\u53ca\u4f7f\u7528"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#5","text":"\u6700\u5e38\u7528\u76842\u5757\u5185\u5b58\u7a7a\u95f4 \u5806\u5185\u5b58\uff1a\u4fdd\u5b58\u5bf9\u8c61\u5177\u4f53\u4fe1\u606f new\u5f00\u8f9f\u5806\u5185\u5b58\u7a7a\u95f4 \u6808\u5185\u5b58\uff1a\u4fdd\u5b58\u4e00\u5757\u5806\u5185\u5b58\u5730\u5740 /** \u6808\u5185\u5b58 \u5806\u5185\u5b58 \u5730\u5740Ox0001 -> \u5bf9\u8c61\u5185\u5bb9 */ // \u65b9\u5f0f\u4e00 Person person = new Person (); // \u65b9\u5f0f\u4e8c Person person = null ; person = new Person (); \u6240\u6709\u7684\u5bf9\u8c61\u5728\u8c03\u7528\u5c5e\u6027\u6216\u65b9\u6cd5\u4e4b\u524d\uff0c\u5fc5\u987b\u5b9e\u4f8b\u5316","title":"5\u3001\u5185\u5b58\u5bf9\u8c61\u5206\u6790"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#6","text":"\u540c\u4e00\u5757\u5806\u5185\u5b58\u53ef\u4ee5\u88ab\u4e0d\u540c\u7684\u6808\u5185\u5b58\u6240\u6307\u5411\uff0c\u4e5f\u53ef\u4ee5\u66f4\u6362\u6307\u5411 \u4fee\u6539person2, person1\u4e5f\u4f1a\u88ab\u4fee\u6539 Person person1 = new Person (); person1 . name = \"\u5f20\u4e09\" ; person1 . age = 19 ; Person person2 = person1 ; person2 . tell (); // \u59d3\u540d\uff1a\u5f20\u4e09 \u5e74\u9f84\uff1a19 \u5f15\u7528\u4f20\u9012\u53ef\u4ee5\u53d1\u751f\u5728\u65b9\u6cd5\u8c03\u7528 public static void main ( String [] args ) { Person person = new Person (); person . name = \"\u5f20\u4e09\" ; person . age = 18 ; change ( person ); // \u76f8\u5f53\u4e8e: Person temp = person; person . tell (); // \u59d3\u540d\uff1a\u674e\u56db \u5e74\u9f84\uff1a18 } public static void change ( Person temp ){ temp . name = \"\u674e\u56db\" ; // \u65b9\u6cd5\u7ed3\u675f\u540e\u65ad\u5f00\u5f15\u7528 }","title":"6\u3001\u5bf9\u8c61\u5f15\u7528\u5206\u6790"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#7","text":"\u5783\u573e\u7a7a\u95f4\uff1a\u6ca1\u6709\u4efb\u4f55\u6808\u5185\u5b58\u6307\u5411\u7684\u5806\u5185\u5b58\u7a7a\u95f4 \u5783\u573e\u4f1a\u88abGC\uff08Garbage Collector\uff09\u5783\u573e\u6536\u96c6\u5668\u5b9a\u671f\u56de\u6536 \u5783\u573e\u8fc7\u591a\u4f1a\u5f71\u54cdGC\u6027\u80fd \u4e00\u4e2a\u6808\u5185\u5b58\u53ea\u80fd\u4fdd\u5b58\u6709\u4e00\u4e2a\u5806\u5185\u5b58\u7684\u5730\u5740\u6570\u636e Person person1 = new Person (); // Ox0001 Person person2 = new Person (); // Ox0002 person2 = person1 ; // \u6b64\u65f6 person2 \u6307\u5411\u7684 Ox0002 \u5bf9\u8c61\u6210\u4e3a\u4e86\u5783\u573e","title":"7\u3001\u5f15\u7528\u4e8e\u5783\u573e\u4ea7\u751f\u5206\u6790"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#8","text":"\u5c01\u88c5\uff1a\u5bf9\u6570\u636e\u8fdb\u884c\u4fdd\u62a4 private\u5173\u952e\u5b57\u5bf9\u5916\u4e0d\u53ef\u89c1 \u4f7f\u7528setter\u3001getter\u8bbe\u7f6e\u6216\u83b7\u53d6\u5c5e\u6027 \u7c7b\u4e2d\u7684\u6240\u6709\u5c5e\u6027\u90fd\u5fc5\u987b\u4f7f\u7528private\u5c01\u88c5\uff0c\u9700\u8981\u63d0\u4f9bsetter\u3001getter\u65b9\u6cd5 class Person { // \u79c1\u6709\u5316\u5c5e\u6027 private String name ; // \u5bf9\u5916\u63d0\u4f9bgeter\uff0c setter\u65b9\u6cd5 public void setName ( String n ){ name = n ; } public String getName (){ return name ; } public static void main ( String [] args ) { Person person = new Person (); person . setName ( \"\u5f20\u4e09\" ); System . out . println ( person . getName ()); // \u5f20\u4e09 } }","title":"8\u3001\u6210\u5458\u5c5e\u6027\u5c01\u88c5"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#9","text":"\u73b0\u6709\u7a0b\u5e8f\u4f7f\u7528\u7c7b\uff0c\u7ecf\u8fc7\u4e862\u4e2a\u6b65\u9aa4\uff1a 1\u3001\u58f0\u660e\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u53ea\u80fd\u4f7f\u7528\u9ed8\u8ba4\u503c 2\u3001\u901a\u8fc7 setter \u65b9\u6cd5\u8bbe\u7f6e\u5c5e\u6027 \u6784\u9020\u65b9\u6cd5: \u5b9e\u4f8b\u5316\u5bf9\u8c61\u65f6\u8fdb\u884c\u6570\u636e\u521d\u59cb\u5316 1\u3001\u6784\u9020\u65b9\u6cd5\u540d\u4e0e\u7c7b\u540d\u5fc5\u987b\u4e00\u81f4 2\u3001\u6784\u9020\u65b9\u6cd5\u65e0\u8fd4\u56de\u503c 3\u3001\u6784\u9020\u65b9\u6cd5\u5728new\u5b9e\u4f8b\u5316\u5bf9\u8c61\u65f6\u81ea\u52a8\u8c03\u7528 class Person { // \u79c1\u6709\u5316\u5c5e\u6027 private String name ; // \u6709\u53c2\u6784\u9020\u65b9\u6cd5 public Person ( String n ){ name = n ; } public static void main ( String [] args ) { Person person = new Person ( \"\u5f20\u4e09\" ); System . out . println ( person . getName ()); // \u5f20\u4e09 } } \uff081\uff09Person \u5b9a\u4e49\u5bf9\u8c61\u6240\u5c5e\u7c7b\u578b\uff0c\u7c7b\u578b\u51b3\u5b9a\u53ef\u4ee5\u8c03\u7528\u7684\u65b9\u6cd5 \uff082\uff09person \u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u540d\u79f0 \uff083\uff09new \u5f00\u8f9f\u65b0\u7684\u5806\u5185\u5b58\u7a7a\u95f4 \uff084\uff09Person(\"\u5f20\u4e09\") \u8c03\u7528\u6784\u9020\u51fd\u6570\uff08\u6709\u53c2\uff0c\u65e0\u53c2\uff09 \u6240\u6709\u7684\u7c7b\u90fd\u4f1a\u63d0\u4f9b\u6709\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u7a0b\u5e8f\u7f16\u8bd1\u65f6\u81ea\u52a8\u521b\u5efa\uff0c\u5982\u679c\u660e\u786e\u6784\u9020\u65b9\u6cd5\u5219\u4e0d\u81ea\u52a8\u521b\u5efa \u7ed3\u8bba\uff1a\u4e00\u4e2a\u7c7b\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5 \u95ee\u9898\uff1a\u6784\u9020\u65b9\u6cd5\u6ca1\u6709\u8fd4\u56de\u503c\uff1f\u4e0d\u4f7f\u7528void \u6784\u9020\u65b9\u6cd5\u4e0e\u666e\u901a\u65b9\u6cd5\u533a\u522b\uff1a \u6784\u9020\u65b9\u6cd5\u5728\u7c7b\u5bf9\u8c61\u5b9e\u4f8b\u5316\u65f6\u8c03\u7528 \u666e\u901a\u65b9\u6cd5\u5728\u7c7b\u5bf9\u8c61\u5b9e\u4f8b\u5316\u4e4b\u540e\u8c03\u7528 \u6784\u9020\u65b9\u6cd5\u91cd\u8f7d \u53ea\u7528\u8003\u8651\u65b9\u6cd5\u7b7e\u540d\uff08\u53c2\u6570\u4e2a\u6570\uff0c\u7c7b\u578b\uff0c\u987a\u5e8f\uff09 \u6309\u7167\u53c2\u6570\u6570\u91cf\u987a\u5e8f\u6392\u5217\u6784\u9020\u65b9\u6cd5 class Person { // \u79c1\u6709\u5316\u5c5e\u6027 private String name ; // \u65e0\u53c2\u6784\u9020\u65b9\u6cd5 public Person (){ } // \u6709\u53c2\u6784\u9020\u65b9\u6cd5 public Person ( String n ){ name = n ; } public String getName (){ return name ; } public static void main ( String [] args ) { Person person = new Person ( \"\u5f20\u4e09\" ); System . out . println ( person . getName ()); // \u5f20\u4e09 } } \u533f\u540d\u5bf9\u8c61 new Person ( \"\u5f20\u4e09\" ). getName ()); // \u5f20\u4e09 \u4f7f\u7528\u4e00\u6b21\u540e\u5c31\u4f1a\u88abGC\u56de\u6536\u91ca\u653e \u65b9\u6cd5\u53ef\u4ee5\u4f20\u9012\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b","title":"9\u3001\u6784\u9020\u65b9\u6cd5\u4e0e\u533f\u540d\u5bf9\u8c61"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#10this","text":"\u4e09\u7c7b\u63cf\u8ff0 1\u3001\u5f53\u524d\u7c7b\u4e2d\u7684\u5c5e\u6027 this.\u5c5e\u6027 2\u3001\u5f53\u524d\u7c7b\u4e2d\u7684\u65b9\u6cd5\uff08\u6784\u9020\u65b9\u6cd5\uff1athis()\u3001\u666e\u901a\u65b9\u6cd5\uff1athis.\u65b9\u6cd5()\uff09 3\u3001\u63cf\u8ff0\u5f53\u524d\u5bf9\u8c61 \u8bbf\u95ee\u672c\u7c7b\u4e2d\u7684\u5c5e\u6027\u4e00\u5b9a\u8981\u52a0this public Person ( String name , int age ){ this . name = name ; this . age = age ; }","title":"10\u3001this\u8c03\u7528\u672c\u7c7b\u5c5e\u6027"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#11this","text":"1\u3001\u8c03\u7528\u666e\u901a\u65b9\u6cd5 setName ( name ) ; // \u6216\u8005 this . setName ( name ) ; \u597d\u7684\u4ee3\u7801\uff1a \u4ee3\u7801\u7ed3\u6784\u53ef\u4ee5\u91cd\u7528 \u6ca1\u6709\u91cd\u590d\u4ee3\u7801 2\u3001\u8c03\u7528\u6784\u9020\u65b9\u6cd5 this() \u5fc5\u987b\u5728\u5b9e\u4f8b\u5316\u65b0\u5bf9\u8c61\u7684\u65f6\u5019\u8c03\u7528 \u53ea\u5141\u8bb8\u653e\u5728\u6784\u9020\u51fd\u6570\u9996\u884c \u76f8\u4e92\u8c03\u7528\u5fc5\u987b\u6709\u51fa\u53e3 // \u65e0\u53c2\u6784\u9020\u65b9\u6cd5 public Person (){ this ( \"\u5f20\u4e09\" ); } // \u6709\u53c2\u6784\u9020\u65b9\u6cd5 public Person ( String name ){ this . name = name ; } \u6784\u9020\u65b9\u6cd5\u8c03\u7528\u5b9e\u73b0\u9ed8\u8ba4\u53c2\u6570 class Person { // \u79c1\u6709\u5316\u5c5e\u6027 private String name ; private int age ; // \u65e0\u53c2\u6784\u9020\u65b9\u6cd5 public Person (){ this ( \"\u5f20\u4e09\" ); } // \u4e00\u53c2\u6784\u9020\u65b9\u6cd5 public Person ( String name ){ this ( name , 21 ); } // \u4e24\u53c2\u6784\u9020\u65b9\u6cd5 public Person ( String name , int age ){ this . name = name ; this . age = age ; } public void getInfo (){ System . out . println ( \"name: \" + this . name + \" age: \" + this . age ); } public static void main ( String [] args ) { new Person (). getInfo (); new Person ( \"\u674e\u56db\" ). getInfo (); new Person ( \"\u738b\u4e94\" , 22 ). getInfo (); /* name: \u5f20\u4e09 age: 21 name: \u674e\u56db age: 21 name: \u738b\u4e94 age: 22 */ } }","title":"11\u3001this\u8c03\u7528\u672c\u7c7b\u65b9\u6cd5"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#12java","text":"\u7b80\u5355Java\u7c7b\uff1a \u53ef\u4ee5\u63cf\u8ff0\u67d0\u4e00\u7c7b\u4fe1\u606f\u7684\u7a0b\u5e8f\u7c7b\uff0c\u6ca1\u6709\u7279\u522b\u590d\u6742\u7684\u64cd\u4f5c\uff0c\u53ea\u4f5c\u4e3a\u4e00\u79cd\u4fe1\u606f\u5b58\u50a8\u7684\u5a92\u4ecb \u6838\u5fc3\u7ed3\u6784 1\u3001\u7c7b\u540d\u6709\u610f\u4e49\uff0c\u660e\u786e\u63cf\u8ff0\u67d0\u4e00\u7c7b\u4e8b\u7269 2\u3001\u5c5e\u6027\u5fc5\u987b\u4f7f\u7528private\u5c01\u88c5\uff0c\u63d0\u4f9bsetter\u3001getter 3\u3001\u53ef\u4ee5\u63d0\u4f9b\u591a\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u5fc5\u987b\u4fdd\u7559\u65e0\u53c2\u6784\u9020\u65b9\u6cd5 4\u3001\u4e0d\u5141\u8bb8\u6709\u4efb\u4f55\u8f93\u51fa\uff0c\u5185\u6709\u83b7\u53d6\u5fc5\u987b\u8fd4\u56de \u975e\u5fc5\u987b\uff1a 1\u3001\u53ef\u4ee5\u63d0\u4f9b\u83b7\u53d6\u5bf9\u8c61\u8be6\u7ec6\u4fe1\u606f\u65b9\u6cd5\uff0cgetInfo() \u6d89\u53ca\u6982\u5ff5 \u6570\u636e\u7c7b\u578b\u3001\u7c7b\u7684\u5b9a\u4e49\u3001private\u5c01\u88c5\u3001\u65b9\u6cd5\u5b9a\u4e49\u3001\u5bf9\u8c61\u5b9e\u4f8b\u5316 class Person { // \u79c1\u6709\u5316\u5c5e\u6027 private String name ; private int age ; // \u65e0\u53c2\u6784\u9020\u65b9\u6cd5 public Person (){ this ( \"\u5f20\u4e09\" , 23 ); } // \u4e24\u53c2\u6784\u9020\u65b9\u6cd5 public Person ( String name , int age ){ this . name = name ; this . age = age ; } // setter getter public void setName ( String name ){ this . name = name ; } public String getName (){ return this . name ; } public void setAge ( int age ){ this . age = age ; } public int getAge (){ return this . age ; } public String getInfo (){ return \"name: \" + this . name + \" age: \" + this . age ; } public static void main ( String [] args ) { System . out . println ( new Person ( \"\u738b\u4e94\" , 22 ). getInfo ()); // name: \u738b\u4e94 age: 22 } }","title":"12\u3001\u7efc\u5408\u5b9e\u6218\uff1a\u7b80\u5355Java\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#13static","text":"static\u4fee\u9970\u7684\u5c5e\u6027\u4e3a\u516c\u5171\u5c5e\u6027\uff0c\u4e00\u4e2a\u5bf9\u8c61\u4fee\u6539\uff0c\u6240\u6709\u5bf9\u8c61\u90fd\u4f1a\u88ab\u4fee\u6539 \u5e94\u8be5\u7531\u7c7b\u6765\u8fdb\u884c\u8bbf\u95ee\uff0c\u800c\u4e0d\u662f\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7531\u7c7b\u540d\u6765\u8c03\u7528 static \u5c5e\u6027\u4e0d\u53d7\u7c7b\u5b9e\u4f8b\u5316\u9650\u5236\uff0c\u4e0d\u5b9e\u4f8b\u5316\u4e5f\u53ef\u4ee5\u8c03\u7528 \u8fdb\u884c\u7c7b\u8bbe\u8ba1\u65f6\u9996\u9009\u975estatic\u5c5e\u6027\uff0c\u6d89\u53ca\u516c\u5171\u4fe1\u606f\u624d\u4f7f\u7528static \u5168\u5c40\u6570\u636e\u533a \u6808\u5185\u5b58 \u5806\u5185\u5b58 static \u6570\u636e person1 -> { name , age } person1 -> { name , age } class Person { String name ; static String country ; public Person ( String name ){ this . name = name ; } public static void main ( String [] args ) { Person person1 = new Person ( \"\u5f20\u4e09\" ); Person person2 = new Person ( \"\u674e\u56db\" ); Person . country = \"\u4e2d\u56fd\" ; System . out . println ( person1 . country ); System . out . println ( person2 . country ); // \u4e2d\u56fd \u4e2d\u56fd } }","title":"13\u3001\u58f0\u660estatic\u5c5e\u6027"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#14static","text":"static\u65b9\u6cd5\u53ea\u5141\u8bb8\u8c03\u7528static\u5c5e\u6027\u6216static\u65b9\u6cd5 static\u5c5e\u6027\u548c\u65b9\u6cd5\u90fd\u53ef\u4ee5\u5728\u6ca1\u6709\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u524d\u63d0\u4e0b\u4f7f\u7528 \u5e94\u7528\u573a\u666f\uff1a \u56de\u907f\u5b9e\u4f8b\u5316\u5bf9\u8c61\u8c03\u7528\u5e76\u4e14\u63cf\u8ff0\u516c\u5171\u5c5e\u6027\u7684\u60c5\u51b5","title":"14\u3001\u58f0\u660estatic\u65b9\u6cd5"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#15static","text":"\u5b9e\u73b0\u5b9e\u4f8b\u5316\u5bf9\u8c61\u4e2a\u6570\u7edf\u8ba1 class Person { static int count ; public Person (){ count ++; System . out . println ( \"\u7b2c \" + count + \" \u4e2a\u5b9e\u4f8b\" ); } public static void main ( String [] args ) { new Person (); new Person (); new Person (); /* \u7b2c 1 \u4e2a\u5b9e\u4f8b \u7b2c 2 \u4e2a\u5b9e\u4f8b \u7b2c 3 \u4e2a\u5b9e\u4f8b */ } }","title":"15\u3001static\u5e94\u7528\u6848\u4f8b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#16","text":"\u4ee3\u7801\u5757\uff1a\u7531\"{}\"\u5b9a\u4e49\u7684\u7ed3\u6784 \u5206\u7c7b\uff1a 1\u3001\u666e\u901a\u4ee3\u7801\u5757 2\u3001\u6784\u9020\u4ee3\u7801\u5757 3\u3001\u9759\u6001\u4ee3\u7801\u5757 4\u3001\u540c\u6b65\u4ee3\u7801\u5757\uff08\u591a\u7ebf\u7a0b\uff09 \u666e\u901a\u4ee3\u7801\u5757 \u5b9a\u4e49\u5728\u65b9\u6cd5\u4e2d\u7684\u4ee3\u7801\u5757 // \u666e\u901a\u4ee3\u7801\u5757 { int age = 12 ; System . out . println ( age ); // 12 } int age = 15 ; System . out . println ( age ); // 15","title":"16\u3001\u666e\u901a\u4ee3\u7801\u5757"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#17","text":"\u6784\u9020\u5757\u4f18\u5148\u4e8e\u6784\u9020\u65b9\u6cd5\u6267\u884c\uff0c\u6bcf\u6b21\u5b9e\u4f8b\u5316\u90fd\u4f1a\u8c03\u7528\u6784\u9020\u4ee3\u7801\u5757 class Person { public Person (){ System . out . println ( \"\u6784\u9020\u65b9\u6cd5\" ); } { System . out . println ( \"\u6784\u9020\u4ee3\u7801\u5757\" ); } public static void main ( String [] args ) { new Person (); new Person (); /** \u6784\u9020\u4ee3\u7801\u5757 \u6784\u9020\u65b9\u6cd5 \u6784\u9020\u4ee3\u7801\u5757 \u6784\u9020\u65b9\u6cd5 */ } }","title":"17\u3001\u6784\u9020\u4ee3\u7801\u5757"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#18","text":"static\u5173\u952e\u5b57\u5b9a\u4e49\u7684\u4ee3\u7801\u5757 \u9759\u6001\u4ee3\u7801\u5757\u4f18\u5148\u4e8e\u6784\u9020\u51fd\u6570\u6267\u884c\uff0c\u4e0d\u7ba1\u5b9e\u4f8b\u5316\u591a\u5c11\u6b21\u53ea\u4f1a\u6267\u884c\u4e00\u6b21 \u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u9759\u6001\u5c5e\u6027\u521d\u59cb\u5316 \u9759\u6001\u4ee3\u7801\u5757\u4f18\u5148\u4e8e\u4e3b\u65b9\u6cd5\u5148\u6267\u884c class Person { public Person (){ System . out . println ( \"\u6784\u9020\u65b9\u6cd5\" ); } { System . out . println ( \"\u6784\u9020\u4ee3\u7801\u5757\" ); } static { System . out . println ( \"\u9759\u6001\u4ee3\u7801\u5757\" ); } public static void main ( String [] args ) { System . out . println ( \"\u4e3b\u65b9\u6cd5\u4ee3\u7801\u5757\" ); new Person (); new Person (); /** \u9759\u6001\u4ee3\u7801\u5757 \u4e3b\u65b9\u6cd5\u4ee3\u7801\u5757 \u6784\u9020\u4ee3\u7801\u5757 \u6784\u9020\u65b9\u6cd5 \u6784\u9020\u4ee3\u7801\u5757 \u6784\u9020\u65b9\u6cd5 / } }","title":"18\u3001\u9759\u6001\u4ee3\u7801\u5757"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#19address","text":"\u5b9e\u73b0\u4e00\u4e2a\u5730\u5740\u7c7b\uff0c\u5305\u542b\u56fd\u5bb6\uff0c\u7701\u4efd\uff0c\u57ce\u5e02\uff0c\u8857\u9053\uff0c\u90ae\u653f\u7f16\u7801 \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355java\u7c7b class Address { private String country ; private String province ; private String city ; private String street ; private String zipcode ; // setter public void setCountry ( String country ){ this . country = country ; } public void setProvince ( String province ){ this . province = province ; } public void setCity ( String city ){ this . city = city ; } public void setStreet ( String street ){ this . street = street ; } public void setZipcode ( String zipcode ){ this . zipcode = zipcode ; } // getter public String getCountry (){ return this . country ; } public String getProvince (){ return this . province ; } public String getCity (){ return this . city ; } public String getStreet (){ return this . street ; } public String getZipcode (){ return this . zipcode ; } // info public String getInfo (){ return \"\u56fd\u5bb6: \" + this . country + \", \u7701\u4efd: \" + this . province + \", \u57ce\u5e02: \" + this . city + \", \u8857\u9053: \" + this . street + \", \u90ae\u653f\u7f16\u7801: \" + this . zipcode ; } public Address ( String country , String province , String city , String street , String zipcode ){ this . country = country ; this . province = province ; this . city = city ; this . street = street ; this . zipcode = zipcode ; } public static void main ( String [] args ) { Address address = new Address ( \"\u4e2d\u56fd\" , \"\u5317\u4eac\" , \"\u671d\u9633\" , \"\u5927\u671b\u8def\" , \"10001\" ); System . out . println ( address . getInfo ()); // \u56fd\u5bb6: \u4e2d\u56fd, \u7701\u4efd: \u5317\u4eac, \u57ce\u5e02: \u671d\u9633, \u8857\u9053: \u5927\u671b\u8def, \u90ae\u653f\u7f16\u7801: 10001 } }","title":"19\u3001\u6848\u4f8b\u5206\u6790\u4e00\uff08Address\uff09"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#20employee","text":"\u5b9e\u73b0\u4e00\u4e2a\u5458\u5de5\u7c7b\uff0c\u5305\u542b\u7f16\u53f7\uff0c\u59d3\u540d\uff0c\u85aa\u6c34\uff0c\u7a0e\u7387\uff0c\u8fd8\u5305\u62ec\u85aa\u6c34\u589e\u957f\u8ba1\u7b97\u548c\u589e\u957f\u540e\u7684\u5de5\u8d44 class Employee { private long no ; private String name ; private double salary ; private double rate ; // setter getter ... public String getInfo (){ return \"\u7f16\u53f7\uff1a\" + this . no + \", \u59d3\u540d\uff1a \" + this . name + \", \u85aa\u6c34 \" + this . salary + \", \u6da8\u5e45\uff1a \" + this . rate ; } public void increaseSalary (){ this . salary = this . salary * ( 1 + this . rate ); } public Employee ( long no , String name , double salary , double rate ){ this . no = no ; this . name = name ; this . salary = salary ; this . rate = rate ; } public static void main ( String [] args ){ Employee employee = new Employee ( 1L , \"\u5f20\u4e09\" , 3000.0 , 0.3 ); System . out . println ( employee . getInfo ()); // \u7f16\u53f7\uff1a1, \u59d3\u540d\uff1a \u5f20\u4e09, \u85aa\u6c34 3000.0, \u6da8\u5e45\uff1a 0.3 employee . increaseSalary (); System . out . println ( employee . getInfo ()); // \u7f16\u53f7\uff1a1, \u59d3\u540d\uff1a \u5f20\u4e09, \u85aa\u6c34 3900.0, \u6da8\u5e45\uff1a 0.3 } }","title":"20\u3001\u6848\u4f8b\u5206\u6790\u4e8c\uff08Employee\uff09"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#21dog","text":"\u521b\u5efaDog\u7c7b\uff0c\u6709\u540d\u5b57\uff0c\u989c\u8272\uff0c\u5e74\u9f84\uff0c\u5b9a\u4e49\u6784\u9020\u65b9\u6cd5\u521d\u59cb\u5316\u5c5e\u6027 class Dog { private String name ; private String color ; private int age ; // getter setter public Dog ( String name , String color , int age ){ this . name = name ; this . color = color ; this . age = age ; } public static void main ( String [] args ) { Dog dog = new Dog ( \"\u5c0f\u9ed1\" , \"\u9ed1\u8272\" , 2 ); } }","title":"21\u3001\u6848\u4f8b\u5206\u6790\u4e09\uff08Dog\uff09"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#22account","text":"\u5b9a\u4e49\u94f6\u884c\u8d26\u6237\u7c7b\uff0c\u5305\u62ec 1\u3001\u6570\u636e\uff1a\u8d26\u6237\u540d\u79f0\uff0c\u8d26\u6237\u4f59\u989d 2\u3001\u65b9\u6cd5\uff1a\u5f00\u6237\uff08\u8bbe\u7f6e\u8d26\u53f7\uff0c\u4f59\u989d\uff09\uff0c\u5229\u7528\u6784\u9020\u65b9\u6cd5\u5b8c\u6210 3\u3001\u67e5\u8be2\u4f59\u989d class Account { private String name ; private double balance ; public Account ( String name ){ this ( name , 0.0 ); } public Account ( String name , double balance ){ this . name = name ;; this . balance = balance ;; } // \u67e5\u8be2\u4f59\u989d public double getBalance (){ return this . balance ; } public static void main ( String [] args ) { Account account = new Account ( \"\u5f20\u4e09\" , 2000.0 ); System . out . println ( account . getBalance ()); // 2000.0 } }","title":"22\u3001\u6848\u4f8b\u5206\u6790\u56db\uff08Account\uff09"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#23user","text":"\u521b\u5efa\u7528\u6237\u7c7b 1\u3001\u7528\u6237\u540d\uff0c\u8bb0\u5f55\u7528\u6237\u4e2a\u6570 2\u3001\u83b7\u53d6\u7528\u6237\u6570 class User { private String name ; private static int count = 0 ; public User ( String name ){ this . name = name ; count ++; } public static int getCount (){ return count ; } public static void main ( String [] args ) { User user1 = new User ( \"\u5c0f\u660e\" ); User user2 = new User ( \"\u5c0f\u7ea2\" ); User user3 = new User ( \"\u5c0f\u82b1\" ); System . out . println ( User . getCount ()); // 3 } }","title":"23\u3001\u6848\u4f8b\u5206\u6790\u4e94\uff08User\uff09"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7c7b/#24book","text":"\u521b\u5efa\u56fe\u4e66\u7c7b \u6570\u636e\uff1a\u4e66\u540d\uff0c\u4ef7\u683c\uff0c\u7f16\u53f7\uff08\u5229\u7528\u9759\u6001\u6570\u636e\u5b9e\u73b0\u81ea\u52a8\u7f16\u53f7\uff09 \u65b9\u6cd5\uff1a\u7edf\u8ba1\u603b\u6570 class Book { private int uid ; private String name ; private double price ; private static int count = 0 ; public Book ( String name , Double price ){ count ++; this . uid = count ; this . name = name ; this . price = price ; } public String getInfo (){ return \"<\" + this . uid + \"> <<\" + this . name + \">> \" + this . price ; } public static int getCount (){ return count ; } public static void main ( String [] args ) { Book book1 = new Book ( \"\u4eca\u65e5\u5934\u6761\" , 12.0 ); Book book2 = new Book ( \"\u767e\u5ea6\" , 14.0 ); Book book3 = new Book ( \"\u817e\u8baf\" , 11.0 ); System . out . println ( Book . getCount ()); // 3 System . out . println ( book3 . getInfo ()); // <3> <<\u817e\u8baf>> 11.0 } }","title":"24\u3001\u6848\u4f8b\u5206\u6790\u516d\uff08Book\uff09"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7ee7\u627f/","text":"\u7b2c12 \u7ae0 \uff1a \u7ee7\u627f\u7684\u5b9a\u4e49\u4e0e\u4f7f\u7528 59 \u7ee7\u627f\u95ee\u9898\u5f15\u51fa \u7ee7\u627f\uff1a\u6269\u5145\u5df2\u6709\u7c7b\u7684\u529f\u80fd 60 \u7ee7\u627f\u7684\u5b9e\u73b0 class \u5b50\u7c7b extends \u7236\u7c7b \u5b50\u7c7b\uff1a\u6d3e\u751f\u7c7b \u7236\u7c7b\uff1a\u8d85\u7c7b \u7ee7\u627f\u5b9e\u73b0\u7684\u4e3b\u8981\u76ee\u7684 \u5b50\u7c7b\u53ef\u4ee5\u91cd\u7528\u7236\u7c7b\u4e2d\u7684\u7ed3\u6784\uff0c\u5e76\u4e14\u6269\u5145\u529f\u80fd class Person { private String name ; private int age ; public void setName ( String name ){ this . name = name ; } public void setAge ( int age ){ this . age = age ; } public String getName (){ return this . name ; } public int getAge (){ return this . age ; } public Person ( String name , int age ){ this . name = name ; this . age = age ; } } class Student extends Person { String school ; public void setSchool ( String school ){ this . school = school ; } public String getSchool (){ return this . school ; } public Student ( String name , int age , String school ){ super ( name , age ); this . school = school ; } } class Demo { public static void main ( String [] args ) { Student student = new Student ( \"\u5f20\u4e09\" , 23 , \"\u5927\u5b66\" ); System . out . println ( student . getName ()); // \u5f20\u4e09 System . out . println ( student . getSchool ()); // \u5927\u5b66 } } 61 \u5b50\u7c7b\u5bf9\u8c61\u5b9e\u4f8b\u5316\u6d41\u7a0b \u5b50\u7c7b\u5b9e\u4f8b\u5316\u4f1a\u81ea\u52a8\u8c03\u7528\u7236\u7c7b\u6784\u9020\u65b9\u6cd5 \u9ed8\u8ba4\u6267\u884c super() \u5b50\u7c7b\u6784\u9020\u65b9\u6cd5\u9ed8\u8ba4\u8c03\u7528\u7236\u7c7b\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u53ea\u5141\u8bb8\u653e\u5728\u5b50\u7c7b\u6784\u9020\u65b9\u6cd5\u9996\u884c \u7ed3\u8bba\uff1a \u5b9a\u4e49\u7c7b\u7684\u65f6\u5019\u6700\u597d\u5199\u65e0\u53c2\u6784\u9020\u65b9\u6cd5 \u5b9e\u4f8b\u5316\u5b50\u7c7b\u5bf9\u8c61\u7684\u540c\u4e8b\u4e00\u5b9a\u4f1a\u5b9e\u4f8b\u5316\u7236\u7c7b\u5bf9\u8c61 class Person { private String name ; private int age ; public Person (){} public Person ( String name , int age ){ this . name = name ; this . age = age ; } } class Student extends Person { public Student ( String name , int age ){ super ( name , age ); // \u8c03\u7528\u7236\u7c7b\u6784\u9020\u65b9\u6cd5 } } class Demo { public static void main ( String [] args ) { Student student = new Student ( \"\u5f20\u4e09\" , 23 ); } } super, this \u4e24\u4e2a\u8bed\u53e5\u4e0d\u80fd\u540c\u65f6\u51fa\u73b0 \u76f8\u540c\u70b9\uff1a 1\u3001\u90fd\u53ef\u4ee5\u8c03\u7528\u6784\u9020\u65b9\u6cd5 2\u3001\u90fd\u53ea\u80fd\u653e\u5728\u6784\u9020\u65b9\u6cd5\u9996\u884c \u4e0d\u540c\u70b9\uff1a 1\u3001super \u8c03\u7528\u7236\u7c7b\u6784\u9020\u65b9\u6cd5 2\u3001this \u8c03\u7528\u672c\u7c7b\u6784\u9020\u65b9\u6cd5 62 \u7ee7\u627f\u5b9a\u4e49\u9650\u5236 Java\u4e0d\u5141\u8bb8\u591a\u91cd\u7ee7\u627f\uff0c\u53ea\u5141\u8bb8\u591a\u5c42\u7ee7\u627f \u591a\u91cd\u7ee7\u627f class A {} class B {} class C extends A , B {} \u591a\u5c42\u7ee7\u627f, \u4e00\u8109\u4f20\u627f class A {} class B extends A {} class C extends B {} \u7ee7\u627f\u5173\u7cfb\u6700\u597d\u4e0d\u8981\u8d85\u8fc7\u4e09\u5c42 \u5b50\u7c7b\u53ef\u4ee5\u7ee7\u627f\u7236\u7c7b\u4e2d\u6240\u6709\u64cd\u4f5c\u7ed3\u6784 \u663e\u5f0f\u7ee7\u627f\u975e\u79c1\u6709\u64cd\u4f5c \u9690\u5f0f\u7ee7\u627f\u79c1\u6709\u64cd\u4f5c class Person { private String name ; public String getName (){ return this . name ; } public Person (){} public Person ( String name ){ this . name = name ; } } class Student extends Person { public void fun (){ // \u9519\u8bef, \u5b50\u7c7b\u4e0d\u80fd\u8bbf\u95ee\u7236\u7c7b\u4e2d\u7684\u79c1\u6709\u5c5e\u6027 // System.out.println(this.name); // \u5b50\u7c7b\u95f4\u63a5\u8bbf\u95ee\u7236\u7c7b\u4e2d\u7684\u79c1\u6709\u5c5e\u6027 System . out . println ( this . getName ()); // \u5f20\u4e09 } public Student ( String name ){ super ( name ); } } class Demo { public static void main ( String [] args ) { Student student = new Student ( \"\u5f20\u4e09\" ); student . fun (); } } 63 \u65b9\u6cd5\u8986\u5199 \u8986\u5199\u610f\u4e49\uff1a\u4f18\u5316\u529f\u80fd \u5b50\u7c7b\u8c03\u7528\u7236\u7c7b\u65b9\u6cd5 super.\u65b9\u6cd5() \u8c03\u7528\u672c\u7c7b\u65b9\u6cd5, this\u53ef\u7701\u7565 this.\u65b9\u6cd5() class Resource { public void connect (){ System . out . println ( \"\u8d44\u6e90\u8fde\u63a5\" ); } } class Database { public void connect (){ System . out . println ( \"\u6570\u636e\u5e93\u8d44\u6e90\u8fde\u63a5\" ); } } class Demo { public static void main ( String [] args ) { Database db = new Database (); // \u8c03\u7528\u5b50\u7c7b\u7684\u65b9\u6cd5 db . connect (); // \u6570\u636e\u5e93\u8d44\u6e90\u8fde\u63a5 } } 64 \u65b9\u6cd5\u8986\u5199\u9650\u5236 \u8986\u5199\u7684\u65b9\u6cd5\u8bbf\u95ee\u63a7\u5236\u6743\u9650\u8981 \u5927\u4e8e\u7b49\u4e8e \u7236\u7c7b\u65b9\u6cd5\u63a7\u5236\u6743\u9650 \u8bbf\u95ee\u6743\u9650\u63a7\u5236 public > default(\u4e0d\u5199) > private \u533a\u522bOverride Overloading Override \u8986\u5199 \u6982\u5ff5\uff1a\u65b9\u6cd5\u540d\uff0c\u7b7e\u540d\uff08\u53c2\u6570\u7c7b\u578b\uff0c\u4e2a\u6570\uff09\uff0c\u8fd4\u56de\u503c\u76f8\u540c \u6743\u9650\uff1a\u88ab\u8986\u5199\u7684\u65b9\u6cd5\u4e0d\u80fd\u6709\u66f4\u4e25\u683c\u7684\u6743\u9650\u63a7\u5236 \u8303\u56f4\uff1a\u53d1\u751f\u5728\u7ee7\u627f\u5173\u7cfb\u4e2d Overloading \u91cd\u8f7d \u6982\u5ff5\uff1a\u65b9\u6cd5\u540d\u76f8\u540c\uff0c\u7b7e\u540d\uff08\u53c2\u6570\u7c7b\u578b\uff0c\u4e2a\u6570\uff09\u4e0d\u540c\uff0c\u63a8\u8350\u8fd4\u56de\u7c7b\u578b\u4e00\u81f4 \u6743\u9650\uff1a\u6ca1\u6709\u6743\u9650\u63a7\u5236 \u8303\u56f4\uff1a\u53d1\u751f\u5728\u4e00\u4e2a\u7c7b\u4e2d 65 \u5c5e\u6027\u8986\u76d6 \u5c5e\u6027\u8986\u76d6\uff1a\u5b50\u7c7b\u5b9a\u4e49\u4e86\u4e0e\u7236\u7c7b\u76f8\u540c\u540d\u79f0\u7684\u6210\u5458 \u533a\u522b\uff1athis super this \u5148\u67e5\u627e\u672c\u7c7b\uff0c\u518d\u67e5\u627e\u7236\u7c7b\uff0cthis\u53ef\u4ee5\u8868\u793a\u672c\u7c7b\u5bf9\u8c61 super \u76f4\u63a5\u67e5\u627e\u7236\u7c7b class Father { private String name = \"Father\" ; } class Child { private String name = \"Child\" ; public String getName (){ return this . name ; } } class Demo { public static void main ( String [] args ) { Child child = new Child (); System . out . println ( child . getName ()) ; // Child } } 66 final\u5173\u952e\u5b57 final \u5b9a\u4e49\u4e0d\u80fd\u88ab\u7ee7\u627f\u7684\u7c7b\uff0c\u4e0d\u80fd\u88ab\u8986\u5199\u7684\u65b9\u6cd5\uff0c\u5e38\u91cf final class Demo {} // \u4e0d\u80fd\u6709\u5b50\u7c7b class Demo { public final void fun (){} // \u4e0d\u80fd\u88ab\u8986\u5199 } class Demo { private final int ON = 1 ; // \u5e38\u91cf\u4e0d\u80fd\u88ab\u91cd\u65b0\u8d4b\u503c private final int OFF = 0 ; } \u5e38\u91cf\u5f80\u5f80\u90fd\u662f\u516c\u5171\u7684\uff0c\u5168\u5c40\u5e38\u91cf public static final int ON = 1 ; public static final int OFF = 0 ; \u5e38\u91cf\u6bcf\u4e2a\u5b57\u7b26\u90fd\u5fc5\u987b\u5927\u5199 67 \u6848\u4f8b\u5206\u6790\u4e00\uff08\u5b66\u751f\u7c7b\uff09 \u7b80\u5355Java\u7c7b \u5b66\u751f\u7c7b\u7ee7\u627f\u4eba\u7c7b \u4eba\u7c7b -\u56db\u4e2a\u5c5e\u6027\uff1aname\uff0caddress\uff0c sex\uff0c age -\u4e09\u4e2a\u6784\u9020\uff1a\u56db\u53c2\uff0c\u4e24\u53c2\uff0c\u65e0\u53c2 -\u4e00\u4e2a\u65b9\u6cd5\uff1a\u663e\u793a\u8f93\u51fa \u5b66\u751f -\u589e\u52a0\u4e24\u4e2a\u5c5e\u6027\uff1amath\uff0cenglish -\u4e09\u4e2a\u6784\u9020\uff1a\u516d\u53c2\uff0c\u4e24\u9910\uff0c\u65e0\u53c2 -\u4e00\u4e2a\u91cd\u5199\u65b9\u6cd5\uff1a\u663e\u793a\u8f93\u51fa class Person { private String name ; private int age ; private String address ; private char sex ; public void setName ( String name ){ this . name = name ; } public void setAge ( int age ){ this . age = age ; } public void setAddress ( String address ){ this . address = address ; } public void setSex ( char sex ){ this . sex = sex ; } public String getName (){ return this . name ; } public int getAge (){ return this . age ; } public String getAddress (){ return this . address ; } public char getSex (){ return this . sex ; } public Person (){} public Person ( String name , int age ){ // \u8c03\u7528\u672c\u7c7b\u6784\u9020\u65b9\u6cd5 this ( name , age , \"\" , '\u7537' ); } public Person ( String name , int age , String address , char sex ){ this . name = name ; this . age = age ; this . address = address ; this . sex = sex ; } public String getInfo (){ return \"name: \" + this . name + \" age: \" + this . age + \" address: \" + this . address + \" sex: \" + this . sex ; } } // \u7ee7\u627f class Student extends Person { private double math ; private double english ; public void setMath ( double math ){ this . math = math ; } public void setEnglish ( double english ){ this . english = english ; } public double getMath (){ return this . math ; } public double getEnglish (){ return this . english ; } // \u91cd\u8f7d\u6784\u9020\u65b9\u6cd5 public Student (){} public Student ( String name , int age ){ // \u8c03\u7528\u7236\u7c7b\u6784\u9020\u65b9\u6cd5 super ( name , age ); } public Student ( String name , int age , String address , char sex , double math , double english ){ super ( name , age , address , sex ); this . math = math ; this . english = english ; } // \u8986\u5199\u7236\u7c7b\u65b9\u6cd5 public String getInfo (){ return super . getInfo () + \" math: \" + this . math + \" english: \" + this . english ; } } class Demo { public static void main ( String [] args ) { Student student = new Student ( \"\u5f20\u4e09\" , 16 , \"\u5317\u4eac\" , '\u7537' , 99.9 , 87.9 ); System . out . println ( student . getInfo ()); // name: \u5f20\u4e09 age: 16 address: \u5317\u4eac sex: \u7537 math: 99.9 english: 87.9 } } 68 \u6848\u4f8b\u5206\u6790\u4e8c\uff08\u7ba1\u7406\u4eba\u5458\u4e0e\u804c\u5458\uff09 \u5458\u5de5\u7c7b -2\u4e2a\u5c5e\u6027 name, age -2\u4e2a\u6784\u9020 \u65e0\u53c2, 2\u53c2 -1\u4e2a\u65b9\u6cd5 \u663e\u793a\u4fe1\u606f \u666e\u901a\u804c\u5458 -4\u5c5e\u6027 name, age, dept, salary -2\u6784\u9020 \u65e0\u53c2\uff0c 4\u53c2 -1\u4e2a\u65b9\u6cd5 \u663e\u793a\u4fe1\u606f \u7ba1\u7406\u4eba\u5458 -4\u5c5e\u6027 name\uff0c age, position, income -2\u6784\u9020 \u65e0\u53c2\uff0c 4\u53c2 -1\u4e2a\u65b9\u6cd5 \u663e\u793a\u4fe1\u606f class Employee { private String name ; private int age ; public Employee (){} public Employee ( String name , int age ){ this . name = name ; this . age = age ; } public String getInfo (){ return \"name: \" + this . name + \" age: \" + this . age ; } } class Stuff extends Employee { private String dept ; private double salary ; public Stuff (){} public Stuff ( String name , int age , String dept , double salary ){ super ( name , age ); this . dept = dept ; this . salary = salary ; } public String getInfo (){ return \"\u3010Stuff\u3011 \" + super . getInfo () + \" dept: \" + this . dept + \" salary: \" + this . salary ; } } class Manager extends Employee { private String position ; private double income ; public Manager (){} public Manager ( String name , int age , String position , double income ){ super ( name , age ); this . position = position ; this . income = income ; } public String getInfo (){ return \"\u3010Manager\u3011 \" + super . getInfo () + \" position: \" + this . position + \" income: \" + this . income ; } } class Demo { public static void main ( String [] args ) { Stuff stuff = new Stuff ( \"\u5f20\u4e09\" , 23 , \"\u6280\u672f\u90e8\" , 3000.0 ); Manager manager = new Manager ( \"\u674e\u56db\" , 32 , \"\u6280\u672f\u603b\u76d1\" , 150000.0 ); System . out . println ( manager . getInfo ()); // \u3010Manager\u3011 name: \u674e\u56db age: 32 position: \u6280\u672f\u603b\u76d1 income: 150000.0 System . out . println ( stuff . getInfo ()); // \u3010Stuff\u3011 name: \u5f20\u4e09 age: 23 dept: \u6280\u672f\u90e8 salary: 3000.0 } } 69 \u6848\u4f8b\u5206\u6790\u4e09\uff08\u5b57\u7b26\u4e32\u7edf\u8ba1\uff09 \u7edf\u8ba1 \u5b57\u7b26o \u548c n \u51fa\u73b0\u7684\u6b21\u6570 do you know? \u65b9\u5f0f\u4e00\uff1a\u8fd4\u56de\u6570\u7ec4 class CountDemo { // \u7edf\u8ba1\u4e24\u4e2a\u5b57\u7b26\u4e2a\u6570\uff0c\u7b2c\u4e00\u4e2a\u4e3ao, \u7b2c\u4e8c\u4e2a\u4e3au public static int [] getCount ( String str ){ int [] countData = new int [ 2 ] ; char [] data = str . toCharArray () ; for ( char c : data ){ if ( c == 'o' || c == 'O' ){ countData [ 0 ] ++; } else if ( c == 'u' || c == 'U' ){ countData [ 1 ] ++; } } return countData ; } public static void main ( String [] args ) { int [] countData = CountDemo . getCount ( \"are you ok?\" ) ; System . out . println ( \"o: \" + countData [ 0 ]); // o: 2 System . out . println ( \"u: \" + countData [ 1 ]); // u: 1 } } \u65b9\u5f0f\u4e8c\uff1a\u8fd4\u56de\u5bf9\u8c61 class StringUtil { private String content ; public StringUtil ( String content ){ this . content = content ; } public String getContent (){ return this . content ; } } class CountDemo extends StringUtil { private int oCount = 0 ; private int uCount = 0 ; public CountDemo ( String content ){ super ( content ) ; this . countChar () ; //\u6784\u9020\u65b9\u6cd5\u8c03\u7528\u7edf\u8ba1 } // \u7edf\u8ba1\u4e24\u4e2a\u5b57\u7b26\u4e2a\u6570 public void countChar (){ char [] data = super . getContent (). toCharArray () ; for ( char c : data ){ if ( c == 'o' || c == 'O' ){ this . oCount ++; } else if ( c == 'u' || c == 'U' ){ this . uCount ++; } } } public int getOCount (){ return this . oCount ; } public int getUCount (){ return this . uCount ; } } class Demo { public static void main ( String [] args ) { CountDemo countData = new CountDemo ( \"are you ok?\" ) ; System . out . println ( \"o: \" + countData . getOCount ()); // o: 2 System . out . println ( \"u: \" + countData . getUCount ()); // u: 1 } } 70 \u6848\u4f8b\u5206\u6790\u56db\uff08\u6570\u7ec4\u64cd\u4f5c\uff09 1\u3001\u5b9e\u73b0\u6570\u7ec4\u4fdd\u5b58\u6570\u636e \uff081\uff09\u5927\u5c0f\u7531\u5916\u90e8\u51b3\u5b9a \uff082\uff09\u589e\u52a0\u6570\u636e\uff0c\u6ee1\u4e86\u5219\u5931\u8d25 \uff083\uff09\u6570\u7ec4\u6269\u5bb9 \uff084\uff09\u53d6\u5f97\u6570\u7ec4\u5168\u90e8\u6570\u636e 2\u3001\u5b9e\u73b0\u4e24\u4e2a\u6d3e\u751f\u7c7b \uff081\uff09\u6570\u7ec4\u6392\u5e8f \uff082\uff09\u6570\u7ec4\u53cd\u8f6c \u5982\u679c\u5b50\u7c7b\u65b9\u6cd5\u548c\u7236\u7c7b\u65b9\u6cd5\u529f\u80fd\u76f8\u540c\uff0c\u4f18\u5148\u8003\u8651\u8986\u5199\u7236\u7c7b\u65b9\u6cd5 class ArrayDemo { private int point = 0 ; private int [] data = null ; public ArrayDemo ( int length ){ // \u4f20\u5165\u7684\u957f\u5ea6\u5982\u679c\u5c0f\u4e8e1\u5219\u7b49\u4e8e1 if ( length < 1 ){ length = 1 ; } // \u5f00\u8f9f\u6570\u7ec4\u7a7a\u95f4 this . data = new int [ length ]; } // \u6dfb\u52a0\u5143\u7d20 public boolean add ( int element ){ if ( this . point < this . data . length ){ this . data [ this . point ] = element ; this . point ++ ; return true ; } else { return false ; } } // \u6570\u7ec4\u6269\u5bb9 public void increment ( int num ){ // \u6570\u7ec4\u4e00\u65e6\u786e\u5b9a\u5927\u5c0f\u5c31\u4e0d\u80fd\u88ab\u6539\u53d8 int [] newData = new int [ data . length + num ]; // arraycopy(Object src, int srcPos, Object dest, int destPos, int length) System . arraycopy ( this . data , 0 , newData , 0 , this . data . length ); //\u4fee\u6539\u6570\u7ec4\u5f15\u7528 this . data = newData ; } public int [] getData (){ return this . data ; } public void printData (){ System . out . print ( \"{\" ); for ( int i : this . getData ()){ System . out . print ( i ); System . out . print ( \", \" ); } System . out . println ( \"}\" ); } } // \u6392\u5e8f\u6570\u7ec4 class SortArray extends ArrayDemo { public SortArray ( int length ){ super ( length ); } public int [] getData (){ java . util . Arrays . sort ( super . getData ()); return super . getData (); } } // \u53cd\u8f6c\u6570\u7ec4 class ReverseArray extends ArrayDemo { public ReverseArray ( int length ){ super ( length ); } public int [] getData (){ int center = super . getData (). length / 2 ; int head = 0 ; int tail = super . getData (). length - 1 ; for ( int i = 0 ; i < center ; i ++){ int temp = super . getData ()[ head ] ; super . getData ()[ head ] = super . getData ()[ tail ] ; super . getData ()[ tail ] = temp ; head ++ ; tail -- ; } return super . getData (); } } class Demo { public static void main ( String [] args ) { ArrayDemo array = new ArrayDemo ( 3 ); System . out . println ( array . add ( 1 )); // true System . out . println ( array . add ( 2 )); // true System . out . println ( array . add ( 3 )); // true System . out . println ( array . add ( 4 )); // false System . out . println ( array . add ( 5 )); // false array . increment ( 3 ) ; System . out . println ( array . add ( 6 )); // true System . out . println ( array . add ( 7 )); // true array . printData (); // {1, 2, 3, 6, 7, 0, } // \u6392\u5e8f\u6570\u7ec4 SortArray sortArray = new SortArray ( 5 ); sortArray . add ( 2 ); sortArray . add ( 6 ); sortArray . add ( 3 ); sortArray . add ( 5 ); sortArray . printData (); // {0, 2, 3, 5, 6, } // \u53cd\u8f6c\u6570\u7ec4 ReverseArray reverseArray = new ReverseArray ( 5 ) ; reverseArray . add ( 1 ) ; reverseArray . add ( 2 ) ; reverseArray . add ( 3 ) ; reverseArray . add ( 4 ) ; reverseArray . add ( 5 ) ; reverseArray . printData () ; // {5, 4, 3, 2, 1, } } }","title":"\u7b2c12 \u7ae0 \uff1a \u7ee7\u627f\u7684\u5b9a\u4e49\u4e0e\u4f7f\u7528"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7ee7\u627f/#12","text":"","title":"\u7b2c12 \u7ae0 \uff1a \u7ee7\u627f\u7684\u5b9a\u4e49\u4e0e\u4f7f\u7528"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7ee7\u627f/#59","text":"\u7ee7\u627f\uff1a\u6269\u5145\u5df2\u6709\u7c7b\u7684\u529f\u80fd","title":"59 \u7ee7\u627f\u95ee\u9898\u5f15\u51fa"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7ee7\u627f/#60","text":"class \u5b50\u7c7b extends \u7236\u7c7b \u5b50\u7c7b\uff1a\u6d3e\u751f\u7c7b \u7236\u7c7b\uff1a\u8d85\u7c7b \u7ee7\u627f\u5b9e\u73b0\u7684\u4e3b\u8981\u76ee\u7684 \u5b50\u7c7b\u53ef\u4ee5\u91cd\u7528\u7236\u7c7b\u4e2d\u7684\u7ed3\u6784\uff0c\u5e76\u4e14\u6269\u5145\u529f\u80fd class Person { private String name ; private int age ; public void setName ( String name ){ this . name = name ; } public void setAge ( int age ){ this . age = age ; } public String getName (){ return this . name ; } public int getAge (){ return this . age ; } public Person ( String name , int age ){ this . name = name ; this . age = age ; } } class Student extends Person { String school ; public void setSchool ( String school ){ this . school = school ; } public String getSchool (){ return this . school ; } public Student ( String name , int age , String school ){ super ( name , age ); this . school = school ; } } class Demo { public static void main ( String [] args ) { Student student = new Student ( \"\u5f20\u4e09\" , 23 , \"\u5927\u5b66\" ); System . out . println ( student . getName ()); // \u5f20\u4e09 System . out . println ( student . getSchool ()); // \u5927\u5b66 } }","title":"60 \u7ee7\u627f\u7684\u5b9e\u73b0"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7ee7\u627f/#61","text":"\u5b50\u7c7b\u5b9e\u4f8b\u5316\u4f1a\u81ea\u52a8\u8c03\u7528\u7236\u7c7b\u6784\u9020\u65b9\u6cd5 \u9ed8\u8ba4\u6267\u884c super() \u5b50\u7c7b\u6784\u9020\u65b9\u6cd5\u9ed8\u8ba4\u8c03\u7528\u7236\u7c7b\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u53ea\u5141\u8bb8\u653e\u5728\u5b50\u7c7b\u6784\u9020\u65b9\u6cd5\u9996\u884c \u7ed3\u8bba\uff1a \u5b9a\u4e49\u7c7b\u7684\u65f6\u5019\u6700\u597d\u5199\u65e0\u53c2\u6784\u9020\u65b9\u6cd5 \u5b9e\u4f8b\u5316\u5b50\u7c7b\u5bf9\u8c61\u7684\u540c\u4e8b\u4e00\u5b9a\u4f1a\u5b9e\u4f8b\u5316\u7236\u7c7b\u5bf9\u8c61 class Person { private String name ; private int age ; public Person (){} public Person ( String name , int age ){ this . name = name ; this . age = age ; } } class Student extends Person { public Student ( String name , int age ){ super ( name , age ); // \u8c03\u7528\u7236\u7c7b\u6784\u9020\u65b9\u6cd5 } } class Demo { public static void main ( String [] args ) { Student student = new Student ( \"\u5f20\u4e09\" , 23 ); } } super, this \u4e24\u4e2a\u8bed\u53e5\u4e0d\u80fd\u540c\u65f6\u51fa\u73b0 \u76f8\u540c\u70b9\uff1a 1\u3001\u90fd\u53ef\u4ee5\u8c03\u7528\u6784\u9020\u65b9\u6cd5 2\u3001\u90fd\u53ea\u80fd\u653e\u5728\u6784\u9020\u65b9\u6cd5\u9996\u884c \u4e0d\u540c\u70b9\uff1a 1\u3001super \u8c03\u7528\u7236\u7c7b\u6784\u9020\u65b9\u6cd5 2\u3001this \u8c03\u7528\u672c\u7c7b\u6784\u9020\u65b9\u6cd5","title":"61 \u5b50\u7c7b\u5bf9\u8c61\u5b9e\u4f8b\u5316\u6d41\u7a0b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7ee7\u627f/#62","text":"Java\u4e0d\u5141\u8bb8\u591a\u91cd\u7ee7\u627f\uff0c\u53ea\u5141\u8bb8\u591a\u5c42\u7ee7\u627f \u591a\u91cd\u7ee7\u627f class A {} class B {} class C extends A , B {} \u591a\u5c42\u7ee7\u627f, \u4e00\u8109\u4f20\u627f class A {} class B extends A {} class C extends B {} \u7ee7\u627f\u5173\u7cfb\u6700\u597d\u4e0d\u8981\u8d85\u8fc7\u4e09\u5c42 \u5b50\u7c7b\u53ef\u4ee5\u7ee7\u627f\u7236\u7c7b\u4e2d\u6240\u6709\u64cd\u4f5c\u7ed3\u6784 \u663e\u5f0f\u7ee7\u627f\u975e\u79c1\u6709\u64cd\u4f5c \u9690\u5f0f\u7ee7\u627f\u79c1\u6709\u64cd\u4f5c class Person { private String name ; public String getName (){ return this . name ; } public Person (){} public Person ( String name ){ this . name = name ; } } class Student extends Person { public void fun (){ // \u9519\u8bef, \u5b50\u7c7b\u4e0d\u80fd\u8bbf\u95ee\u7236\u7c7b\u4e2d\u7684\u79c1\u6709\u5c5e\u6027 // System.out.println(this.name); // \u5b50\u7c7b\u95f4\u63a5\u8bbf\u95ee\u7236\u7c7b\u4e2d\u7684\u79c1\u6709\u5c5e\u6027 System . out . println ( this . getName ()); // \u5f20\u4e09 } public Student ( String name ){ super ( name ); } } class Demo { public static void main ( String [] args ) { Student student = new Student ( \"\u5f20\u4e09\" ); student . fun (); } }","title":"62 \u7ee7\u627f\u5b9a\u4e49\u9650\u5236"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7ee7\u627f/#63","text":"\u8986\u5199\u610f\u4e49\uff1a\u4f18\u5316\u529f\u80fd \u5b50\u7c7b\u8c03\u7528\u7236\u7c7b\u65b9\u6cd5 super.\u65b9\u6cd5() \u8c03\u7528\u672c\u7c7b\u65b9\u6cd5, this\u53ef\u7701\u7565 this.\u65b9\u6cd5() class Resource { public void connect (){ System . out . println ( \"\u8d44\u6e90\u8fde\u63a5\" ); } } class Database { public void connect (){ System . out . println ( \"\u6570\u636e\u5e93\u8d44\u6e90\u8fde\u63a5\" ); } } class Demo { public static void main ( String [] args ) { Database db = new Database (); // \u8c03\u7528\u5b50\u7c7b\u7684\u65b9\u6cd5 db . connect (); // \u6570\u636e\u5e93\u8d44\u6e90\u8fde\u63a5 } }","title":"63 \u65b9\u6cd5\u8986\u5199"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7ee7\u627f/#64","text":"\u8986\u5199\u7684\u65b9\u6cd5\u8bbf\u95ee\u63a7\u5236\u6743\u9650\u8981 \u5927\u4e8e\u7b49\u4e8e \u7236\u7c7b\u65b9\u6cd5\u63a7\u5236\u6743\u9650 \u8bbf\u95ee\u6743\u9650\u63a7\u5236 public > default(\u4e0d\u5199) > private \u533a\u522bOverride Overloading Override \u8986\u5199 \u6982\u5ff5\uff1a\u65b9\u6cd5\u540d\uff0c\u7b7e\u540d\uff08\u53c2\u6570\u7c7b\u578b\uff0c\u4e2a\u6570\uff09\uff0c\u8fd4\u56de\u503c\u76f8\u540c \u6743\u9650\uff1a\u88ab\u8986\u5199\u7684\u65b9\u6cd5\u4e0d\u80fd\u6709\u66f4\u4e25\u683c\u7684\u6743\u9650\u63a7\u5236 \u8303\u56f4\uff1a\u53d1\u751f\u5728\u7ee7\u627f\u5173\u7cfb\u4e2d Overloading \u91cd\u8f7d \u6982\u5ff5\uff1a\u65b9\u6cd5\u540d\u76f8\u540c\uff0c\u7b7e\u540d\uff08\u53c2\u6570\u7c7b\u578b\uff0c\u4e2a\u6570\uff09\u4e0d\u540c\uff0c\u63a8\u8350\u8fd4\u56de\u7c7b\u578b\u4e00\u81f4 \u6743\u9650\uff1a\u6ca1\u6709\u6743\u9650\u63a7\u5236 \u8303\u56f4\uff1a\u53d1\u751f\u5728\u4e00\u4e2a\u7c7b\u4e2d","title":"64 \u65b9\u6cd5\u8986\u5199\u9650\u5236"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7ee7\u627f/#65","text":"\u5c5e\u6027\u8986\u76d6\uff1a\u5b50\u7c7b\u5b9a\u4e49\u4e86\u4e0e\u7236\u7c7b\u76f8\u540c\u540d\u79f0\u7684\u6210\u5458 \u533a\u522b\uff1athis super this \u5148\u67e5\u627e\u672c\u7c7b\uff0c\u518d\u67e5\u627e\u7236\u7c7b\uff0cthis\u53ef\u4ee5\u8868\u793a\u672c\u7c7b\u5bf9\u8c61 super \u76f4\u63a5\u67e5\u627e\u7236\u7c7b class Father { private String name = \"Father\" ; } class Child { private String name = \"Child\" ; public String getName (){ return this . name ; } } class Demo { public static void main ( String [] args ) { Child child = new Child (); System . out . println ( child . getName ()) ; // Child } }","title":"65 \u5c5e\u6027\u8986\u76d6"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7ee7\u627f/#66-final","text":"final \u5b9a\u4e49\u4e0d\u80fd\u88ab\u7ee7\u627f\u7684\u7c7b\uff0c\u4e0d\u80fd\u88ab\u8986\u5199\u7684\u65b9\u6cd5\uff0c\u5e38\u91cf final class Demo {} // \u4e0d\u80fd\u6709\u5b50\u7c7b class Demo { public final void fun (){} // \u4e0d\u80fd\u88ab\u8986\u5199 } class Demo { private final int ON = 1 ; // \u5e38\u91cf\u4e0d\u80fd\u88ab\u91cd\u65b0\u8d4b\u503c private final int OFF = 0 ; } \u5e38\u91cf\u5f80\u5f80\u90fd\u662f\u516c\u5171\u7684\uff0c\u5168\u5c40\u5e38\u91cf public static final int ON = 1 ; public static final int OFF = 0 ; \u5e38\u91cf\u6bcf\u4e2a\u5b57\u7b26\u90fd\u5fc5\u987b\u5927\u5199","title":"66 final\u5173\u952e\u5b57"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7ee7\u627f/#67","text":"\u7b80\u5355Java\u7c7b \u5b66\u751f\u7c7b\u7ee7\u627f\u4eba\u7c7b \u4eba\u7c7b -\u56db\u4e2a\u5c5e\u6027\uff1aname\uff0caddress\uff0c sex\uff0c age -\u4e09\u4e2a\u6784\u9020\uff1a\u56db\u53c2\uff0c\u4e24\u53c2\uff0c\u65e0\u53c2 -\u4e00\u4e2a\u65b9\u6cd5\uff1a\u663e\u793a\u8f93\u51fa \u5b66\u751f -\u589e\u52a0\u4e24\u4e2a\u5c5e\u6027\uff1amath\uff0cenglish -\u4e09\u4e2a\u6784\u9020\uff1a\u516d\u53c2\uff0c\u4e24\u9910\uff0c\u65e0\u53c2 -\u4e00\u4e2a\u91cd\u5199\u65b9\u6cd5\uff1a\u663e\u793a\u8f93\u51fa class Person { private String name ; private int age ; private String address ; private char sex ; public void setName ( String name ){ this . name = name ; } public void setAge ( int age ){ this . age = age ; } public void setAddress ( String address ){ this . address = address ; } public void setSex ( char sex ){ this . sex = sex ; } public String getName (){ return this . name ; } public int getAge (){ return this . age ; } public String getAddress (){ return this . address ; } public char getSex (){ return this . sex ; } public Person (){} public Person ( String name , int age ){ // \u8c03\u7528\u672c\u7c7b\u6784\u9020\u65b9\u6cd5 this ( name , age , \"\" , '\u7537' ); } public Person ( String name , int age , String address , char sex ){ this . name = name ; this . age = age ; this . address = address ; this . sex = sex ; } public String getInfo (){ return \"name: \" + this . name + \" age: \" + this . age + \" address: \" + this . address + \" sex: \" + this . sex ; } } // \u7ee7\u627f class Student extends Person { private double math ; private double english ; public void setMath ( double math ){ this . math = math ; } public void setEnglish ( double english ){ this . english = english ; } public double getMath (){ return this . math ; } public double getEnglish (){ return this . english ; } // \u91cd\u8f7d\u6784\u9020\u65b9\u6cd5 public Student (){} public Student ( String name , int age ){ // \u8c03\u7528\u7236\u7c7b\u6784\u9020\u65b9\u6cd5 super ( name , age ); } public Student ( String name , int age , String address , char sex , double math , double english ){ super ( name , age , address , sex ); this . math = math ; this . english = english ; } // \u8986\u5199\u7236\u7c7b\u65b9\u6cd5 public String getInfo (){ return super . getInfo () + \" math: \" + this . math + \" english: \" + this . english ; } } class Demo { public static void main ( String [] args ) { Student student = new Student ( \"\u5f20\u4e09\" , 16 , \"\u5317\u4eac\" , '\u7537' , 99.9 , 87.9 ); System . out . println ( student . getInfo ()); // name: \u5f20\u4e09 age: 16 address: \u5317\u4eac sex: \u7537 math: 99.9 english: 87.9 } }","title":"67 \u6848\u4f8b\u5206\u6790\u4e00\uff08\u5b66\u751f\u7c7b\uff09"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7ee7\u627f/#68","text":"\u5458\u5de5\u7c7b -2\u4e2a\u5c5e\u6027 name, age -2\u4e2a\u6784\u9020 \u65e0\u53c2, 2\u53c2 -1\u4e2a\u65b9\u6cd5 \u663e\u793a\u4fe1\u606f \u666e\u901a\u804c\u5458 -4\u5c5e\u6027 name, age, dept, salary -2\u6784\u9020 \u65e0\u53c2\uff0c 4\u53c2 -1\u4e2a\u65b9\u6cd5 \u663e\u793a\u4fe1\u606f \u7ba1\u7406\u4eba\u5458 -4\u5c5e\u6027 name\uff0c age, position, income -2\u6784\u9020 \u65e0\u53c2\uff0c 4\u53c2 -1\u4e2a\u65b9\u6cd5 \u663e\u793a\u4fe1\u606f class Employee { private String name ; private int age ; public Employee (){} public Employee ( String name , int age ){ this . name = name ; this . age = age ; } public String getInfo (){ return \"name: \" + this . name + \" age: \" + this . age ; } } class Stuff extends Employee { private String dept ; private double salary ; public Stuff (){} public Stuff ( String name , int age , String dept , double salary ){ super ( name , age ); this . dept = dept ; this . salary = salary ; } public String getInfo (){ return \"\u3010Stuff\u3011 \" + super . getInfo () + \" dept: \" + this . dept + \" salary: \" + this . salary ; } } class Manager extends Employee { private String position ; private double income ; public Manager (){} public Manager ( String name , int age , String position , double income ){ super ( name , age ); this . position = position ; this . income = income ; } public String getInfo (){ return \"\u3010Manager\u3011 \" + super . getInfo () + \" position: \" + this . position + \" income: \" + this . income ; } } class Demo { public static void main ( String [] args ) { Stuff stuff = new Stuff ( \"\u5f20\u4e09\" , 23 , \"\u6280\u672f\u90e8\" , 3000.0 ); Manager manager = new Manager ( \"\u674e\u56db\" , 32 , \"\u6280\u672f\u603b\u76d1\" , 150000.0 ); System . out . println ( manager . getInfo ()); // \u3010Manager\u3011 name: \u674e\u56db age: 32 position: \u6280\u672f\u603b\u76d1 income: 150000.0 System . out . println ( stuff . getInfo ()); // \u3010Stuff\u3011 name: \u5f20\u4e09 age: 23 dept: \u6280\u672f\u90e8 salary: 3000.0 } }","title":"68 \u6848\u4f8b\u5206\u6790\u4e8c\uff08\u7ba1\u7406\u4eba\u5458\u4e0e\u804c\u5458\uff09"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7ee7\u627f/#69","text":"\u7edf\u8ba1 \u5b57\u7b26o \u548c n \u51fa\u73b0\u7684\u6b21\u6570 do you know? \u65b9\u5f0f\u4e00\uff1a\u8fd4\u56de\u6570\u7ec4 class CountDemo { // \u7edf\u8ba1\u4e24\u4e2a\u5b57\u7b26\u4e2a\u6570\uff0c\u7b2c\u4e00\u4e2a\u4e3ao, \u7b2c\u4e8c\u4e2a\u4e3au public static int [] getCount ( String str ){ int [] countData = new int [ 2 ] ; char [] data = str . toCharArray () ; for ( char c : data ){ if ( c == 'o' || c == 'O' ){ countData [ 0 ] ++; } else if ( c == 'u' || c == 'U' ){ countData [ 1 ] ++; } } return countData ; } public static void main ( String [] args ) { int [] countData = CountDemo . getCount ( \"are you ok?\" ) ; System . out . println ( \"o: \" + countData [ 0 ]); // o: 2 System . out . println ( \"u: \" + countData [ 1 ]); // u: 1 } } \u65b9\u5f0f\u4e8c\uff1a\u8fd4\u56de\u5bf9\u8c61 class StringUtil { private String content ; public StringUtil ( String content ){ this . content = content ; } public String getContent (){ return this . content ; } } class CountDemo extends StringUtil { private int oCount = 0 ; private int uCount = 0 ; public CountDemo ( String content ){ super ( content ) ; this . countChar () ; //\u6784\u9020\u65b9\u6cd5\u8c03\u7528\u7edf\u8ba1 } // \u7edf\u8ba1\u4e24\u4e2a\u5b57\u7b26\u4e2a\u6570 public void countChar (){ char [] data = super . getContent (). toCharArray () ; for ( char c : data ){ if ( c == 'o' || c == 'O' ){ this . oCount ++; } else if ( c == 'u' || c == 'U' ){ this . uCount ++; } } } public int getOCount (){ return this . oCount ; } public int getUCount (){ return this . uCount ; } } class Demo { public static void main ( String [] args ) { CountDemo countData = new CountDemo ( \"are you ok?\" ) ; System . out . println ( \"o: \" + countData . getOCount ()); // o: 2 System . out . println ( \"u: \" + countData . getUCount ()); // u: 1 } }","title":"69 \u6848\u4f8b\u5206\u6790\u4e09\uff08\u5b57\u7b26\u4e32\u7edf\u8ba1\uff09"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u7ee7\u627f/#70","text":"1\u3001\u5b9e\u73b0\u6570\u7ec4\u4fdd\u5b58\u6570\u636e \uff081\uff09\u5927\u5c0f\u7531\u5916\u90e8\u51b3\u5b9a \uff082\uff09\u589e\u52a0\u6570\u636e\uff0c\u6ee1\u4e86\u5219\u5931\u8d25 \uff083\uff09\u6570\u7ec4\u6269\u5bb9 \uff084\uff09\u53d6\u5f97\u6570\u7ec4\u5168\u90e8\u6570\u636e 2\u3001\u5b9e\u73b0\u4e24\u4e2a\u6d3e\u751f\u7c7b \uff081\uff09\u6570\u7ec4\u6392\u5e8f \uff082\uff09\u6570\u7ec4\u53cd\u8f6c \u5982\u679c\u5b50\u7c7b\u65b9\u6cd5\u548c\u7236\u7c7b\u65b9\u6cd5\u529f\u80fd\u76f8\u540c\uff0c\u4f18\u5148\u8003\u8651\u8986\u5199\u7236\u7c7b\u65b9\u6cd5 class ArrayDemo { private int point = 0 ; private int [] data = null ; public ArrayDemo ( int length ){ // \u4f20\u5165\u7684\u957f\u5ea6\u5982\u679c\u5c0f\u4e8e1\u5219\u7b49\u4e8e1 if ( length < 1 ){ length = 1 ; } // \u5f00\u8f9f\u6570\u7ec4\u7a7a\u95f4 this . data = new int [ length ]; } // \u6dfb\u52a0\u5143\u7d20 public boolean add ( int element ){ if ( this . point < this . data . length ){ this . data [ this . point ] = element ; this . point ++ ; return true ; } else { return false ; } } // \u6570\u7ec4\u6269\u5bb9 public void increment ( int num ){ // \u6570\u7ec4\u4e00\u65e6\u786e\u5b9a\u5927\u5c0f\u5c31\u4e0d\u80fd\u88ab\u6539\u53d8 int [] newData = new int [ data . length + num ]; // arraycopy(Object src, int srcPos, Object dest, int destPos, int length) System . arraycopy ( this . data , 0 , newData , 0 , this . data . length ); //\u4fee\u6539\u6570\u7ec4\u5f15\u7528 this . data = newData ; } public int [] getData (){ return this . data ; } public void printData (){ System . out . print ( \"{\" ); for ( int i : this . getData ()){ System . out . print ( i ); System . out . print ( \", \" ); } System . out . println ( \"}\" ); } } // \u6392\u5e8f\u6570\u7ec4 class SortArray extends ArrayDemo { public SortArray ( int length ){ super ( length ); } public int [] getData (){ java . util . Arrays . sort ( super . getData ()); return super . getData (); } } // \u53cd\u8f6c\u6570\u7ec4 class ReverseArray extends ArrayDemo { public ReverseArray ( int length ){ super ( length ); } public int [] getData (){ int center = super . getData (). length / 2 ; int head = 0 ; int tail = super . getData (). length - 1 ; for ( int i = 0 ; i < center ; i ++){ int temp = super . getData ()[ head ] ; super . getData ()[ head ] = super . getData ()[ tail ] ; super . getData ()[ tail ] = temp ; head ++ ; tail -- ; } return super . getData (); } } class Demo { public static void main ( String [] args ) { ArrayDemo array = new ArrayDemo ( 3 ); System . out . println ( array . add ( 1 )); // true System . out . println ( array . add ( 2 )); // true System . out . println ( array . add ( 3 )); // true System . out . println ( array . add ( 4 )); // false System . out . println ( array . add ( 5 )); // false array . increment ( 3 ) ; System . out . println ( array . add ( 6 )); // true System . out . println ( array . add ( 7 )); // true array . printData (); // {1, 2, 3, 6, 7, 0, } // \u6392\u5e8f\u6570\u7ec4 SortArray sortArray = new SortArray ( 5 ); sortArray . add ( 2 ); sortArray . add ( 6 ); sortArray . add ( 3 ); sortArray . add ( 5 ); sortArray . printData (); // {0, 2, 3, 5, 6, } // \u53cd\u8f6c\u6570\u7ec4 ReverseArray reverseArray = new ReverseArray ( 5 ) ; reverseArray . add ( 1 ) ; reverseArray . add ( 2 ) ; reverseArray . add ( 3 ) ; reverseArray . add ( 4 ) ; reverseArray . add ( 5 ) ; reverseArray . printData () ; // {5, 4, 3, 2, 1, } } }","title":"70 \u6848\u4f8b\u5206\u6790\u56db\uff08\u6570\u7ec4\u64cd\u4f5c\uff09"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u94fe\u8868/","text":"\u7b2c30 \u7ae0 \uff1a \u94fe\u8868\u7684\u5b9a\u4e49\u4e0e\u4f7f\u7528 134 \u94fe\u8868\u5b9e\u73b0\u7b80\u4ecb \u94fe\u8868\u672c\u8d28\u662f\u4e00\u4e2a\u52a8\u6001\u7684\u5bf9\u8c61\u6570\u7ec4\uff0c\u5b83\u53ef\u4ee5\u5b9e\u73b0\u82e5\u5e72\u4e2a\u5bf9\u8c61\u7684\u5b58\u50a8 \u94fe\u8868\u5229\u7528\u5f15\u7528\u7684\u903b\u8f91\u5173\u7cfb\u6765\u5b9e\u73b0\u7c7b\u4f3c\u4e8e\u6570\u7ec4\u7684\u6570\u636e\u5904\u7406\u64cd\u4f5c \u5b9e\u73b0\u94fe\u8868\uff0c\u9700\u8981\u4e00\u4e2a\u516c\u5171\u7ed3\u6784-\u8282\u70b9\uff1a 1\u3001\u4fdd\u5b58\u6570\u636e 2\u3001\u8fde\u63a5\u4e0b\u4e00\u4e2a\u7ed3\u6784 Node < E > - E data - next \u8fd8\u9700\u8981\u4e00\u4e2a\u7ba1\u7406Node\u8282\u70b9\u7684\u7c7b \u5ba2\u6237\u7aef\uff1a\u6570\u636e\u7684\u589e\u5220\u6539\u67e5 \u94fe\u8868 LinkImpl \uff1a\u5904\u7406 Node\u7ec6\u8282 -> ILink < T > Node \uff1a\u5b58\u50a8\u6570\u636e private class Node < T >{ private T data ; // \u6570\u636e private Node < T > nextNode ; // \u4e0b\u4e00\u8282\u70b9 public Node ( T data ){ this . data = data ; } public void setNextNode ( Node < T > nextNode ){ this . nextNode = nextNode ; } public Node < T > getNextNode (){ return this . nextNode ; } public T getData (){ return this . data ; } } \u7b80\u5355\u7684\u5355\u5411\u94fe\u8868\u5b9e\u73b0 135 \u6570\u636e\u589e\u52a0 public void add ( E e ); 136 \u83b7\u53d6\u6570\u636e\u96c6\u5408\u4e2a\u6570 public int size (); 137 \u7a7a\u96c6\u5408\u5224\u65ad public boolean isEmpty (); 138 \u8fd4\u56de\u96c6\u5408\u6570\u636e public Object [] toArray (); 139 \u6839\u636e\u7d22\u5f15\u53d6\u5f97\u6570\u636e public E get ( int index ); \u6570\u7ec4\u83b7\u53d6\u6570\u636e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a1 \u94fe\u8868\u83b7\u53d6\u6570\u636e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3an 140 \u4fee\u6539\u94fe\u8868\u6307\u5b9a\u7d22\u5f15\u6570\u636e public void set ( int index , E data ); 141 \u5224\u65ad\u94fe\u8868\u6570\u636e\u662f\u5426\u5b58\u5728 public boolean contains ( E data ); 142 \u5220\u9664\u94fe\u8868\u6570\u636e public void remove ( E data ); \u4e24\u79cd\u60c5\u51b5 \u5220\u9664\u6839\u8282\u70b9\u6570\u636e \u5220\u9664\u975e\u6839\u8282\u70b9\u6570\u636e \u5f15\u7528\u4fee\u6539 143 \u6e05\u7a7a\u94fe\u8868 public void clean (); \u53ea\u7528\u8bbe\u7f6e\u5934\u8282\u70b9\u4e3a\u7a7a\u5373\u53ef \u5b8c\u6574\u4ee3\u7801 // \u5b9a\u4e49\u94fe\u8868\u7684\u63a5\u53e3 interface ILink < E >{ public void add ( E e ); // \u6dfb\u52a0\u5143\u7d20 public int size (); // \u83b7\u53d6\u5143\u7d20\u4e2a\u6570 public boolean isEmpty (); // \u5224\u65ad\u662f\u5426\u4e3a\u7a7a public Object [] toArray (); //\u8f6c\u4e3a\u5bf9\u8c61\u6570\u7ec4 public E get ( int index ); // \u6839\u636e\u7d22\u5f15\u53d6\u5f97\u6570\u636e public void set ( int index , E data ); //\u4fee\u6539\u6570\u636e public boolean contains ( E data ); // \u5224\u65ad\u6570\u636e\u662f\u5426\u5b58\u5728 public boolean remove ( E data ); // \u94fe\u8868\u6570\u636e public void clean (); // \u6e05\u7a7a\u94fe\u8868 } // \u5b9e\u73b0\u94fe\u8868 class LinkImpl < T > implements ILink < T >{ private Node < T > rootNode ; // \u8bb0\u5f55\u5934\u6307\u9488 private int count ; // \u8ba1\u6570\u7edf\u8ba1 private Object [] dataList ; // \u6570\u636e\u5217\u8868 private int foot ; //\u89d2\u6807 // \u94fe\u8868\u8282\u70b9\uff0c\u5185\u90e8\u7c7b\uff0c\u4fbf\u4e8e\u5916\u90e8\u7c7b\u76f4\u63a5\u8bbf\u95ee\u5176\u79c1\u6709\u5c5e\u6027 private class Node < T >{ private T data ; // \u6570\u636e private Node < T > nextNode ; // \u4e0b\u4e00\u8282\u70b9 public Node ( T data ){ this . data = data ; } public void addNode ( Node < T > node ){ if (! this . hasNextNode ()){ this . nextNode = node ; } else { this . nextNode . addNode ( node ); } } public boolean hasNextNode (){ return this . nextNode != null ; } public void toArrayNode (){ LinkImpl . this . dataList [ LinkImpl . this . foot ++] = this . data ; if ( this . hasNextNode ()){ this . nextNode . toArrayNode (); } } public Node < T > getNode ( int index ){ if ( LinkImpl . this . foot ++ == index ){ return this ; } else { return this . nextNode . getNode ( index ); } } public boolean containsNode ( T data ){ // \u6bd4\u8f83\u5bf9\u8c61 \u4e0d\u80fd\u662fnull if ( this . data . equals ( data )){ return true ; } else { // \u6709\u540e\u7eed\u8282\u70b9\u7ee7\u7eed if ( this . hasNextNode ()){ return this . nextNode . containsNode ( data ); } else { // \u6ca1\u6709\u627e\u5230\u6570\u636e return false ; } } } public boolean removeNode ( Node < T > preNode , T data ){ if ( this . data . equals ( data )){ preNode . nextNode = this . nextNode ; return true ; } else { // \u6709\u540e\u7eed\u8282\u70b9\uff0c\u7ee7\u7eed\u79fb\u9664\u64cd\u4f5c if ( this . hasNextNode ()){ return this . nextNode . removeNode ( this , data ); } else { return false ; } } } } public void add ( T data ){ // \u4e0d\u63a5\u53d7null \u7c7b\u578b\u7684\u503c if (! isValidData ( data )){ return ; } Node < T > newNode = new Node < T >( data ); // \u6dfb\u52a0\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u5019\uff0c\u5934\u8282\u70b9\u4e3anull if ( this . count == 0 ){ this . rootNode = newNode ; } else { this . rootNode . addNode ( newNode ); } this . count ++; } public int size (){ return this . count ; } public boolean isEmpty (){ return this . count == 0 ; } public Object [] toArray (){ if ( this . isEmpty ()){ return null ; } // \u89d2\u6807\u6e05\u96f6\uff0c\u521b\u5efa\u7a7a\u6570\u7ec4 this . foot = 0 ; this . dataList = new Object [ this . count ]; // \u9012\u5f52\u83b7\u53d6\u8282\u70b9\u6570\u636e this . rootNode . toArrayNode (); return this . dataList ; } // \u68c0\u67e5\u7d22\u5f15\u662f\u5426\u5728\u6709\u6548\u8303\u56f4\u5185 private boolean isValidIndex ( int index ){ if ( index < 0 || index >= count ){ return false ; } else { return true ; } } // \u68c0\u67e5\u662f\u5426\u4e3a\u6709\u6548\u6570\u636e private boolean isValidData ( T data ){ if ( data == null ){ return false ; } else { return true ; } } public T get ( int index ){ if (! this . isValidIndex ( index ) || this . isEmpty ()){ return null ; } // \u91cd\u7f6e\u4e0b\u6807 this . foot = 0 ; return this . rootNode . getNode ( index ). data ; } public void set ( int index , T data ){ if (! this . isValidIndex ( index ) || this . isEmpty () ){ return ; } // \u91cd\u7f6e\u4e0b\u6807 this . foot = 0 ; this . rootNode . getNode ( index ). data = data ; } public boolean contains ( T data ){ if (! isValidData ( data ) || this . isEmpty ()){ return false ; } return this . rootNode . containsNode ( data ); } public boolean remove ( T data ){ if (! isValidData ( data ) || this . isEmpty ()){ return false ; } boolean removeResult = false ; // \u79fb\u9664\u5934\u8282\u70b9 if ( this . rootNode . data . equals ( data )){ this . rootNode = this . rootNode . nextNode ; removeResult = true ; } else { removeResult = this . rootNode . nextNode . removeNode ( this . rootNode , data ); } if ( removeResult == true ){ this . count --; } return removeResult ; } public void clean (){ this . rootNode = null ; this . count = 0 ; } public void printLink (){ Object [] list = this . toArray (); if ( list == null ){ System . out . println ( \"null\" ); return ; } for ( int i = 0 ; i < this . count ; i ++){ if ( i == 0 ){ System . out . print ( \"[ \" ); } else { System . out . print ( \"-> \" ); } System . out . print ( list [ i ]); if ( i == count - 1 ){ System . out . print ( \" ]\" ); } } System . out . println (); } } class Demo { public static void main ( String [] args ) { LinkImpl < Integer > link = new LinkImpl < Integer >(); System . out . println ( \"\u6dfb\u52a0\u524d\uff1a\" + link . size () + \" \" + link . isEmpty ()); // \u6dfb\u52a0\u524d\uff1a0 true link . add ( 2 ); link . add ( 3 ); link . add ( 4 ); link . add ( 5 ); System . out . println ( \"\u6dfb\u52a0\u540e\uff1a\" + link . size () + \" \" + link . isEmpty ()); // \u6dfb\u52a0\u540e\uff1a4 false link . printLink (); // [ 2-> 3-> 4-> 5 ] System . out . println ( link . get ( 2 )); // 4 link . set ( 2 , 6 ); System . out . println ( link . get ( 2 )); // 6 System . out . println ( link . contains ( 10 )); // false System . out . println ( link . contains ( 5 )); // true link . printLink (); // [ 2-> 3-> 6-> 5 ] link . remove ( 2 ); System . out . println ( link . contains ( 2 )); link . printLink (); // [ 3-> 6-> 5 ] link . clean (); link . printLink (); // null } } 144 \u7efc\u5408\u5b9e\u6218\uff1a\u5ba0\u7269\u5546\u5e97 \u8981\u6c42 \u5ba0\u7269\u4e0a\u67b6\uff0c\u4e0b\u67b6\uff0c\u67e5\u8be2\u5ba0\u7269\u4fe1\u606f \u8bbe\u8ba1 \u5ba0\u7269\u63a5\u53e3 -\u732b -\u72d7 \u5ba0\u7269\u94fe\u8868\u63a5\u53e3 -\u5ba0\u7269\u94fe\u8868 \u5ba0\u7269\u5546\u5e97 -\u5ba0\u7269\u5217\u8868 \u6839\u636e\u63a5\u53e3\u6807\u51c6\u5b9a\u4e49\u4fe1\u606f 145 \u7efc\u5408\u5b9e\u6218\uff1a\u8d85\u5e02\u8d2d\u7269\u8f66 \u7c7b\u4e0e\u6807\u51c6\u6709\u5173\uff0c\u964d\u4f4e\u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u8026\u5408 146 Eclipse\u7b80\u4ecb Eclipse \u4e2d\u6587\u610f\u601d\uff1a\u65e5\u8680 \u5f00\u53d1\u5de5\u5177 + \u64cd\u4f5c\u7cfb\u7edf + \u4e2d\u95f4\u4ef6 + \u6570\u636e\u5e93 Eclipse EE + Linux + Tomcat + MySQL https://www.eclipse.org/downloads/ 147 \u4f7f\u7528JDT\u5f00\u53d1Java\u7a0b\u5e8f \u9879\u76ee\u76ee\u5f55 src * . java bin * . class UTF-8\u7f16\u7801 \u5feb\u6377\u65b9\u5f0f\uff1a \u81ea\u52a8\u5bfc\u5305 \u4ee3\u7801\u683c\u5f0f\u5316 \u4ee3\u7801\u7ea0\u6b63\u63d0\u793a \u4ee3\u7801\u63d0\u793a \u590d\u5236\u5f53\u524d\u884c \u5355\u884c\u6ce8\u91ca \u4ee3\u7801\u81ea\u52a8\u751f\u6210 148 \u4ee3\u7801\u8c03\u8bd5 \u65ad\u70b9break point \u5355\u6b65\u8df3\u5165 \u8fdb\u5165\u4ee3\u7801 \u5355\u6b65\u8df3\u8fc7 \u76f4\u63a5\u5230\u7ed3\u679c \u5355\u6b65\u8fd4\u56de \u8fdb\u5165\u4e4b\u540e\u76f4\u63a5\u8fd4\u56de \u6062\u590d\u6267\u884c \u53d6\u6d88\u65ad\u70b9\uff0c\u7a0b\u5e8f\u6b63\u5e38\u6267\u884c 149 junit\u6d4b\u8bd5\u5de5\u5177 \u767d\u76d2\u6d4b\u8bd5 \u9ed1\u76d2\u6d4b\u8bd5 \u7528\u4f8b\u6d4b\u8bd5 junit testCase \u4e00\u4e2a\u6d4b\u8bd5 testSuite \u4e00\u7ec4\u6d4b\u8bd5","title":"\u7b2c30 \u7ae0 \uff1a \u94fe\u8868\u7684\u5b9a\u4e49\u4e0e\u4f7f\u7528"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u94fe\u8868/#30","text":"","title":"\u7b2c30 \u7ae0 \uff1a \u94fe\u8868\u7684\u5b9a\u4e49\u4e0e\u4f7f\u7528"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u94fe\u8868/#134","text":"\u94fe\u8868\u672c\u8d28\u662f\u4e00\u4e2a\u52a8\u6001\u7684\u5bf9\u8c61\u6570\u7ec4\uff0c\u5b83\u53ef\u4ee5\u5b9e\u73b0\u82e5\u5e72\u4e2a\u5bf9\u8c61\u7684\u5b58\u50a8 \u94fe\u8868\u5229\u7528\u5f15\u7528\u7684\u903b\u8f91\u5173\u7cfb\u6765\u5b9e\u73b0\u7c7b\u4f3c\u4e8e\u6570\u7ec4\u7684\u6570\u636e\u5904\u7406\u64cd\u4f5c \u5b9e\u73b0\u94fe\u8868\uff0c\u9700\u8981\u4e00\u4e2a\u516c\u5171\u7ed3\u6784-\u8282\u70b9\uff1a 1\u3001\u4fdd\u5b58\u6570\u636e 2\u3001\u8fde\u63a5\u4e0b\u4e00\u4e2a\u7ed3\u6784 Node < E > - E data - next \u8fd8\u9700\u8981\u4e00\u4e2a\u7ba1\u7406Node\u8282\u70b9\u7684\u7c7b \u5ba2\u6237\u7aef\uff1a\u6570\u636e\u7684\u589e\u5220\u6539\u67e5 \u94fe\u8868 LinkImpl \uff1a\u5904\u7406 Node\u7ec6\u8282 -> ILink < T > Node \uff1a\u5b58\u50a8\u6570\u636e private class Node < T >{ private T data ; // \u6570\u636e private Node < T > nextNode ; // \u4e0b\u4e00\u8282\u70b9 public Node ( T data ){ this . data = data ; } public void setNextNode ( Node < T > nextNode ){ this . nextNode = nextNode ; } public Node < T > getNextNode (){ return this . nextNode ; } public T getData (){ return this . data ; } } \u7b80\u5355\u7684\u5355\u5411\u94fe\u8868\u5b9e\u73b0 135 \u6570\u636e\u589e\u52a0 public void add ( E e ); 136 \u83b7\u53d6\u6570\u636e\u96c6\u5408\u4e2a\u6570 public int size (); 137 \u7a7a\u96c6\u5408\u5224\u65ad public boolean isEmpty (); 138 \u8fd4\u56de\u96c6\u5408\u6570\u636e public Object [] toArray (); 139 \u6839\u636e\u7d22\u5f15\u53d6\u5f97\u6570\u636e public E get ( int index ); \u6570\u7ec4\u83b7\u53d6\u6570\u636e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a1 \u94fe\u8868\u83b7\u53d6\u6570\u636e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3an 140 \u4fee\u6539\u94fe\u8868\u6307\u5b9a\u7d22\u5f15\u6570\u636e public void set ( int index , E data ); 141 \u5224\u65ad\u94fe\u8868\u6570\u636e\u662f\u5426\u5b58\u5728 public boolean contains ( E data ); 142 \u5220\u9664\u94fe\u8868\u6570\u636e public void remove ( E data ); \u4e24\u79cd\u60c5\u51b5 \u5220\u9664\u6839\u8282\u70b9\u6570\u636e \u5220\u9664\u975e\u6839\u8282\u70b9\u6570\u636e \u5f15\u7528\u4fee\u6539 143 \u6e05\u7a7a\u94fe\u8868 public void clean (); \u53ea\u7528\u8bbe\u7f6e\u5934\u8282\u70b9\u4e3a\u7a7a\u5373\u53ef \u5b8c\u6574\u4ee3\u7801 // \u5b9a\u4e49\u94fe\u8868\u7684\u63a5\u53e3 interface ILink < E >{ public void add ( E e ); // \u6dfb\u52a0\u5143\u7d20 public int size (); // \u83b7\u53d6\u5143\u7d20\u4e2a\u6570 public boolean isEmpty (); // \u5224\u65ad\u662f\u5426\u4e3a\u7a7a public Object [] toArray (); //\u8f6c\u4e3a\u5bf9\u8c61\u6570\u7ec4 public E get ( int index ); // \u6839\u636e\u7d22\u5f15\u53d6\u5f97\u6570\u636e public void set ( int index , E data ); //\u4fee\u6539\u6570\u636e public boolean contains ( E data ); // \u5224\u65ad\u6570\u636e\u662f\u5426\u5b58\u5728 public boolean remove ( E data ); // \u94fe\u8868\u6570\u636e public void clean (); // \u6e05\u7a7a\u94fe\u8868 } // \u5b9e\u73b0\u94fe\u8868 class LinkImpl < T > implements ILink < T >{ private Node < T > rootNode ; // \u8bb0\u5f55\u5934\u6307\u9488 private int count ; // \u8ba1\u6570\u7edf\u8ba1 private Object [] dataList ; // \u6570\u636e\u5217\u8868 private int foot ; //\u89d2\u6807 // \u94fe\u8868\u8282\u70b9\uff0c\u5185\u90e8\u7c7b\uff0c\u4fbf\u4e8e\u5916\u90e8\u7c7b\u76f4\u63a5\u8bbf\u95ee\u5176\u79c1\u6709\u5c5e\u6027 private class Node < T >{ private T data ; // \u6570\u636e private Node < T > nextNode ; // \u4e0b\u4e00\u8282\u70b9 public Node ( T data ){ this . data = data ; } public void addNode ( Node < T > node ){ if (! this . hasNextNode ()){ this . nextNode = node ; } else { this . nextNode . addNode ( node ); } } public boolean hasNextNode (){ return this . nextNode != null ; } public void toArrayNode (){ LinkImpl . this . dataList [ LinkImpl . this . foot ++] = this . data ; if ( this . hasNextNode ()){ this . nextNode . toArrayNode (); } } public Node < T > getNode ( int index ){ if ( LinkImpl . this . foot ++ == index ){ return this ; } else { return this . nextNode . getNode ( index ); } } public boolean containsNode ( T data ){ // \u6bd4\u8f83\u5bf9\u8c61 \u4e0d\u80fd\u662fnull if ( this . data . equals ( data )){ return true ; } else { // \u6709\u540e\u7eed\u8282\u70b9\u7ee7\u7eed if ( this . hasNextNode ()){ return this . nextNode . containsNode ( data ); } else { // \u6ca1\u6709\u627e\u5230\u6570\u636e return false ; } } } public boolean removeNode ( Node < T > preNode , T data ){ if ( this . data . equals ( data )){ preNode . nextNode = this . nextNode ; return true ; } else { // \u6709\u540e\u7eed\u8282\u70b9\uff0c\u7ee7\u7eed\u79fb\u9664\u64cd\u4f5c if ( this . hasNextNode ()){ return this . nextNode . removeNode ( this , data ); } else { return false ; } } } } public void add ( T data ){ // \u4e0d\u63a5\u53d7null \u7c7b\u578b\u7684\u503c if (! isValidData ( data )){ return ; } Node < T > newNode = new Node < T >( data ); // \u6dfb\u52a0\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u5019\uff0c\u5934\u8282\u70b9\u4e3anull if ( this . count == 0 ){ this . rootNode = newNode ; } else { this . rootNode . addNode ( newNode ); } this . count ++; } public int size (){ return this . count ; } public boolean isEmpty (){ return this . count == 0 ; } public Object [] toArray (){ if ( this . isEmpty ()){ return null ; } // \u89d2\u6807\u6e05\u96f6\uff0c\u521b\u5efa\u7a7a\u6570\u7ec4 this . foot = 0 ; this . dataList = new Object [ this . count ]; // \u9012\u5f52\u83b7\u53d6\u8282\u70b9\u6570\u636e this . rootNode . toArrayNode (); return this . dataList ; } // \u68c0\u67e5\u7d22\u5f15\u662f\u5426\u5728\u6709\u6548\u8303\u56f4\u5185 private boolean isValidIndex ( int index ){ if ( index < 0 || index >= count ){ return false ; } else { return true ; } } // \u68c0\u67e5\u662f\u5426\u4e3a\u6709\u6548\u6570\u636e private boolean isValidData ( T data ){ if ( data == null ){ return false ; } else { return true ; } } public T get ( int index ){ if (! this . isValidIndex ( index ) || this . isEmpty ()){ return null ; } // \u91cd\u7f6e\u4e0b\u6807 this . foot = 0 ; return this . rootNode . getNode ( index ). data ; } public void set ( int index , T data ){ if (! this . isValidIndex ( index ) || this . isEmpty () ){ return ; } // \u91cd\u7f6e\u4e0b\u6807 this . foot = 0 ; this . rootNode . getNode ( index ). data = data ; } public boolean contains ( T data ){ if (! isValidData ( data ) || this . isEmpty ()){ return false ; } return this . rootNode . containsNode ( data ); } public boolean remove ( T data ){ if (! isValidData ( data ) || this . isEmpty ()){ return false ; } boolean removeResult = false ; // \u79fb\u9664\u5934\u8282\u70b9 if ( this . rootNode . data . equals ( data )){ this . rootNode = this . rootNode . nextNode ; removeResult = true ; } else { removeResult = this . rootNode . nextNode . removeNode ( this . rootNode , data ); } if ( removeResult == true ){ this . count --; } return removeResult ; } public void clean (){ this . rootNode = null ; this . count = 0 ; } public void printLink (){ Object [] list = this . toArray (); if ( list == null ){ System . out . println ( \"null\" ); return ; } for ( int i = 0 ; i < this . count ; i ++){ if ( i == 0 ){ System . out . print ( \"[ \" ); } else { System . out . print ( \"-> \" ); } System . out . print ( list [ i ]); if ( i == count - 1 ){ System . out . print ( \" ]\" ); } } System . out . println (); } } class Demo { public static void main ( String [] args ) { LinkImpl < Integer > link = new LinkImpl < Integer >(); System . out . println ( \"\u6dfb\u52a0\u524d\uff1a\" + link . size () + \" \" + link . isEmpty ()); // \u6dfb\u52a0\u524d\uff1a0 true link . add ( 2 ); link . add ( 3 ); link . add ( 4 ); link . add ( 5 ); System . out . println ( \"\u6dfb\u52a0\u540e\uff1a\" + link . size () + \" \" + link . isEmpty ()); // \u6dfb\u52a0\u540e\uff1a4 false link . printLink (); // [ 2-> 3-> 4-> 5 ] System . out . println ( link . get ( 2 )); // 4 link . set ( 2 , 6 ); System . out . println ( link . get ( 2 )); // 6 System . out . println ( link . contains ( 10 )); // false System . out . println ( link . contains ( 5 )); // true link . printLink (); // [ 2-> 3-> 6-> 5 ] link . remove ( 2 ); System . out . println ( link . contains ( 2 )); link . printLink (); // [ 3-> 6-> 5 ] link . clean (); link . printLink (); // null } }","title":"134 \u94fe\u8868\u5b9e\u73b0\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u94fe\u8868/#144","text":"\u8981\u6c42 \u5ba0\u7269\u4e0a\u67b6\uff0c\u4e0b\u67b6\uff0c\u67e5\u8be2\u5ba0\u7269\u4fe1\u606f \u8bbe\u8ba1 \u5ba0\u7269\u63a5\u53e3 -\u732b -\u72d7 \u5ba0\u7269\u94fe\u8868\u63a5\u53e3 -\u5ba0\u7269\u94fe\u8868 \u5ba0\u7269\u5546\u5e97 -\u5ba0\u7269\u5217\u8868 \u6839\u636e\u63a5\u53e3\u6807\u51c6\u5b9a\u4e49\u4fe1\u606f","title":"144 \u7efc\u5408\u5b9e\u6218\uff1a\u5ba0\u7269\u5546\u5e97"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u94fe\u8868/#145","text":"\u7c7b\u4e0e\u6807\u51c6\u6709\u5173\uff0c\u964d\u4f4e\u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u8026\u5408","title":"145 \u7efc\u5408\u5b9e\u6218\uff1a\u8d85\u5e02\u8d2d\u7269\u8f66"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u94fe\u8868/#146-eclipse","text":"Eclipse \u4e2d\u6587\u610f\u601d\uff1a\u65e5\u8680 \u5f00\u53d1\u5de5\u5177 + \u64cd\u4f5c\u7cfb\u7edf + \u4e2d\u95f4\u4ef6 + \u6570\u636e\u5e93 Eclipse EE + Linux + Tomcat + MySQL https://www.eclipse.org/downloads/","title":"146 Eclipse\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u94fe\u8868/#147-jdtjava","text":"\u9879\u76ee\u76ee\u5f55 src * . java bin * . class UTF-8\u7f16\u7801 \u5feb\u6377\u65b9\u5f0f\uff1a \u81ea\u52a8\u5bfc\u5305 \u4ee3\u7801\u683c\u5f0f\u5316 \u4ee3\u7801\u7ea0\u6b63\u63d0\u793a \u4ee3\u7801\u63d0\u793a \u590d\u5236\u5f53\u524d\u884c \u5355\u884c\u6ce8\u91ca \u4ee3\u7801\u81ea\u52a8\u751f\u6210","title":"147 \u4f7f\u7528JDT\u5f00\u53d1Java\u7a0b\u5e8f"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u94fe\u8868/#148","text":"\u65ad\u70b9break point \u5355\u6b65\u8df3\u5165 \u8fdb\u5165\u4ee3\u7801 \u5355\u6b65\u8df3\u8fc7 \u76f4\u63a5\u5230\u7ed3\u679c \u5355\u6b65\u8fd4\u56de \u8fdb\u5165\u4e4b\u540e\u76f4\u63a5\u8fd4\u56de \u6062\u590d\u6267\u884c \u53d6\u6d88\u65ad\u70b9\uff0c\u7a0b\u5e8f\u6b63\u5e38\u6267\u884c","title":"148 \u4ee3\u7801\u8c03\u8bd5"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/2-Java\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b-\u94fe\u8868/#149-junit","text":"\u767d\u76d2\u6d4b\u8bd5 \u9ed1\u76d2\u6d4b\u8bd5 \u7528\u4f8b\u6d4b\u8bd5 junit testCase \u4e00\u4e2a\u6d4b\u8bd5 testSuite \u4e00\u7ec4\u6d4b\u8bd5","title":"149 junit\u6d4b\u8bd5\u5de5\u5177"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/","text":"\u7b2c21 \u7ae0 \uff1a \u8ba4\u8bc6\u53cd\u5c04\u673a\u5236 99 \u53cd\u5c04\u673a\u5236\u7b80\u4ecb Java\u7684\u7cbe\u9ad3\u6240\u5728 \u52a8\u6001\u83b7\u53d6\u4fe1\u606f\u4ee5\u53ca\u52a8\u6001\u8c03\u7528\u5bf9\u8c61\u65b9\u6cd5\u7684\u529f\u80fd \u6240\u6709\u6280\u672f\u5b9e\u73b0\u7684\u76ee\u6807\u53ea\u6709\u4e00\u70b9\uff1a\u91cd\u7528\u6027 \u6b63\uff1a\u7c7b -> \u5b9e\u4f8b\u5bf9\u8c61 \u53cd\uff1a\u5b9e\u4f8b\u5bf9\u8c61 -> \u7c7b \u627e\u5230\u5bf9\u8c61\u7684\u6839\u6e90 Object . getClass () 100 Class\u7c7b\u5bf9\u8c61\u7684\u4e09\u79cd\u5b9e\u4f8b\u5316\u6a21\u5f0f public final class Class < T > implements java . io . Serializable , GenericDeclaration , Type , AnnotatedElement \u8981\u5b9e\u4f8b\u5316\u7684\u7c7b class Person {} 1\u3001Object\u7c7b\u652f\u6301 Object\u7c7b\u53ef\u4ee5\u6839\u636e\u5b9e\u4f8b\u5316\u5bf9\u8c61\u83b7\u53d6Class\u5bf9\u8c61 \u7f3a\u70b9\uff1a \u5982\u679c\u60f3\u83b7\u5f97\u7c7b\u5bf9\u8c61\uff0c\u5219\u5fc5\u987b\u4ea7\u751f\u6307\u5b9a\u7c7b\u5bf9\u8c61\u540e\u624d\u80fd\u83b7\u5f97 Person person = new Person (); Class cls = person . getClass (); System . out . println ( cls . getName ()); // Person 2\u3001JVM\u76f4\u63a5\u652f\u6301 \u91c7\u7528 \u7c7b.class \u76f4\u63a5\u5b9e\u4f8b\u5316 \u5982\u679c\u8981\u91c7\u7528\u8fd9\u79cd\u6a21\u5f0f\uff0c\u5219\u5fc5\u987b\u5bfc\u5165\u7a0b\u5e8f\u6240\u5bf9\u5e94\u5f00\u53d1\u5305 Class cls = Person . class ; System . out . println ( cls . getName ()); // Person 3\u3001Class\u7c7b\u652f\u6301 Class\u7c7b\u4e2d\u63d0\u4f9b\u4e86static\u65b9\u6cd5 public static Class <?> forName ( String className ) \u7279\u70b9\uff1a \u76f4\u63a5\u4f7f\u7528\u5b57\u7b26\u4e32\u5f62\u5f0f\u5b9a\u4e49\u8981\u4f7f\u7528\u7684\u7c7b\u578b\uff0c \u7a0b\u5e8f\u4e0d\u9700\u8981\u7f16\u5199import\uff0c\u4e0d\u5b58\u5728\u5219\u629b\u51fa\u5f02\u5e38 Class cls = Class . forName ( \"Person\" ); System . out . println ( cls . getName ()); // Person \u7b2c22 \u7ae0 \uff1a \u53cd\u5c04\u5e94\u7528\u6848\u4f8b 101 \u53cd\u5c04\u5b9e\u4f8b\u5316\u5bf9\u8c61 \u83b7\u53d6Class\u5bf9\u8c61\u610f\u4e49\uff1a Class\u5bf9\u8c61\u63d0\u4f9b\u6709\u4e00\u4e2a\u5bf9\u8c61\u7684\u53cd\u5c04\u5b9e\u4f8b\u5316\u65b9\u6cd5 1\u3001JDK<1.9 public T newInstance () // \u7b49\u4ef7\u4e8e\u5173\u952e\u5b57new, \u53ea\u80fd\u8c03\u7528\u65e0\u53c2\u6784\u9020 JDK>=1.9\u4e4b\u540e\u5f03\u7528 \u793a\u4f8b Class cls = Class . forName ( \"Person\" ); System . out . println ( cls . newInstance ()); // Person@2503dbd3 2\u3001JDK>=1.9 public Constructor < T > getDeclaredConstructor ( Class <?>... parameterTypes ) \u793a\u4f8b Class cls = Class . forName ( \"Person\" ); System . out . println ( cls . getDeclaredConstructor (). newInstance ()); // Person@2503dbd3 \u4efb\u4f55\u60c5\u51b5\u4e0b\u5982\u679c\u8981\u5b9e\u4f8b\u5316\u5bf9\u8c61\u5219\u4e00\u5b9a\u8981\u8c03\u7528\u7c7b\u4e2d\u7684\u6784\u9020\u65b9\u6cd5 102 \u53cd\u5c04\u4e0e\u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f \u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f\uff1a \u901a\u8fc7\u5de5\u5382\u7c7b\u83b7\u53d6\u6307\u5b9a\u63a5\u53e3\u5b9e\u4f8b\u5316\u5bf9\u8c61 \u63a5\u53e3\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u4e3a\u4e0d\u540c\u7684\u5c42\u63d0\u4f9b\u6709\u4e00\u4e2a\u64cd\u4f5c\u7684\u6807\u51c6 \u5982\u679c\u76f4\u63a5\u5c06\u4e00\u4e2a\u5b50\u7c7b\u8bbe\u7f6e\u4e3a\u63a5\u53e3\u5b9e\u4f8b\u5316\u64cd\u4f5c\uff0c\u90a3\u4e48\u4e00\u5b9a\u4f1a\u6709\u8026\u5408 \u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f\u89e3\u51b3\u5b50\u7c7b\u4e0e\u5ba2\u6237\u7aef\u7684\u8026\u5408\u95ee\u9898 1\u3001\u9759\u6001\u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f \u5982\u679c\u5b50\u7c7b\u589e\u52a0\uff0c\u5de5\u5382\u7c7b\u4e00\u5b9a\u8981\u505a\u51fa\u4fee\u6539 \u89e3\u51b3\u4e00\u4e2a\u5b50\u7c7b\u5b9e\u4f8b\u5316 IMessage - NetMessage - CloudMessage Factory // \u901a\u8fc7\u4f20\u5165\u7684\u53c2\u6570\u83b7\u53d6\u5b50\u7c7b Client interface IMessage { public void send ( String message ); } class Message implements IMessage { @Override public void send ( String message ) { System . out . println ( \"\u53d1\u9001: \" + message ); } } class Factory { private Factory () { } public static IMessage getInstance ( String className ) { if ( \"Message\" . equalsIgnoreCase ( className )) { return new Message (); } return null ; } } public class Demo { public static void main ( String [] args ) { IMessage message = Factory . getInstance ( \"message\" ); message . send ( \"nihao\" ); } } 2\u3001\u5229\u7528\u53cd\u5c04\u5b9e\u73b0\u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f \u89e3\u51b3\u4e00\u4e2a\u63a5\u53e3\u591a\u4e2a\u5b50\u7c7b\u5b9e\u4f8b\u5316 \u4fee\u6539\u5de5\u5382\u7c7b\u4ee3\u7801 class Factory { private Factory () { } public static IMessage getInstance ( String className ) { IMessage message = null ; try { message = ( IMessage ) Class . forName ( className ). getDeclaredConstructor (). newInstance (); } catch ( Exception e ) { e . printStackTrace (); } return message ; } } 3\u3001\u6cdb\u578b\u53cd\u5c04\u5b9e\u73b0\u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f \u89e3\u51b3\u6240\u6709\u63a5\u53e3\u5b50\u7c7b\u5b9e\u4f8b\u5316 class Factory { private Factory () { } public static < T > T getInstance ( String className , Class < T > clazz ) { T instance = null ; try { instance = ( T ) Class . forName ( className ). getDeclaredConstructor (). newInstance (); } catch ( Exception e ) { e . printStackTrace (); } return instance ; } } public class Demo { public static void main ( String [] args ) { IMessage message = Factory . getInstance ( \"Message\" , IMessage . class ); message . send ( \"nihao\" ); } } 103 \u53cd\u5c04\u4e0e\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f \u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\uff1a \u7c7b\u7684\u6784\u9020\u51fd\u6570\u79c1\u6709\u5316\uff0c\u901a\u8fc7static\u65b9\u6cd5\u83b7\u53d6\u5b9e\u4f8b\u5316\u5bf9\u8c61 -\u61d2\u6c49\u5f0f -\u997f\u6c49\u5f0f class Singleton { private static Singleton instance = null ; private Singleton () { } public static Singleton getInstance (){ if ( instance == null ){ instance = new Singleton (); } return instance ; } public void print (){ System . out . println ( \"Singleton\" ); } } class Demo { public static void main ( String [] args ) { Singleton instance = Singleton . getInstance (); instance . print (); } } \u591a\u7ebf\u7a0b\u4e0b\u6267\u884c,\u4ea7\u751f\u591a\u4e2a\u5b9e\u4f8b\u5316\u5bf9\u8c61 class Singleton { private static Singleton instance = null ; private Singleton () { System . out . println ( \"Singleton \" + Thread . currentThread (). getName ()); } public static Singleton getInstance (){ if ( instance == null ){ instance = new Singleton (); } return instance ; } public void print (){ System . out . println ( \"Singleton print\" ); } } class Demo { public static void main ( String [] args ) { for ( int i = 0 ; i < 3 ; i ++) { new Thread (()->{ Singleton instance = Singleton . getInstance (); instance . print (); }, \"instance\" + i ). start (); } /** * \u8f93\u51fa\u7ed3\u679c * Singleton instance0 * Singleton instance1 * Singleton print * Singleton instance2 * Singleton print * Singleton print */ } } \u4fee\u6539\u4e3a\u540c\u6b65\u5904\u7406 class Singleton { // volatile \u4e0d\u4f7f\u7528\u526f\u672c private static volatile Singleton instance = null ; private Singleton () { System . out . println ( \"Singleton \" + Thread . currentThread (). getName ()); } // synchronized\u4e0d\u5728\u51fd\u6570\u4e0a\u52a0\uff0c\u800c\u662f\u5728\u5185\u90e8\u4ee3\u7801\u5757\u52a0\uff0c\u63d0\u9ad8\u6267\u884c\u6548\u7387 public static Singleton getInstance (){ if ( instance == null ){ synchronized ( Singleton . class ){ if ( instance == null ) { instance = new Singleton (); } } } return instance ; } public void print (){ System . out . println ( \"Singleton print\" ); } } class Demo { public static void main ( String [] args ) { for ( int i = 0 ; i < 3 ; i ++) { new Thread (()->{ Singleton instance = Singleton . getInstance (); instance . print (); }, \"instance\" + i ). start (); } /** * \u8f93\u51fa\u7ed3\u679c * Singleton instance1 * Singleton print * Singleton print * Singleton print */ } } \u9762\u8bd5\u9898\uff1a\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f 1\u3001\u5b9e\u73b0\u997f\u6c49\u5f0f\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u6784\u9020\u51fd\u6570\u79c1\u6709\u5316 2\u3001Java\u4e2d\u7528\u5230\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\u7684\u7c7b\uff1a Runtime, Pattern, Spring\u6846\u67b6 3\u3001\u61d2\u6c49\u5f0f\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\u7684\u95ee\u9898 \u7b2c23 \u7ae0 \uff1a \u53cd\u5c04\u4e0e\u7c7b\u64cd\u4f5c 104 \u53cd\u5c04\u83b7\u53d6\u7c7b\u7ed3\u6784\u4fe1\u606f \u53cd\u5c04\u673a\u5236\u5904\u7406\u4e0d\u4ec5\u4ec5\u53ea\u662f\u4e00\u4e2a\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u5904\u7406\uff0c \u66f4\u591a\u60c5\u51b5\u4e0b\u8fd8\u6709\u7c7b\u7684\u7ec4\u6210\u7ed3\u6784\u64cd\u4f5c \u4efb\u4f55\u4e00\u4e2a\u7c7b\u7684\u7ec4\u6210\u7ed3\u6784\uff1a \u7236\u7c7b\u3001\u7236\u63a5\u53e3\u3001\u5305\u3001\u5c5e\u6027\u3001\u65b9\u6cd5\uff08\u6784\u9020\u65b9\u6cd5\uff0c\u666e\u901a\u65b9\u6cd5\uff09 // \u83b7\u53d6\u5305\u540d public Package getPackage () // \u83b7\u53d6\u7ee7\u627f\u7236\u7c7b public native Class <? super T > getSuperclass () // \u83b7\u53d6\u5b9e\u73b0\u7236\u63a5\u53e3 public Class <?>[] getInterfaces () import java.util.Arrays ; abstract class AbstractHuman { } interface IConnectService { public boolean isConnect (); } interface IChannelService { public void send (); } class Person extends AbstractHuman implements IConnectService , IChannelService { @Override public boolean isConnect () { return true ; } @Override public void send () { if ( this . isConnect ()){ System . out . println ( \"\u53d1\u9001\" ); } } } class Demo { public static void main ( String [] args ) { Class <?> cls = Person . class ; System . out . println ( cls . getPackage ()); // null System . out . println ( cls . getSuperclass ()); // class AbstractHuman System . out . println ( Arrays . toString ( cls . getInterfaces ())); // [interface IConnectService, interface IChannelService] } } 105 \u53cd\u5c04\u8c03\u7528\u6784\u9020\u65b9\u6cd5 \u5b9e\u4f8b\u5316\u65b9\u6cd5 // \u83b7\u53d6\u6307\u5b9a\u6784\u9020\u65b9\u6cd5 public Constructor < T > getConstructor ( Class <?>... parameterTypes ) public Constructor < T > getDeclaredConstructor ( Class <?>... parameterTypes ) // \u83b7\u53d6\u5168\u90e8\u6784\u9020\u65b9\u6cd5 public Constructor <?>[] getConstructors () public Constructor <?>[] getDeclaredConstructors () Class . getDeclaredConstructor (). newInstance () class Person { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } class Demo { public static void main ( String [] args ) throws Exception { Class <?> cls = Person . class ; // \u83b7\u53d6\u6709\u53c2\u6784\u9020 Constructor constructor = cls . getConstructor ( String . class , int . class ); Object obj = constructor . newInstance ( \"\u5c0f\u5f3a\" , 23 ); System . out . println ( obj ); // Person{name='\u5c0f\u5f3a', age=23} } } \u4f7f\u7528\u53cd\u5c04\u7684\u7c7b\u6700\u597d\u63d0\u4f9b\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u4fbf\u4e8e\u7edf\u4e00\u64cd\u4f5c \u7ee7\u627f\u5173\u7cfb AccessibleObject ( AnnotatedElement ) - Executable - Constructor - Method - Field ( Member ) 106 \u53cd\u5c04\u8c03\u7528\u666e\u901a\u65b9\u6cd5 \u4e86\u89e3\u5373\u53ef // \u83b7\u53d6\u6307\u5b9a\u65b9\u6cd5 public Method getMethod ( String name , Class <?>... parameterTypes ) // \u83b7\u53d6\u5168\u90e8\u65b9\u6cd5 public Method [] getMethods () // \u83b7\u53d6\u672c\u7c7b\u65b9\u6cd5 public Method getDeclaredMethod ( String name , Class <?>... parameterTypes ) // \u83b7\u53d6\u672c\u7c7b\u5168\u90e8\u65b9\u6cd5 public Method [] getDeclaredMethods () import java.lang.reflect.Method ; import java.lang.reflect.Modifier ; import java.util.Arrays ; class Person { public String geMessage ( String message ) { return message ; } } class Demo { public static void main ( String [] args ) throws Exception { Class <?> cls = Person . class ; Method method = cls . getMethod ( \"geMessage\" , String . class ); System . out . println ( method ); // public java.lang.String Person.geMessage(java.lang.String) System . out . println ( Modifier . toString ( method . getModifiers ())); // public System . out . println ( method . getReturnType (). getName ()); // java.lang.String System . out . println ( method . getName ()); // geMessage System . out . println ( Arrays . toString ( method . getParameterTypes ())); // [class java.lang.String] } } Method\u7c7b \u91cd\u8981\u65b9\u6cd5 invoke // \u53cd\u5c04\u8c03\u7528\u7c7b\u4e2d\u7684\u65b9\u6cd5 public Object invoke ( Object obj , Object ... args ) \u6574\u4e2a\u64cd\u4f5c\u5f62\u5f0f\u4e0a\u6ca1\u6709\u4efb\u4f55\u660e\u786e\u7684\u7c7b\u5bf9\u8c61\u4ea7\u751f\uff0c\u4f9d\u9760\u53cd\u5c04\u64cd\u4f5c\uff0c\u907f\u514d\u8026\u5408\u95ee\u9898 import java.lang.reflect.Method ; class Person { private String name ; public Person () { } public Person ( String name ) { this . name = name ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } } class Demo { public static void main ( String [] args ) throws Exception { Class <?> cls = Class . forName ( \"Person\" ); String key = \"name\" ; String value = \"Tom\" ; // \u83b7\u53d6\u6307\u5b9a\u65b9\u6cd5 Method setNameMethod = cls . getMethod ( \"setName\" , String . class ); Method getNameMethod = cls . getMethod ( \"getName\" ); // \u8c03\u7528\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316 Object obj = cls . getDeclaredConstructor (). newInstance (); setNameMethod . invoke ( obj , value ); // \u7b49\u4ef7\u4e8e person.setName(value) System . out . println ( getNameMethod . invoke ( obj )); // Tom } } 107 \u53cd\u5c04\u8c03\u7528\u6210\u5458 // \u83b7\u53d6\u672c\u7c7b\u5168\u90e8\u6210\u5458 public Field [] getDeclaredFields () // \u83b7\u53d6\u672c\u7c7b\u6307\u5b9a\u6210\u5458 public Field getDeclaredField ( String name ) // \u83b7\u53d6\u7236\u7c7b\u5168\u90e8\u6210\u5458 public Field [] getFields () // \u83b7\u53d6\u7236\u7c7b\u6307\u5b9a\u6210\u5458 public Field getField ( String name ) Field \u7c7b // \u8bbe\u7f6e\u5c5e\u6027\u5185\u5bb9 public void set ( Object obj , Object value ) // \u83b7\u53d6\u5c5e\u6027\u5185\u5bb9 public Object get ( Object obj ) // \u89e3\u9664\u5c01\u88c5 public void setAccessible ( boolean flag ) import java.lang.reflect.Field ; class Person { private String name ; public Person () { } } class Demo { public static void main ( String [] args ) throws Exception { Class <?> cls = Class . forName ( \"Person\" ); Object obj = cls . getDeclaredConstructor (). newInstance (); Field nameField = cls . getDeclaredField ( \"name\" ); // \u89e3\u9664\u5c01\u88c5\u6027\uff0c\u8bbf\u95ee\u79c1\u6709\u6210\u5458 nameField . setAccessible ( true ); nameField . set ( obj , \"Tom\" ); System . out . println ( nameField . get ( obj )); // Tom } } \u4e0d\u5efa\u8bae\u6253\u7834\u5c01\u88c5\u673a\u5236 Field\u7c7b\u91cd\u8981\u65b9\u6cd5 getType public Class <?> getType () Class <?> cls = Class . forName ( \"Person\" ); Field nameField = cls . getDeclaredField ( \"name\" ); System . out . println ( nameField . getType ()); // class java.lang.String System . out . println ( nameField . getType (). getName ()); // \u83b7\u53d6\u5305.\u7c7b java.lang.String System . out . println ( nameField . getType (). getSimpleName ()); // \u83b7\u53d6\u7c7b\u540d\u79f0 String 108 Unsafe\u5de5\u5177\u7c7b \u901a\u8fc7\u53cd\u5c04\u83b7\u53d6\u5bf9\u8c61\uff0c\u5e76\u4e14\u76f4\u63a5\u4f7f\u7528\u5e95\u5c42\u7684C++\u4ee3\u7801 \u53ef\u4ee5\u7ed5\u8fc7JVM\u76f8\u5173\u7ba1\u7406\u673a\u5236\uff0c\u5c31\u65e0\u6cd5\u4f7f\u7528\u5185\u5b58\u7ba1\u7406\u548c\u5783\u573e\u56de\u6536 Unsafe \u7c7b public final class Unsafe { private static final Unsafe theUnsafe ; private Unsafe () {} } Unsafe\u7ed5\u8fc7\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u7ba1\u7406 import sun.misc.Unsafe ; import java.lang.reflect.Field ; // \u5c06\u6784\u9020\u51fd\u6570\u79c1\u6709\u5316 class Person { private Person (){}; public void print (){ System . out . println ( \"hi\" ); } } class Demo { public static void main ( String [] args ) throws Exception { Field theUnsafeField = Unsafe . class . getDeclaredField ( \"theUnsafe\" ); theUnsafeField . setAccessible ( true ); Unsafe unsafeObject = ( Unsafe ) theUnsafeField . get ( null ); // \u901a\u8fc7unsafe \u5b9e\u4f8b\u5316\u6784\u9020\u51fd\u6570\u79c1\u6709\u5316\u7684\u5bf9\u8c61 Person person = ( Person ) unsafeObject . allocateInstance ( Person . class ); person . print (); // hi } } \u5982\u679c\u4e0d\u662f\u5fc5\u987b\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528 Unsafe \u7c7b\u4e5f\u662f\u5355\u4f8b\u8bbe\u8ba1 \u7b2c24 \u7ae0 \uff1a \u53cd\u5c04\u4e0e\u7b80\u5355Java\u7c7b 109 \u4f20\u7edf\u5c5e\u6027\u8d4b\u503c\u5f0a\u7aef \u7b80\u5355Java\u7c7b\uff0csetter\uff0cgetter\u8fc7\u591a\uff0c\u4ee3\u7801\u91cd\u590d \u901a\u8fc7\u53cd\u5c04\uff08Object\u7c7b\u76f4\u63a5\u64cd\u4f5c\u5c5e\u6027\u6216\u65b9\u6cd5\uff09\u5b9e\u73b0\u76f8\u540c\u529f\u80fd\u7c7b\u7684\u91cd\u590d\u64cd\u4f5c\u7684\u62bd\u8c61\u5904\u7406 110 \u5c5e\u6027\u81ea\u52a8\u8d4b\u503c\u5b9e\u73b0\u601d\u8def \u7c7b\u8bbe\u8ba1\u7684\u57fa\u672c\u673a\u6784\uff1a \u5e94\u8be5\u7531\u4e00\u4e2a\u4e13\u95e8\u7684ClassInstanceFactory\u7c7b\u8d1f\u8d23\u53cd\u5c04\u5904\u7406 \u63a5\u6536\u53cd\u5c04\u5bf9\u8c61\u4e0e\u8981\u8bbe\u7f6e\u7684\u5c5e\u6027\u5185\u5bb9\uff0c\u540c\u65f6\u53ef\u4ee5\u83b7\u53d6\u6307\u5b9a\u7c7b\u7684\u5b9e\u4f8b\u5316\u5bf9\u8c61 class ClassInstanceFactory { private ClassInstanceFactory (){} /** * \u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u521b\u5efa\u65b9\u6cd5\uff0c\u8be5\u5bf9\u8c61\u53ef\u4ee5\u6839\u636e\u4f20\u5165\u7684\u5b57\u7b26\u4e32\u7ed3\u6784\u201c\u5c5e\u6027:\u5185\u5bb9|\u5c5e\u6027:\u5185\u5bb9\u201d * @param clazz \u8981\u8fdb\u884c\u53cd\u5c04\u5b9e\u4f8b\u5316\u7684Class\u5bf9\u8c61\uff0c\u6709Class\u5c31\u53ef\u4ee5\u53cd\u5c04\u5b9e\u4f8b\u5316\u5bf9\u8c61 * @param value \u8981\u8bbe\u7f6e\u7ed9\u5bf9\u8c61\u7684\u5c5e\u6027\u5185\u5bb9 * @return \u4e00\u4e2a\u5df2\u7ecf\u914d\u7f6e\u597d\u5c5e\u6027\u5185\u5bb9\u7684Java\u7c7b\u5bf9\u8c61 */ public static < T > T getInstance ( Class clazz , String value ){ return null ; } } 111 \u5355\u7ea7\u5c5e\u6027\u8d4b\u503c \u5b8c\u62102\u9879\u5185\u5bb9\uff1a 1\u3001\u901a\u8fc7\u53cd\u5c04\u8fdb\u884c\u6307\u5b9a\u7c7b\u5bf9\u8c61\u7684\u5b9e\u4f8b\u5316\u5904\u7406 2\u3001\u8fdb\u884c\u5185\u5bb9\u8bbe\u7f6e Field Method \u5fc5\u987b\u8981\u6709\u65e0\u53c2\u6784\u9020 \u5904\u7406\u6d41\u7a0b Class <? > - Field - Method \u8c03\u7528setter Utils - BeanUtils \u83b7\u53d6\u7c7b\u578b\uff0c\u5c5e\u6027\u8bbe\u7f6e - StringUtils \u9996\u5b57\u6bcd\u5927\u5199 ClassInstanceFactory < T > \u5bf9\u8c61\u5b9e\u4f8b\u5316\u5e76\u8bbe\u7f6e\u5c5e\u6027 main \u6d4b\u8bd5\u7c7b \u5373\u4f7f\u7c7b\u4e2d\u7684\u5c5e\u6027\u518d\u591a\uff0c\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5c5e\u6027\u8d4b\u503c StringUtil.java package util ; class StringUtil { /** * \u9996\u5b57\u6bcd\u5927\u5199 */ public static String capitalize ( String str ){ if ( str == null || \"\" . equals ( str )){ return str ; } if ( str . length () == 1 ){ return str . toUpperCase (); } else { return str . substring ( 0 , 1 ). toUpperCase () + str . substring ( 1 ); } } } BeanUtil.java package util ; import java.lang.reflect.Field ; import java.lang.reflect.Method ; public class BeanUtil { /** * \u5bf9\u8c61\u5c5e\u6027\u8d4b\u503c * @param obj * @param value \u6570\u636e\u7ed3\u6784\"key:value|key:value\" */ public static void setValue ( Object obj , String value ){ String [] attrs = value . split ( \"\\\\|\" ); // System.out.println(Arrays.toString(attrs)); for ( String attr : attrs ){ String [] keyValue = attr . split ( \":\" ); String key = keyValue [ 0 ]; String val = keyValue [ 1 ]; String setName = \"set\" + StringUtil . capitalize ( key ); // System.out.println(key + val + setName); try { Field field = obj . getClass (). getDeclaredField ( key ); Method method = obj . getClass (). getDeclaredMethod ( setName , field . getType ()); method . setAccessible ( true ); method . invoke ( obj , val ); } catch ( Exception e ){ e . printStackTrace (); } } } } Demo.java import util.BeanUtil ; class Person { private String name ; public Person () { } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + '}' ; } } /** * \u5c5e\u6027\u8d4b\u503c\u5de5\u5382\u7c7b */ class ClassInstanceFactory { private ClassInstanceFactory (){} public static < T > T getInstance ( Class < T > clazz , String value ) { try { Object obj = clazz . getDeclaredConstructor (). newInstance (); BeanUtil . setValue ( obj , value ); return ( T ) obj ; } catch ( Exception e ){ e . printStackTrace (); return null ; } } } class Demo { public static void main ( String [] args ) { Person person = ClassInstanceFactory . getInstance ( Person . class , \"name:Tom\" ); System . out . println ( person ); // Person{name='Tom'} } } 112 \u8bbe\u7f6e\u591a\u79cd\u6570\u636e\u7c7b\u578b \u7b80\u5355Java\u7c7b\u4e2d\u5c5e\u6027\u7c7b\u578b long\uff08Long\uff09 int(Integer) double(Double) String \u5728 BeanUtil.java\u4e2d\u6dfb\u52a0\u7c7b\u578b\u8f6c\u6362\u65b9\u6cd5 package util ; import java.lang.reflect.Field ; import java.lang.reflect.Method ; public class BeanUtil { public static void setValue ( Object obj , String value ){ String [] attrs = value . split ( \"\\\\|\" ); for ( String attr : attrs ){ String [] keyValue = attr . split ( \":\" ); String key = keyValue [ 0 ]; String val = keyValue [ 1 ]; String setName = \"set\" + StringUtil . capitalize ( key ); try { Field field = obj . getClass (). getDeclaredField ( key ); Method method = obj . getClass (). getDeclaredMethod ( setName , field . getType ()); method . setAccessible ( true ); Object convertVal = convertValue ( field . getType (). getName (), val ); method . invoke ( obj , convertVal ); } catch ( Exception e ){ e . printStackTrace (); } } } public static Object convertValue ( String type , String value ){ if ( \"java.lang.String\" . equals ( type )){ return value ; } else if ( \"int\" . equals ( type )){ return Integer . parseInt ( value ); } else { return null ; } } } Person\u7c7b\u6dfb\u52a0int\u7c7b\u578b\u7684age\u5c5e\u6027\uff0c\u548c\u4fee\u6539\u6d4b\u8bd5Demo\u7c7b\u4f20\u5165\u53c2\u6570 import util.BeanUtil ; class Person { private String name ; private int age ; public void setAge ( int age ) { this . age = age ; } public Person () { } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } class Demo { public static void main ( String [] args ) { Person person = ClassInstanceFactory . getInstance ( Person . class , \"name:Tom|age:23\" ); System . out . println ( person ); // Person{name='Tom', age=23} } } \u5982\u679c\u8981\u505a\u4e00\u4e2a\u5b8c\u6574\u7684\u4ea7\u54c1\uff0c\u9700\u8981\u8003\u8651\u6240\u6709\u53ef\u80fd\u7684\u7c7b\u578b 113 \u7ea7\u8054\u5bf9\u8c61\u5b9e\u4f8b\u5316 \u4f8b\u5982\uff1a \u4e00\u4e2a\u5458\u5de5\u5c5e\u4e8e\u4e00\u4e2a\u90e8\u95e8\uff0c\u4e00\u4e2a\u90e8\u95e8\u5c5e\u4e8e\u4e00\u4e2a\u516c\u53f8 \u7ea6\u5b9a\u4f7f\u7528 . \u4f5c\u4e3a\u7ea7\u8054\u5173\u7cfb eg: company . dept . dname : \u8d22\u52a1\u90e8 \u8003\u8651\u4ee3\u7801\u7b80\u6d01\u6027 114 \u7ea7\u8054\u5c5e\u6027\u8d4b\u503c \u5b8c\u6574\u4ee3\u7801 StringUtil.java package util ; class StringUtil { /** * \u9996\u5b57\u6bcd\u5927\u5199 */ public static String capitalize ( String str ){ if ( str == null || \"\" . equals ( str )){ return str ; } if ( str . length () == 1 ){ return str . toUpperCase (); } else { return str . substring ( 0 , 1 ). toUpperCase () + str . substring ( 1 ); } } } BeanUtil.java package util ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; import java.lang.reflect.Method ; public class BeanUtil { /** * \u5bf9\u8c61\u5c5e\u6027\u8d4b\u503c * * @param values \u6570\u636e\u7ed3\u6784\"key:value|key.subKey.subKey:value\" */ public static void setValues ( Object obj , String values ) { String [] attrs = values . split ( \"\\\\|\" ); for ( String attr : attrs ) { String [] keyValue = attr . split ( \":\" ); String key = keyValue [ 0 ]; String val = keyValue [ 1 ]; try { // \u7ea7\u8054\u5173\u7cfb\uff0c\u901a\u8fc7\u70b9. \u5206\u9694 eg: company.name if ( key . contains ( \".\" )) { String [] objKeys = key . split ( \"\\\\.\" ); Object currentObject = obj ; // \u5bf9\u8c61\u94fe for ( int i = 0 ; i < objKeys . length - 1 ; i ++) { String objKey = objKeys [ i ]; Object tempObject = getValue ( currentObject , objKey ); // \u6ca1\u6709\u5b9e\u4f8b\u5316 if ( tempObject == null ) { tempObject = getFieldInstance ( currentObject , objKey ); setValue ( currentObject , objKey , tempObject ); } currentObject = tempObject ; } // \u6700\u540e\u4e00\u4e2a\u5c31\u662f\u5c5e\u6027 String attrKey = objKeys [ objKeys . length - 1 ]; setValue ( currentObject , attrKey , convertFieldValue ( currentObject , attrKey , val )); } // \u5355\u7ea7\u5173\u7cfb else { setValue ( obj , key , convertFieldValue ( obj , key , val )); } } catch ( Exception e ) { e . printStackTrace (); } } } /** * \u7ed9\u5bf9\u8c61\u8bbe\u7f6e\u5c5e\u6027\u503c */ public static void setValue ( Object obj , String key , Object value ) { try { Field field = obj . getClass (). getDeclaredField ( key ); String setName = \"set\" + StringUtil . capitalize ( key ); Method method = obj . getClass (). getDeclaredMethod ( setName , field . getType ()); method . setAccessible ( true ); method . invoke ( obj , value ); } catch ( Exception e ) { e . printStackTrace (); } } /** * \u83b7\u53d6\u5bf9\u8c61\u5c5e\u6027\u503c */ public static Object getValue ( Object obj , String key ) { Object value = null ; try { String getName = \"get\" + StringUtil . capitalize ( key ); Method getMethod = obj . getClass (). getDeclaredMethod ( getName ); getMethod . setAccessible ( true ); value = getMethod . invoke ( obj ); } catch ( Exception e ) { e . printStackTrace (); } return value ; } /** * \u83b7\u53d6\u5bf9\u8c61\u5c5e\u6027\u5bf9\u5e94\u7c7b\u7684\u5b9e\u4f8b\u5316\u5bf9\u8c61 */ public static Object getFieldInstance ( Object obj , String key ) { Object fieldObj = null ; try { Field field = obj . getClass (). getDeclaredField ( key ); Constructor constructor = field . getType (). getConstructor (); constructor . setAccessible ( true ); fieldObj = constructor . newInstance (); } catch ( Exception e ) { e . printStackTrace (); } return fieldObj ; } /** * \u8f6c\u6362\u5b57\u7b26\u4e32\u4e3a\u5bf9\u5e94\u7c7b\u578b\u7684\u503c */ public static Object convertValue ( String type , String value ) { if ( \"java.lang.String\" . equals ( type )) { return value ; } else if ( \"int\" . equals ( type )) { return Integer . parseInt ( value ); } else { return null ; } } public static Object convertFieldValue ( Object obj , String key , String value ) { Object val = null ; try { Field field = obj . getClass (). getDeclaredField ( key ); val = convertValue ( field . getType (). getName (), value ); } catch ( Exception e ) { e . printStackTrace (); } return val ; } } Demo.java import util.BeanUtil ; class Person { private String name ; private int age ; private Company company ; public Person () { } public void setAge ( int age ) { this . age = age ; } public Company getCompany () { return company ; } public void setName ( String name ) { this . name = name ; } public void setCompany ( Company company ) { this . company = company ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + \", company=\" + company + '}' ; } } class Dept { private String name ; public Dept () { } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"Dept{\" + \"name='\" + name + '\\'' + '}' ; } } class Company { private String name ; private Dept dept ; public Company () { } public void setName ( String name ) { this . name = name ; } public String getName () { return name ; } public void setDept ( Dept dept ) { this . dept = dept ; } public Dept getDept () { return dept ; } @Override public String toString () { return \"Company{\" + \"name='\" + name + '\\'' + \", dept=\" + dept + '}' ; } } /** * \u5c5e\u6027\u8d4b\u503c\u5de5\u5382\u7c7b */ class ClassInstanceFactory { private ClassInstanceFactory () { } public static < T > T getInstance ( Class < T > clazz , String values ) { try { Object obj = clazz . getDeclaredConstructor (). newInstance (); BeanUtil . setValues ( obj , values ); return ( T ) obj ; } catch ( Exception e ) { e . printStackTrace (); return null ; } } } class Demo { public static void main ( String [] args ) { String values = \"name:Tom|age:23|company.name:Tech|company.dept.name:law\" ; Person person = ClassInstanceFactory . getInstance ( Person . class , values ); System . out . println ( person ); // Person{name='Tom', age=23, company=Company{name='Tech', dept=Dept{name='law'}}} } } \u7b2c25 \u7ae0 \uff1a ClassLoader\u7c7b\u52a0\u8f7d\u5668 115 ClassLoader\u7c7b\u52a0\u8f7d\u5668\u7b80\u4ecb \u7cfb\u7edf\u73af\u5883\u53d8\u91cf CLASSPATH JVM -> ClassLoader -> CLASSPATH -> . class \u52a0\u8f7d\u5668\uff0c\u7531\u4e0a\u81f3\u4e0b\u6267\u884c Bootstrap \u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668 PlatformClassLoader \u5e73\u53f0\u7c7b\u52a0\u8f7d\u5668 AppClassLoader \u5e94\u7528\u7a0b\u5e8f\u52a0\u8f7d\u5668 \u81ea\u5b9a\u4e49\u7c7b\u52a0\u8f7d\u5668\uff08\u78c1\u76d8\u3001\u7f51\u7edc\uff09 \u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668\u90fd\u662f\u6839\u636eCLASSPATH\u8def\u5f84\u67e5\u627e\u7c7b\u52a0\u8f7d \u5e94\u7528\u573a\u666f\uff1a \u5ba2\u6237\u7aef\u52a8\u6001\u66f4\u65b0\u670d\u52a1\u5668\u7aef\u7684\u4ee3\u7801 Java\u7c7b\u52a0\u8f7d\u5668\uff1a\u53cc\u4eb2\u52a0\u8f7d\u673a\u5236 \u4e3a\u4e86\u4fdd\u8bc1\u7cfb\u7edf\u5b89\u5168\u6027\uff0c\u5f00\u53d1\u8005\u81ea\u5b9a\u4e49\u7c7b\u4e0e\u7cfb\u7edf\u7c7b\u91cd\u540d\uff0c\u4e0d\u4f1a\u88ab\u52a0\u8f7d /demo/Person.java public class Person { public void sayHello (){ System . out . println ( \"hello\" ); } } MyClassLoader.java import java.io.* ; import java.lang.reflect.InvocationTargetException ; import java.lang.reflect.Method ; class MyClassLoader extends ClassLoader { private static final String PERSON_CLASS_PATH = \"/demo\" + File . separator + \"Person.class\" ; public Class <?> loadMyClass ( String className ) throws IOException { byte [] data = this . loadClassData (); if ( data != null ) { return super . defineClass ( className , data , 0 , data . length ); } return null ; } public byte [] loadClassData () throws IOException { InputStream input = null ; ByteArrayOutputStream bos = new ByteArrayOutputStream (); // \u5c06\u6570\u636e\u52a0\u8f7d\u5230\u5185\u5b58 byte [] data = null ; byte [] temp = new byte [ 1024 ]; int len = 0 ; try { input = new FileInputStream ( PERSON_CLASS_PATH ); while (( len = input . read ( temp )) != - 1 ) { bos . write ( temp , 0 , len ); } // \u8bfb\u53d6\u6240\u6709\u7684\u5b57\u8282 data = bos . toByteArray (); } catch ( Exception e ) { e . printStackTrace (); } finally { if ( input != null ) { input . close (); } if ( bos != null ) { bos . close (); } } return data ; } } class Demo { public static void main ( String [] args ) throws Exception { MyClassLoader loader = new MyClassLoader (); Class <?> cls = loader . loadMyClass ( \"Person\" ); Object obj = cls . getDeclaredConstructor (). newInstance (); Method method = cls . getDeclaredMethod ( \"sayHello\" ); method . invoke ( obj ); // hello } } \u7b2c26 \u7ae0 \uff1a \u53cd\u5c04\u4e0e\u4ee3\u7406\u8bbe\u8ba1\u6a21\u5f0f 117 \u9759\u6001\u4ee3\u7406\u8bbe\u8ba1\u6a21\u5f0f \u4f20\u7edf\u4ee3\u7406\u8bbe\u8ba1 \u5fc5\u987b\u6709\u63a5\u53e3 \u6807\u51c6\u7684\u4ee3\u7406\u8bbe\u8ba1 // \u63a5\u53e3\u6807\u51c6 interface IMessage { void send (); } // \u4e1a\u52a1\u5b9e\u73b0\u7c7b class MessageImpl implements IMessage { @Override public void send () { System . out . println ( \"\u53d1\u9001\" ); } } // \u4ee3\u7406\u7c7b class MessageProxy implements IMessage { private IMessage message ; public MessageProxy ( IMessage message ) { this . message = message ; } @Override public void send () { if ( this . isConnect ()) { this . message . send (); } } public void close () { } public boolean isConnect () { return true ; } } class Demo { public static void main ( String [] args ) { IMessage message = new MessageProxy ( new MessageImpl ()); message . send (); } } \u5ba2\u6237\u7aef\u548c\u63a5\u53e3\u5b50\u7c7b\u4ea7\u751f\u4e86\u8026\u5408 \u6700\u597d\u5f15\u5165\u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f\u8fdb\u884c\u4ee3\u7406\u5bf9\u8c61\u83b7\u53d6 \u9759\u6001\u4ee3\u7406\u7c7b\uff1a \u4e00\u4e2a\u4ee3\u7406\u7c7b\u53ea\u4e3a\u4e00\u4e2a\u63a5\u53e3\u670d\u52a1 118 \u52a8\u6001\u4ee3\u7406\u8bbe\u8ba1\u6a21\u5f0f \u6700\u597d\u7684\u505a\u6cd5\u662f\u4e3a\u6240\u6709\u529f\u80fd\u4e00\u81f4\u7684\u4e1a\u52a1\u64cd\u4f5c\u63a5\u53e3\u63d0\u4f9b\u7edf\u4e00\u7684\u4ee3\u7406\u5904\u7406\u64cd\u4f5c \u4e0d\u7ba1\u662f\u52a8\u6001\u4ee3\u7406\u7c7b\u8fd8\u662f\u9759\u6001\u4ee3\u7406\u7c7b\u90fd\u4e00\u5b9a\u8981\u63a5\u6536\u771f\u5b9e\u4e1a\u52a1\u5b9e\u73b0\u5b50\u7c7b\u5bf9\u8c61 \u4ee3\u7801\u5b9e\u73b0 import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Method ; import java.lang.reflect.Proxy ; // \u63a5\u53e3\u6807\u51c6 interface IMessage { void send (); } // \u4e1a\u52a1\u5b9e\u73b0\u7c7b class MessageImpl implements IMessage { @Override public void send () { System . out . println ( \"\u53d1\u9001\" ); } } // \u52a8\u6001\u4ee3\u7406\u7c7b class MyProxy implements InvocationHandler { private Object target ; // \u4fdd\u5b58\u771f\u5b9e\u4e1a\u52a1\u5bf9\u8c61 // \u771f\u5b9e\u4e1a\u52a1\u5bf9\u8c61\u4e0e\u4ee3\u7406\u4e1a\u52a1\u5bf9\u8c61\u4e4b\u95f4\u7684\u7ed1\u5b9a public Object bind ( Object target ){ this . target = target ; Class cls = target . getClass (); return Proxy . newProxyInstance ( cls . getClassLoader (), cls . getInterfaces (), this ); } @Override public Object invoke ( Object proxy , Method method , Object [] args ) throws Throwable { Object obj = null ; if ( this . isConnect ()) { obj = method . invoke ( this . target , args ); this . close (); } return obj ; } public void close () { } public boolean isConnect () { return true ; } } class Demo { public static void main ( String [] args ) { IMessage message =( IMessage ) new MyProxy (). bind ( new MessageImpl ()); message . send (); } } 119 CGLIB\u5b9e\u73b0\u4ee3\u7406\u8bbe\u8ba1\u6a21\u5f0f \u5982\u679c\u8981\u5b9e\u73b0\u4ee3\u7406\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f\u57fa\u4e8e\u63a5\u53e3\u7684\u5e94\u7528 CGLIB\u5f00\u53d1\u5305\u5b9e\u73b0\u57fa\u4e8e\u7c7b\u7684\u4ee3\u7406\u8bbe\u8ba1\u6a21\u5f0f Code Generation Library pom.xml \u5f15\u5165 < dependencies > < dependency > < groupId > cglib </ groupId > < artifactId > cglib </ artifactId > < version > 2.2.2 </ version > </ dependency > </ dependencies > \u4ee3\u7801\u5b9e\u73b0 import net.sf.cglib.proxy.Enhancer ; import net.sf.cglib.proxy.MethodInterceptor ; import net.sf.cglib.proxy.MethodProxy ; import java.lang.reflect.Method ; // \u4e1a\u52a1\u5b9e\u73b0\u7c7b class Message { public void send () { System . out . println ( \"\u53d1\u9001\" ); } } // \u52a8\u6001\u4ee3\u7406\u7c7b class MyProxy implements MethodInterceptor { private Object target ; // \u4fdd\u5b58\u771f\u5b9e\u4e1a\u52a1\u5bf9\u8c61 // \u771f\u5b9e\u4e1a\u52a1\u5bf9\u8c61\u4e0e\u4ee3\u7406\u4e1a\u52a1\u5bf9\u8c61\u4e4b\u95f4\u7684\u7ed1\u5b9a public MyProxy ( Object target ) { this . target = target ; } @Override public Object intercept ( Object o , Method method , Object [] args , MethodProxy methodProxy ) throws Throwable { Object obj = null ; if ( this . isConnect ()) { obj = method . invoke ( this . target , args ); this . close (); } return obj ; } public void close () { } public boolean isConnect () { return true ; } } class Demo { public static void main ( String [] args ) { Message message = new Message (); // \u771f\u5b9e\u4e3b\u4f53 Enhancer enhancer = new Enhancer (); // \u8d1f\u8d23\u4ee3\u7406\u64cd\u4f5c\u7684\u7a0b\u5e8f\u7c7b enhancer . setSuperclass ( message . getClass ()); // \u5047\u5b9a\u4e00\u4e2a\u7236\u7c7b enhancer . setCallback ( new MyProxy ( message )); Message proxyMessage = ( Message ) enhancer . create (); proxyMessage . send (); } } \u5efa\u8bae\uff1a\u57fa\u4e8e\u63a5\u53e3\u7684\u8bbe\u8ba1\u6bd4\u8f83\u5408\u7406 \u7b2c27 \u7ae0 \uff1a \u53cd\u5c04\u4e0eAnnotation 120 \u53cd\u5c04\u53d6\u5f97Annotation\u4fe1\u606f JDK > 1.5 \u4e0d\u540c\u7684Annotation \u6709\u4ed6\u7684\u5b58\u5728\u8303\u56f4 public enum RetentionPolicy { SOURCE , CLASS , RUNTIME } import java.lang.annotation.Annotation ; @Deprecated class Person { } class Demo { public static void main ( String [] args ) { Annotation [] annotations = Person . class . getAnnotations (); for ( Annotation a : annotations ){ System . out . println ( a ); // @java.lang.Deprecated() } } } 121 \u81ea\u5b9a\u4e49Annotation import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.reflect.InvocationTargetException ; import java.lang.reflect.Method ; // \u5b9a\u4e49\u8fd0\u884c\u65f6\u7b56\u7565 @Retention ( RetentionPolicy . RUNTIME ) @interface MyAnnotation { public String name (); public int age () default 23 ; // \u8bbe\u7f6e\u9ed8\u8ba4\u503c } class Message { @MyAnnotation ( name = \"Tom\" ) public void send ( String msg ){ System . out . println ( msg ); } } class Demo { public static void main ( String [] args ) throws Exception { Method method = Message . class . getDeclaredMethod ( \"send\" , String . class ); MyAnnotation annotation = method . getAnnotation ( MyAnnotation . class ); String name = annotation . name (); // Tom int age = annotation . age (); // 23 String msg = String . format ( \"[%s] %s \" , name , age ); method . invoke ( Message . class . getDeclaredConstructor (). newInstance (), msg ); // [Tom] 23 } } 122 \u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f\u4e0eAnnotation\u6574\u5408 import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.InvocationTargetException ; import java.lang.reflect.Method ; import java.lang.reflect.Proxy ; // \u6d88\u606f\u63a5\u53e3 interface IMessage { public void send ( String msg ); } // \u6d88\u606f\u5b9e\u73b0\u7c7b class MessageImpl implements IMessage { public void send ( String msg ) { System . out . println ( \"\u6d88\u606f\u53d1\u9001\" ); } } // \u52a8\u6001\u4ee3\u7406\u7c7b class MessageProxy implements InvocationHandler { private Object target ; public Object bind ( Object target ) { this . target = target ; return Proxy . newProxyInstance ( target . getClass (). getClassLoader (), target . getClass (). getInterfaces (), this ); } public Object invoke ( Object proxy , Method method , Object [] args ) throws Throwable { Object obj = null ; if ( this . connect ()) { obj = method . invoke ( this . target , args ); } this . close (); return obj ; } public boolean connect () { System . out . println ( \"\u6253\u5f00\u8fde\u63a5\" ); return true ; } public void close () { System . out . println ( \"\u5173\u95ed\u8fde\u63a5\" ); } } // \u5de5\u5382\u7c7b class Factory { private Factory () { } public static < T > T getInstance ( Class < T > clazz ) { try { return ( T ) new MessageProxy (). bind ( clazz . getDeclaredConstructor (). newInstance ()); } catch ( Exception e ) { e . printStackTrace (); return null ; } } } @Retention ( RetentionPolicy . RUNTIME ) @interface UseMessage { public Class <?> clazz (); } // \u5229\u7528\u6ce8\u89e3\u5b9e\u73b0\u7c7b\u7684\u4f7f\u7528 @UseMessage ( clazz = MessageImpl . class ) class MessageService { private IMessage message ; public MessageService () { UseMessage use = MessageService . class . getAnnotation ( UseMessage . class ); this . message = ( IMessage ) Factory . getInstance ( use . clazz ()); } public void send ( String msg ) { this . message . send ( msg ); } } class Demo { public static void main ( String [] args ) { MessageService message = new MessageService (); message . send ( \"\u53d1\u9001\u6d88\u606f\" ); } }","title":"\u7b2c21 \u7ae0 \uff1a \u8ba4\u8bc6\u53cd\u5c04\u673a\u5236"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#21","text":"","title":"\u7b2c21 \u7ae0 \uff1a \u8ba4\u8bc6\u53cd\u5c04\u673a\u5236"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#99","text":"Java\u7684\u7cbe\u9ad3\u6240\u5728 \u52a8\u6001\u83b7\u53d6\u4fe1\u606f\u4ee5\u53ca\u52a8\u6001\u8c03\u7528\u5bf9\u8c61\u65b9\u6cd5\u7684\u529f\u80fd \u6240\u6709\u6280\u672f\u5b9e\u73b0\u7684\u76ee\u6807\u53ea\u6709\u4e00\u70b9\uff1a\u91cd\u7528\u6027 \u6b63\uff1a\u7c7b -> \u5b9e\u4f8b\u5bf9\u8c61 \u53cd\uff1a\u5b9e\u4f8b\u5bf9\u8c61 -> \u7c7b \u627e\u5230\u5bf9\u8c61\u7684\u6839\u6e90 Object . getClass ()","title":"99 \u53cd\u5c04\u673a\u5236\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#100-class","text":"public final class Class < T > implements java . io . Serializable , GenericDeclaration , Type , AnnotatedElement \u8981\u5b9e\u4f8b\u5316\u7684\u7c7b class Person {} 1\u3001Object\u7c7b\u652f\u6301 Object\u7c7b\u53ef\u4ee5\u6839\u636e\u5b9e\u4f8b\u5316\u5bf9\u8c61\u83b7\u53d6Class\u5bf9\u8c61 \u7f3a\u70b9\uff1a \u5982\u679c\u60f3\u83b7\u5f97\u7c7b\u5bf9\u8c61\uff0c\u5219\u5fc5\u987b\u4ea7\u751f\u6307\u5b9a\u7c7b\u5bf9\u8c61\u540e\u624d\u80fd\u83b7\u5f97 Person person = new Person (); Class cls = person . getClass (); System . out . println ( cls . getName ()); // Person 2\u3001JVM\u76f4\u63a5\u652f\u6301 \u91c7\u7528 \u7c7b.class \u76f4\u63a5\u5b9e\u4f8b\u5316 \u5982\u679c\u8981\u91c7\u7528\u8fd9\u79cd\u6a21\u5f0f\uff0c\u5219\u5fc5\u987b\u5bfc\u5165\u7a0b\u5e8f\u6240\u5bf9\u5e94\u5f00\u53d1\u5305 Class cls = Person . class ; System . out . println ( cls . getName ()); // Person 3\u3001Class\u7c7b\u652f\u6301 Class\u7c7b\u4e2d\u63d0\u4f9b\u4e86static\u65b9\u6cd5 public static Class <?> forName ( String className ) \u7279\u70b9\uff1a \u76f4\u63a5\u4f7f\u7528\u5b57\u7b26\u4e32\u5f62\u5f0f\u5b9a\u4e49\u8981\u4f7f\u7528\u7684\u7c7b\u578b\uff0c \u7a0b\u5e8f\u4e0d\u9700\u8981\u7f16\u5199import\uff0c\u4e0d\u5b58\u5728\u5219\u629b\u51fa\u5f02\u5e38 Class cls = Class . forName ( \"Person\" ); System . out . println ( cls . getName ()); // Person","title":"100 Class\u7c7b\u5bf9\u8c61\u7684\u4e09\u79cd\u5b9e\u4f8b\u5316\u6a21\u5f0f"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#22","text":"","title":"\u7b2c22 \u7ae0 \uff1a \u53cd\u5c04\u5e94\u7528\u6848\u4f8b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#101","text":"\u83b7\u53d6Class\u5bf9\u8c61\u610f\u4e49\uff1a Class\u5bf9\u8c61\u63d0\u4f9b\u6709\u4e00\u4e2a\u5bf9\u8c61\u7684\u53cd\u5c04\u5b9e\u4f8b\u5316\u65b9\u6cd5 1\u3001JDK<1.9 public T newInstance () // \u7b49\u4ef7\u4e8e\u5173\u952e\u5b57new, \u53ea\u80fd\u8c03\u7528\u65e0\u53c2\u6784\u9020 JDK>=1.9\u4e4b\u540e\u5f03\u7528 \u793a\u4f8b Class cls = Class . forName ( \"Person\" ); System . out . println ( cls . newInstance ()); // Person@2503dbd3 2\u3001JDK>=1.9 public Constructor < T > getDeclaredConstructor ( Class <?>... parameterTypes ) \u793a\u4f8b Class cls = Class . forName ( \"Person\" ); System . out . println ( cls . getDeclaredConstructor (). newInstance ()); // Person@2503dbd3 \u4efb\u4f55\u60c5\u51b5\u4e0b\u5982\u679c\u8981\u5b9e\u4f8b\u5316\u5bf9\u8c61\u5219\u4e00\u5b9a\u8981\u8c03\u7528\u7c7b\u4e2d\u7684\u6784\u9020\u65b9\u6cd5","title":"101 \u53cd\u5c04\u5b9e\u4f8b\u5316\u5bf9\u8c61"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#102","text":"\u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f\uff1a \u901a\u8fc7\u5de5\u5382\u7c7b\u83b7\u53d6\u6307\u5b9a\u63a5\u53e3\u5b9e\u4f8b\u5316\u5bf9\u8c61 \u63a5\u53e3\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u4e3a\u4e0d\u540c\u7684\u5c42\u63d0\u4f9b\u6709\u4e00\u4e2a\u64cd\u4f5c\u7684\u6807\u51c6 \u5982\u679c\u76f4\u63a5\u5c06\u4e00\u4e2a\u5b50\u7c7b\u8bbe\u7f6e\u4e3a\u63a5\u53e3\u5b9e\u4f8b\u5316\u64cd\u4f5c\uff0c\u90a3\u4e48\u4e00\u5b9a\u4f1a\u6709\u8026\u5408 \u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f\u89e3\u51b3\u5b50\u7c7b\u4e0e\u5ba2\u6237\u7aef\u7684\u8026\u5408\u95ee\u9898 1\u3001\u9759\u6001\u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f \u5982\u679c\u5b50\u7c7b\u589e\u52a0\uff0c\u5de5\u5382\u7c7b\u4e00\u5b9a\u8981\u505a\u51fa\u4fee\u6539 \u89e3\u51b3\u4e00\u4e2a\u5b50\u7c7b\u5b9e\u4f8b\u5316 IMessage - NetMessage - CloudMessage Factory // \u901a\u8fc7\u4f20\u5165\u7684\u53c2\u6570\u83b7\u53d6\u5b50\u7c7b Client interface IMessage { public void send ( String message ); } class Message implements IMessage { @Override public void send ( String message ) { System . out . println ( \"\u53d1\u9001: \" + message ); } } class Factory { private Factory () { } public static IMessage getInstance ( String className ) { if ( \"Message\" . equalsIgnoreCase ( className )) { return new Message (); } return null ; } } public class Demo { public static void main ( String [] args ) { IMessage message = Factory . getInstance ( \"message\" ); message . send ( \"nihao\" ); } } 2\u3001\u5229\u7528\u53cd\u5c04\u5b9e\u73b0\u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f \u89e3\u51b3\u4e00\u4e2a\u63a5\u53e3\u591a\u4e2a\u5b50\u7c7b\u5b9e\u4f8b\u5316 \u4fee\u6539\u5de5\u5382\u7c7b\u4ee3\u7801 class Factory { private Factory () { } public static IMessage getInstance ( String className ) { IMessage message = null ; try { message = ( IMessage ) Class . forName ( className ). getDeclaredConstructor (). newInstance (); } catch ( Exception e ) { e . printStackTrace (); } return message ; } } 3\u3001\u6cdb\u578b\u53cd\u5c04\u5b9e\u73b0\u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f \u89e3\u51b3\u6240\u6709\u63a5\u53e3\u5b50\u7c7b\u5b9e\u4f8b\u5316 class Factory { private Factory () { } public static < T > T getInstance ( String className , Class < T > clazz ) { T instance = null ; try { instance = ( T ) Class . forName ( className ). getDeclaredConstructor (). newInstance (); } catch ( Exception e ) { e . printStackTrace (); } return instance ; } } public class Demo { public static void main ( String [] args ) { IMessage message = Factory . getInstance ( \"Message\" , IMessage . class ); message . send ( \"nihao\" ); } }","title":"102 \u53cd\u5c04\u4e0e\u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#103","text":"\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\uff1a \u7c7b\u7684\u6784\u9020\u51fd\u6570\u79c1\u6709\u5316\uff0c\u901a\u8fc7static\u65b9\u6cd5\u83b7\u53d6\u5b9e\u4f8b\u5316\u5bf9\u8c61 -\u61d2\u6c49\u5f0f -\u997f\u6c49\u5f0f class Singleton { private static Singleton instance = null ; private Singleton () { } public static Singleton getInstance (){ if ( instance == null ){ instance = new Singleton (); } return instance ; } public void print (){ System . out . println ( \"Singleton\" ); } } class Demo { public static void main ( String [] args ) { Singleton instance = Singleton . getInstance (); instance . print (); } } \u591a\u7ebf\u7a0b\u4e0b\u6267\u884c,\u4ea7\u751f\u591a\u4e2a\u5b9e\u4f8b\u5316\u5bf9\u8c61 class Singleton { private static Singleton instance = null ; private Singleton () { System . out . println ( \"Singleton \" + Thread . currentThread (). getName ()); } public static Singleton getInstance (){ if ( instance == null ){ instance = new Singleton (); } return instance ; } public void print (){ System . out . println ( \"Singleton print\" ); } } class Demo { public static void main ( String [] args ) { for ( int i = 0 ; i < 3 ; i ++) { new Thread (()->{ Singleton instance = Singleton . getInstance (); instance . print (); }, \"instance\" + i ). start (); } /** * \u8f93\u51fa\u7ed3\u679c * Singleton instance0 * Singleton instance1 * Singleton print * Singleton instance2 * Singleton print * Singleton print */ } } \u4fee\u6539\u4e3a\u540c\u6b65\u5904\u7406 class Singleton { // volatile \u4e0d\u4f7f\u7528\u526f\u672c private static volatile Singleton instance = null ; private Singleton () { System . out . println ( \"Singleton \" + Thread . currentThread (). getName ()); } // synchronized\u4e0d\u5728\u51fd\u6570\u4e0a\u52a0\uff0c\u800c\u662f\u5728\u5185\u90e8\u4ee3\u7801\u5757\u52a0\uff0c\u63d0\u9ad8\u6267\u884c\u6548\u7387 public static Singleton getInstance (){ if ( instance == null ){ synchronized ( Singleton . class ){ if ( instance == null ) { instance = new Singleton (); } } } return instance ; } public void print (){ System . out . println ( \"Singleton print\" ); } } class Demo { public static void main ( String [] args ) { for ( int i = 0 ; i < 3 ; i ++) { new Thread (()->{ Singleton instance = Singleton . getInstance (); instance . print (); }, \"instance\" + i ). start (); } /** * \u8f93\u51fa\u7ed3\u679c * Singleton instance1 * Singleton print * Singleton print * Singleton print */ } } \u9762\u8bd5\u9898\uff1a\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f 1\u3001\u5b9e\u73b0\u997f\u6c49\u5f0f\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u6784\u9020\u51fd\u6570\u79c1\u6709\u5316 2\u3001Java\u4e2d\u7528\u5230\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\u7684\u7c7b\uff1a Runtime, Pattern, Spring\u6846\u67b6 3\u3001\u61d2\u6c49\u5f0f\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\u7684\u95ee\u9898","title":"103 \u53cd\u5c04\u4e0e\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#23","text":"","title":"\u7b2c23 \u7ae0 \uff1a \u53cd\u5c04\u4e0e\u7c7b\u64cd\u4f5c"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#104","text":"\u53cd\u5c04\u673a\u5236\u5904\u7406\u4e0d\u4ec5\u4ec5\u53ea\u662f\u4e00\u4e2a\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u5904\u7406\uff0c \u66f4\u591a\u60c5\u51b5\u4e0b\u8fd8\u6709\u7c7b\u7684\u7ec4\u6210\u7ed3\u6784\u64cd\u4f5c \u4efb\u4f55\u4e00\u4e2a\u7c7b\u7684\u7ec4\u6210\u7ed3\u6784\uff1a \u7236\u7c7b\u3001\u7236\u63a5\u53e3\u3001\u5305\u3001\u5c5e\u6027\u3001\u65b9\u6cd5\uff08\u6784\u9020\u65b9\u6cd5\uff0c\u666e\u901a\u65b9\u6cd5\uff09 // \u83b7\u53d6\u5305\u540d public Package getPackage () // \u83b7\u53d6\u7ee7\u627f\u7236\u7c7b public native Class <? super T > getSuperclass () // \u83b7\u53d6\u5b9e\u73b0\u7236\u63a5\u53e3 public Class <?>[] getInterfaces () import java.util.Arrays ; abstract class AbstractHuman { } interface IConnectService { public boolean isConnect (); } interface IChannelService { public void send (); } class Person extends AbstractHuman implements IConnectService , IChannelService { @Override public boolean isConnect () { return true ; } @Override public void send () { if ( this . isConnect ()){ System . out . println ( \"\u53d1\u9001\" ); } } } class Demo { public static void main ( String [] args ) { Class <?> cls = Person . class ; System . out . println ( cls . getPackage ()); // null System . out . println ( cls . getSuperclass ()); // class AbstractHuman System . out . println ( Arrays . toString ( cls . getInterfaces ())); // [interface IConnectService, interface IChannelService] } }","title":"104 \u53cd\u5c04\u83b7\u53d6\u7c7b\u7ed3\u6784\u4fe1\u606f"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#105","text":"\u5b9e\u4f8b\u5316\u65b9\u6cd5 // \u83b7\u53d6\u6307\u5b9a\u6784\u9020\u65b9\u6cd5 public Constructor < T > getConstructor ( Class <?>... parameterTypes ) public Constructor < T > getDeclaredConstructor ( Class <?>... parameterTypes ) // \u83b7\u53d6\u5168\u90e8\u6784\u9020\u65b9\u6cd5 public Constructor <?>[] getConstructors () public Constructor <?>[] getDeclaredConstructors () Class . getDeclaredConstructor (). newInstance () class Person { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } class Demo { public static void main ( String [] args ) throws Exception { Class <?> cls = Person . class ; // \u83b7\u53d6\u6709\u53c2\u6784\u9020 Constructor constructor = cls . getConstructor ( String . class , int . class ); Object obj = constructor . newInstance ( \"\u5c0f\u5f3a\" , 23 ); System . out . println ( obj ); // Person{name='\u5c0f\u5f3a', age=23} } } \u4f7f\u7528\u53cd\u5c04\u7684\u7c7b\u6700\u597d\u63d0\u4f9b\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\uff0c\u4fbf\u4e8e\u7edf\u4e00\u64cd\u4f5c \u7ee7\u627f\u5173\u7cfb AccessibleObject ( AnnotatedElement ) - Executable - Constructor - Method - Field ( Member )","title":"105 \u53cd\u5c04\u8c03\u7528\u6784\u9020\u65b9\u6cd5"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#106","text":"\u4e86\u89e3\u5373\u53ef // \u83b7\u53d6\u6307\u5b9a\u65b9\u6cd5 public Method getMethod ( String name , Class <?>... parameterTypes ) // \u83b7\u53d6\u5168\u90e8\u65b9\u6cd5 public Method [] getMethods () // \u83b7\u53d6\u672c\u7c7b\u65b9\u6cd5 public Method getDeclaredMethod ( String name , Class <?>... parameterTypes ) // \u83b7\u53d6\u672c\u7c7b\u5168\u90e8\u65b9\u6cd5 public Method [] getDeclaredMethods () import java.lang.reflect.Method ; import java.lang.reflect.Modifier ; import java.util.Arrays ; class Person { public String geMessage ( String message ) { return message ; } } class Demo { public static void main ( String [] args ) throws Exception { Class <?> cls = Person . class ; Method method = cls . getMethod ( \"geMessage\" , String . class ); System . out . println ( method ); // public java.lang.String Person.geMessage(java.lang.String) System . out . println ( Modifier . toString ( method . getModifiers ())); // public System . out . println ( method . getReturnType (). getName ()); // java.lang.String System . out . println ( method . getName ()); // geMessage System . out . println ( Arrays . toString ( method . getParameterTypes ())); // [class java.lang.String] } } Method\u7c7b \u91cd\u8981\u65b9\u6cd5 invoke // \u53cd\u5c04\u8c03\u7528\u7c7b\u4e2d\u7684\u65b9\u6cd5 public Object invoke ( Object obj , Object ... args ) \u6574\u4e2a\u64cd\u4f5c\u5f62\u5f0f\u4e0a\u6ca1\u6709\u4efb\u4f55\u660e\u786e\u7684\u7c7b\u5bf9\u8c61\u4ea7\u751f\uff0c\u4f9d\u9760\u53cd\u5c04\u64cd\u4f5c\uff0c\u907f\u514d\u8026\u5408\u95ee\u9898 import java.lang.reflect.Method ; class Person { private String name ; public Person () { } public Person ( String name ) { this . name = name ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } } class Demo { public static void main ( String [] args ) throws Exception { Class <?> cls = Class . forName ( \"Person\" ); String key = \"name\" ; String value = \"Tom\" ; // \u83b7\u53d6\u6307\u5b9a\u65b9\u6cd5 Method setNameMethod = cls . getMethod ( \"setName\" , String . class ); Method getNameMethod = cls . getMethod ( \"getName\" ); // \u8c03\u7528\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316 Object obj = cls . getDeclaredConstructor (). newInstance (); setNameMethod . invoke ( obj , value ); // \u7b49\u4ef7\u4e8e person.setName(value) System . out . println ( getNameMethod . invoke ( obj )); // Tom } }","title":"106 \u53cd\u5c04\u8c03\u7528\u666e\u901a\u65b9\u6cd5"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#107","text":"// \u83b7\u53d6\u672c\u7c7b\u5168\u90e8\u6210\u5458 public Field [] getDeclaredFields () // \u83b7\u53d6\u672c\u7c7b\u6307\u5b9a\u6210\u5458 public Field getDeclaredField ( String name ) // \u83b7\u53d6\u7236\u7c7b\u5168\u90e8\u6210\u5458 public Field [] getFields () // \u83b7\u53d6\u7236\u7c7b\u6307\u5b9a\u6210\u5458 public Field getField ( String name ) Field \u7c7b // \u8bbe\u7f6e\u5c5e\u6027\u5185\u5bb9 public void set ( Object obj , Object value ) // \u83b7\u53d6\u5c5e\u6027\u5185\u5bb9 public Object get ( Object obj ) // \u89e3\u9664\u5c01\u88c5 public void setAccessible ( boolean flag ) import java.lang.reflect.Field ; class Person { private String name ; public Person () { } } class Demo { public static void main ( String [] args ) throws Exception { Class <?> cls = Class . forName ( \"Person\" ); Object obj = cls . getDeclaredConstructor (). newInstance (); Field nameField = cls . getDeclaredField ( \"name\" ); // \u89e3\u9664\u5c01\u88c5\u6027\uff0c\u8bbf\u95ee\u79c1\u6709\u6210\u5458 nameField . setAccessible ( true ); nameField . set ( obj , \"Tom\" ); System . out . println ( nameField . get ( obj )); // Tom } } \u4e0d\u5efa\u8bae\u6253\u7834\u5c01\u88c5\u673a\u5236 Field\u7c7b\u91cd\u8981\u65b9\u6cd5 getType public Class <?> getType () Class <?> cls = Class . forName ( \"Person\" ); Field nameField = cls . getDeclaredField ( \"name\" ); System . out . println ( nameField . getType ()); // class java.lang.String System . out . println ( nameField . getType (). getName ()); // \u83b7\u53d6\u5305.\u7c7b java.lang.String System . out . println ( nameField . getType (). getSimpleName ()); // \u83b7\u53d6\u7c7b\u540d\u79f0 String","title":"107 \u53cd\u5c04\u8c03\u7528\u6210\u5458"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#108-unsafe","text":"\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6\u5bf9\u8c61\uff0c\u5e76\u4e14\u76f4\u63a5\u4f7f\u7528\u5e95\u5c42\u7684C++\u4ee3\u7801 \u53ef\u4ee5\u7ed5\u8fc7JVM\u76f8\u5173\u7ba1\u7406\u673a\u5236\uff0c\u5c31\u65e0\u6cd5\u4f7f\u7528\u5185\u5b58\u7ba1\u7406\u548c\u5783\u573e\u56de\u6536 Unsafe \u7c7b public final class Unsafe { private static final Unsafe theUnsafe ; private Unsafe () {} } Unsafe\u7ed5\u8fc7\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u7ba1\u7406 import sun.misc.Unsafe ; import java.lang.reflect.Field ; // \u5c06\u6784\u9020\u51fd\u6570\u79c1\u6709\u5316 class Person { private Person (){}; public void print (){ System . out . println ( \"hi\" ); } } class Demo { public static void main ( String [] args ) throws Exception { Field theUnsafeField = Unsafe . class . getDeclaredField ( \"theUnsafe\" ); theUnsafeField . setAccessible ( true ); Unsafe unsafeObject = ( Unsafe ) theUnsafeField . get ( null ); // \u901a\u8fc7unsafe \u5b9e\u4f8b\u5316\u6784\u9020\u51fd\u6570\u79c1\u6709\u5316\u7684\u5bf9\u8c61 Person person = ( Person ) unsafeObject . allocateInstance ( Person . class ); person . print (); // hi } } \u5982\u679c\u4e0d\u662f\u5fc5\u987b\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528 Unsafe \u7c7b\u4e5f\u662f\u5355\u4f8b\u8bbe\u8ba1","title":"108 Unsafe\u5de5\u5177\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#24-java","text":"","title":"\u7b2c24 \u7ae0 \uff1a \u53cd\u5c04\u4e0e\u7b80\u5355Java\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#109","text":"\u7b80\u5355Java\u7c7b\uff0csetter\uff0cgetter\u8fc7\u591a\uff0c\u4ee3\u7801\u91cd\u590d \u901a\u8fc7\u53cd\u5c04\uff08Object\u7c7b\u76f4\u63a5\u64cd\u4f5c\u5c5e\u6027\u6216\u65b9\u6cd5\uff09\u5b9e\u73b0\u76f8\u540c\u529f\u80fd\u7c7b\u7684\u91cd\u590d\u64cd\u4f5c\u7684\u62bd\u8c61\u5904\u7406","title":"109 \u4f20\u7edf\u5c5e\u6027\u8d4b\u503c\u5f0a\u7aef"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#110","text":"\u7c7b\u8bbe\u8ba1\u7684\u57fa\u672c\u673a\u6784\uff1a \u5e94\u8be5\u7531\u4e00\u4e2a\u4e13\u95e8\u7684ClassInstanceFactory\u7c7b\u8d1f\u8d23\u53cd\u5c04\u5904\u7406 \u63a5\u6536\u53cd\u5c04\u5bf9\u8c61\u4e0e\u8981\u8bbe\u7f6e\u7684\u5c5e\u6027\u5185\u5bb9\uff0c\u540c\u65f6\u53ef\u4ee5\u83b7\u53d6\u6307\u5b9a\u7c7b\u7684\u5b9e\u4f8b\u5316\u5bf9\u8c61 class ClassInstanceFactory { private ClassInstanceFactory (){} /** * \u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u521b\u5efa\u65b9\u6cd5\uff0c\u8be5\u5bf9\u8c61\u53ef\u4ee5\u6839\u636e\u4f20\u5165\u7684\u5b57\u7b26\u4e32\u7ed3\u6784\u201c\u5c5e\u6027:\u5185\u5bb9|\u5c5e\u6027:\u5185\u5bb9\u201d * @param clazz \u8981\u8fdb\u884c\u53cd\u5c04\u5b9e\u4f8b\u5316\u7684Class\u5bf9\u8c61\uff0c\u6709Class\u5c31\u53ef\u4ee5\u53cd\u5c04\u5b9e\u4f8b\u5316\u5bf9\u8c61 * @param value \u8981\u8bbe\u7f6e\u7ed9\u5bf9\u8c61\u7684\u5c5e\u6027\u5185\u5bb9 * @return \u4e00\u4e2a\u5df2\u7ecf\u914d\u7f6e\u597d\u5c5e\u6027\u5185\u5bb9\u7684Java\u7c7b\u5bf9\u8c61 */ public static < T > T getInstance ( Class clazz , String value ){ return null ; } }","title":"110 \u5c5e\u6027\u81ea\u52a8\u8d4b\u503c\u5b9e\u73b0\u601d\u8def"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#111","text":"\u5b8c\u62102\u9879\u5185\u5bb9\uff1a 1\u3001\u901a\u8fc7\u53cd\u5c04\u8fdb\u884c\u6307\u5b9a\u7c7b\u5bf9\u8c61\u7684\u5b9e\u4f8b\u5316\u5904\u7406 2\u3001\u8fdb\u884c\u5185\u5bb9\u8bbe\u7f6e Field Method \u5fc5\u987b\u8981\u6709\u65e0\u53c2\u6784\u9020 \u5904\u7406\u6d41\u7a0b Class <? > - Field - Method \u8c03\u7528setter Utils - BeanUtils \u83b7\u53d6\u7c7b\u578b\uff0c\u5c5e\u6027\u8bbe\u7f6e - StringUtils \u9996\u5b57\u6bcd\u5927\u5199 ClassInstanceFactory < T > \u5bf9\u8c61\u5b9e\u4f8b\u5316\u5e76\u8bbe\u7f6e\u5c5e\u6027 main \u6d4b\u8bd5\u7c7b \u5373\u4f7f\u7c7b\u4e2d\u7684\u5c5e\u6027\u518d\u591a\uff0c\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5c5e\u6027\u8d4b\u503c StringUtil.java package util ; class StringUtil { /** * \u9996\u5b57\u6bcd\u5927\u5199 */ public static String capitalize ( String str ){ if ( str == null || \"\" . equals ( str )){ return str ; } if ( str . length () == 1 ){ return str . toUpperCase (); } else { return str . substring ( 0 , 1 ). toUpperCase () + str . substring ( 1 ); } } } BeanUtil.java package util ; import java.lang.reflect.Field ; import java.lang.reflect.Method ; public class BeanUtil { /** * \u5bf9\u8c61\u5c5e\u6027\u8d4b\u503c * @param obj * @param value \u6570\u636e\u7ed3\u6784\"key:value|key:value\" */ public static void setValue ( Object obj , String value ){ String [] attrs = value . split ( \"\\\\|\" ); // System.out.println(Arrays.toString(attrs)); for ( String attr : attrs ){ String [] keyValue = attr . split ( \":\" ); String key = keyValue [ 0 ]; String val = keyValue [ 1 ]; String setName = \"set\" + StringUtil . capitalize ( key ); // System.out.println(key + val + setName); try { Field field = obj . getClass (). getDeclaredField ( key ); Method method = obj . getClass (). getDeclaredMethod ( setName , field . getType ()); method . setAccessible ( true ); method . invoke ( obj , val ); } catch ( Exception e ){ e . printStackTrace (); } } } } Demo.java import util.BeanUtil ; class Person { private String name ; public Person () { } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + '}' ; } } /** * \u5c5e\u6027\u8d4b\u503c\u5de5\u5382\u7c7b */ class ClassInstanceFactory { private ClassInstanceFactory (){} public static < T > T getInstance ( Class < T > clazz , String value ) { try { Object obj = clazz . getDeclaredConstructor (). newInstance (); BeanUtil . setValue ( obj , value ); return ( T ) obj ; } catch ( Exception e ){ e . printStackTrace (); return null ; } } } class Demo { public static void main ( String [] args ) { Person person = ClassInstanceFactory . getInstance ( Person . class , \"name:Tom\" ); System . out . println ( person ); // Person{name='Tom'} } }","title":"111 \u5355\u7ea7\u5c5e\u6027\u8d4b\u503c"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#112","text":"\u7b80\u5355Java\u7c7b\u4e2d\u5c5e\u6027\u7c7b\u578b long\uff08Long\uff09 int(Integer) double(Double) String \u5728 BeanUtil.java\u4e2d\u6dfb\u52a0\u7c7b\u578b\u8f6c\u6362\u65b9\u6cd5 package util ; import java.lang.reflect.Field ; import java.lang.reflect.Method ; public class BeanUtil { public static void setValue ( Object obj , String value ){ String [] attrs = value . split ( \"\\\\|\" ); for ( String attr : attrs ){ String [] keyValue = attr . split ( \":\" ); String key = keyValue [ 0 ]; String val = keyValue [ 1 ]; String setName = \"set\" + StringUtil . capitalize ( key ); try { Field field = obj . getClass (). getDeclaredField ( key ); Method method = obj . getClass (). getDeclaredMethod ( setName , field . getType ()); method . setAccessible ( true ); Object convertVal = convertValue ( field . getType (). getName (), val ); method . invoke ( obj , convertVal ); } catch ( Exception e ){ e . printStackTrace (); } } } public static Object convertValue ( String type , String value ){ if ( \"java.lang.String\" . equals ( type )){ return value ; } else if ( \"int\" . equals ( type )){ return Integer . parseInt ( value ); } else { return null ; } } } Person\u7c7b\u6dfb\u52a0int\u7c7b\u578b\u7684age\u5c5e\u6027\uff0c\u548c\u4fee\u6539\u6d4b\u8bd5Demo\u7c7b\u4f20\u5165\u53c2\u6570 import util.BeanUtil ; class Person { private String name ; private int age ; public void setAge ( int age ) { this . age = age ; } public Person () { } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } class Demo { public static void main ( String [] args ) { Person person = ClassInstanceFactory . getInstance ( Person . class , \"name:Tom|age:23\" ); System . out . println ( person ); // Person{name='Tom', age=23} } } \u5982\u679c\u8981\u505a\u4e00\u4e2a\u5b8c\u6574\u7684\u4ea7\u54c1\uff0c\u9700\u8981\u8003\u8651\u6240\u6709\u53ef\u80fd\u7684\u7c7b\u578b","title":"112 \u8bbe\u7f6e\u591a\u79cd\u6570\u636e\u7c7b\u578b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#113","text":"\u4f8b\u5982\uff1a \u4e00\u4e2a\u5458\u5de5\u5c5e\u4e8e\u4e00\u4e2a\u90e8\u95e8\uff0c\u4e00\u4e2a\u90e8\u95e8\u5c5e\u4e8e\u4e00\u4e2a\u516c\u53f8 \u7ea6\u5b9a\u4f7f\u7528 . \u4f5c\u4e3a\u7ea7\u8054\u5173\u7cfb eg: company . dept . dname : \u8d22\u52a1\u90e8 \u8003\u8651\u4ee3\u7801\u7b80\u6d01\u6027","title":"113 \u7ea7\u8054\u5bf9\u8c61\u5b9e\u4f8b\u5316"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#114","text":"\u5b8c\u6574\u4ee3\u7801 StringUtil.java package util ; class StringUtil { /** * \u9996\u5b57\u6bcd\u5927\u5199 */ public static String capitalize ( String str ){ if ( str == null || \"\" . equals ( str )){ return str ; } if ( str . length () == 1 ){ return str . toUpperCase (); } else { return str . substring ( 0 , 1 ). toUpperCase () + str . substring ( 1 ); } } } BeanUtil.java package util ; import java.lang.reflect.Constructor ; import java.lang.reflect.Field ; import java.lang.reflect.Method ; public class BeanUtil { /** * \u5bf9\u8c61\u5c5e\u6027\u8d4b\u503c * * @param values \u6570\u636e\u7ed3\u6784\"key:value|key.subKey.subKey:value\" */ public static void setValues ( Object obj , String values ) { String [] attrs = values . split ( \"\\\\|\" ); for ( String attr : attrs ) { String [] keyValue = attr . split ( \":\" ); String key = keyValue [ 0 ]; String val = keyValue [ 1 ]; try { // \u7ea7\u8054\u5173\u7cfb\uff0c\u901a\u8fc7\u70b9. \u5206\u9694 eg: company.name if ( key . contains ( \".\" )) { String [] objKeys = key . split ( \"\\\\.\" ); Object currentObject = obj ; // \u5bf9\u8c61\u94fe for ( int i = 0 ; i < objKeys . length - 1 ; i ++) { String objKey = objKeys [ i ]; Object tempObject = getValue ( currentObject , objKey ); // \u6ca1\u6709\u5b9e\u4f8b\u5316 if ( tempObject == null ) { tempObject = getFieldInstance ( currentObject , objKey ); setValue ( currentObject , objKey , tempObject ); } currentObject = tempObject ; } // \u6700\u540e\u4e00\u4e2a\u5c31\u662f\u5c5e\u6027 String attrKey = objKeys [ objKeys . length - 1 ]; setValue ( currentObject , attrKey , convertFieldValue ( currentObject , attrKey , val )); } // \u5355\u7ea7\u5173\u7cfb else { setValue ( obj , key , convertFieldValue ( obj , key , val )); } } catch ( Exception e ) { e . printStackTrace (); } } } /** * \u7ed9\u5bf9\u8c61\u8bbe\u7f6e\u5c5e\u6027\u503c */ public static void setValue ( Object obj , String key , Object value ) { try { Field field = obj . getClass (). getDeclaredField ( key ); String setName = \"set\" + StringUtil . capitalize ( key ); Method method = obj . getClass (). getDeclaredMethod ( setName , field . getType ()); method . setAccessible ( true ); method . invoke ( obj , value ); } catch ( Exception e ) { e . printStackTrace (); } } /** * \u83b7\u53d6\u5bf9\u8c61\u5c5e\u6027\u503c */ public static Object getValue ( Object obj , String key ) { Object value = null ; try { String getName = \"get\" + StringUtil . capitalize ( key ); Method getMethod = obj . getClass (). getDeclaredMethod ( getName ); getMethod . setAccessible ( true ); value = getMethod . invoke ( obj ); } catch ( Exception e ) { e . printStackTrace (); } return value ; } /** * \u83b7\u53d6\u5bf9\u8c61\u5c5e\u6027\u5bf9\u5e94\u7c7b\u7684\u5b9e\u4f8b\u5316\u5bf9\u8c61 */ public static Object getFieldInstance ( Object obj , String key ) { Object fieldObj = null ; try { Field field = obj . getClass (). getDeclaredField ( key ); Constructor constructor = field . getType (). getConstructor (); constructor . setAccessible ( true ); fieldObj = constructor . newInstance (); } catch ( Exception e ) { e . printStackTrace (); } return fieldObj ; } /** * \u8f6c\u6362\u5b57\u7b26\u4e32\u4e3a\u5bf9\u5e94\u7c7b\u578b\u7684\u503c */ public static Object convertValue ( String type , String value ) { if ( \"java.lang.String\" . equals ( type )) { return value ; } else if ( \"int\" . equals ( type )) { return Integer . parseInt ( value ); } else { return null ; } } public static Object convertFieldValue ( Object obj , String key , String value ) { Object val = null ; try { Field field = obj . getClass (). getDeclaredField ( key ); val = convertValue ( field . getType (). getName (), value ); } catch ( Exception e ) { e . printStackTrace (); } return val ; } } Demo.java import util.BeanUtil ; class Person { private String name ; private int age ; private Company company ; public Person () { } public void setAge ( int age ) { this . age = age ; } public Company getCompany () { return company ; } public void setName ( String name ) { this . name = name ; } public void setCompany ( Company company ) { this . company = company ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + \", company=\" + company + '}' ; } } class Dept { private String name ; public Dept () { } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"Dept{\" + \"name='\" + name + '\\'' + '}' ; } } class Company { private String name ; private Dept dept ; public Company () { } public void setName ( String name ) { this . name = name ; } public String getName () { return name ; } public void setDept ( Dept dept ) { this . dept = dept ; } public Dept getDept () { return dept ; } @Override public String toString () { return \"Company{\" + \"name='\" + name + '\\'' + \", dept=\" + dept + '}' ; } } /** * \u5c5e\u6027\u8d4b\u503c\u5de5\u5382\u7c7b */ class ClassInstanceFactory { private ClassInstanceFactory () { } public static < T > T getInstance ( Class < T > clazz , String values ) { try { Object obj = clazz . getDeclaredConstructor (). newInstance (); BeanUtil . setValues ( obj , values ); return ( T ) obj ; } catch ( Exception e ) { e . printStackTrace (); return null ; } } } class Demo { public static void main ( String [] args ) { String values = \"name:Tom|age:23|company.name:Tech|company.dept.name:law\" ; Person person = ClassInstanceFactory . getInstance ( Person . class , values ); System . out . println ( person ); // Person{name='Tom', age=23, company=Company{name='Tech', dept=Dept{name='law'}}} } }","title":"114 \u7ea7\u8054\u5c5e\u6027\u8d4b\u503c"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#25-classloader","text":"","title":"\u7b2c25 \u7ae0 \uff1a ClassLoader\u7c7b\u52a0\u8f7d\u5668"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#115-classloader","text":"\u7cfb\u7edf\u73af\u5883\u53d8\u91cf CLASSPATH JVM -> ClassLoader -> CLASSPATH -> . class \u52a0\u8f7d\u5668\uff0c\u7531\u4e0a\u81f3\u4e0b\u6267\u884c Bootstrap \u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668 PlatformClassLoader \u5e73\u53f0\u7c7b\u52a0\u8f7d\u5668 AppClassLoader \u5e94\u7528\u7a0b\u5e8f\u52a0\u8f7d\u5668 \u81ea\u5b9a\u4e49\u7c7b\u52a0\u8f7d\u5668\uff08\u78c1\u76d8\u3001\u7f51\u7edc\uff09 \u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668\u90fd\u662f\u6839\u636eCLASSPATH\u8def\u5f84\u67e5\u627e\u7c7b\u52a0\u8f7d \u5e94\u7528\u573a\u666f\uff1a \u5ba2\u6237\u7aef\u52a8\u6001\u66f4\u65b0\u670d\u52a1\u5668\u7aef\u7684\u4ee3\u7801 Java\u7c7b\u52a0\u8f7d\u5668\uff1a\u53cc\u4eb2\u52a0\u8f7d\u673a\u5236 \u4e3a\u4e86\u4fdd\u8bc1\u7cfb\u7edf\u5b89\u5168\u6027\uff0c\u5f00\u53d1\u8005\u81ea\u5b9a\u4e49\u7c7b\u4e0e\u7cfb\u7edf\u7c7b\u91cd\u540d\uff0c\u4e0d\u4f1a\u88ab\u52a0\u8f7d /demo/Person.java public class Person { public void sayHello (){ System . out . println ( \"hello\" ); } } MyClassLoader.java import java.io.* ; import java.lang.reflect.InvocationTargetException ; import java.lang.reflect.Method ; class MyClassLoader extends ClassLoader { private static final String PERSON_CLASS_PATH = \"/demo\" + File . separator + \"Person.class\" ; public Class <?> loadMyClass ( String className ) throws IOException { byte [] data = this . loadClassData (); if ( data != null ) { return super . defineClass ( className , data , 0 , data . length ); } return null ; } public byte [] loadClassData () throws IOException { InputStream input = null ; ByteArrayOutputStream bos = new ByteArrayOutputStream (); // \u5c06\u6570\u636e\u52a0\u8f7d\u5230\u5185\u5b58 byte [] data = null ; byte [] temp = new byte [ 1024 ]; int len = 0 ; try { input = new FileInputStream ( PERSON_CLASS_PATH ); while (( len = input . read ( temp )) != - 1 ) { bos . write ( temp , 0 , len ); } // \u8bfb\u53d6\u6240\u6709\u7684\u5b57\u8282 data = bos . toByteArray (); } catch ( Exception e ) { e . printStackTrace (); } finally { if ( input != null ) { input . close (); } if ( bos != null ) { bos . close (); } } return data ; } } class Demo { public static void main ( String [] args ) throws Exception { MyClassLoader loader = new MyClassLoader (); Class <?> cls = loader . loadMyClass ( \"Person\" ); Object obj = cls . getDeclaredConstructor (). newInstance (); Method method = cls . getDeclaredMethod ( \"sayHello\" ); method . invoke ( obj ); // hello } }","title":"115 ClassLoader\u7c7b\u52a0\u8f7d\u5668\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#26","text":"","title":"\u7b2c26 \u7ae0 \uff1a \u53cd\u5c04\u4e0e\u4ee3\u7406\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#117","text":"\u4f20\u7edf\u4ee3\u7406\u8bbe\u8ba1 \u5fc5\u987b\u6709\u63a5\u53e3 \u6807\u51c6\u7684\u4ee3\u7406\u8bbe\u8ba1 // \u63a5\u53e3\u6807\u51c6 interface IMessage { void send (); } // \u4e1a\u52a1\u5b9e\u73b0\u7c7b class MessageImpl implements IMessage { @Override public void send () { System . out . println ( \"\u53d1\u9001\" ); } } // \u4ee3\u7406\u7c7b class MessageProxy implements IMessage { private IMessage message ; public MessageProxy ( IMessage message ) { this . message = message ; } @Override public void send () { if ( this . isConnect ()) { this . message . send (); } } public void close () { } public boolean isConnect () { return true ; } } class Demo { public static void main ( String [] args ) { IMessage message = new MessageProxy ( new MessageImpl ()); message . send (); } } \u5ba2\u6237\u7aef\u548c\u63a5\u53e3\u5b50\u7c7b\u4ea7\u751f\u4e86\u8026\u5408 \u6700\u597d\u5f15\u5165\u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f\u8fdb\u884c\u4ee3\u7406\u5bf9\u8c61\u83b7\u53d6 \u9759\u6001\u4ee3\u7406\u7c7b\uff1a \u4e00\u4e2a\u4ee3\u7406\u7c7b\u53ea\u4e3a\u4e00\u4e2a\u63a5\u53e3\u670d\u52a1","title":"117 \u9759\u6001\u4ee3\u7406\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#118","text":"\u6700\u597d\u7684\u505a\u6cd5\u662f\u4e3a\u6240\u6709\u529f\u80fd\u4e00\u81f4\u7684\u4e1a\u52a1\u64cd\u4f5c\u63a5\u53e3\u63d0\u4f9b\u7edf\u4e00\u7684\u4ee3\u7406\u5904\u7406\u64cd\u4f5c \u4e0d\u7ba1\u662f\u52a8\u6001\u4ee3\u7406\u7c7b\u8fd8\u662f\u9759\u6001\u4ee3\u7406\u7c7b\u90fd\u4e00\u5b9a\u8981\u63a5\u6536\u771f\u5b9e\u4e1a\u52a1\u5b9e\u73b0\u5b50\u7c7b\u5bf9\u8c61 \u4ee3\u7801\u5b9e\u73b0 import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Method ; import java.lang.reflect.Proxy ; // \u63a5\u53e3\u6807\u51c6 interface IMessage { void send (); } // \u4e1a\u52a1\u5b9e\u73b0\u7c7b class MessageImpl implements IMessage { @Override public void send () { System . out . println ( \"\u53d1\u9001\" ); } } // \u52a8\u6001\u4ee3\u7406\u7c7b class MyProxy implements InvocationHandler { private Object target ; // \u4fdd\u5b58\u771f\u5b9e\u4e1a\u52a1\u5bf9\u8c61 // \u771f\u5b9e\u4e1a\u52a1\u5bf9\u8c61\u4e0e\u4ee3\u7406\u4e1a\u52a1\u5bf9\u8c61\u4e4b\u95f4\u7684\u7ed1\u5b9a public Object bind ( Object target ){ this . target = target ; Class cls = target . getClass (); return Proxy . newProxyInstance ( cls . getClassLoader (), cls . getInterfaces (), this ); } @Override public Object invoke ( Object proxy , Method method , Object [] args ) throws Throwable { Object obj = null ; if ( this . isConnect ()) { obj = method . invoke ( this . target , args ); this . close (); } return obj ; } public void close () { } public boolean isConnect () { return true ; } } class Demo { public static void main ( String [] args ) { IMessage message =( IMessage ) new MyProxy (). bind ( new MessageImpl ()); message . send (); } }","title":"118 \u52a8\u6001\u4ee3\u7406\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#119-cglib","text":"\u5982\u679c\u8981\u5b9e\u73b0\u4ee3\u7406\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f\u57fa\u4e8e\u63a5\u53e3\u7684\u5e94\u7528 CGLIB\u5f00\u53d1\u5305\u5b9e\u73b0\u57fa\u4e8e\u7c7b\u7684\u4ee3\u7406\u8bbe\u8ba1\u6a21\u5f0f Code Generation Library pom.xml \u5f15\u5165 < dependencies > < dependency > < groupId > cglib </ groupId > < artifactId > cglib </ artifactId > < version > 2.2.2 </ version > </ dependency > </ dependencies > \u4ee3\u7801\u5b9e\u73b0 import net.sf.cglib.proxy.Enhancer ; import net.sf.cglib.proxy.MethodInterceptor ; import net.sf.cglib.proxy.MethodProxy ; import java.lang.reflect.Method ; // \u4e1a\u52a1\u5b9e\u73b0\u7c7b class Message { public void send () { System . out . println ( \"\u53d1\u9001\" ); } } // \u52a8\u6001\u4ee3\u7406\u7c7b class MyProxy implements MethodInterceptor { private Object target ; // \u4fdd\u5b58\u771f\u5b9e\u4e1a\u52a1\u5bf9\u8c61 // \u771f\u5b9e\u4e1a\u52a1\u5bf9\u8c61\u4e0e\u4ee3\u7406\u4e1a\u52a1\u5bf9\u8c61\u4e4b\u95f4\u7684\u7ed1\u5b9a public MyProxy ( Object target ) { this . target = target ; } @Override public Object intercept ( Object o , Method method , Object [] args , MethodProxy methodProxy ) throws Throwable { Object obj = null ; if ( this . isConnect ()) { obj = method . invoke ( this . target , args ); this . close (); } return obj ; } public void close () { } public boolean isConnect () { return true ; } } class Demo { public static void main ( String [] args ) { Message message = new Message (); // \u771f\u5b9e\u4e3b\u4f53 Enhancer enhancer = new Enhancer (); // \u8d1f\u8d23\u4ee3\u7406\u64cd\u4f5c\u7684\u7a0b\u5e8f\u7c7b enhancer . setSuperclass ( message . getClass ()); // \u5047\u5b9a\u4e00\u4e2a\u7236\u7c7b enhancer . setCallback ( new MyProxy ( message )); Message proxyMessage = ( Message ) enhancer . create (); proxyMessage . send (); } } \u5efa\u8bae\uff1a\u57fa\u4e8e\u63a5\u53e3\u7684\u8bbe\u8ba1\u6bd4\u8f83\u5408\u7406","title":"119 CGLIB\u5b9e\u73b0\u4ee3\u7406\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#27-annotation","text":"","title":"\u7b2c27 \u7ae0 \uff1a \u53cd\u5c04\u4e0eAnnotation"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#120-annotation","text":"JDK > 1.5 \u4e0d\u540c\u7684Annotation \u6709\u4ed6\u7684\u5b58\u5728\u8303\u56f4 public enum RetentionPolicy { SOURCE , CLASS , RUNTIME } import java.lang.annotation.Annotation ; @Deprecated class Person { } class Demo { public static void main ( String [] args ) { Annotation [] annotations = Person . class . getAnnotations (); for ( Annotation a : annotations ){ System . out . println ( a ); // @java.lang.Deprecated() } } }","title":"120 \u53cd\u5c04\u53d6\u5f97Annotation\u4fe1\u606f"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#121-annotation","text":"import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.reflect.InvocationTargetException ; import java.lang.reflect.Method ; // \u5b9a\u4e49\u8fd0\u884c\u65f6\u7b56\u7565 @Retention ( RetentionPolicy . RUNTIME ) @interface MyAnnotation { public String name (); public int age () default 23 ; // \u8bbe\u7f6e\u9ed8\u8ba4\u503c } class Message { @MyAnnotation ( name = \"Tom\" ) public void send ( String msg ){ System . out . println ( msg ); } } class Demo { public static void main ( String [] args ) throws Exception { Method method = Message . class . getDeclaredMethod ( \"send\" , String . class ); MyAnnotation annotation = method . getAnnotation ( MyAnnotation . class ); String name = annotation . name (); // Tom int age = annotation . age (); // 23 String msg = String . format ( \"[%s] %s \" , name , age ); method . invoke ( Message . class . getDeclaredConstructor (). newInstance (), msg ); // [Tom] 23 } }","title":"121 \u81ea\u5b9a\u4e49Annotation"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u53cd\u5c04/#122-annotation","text":"import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.InvocationTargetException ; import java.lang.reflect.Method ; import java.lang.reflect.Proxy ; // \u6d88\u606f\u63a5\u53e3 interface IMessage { public void send ( String msg ); } // \u6d88\u606f\u5b9e\u73b0\u7c7b class MessageImpl implements IMessage { public void send ( String msg ) { System . out . println ( \"\u6d88\u606f\u53d1\u9001\" ); } } // \u52a8\u6001\u4ee3\u7406\u7c7b class MessageProxy implements InvocationHandler { private Object target ; public Object bind ( Object target ) { this . target = target ; return Proxy . newProxyInstance ( target . getClass (). getClassLoader (), target . getClass (). getInterfaces (), this ); } public Object invoke ( Object proxy , Method method , Object [] args ) throws Throwable { Object obj = null ; if ( this . connect ()) { obj = method . invoke ( this . target , args ); } this . close (); return obj ; } public boolean connect () { System . out . println ( \"\u6253\u5f00\u8fde\u63a5\" ); return true ; } public void close () { System . out . println ( \"\u5173\u95ed\u8fde\u63a5\" ); } } // \u5de5\u5382\u7c7b class Factory { private Factory () { } public static < T > T getInstance ( Class < T > clazz ) { try { return ( T ) new MessageProxy (). bind ( clazz . getDeclaredConstructor (). newInstance ()); } catch ( Exception e ) { e . printStackTrace (); return null ; } } } @Retention ( RetentionPolicy . RUNTIME ) @interface UseMessage { public Class <?> clazz (); } // \u5229\u7528\u6ce8\u89e3\u5b9e\u73b0\u7c7b\u7684\u4f7f\u7528 @UseMessage ( clazz = MessageImpl . class ) class MessageService { private IMessage message ; public MessageService () { UseMessage use = MessageService . class . getAnnotation ( UseMessage . class ); this . message = ( IMessage ) Factory . getInstance ( use . clazz ()); } public void send ( String msg ) { this . message . send ( msg ); } } class Demo { public static void main ( String [] args ) { MessageService message = new MessageService (); message . send ( \"\u53d1\u9001\u6d88\u606f\" ); } }","title":"122 \u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f\u4e0eAnnotation\u6574\u5408"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/","text":"\u7b2c7 \u7ae0 \uff1a Java\u57fa\u7840\u7c7b\u5e93 26 StringBuffer\u7c7b String\u6709\u4e24\u4e2a\u5e38\u91cf\u6c60: \u9759\u6001\u5e38\u91cf\u6c60\uff0c\u8fd0\u884c\u65f6\u5e38\u91cf\u6c60 String\u5bf9\u8c61\u5b9e\u4f8b\u5316\u76f4\u63a5\u8d4b\u503c\u5f62\u5f0f\uff0c\u53ef\u4ee5\u4fdd\u5b58\u5230\u5e38\u91cf\u6c60\u4e2d\u4ee5\u4fbf\u91cd\u7528 // \u6784\u9020\u65b9\u6cd5 public StringBuffer ( String str ) // \u8ffd\u52a0 public synchronized StringBuffer append ( String str ) // \u63d2\u5165 public synchronized StringBuffer insert ( int offset , String str ) // \u5220\u9664\u6307\u5b9a\u8303\u56f4\u6570\u636e public synchronized StringBuffer delete ( int start , int end ) // \u5b57\u7b26\u4e32\u5185\u5bb9\u53cd\u8f6c public synchronized StringBuffer reverse () \u4ee3\u7801\u793a\u4f8b class Demo { public static void main ( String [] args ) { StringBuffer sb = new StringBuffer ( \"hello\" ); sb . append ( \" world\" ); System . out . println ( sb . toString ()); // hello world } } String \u8f6c\u6362\u4e3a StringBuffer \u4f7f\u7528\u6784\u9020\u65b9\u6cd5 StringBuffer \u8f6c\u6362\u4e3a String \u4f7f\u7528toString \u64cd\u4f5c\u793a\u4f8b class Demo { public static void main ( String [] args ) { StringBuffer sb = new StringBuffer ( \"hello\" ); // \u53ef\u4ee5\u8fde\u7eed\u64cd\u4f5c sb . append ( \" \" ). append ( \"world\" ); System . out . println ( sb . toString ()); // hello world // \u63d2\u5165 sb . insert ( 5 , \" Java\" ); System . out . println ( sb ); // hello Java world // \u5220\u9664 sb . delete ( 5 , 10 ); System . out . println ( sb ); // hello world // \u53cd\u8f6c sb . reverse (); System . out . println ( sb ); // dlrow olleh } } \u7c7b\u4f3c\u529f\u80fd\u7c7b StringBuilder JDK >= 1.5 \u533a\u522b String \u5b57\u7b26\u4e32\uff0c\u5185\u5bb9\u4e0d\u53ef\u4fee\u6539 StringBuffer JDK>=1.0 \u7ebf\u7a0b\u5b89\u5168, \u4f7f\u7528\u4e86synchronized StringBuilder JDK>=1.5 \u975e\u7ebf\u7a0b\u5b89\u5168 27 CharSequence\u63a5\u53e3 CharSequence\u63cf\u8ff0\u5b57\u7b26\u4e32\u7ed3\u6784\u7684\u63a5\u53e3 public final class String implements java . io . Serializable , Comparable < String >, CharSequence public final class StringBuffer extends AbstractStringBuilder implements java . io . Serializable , CharSequence public final class StringBuilder extends AbstractStringBuilder implements java . io . Serializable , CharSequence CharSequence\u63a5\u53e3\u65b9\u6cd5 public interface CharSequence { int length (); char charAt ( int index ); CharSequence subSequence ( int start , int end ); public String toString (); } 28 AutoCloseable\u63a5\u53e3 AutoCloseable\u63a5\u53e3 \u7528\u4e8e\u8d44\u6e90\u7684\u81ea\u52a8\u5173\u95ed JDK >= 1.7 public interface AutoCloseable { void close () throws Exception ; } \u4e0d\u4f7f\u7528\u81ea\u52a8\u5173\u95ed\u4ee3\u7801\u793a\u4f8b interface IMessage { public void send (); } class MessageImpl implements IMessage { private String message ; public MessageImpl ( String message ) { this . message = message ; } @Override public void send () { System . out . println ( \"\u53d1\u9001\u6d88\u606f\uff1a \" + this . message ); } public boolean open (){ System . out . println ( \"\u6253\u5f00\u8d44\u6e90\" ); return true ; } public void close (){ System . out . println ( \"\u5173\u95ed\u8d44\u6e90\" ); } } class Demo { public static void main ( String [] args ) { MessageImpl message = new MessageImpl ( \"\u6d88\u606f\u5185\u5bb9\" ); if ( message . open ()){ message . send (); message . close (); } /** * \u6253\u5f00\u8d44\u6e90 * \u53d1\u9001\u6d88\u606f\uff1a \u6d88\u606f\u5185\u5bb9 * \u5173\u95ed\u8d44\u6e90 */ } } \u7ed3\u5408\u5f02\u5e38\u5904\u7406\u8bed\u53e5\u5b9e\u73b0\u8d44\u6e90\u81ea\u52a8\u5173\u95ed interface IMessage extends AutoCloseable { public void send (); } class MessageImpl implements IMessage { private String message ; public MessageImpl ( String message ) { this . message = message ; } @Override public void send () { System . out . println ( \"\u53d1\u9001\u6d88\u606f\uff1a \" + this . message ); } public boolean open (){ System . out . println ( \"\u6253\u5f00\u8d44\u6e90\" ); return true ; } public void close (){ System . out . println ( \"\u5173\u95ed\u8d44\u6e90\" ); } } class Demo { public static void main ( String [] args ) { try ( MessageImpl message = new MessageImpl ( \"\u6d88\u606f\u5185\u5bb9\" )){ if ( message . open ()){ message . send (); } } catch ( Exception e ){ } /** * \u6253\u5f00\u8d44\u6e90 * \u53d1\u9001\u6d88\u606f\uff1a \u6d88\u606f\u5185\u5bb9 * \u5173\u95ed\u8d44\u6e90 */ } } 29 Runtime\u7c7b Runtime\u63cf\u8ff0\u8fd0\u884c\u65f6\u72b6\u6001 \u4e00\u4e2aJVM\u8fdb\u7a0b\u53ea\u5141\u8bb8\u63d0\u4f9b\u4e00\u4e2aRuntime\uff0c\u4f7f\u7528\u4e86\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f \u53ef\u4ee5\u4f7f\u7528\u9759\u6001\u65b9\u6cd5\u83b7\u53d6\u5b9e\u4f8b\u5316\u5bf9\u8c61 public static Runtime getRuntime () class Demo { public static void main ( String [] args ) { Runtime run = Runtime . getRuntime (); // \u8bfb\u53d6CPU\u5185\u6838\u6570\u91cf System . out . println ( run . availableProcessors ()); // 8 // \u83b7\u53d6\u6700\u5927\u53ef\u7528\u5185\u5b58\u7a7a\u95f4 1/4 System . out . println ( run . maxMemory ()); // \u83b7\u53d6\u53ef\u7528\u5185\u5b58\u7a7a\u95f4 1/64 System . out . println ( run . totalMemory ()); // \u83b7\u53d6\u7a7a\u95f2\u5185\u5b58\u7a7a\u95f4 System . out . println ( run . freeMemory ()); // \u624b\u5de5\u8fdb\u884cGC\u5904\u7406 run . gc (); } } GC (Garbage Collector) \u5783\u573e\u6536\u96c6\u5668 \u7531\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528 \u6216\u8005\u4f7f\u7528Runtime\u7c7b\u4e2d\u7684gc()\u65b9\u6cd5\uff0c\u624b\u5de5\u6e05\u9664 30 System\u7c7b \u5e38\u7528\u65b9\u6cd5 // \u6570\u7ec4\u62f7\u8d1d public static native void arraycopy ( Object src , int srcPos , Object dest , int destPos , int length ); // \u83b7\u53d6\u65f6\u95f4\u6570\u503c System . out . println ( System . currentTimeMillis ()); // 1573918888172 // \u5783\u573e\u56de\u6536 public static void gc () { Runtime . getRuntime (). gc (); } 31 Cleaner\u7c7b JDK>=1.9 Cleaner\u7c7b\u63d0\u4f9b\u5bf9\u8c61\u6e05\u7406\u64cd\u4f5c \u66ff\u4ee3finialize()\u65b9\u6cd5 C++\u63d0\u4f9b\u4e86\u6784\u9020\u51fd\u6570\uff0c\u6790\u6784\u51fd\u6570 Java\u5783\u573e\u4f7f\u7528GC\u56de\u6536 class Demo { public Demo () { System . out . println ( \"\u6784\u9020\u51fd\u6570\" ); } @Override protected void finalize () throws Throwable { System . out . println ( \"\u5783\u573e\u56de\u6536\" ); super . finalize (); } public static void main ( String [] args ) { Demo demo = new Demo (); demo = null ; System . gc (); /** * \u6784\u9020\u51fd\u6570 * \u5783\u573e\u56de\u6536 */ } } \u4e0d\u5efa\u8bae\u4f7f\u7528 finalize()\u65b9\u6cd5, \u4f7f\u7528AutoCloseable\u63a5\u53e3 \u4f7f\u7528Cleaner\u7c7b\uff0c\u4f7f\u7528\u5355\u72ec\u7684\u7ebf\u7a0b\u53bb\u56de\u6536\u8d44\u6e90\uff0c\u80fd\u63d0\u9ad8\u6574\u4f53\u6027\u80fd 32 \u5bf9\u8c61\u514b\u9686 protected native Object clone () throws CloneNotSupportedException ; // \u53ea\u6709\u63a5\u53e3\u540d\uff0c\u6ca1\u6709\u4efb\u4f55\u65b9\u6cd5\uff0c\u53ea\u662f\u80fd\u529b\u6807\u8bc6\u63a5\u53e3 public interface Cloneable { } \u63a5\u53e3\u4f5c\u7528\uff1a \u6807\u51c6 \u80fd\u529b class Demo implements Cloneable { @Override protected Object clone () throws CloneNotSupportedException { return super . clone (); } public static void main ( String [] args ) { Demo demo = new Demo (); Demo demo2 = null ; try { demo2 = ( Demo ) demo . clone (); } catch ( CloneNotSupportedException e ) { e . printStackTrace (); } System . out . println ( demo ); System . out . println ( demo2 ); /** * Demo@2503dbd3 * Demo@4b67cf4d */ } } \u7b2c8 \u7ae0 \uff1a \u6570\u5b57\u64cd\u4f5c\u7c7b 33 Math\u6570\u5b66\u8ba1\u7b97\u7c7b Math\u63d0\u4f9b\u7684\u65b9\u6cd5\u90fd\u662fstatic\u65b9\u6cd5,\u90fd\u662f\u57fa\u672c\u6570\u5b66\u516c\u5f0f Math . abs (- 10 ) // 10 Math . max ( 10 , 1 ) // 10 Math . pow ( 10 , 2 ) //100.0 Math . sqrt ( 9 ) //3.0 Math . round ( 10.4 ) // 10 Math . round ( 10.5 ) // 11 class MathUtil { private MathUtil () { } // \u81ea\u5b9a\u4e49\u4fdd\u7559\u4f4d\u6570 public static double round ( double num , int scale ) { return Math . round ( num * Math . pow ( 10 , scale )) / Math . pow ( 10 , scale ); } } class Demo { public static void main ( String [] args ) { System . out . println ( MathUtil . round ( 10.98766 , 2 )); // 10.99 } } 34 Random\u968f\u673a\u6570\u751f\u6210\u7c7b import java.util.Random ; class Demo { public static void main ( String [] args ) { Random random = new Random (); // \u4ea7\u751f\u968f\u673a\u6570\u8303\u56f4[0, 10) System . out . println ( random . nextInt ( 10 )); } } \u5f69\u7968\u53f7\u7801\u751f\u6210\u793a\u4f8b import java.util.Random ; /** * \u968f\u673a\u793a\u4f8b * 36 \u9009 7 */ class Demo { public static int [] getCodeList (){ int [] data = new int [ 7 ]; int foot = 0 ; Random random = new Random (); while ( foot < 7 ){ int code = random . nextInt ( 37 ); if ( isUse ( code , data )){ data [ foot ++] = code ; } } return data ; } // \u68c0\u67e5\u53f7\u7801\u662f\u5426\u53ef\u4ee5\u4f7f\u7528\uff0c\u4e0d\u80fd\u4e3a0\uff0c\u4e0d\u80fd\u91cd\u590d public static boolean isUse ( int code , int [] temp ){ if ( code == 0 ){ return false ; } for ( int x : temp ){ if ( code == x ){ return false ; } } return true ; } public static void main ( String [] args ) { int [] data = getCodeList (); for ( int x : data ){ System . out . print ( x + \", \" ); } // 15, 19, 9, 11, 33, 2, 21, } } 35 \u5927\u6570\u5b57\u5904\u7406\u7c7b \u53ef\u4ee5\u4f7f\u7528String\u4fdd\u5b58,\u4e0d\u8fc7\u64cd\u4f5c\u9ebb\u70e6 \u7ee7\u627f\u4f53\u7cfb Object - Number - Integer - Byte - Long - Short - Float - Double - BigInteger - BigDecimal - Boolean - Character BigInteger \u548c BigDecimal\u4f7f\u7528\u65b9\u6cd5\u57fa\u672c\u76f8\u4f3c \u8fc7\u5927\u7684\u6570\u636e\u4e5f\u4f1a\u5f71\u54cd\u7a0b\u5e8f\u6027\u80fd\uff0c\u4f18\u5148\u4f7f\u7528\u57fa\u7840\u6570\u636e\u7c7b\u578b \u51cf\u6cd5\u8fd0\u7b97 import java.math.BigInteger ; class Demo { public static void main ( String [] args ) { BigInteger big1 = new BigInteger ( \"98960973126687599871\" ); BigInteger big2 = new BigInteger ( \"98960973126687599872\" ); System . out . println ( big2 . subtract ( big1 )); // 1 } } \u6c42\u4f59\u8fd0\u7b97 import java.math.BigInteger ; class Demo { public static void main ( String [] args ) { BigInteger big1 = new BigInteger ( \"1001\" ); BigInteger big2 = new BigInteger ( \"10\" ); BigInteger [] ret = big1 . divideAndRemainder ( big2 ); System . out . println ( ret [ 0 ] + \", \" + ret [ 1 ]); // 100, 1 } } \u4f7f\u7528BigDecimal\u5b9e\u73b0\u56db\u820d\u4e94\u5165\u8fdb\u4f4d import java.math.BigDecimal ; import java.math.RoundingMode ; class MathUtil { private MathUtil () { } // \u81ea\u5b9a\u4e49\u4fdd\u7559\u4f4d\u6570 public static double round ( double num , int scale ) { return new BigDecimal ( num ). divide ( new BigDecimal ( 1.0 ), scale , RoundingMode . HALF_UP ). doubleValue (); } } class Demo { public static void main ( String [] args ) { System . out . println ( MathUtil . round ( 10.98766 , 2 )); // 10.99 } } Math\u4f7f\u7528\u7684\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u6027\u80fd\u9ad8\u4e8e\u5927\u6570\u636e\u5904\u7406\u7c7b \u7b2c9 \u7ae0 \uff1a \u65e5\u671f\u64cd\u4f5c\u7c7b 36 Date\u65e5\u671f\u5904\u7406\u7c7b Date\u7c7b\u53ea\u662f\u5bf9long\u6570\u636e\u7684\u4e00\u79cd\u5305\u88c5 Date\u65e0\u53c2\u6784\u9020\u51fd\u6570 public Date () { this ( System . currentTimeMillis ()); } ``` \u793a\u4f8b ``` java import java.util.Date ; class Demo { public static void main ( String [] args ) { Date date = new Date (); System . out . println ( date ); // Sun Nov 17 20:39:41 CST 2019 // \u65e5\u671f\u8f6clong long time = date . getTime (); System . out . println ( time ); // 1573994381189 // long\u8f6c\u65e5\u671f \u589e\u52a01\u5206\u949f Date date1 = new Date ( time + 60 * 1000 ); System . out . println ( date1 ); // Sun Nov 17 20:40:41 CST 2019 } } 37 SimpleDateFormat\u65e5\u671f\u5904\u7406\u7c7b \u7ee7\u627f\u5173\u7cfb abstract Format - abstract DataFormat - SimpleDateFormat // \u65e5\u671f\u683c\u5f0f\u5316 public final String format ( Object obj ) // \u5b57\u7b26\u4e32\u8f6c\u65e5\u671f public Date parse ( String source ) throws ParseException \u65e5\u671f\u683c\u5f0f\u5316 \u5e74 yyyy \u6708 MM \u65e5 dd \u65f6 HH \u5206 mm \u79d2 ss \u6beb\u79d2 SSS \u6307\u5b9a\u5b57\u7b26\u4e32\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u65e5\u671f\u6570\u5b57\u8d85\u8fc7\u6307\u5b9a\u7684\u8303\u56f4\u4f1a\u81ea\u52a8\u8fdb\u4f4d import java.text.ParseException ; import java.text.SimpleDateFormat ; import java.util.Date ; class Demo { public static void main ( String [] args ) { Date date = new Date (); SimpleDateFormat sdf = new SimpleDateFormat ( \"yyyy-MM-dd HH:MM:ss\" ); // \u65e5\u671f\u8f6c\u5b57\u7b26\u4e32 String dateStr = sdf . format ( date ); System . out . println ( dateStr ); // 2019-11-17 20:11:35 // \u5b57\u7b26\u4e32\u8f6c\u65e5\u671f try { System . out . println ( sdf . parse ( dateStr )); } catch ( ParseException e ) { e . printStackTrace (); } // Sun Nov 17 20:00:35 CST 2019 } } \u6570\u5b57\u683c\u5f0f\u5316 import java.text.NumberFormat ; class Demo { public static void main ( String [] args ) { double money = 323223210.09 ; System . out . println ( NumberFormat . getInstance (). format ( money )); // 323,223,210.09 } } String \u5b57\u7b26\u4e32\u53ef\u4ee5\u5411\u4efb\u4f55\u7c7b\u578b\u8f6c\u6362 \u7b2c10 \u7ae0 \uff1a \u6b63\u5219\u8868\u8fbe\u5f0f 38 \u8ba4\u8bc6\u6b63\u5219\u8868\u8fbe\u5f0f JDK >= 1.4 \u4f7f\u7528\u6b63\u5219\u65b9\u4fbf\u8fdb\u884c\u6570\u636e\u9a8c\u8bc1\u5904\u7406\uff0c\u590d\u6742\u5b57\u7b26\u4e32\u4fee\u6539 \u5b9e\u73b0\u5b57\u7b26\u4e32\u8f6c\u6570\u5b57 class Demo { public static boolean isNumber ( String temp ){ char [] chars = temp . toCharArray (); for ( char c : chars ){ if ( c > '9' || c < '0' ){ return false ; } } return true ; } public static void main ( String [] args ) { String number = \"123\" ; if ( isNumber ( number )){ int i = Integer . parseInt ( number ); System . out . println ( i ); // 123 } } } \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f String number = \"123\" ; if ( number . matches ( \"\\\\d+\" )){ int i = Integer . parseInt ( number ); System . out . println ( i ); // 123 } 39 \u5e38\u7528\u6b63\u5219\u6807\u8bb0 1\u3001\u5b57\u7b26\u5339\u914d x \u4efb\u610f\u5b57\u7b26 \\\\ \\ \\ n \u6362\u884c \\ t \u5236\u8868\u7b26 2\u3001\u5b57\u7b26\u96c6 [ abc ] \u4efb\u610f\u4e00\u4e2a [ ^abc ] \u4e0d\u5728\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a [ a-zA-Z ] \u4efb\u610f\u5b57\u6bcd [ 0-9 ] \u4e00\u4e2a\u6570\u5b57 3\u3001\u7b80\u5316\u5b57\u7b26\u96c6 . \u4efb\u610f\u4e00\u4e2a\u5b57\u7b26 \\ d \u6570\u5b57 [ 0 - 9 ] \\ D \u7b49\u4ef7\u4e8e [ ^ 0 - 9 ] \\ s \u5339\u914d\u4efb\u610f\u7a7a\u683c\uff0c\u6362\u884c\uff0c\u5236\u8868\u7b26 \\ S \u5339\u914d\u975e\u7a7a\u683c\u6570\u636e \\ w \u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u7b49\u4ef7\u4e8e [ a - zA - Z_0 - 9 ] \\ W \u975e\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u7b49\u4ef7\u4e8e [ ^ a - zA - Z_0 - 9 ] 4\u3001\u8fb9\u754c\u5339\u914d ^ \u5339\u914d\u5f00\u59cb $ \u5339\u914d\u7ed3\u675f 5\u3001\u6570\u91cf ? 0 \u6b21\u6216 1 \u6b21 * 0 \u6b21\u3001 1 \u6b21\u6216\u591a\u6b21 + 1 \u6b21\u6216\u591a\u6b21 { n } \u957f\u5ea6 = n\u6b21 { n , } \u957f\u5ea6 >= n\u6b21 { n , m } \u957f\u5ea6 >= n and \u957f\u5ea6 <= m\u6b21 6\u3001\u903b\u8f91\u8868\u8fbe\u5f0f,\u591a\u4e2a\u6b63\u5219 XY X\u4e4b\u540e\u662fY X | Y \u6216 () \u6574\u4f53\u63cf\u8ff0 String str = \"123\" ; String regex = \"\\\\d+\" ; System . out . println ( str . matches ( regex )); // true 40 String\u7c7b\u5bf9\u6b63\u5219\u7684\u652f\u6301 public boolean matches ( String regex ) public String replaceFirst ( String regex , String replacement ) public String replaceAll ( String regex , String replacement ) public String [] split ( String regex ) public String [] split ( String regex , int limit ) \u793a\u4f8b1\uff1a\u5220\u9664\u975e\u5b57\u6bcd\u548c\u975e\u6570\u5b57 String str = \"asfasdfw3414^&*^&%^&wefwerfdc^&*&*fafdasd\" ; String regex = \"[^a-zA-Z0-9]+\" ; System . out . println ( str . replaceAll ( regex , \"\" )); // asfasdfw3414wefwerfdcfafdasd \u793a\u4f8b2\uff1a\u6570\u5b57\u5206\u9694\u62c6\u5206\u5b57\u7b26\u4e32 String str = \"sdasdf123123ffsadfsda232edasf\" ; String regex = \"\\\\d+\" ; String [] list = str . split ( regex ); for ( String s : list ){ System . out . println ( s ); } /** * sdasdf * ffsadfsda * edasf */ \u793a\u4f8b3\uff1a\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u6570\u5b57 String str = \"10.1\" ; String regex = \"\\\\d+(\\\\.\\\\d+)?\" ; if ( str . matches ( regex )){ System . out . println ( Double . parseDouble ( str )); // 10.1 } \u793a\u4f8b4\uff1a\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u65e5\u671f import java.text.ParseException ; import java.text.SimpleDateFormat ; class Demo { public static void main ( String [] args ) throws ParseException { String str = \"2019-11-17\" ; String regex = \"\\\\d{4}-\\\\d{2}-\\\\d{2}\" ; if ( str . matches ( regex )) { System . out . println ( new SimpleDateFormat ( \"yyyy-MM-dd\" ). parse ( str )); // Sun Nov 17 00:00:00 CST 2019 } } } \u793a\u4f8b5\uff1a\u5224\u65ad\u7535\u8bdd\u53f7\u7801 \u7535\u8bdd\u53f7\u7801 51283346 \\\\ d { 7 , 8 } 010 - 51283346 ( \\\\ d { 3 } - ) ? ( 010 ) 51283346 ( \\ ( \\\\ d { 3 }\\ )) ? class Demo { public static void main ( String [] args ) { String [] numbers = new String []{ \"51283346\" , \"010-51283346\" , \"(010)51283346\" }; String regex = \"((\\\\d{3}-)|(\\\\(\\\\d{3}\\\\)))?\\\\d{7,8}\" ; for ( String number : numbers ){ System . out . println ( number . matches ( regex )); } /** * true * true * true */ } } \u793a\u4f8b6\uff1a\u90ae\u7bb1\u9a8c\u8bc1 \u7528\u6237\u540d\uff1a\u6570\u5b57\u3001\u5b57\u6bcd\u3001\u4e0b\u5212\u7ebf(\u4e0d\u80fd\u5f00\u5934) \u57df\u540d\uff1a\u6570\u5b57\u3001\u5b57\u6bcd\u3001\u4e0b\u5212\u7ebf \u57df\u540d\u540e\u7f00\uff1acom\u3001cn\u3001net\u3001com.cn\u3001org String email = \"google@qq.com\" ; String regex = \"[0-9a-zA-Z]\\\\w+@\\\\w+\\\\.(com|cn|net|com.cn|org)\" ; System . out . println ( email . matches ( regex )); // true 41 java.util.regex\u5305\u652f\u6301 Pattern \u6b63\u5219\u8868\u8fbe\u5f0f\u7f16\u8bd1 private Pattern ( String p , int f ) public static Pattern compile ( String regex ) Mather \u6b63\u5219\u5339\u914d public Matcher matcher ( CharSequence input ) public boolean matches () Pattern\u793a\u4f8b import java.text.ParseException ; import java.util.regex.Pattern ; class Demo { public static void main ( String [] args ) throws ParseException { String email = \"ooxx12ooxx000ooxx\" ; Pattern pattern = Pattern . compile ( \"\\\\d+\" ); String [] list = pattern . split ( email ); for ( String s : list ) { System . out . println ( s ); } /** * ooxx * ooxx * ooxx */ } } Matcher\u793a\u4f8b import java.text.ParseException ; import java.util.regex.Matcher ; import java.util.regex.Pattern ; class Demo { public static void main ( String [] args ) throws ParseException { String number = \"6687\" ; Pattern pattern = Pattern . compile ( \"\\\\d+\" ); Matcher matcher = pattern . matcher ( number ); System . out . println ( matcher . matches ()); // true } } \u62c6\u5206\uff0c\u66ff\u6362\uff0c\u5339\u914d\u4f7f\u7528String\u7c7b\u5c31\u53ef\u4ee5\u5b9e\u73b0 String\u4e0d\u5177\u5907\u7684\u529f\u80fd\uff1a \u793a\u4f8b\uff1a\u63d0\u53d6sql\u4e2d\u7684\u53d8\u91cf\u540d import java.text.ParseException ; import java.util.regex.Matcher ; import java.util.regex.Pattern ; class Demo { public static void main ( String [] args ) throws ParseException { String sql = \"insert into student(name, age) values(#{name}, #{value})\" ; Pattern pattern = Pattern . compile ( \"#\\\\{\\\\w+\\\\}\" ); Matcher matcher = pattern . matcher ( sql ); while ( matcher . find ()){ System . out . println ( matcher . group ( 0 ). replaceAll ( \"#|\\\\{|\\\\}\" , \"\" )); } /** * name * value */ } } \u7b2c11 \u7ae0 \uff1a \u56fd\u9645\u5316\u7a0b\u5e8f\u5b9e\u73b0 42 \u56fd\u9645\u5316\u7a0b\u5e8f\u5b9e\u73b0\u539f\u7406 \u7edf\u4e00\u7a0b\u5e8f\u4ee3\u7801\uff0c\u6839\u636e\u4e0d\u540c\u56fd\u5bb6\u5b9e\u73b0\u4e0d\u540c\u8bed\u8a00\u63cf\u8ff0 \u9700\u8981\u89e3\u51b3\u95ee\u9898\uff1a 1\u3001\u5b9a\u4e49\u4fdd\u5b58\u6587\u5b57\u4fe1\u606f 2\u3001\u6839\u636e\u4e0d\u540c\u533a\u57df\u8bed\u8a00\u7f16\u7801\u8bfb\u53d6\u6587\u4ef6\u4fe1\u606f 43 Locale\u7c7b Locale\u7c7b\uff1a\u4e13\u95e8\u63cf\u8ff0\u533a\u57df\u548c\u8bed\u8a00\u7f16\u7801\u7684\u7c7b \u6784\u9020\u65b9\u6cd5 public Locale ( String language ) public Locale ( String language , String country ) \u56fd\u5bb6\u8bed\u8a00\u4ee3\u7801 \u4e2d\u6587\uff1azh_CN \u7f8e\u56fd\uff1aen_US \u4f7f\u7528\u793a\u4f8b import java.util.Locale ; class Demo { public static void main ( String [] args ){ Locale loc = new Locale ( \"zh\" , \"CN\" ); System . out . println ( loc ); // zh_CN } } \u8bfb\u53d6\u672c\u5730\u9ed8\u8ba4\u73af\u5883 Locale loc = Locale . getDefault (); System . out . println ( loc ); // zh_CN \u4f7f\u7528\u5e38\u91cf Locale loc = Locale . CHINA ; System . out . println ( loc ); // zh_CN 44 ResourceBundle\u8bfb\u53d6\u8d44\u6e90\u6587\u4ef6 public static final ResourceBundle getBundle ( String baseName ) // baseName \u6ca1\u6709\u540e\u7f00\u7684\u6587\u4ef6\u540d \u8d44\u6e90\u6587\u4ef6 message.properties info = \"\u8fd9\u662f\u6d88\u606f\" \u8bfb\u53d6\u5b9e\u4f8b import java.io.UnsupportedEncodingException ; import java.util.ResourceBundle ; class Demo { public static void main ( String [] args ) throws UnsupportedEncodingException { ResourceBundle bundle = ResourceBundle . getBundle ( \"message\" ); // \u89e3\u51b3\u4e2d\u6587\u4e71\u7801\u95ee\u9898 String message = new String ( bundle . getString ( \"info\" ). getBytes ( \"ISO-8859-1\" ), \"utf-8\" ); System . out . println ( message ); // \"\u8fd9\u662f\u6d88\u606f\" } } 45 \u5b9e\u73b0\u56fd\u9645\u5316\u7a0b\u5e8f\u5f00\u53d1 CLASSPATH \u4e0b\u5efa\u7acb\u6587\u4ef6 cat Message . properties info = \u9ed8\u8ba4\u8d44\u6e90 cat Message_zh_CN . properties info = \u4e2d\u6587\u8d44\u6e90 cat Message_en_US . properties info = \u82f1\u6587\u8d44\u6e90 \u6267\u884c\u7a0b\u5e8f\u4f1a\u8bfb\u53d6\u4e2d\u6587\u8d44\u6e90 import java.io.UnsupportedEncodingException ; import java.util.ResourceBundle ; class Demo { public static void main ( String [] args ) throws UnsupportedEncodingException { ResourceBundle bundle = ResourceBundle . getBundle ( \"message\" ); // \u89e3\u51b3\u4e2d\u6587\u4e71\u7801\u95ee\u9898 String message = new String ( bundle . getString ( \"info\" ). getBytes ( \"ISO-8859-1\" ), \"utf-8\" ); System . out . println ( message ); // \u4e2d\u6587\u8d44\u6e90 } } getBundle\u65b9\u6cd5\u9ed8\u8ba4\u52a0\u8f7d Locale.getDefault() public static final ResourceBundle getBundle ( String baseName ) { return getBundleImpl ( baseName , Locale . getDefault (), getLoader ( Reflection . getCallerClass ()), getDefaultControl ( baseName )); } \u4f7f\u7528\u91cd\u8f7d\u51fd\u6570\uff0c\u8bfb\u53d6\u82f1\u6587\u8d44\u6e90 Locale locale = Locale . US ; ResourceBundle bundle = ResourceBundle . getBundle ( \"message\" , locale ); // \u89e3\u51b3\u4e2d\u6587\u4e71\u7801\u95ee\u9898 String message = new String ( bundle . getString ( \"info\" ). getBytes ( \"ISO-8859-1\" ), \"utf-8\" ); System . out . println ( message ); // \u82f1\u6587\u8d44\u6e90 \u5982\u679c\u6ca1\u6709\u5bf9\u5e94\u533a\u57df\u7f16\u7801\u7684\u8d44\u6e90\u6587\u4ef6\uff0c\u8bfb\u53d6\u9ed8\u8ba4\u8d44\u6e90 \u8bfb\u53d6\u6d41\u7a0b\uff1a \u6307\u5b9a\u533a\u57df\u7684\u8d44\u6e90\u6587\u4ef6 > \u9ed8\u8ba4\u7684\u672c\u5730\u8d44\u6e90\u6587\u4ef6 > \u516c\u5171\u7684\u8d44\u6e90\u6587\u4ef6 46 \u683c\u5f0f\u5316\u6587\u672c\u663e\u793a \u683c\u5f0f\u5316\u65b9\u6cd5 public class MessageFormat extends Format { public static String format ( String pattern , Object ... arguments ) } \u4ee3\u7801\u793a\u4f8b import java.text.MessageFormat ; import java.text.SimpleDateFormat ; import java.util.Date ; class Demo { public static void main ( String [] args ) { // \u5360\u4f4d\u7b26{} String message = \"hello {0} date: {1}\" ; System . out . println ( MessageFormat . format ( message , \"admin\" , new SimpleDateFormat ( \"yyyy-MM-dd\" ). format ( new Date ()))); // hello admin date: 2019-11-18 } }","title":"\u7b2c7 \u7ae0 \uff1a Java\u57fa\u7840\u7c7b\u5e93"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#7-java","text":"","title":"\u7b2c7 \u7ae0 \uff1a Java\u57fa\u7840\u7c7b\u5e93"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#26-stringbuffer","text":"String\u6709\u4e24\u4e2a\u5e38\u91cf\u6c60: \u9759\u6001\u5e38\u91cf\u6c60\uff0c\u8fd0\u884c\u65f6\u5e38\u91cf\u6c60 String\u5bf9\u8c61\u5b9e\u4f8b\u5316\u76f4\u63a5\u8d4b\u503c\u5f62\u5f0f\uff0c\u53ef\u4ee5\u4fdd\u5b58\u5230\u5e38\u91cf\u6c60\u4e2d\u4ee5\u4fbf\u91cd\u7528 // \u6784\u9020\u65b9\u6cd5 public StringBuffer ( String str ) // \u8ffd\u52a0 public synchronized StringBuffer append ( String str ) // \u63d2\u5165 public synchronized StringBuffer insert ( int offset , String str ) // \u5220\u9664\u6307\u5b9a\u8303\u56f4\u6570\u636e public synchronized StringBuffer delete ( int start , int end ) // \u5b57\u7b26\u4e32\u5185\u5bb9\u53cd\u8f6c public synchronized StringBuffer reverse () \u4ee3\u7801\u793a\u4f8b class Demo { public static void main ( String [] args ) { StringBuffer sb = new StringBuffer ( \"hello\" ); sb . append ( \" world\" ); System . out . println ( sb . toString ()); // hello world } } String \u8f6c\u6362\u4e3a StringBuffer \u4f7f\u7528\u6784\u9020\u65b9\u6cd5 StringBuffer \u8f6c\u6362\u4e3a String \u4f7f\u7528toString \u64cd\u4f5c\u793a\u4f8b class Demo { public static void main ( String [] args ) { StringBuffer sb = new StringBuffer ( \"hello\" ); // \u53ef\u4ee5\u8fde\u7eed\u64cd\u4f5c sb . append ( \" \" ). append ( \"world\" ); System . out . println ( sb . toString ()); // hello world // \u63d2\u5165 sb . insert ( 5 , \" Java\" ); System . out . println ( sb ); // hello Java world // \u5220\u9664 sb . delete ( 5 , 10 ); System . out . println ( sb ); // hello world // \u53cd\u8f6c sb . reverse (); System . out . println ( sb ); // dlrow olleh } } \u7c7b\u4f3c\u529f\u80fd\u7c7b StringBuilder JDK >= 1.5 \u533a\u522b String \u5b57\u7b26\u4e32\uff0c\u5185\u5bb9\u4e0d\u53ef\u4fee\u6539 StringBuffer JDK>=1.0 \u7ebf\u7a0b\u5b89\u5168, \u4f7f\u7528\u4e86synchronized StringBuilder JDK>=1.5 \u975e\u7ebf\u7a0b\u5b89\u5168","title":"26 StringBuffer\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#27-charsequence","text":"CharSequence\u63cf\u8ff0\u5b57\u7b26\u4e32\u7ed3\u6784\u7684\u63a5\u53e3 public final class String implements java . io . Serializable , Comparable < String >, CharSequence public final class StringBuffer extends AbstractStringBuilder implements java . io . Serializable , CharSequence public final class StringBuilder extends AbstractStringBuilder implements java . io . Serializable , CharSequence CharSequence\u63a5\u53e3\u65b9\u6cd5 public interface CharSequence { int length (); char charAt ( int index ); CharSequence subSequence ( int start , int end ); public String toString (); }","title":"27 CharSequence\u63a5\u53e3"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#28-autocloseable","text":"AutoCloseable\u63a5\u53e3 \u7528\u4e8e\u8d44\u6e90\u7684\u81ea\u52a8\u5173\u95ed JDK >= 1.7 public interface AutoCloseable { void close () throws Exception ; } \u4e0d\u4f7f\u7528\u81ea\u52a8\u5173\u95ed\u4ee3\u7801\u793a\u4f8b interface IMessage { public void send (); } class MessageImpl implements IMessage { private String message ; public MessageImpl ( String message ) { this . message = message ; } @Override public void send () { System . out . println ( \"\u53d1\u9001\u6d88\u606f\uff1a \" + this . message ); } public boolean open (){ System . out . println ( \"\u6253\u5f00\u8d44\u6e90\" ); return true ; } public void close (){ System . out . println ( \"\u5173\u95ed\u8d44\u6e90\" ); } } class Demo { public static void main ( String [] args ) { MessageImpl message = new MessageImpl ( \"\u6d88\u606f\u5185\u5bb9\" ); if ( message . open ()){ message . send (); message . close (); } /** * \u6253\u5f00\u8d44\u6e90 * \u53d1\u9001\u6d88\u606f\uff1a \u6d88\u606f\u5185\u5bb9 * \u5173\u95ed\u8d44\u6e90 */ } } \u7ed3\u5408\u5f02\u5e38\u5904\u7406\u8bed\u53e5\u5b9e\u73b0\u8d44\u6e90\u81ea\u52a8\u5173\u95ed interface IMessage extends AutoCloseable { public void send (); } class MessageImpl implements IMessage { private String message ; public MessageImpl ( String message ) { this . message = message ; } @Override public void send () { System . out . println ( \"\u53d1\u9001\u6d88\u606f\uff1a \" + this . message ); } public boolean open (){ System . out . println ( \"\u6253\u5f00\u8d44\u6e90\" ); return true ; } public void close (){ System . out . println ( \"\u5173\u95ed\u8d44\u6e90\" ); } } class Demo { public static void main ( String [] args ) { try ( MessageImpl message = new MessageImpl ( \"\u6d88\u606f\u5185\u5bb9\" )){ if ( message . open ()){ message . send (); } } catch ( Exception e ){ } /** * \u6253\u5f00\u8d44\u6e90 * \u53d1\u9001\u6d88\u606f\uff1a \u6d88\u606f\u5185\u5bb9 * \u5173\u95ed\u8d44\u6e90 */ } }","title":"28 AutoCloseable\u63a5\u53e3"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#29-runtime","text":"Runtime\u63cf\u8ff0\u8fd0\u884c\u65f6\u72b6\u6001 \u4e00\u4e2aJVM\u8fdb\u7a0b\u53ea\u5141\u8bb8\u63d0\u4f9b\u4e00\u4e2aRuntime\uff0c\u4f7f\u7528\u4e86\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f \u53ef\u4ee5\u4f7f\u7528\u9759\u6001\u65b9\u6cd5\u83b7\u53d6\u5b9e\u4f8b\u5316\u5bf9\u8c61 public static Runtime getRuntime () class Demo { public static void main ( String [] args ) { Runtime run = Runtime . getRuntime (); // \u8bfb\u53d6CPU\u5185\u6838\u6570\u91cf System . out . println ( run . availableProcessors ()); // 8 // \u83b7\u53d6\u6700\u5927\u53ef\u7528\u5185\u5b58\u7a7a\u95f4 1/4 System . out . println ( run . maxMemory ()); // \u83b7\u53d6\u53ef\u7528\u5185\u5b58\u7a7a\u95f4 1/64 System . out . println ( run . totalMemory ()); // \u83b7\u53d6\u7a7a\u95f2\u5185\u5b58\u7a7a\u95f4 System . out . println ( run . freeMemory ()); // \u624b\u5de5\u8fdb\u884cGC\u5904\u7406 run . gc (); } } GC (Garbage Collector) \u5783\u573e\u6536\u96c6\u5668 \u7531\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528 \u6216\u8005\u4f7f\u7528Runtime\u7c7b\u4e2d\u7684gc()\u65b9\u6cd5\uff0c\u624b\u5de5\u6e05\u9664","title":"29 Runtime\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#30-system","text":"\u5e38\u7528\u65b9\u6cd5 // \u6570\u7ec4\u62f7\u8d1d public static native void arraycopy ( Object src , int srcPos , Object dest , int destPos , int length ); // \u83b7\u53d6\u65f6\u95f4\u6570\u503c System . out . println ( System . currentTimeMillis ()); // 1573918888172 // \u5783\u573e\u56de\u6536 public static void gc () { Runtime . getRuntime (). gc (); }","title":"30 System\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#31-cleaner","text":"JDK>=1.9 Cleaner\u7c7b\u63d0\u4f9b\u5bf9\u8c61\u6e05\u7406\u64cd\u4f5c \u66ff\u4ee3finialize()\u65b9\u6cd5 C++\u63d0\u4f9b\u4e86\u6784\u9020\u51fd\u6570\uff0c\u6790\u6784\u51fd\u6570 Java\u5783\u573e\u4f7f\u7528GC\u56de\u6536 class Demo { public Demo () { System . out . println ( \"\u6784\u9020\u51fd\u6570\" ); } @Override protected void finalize () throws Throwable { System . out . println ( \"\u5783\u573e\u56de\u6536\" ); super . finalize (); } public static void main ( String [] args ) { Demo demo = new Demo (); demo = null ; System . gc (); /** * \u6784\u9020\u51fd\u6570 * \u5783\u573e\u56de\u6536 */ } } \u4e0d\u5efa\u8bae\u4f7f\u7528 finalize()\u65b9\u6cd5, \u4f7f\u7528AutoCloseable\u63a5\u53e3 \u4f7f\u7528Cleaner\u7c7b\uff0c\u4f7f\u7528\u5355\u72ec\u7684\u7ebf\u7a0b\u53bb\u56de\u6536\u8d44\u6e90\uff0c\u80fd\u63d0\u9ad8\u6574\u4f53\u6027\u80fd","title":"31 Cleaner\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#32","text":"protected native Object clone () throws CloneNotSupportedException ; // \u53ea\u6709\u63a5\u53e3\u540d\uff0c\u6ca1\u6709\u4efb\u4f55\u65b9\u6cd5\uff0c\u53ea\u662f\u80fd\u529b\u6807\u8bc6\u63a5\u53e3 public interface Cloneable { } \u63a5\u53e3\u4f5c\u7528\uff1a \u6807\u51c6 \u80fd\u529b class Demo implements Cloneable { @Override protected Object clone () throws CloneNotSupportedException { return super . clone (); } public static void main ( String [] args ) { Demo demo = new Demo (); Demo demo2 = null ; try { demo2 = ( Demo ) demo . clone (); } catch ( CloneNotSupportedException e ) { e . printStackTrace (); } System . out . println ( demo ); System . out . println ( demo2 ); /** * Demo@2503dbd3 * Demo@4b67cf4d */ } }","title":"32 \u5bf9\u8c61\u514b\u9686"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#8","text":"","title":"\u7b2c8 \u7ae0 \uff1a \u6570\u5b57\u64cd\u4f5c\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#33-math","text":"Math\u63d0\u4f9b\u7684\u65b9\u6cd5\u90fd\u662fstatic\u65b9\u6cd5,\u90fd\u662f\u57fa\u672c\u6570\u5b66\u516c\u5f0f Math . abs (- 10 ) // 10 Math . max ( 10 , 1 ) // 10 Math . pow ( 10 , 2 ) //100.0 Math . sqrt ( 9 ) //3.0 Math . round ( 10.4 ) // 10 Math . round ( 10.5 ) // 11 class MathUtil { private MathUtil () { } // \u81ea\u5b9a\u4e49\u4fdd\u7559\u4f4d\u6570 public static double round ( double num , int scale ) { return Math . round ( num * Math . pow ( 10 , scale )) / Math . pow ( 10 , scale ); } } class Demo { public static void main ( String [] args ) { System . out . println ( MathUtil . round ( 10.98766 , 2 )); // 10.99 } }","title":"33 Math\u6570\u5b66\u8ba1\u7b97\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#34-random","text":"import java.util.Random ; class Demo { public static void main ( String [] args ) { Random random = new Random (); // \u4ea7\u751f\u968f\u673a\u6570\u8303\u56f4[0, 10) System . out . println ( random . nextInt ( 10 )); } } \u5f69\u7968\u53f7\u7801\u751f\u6210\u793a\u4f8b import java.util.Random ; /** * \u968f\u673a\u793a\u4f8b * 36 \u9009 7 */ class Demo { public static int [] getCodeList (){ int [] data = new int [ 7 ]; int foot = 0 ; Random random = new Random (); while ( foot < 7 ){ int code = random . nextInt ( 37 ); if ( isUse ( code , data )){ data [ foot ++] = code ; } } return data ; } // \u68c0\u67e5\u53f7\u7801\u662f\u5426\u53ef\u4ee5\u4f7f\u7528\uff0c\u4e0d\u80fd\u4e3a0\uff0c\u4e0d\u80fd\u91cd\u590d public static boolean isUse ( int code , int [] temp ){ if ( code == 0 ){ return false ; } for ( int x : temp ){ if ( code == x ){ return false ; } } return true ; } public static void main ( String [] args ) { int [] data = getCodeList (); for ( int x : data ){ System . out . print ( x + \", \" ); } // 15, 19, 9, 11, 33, 2, 21, } }","title":"34 Random\u968f\u673a\u6570\u751f\u6210\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#35","text":"\u53ef\u4ee5\u4f7f\u7528String\u4fdd\u5b58,\u4e0d\u8fc7\u64cd\u4f5c\u9ebb\u70e6 \u7ee7\u627f\u4f53\u7cfb Object - Number - Integer - Byte - Long - Short - Float - Double - BigInteger - BigDecimal - Boolean - Character BigInteger \u548c BigDecimal\u4f7f\u7528\u65b9\u6cd5\u57fa\u672c\u76f8\u4f3c \u8fc7\u5927\u7684\u6570\u636e\u4e5f\u4f1a\u5f71\u54cd\u7a0b\u5e8f\u6027\u80fd\uff0c\u4f18\u5148\u4f7f\u7528\u57fa\u7840\u6570\u636e\u7c7b\u578b \u51cf\u6cd5\u8fd0\u7b97 import java.math.BigInteger ; class Demo { public static void main ( String [] args ) { BigInteger big1 = new BigInteger ( \"98960973126687599871\" ); BigInteger big2 = new BigInteger ( \"98960973126687599872\" ); System . out . println ( big2 . subtract ( big1 )); // 1 } } \u6c42\u4f59\u8fd0\u7b97 import java.math.BigInteger ; class Demo { public static void main ( String [] args ) { BigInteger big1 = new BigInteger ( \"1001\" ); BigInteger big2 = new BigInteger ( \"10\" ); BigInteger [] ret = big1 . divideAndRemainder ( big2 ); System . out . println ( ret [ 0 ] + \", \" + ret [ 1 ]); // 100, 1 } } \u4f7f\u7528BigDecimal\u5b9e\u73b0\u56db\u820d\u4e94\u5165\u8fdb\u4f4d import java.math.BigDecimal ; import java.math.RoundingMode ; class MathUtil { private MathUtil () { } // \u81ea\u5b9a\u4e49\u4fdd\u7559\u4f4d\u6570 public static double round ( double num , int scale ) { return new BigDecimal ( num ). divide ( new BigDecimal ( 1.0 ), scale , RoundingMode . HALF_UP ). doubleValue (); } } class Demo { public static void main ( String [] args ) { System . out . println ( MathUtil . round ( 10.98766 , 2 )); // 10.99 } } Math\u4f7f\u7528\u7684\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u6027\u80fd\u9ad8\u4e8e\u5927\u6570\u636e\u5904\u7406\u7c7b","title":"35 \u5927\u6570\u5b57\u5904\u7406\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#9","text":"","title":"\u7b2c9 \u7ae0 \uff1a \u65e5\u671f\u64cd\u4f5c\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#36-date","text":"Date\u7c7b\u53ea\u662f\u5bf9long\u6570\u636e\u7684\u4e00\u79cd\u5305\u88c5 Date\u65e0\u53c2\u6784\u9020\u51fd\u6570 public Date () { this ( System . currentTimeMillis ()); } ``` \u793a\u4f8b ``` java import java.util.Date ; class Demo { public static void main ( String [] args ) { Date date = new Date (); System . out . println ( date ); // Sun Nov 17 20:39:41 CST 2019 // \u65e5\u671f\u8f6clong long time = date . getTime (); System . out . println ( time ); // 1573994381189 // long\u8f6c\u65e5\u671f \u589e\u52a01\u5206\u949f Date date1 = new Date ( time + 60 * 1000 ); System . out . println ( date1 ); // Sun Nov 17 20:40:41 CST 2019 } }","title":"36 Date\u65e5\u671f\u5904\u7406\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#37-simpledateformat","text":"\u7ee7\u627f\u5173\u7cfb abstract Format - abstract DataFormat - SimpleDateFormat // \u65e5\u671f\u683c\u5f0f\u5316 public final String format ( Object obj ) // \u5b57\u7b26\u4e32\u8f6c\u65e5\u671f public Date parse ( String source ) throws ParseException \u65e5\u671f\u683c\u5f0f\u5316 \u5e74 yyyy \u6708 MM \u65e5 dd \u65f6 HH \u5206 mm \u79d2 ss \u6beb\u79d2 SSS \u6307\u5b9a\u5b57\u7b26\u4e32\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u65e5\u671f\u6570\u5b57\u8d85\u8fc7\u6307\u5b9a\u7684\u8303\u56f4\u4f1a\u81ea\u52a8\u8fdb\u4f4d import java.text.ParseException ; import java.text.SimpleDateFormat ; import java.util.Date ; class Demo { public static void main ( String [] args ) { Date date = new Date (); SimpleDateFormat sdf = new SimpleDateFormat ( \"yyyy-MM-dd HH:MM:ss\" ); // \u65e5\u671f\u8f6c\u5b57\u7b26\u4e32 String dateStr = sdf . format ( date ); System . out . println ( dateStr ); // 2019-11-17 20:11:35 // \u5b57\u7b26\u4e32\u8f6c\u65e5\u671f try { System . out . println ( sdf . parse ( dateStr )); } catch ( ParseException e ) { e . printStackTrace (); } // Sun Nov 17 20:00:35 CST 2019 } } \u6570\u5b57\u683c\u5f0f\u5316 import java.text.NumberFormat ; class Demo { public static void main ( String [] args ) { double money = 323223210.09 ; System . out . println ( NumberFormat . getInstance (). format ( money )); // 323,223,210.09 } } String \u5b57\u7b26\u4e32\u53ef\u4ee5\u5411\u4efb\u4f55\u7c7b\u578b\u8f6c\u6362","title":"37 SimpleDateFormat\u65e5\u671f\u5904\u7406\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#10","text":"","title":"\u7b2c10 \u7ae0 \uff1a \u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#38","text":"JDK >= 1.4 \u4f7f\u7528\u6b63\u5219\u65b9\u4fbf\u8fdb\u884c\u6570\u636e\u9a8c\u8bc1\u5904\u7406\uff0c\u590d\u6742\u5b57\u7b26\u4e32\u4fee\u6539 \u5b9e\u73b0\u5b57\u7b26\u4e32\u8f6c\u6570\u5b57 class Demo { public static boolean isNumber ( String temp ){ char [] chars = temp . toCharArray (); for ( char c : chars ){ if ( c > '9' || c < '0' ){ return false ; } } return true ; } public static void main ( String [] args ) { String number = \"123\" ; if ( isNumber ( number )){ int i = Integer . parseInt ( number ); System . out . println ( i ); // 123 } } } \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f String number = \"123\" ; if ( number . matches ( \"\\\\d+\" )){ int i = Integer . parseInt ( number ); System . out . println ( i ); // 123 }","title":"38 \u8ba4\u8bc6\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#39","text":"1\u3001\u5b57\u7b26\u5339\u914d x \u4efb\u610f\u5b57\u7b26 \\\\ \\ \\ n \u6362\u884c \\ t \u5236\u8868\u7b26 2\u3001\u5b57\u7b26\u96c6 [ abc ] \u4efb\u610f\u4e00\u4e2a [ ^abc ] \u4e0d\u5728\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a [ a-zA-Z ] \u4efb\u610f\u5b57\u6bcd [ 0-9 ] \u4e00\u4e2a\u6570\u5b57 3\u3001\u7b80\u5316\u5b57\u7b26\u96c6 . \u4efb\u610f\u4e00\u4e2a\u5b57\u7b26 \\ d \u6570\u5b57 [ 0 - 9 ] \\ D \u7b49\u4ef7\u4e8e [ ^ 0 - 9 ] \\ s \u5339\u914d\u4efb\u610f\u7a7a\u683c\uff0c\u6362\u884c\uff0c\u5236\u8868\u7b26 \\ S \u5339\u914d\u975e\u7a7a\u683c\u6570\u636e \\ w \u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u7b49\u4ef7\u4e8e [ a - zA - Z_0 - 9 ] \\ W \u975e\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u7b49\u4ef7\u4e8e [ ^ a - zA - Z_0 - 9 ] 4\u3001\u8fb9\u754c\u5339\u914d ^ \u5339\u914d\u5f00\u59cb $ \u5339\u914d\u7ed3\u675f 5\u3001\u6570\u91cf ? 0 \u6b21\u6216 1 \u6b21 * 0 \u6b21\u3001 1 \u6b21\u6216\u591a\u6b21 + 1 \u6b21\u6216\u591a\u6b21 { n } \u957f\u5ea6 = n\u6b21 { n , } \u957f\u5ea6 >= n\u6b21 { n , m } \u957f\u5ea6 >= n and \u957f\u5ea6 <= m\u6b21 6\u3001\u903b\u8f91\u8868\u8fbe\u5f0f,\u591a\u4e2a\u6b63\u5219 XY X\u4e4b\u540e\u662fY X | Y \u6216 () \u6574\u4f53\u63cf\u8ff0 String str = \"123\" ; String regex = \"\\\\d+\" ; System . out . println ( str . matches ( regex )); // true","title":"39 \u5e38\u7528\u6b63\u5219\u6807\u8bb0"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#40-string","text":"public boolean matches ( String regex ) public String replaceFirst ( String regex , String replacement ) public String replaceAll ( String regex , String replacement ) public String [] split ( String regex ) public String [] split ( String regex , int limit ) \u793a\u4f8b1\uff1a\u5220\u9664\u975e\u5b57\u6bcd\u548c\u975e\u6570\u5b57 String str = \"asfasdfw3414^&*^&%^&wefwerfdc^&*&*fafdasd\" ; String regex = \"[^a-zA-Z0-9]+\" ; System . out . println ( str . replaceAll ( regex , \"\" )); // asfasdfw3414wefwerfdcfafdasd \u793a\u4f8b2\uff1a\u6570\u5b57\u5206\u9694\u62c6\u5206\u5b57\u7b26\u4e32 String str = \"sdasdf123123ffsadfsda232edasf\" ; String regex = \"\\\\d+\" ; String [] list = str . split ( regex ); for ( String s : list ){ System . out . println ( s ); } /** * sdasdf * ffsadfsda * edasf */ \u793a\u4f8b3\uff1a\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u6570\u5b57 String str = \"10.1\" ; String regex = \"\\\\d+(\\\\.\\\\d+)?\" ; if ( str . matches ( regex )){ System . out . println ( Double . parseDouble ( str )); // 10.1 } \u793a\u4f8b4\uff1a\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u65e5\u671f import java.text.ParseException ; import java.text.SimpleDateFormat ; class Demo { public static void main ( String [] args ) throws ParseException { String str = \"2019-11-17\" ; String regex = \"\\\\d{4}-\\\\d{2}-\\\\d{2}\" ; if ( str . matches ( regex )) { System . out . println ( new SimpleDateFormat ( \"yyyy-MM-dd\" ). parse ( str )); // Sun Nov 17 00:00:00 CST 2019 } } } \u793a\u4f8b5\uff1a\u5224\u65ad\u7535\u8bdd\u53f7\u7801 \u7535\u8bdd\u53f7\u7801 51283346 \\\\ d { 7 , 8 } 010 - 51283346 ( \\\\ d { 3 } - ) ? ( 010 ) 51283346 ( \\ ( \\\\ d { 3 }\\ )) ? class Demo { public static void main ( String [] args ) { String [] numbers = new String []{ \"51283346\" , \"010-51283346\" , \"(010)51283346\" }; String regex = \"((\\\\d{3}-)|(\\\\(\\\\d{3}\\\\)))?\\\\d{7,8}\" ; for ( String number : numbers ){ System . out . println ( number . matches ( regex )); } /** * true * true * true */ } } \u793a\u4f8b6\uff1a\u90ae\u7bb1\u9a8c\u8bc1 \u7528\u6237\u540d\uff1a\u6570\u5b57\u3001\u5b57\u6bcd\u3001\u4e0b\u5212\u7ebf(\u4e0d\u80fd\u5f00\u5934) \u57df\u540d\uff1a\u6570\u5b57\u3001\u5b57\u6bcd\u3001\u4e0b\u5212\u7ebf \u57df\u540d\u540e\u7f00\uff1acom\u3001cn\u3001net\u3001com.cn\u3001org String email = \"google@qq.com\" ; String regex = \"[0-9a-zA-Z]\\\\w+@\\\\w+\\\\.(com|cn|net|com.cn|org)\" ; System . out . println ( email . matches ( regex )); // true","title":"40 String\u7c7b\u5bf9\u6b63\u5219\u7684\u652f\u6301"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#41-javautilregex","text":"Pattern \u6b63\u5219\u8868\u8fbe\u5f0f\u7f16\u8bd1 private Pattern ( String p , int f ) public static Pattern compile ( String regex ) Mather \u6b63\u5219\u5339\u914d public Matcher matcher ( CharSequence input ) public boolean matches () Pattern\u793a\u4f8b import java.text.ParseException ; import java.util.regex.Pattern ; class Demo { public static void main ( String [] args ) throws ParseException { String email = \"ooxx12ooxx000ooxx\" ; Pattern pattern = Pattern . compile ( \"\\\\d+\" ); String [] list = pattern . split ( email ); for ( String s : list ) { System . out . println ( s ); } /** * ooxx * ooxx * ooxx */ } } Matcher\u793a\u4f8b import java.text.ParseException ; import java.util.regex.Matcher ; import java.util.regex.Pattern ; class Demo { public static void main ( String [] args ) throws ParseException { String number = \"6687\" ; Pattern pattern = Pattern . compile ( \"\\\\d+\" ); Matcher matcher = pattern . matcher ( number ); System . out . println ( matcher . matches ()); // true } } \u62c6\u5206\uff0c\u66ff\u6362\uff0c\u5339\u914d\u4f7f\u7528String\u7c7b\u5c31\u53ef\u4ee5\u5b9e\u73b0 String\u4e0d\u5177\u5907\u7684\u529f\u80fd\uff1a \u793a\u4f8b\uff1a\u63d0\u53d6sql\u4e2d\u7684\u53d8\u91cf\u540d import java.text.ParseException ; import java.util.regex.Matcher ; import java.util.regex.Pattern ; class Demo { public static void main ( String [] args ) throws ParseException { String sql = \"insert into student(name, age) values(#{name}, #{value})\" ; Pattern pattern = Pattern . compile ( \"#\\\\{\\\\w+\\\\}\" ); Matcher matcher = pattern . matcher ( sql ); while ( matcher . find ()){ System . out . println ( matcher . group ( 0 ). replaceAll ( \"#|\\\\{|\\\\}\" , \"\" )); } /** * name * value */ } }","title":"41 java.util.regex\u5305\u652f\u6301"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#11","text":"","title":"\u7b2c11 \u7ae0 \uff1a \u56fd\u9645\u5316\u7a0b\u5e8f\u5b9e\u73b0"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#42","text":"\u7edf\u4e00\u7a0b\u5e8f\u4ee3\u7801\uff0c\u6839\u636e\u4e0d\u540c\u56fd\u5bb6\u5b9e\u73b0\u4e0d\u540c\u8bed\u8a00\u63cf\u8ff0 \u9700\u8981\u89e3\u51b3\u95ee\u9898\uff1a 1\u3001\u5b9a\u4e49\u4fdd\u5b58\u6587\u5b57\u4fe1\u606f 2\u3001\u6839\u636e\u4e0d\u540c\u533a\u57df\u8bed\u8a00\u7f16\u7801\u8bfb\u53d6\u6587\u4ef6\u4fe1\u606f","title":"42 \u56fd\u9645\u5316\u7a0b\u5e8f\u5b9e\u73b0\u539f\u7406"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#43-locale","text":"Locale\u7c7b\uff1a\u4e13\u95e8\u63cf\u8ff0\u533a\u57df\u548c\u8bed\u8a00\u7f16\u7801\u7684\u7c7b \u6784\u9020\u65b9\u6cd5 public Locale ( String language ) public Locale ( String language , String country ) \u56fd\u5bb6\u8bed\u8a00\u4ee3\u7801 \u4e2d\u6587\uff1azh_CN \u7f8e\u56fd\uff1aen_US \u4f7f\u7528\u793a\u4f8b import java.util.Locale ; class Demo { public static void main ( String [] args ){ Locale loc = new Locale ( \"zh\" , \"CN\" ); System . out . println ( loc ); // zh_CN } } \u8bfb\u53d6\u672c\u5730\u9ed8\u8ba4\u73af\u5883 Locale loc = Locale . getDefault (); System . out . println ( loc ); // zh_CN \u4f7f\u7528\u5e38\u91cf Locale loc = Locale . CHINA ; System . out . println ( loc ); // zh_CN","title":"43 Locale\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#44-resourcebundle","text":"public static final ResourceBundle getBundle ( String baseName ) // baseName \u6ca1\u6709\u540e\u7f00\u7684\u6587\u4ef6\u540d \u8d44\u6e90\u6587\u4ef6 message.properties info = \"\u8fd9\u662f\u6d88\u606f\" \u8bfb\u53d6\u5b9e\u4f8b import java.io.UnsupportedEncodingException ; import java.util.ResourceBundle ; class Demo { public static void main ( String [] args ) throws UnsupportedEncodingException { ResourceBundle bundle = ResourceBundle . getBundle ( \"message\" ); // \u89e3\u51b3\u4e2d\u6587\u4e71\u7801\u95ee\u9898 String message = new String ( bundle . getString ( \"info\" ). getBytes ( \"ISO-8859-1\" ), \"utf-8\" ); System . out . println ( message ); // \"\u8fd9\u662f\u6d88\u606f\" } }","title":"44 ResourceBundle\u8bfb\u53d6\u8d44\u6e90\u6587\u4ef6"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#45","text":"CLASSPATH \u4e0b\u5efa\u7acb\u6587\u4ef6 cat Message . properties info = \u9ed8\u8ba4\u8d44\u6e90 cat Message_zh_CN . properties info = \u4e2d\u6587\u8d44\u6e90 cat Message_en_US . properties info = \u82f1\u6587\u8d44\u6e90 \u6267\u884c\u7a0b\u5e8f\u4f1a\u8bfb\u53d6\u4e2d\u6587\u8d44\u6e90 import java.io.UnsupportedEncodingException ; import java.util.ResourceBundle ; class Demo { public static void main ( String [] args ) throws UnsupportedEncodingException { ResourceBundle bundle = ResourceBundle . getBundle ( \"message\" ); // \u89e3\u51b3\u4e2d\u6587\u4e71\u7801\u95ee\u9898 String message = new String ( bundle . getString ( \"info\" ). getBytes ( \"ISO-8859-1\" ), \"utf-8\" ); System . out . println ( message ); // \u4e2d\u6587\u8d44\u6e90 } } getBundle\u65b9\u6cd5\u9ed8\u8ba4\u52a0\u8f7d Locale.getDefault() public static final ResourceBundle getBundle ( String baseName ) { return getBundleImpl ( baseName , Locale . getDefault (), getLoader ( Reflection . getCallerClass ()), getDefaultControl ( baseName )); } \u4f7f\u7528\u91cd\u8f7d\u51fd\u6570\uff0c\u8bfb\u53d6\u82f1\u6587\u8d44\u6e90 Locale locale = Locale . US ; ResourceBundle bundle = ResourceBundle . getBundle ( \"message\" , locale ); // \u89e3\u51b3\u4e2d\u6587\u4e71\u7801\u95ee\u9898 String message = new String ( bundle . getString ( \"info\" ). getBytes ( \"ISO-8859-1\" ), \"utf-8\" ); System . out . println ( message ); // \u82f1\u6587\u8d44\u6e90 \u5982\u679c\u6ca1\u6709\u5bf9\u5e94\u533a\u57df\u7f16\u7801\u7684\u8d44\u6e90\u6587\u4ef6\uff0c\u8bfb\u53d6\u9ed8\u8ba4\u8d44\u6e90 \u8bfb\u53d6\u6d41\u7a0b\uff1a \u6307\u5b9a\u533a\u57df\u7684\u8d44\u6e90\u6587\u4ef6 > \u9ed8\u8ba4\u7684\u672c\u5730\u8d44\u6e90\u6587\u4ef6 > \u516c\u5171\u7684\u8d44\u6e90\u6587\u4ef6","title":"45 \u5b9e\u73b0\u56fd\u9645\u5316\u7a0b\u5e8f\u5f00\u53d1"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u57fa\u7840\u7c7b\u5e93/#46","text":"\u683c\u5f0f\u5316\u65b9\u6cd5 public class MessageFormat extends Format { public static String format ( String pattern , Object ... arguments ) } \u4ee3\u7801\u793a\u4f8b import java.text.MessageFormat ; import java.text.SimpleDateFormat ; import java.util.Date ; class Demo { public static void main ( String [] args ) { // \u5360\u4f4d\u7b26{} String message = \"hello {0} date: {1}\" ; System . out . println ( MessageFormat . format ( message , \"admin\" , new SimpleDateFormat ( \"yyyy-MM-dd\" ). format ( new Date ()))); // hello admin date: 2019-11-18 } }","title":"46 \u683c\u5f0f\u5316\u6587\u672c\u663e\u793a"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/","text":"\u7b2c1 \u7ae0 \uff1a Java\u591a\u7ebf\u7a0b\u7f16\u7a0b 2 \u8fdb\u7a0b\u4e0e\u7ebf\u7a0b \u8fdb\u7a0b \u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d \u7ebf\u7a0b \u5728\u8fdb\u7a0b\u57fa\u7840\u4e0a\u5212\u5206\u7684\u66f4\u5c0f\u7684\u7a0b\u5e8f\u5355\u5143\uff0c\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u8fdb\u884c\u8fd0\u7b97\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d Java\u591a\u7ebf\u7a0b\u7f16\u7a0b\u8bed\u8a00 3 Thread\u7c7b\u5b9e\u73b0\u591a\u7ebf\u7a0b 1\u3001\u7ee7\u627fJava.lang.Thread\u5b9e\u73b0\u591a\u7ebf\u7a0b \u8986\u5199run\u65b9\u6cd5 start\u542f\u52a8\u7ebf\u7a0b \u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u8c61\u53ea\u80fd\u542f\u52a8\u4e00\u6b21\uff0c\u591a\u6b21\u542f\u52a8\u5c31\u4f1a\u629b\u51fa\u5f02\u5e38 native JNI Java Nativa Interface \u672c\u5730\u63a5\u53e3\uff0c\u9488\u5bf9\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e0d\u540c\u7684\u5b9e\u73b0 class MyThread extends Thread { private String name ; public MyThread ( String name ){ this . name = name ; } @Override public void run (){ for ( int i = 0 ; i < 3 ; i ++) { System . out . println ( this . name + \" -> \" + i ); } } } class Demo { public static void main ( String [] args ) { new MyThread ( \"A\" ). start (); new MyThread ( \"B\" ). start (); new MyThread ( \"C\" ). start (); /** A -> 0 A -> 1 A -> 2 C -> 0 B -> 0 B -> 1 B -> 2 C -> 1 C -> 2 */ } } 4 Runnable\u63a5\u53e3\u5b9e\u73b0\u591a\u7ebf\u7a0b JDK >= 1.8 \u53d8\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3 Thread\u7c7b\u6709\u5355\u7ee7\u627f\u5c40\u9650 class MyThread implements Runnable { private String name ; public MyThread ( String name ){ this . name = name ; } @Override public void run (){ for ( int i = 0 ; i < 3 ; i ++) { System . out . println ( this . name + \" -> \" + i ); } } } class Demo { public static void main ( String [] args ) { Thread t1 = new Thread ( new MyThread ( \"A\" )); Thread t2 = new Thread ( new MyThread ( \"B\" )); Thread t3 = new Thread ( new MyThread ( \"C\" )); t1 . start (); t2 . start (); t3 . start (); /** A -> 0 A -> 1 A -> 2 C -> 0 B -> 0 B -> 1 C -> 1 C -> 2 B -> 2 */ } } \u5229\u7528Runnable + Lambda\u5b9e\u73b0 class Demo { public static void main ( String [] args ) { for ( int i = 0 ; i < 3 ; i ++) { String name = \"\u5bf9\u8c61-\" + i ; Runnable run = ()->{ for ( int j = 0 ; j < 3 ; j ++) { System . out . println ( name + \"-> \" + j ); } }; new Thread ( run ). start (); } /** \u5bf9\u8c61-0-> 0 \u5bf9\u8c61-0-> 1 \u5bf9\u8c61-0-> 2 \u5bf9\u8c61-1-> 0 \u5bf9\u8c61-2-> 0 \u5bf9\u8c61-1-> 1 \u5bf9\u8c61-1-> 2 \u5bf9\u8c61-2-> 1 \u5bf9\u8c61-2-> 2 */ } } \u5229\u7528Thread + Lambda\u5b9e\u73b0 class Demo { public static void main ( String [] args ) { for ( int i = 0 ; i < 3 ; i ++) { String name = \"\u5bf9\u8c61-\" + i ; new Thread (()->{ for ( int j = 0 ; j < 3 ; j ++) { System . out . println ( name + \"-> \" + j ); } }). start (); } /** \u5bf9\u8c61-0-> 0 \u5bf9\u8c61-0-> 1 \u5bf9\u8c61-0-> 2 \u5bf9\u8c61-1-> 0 \u5bf9\u8c61-2-> 0 \u5bf9\u8c61-1-> 1 \u5bf9\u8c61-1-> 2 \u5bf9\u8c61-2-> 1 \u5bf9\u8c61-2-> 2 */ } } \u591a\u7ebf\u7a0b\u4f18\u5148\u8003\u8651Runnable \u5b9e\u73b0\uff0c\u6c38\u8fdc\u90fd\u662fThread.start() \u542f\u52a8 5 Thread\u4e0eRunnable\u5173\u7cfb class Thread implements Runnable Thread \u4ee3\u7406\u7c7b MyThread implements Runnable \u5b9e\u9645\u4e1a\u52a1 \u4f7f\u7528\u4e86\u4ee3\u7406\u8bbe\u8ba1\u6a21\u5f0f Thread t = new Thread ( new MyThread ()); Thread\u7c7b\u542f\u52a8\u591a\u7ebf\u7a0b\u8c03\u7528\u7684\u662fstart()\u65b9\u6cd5\uff0c\u800c\u540e\u542f\u52a8run()\u65b9\u6cd5 Thread\u7c7b\u63a5\u6536Runnable \u63a5\u53e3\u5bf9\u8c61\uff0c\u8c03\u7528start()\u65b9\u6cd5\u540e\uff0c\u4f1a\u542f\u52a8Runnable \u63a5\u53e3\u5bf9\u8c61\u7684run()\u65b9\u6cd5 \u591a\u7ebf\u7a0b\u5b9e\u8d28\u4e0a\u5728\u4e8e\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u8fdb\u884c\u540c\u4e00\u8d44\u6e90\u7684\u62a2\u5360 Thread \u63cf\u8ff0\u7684\u662f\u7ebf\u7a0b Runnable \u63cf\u8ff0\u8d44\u6e90 class MyThread implements Runnable { private int ticket = 5 ; public void run () { while ( true ){ if ( ticket > 0 ){ System . out . println ( ticket -- ); } else { break ; } } } } public class Demo { public static void main ( String [] args ) { MyThread t = new MyThread (); Thread t1 = new Thread ( t ); Thread t2 = new Thread ( t ); Thread t3 = new Thread ( t ); t1 . start (); t2 . start (); t3 . start (); /** * 5 * 3 * 2 * 1 * 4 */ } } 6 Callable\u63a5\u53e3\u5b9e\u73b0\u591a\u7ebf\u7a0b JDK >= 1.5 java.util.concurrent.Callable @FunctionalInterface public interface Callable < V > { V call () throws Exception ; } \u7ee7\u627f\u5173\u7cfb class Thread implements Runnable public interface RunnableFuture < V > extends Runnable , Future < V > public class FutureTask < V > implements RunnableFuture < V > { import java.util.concurrent.Callable ; import java.util.concurrent.FutureTask ; import java.util.concurrent.ExecutionException ; class MyThread implements Callable < String >{ public String call () { return \"\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\" ; } } public class Demo { public static void main ( String [] args ) throws ExecutionException , InterruptedException { FutureTask < String > task = new FutureTask < String >( new MyThread ()); new Thread ( task ). start (); System . out . println ( task . get ()); // \u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5 } } \u533a\u522b Callable Runnable Runnable JDK1.0 \u53ea\u6709run\u65b9\u6cd5\uff0c\u6ca1\u6709\u8fd4\u56de\u503c Callable JDK1.5 \u63d0\u4f9bcall\u65b9\u6cd5\uff0c\u6709\u8fd4\u56de\u503c 7 \u591a\u7ebf\u7a0b\u8fd0\u884c\u72b6\u6001 \u7ebf\u7a0b\u751f\u547d\u5468\u671f \u521b\u5efa start () \u5c31\u7eea \u8fd0\u884c run () \u963b\u585e \u7ec8\u6b62 \u7b2c2 \u7ae0 \uff1a \u7ebf\u7a0b\u5e38\u7528\u64cd\u4f5c\u65b9\u6cd5 8 \u7ebf\u7a0b\u7684\u547d\u540d\u548c\u53d6\u5f97 \u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\u5bf9\u8c61 public static native Thread currentThread (); \u7ebf\u7a0b\u81ea\u52a8\u547d\u540d\uff0c\u4f7f\u7528 static import java.util.concurrent.ExecutionException ; import java.util.concurrent.FutureTask ; class MyThread implements Runnable { public void run () { System . out . println ( Thread . currentThread (). getName ()); } } public class Demo { public static void main ( String [] args ) throws ExecutionException , InterruptedException { MyThread t = new MyThread (); new Thread ( t , \"\u7ebf\u7a0bA\" ). start (); new Thread ( t ). start (); new Thread ( t , \"\u7ebf\u7a0bB\" ). start (); /** * \u7ebf\u7a0bA * \u7ebf\u7a0bB * Thread-0 */ } } \u4e3b\u7ebf\u7a0b public static void main ( String [] args ) throws ExecutionException , InterruptedException { System . out . println ( Thread . currentThread (). getName ()); // main } \u4e3b\u7ebf\u7a0b\u53ef\u4ee5\u521b\u5efa\u82e5\u5e72\u5b50\u7ebf\u7a0b \u4e3b\u7ebf\u7a0b\u63a7\u5236\u4e3b\u4f53\u6d41\u7a0b \u5b50\u7ebf\u7a0b\u6267\u884c\u8017\u65f6\u64cd\u4f5c 9 \u7ebf\u7a0b\u4f11\u7720 \u7ebf\u7a0b\u6682\u7f13\u6267\u884c Exception \u5fc5\u987b\u5904\u7406 class InterruptedException extends Exception public static native void sleep ( long millis ) throws InterruptedException ; public static void sleep ( long millis , int nanos ) throws InterruptedException ; \u4f11\u7720\u7ebf\u7a0b public class Demo { public static void main ( String [] args ) { new Thread (()->{ for ( int i = 0 ; i < 3 ; i ++){ System . out . println ( i ); // \u6682\u505c\u4e00\u79d2 try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } } }). start (); } } 10 \u7ebf\u7a0b\u4e2d\u65ad \u4e2d\u65ad\u7ebf\u7a0b\u6267\u884c public void interrupt () \u5224\u65ad\u7ebf\u7a0b\u662f\u5426\u88ab\u4e2d\u65ad public boolean isInterrupted () \u6240\u6709\u7ebf\u7a0b\u90fd\u53ef\u4ee5\u88ab\u4e2d\u65ad\uff0c\u4e2d\u65ad\u5f02\u5e38\u5fc5\u987b\u5904\u7406 public class Demo { public static void main ( String [] args ) { Thread t = new Thread (() -> { // \u6682\u505c10\u79d2 try { Thread . sleep ( 10 * 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } }); t . start (); if (! t . isInterrupted ()) { t . interrupt (); } // \u629b\u51fa\u5f02\u5e38 sleep interrupted } } 11 \u7ebf\u7a0b\u5f3a\u5236\u8fd0\u884c \u7ebf\u7a0b\u72ec\u5360\u8d44\u6e90\uff0c\u4e00\u76f4\u5230\u7ebf\u7a0b\u6267\u884c\u7ed3\u675f public final void join () throws InterruptedException public class Demo { public static void main ( String [] args ) { Thread mainThread = Thread . currentThread (); Thread t = new Thread (() -> { // \u5f3a\u5236\u6267\u884c\u4e3b\u7ebf\u7a0b try { mainThread . join (); } catch ( InterruptedException e ) { e . printStackTrace (); } for ( int i = 0 ; i < 3 ; i ++) { System . out . println ( Thread . currentThread (). getName () + \" \" + i ); } }); t . start (); for ( int i = 0 ; i < 3 ; i ++) { System . out . println ( Thread . currentThread (). getName () + \" \" + i ); } // \u629b\u51fa\u5f02\u5e38 sleep interrupted } } 12 \u7ebf\u7a0b\u793c\u8ba9 yield \u4ea7\u751f;\u8ba9\u6b65 \u6bcf\u4e00\u6b21\u8c03\u7528yield()\u65b9\u6cd5\u53ea\u4f1a\u793c\u8ba9\u4e00\u6b21\u5f53\u524d\u7684\u8d44\u6e90 public static native void yield (); public class Demo { public static void main ( String [] args ) { Thread t = new Thread (() -> { for ( int i = 0 ; i < 30 ; i ++) { System . out . println ( \"\u793c\u8ba9\u8d44\u6e90\" ); Thread . yield (); System . out . println ( Thread . currentThread (). getName () + \" \" + i ); } }); t . start (); for ( int i = 0 ; i < 30 ; i ++) { System . out . println ( Thread . currentThread (). getName () + \" \" + i ); } } } 13 \u7ebf\u7a0b\u4f18\u5148\u7ea7 \u7ebf\u7a0b\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff0c\u8d8a\u53ef\u80fd\u5148\u6267\u884c\uff0c\u53ef\u80fd\u4f18\u5148\u62a2\u5360\u5230\u8d44\u6e90 public final int getPriority () public final void setPriority ( int newPriority ) \u4f18\u5148\u7ea7\u5e38\u91cf MIN_PRIORITY = 1 ; NORM_PRIORITY = 5 ; MAX_PRIORITY = 10 ; \u4e3b\u7ebf\u7a0b\u4f18\u5148\u7ea7,\u548c\u9ed8\u8ba4\u4f18\u5148\u7ea7\u90fd\u662f\u4e2d\u7b49\u4f18\u5148\u7ea7 5 public class Demo { public static void main ( String [] args ) { System . out . println ( Thread . currentThread (). getPriority ()); // 5 } } \u7b2c3 \u7ae0 \uff1a \u7ebf\u7a0b\u7684\u540c\u6b65\u4e0e\u6b7b\u9501 14 \u540c\u6b65\u95ee\u9898\u5f15\u51fa Thread\u63cf\u8ff0\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u8c61 Runnable\u63cf\u8ff0\u591a\u4e2a\u7ebf\u7a0b\u64cd\u4f5c\u7684\u8d44\u6e90 \u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u540c\u4e00\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u5982\u679c\u5904\u7406\u4e0d\u5f53\u4f1a\u4ea7\u751f\u6570\u636e\u9519\u8bef 3\u4e2a\u7ebf\u7a0b\u5356\u7968\u7a0b\u5e8f\uff0c\u4f1a\u51fa\u73b0\u591a\u5f20\u540c\u53f7\u7684\u7968 class MyThread implements Runnable { private int ticket = 10 ; @Override public void run () { while ( true ) { if ( this . ticket > 0 ) { System . out . println ( Thread . currentThread (). getName () + \"\u5356\u7b2c\" + this . ticket + \" \u5f20\u7968\" ); this . ticket --; } else { System . out . println ( \"\u7968\u5356\u5149\u4e86\" ); break ; } } } } public class Demo { public static void main ( String [] args ) { MyThread thread = new MyThread (); new Thread ( thread ). start (); new Thread ( thread ). start (); new Thread ( thread ). start (); // 5 } } 15 \u7ebf\u7a0b\u540c\u6b65\u5904\u7406 \u540c\u6b65\uff1a\u591a\u4e2a\u64cd\u4f5c\u5728\u540c\u4e00\u65f6\u95f4\u6bb5\u5185\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u884c\uff0c \u5176\u4ed6\u7ebf\u7a0b\u8981\u7b49\u5f85\u6b64\u7ebf\u7a0b\u5b8c\u6210\u4e4b\u540e\u624d\u53ef\u4ee5\u7ee7\u7eed\u8fd8\u884c \u89e3\u51b3\u540c\u6b65\u95ee\u9898\u7684\u65b9\u5f0f\u662f\u9501 synchronized\u5b9a\u4e49\u540c\u6b65\u65b9\u6cd5\u6216\u540c\u6b65\u4ee3\u7801\u5757\uff0c\u91cc\u8fb9\u7684\u4ee3\u7801\u53ea\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c \u52a0\u5165\u540c\u6b65\u4e4b\u540e\uff0c\u7a0b\u5e8f\u6574\u4f53\u6027\u80fd\u4e0b\u964d\u4e86 1\u3001\u540c\u6b65\u4ee3\u7801\u5757 synchronized ( \u540c\u6b65\u5bf9\u8c61 ){} \u4e3e\u4f8b synchronized ( this ) { if ( this . ticket > 0 ) { System . out . println ( Thread . currentThread (). getName () + \"\u5356\u7b2c\" + this . ticket + \" \u5f20\u7968\" ); this . ticket --; } else { System . out . println ( \"\u7968\u5356\u5149\u4e86\" ); break ; } } 2\u3001\u540c\u6b65\u51fd\u6570 public synchronized boolean method (){} \u4e3e\u4f8b public synchronized boolean sale (){ if ( this . ticket > 0 ) { System . out . println ( Thread . currentThread (). getName () + \"\u5356\u7b2c\" + this . ticket + \" \u5f20\u7968\" ); this . ticket --; return true ; } else { System . out . println ( \"\u7968\u5356\u5149\u4e86\" ); return false ; } } 16 \u7ebf\u7a0b\u6b7b\u9501 \u6b7b\u9501\u662f\u5728\u8fdb\u884c\u591a\u7ebf\u7a0b\u540c\u6b65\u5904\u7406\u4e4b\u4e2d\u6709\u53ef\u80fd\u4ea7\u751f\u7684\u4e00\u79cd\u95ee\u9898 \u662f\u6307\u82e5\u5e72\u4e2a\u7ebf\u7a0b\u5f7c\u6b64\u4e92\u76f8\u7b49\u5f85\u7684\u72b6\u6001 \u82e5\u5e72\u7ebf\u7a0b\u8bbf\u95ee\u540c\u4e00\u8d44\u6e90\u65f6\uff0c\u4e00\u5b9a\u8981\u8fdb\u884c\u540c\u6b65\u5904\u7406 \u800c\u8fc7\u591a\u7684\u540c\u6b65\u4f1a\u9020\u6210\u6b7b\u9501 public class Demo { public static void main ( String [] args ) { //o1 o2 \u4ee3\u8868\u8d44\u6e90 Object o1 = new Object (); Object o2 = new Object (); System . out . println ( \"go go go!\" ); Thread t1 = new Thread ( new Runnable () { public void run () { synchronized ( o1 ) { //\u7ebf\u7a0bt1\u83b7\u53d6o1\u7684\u9501\u624d\u80fd\u7ee7\u7eed\u6267\u884c try { Thread . sleep ( 3000 ); //\u77613\u79d2\uff0c\u786e\u4fdd\u7ebf\u7a0bt2\u628ao2\u9501\u62ff\u8d70 } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( \"t1\u83b7\u5f97\u4e86\u54e6O1\" ); synchronized ( o2 ) { //\u7ebf\u7a0bt1\u83b7\u53d6o2\u7684\u9501\u624d\u80fd\u7ee7\u7eed\u6267\u884c System . out . println ( \"t1\u83b7\u5f97\u4e86\u54e6O2\" ); } } } }); Thread t2 = new Thread ( new Runnable () { public void run () { synchronized ( o2 ) { //\u7ebf\u7a0bt2\u83b7\u53d6o2\u7684\u9501\u624d\u80fd\u7ee7\u7eed\u6267\u884c try { Thread . sleep ( 3000 ); //\u77613\u79d2\uff0c\u786e\u4fdd\u7ebf\u7a0bt1\u628ao1\u9501\u62ff\u8d70 } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( \"t2\u83b7\u5f97\u4e86\u54e6O2\" ); synchronized ( o1 ) { //\u7ebf\u7a0bt2\u83b7\u53d6o1\u7684\u9501\u624d\u80fd\u7ee7\u7eed\u6267\u884c System . out . println ( \"t2\u83b7\u5f97\u4e86\u54e6O1\" ); } } } }); t1 . start (); t2 . start (); //\u542f\u52a8\u7ebf\u7a0b } } \u7b2c4 \u7ae0 \uff1a \u7efc\u5408\u5b9e\u6218\uff1a\u201c\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u201d\u6a21\u578b 17 \u751f\u4ea7\u8005\u4e0e\u6d88\u8d39\u8005\u57fa\u672c\u7a0b\u5e8f\u6a21\u578b \u751f\u4ea7\u8005\u8d1f\u8d23\u4fe1\u606f\u5185\u5bb9\u751f\u4ea7 \u6d88\u8d39\u8005\u53d6\u8d70\u4fe1\u606f \u6d88\u8d39\u8005\u8981\u7b49\u5f85\u751f\u4ea7\u8005\u751f\u4ea7\u5b8c\u6210\u518d\u53d6\u8d70 \u751f\u4ea7\u8005\u9700\u8981\u7b49\u5f85\u6d88\u8d39\u8005\u6d88\u8d39\u5b8c\u6210\u518d\u751f\u4ea7 \u4e0d\u52a0\u9501\u793a\u4f8b class Message { private String content ; public void setContent ( String content ) { this . content = content ; } public String getContent () { return content ; } } class Producer implements Runnable { private Message message ; private static int count ; public Producer ( Message message ) { this . message = message ; } @Override public void run () { for ( int i = 0 ; i < 10 ; i ++) { try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } this . message . setContent ( \"\u8fd9\u662f\u7b2c\" + count + \" \u4e2a\u6d88\u606f\" ); count ++; } } } class Consumer implements Runnable { private Message message ; public Consumer ( Message message ) { this . message = message ; } @Override public void run () { for ( int i = 0 ; i < 10 ; i ++) { try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( this . message . getContent ()); } } } class Demo { public static void main ( String [] args ) { Message message = new Message (); new Thread ( new Producer ( message )). start (); new Thread ( new Consumer ( message )). start (); } } /** \u8fd9\u662f\u7b2c0 \u4e2a\u6d88\u606f \u8fd9\u662f\u7b2c0 \u4e2a\u6d88\u606f \u8fd9\u662f\u7b2c1 \u4e2a\u6d88\u606f \u8fd9\u662f\u7b2c2 \u4e2a\u6d88\u606f \u8fd9\u662f\u7b2c3 \u4e2a\u6d88\u606f \u8fd9\u662f\u7b2c4 \u4e2a\u6d88\u606f \u8fd9\u662f\u7b2c5 \u4e2a\u6d88\u606f \u8fd9\u662f\u7b2c6 \u4e2a\u6d88\u606f \u8fd9\u662f\u7b2c7 \u4e2a\u6d88\u606f \u8fd9\u662f\u7b2c8 \u4e2a\u6d88\u606f */ 18 \u89e3\u51b3\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u540c\u6b65\u95ee\u9898 \u589e\u52a0\u5173\u952e\u5b57 synchronized 19 \u5229\u7528Object\u7c7b\u89e3\u51b3\u91cd\u590d\u64cd\u4f5c \u7b49\u5f85\u673a\u5236 (1)\u4e00\u76f4\u7b49\u5f85 public final void wait () (2)\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4 public final native void wait ( long timeout ) \u5524\u9192\u7ebf\u7a0b (1)\u5524\u9192\u4e00\u4e2a\u7b49\u5f85\u7ebf\u7a0b, \u5524\u9192\u7b2c\u4e00\u4e2a\u7b49\u5f85\u7684\u7ebf\u7a0b public final native void notify (); (2)\u5524\u9192\u5168\u90e8\u7b49\u5f85\u7ebf\u7a0b,\u8c01\u4f18\u5148\u7ea7\u9ad8\u8c01\u5148\u6267\u884c public final native void notifyAll (); \u5b8c\u6574\u4ee3\u7801 class Message { private String content ; private boolean flag = false ; // \u751f\u4ea7\u5b8c\u6210\u5c31\u4e3atrue public synchronized void setContent ( String content ) { if ( this . flag == true ) { try { wait (); } catch ( InterruptedException e ) { e . printStackTrace (); } } try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } this . content = content ; this . flag = true ; notify (); } public synchronized String getContent () { if ( this . flag == false ) { try { wait (); } catch ( InterruptedException e ) { e . printStackTrace (); } } try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } try { return content ; } finally { this . flag = false ; notify (); } } } class Producer implements Runnable { private Message message ; private static int count ; public Producer ( Message message ) { this . message = message ; } @Override public void run () { for ( int i = 0 ; i < 10 ; i ++) { this . message . setContent ( \"\u8fd9\u662f\u7b2c\" + count + \" \u4e2a\u6d88\u606f\" ); count ++; } } } class Consumer implements Runnable { private Message message ; public Consumer ( Message message ) { this . message = message ; } @Override public void run () { for ( int i = 0 ; i < 10 ; i ++) { System . out . println ( this . message . getContent ()); } } } class Demo { public static void main ( String [] args ) { Message message = new Message (); new Thread ( new Producer ( message )). start (); new Thread ( new Consumer ( message )). start (); } } \u7b2c5 \u7ae0 \uff1a \u591a\u7ebf\u7a0b\u6df1\u5165\u8bdd\u9898 20 \u4f18\u96c5\u7684\u505c\u6b62\u7ebf\u7a0b \u5df2\u5e9f\u9664\u7684\u65b9\u6cd5\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7ebf\u7a0b\u6b7b\u9501\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528 // \u505c\u6b62\u7ebf\u7a0b public final void stop () // \u9500\u6bc1\u7ebf\u7a0b public void destroy () // \u6302\u8d77\u7ebf\u7a0b public final void suspend () // \u6062\u590d\u7ebf\u7a0b public final void resume () \u4f7f\u7528flag \u6807\u5fd7\u4f4d\u4e0d\u4f1a\u7acb\u523b\u505c\u6b62\uff0c\u800c\u662f\u5f53\u524d\u7ebf\u7a0b\u81ea\u5df1\u5224\u65ad class Demo { private static boolean flag = true ; public static void main ( String [] args ) { new Thread (()->{ while ( flag ){ try { Thread . sleep ( 600 ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( Thread . currentThread (). getName ()+ \"\u6b63\u5728\u6267\u884c\" ); } }, \"\u81ea\u5b9a\u4e49\u7ebf\u7a0b\" ). start (); try { Thread . sleep ( 2000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( \"\u65f6\u95f4\u5230\" ); flag = false ; } } 21 \u540e\u53f0\u5b88\u62a4\u7ebf\u7a0b \u5b88\u62a4\u7ebf\u7a0b\uff0c\u5982\u679c\u4e3b\u7ebf\u7a0b\u9000\u51fa\uff0c\u5b88\u62a4\u7ebf\u7a0b\u5c31\u9000\u51fa GC\u5c31\u662f\u5b88\u62a4\u7ebf\u7a0b \u8bbe\u7f6e\u4e3a\u5b88\u62a4\u7ebf\u7a0b public final void setDaemon ( boolean on ) \u5224\u65ad\u662f\u5426\u4e3a\u5b88\u62a4\u7ebf\u7a0b public final boolean isDaemon () \u793a\u4f8b \u8bbe\u7f6e\u7ebf\u7a0b\u4e3a\u5b88\u62a4\u7ebf\u7a0b\u540e\uff0c\u4e3b\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\u5c31\u9000\u51fa\u4e86\uff0c\u5e76\u4e0d\u4f1a\u6253\u5370\u4efb\u4f55\u5185\u5bb9 class MyThread implements Runnable { @Override public void run () { try { Thread . sleep ( 100 ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( Thread . currentThread (). getName ()+ \" \u6b63\u5728\u6267\u884c\" ); } } class Demo { public static void main ( String [] args ) { Thread t = new Thread ( new MyThread ()); t . setDaemon ( true ); t . start (); } } 22 volatile\u5173\u952e\u5b57 volatile \u7528\u4e8e\u5c5e\u6027\u5b9a\u4e49\uff0c \u4e2d\u6587\u610f\u601d\uff1a\u6613\u53d8\u7684 \u53d8\u91cf\u5904\u7406\u7684\u6b65\u9aa4\uff1a \uff081\uff09\u83b7\u53d6\u53d8\u91cf\u539f\u6709\u7684\u6570\u636e\u5185\u5bb9\u526f\u672c \uff082\uff09\u5229\u7528\u526f\u672c\u4e3a\u53d8\u91cf\u8fdb\u884c\u6570\u5b66\u8ba1\u7b97 \uff083\uff09\u5efa\u8ba1\u7b97\u540e\u7684\u53d8\u91cf\uff0c\u4fdd\u5b58\u5230\u539f\u59cb\u7a7a\u95f4\u4e2d \u8bfb\u53d6 read <- \u6570\u636e\u526f\u672c \u52a0\u8f7d load \u4f7f\u7528 use \u8d4b\u503c asign \u5b58\u50a8 store \u5199\u5165 write -> \u539f\u59cb\u7a7a\u95f4 \u5c5e\u6027\u4e0a\u52a0\u4e86volatile, \u6ca1\u6709\u4e2d\u95f4\u62f7\u8d1d\u8fc7\u7a0b\uff0c\u76f4\u63a5\u4f7f\u7528\u539f\u59cb\u6570\u636e \u533a\u522b\uff1avolatile \u548c synchronized volatile\uff1a \u4e3b\u8981\u5728\u5c5e\u6027\u4e0a\u4f7f\u7528\uff0c\u65e0\u6cd5\u63cf\u8ff0\u540c\u6b65\uff0c\u76f4\u63a5\u5185\u5b58\u5904\u7406\uff0c\u907f\u514d\u526f\u672c\u64cd\u4f5c synchronized\uff1a \u4ee3\u7801\u5757\u4e0e\u65b9\u6cd5\u4e0a\u4f7f\u7528 class MyThread implements Runnable { private volatile int count = 10 ; @Override public void run () { while ( count > 0 ) { try { Thread . sleep ( 100 ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( Thread . currentThread (). getName ()+ \" \u6b63\u5728\u6267\u884c\" ); count --; } } } class Demo { public static void main ( String [] args ) { Thread t = new Thread ( new MyThread ()); t . start (); } } \u7b2c6 \u7ae0 \uff1a \u591a\u7ebf\u7a0b\u7efc\u5408\u6848\u4f8b 23 \u6570\u5b57\u52a0\u51cf 4\u4e2a\u7ebf\u7a0b\uff0c2\u4e2a\u7ebf\u7a0b\u52a0\uff0c2\u4e2a\u7ebf\u7a0b\u51cf \u5faa\u73af\u51fa\u73b0 \u52a0\u4e00\u4e2a\uff0c\u51cf\u4e00\u4e2a // \u8d44\u6e90 class Resource { private int count = 0 ; // \u4e3afalse\u53ef\u4ee5\u589e\u52a0,\u52a0\u5b8c\u4e86\u8bbe\u7f6e\u4e3atrue\uff0c // \u4e3atrue\u53ef\u4ee5\u51cf\u5c11\uff0c\u51cf\u5b8c\u4e86\u8bbe\u7f6e\u4e3afalse private boolean flag = false ; public synchronized void add () { if ( this . flag == true ) { try { super . wait (); } catch ( InterruptedException e ) { e . printStackTrace (); } } try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } this . count ++; System . out . println ( Thread . currentThread (). getName () + \" count=\" + count ); this . flag = true ; super . notifyAll (); } public synchronized void sub () { if ( this . flag == false ) { System . out . println ( this . flag ); try { super . wait (); } catch ( InterruptedException e ) { e . printStackTrace (); } } try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } this . count --; System . out . println ( Thread . currentThread (). getName () + \" count=\" + count ); this . flag = false ; super . notifyAll (); } } // \u52a0\u6cd5\u7ebf\u7a0b class AddThread implements Runnable { private Resource resource ; public AddThread ( Resource resource ) { this . resource = resource ; } @Override public void run () { for ( int i = 0 ; i < 10 ; i ++) { this . resource . add (); } } } // \u51cf\u6cd5\u7ebf\u7a0b class SubThread implements Runnable { private Resource resource ; public SubThread ( Resource resource ) { this . resource = resource ; } @Override public void run () { for ( int i = 0 ; i < 10 ; i ++) { this . resource . sub (); } } } class Demo { public static void main ( String [] args ) { Resource resource = new Resource (); AddThread at = new AddThread ( resource ); SubThread st = new SubThread ( resource ); new Thread ( at , \"\u52a0\u6cd5\u7ebf\u7a0b-A\" ). start (); new Thread ( at , \"\u52a0\u6cd5\u7ebf\u7a0b-B\" ). start (); new Thread ( st , \"\u51cf\u6cd5\u7ebf\u7a0b-X\" ). start (); new Thread ( st , \"\u51cf\u6cd5\u7ebf\u7a0b-Y\" ). start (); } } \u5e76\u6ca1\u6709\u51fa\u73b0\u4e00\u52a0\u4e00\u51cf\u7684\u73b0\u8c61 24 \u751f\u4ea7\u7535\u8111 \u751f\u4ea7\u4e00\u53f0\u642c\u8fd0\u4e00\u53f0 \u6d88\u8d39\u8005\u751f\u4ea7\u8005\u6a21\u578b class Computer { private static int count ; public Computer () { count ++; } @Override public String toString () { return \"\u7535\u8111\u7f16\u53f7\uff1a\" + count ; } } class Resource { private Computer computer ; public synchronized void make (){ if ( computer != null ){ try { wait (); } catch ( InterruptedException e ) { e . printStackTrace (); } } try { Thread . sleep ( 100 ); } catch ( InterruptedException e ) { e . printStackTrace (); } this . computer = new Computer (); System . out . println ( \"\u751f\u4ea7\uff1a\" + this . computer ); notifyAll (); } public synchronized void get (){ if ( computer == null ){ try { wait (); } catch ( InterruptedException e ) { e . printStackTrace (); } } try { Thread . sleep ( 10 ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( \"\u53d6\u8d70\uff1a\" + this . computer ); this . computer = null ; notifyAll (); } } class Producer implements Runnable { private Resource resource ; public Producer ( Resource resource ) { this . resource = resource ; } @Override public void run () { for ( int i = 0 ; i < 10 ; i ++) { resource . make (); } } } class Consumer implements Runnable { private Resource resource ; public Consumer ( Resource resource ) { this . resource = resource ; } @Override public void run () { for ( int i = 0 ; i < 10 ; i ++) { resource . get (); } } } class Demo { public static void main ( String [] args ) { Resource resource = new Resource (); new Thread ( new Producer ( resource )). start (); new Thread ( new Consumer ( resource )). start (); } } 25 \u7ade\u4e89\u62a2\u7b54 3\u4e2a\u62a2\u7b54\u7ebf\u7a0b\uff0c\u540c\u65f6\u53d1\u51fa\u62a2\u7b54\u6307\u4ee4 \u6210\u529f\u548c\u5931\u8d25\u90fd\u7ed9\u4e0e\u63d0\u793a \u6709\u6570\u636e\u8fd4\u56de\uff0c\u91c7\u7528Callable\u65b9\u5f0f import java.util.concurrent.Callable ; import java.util.concurrent.FutureTask ; class MyThread implements Callable < String > { private boolean flag = false ; @Override public String call () throws Exception { synchronized ( this ) { // \u5982\u679c\u6ca1\u6709\u4eba\u62a2\u7b54\u6210\u529f\u5219\u53ef\u4ee5\u62a2\u7b54 if ( this . flag == false ) { this . flag = true ; return Thread . currentThread (). getName () + \"\u62a2\u7b54\u6210\u529f\uff01\" ; } else { return Thread . currentThread (). getName () + \"\u62a2\u7b54\u5931\u8d25\uff01\" ; } } } } class Demo { public static void main ( String [] args ) throws Exception { MyThread t = new MyThread (); FutureTask < String > task1 = new FutureTask < String >( t ); FutureTask < String > task2 = new FutureTask < String >( t ); FutureTask < String > task3 = new FutureTask < String >( t ); new Thread ( task1 , \"\u62a2\u7b54\u8005A\" ). start (); new Thread ( task2 , \"\u62a2\u7b54\u8005B\" ). start (); new Thread ( task3 , \"\u62a2\u7b54\u8005C\" ). start (); System . out . println ( task1 . get ()); System . out . println ( task2 . get ()); System . out . println ( task3 . get ()); } }","title":"\u7b2c1 \u7ae0 \uff1a Java\u591a\u7ebf\u7a0b\u7f16\u7a0b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#1-java","text":"","title":"\u7b2c1 \u7ae0 \uff1a Java\u591a\u7ebf\u7a0b\u7f16\u7a0b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#2","text":"\u8fdb\u7a0b \u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d \u7ebf\u7a0b \u5728\u8fdb\u7a0b\u57fa\u7840\u4e0a\u5212\u5206\u7684\u66f4\u5c0f\u7684\u7a0b\u5e8f\u5355\u5143\uff0c\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u8fdb\u884c\u8fd0\u7b97\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d Java\u591a\u7ebf\u7a0b\u7f16\u7a0b\u8bed\u8a00","title":"2 \u8fdb\u7a0b\u4e0e\u7ebf\u7a0b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#3-thread","text":"1\u3001\u7ee7\u627fJava.lang.Thread\u5b9e\u73b0\u591a\u7ebf\u7a0b \u8986\u5199run\u65b9\u6cd5 start\u542f\u52a8\u7ebf\u7a0b \u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u8c61\u53ea\u80fd\u542f\u52a8\u4e00\u6b21\uff0c\u591a\u6b21\u542f\u52a8\u5c31\u4f1a\u629b\u51fa\u5f02\u5e38 native JNI Java Nativa Interface \u672c\u5730\u63a5\u53e3\uff0c\u9488\u5bf9\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e0d\u540c\u7684\u5b9e\u73b0 class MyThread extends Thread { private String name ; public MyThread ( String name ){ this . name = name ; } @Override public void run (){ for ( int i = 0 ; i < 3 ; i ++) { System . out . println ( this . name + \" -> \" + i ); } } } class Demo { public static void main ( String [] args ) { new MyThread ( \"A\" ). start (); new MyThread ( \"B\" ). start (); new MyThread ( \"C\" ). start (); /** A -> 0 A -> 1 A -> 2 C -> 0 B -> 0 B -> 1 B -> 2 C -> 1 C -> 2 */ } }","title":"3 Thread\u7c7b\u5b9e\u73b0\u591a\u7ebf\u7a0b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#4-runnable","text":"JDK >= 1.8 \u53d8\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3 Thread\u7c7b\u6709\u5355\u7ee7\u627f\u5c40\u9650 class MyThread implements Runnable { private String name ; public MyThread ( String name ){ this . name = name ; } @Override public void run (){ for ( int i = 0 ; i < 3 ; i ++) { System . out . println ( this . name + \" -> \" + i ); } } } class Demo { public static void main ( String [] args ) { Thread t1 = new Thread ( new MyThread ( \"A\" )); Thread t2 = new Thread ( new MyThread ( \"B\" )); Thread t3 = new Thread ( new MyThread ( \"C\" )); t1 . start (); t2 . start (); t3 . start (); /** A -> 0 A -> 1 A -> 2 C -> 0 B -> 0 B -> 1 C -> 1 C -> 2 B -> 2 */ } } \u5229\u7528Runnable + Lambda\u5b9e\u73b0 class Demo { public static void main ( String [] args ) { for ( int i = 0 ; i < 3 ; i ++) { String name = \"\u5bf9\u8c61-\" + i ; Runnable run = ()->{ for ( int j = 0 ; j < 3 ; j ++) { System . out . println ( name + \"-> \" + j ); } }; new Thread ( run ). start (); } /** \u5bf9\u8c61-0-> 0 \u5bf9\u8c61-0-> 1 \u5bf9\u8c61-0-> 2 \u5bf9\u8c61-1-> 0 \u5bf9\u8c61-2-> 0 \u5bf9\u8c61-1-> 1 \u5bf9\u8c61-1-> 2 \u5bf9\u8c61-2-> 1 \u5bf9\u8c61-2-> 2 */ } } \u5229\u7528Thread + Lambda\u5b9e\u73b0 class Demo { public static void main ( String [] args ) { for ( int i = 0 ; i < 3 ; i ++) { String name = \"\u5bf9\u8c61-\" + i ; new Thread (()->{ for ( int j = 0 ; j < 3 ; j ++) { System . out . println ( name + \"-> \" + j ); } }). start (); } /** \u5bf9\u8c61-0-> 0 \u5bf9\u8c61-0-> 1 \u5bf9\u8c61-0-> 2 \u5bf9\u8c61-1-> 0 \u5bf9\u8c61-2-> 0 \u5bf9\u8c61-1-> 1 \u5bf9\u8c61-1-> 2 \u5bf9\u8c61-2-> 1 \u5bf9\u8c61-2-> 2 */ } } \u591a\u7ebf\u7a0b\u4f18\u5148\u8003\u8651Runnable \u5b9e\u73b0\uff0c\u6c38\u8fdc\u90fd\u662fThread.start() \u542f\u52a8","title":"4 Runnable\u63a5\u53e3\u5b9e\u73b0\u591a\u7ebf\u7a0b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#5-threadrunnable","text":"class Thread implements Runnable Thread \u4ee3\u7406\u7c7b MyThread implements Runnable \u5b9e\u9645\u4e1a\u52a1 \u4f7f\u7528\u4e86\u4ee3\u7406\u8bbe\u8ba1\u6a21\u5f0f Thread t = new Thread ( new MyThread ()); Thread\u7c7b\u542f\u52a8\u591a\u7ebf\u7a0b\u8c03\u7528\u7684\u662fstart()\u65b9\u6cd5\uff0c\u800c\u540e\u542f\u52a8run()\u65b9\u6cd5 Thread\u7c7b\u63a5\u6536Runnable \u63a5\u53e3\u5bf9\u8c61\uff0c\u8c03\u7528start()\u65b9\u6cd5\u540e\uff0c\u4f1a\u542f\u52a8Runnable \u63a5\u53e3\u5bf9\u8c61\u7684run()\u65b9\u6cd5 \u591a\u7ebf\u7a0b\u5b9e\u8d28\u4e0a\u5728\u4e8e\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u8fdb\u884c\u540c\u4e00\u8d44\u6e90\u7684\u62a2\u5360 Thread \u63cf\u8ff0\u7684\u662f\u7ebf\u7a0b Runnable \u63cf\u8ff0\u8d44\u6e90 class MyThread implements Runnable { private int ticket = 5 ; public void run () { while ( true ){ if ( ticket > 0 ){ System . out . println ( ticket -- ); } else { break ; } } } } public class Demo { public static void main ( String [] args ) { MyThread t = new MyThread (); Thread t1 = new Thread ( t ); Thread t2 = new Thread ( t ); Thread t3 = new Thread ( t ); t1 . start (); t2 . start (); t3 . start (); /** * 5 * 3 * 2 * 1 * 4 */ } }","title":"5 Thread\u4e0eRunnable\u5173\u7cfb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#6-callable","text":"JDK >= 1.5 java.util.concurrent.Callable @FunctionalInterface public interface Callable < V > { V call () throws Exception ; } \u7ee7\u627f\u5173\u7cfb class Thread implements Runnable public interface RunnableFuture < V > extends Runnable , Future < V > public class FutureTask < V > implements RunnableFuture < V > { import java.util.concurrent.Callable ; import java.util.concurrent.FutureTask ; import java.util.concurrent.ExecutionException ; class MyThread implements Callable < String >{ public String call () { return \"\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\" ; } } public class Demo { public static void main ( String [] args ) throws ExecutionException , InterruptedException { FutureTask < String > task = new FutureTask < String >( new MyThread ()); new Thread ( task ). start (); System . out . println ( task . get ()); // \u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5 } } \u533a\u522b Callable Runnable Runnable JDK1.0 \u53ea\u6709run\u65b9\u6cd5\uff0c\u6ca1\u6709\u8fd4\u56de\u503c Callable JDK1.5 \u63d0\u4f9bcall\u65b9\u6cd5\uff0c\u6709\u8fd4\u56de\u503c","title":"6 Callable\u63a5\u53e3\u5b9e\u73b0\u591a\u7ebf\u7a0b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#7","text":"\u7ebf\u7a0b\u751f\u547d\u5468\u671f \u521b\u5efa start () \u5c31\u7eea \u8fd0\u884c run () \u963b\u585e \u7ec8\u6b62","title":"7 \u591a\u7ebf\u7a0b\u8fd0\u884c\u72b6\u6001"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#2_1","text":"","title":"\u7b2c2 \u7ae0 \uff1a \u7ebf\u7a0b\u5e38\u7528\u64cd\u4f5c\u65b9\u6cd5"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#8","text":"\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\u5bf9\u8c61 public static native Thread currentThread (); \u7ebf\u7a0b\u81ea\u52a8\u547d\u540d\uff0c\u4f7f\u7528 static import java.util.concurrent.ExecutionException ; import java.util.concurrent.FutureTask ; class MyThread implements Runnable { public void run () { System . out . println ( Thread . currentThread (). getName ()); } } public class Demo { public static void main ( String [] args ) throws ExecutionException , InterruptedException { MyThread t = new MyThread (); new Thread ( t , \"\u7ebf\u7a0bA\" ). start (); new Thread ( t ). start (); new Thread ( t , \"\u7ebf\u7a0bB\" ). start (); /** * \u7ebf\u7a0bA * \u7ebf\u7a0bB * Thread-0 */ } } \u4e3b\u7ebf\u7a0b public static void main ( String [] args ) throws ExecutionException , InterruptedException { System . out . println ( Thread . currentThread (). getName ()); // main } \u4e3b\u7ebf\u7a0b\u53ef\u4ee5\u521b\u5efa\u82e5\u5e72\u5b50\u7ebf\u7a0b \u4e3b\u7ebf\u7a0b\u63a7\u5236\u4e3b\u4f53\u6d41\u7a0b \u5b50\u7ebf\u7a0b\u6267\u884c\u8017\u65f6\u64cd\u4f5c","title":"8 \u7ebf\u7a0b\u7684\u547d\u540d\u548c\u53d6\u5f97"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#9","text":"\u7ebf\u7a0b\u6682\u7f13\u6267\u884c Exception \u5fc5\u987b\u5904\u7406 class InterruptedException extends Exception public static native void sleep ( long millis ) throws InterruptedException ; public static void sleep ( long millis , int nanos ) throws InterruptedException ; \u4f11\u7720\u7ebf\u7a0b public class Demo { public static void main ( String [] args ) { new Thread (()->{ for ( int i = 0 ; i < 3 ; i ++){ System . out . println ( i ); // \u6682\u505c\u4e00\u79d2 try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } } }). start (); } }","title":"9 \u7ebf\u7a0b\u4f11\u7720"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#10","text":"\u4e2d\u65ad\u7ebf\u7a0b\u6267\u884c public void interrupt () \u5224\u65ad\u7ebf\u7a0b\u662f\u5426\u88ab\u4e2d\u65ad public boolean isInterrupted () \u6240\u6709\u7ebf\u7a0b\u90fd\u53ef\u4ee5\u88ab\u4e2d\u65ad\uff0c\u4e2d\u65ad\u5f02\u5e38\u5fc5\u987b\u5904\u7406 public class Demo { public static void main ( String [] args ) { Thread t = new Thread (() -> { // \u6682\u505c10\u79d2 try { Thread . sleep ( 10 * 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } }); t . start (); if (! t . isInterrupted ()) { t . interrupt (); } // \u629b\u51fa\u5f02\u5e38 sleep interrupted } }","title":"10 \u7ebf\u7a0b\u4e2d\u65ad"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#11","text":"\u7ebf\u7a0b\u72ec\u5360\u8d44\u6e90\uff0c\u4e00\u76f4\u5230\u7ebf\u7a0b\u6267\u884c\u7ed3\u675f public final void join () throws InterruptedException public class Demo { public static void main ( String [] args ) { Thread mainThread = Thread . currentThread (); Thread t = new Thread (() -> { // \u5f3a\u5236\u6267\u884c\u4e3b\u7ebf\u7a0b try { mainThread . join (); } catch ( InterruptedException e ) { e . printStackTrace (); } for ( int i = 0 ; i < 3 ; i ++) { System . out . println ( Thread . currentThread (). getName () + \" \" + i ); } }); t . start (); for ( int i = 0 ; i < 3 ; i ++) { System . out . println ( Thread . currentThread (). getName () + \" \" + i ); } // \u629b\u51fa\u5f02\u5e38 sleep interrupted } }","title":"11 \u7ebf\u7a0b\u5f3a\u5236\u8fd0\u884c"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#12","text":"yield \u4ea7\u751f;\u8ba9\u6b65 \u6bcf\u4e00\u6b21\u8c03\u7528yield()\u65b9\u6cd5\u53ea\u4f1a\u793c\u8ba9\u4e00\u6b21\u5f53\u524d\u7684\u8d44\u6e90 public static native void yield (); public class Demo { public static void main ( String [] args ) { Thread t = new Thread (() -> { for ( int i = 0 ; i < 30 ; i ++) { System . out . println ( \"\u793c\u8ba9\u8d44\u6e90\" ); Thread . yield (); System . out . println ( Thread . currentThread (). getName () + \" \" + i ); } }); t . start (); for ( int i = 0 ; i < 30 ; i ++) { System . out . println ( Thread . currentThread (). getName () + \" \" + i ); } } }","title":"12 \u7ebf\u7a0b\u793c\u8ba9"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#13","text":"\u7ebf\u7a0b\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff0c\u8d8a\u53ef\u80fd\u5148\u6267\u884c\uff0c\u53ef\u80fd\u4f18\u5148\u62a2\u5360\u5230\u8d44\u6e90 public final int getPriority () public final void setPriority ( int newPriority ) \u4f18\u5148\u7ea7\u5e38\u91cf MIN_PRIORITY = 1 ; NORM_PRIORITY = 5 ; MAX_PRIORITY = 10 ; \u4e3b\u7ebf\u7a0b\u4f18\u5148\u7ea7,\u548c\u9ed8\u8ba4\u4f18\u5148\u7ea7\u90fd\u662f\u4e2d\u7b49\u4f18\u5148\u7ea7 5 public class Demo { public static void main ( String [] args ) { System . out . println ( Thread . currentThread (). getPriority ()); // 5 } }","title":"13 \u7ebf\u7a0b\u4f18\u5148\u7ea7"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#3","text":"","title":"\u7b2c3 \u7ae0 \uff1a \u7ebf\u7a0b\u7684\u540c\u6b65\u4e0e\u6b7b\u9501"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#14","text":"Thread\u63cf\u8ff0\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u8c61 Runnable\u63cf\u8ff0\u591a\u4e2a\u7ebf\u7a0b\u64cd\u4f5c\u7684\u8d44\u6e90 \u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u540c\u4e00\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u5982\u679c\u5904\u7406\u4e0d\u5f53\u4f1a\u4ea7\u751f\u6570\u636e\u9519\u8bef 3\u4e2a\u7ebf\u7a0b\u5356\u7968\u7a0b\u5e8f\uff0c\u4f1a\u51fa\u73b0\u591a\u5f20\u540c\u53f7\u7684\u7968 class MyThread implements Runnable { private int ticket = 10 ; @Override public void run () { while ( true ) { if ( this . ticket > 0 ) { System . out . println ( Thread . currentThread (). getName () + \"\u5356\u7b2c\" + this . ticket + \" \u5f20\u7968\" ); this . ticket --; } else { System . out . println ( \"\u7968\u5356\u5149\u4e86\" ); break ; } } } } public class Demo { public static void main ( String [] args ) { MyThread thread = new MyThread (); new Thread ( thread ). start (); new Thread ( thread ). start (); new Thread ( thread ). start (); // 5 } }","title":"14 \u540c\u6b65\u95ee\u9898\u5f15\u51fa"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#15","text":"\u540c\u6b65\uff1a\u591a\u4e2a\u64cd\u4f5c\u5728\u540c\u4e00\u65f6\u95f4\u6bb5\u5185\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u884c\uff0c \u5176\u4ed6\u7ebf\u7a0b\u8981\u7b49\u5f85\u6b64\u7ebf\u7a0b\u5b8c\u6210\u4e4b\u540e\u624d\u53ef\u4ee5\u7ee7\u7eed\u8fd8\u884c \u89e3\u51b3\u540c\u6b65\u95ee\u9898\u7684\u65b9\u5f0f\u662f\u9501 synchronized\u5b9a\u4e49\u540c\u6b65\u65b9\u6cd5\u6216\u540c\u6b65\u4ee3\u7801\u5757\uff0c\u91cc\u8fb9\u7684\u4ee3\u7801\u53ea\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c \u52a0\u5165\u540c\u6b65\u4e4b\u540e\uff0c\u7a0b\u5e8f\u6574\u4f53\u6027\u80fd\u4e0b\u964d\u4e86 1\u3001\u540c\u6b65\u4ee3\u7801\u5757 synchronized ( \u540c\u6b65\u5bf9\u8c61 ){} \u4e3e\u4f8b synchronized ( this ) { if ( this . ticket > 0 ) { System . out . println ( Thread . currentThread (). getName () + \"\u5356\u7b2c\" + this . ticket + \" \u5f20\u7968\" ); this . ticket --; } else { System . out . println ( \"\u7968\u5356\u5149\u4e86\" ); break ; } } 2\u3001\u540c\u6b65\u51fd\u6570 public synchronized boolean method (){} \u4e3e\u4f8b public synchronized boolean sale (){ if ( this . ticket > 0 ) { System . out . println ( Thread . currentThread (). getName () + \"\u5356\u7b2c\" + this . ticket + \" \u5f20\u7968\" ); this . ticket --; return true ; } else { System . out . println ( \"\u7968\u5356\u5149\u4e86\" ); return false ; } }","title":"15 \u7ebf\u7a0b\u540c\u6b65\u5904\u7406"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#16","text":"\u6b7b\u9501\u662f\u5728\u8fdb\u884c\u591a\u7ebf\u7a0b\u540c\u6b65\u5904\u7406\u4e4b\u4e2d\u6709\u53ef\u80fd\u4ea7\u751f\u7684\u4e00\u79cd\u95ee\u9898 \u662f\u6307\u82e5\u5e72\u4e2a\u7ebf\u7a0b\u5f7c\u6b64\u4e92\u76f8\u7b49\u5f85\u7684\u72b6\u6001 \u82e5\u5e72\u7ebf\u7a0b\u8bbf\u95ee\u540c\u4e00\u8d44\u6e90\u65f6\uff0c\u4e00\u5b9a\u8981\u8fdb\u884c\u540c\u6b65\u5904\u7406 \u800c\u8fc7\u591a\u7684\u540c\u6b65\u4f1a\u9020\u6210\u6b7b\u9501 public class Demo { public static void main ( String [] args ) { //o1 o2 \u4ee3\u8868\u8d44\u6e90 Object o1 = new Object (); Object o2 = new Object (); System . out . println ( \"go go go!\" ); Thread t1 = new Thread ( new Runnable () { public void run () { synchronized ( o1 ) { //\u7ebf\u7a0bt1\u83b7\u53d6o1\u7684\u9501\u624d\u80fd\u7ee7\u7eed\u6267\u884c try { Thread . sleep ( 3000 ); //\u77613\u79d2\uff0c\u786e\u4fdd\u7ebf\u7a0bt2\u628ao2\u9501\u62ff\u8d70 } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( \"t1\u83b7\u5f97\u4e86\u54e6O1\" ); synchronized ( o2 ) { //\u7ebf\u7a0bt1\u83b7\u53d6o2\u7684\u9501\u624d\u80fd\u7ee7\u7eed\u6267\u884c System . out . println ( \"t1\u83b7\u5f97\u4e86\u54e6O2\" ); } } } }); Thread t2 = new Thread ( new Runnable () { public void run () { synchronized ( o2 ) { //\u7ebf\u7a0bt2\u83b7\u53d6o2\u7684\u9501\u624d\u80fd\u7ee7\u7eed\u6267\u884c try { Thread . sleep ( 3000 ); //\u77613\u79d2\uff0c\u786e\u4fdd\u7ebf\u7a0bt1\u628ao1\u9501\u62ff\u8d70 } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( \"t2\u83b7\u5f97\u4e86\u54e6O2\" ); synchronized ( o1 ) { //\u7ebf\u7a0bt2\u83b7\u53d6o1\u7684\u9501\u624d\u80fd\u7ee7\u7eed\u6267\u884c System . out . println ( \"t2\u83b7\u5f97\u4e86\u54e6O1\" ); } } } }); t1 . start (); t2 . start (); //\u542f\u52a8\u7ebf\u7a0b } }","title":"16 \u7ebf\u7a0b\u6b7b\u9501"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#4-","text":"","title":"\u7b2c4 \u7ae0 \uff1a \u7efc\u5408\u5b9e\u6218\uff1a\u201c\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u201d\u6a21\u578b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#17","text":"\u751f\u4ea7\u8005\u8d1f\u8d23\u4fe1\u606f\u5185\u5bb9\u751f\u4ea7 \u6d88\u8d39\u8005\u53d6\u8d70\u4fe1\u606f \u6d88\u8d39\u8005\u8981\u7b49\u5f85\u751f\u4ea7\u8005\u751f\u4ea7\u5b8c\u6210\u518d\u53d6\u8d70 \u751f\u4ea7\u8005\u9700\u8981\u7b49\u5f85\u6d88\u8d39\u8005\u6d88\u8d39\u5b8c\u6210\u518d\u751f\u4ea7 \u4e0d\u52a0\u9501\u793a\u4f8b class Message { private String content ; public void setContent ( String content ) { this . content = content ; } public String getContent () { return content ; } } class Producer implements Runnable { private Message message ; private static int count ; public Producer ( Message message ) { this . message = message ; } @Override public void run () { for ( int i = 0 ; i < 10 ; i ++) { try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } this . message . setContent ( \"\u8fd9\u662f\u7b2c\" + count + \" \u4e2a\u6d88\u606f\" ); count ++; } } } class Consumer implements Runnable { private Message message ; public Consumer ( Message message ) { this . message = message ; } @Override public void run () { for ( int i = 0 ; i < 10 ; i ++) { try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( this . message . getContent ()); } } } class Demo { public static void main ( String [] args ) { Message message = new Message (); new Thread ( new Producer ( message )). start (); new Thread ( new Consumer ( message )). start (); } } /** \u8fd9\u662f\u7b2c0 \u4e2a\u6d88\u606f \u8fd9\u662f\u7b2c0 \u4e2a\u6d88\u606f \u8fd9\u662f\u7b2c1 \u4e2a\u6d88\u606f \u8fd9\u662f\u7b2c2 \u4e2a\u6d88\u606f \u8fd9\u662f\u7b2c3 \u4e2a\u6d88\u606f \u8fd9\u662f\u7b2c4 \u4e2a\u6d88\u606f \u8fd9\u662f\u7b2c5 \u4e2a\u6d88\u606f \u8fd9\u662f\u7b2c6 \u4e2a\u6d88\u606f \u8fd9\u662f\u7b2c7 \u4e2a\u6d88\u606f \u8fd9\u662f\u7b2c8 \u4e2a\u6d88\u606f */","title":"17 \u751f\u4ea7\u8005\u4e0e\u6d88\u8d39\u8005\u57fa\u672c\u7a0b\u5e8f\u6a21\u578b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#18-","text":"\u589e\u52a0\u5173\u952e\u5b57 synchronized","title":"18 \u89e3\u51b3\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u540c\u6b65\u95ee\u9898"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#19-object","text":"\u7b49\u5f85\u673a\u5236 (1)\u4e00\u76f4\u7b49\u5f85 public final void wait () (2)\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4 public final native void wait ( long timeout ) \u5524\u9192\u7ebf\u7a0b (1)\u5524\u9192\u4e00\u4e2a\u7b49\u5f85\u7ebf\u7a0b, \u5524\u9192\u7b2c\u4e00\u4e2a\u7b49\u5f85\u7684\u7ebf\u7a0b public final native void notify (); (2)\u5524\u9192\u5168\u90e8\u7b49\u5f85\u7ebf\u7a0b,\u8c01\u4f18\u5148\u7ea7\u9ad8\u8c01\u5148\u6267\u884c public final native void notifyAll (); \u5b8c\u6574\u4ee3\u7801 class Message { private String content ; private boolean flag = false ; // \u751f\u4ea7\u5b8c\u6210\u5c31\u4e3atrue public synchronized void setContent ( String content ) { if ( this . flag == true ) { try { wait (); } catch ( InterruptedException e ) { e . printStackTrace (); } } try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } this . content = content ; this . flag = true ; notify (); } public synchronized String getContent () { if ( this . flag == false ) { try { wait (); } catch ( InterruptedException e ) { e . printStackTrace (); } } try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } try { return content ; } finally { this . flag = false ; notify (); } } } class Producer implements Runnable { private Message message ; private static int count ; public Producer ( Message message ) { this . message = message ; } @Override public void run () { for ( int i = 0 ; i < 10 ; i ++) { this . message . setContent ( \"\u8fd9\u662f\u7b2c\" + count + \" \u4e2a\u6d88\u606f\" ); count ++; } } } class Consumer implements Runnable { private Message message ; public Consumer ( Message message ) { this . message = message ; } @Override public void run () { for ( int i = 0 ; i < 10 ; i ++) { System . out . println ( this . message . getContent ()); } } } class Demo { public static void main ( String [] args ) { Message message = new Message (); new Thread ( new Producer ( message )). start (); new Thread ( new Consumer ( message )). start (); } }","title":"19 \u5229\u7528Object\u7c7b\u89e3\u51b3\u91cd\u590d\u64cd\u4f5c"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#5","text":"","title":"\u7b2c5 \u7ae0 \uff1a \u591a\u7ebf\u7a0b\u6df1\u5165\u8bdd\u9898"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#20","text":"\u5df2\u5e9f\u9664\u7684\u65b9\u6cd5\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7ebf\u7a0b\u6b7b\u9501\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528 // \u505c\u6b62\u7ebf\u7a0b public final void stop () // \u9500\u6bc1\u7ebf\u7a0b public void destroy () // \u6302\u8d77\u7ebf\u7a0b public final void suspend () // \u6062\u590d\u7ebf\u7a0b public final void resume () \u4f7f\u7528flag \u6807\u5fd7\u4f4d\u4e0d\u4f1a\u7acb\u523b\u505c\u6b62\uff0c\u800c\u662f\u5f53\u524d\u7ebf\u7a0b\u81ea\u5df1\u5224\u65ad class Demo { private static boolean flag = true ; public static void main ( String [] args ) { new Thread (()->{ while ( flag ){ try { Thread . sleep ( 600 ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( Thread . currentThread (). getName ()+ \"\u6b63\u5728\u6267\u884c\" ); } }, \"\u81ea\u5b9a\u4e49\u7ebf\u7a0b\" ). start (); try { Thread . sleep ( 2000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( \"\u65f6\u95f4\u5230\" ); flag = false ; } }","title":"20 \u4f18\u96c5\u7684\u505c\u6b62\u7ebf\u7a0b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#21","text":"\u5b88\u62a4\u7ebf\u7a0b\uff0c\u5982\u679c\u4e3b\u7ebf\u7a0b\u9000\u51fa\uff0c\u5b88\u62a4\u7ebf\u7a0b\u5c31\u9000\u51fa GC\u5c31\u662f\u5b88\u62a4\u7ebf\u7a0b \u8bbe\u7f6e\u4e3a\u5b88\u62a4\u7ebf\u7a0b public final void setDaemon ( boolean on ) \u5224\u65ad\u662f\u5426\u4e3a\u5b88\u62a4\u7ebf\u7a0b public final boolean isDaemon () \u793a\u4f8b \u8bbe\u7f6e\u7ebf\u7a0b\u4e3a\u5b88\u62a4\u7ebf\u7a0b\u540e\uff0c\u4e3b\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\u5c31\u9000\u51fa\u4e86\uff0c\u5e76\u4e0d\u4f1a\u6253\u5370\u4efb\u4f55\u5185\u5bb9 class MyThread implements Runnable { @Override public void run () { try { Thread . sleep ( 100 ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( Thread . currentThread (). getName ()+ \" \u6b63\u5728\u6267\u884c\" ); } } class Demo { public static void main ( String [] args ) { Thread t = new Thread ( new MyThread ()); t . setDaemon ( true ); t . start (); } }","title":"21 \u540e\u53f0\u5b88\u62a4\u7ebf\u7a0b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#22-volatile","text":"volatile \u7528\u4e8e\u5c5e\u6027\u5b9a\u4e49\uff0c \u4e2d\u6587\u610f\u601d\uff1a\u6613\u53d8\u7684 \u53d8\u91cf\u5904\u7406\u7684\u6b65\u9aa4\uff1a \uff081\uff09\u83b7\u53d6\u53d8\u91cf\u539f\u6709\u7684\u6570\u636e\u5185\u5bb9\u526f\u672c \uff082\uff09\u5229\u7528\u526f\u672c\u4e3a\u53d8\u91cf\u8fdb\u884c\u6570\u5b66\u8ba1\u7b97 \uff083\uff09\u5efa\u8ba1\u7b97\u540e\u7684\u53d8\u91cf\uff0c\u4fdd\u5b58\u5230\u539f\u59cb\u7a7a\u95f4\u4e2d \u8bfb\u53d6 read <- \u6570\u636e\u526f\u672c \u52a0\u8f7d load \u4f7f\u7528 use \u8d4b\u503c asign \u5b58\u50a8 store \u5199\u5165 write -> \u539f\u59cb\u7a7a\u95f4 \u5c5e\u6027\u4e0a\u52a0\u4e86volatile, \u6ca1\u6709\u4e2d\u95f4\u62f7\u8d1d\u8fc7\u7a0b\uff0c\u76f4\u63a5\u4f7f\u7528\u539f\u59cb\u6570\u636e \u533a\u522b\uff1avolatile \u548c synchronized volatile\uff1a \u4e3b\u8981\u5728\u5c5e\u6027\u4e0a\u4f7f\u7528\uff0c\u65e0\u6cd5\u63cf\u8ff0\u540c\u6b65\uff0c\u76f4\u63a5\u5185\u5b58\u5904\u7406\uff0c\u907f\u514d\u526f\u672c\u64cd\u4f5c synchronized\uff1a \u4ee3\u7801\u5757\u4e0e\u65b9\u6cd5\u4e0a\u4f7f\u7528 class MyThread implements Runnable { private volatile int count = 10 ; @Override public void run () { while ( count > 0 ) { try { Thread . sleep ( 100 ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( Thread . currentThread (). getName ()+ \" \u6b63\u5728\u6267\u884c\" ); count --; } } } class Demo { public static void main ( String [] args ) { Thread t = new Thread ( new MyThread ()); t . start (); } }","title":"22 volatile\u5173\u952e\u5b57"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#6","text":"","title":"\u7b2c6 \u7ae0 \uff1a \u591a\u7ebf\u7a0b\u7efc\u5408\u6848\u4f8b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#23","text":"4\u4e2a\u7ebf\u7a0b\uff0c2\u4e2a\u7ebf\u7a0b\u52a0\uff0c2\u4e2a\u7ebf\u7a0b\u51cf \u5faa\u73af\u51fa\u73b0 \u52a0\u4e00\u4e2a\uff0c\u51cf\u4e00\u4e2a // \u8d44\u6e90 class Resource { private int count = 0 ; // \u4e3afalse\u53ef\u4ee5\u589e\u52a0,\u52a0\u5b8c\u4e86\u8bbe\u7f6e\u4e3atrue\uff0c // \u4e3atrue\u53ef\u4ee5\u51cf\u5c11\uff0c\u51cf\u5b8c\u4e86\u8bbe\u7f6e\u4e3afalse private boolean flag = false ; public synchronized void add () { if ( this . flag == true ) { try { super . wait (); } catch ( InterruptedException e ) { e . printStackTrace (); } } try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } this . count ++; System . out . println ( Thread . currentThread (). getName () + \" count=\" + count ); this . flag = true ; super . notifyAll (); } public synchronized void sub () { if ( this . flag == false ) { System . out . println ( this . flag ); try { super . wait (); } catch ( InterruptedException e ) { e . printStackTrace (); } } try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } this . count --; System . out . println ( Thread . currentThread (). getName () + \" count=\" + count ); this . flag = false ; super . notifyAll (); } } // \u52a0\u6cd5\u7ebf\u7a0b class AddThread implements Runnable { private Resource resource ; public AddThread ( Resource resource ) { this . resource = resource ; } @Override public void run () { for ( int i = 0 ; i < 10 ; i ++) { this . resource . add (); } } } // \u51cf\u6cd5\u7ebf\u7a0b class SubThread implements Runnable { private Resource resource ; public SubThread ( Resource resource ) { this . resource = resource ; } @Override public void run () { for ( int i = 0 ; i < 10 ; i ++) { this . resource . sub (); } } } class Demo { public static void main ( String [] args ) { Resource resource = new Resource (); AddThread at = new AddThread ( resource ); SubThread st = new SubThread ( resource ); new Thread ( at , \"\u52a0\u6cd5\u7ebf\u7a0b-A\" ). start (); new Thread ( at , \"\u52a0\u6cd5\u7ebf\u7a0b-B\" ). start (); new Thread ( st , \"\u51cf\u6cd5\u7ebf\u7a0b-X\" ). start (); new Thread ( st , \"\u51cf\u6cd5\u7ebf\u7a0b-Y\" ). start (); } } \u5e76\u6ca1\u6709\u51fa\u73b0\u4e00\u52a0\u4e00\u51cf\u7684\u73b0\u8c61","title":"23 \u6570\u5b57\u52a0\u51cf"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#24","text":"\u751f\u4ea7\u4e00\u53f0\u642c\u8fd0\u4e00\u53f0 \u6d88\u8d39\u8005\u751f\u4ea7\u8005\u6a21\u578b class Computer { private static int count ; public Computer () { count ++; } @Override public String toString () { return \"\u7535\u8111\u7f16\u53f7\uff1a\" + count ; } } class Resource { private Computer computer ; public synchronized void make (){ if ( computer != null ){ try { wait (); } catch ( InterruptedException e ) { e . printStackTrace (); } } try { Thread . sleep ( 100 ); } catch ( InterruptedException e ) { e . printStackTrace (); } this . computer = new Computer (); System . out . println ( \"\u751f\u4ea7\uff1a\" + this . computer ); notifyAll (); } public synchronized void get (){ if ( computer == null ){ try { wait (); } catch ( InterruptedException e ) { e . printStackTrace (); } } try { Thread . sleep ( 10 ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( \"\u53d6\u8d70\uff1a\" + this . computer ); this . computer = null ; notifyAll (); } } class Producer implements Runnable { private Resource resource ; public Producer ( Resource resource ) { this . resource = resource ; } @Override public void run () { for ( int i = 0 ; i < 10 ; i ++) { resource . make (); } } } class Consumer implements Runnable { private Resource resource ; public Consumer ( Resource resource ) { this . resource = resource ; } @Override public void run () { for ( int i = 0 ; i < 10 ; i ++) { resource . get (); } } } class Demo { public static void main ( String [] args ) { Resource resource = new Resource (); new Thread ( new Producer ( resource )). start (); new Thread ( new Consumer ( resource )). start (); } }","title":"24 \u751f\u4ea7\u7535\u8111"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u591a\u7ebf\u7a0b/#25","text":"3\u4e2a\u62a2\u7b54\u7ebf\u7a0b\uff0c\u540c\u65f6\u53d1\u51fa\u62a2\u7b54\u6307\u4ee4 \u6210\u529f\u548c\u5931\u8d25\u90fd\u7ed9\u4e0e\u63d0\u793a \u6709\u6570\u636e\u8fd4\u56de\uff0c\u91c7\u7528Callable\u65b9\u5f0f import java.util.concurrent.Callable ; import java.util.concurrent.FutureTask ; class MyThread implements Callable < String > { private boolean flag = false ; @Override public String call () throws Exception { synchronized ( this ) { // \u5982\u679c\u6ca1\u6709\u4eba\u62a2\u7b54\u6210\u529f\u5219\u53ef\u4ee5\u62a2\u7b54 if ( this . flag == false ) { this . flag = true ; return Thread . currentThread (). getName () + \"\u62a2\u7b54\u6210\u529f\uff01\" ; } else { return Thread . currentThread (). getName () + \"\u62a2\u7b54\u5931\u8d25\uff01\" ; } } } } class Demo { public static void main ( String [] args ) throws Exception { MyThread t = new MyThread (); FutureTask < String > task1 = new FutureTask < String >( t ); FutureTask < String > task2 = new FutureTask < String >( t ); FutureTask < String > task3 = new FutureTask < String >( t ); new Thread ( task1 , \"\u62a2\u7b54\u8005A\" ). start (); new Thread ( task2 , \"\u62a2\u7b54\u8005B\" ). start (); new Thread ( task3 , \"\u62a2\u7b54\u8005C\" ). start (); System . out . println ( task1 . get ()); System . out . println ( task2 . get ()); System . out . println ( task3 . get ()); } }","title":"25 \u7ade\u4e89\u62a2\u7b54"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/","text":"12 \u7ae0 \uff1a \u5f00\u53d1\u652f\u6301\u7c7b\u5e93 47 UUID\u7c7b UUID \u6839\u636e\u65f6\u95f4\u6233\u5b9e\u73b0\u81ea\u52a8\u65e0\u91cd\u590d\u5b57\u7b26\u4e32\u5b9a\u4e49 // \u83b7\u53d6UUID public static UUID randomUUID () // \u6839\u636e\u5b57\u7b26\u4e32\u83b7\u53d6UUID public static UUID fromString ( String name ) \u5e94\u7528\uff1a\u5bf9\u6587\u4ef6\u8fdb\u884c\u81ea\u52a8\u547d\u540d\u5904\u7406 import java.util.UUID ; class Demo { public static void main ( String [] args ) { System . out . println ( UUID . randomUUID ()); // 85a8ccb1-88f8-4b3c-833d-d45b58e0204e System . out . println ( UUID . fromString ( \"85a8ccb1-88f8-4b3c-833d-d45b58e0204e\" )); // 85a8ccb1-88f8-4b3c-833d-d45b58e0204e } } 48 Optional\u7c7b Optional \u4e3b\u8981\u529f\u80fd\u662f\u8fdb\u884cnull\u7a7a\u6307\u9488\u5904\u7406 JDK >= 1.8 \u793a\u4f8b\uff1a\u5355\u72ec\u5904\u7406null\u53c2\u6570 class Message { private String message ; public Message ( String message ) { this . message = message ; } public String getMessage (){ return this . message ; } } class Demo { public static void showMessage ( Message message ) { if ( message != null ){ System . out . println ( message . getMessage ()); } } public static void main ( String [] args ) { Message message = new Message ( \"\u8fd9\u662f\u6d88\u606f\" ); showMessage ( message ); showMessage ( null ); } } \u51e0\u4e2a\u65b9\u6cd5 public final class Optional < T > { public static < T > Optional < T > empty () { @SuppressWarnings ( \"unchecked\" ) Optional < T > t = ( Optional < T >) EMPTY ; return t ; } public static < T > Optional < T > of ( T value ) { return new Optional <>( value ); } public static < T > Optional < T > ofNullable ( T value ) { return value == null ? empty () : of ( value ); } public T get () { if ( value == null ) { throw new NoSuchElementException ( \"No value present\" ); } return value ; } public T orElse ( T other ) { return value != null ? value : other ; } } \u4f7f\u7528\u793a\u4f8b import java.util.Optional ; /** * \u5b58\u5165 */ Optional < String > optOf = Optional . of ( \"message\" ); // Optional<String> optOfNull = Optional.of(null); // java.lang.NullPointerException Optional < String > optOfNullable = Optional . ofNullable ( \"message\" ); Optional < String > optOfNullableNull = Optional . ofNullable ( null ); /** * \u53d6\u51fa */ System . out . println ( optOf . get ()); // message System . out . println ( optOfNullable . get ()); // message // System.out.println(optOfNullableNull.get()); // java.util.NoSuchElementException: No value present System . out . println ( optOf . orElse ( \"default\" )); // message System . out . println ( optOfNullable . orElse ( \"default\" )); // message System . out . println ( optOfNullableNull . orElse ( \"default\" )); // default \u81ea\u5b9a\u4e49\u51fd\u6570\u5b9e\u73b0 class Demo { public static String getDefault ( String object , String defaultValue ){ return object != null ? object : defaultValue ; } public static void main ( String [] args ) { System . out . println ( getDefault ( \"message\" , \"default\" )); // message System . out . println ( getDefault ( null , \"default\" )); // default } } 49 ThreadLocal\u7c7b ThreadLocal\u89e3\u51b3\u7ebf\u7a0b\u540c\u6b65\u95ee\u9898 public T get () public void set ( T value ) public void remove () \u5b9a\u4e49\u53d1\u9001\u6d88\u606f\u7c7b class Message { private String message ; public Message ( String message ) { this . message = message ; } public String getMessage (){ return this . message ; } } class Channel { private static Message message ; public static void setMessage ( Message msg ){ message = msg ; } public static void send (){ System . out . println ( message . getMessage ()); } } \u5355\u7ebf\u7a0b\u4e0b\u8fd0\u884c class Demo { public static void main ( String [] args ) { Message message = new Message ( \"\u4f60\u597d\" ); Chanel . setMessage ( message ); Chanel . send (); // \u4f60\u597d } } \u591a\u7ebf\u7a0b\u4e0b\u8fd0\u884c\uff0c\u51fa\u73b0\u6570\u636e\u8986\u76d6\u73b0\u8c61 class Demo { public static void main ( String [] args ) { new Thread (()->{ Channel . setMessage ( new Message ( \"\u4f60\u597d-1\" )); Channel . send (); }, \"\u7ebf\u7a0b-1\" ). start (); new Thread (()->{ Channel . setMessage ( new Message ( \"\u4f60\u597d-2\" )); Channel . send (); }, \"\u7ebf\u7a0b-2\" ). start (); new Thread (()->{ Channel . setMessage ( new Message ( \"\u4f60\u597d-3\" )); Channel . send (); }, \"\u7ebf\u7a0b-3\" ). start (); /** * \u7ebf\u7a0b-2 \u4f60\u597d-3 * \u7ebf\u7a0b-1 \u4f60\u597d-1 * \u7ebf\u7a0b-3 \u4f60\u597d-3 */ } } \u6539\u9020 Channel class Channel { // private static Message message; private static final ThreadLocal < Message > THREAD_LOCAL = new ThreadLocal < Message >(); public static void setMessage ( Message msg ){ THREAD_LOCAL . set ( msg ); } public static void send (){ System . out . println ( Thread . currentThread (). getName () + \" \" + THREAD_LOCAL . get (). getMessage ()); } } // \u6267\u884c\u540e\u6570\u636e\u5bf9\u5e94 /** \u7ebf\u7a0b-2 \u4f60\u597d-2 \u7ebf\u7a0b-1 \u4f60\u597d-1 \u7ebf\u7a0b-3 \u4f60\u597d-3 */ ThreadLocal\uff0c \u53ea\u5141\u8bb8\u4fdd\u5b58\u4e00\u4e2a\u6570\u636e 50 \u5b9a\u65f6\u8c03\u5ea6 \u5b9a\u65f6\u5668\u8fdb\u884c\u5b9a\u65f6\u4efb\u52a1\u5904\u7406\uff0c\u5b9e\u73b0\u4e86\u4e00\u79cd\u95f4\u9694\u89e6\u53d1\u64cd\u4f5c java.util.TimerTask \u5b9a\u65f6\u4efb\u52a1\u5904\u7406 java.util.Timer \u4efb\u52a1\u542f\u52a8 // \u5b9a\u65f6\u542f\u52a8 public void schedule ( TimerTask task , long delay ) // \u95f4\u9694\u4efb\u52a1 public void scheduleAtFixedRate ( TimerTask task , long delay , long period ) \u5b9a\u4e49\u4efb\u52a1 import java.util.TimerTask ; class MyTask extends TimerTask { @Override public void run () { System . out . println ( \"\u4efb\u52a1\u542f\u52a8 \" + System . currentTimeMillis ()); } } \u793a\u4f8b\uff1a\u5b9a\u65f6\u542f\u52a8\uff0c\u4f1a\u5361\u4e3b import java.util.Timer ; class Demo { public static void main ( String [] args ) { Timer timer = new Timer (); timer . schedule ( new MyTask (), 100 ); // \u4efb\u52a1\u542f\u52a8 1574260837613 } } \u793a\u4f8b\uff1a\u95f4\u9694\u4efb\u52a1 class Demo { public static void main ( String [] args ) { Timer timer = new Timer (); timer . scheduleAtFixedRate ( new MyTask (), 100 , 1000 ); } } 51 Base64\u52a0\u5bc6\u4e0e\u89e3\u5bc6 \u52a0\u5bc6\u89e3\u5bc6\u793a\u4f8b String message = \"Hello Java\" ; String encodeMessage = new String ( Base64 . getEncoder (). encode ( message . getBytes ())); System . out . println ( encodeMessage ); // SGVsbG8gSmF2YQ== String decodeMessage = new String ( Base64 . getDecoder (). decode ( encodeMessage )); System . out . println ( decodeMessage ); // Hello Java \u6700\u597d\u7684\u65b9\u6cd5\u662f\u4f7f\u75282-3\u4e2d\u52a0\u5bc6\u7a0b\u5e8f\uff0c\u8fdb\u884c\u591a\u6b21\u52a0\u5bc6 \u52a0\u5bc6\u89e3\u5bc6\u793a\u4f8b import java.util.Base64 ; class Crypto { // \u52a0\u5bc6\u91cd\u590d\u6b21\u6570\uff0c\u8d8a\u9ad8\u8d8a\u5b89\u5168 private static final int REPEAT = 3 ; /** * \u52a0\u5bc6\u5904\u7406 * @param message * @return */ public static String encode ( String message ){ byte [] data = message . getBytes (); // \u91cd\u590d\u52a0\u5bc6 for ( int i = 0 ; i < REPEAT ; i ++) { data = Base64 . getEncoder (). encode ( data ); } return new String ( data ); } public static String decode ( String message ){ byte [] data = message . getBytes (); for ( int i = 0 ; i < REPEAT ; i ++) { data = Base64 . getDecoder (). decode ( data ); } return new String ( data ); } } class Demo { public static void main ( String [] args ) { String message = \"Hello Java\" ; String encodeMessage = Crypto . encode ( message ); System . out . println ( encodeMessage ); // VTBkV2MySkhPR2RUYlVZeVdWRTlQUT09 String decodeMessage = Crypto . decode ( encodeMessage ); System . out . println ( decodeMessage ); // Hello Java } } \u7b2c13 \u7ae0 \uff1a \u6bd4\u8f83\u5668 52 \u6bd4\u8f83\u5668\u95ee\u9898\u5f15\u51fa \u6bd4\u8f83\u5668\uff1a\u5927\u5c0f\u5173\u7cfb\u5224\u65ad \u793a\u4f8b\uff1a\u5bf9\u8c61\u6570\u7ec4\u6392\u5e8f Integer [] data = new Integer []{ 1 , 4 , 5 , 8 , 6 }; Arrays . sort ( data ); System . out . println ( Arrays . toString ( data )); // [1, 4, 5, 6, 8] 53 Comparable\u6bd4\u8f83\u5668 \u63a5\u53e3\uff1aComparable public interface Comparable < T > { public int compareTo ( T o ); } \u5927\u4e8e\u8fd4\u56de\u6b63\u6570 \u7b49\u4e8e\u8fd4\u56de0 \u5c0f\u4e8e\u8fd4\u56de\u8d1f\u6570 \u793a\u4f8b\uff1a\u81ea\u5b9a\u4e49\u7c7b\u578b\u6570\u7ec4\u6392\u5e8f import java.util.Arrays ; class Person implements Comparable < Person >{ private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } @Override public int compareTo ( Person other ) { return this . age - other . age ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } class Demo { public static void main ( String [] args ) { Person [] data = { new Person ( \"\u5c0f\u738b\" , 23 ), new Person ( \"\u5c0f\u5218\" , 27 ), new Person ( \"\u5c0f\u5f20\" , 25 ), }; Arrays . sort ( data ); System . out . println ( Arrays . toString ( data )); // [ // Person{name='\u5c0f\u738b', age=23}, // Person{name='\u5c0f\u5f20', age=25}, // Person{name='\u5c0f\u5218', age=27} // ] } } 54 Comparator\u6bd4\u8f83\u5668 \u89e3\u51b3\u6ca1\u6709\u5b9e\u73b0Comparable\u63a5\u53e3\u7684\u5bf9\u8c61\u6bd4\u8f83 @FunctionalInterface public interface Comparator < T > { int compare ( T o1 , T o2 ); } \u6392\u5e8f\u65b9\u6cd5 import java.util.Arrays ; public static void sort ( Object [] a ) public static < T > void sort ( T [] a , Comparator <? super T > c ) \u4f7f\u7528\u793a\u4f8b import java.util.Arrays ; import java.util.Comparator ; class Person { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } public int getAge () { return age ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } class PersonComparator implements Comparator < Person > { @Override public int compare ( Person person1 , Person person2 ) { return person1 . getAge () - person2 . getAge (); } } class Demo { public static void main ( String [] args ) { Person [] data = { new Person ( \"\u5c0f\u738b\" , 23 ), new Person ( \"\u5c0f\u5218\" , 27 ), new Person ( \"\u5c0f\u5f20\" , 25 ), }; Arrays . sort ( data , new PersonComparator ()); System . out . println ( Arrays . toString ( data )); // [ // Person{name='\u5c0f\u738b', age=23}, // Person{name='\u5c0f\u5f20', age=25}, // Person{name='\u5c0f\u5218', age=27} // ] } } Comparable\u4f18\u5148\u4f7f\u7528 \u533a\u522b Comparable Comparator Comparable \u5b9a\u4e49\u7c7b\u7684\u65f6\u5019\u5b9e\u73b0\u7236\u63a5\u53e3\uff0c\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219 public int compareTo ( T o ) Comparator \u633d\u6551\u7684\u6bd4\u8f83\u5668\u64cd\u4f5c\uff0c\u9700\u8981\u5355\u72ec\u8bbe\u7f6e\u6bd4\u8f83\u89c4\u5219\u5b9e\u73b0\u6392\u5e8f int compare ( T o1 , T o2 ); \u53ef\u4ee5\u4f7f\u7528\u533f\u540d\u7c7b Arrays . sort ( data , new Comparator < Person >() { @Override public int compare ( Person o1 , Person o2 ) { return o1 . getAge () - o2 . getAge (); } }); \u4e5f\u53ef\u4ee5\u4f7f\u7528Lambda\u8868\u8fbe\u5f0f Comparator < Person > comparator = ( Person o1 , Person o2 )->{ return o1 . getAge () - o2 . getAge (); }; Arrays . sort ( data , comparator ); \u6216\u8005 Arrays . sort ( data , ( p1 , p2 )->{ return p1 . getAge () - p2 . getAge (); }); 55 \u4e8c\u53c9\u6811\u7ed3\u6784\u7b80\u4ecb \u94fe\u8868\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n) \u4e8c\u53c9\u6811\u67e5\u627e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(logn) \u6570\u636e\u4f4d\u7f6e \u7236\u8282\u70b9 - \u4e2d \u5de6\u5b50\u6811 - \u5c0f \u53f3\u5b50\u6811 - \u5927 \u904d\u5386\u6570\u636e 1\u3001\u524d\u5e8f\u904d\u5386 \u6839-\u5de6-\u53f3 2\u3001\u4e2d\u5e8f\u904d\u5386 \u5de6-\u6839-\u53f3 3\u3001\u540e\u5e8f\u904d\u5386 \u5de6-\u53f3-\u6839 56 \u4e8c\u53c9\u6811\u57fa\u7840\u5b9e\u73b0 import java.util.Arrays ; class Person implements Comparable < Person > { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } public int getAge () { return age ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } @Override public int compareTo ( Person other ) { return this . age - other . age ; } } class BinaryTree < T extends Comparable < T >> { private class Node { private Comparable < T > data ; private Node parent ; private Node left ; private Node right ; public Node ( Comparable < T > data ) { this . data = data ; } public void addNode ( Node node ) { // \u6570\u636e\u6bd4\u5f53\u524d\u8282\u70b9\u5c0f\uff0c\u6dfb\u52a0\u5230\u5de6\u5b50\u6811 if ( node . data . compareTo (( T ) this . data ) <= 0 ) { if ( this . left == null ) { this . left = node ; node . parent = this ; // \u4fdd\u5b58\u7236\u8282\u70b9 } else { this . left . addNode ( node ); } } // \u6570\u636e\u6bd4\u5f53\u524d\u8282\u70b9\u5927\uff0c\u6dfb\u52a0\u5230\u53f3\u5b50\u6811 else { if ( this . right == null ) { this . right = node ; node . parent = this ; } else { this . right . addNode ( node ); } } } public void toArrayNode (){ if ( this . left != null ){ this . left . toArrayNode (); } BinaryTree . this . dataList [ BinaryTree . this . foot ++] = this . data ; if ( this . right != null ){ this . right . toArrayNode (); } } } private Node root ; // \u6839\u8282\u70b9 private int count ; private int foot ; private Object [] dataList ; /** * \u6570\u636e\u6dfb\u52a0 * * @param data \u8981\u6dfb\u52a0\u7684\u6570\u636e */ public void add ( Comparable < T > data ) { if ( data == null ) { throw new NullPointerException ( \"\u6570\u636e\u4e0d\u5141\u8bb8\u4e3a\u7a7a\" ); } Node node = new Node ( data ); if ( this . root == null ) { this . root = node ; } else { this . root . addNode ( node ); } this . count ++; } public Object [] toArray (){ if ( this . count == 0 ){ return null ; } this . foot = 0 ; this . dataList = new Object [ this . count ]; this . root . toArrayNode (); return this . dataList ; } } class Demo { public static void main ( String [] args ) { BinaryTree < Person > tree = new BinaryTree <>(); tree . add ( new Person ( \"\u5c0f\u738b\" , 23 )); tree . add ( new Person ( \"\u5c0f\u5218\" , 27 )); tree . add ( new Person ( \"\u5c0f\u5f20\" , 25 )); System . out . println ( Arrays . toString ( tree . toArray ())); /** * [ * Person{name='\u5c0f\u738b', age=23}, * Person{name='\u5c0f\u5f20', age=25}, * Person{name='\u5c0f\u5218', age=27} * ] */ } } 57 \u4e8c\u53c9\u6811\u6570\u636e\u5220\u9664 \u8981\u5220\u9664\u7684\u8282\u70b9\u60c5\u51b5\uff1a 1\u3001\u6ca1\u6709\u5b50\u8282\u70b9\uff0c\u76f4\u63a5\u5220\u9664 2\u3001\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\uff08\u5de6\u8282\u70b9\u6216\u53f3\u8282\u70b9\uff09\uff0c\u5220\u9664\u540e\u7528\u5b50\u8282\u70b9\u9876\u66ff 3\u3001\u6709\u5de6\u53f3\u8282\u70b9\uff0c\u5728\u53f3\u5b50\u6811\u4e2d\u627e\u6700\u5de6\u8fb9\u8282\u70b9\u9876\u66ff 4\u3001\u9700\u8981\u7279\u6b8a\u8003\u8651\u6839\u8282\u70b9 import java.util.Arrays ; class BinaryTree < T extends Comparable < T >> { private class Node { private Comparable < T > data ; private Node parent ; private Node left ; private Node right ; public Node ( Comparable < T > data ) { this . data = data ; } public void addNode ( Node node ) { // \u6570\u636e\u6bd4\u5f53\u524d\u8282\u70b9\u5c0f\uff0c\u6dfb\u52a0\u5230\u5de6\u5b50\u6811 if ( node . data . compareTo (( T ) this . data ) <= 0 ) { if ( this . left == null ) { this . left = node ; node . parent = this ; // \u4fdd\u5b58\u7236\u8282\u70b9 } else { this . left . addNode ( node ); } } // \u6570\u636e\u6bd4\u5f53\u524d\u8282\u70b9\u5927\uff0c\u6dfb\u52a0\u5230\u53f3\u5b50\u6811 else { if ( this . right == null ) { this . right = node ; node . parent = this ; } else { this . right . addNode ( node ); } } } public Node getMostLeftNode () { if ( this . left != null ) { return this . left . getMostLeftNode (); } else { return this ; } } public Node getNode ( Comparable < T > data ) { if ( this . data . compareTo (( T ) data ) == 0 ) { return this ; } // \u67e5\u627e\u5b50\u8282\u70b9 else { // \u53f3\u8fb9\u8282\u70b9 if ( data . compareTo (( T ) this . data ) > 0 ) { if ( this . right != null ) { return this . right . getNode ( data ); } else { return null ; } // \u5de6\u8fb9\u8282\u70b9 } else { if ( this . left != null ) { return this . left . getNode ( data ); } else { return null ; } } } } public void toArrayNode () { if ( this . left != null ) { System . out . println ( this . data + \" left-> \" + this . left . data ); this . left . toArrayNode (); } BinaryTree . this . dataList [ BinaryTree . this . foot ++] = this . data ; if ( this . right != null ) { System . out . println ( this . data + \" right-> \" + this . right . data ); this . right . toArrayNode (); } } } private Node root ; // \u6839\u8282\u70b9 private int count ; private int foot ; private Object [] dataList ; /** * \u6570\u636e\u6dfb\u52a0 * * @param data \u8981\u6dfb\u52a0\u7684\u6570\u636e */ public void add ( Comparable < T > data ) { if ( data == null ) { throw new NullPointerException ( \"\u6570\u636e\u4e0d\u5141\u8bb8\u4e3a\u7a7a\" ); } Node node = new Node ( data ); if ( this . root == null ) { this . root = node ; } else { this . root . addNode ( node ); } this . count ++; } public void addMany ( Comparable < T >... list ) { for ( Comparable < T > data : list ) { this . add ( data ); } } public void removeRoot () { // \u53f3\u5b50\u6811\u4e0d\u4e3a\u7a7a if ( this . root . right != null ) { Node mostLeftNode = this . root . right . getMostLeftNode (); System . out . println ( mostLeftNode . data ); mostLeftNode . parent . left = null ; mostLeftNode . parent = null ; mostLeftNode . left = root . left ; mostLeftNode . right = root . right ; this . root = mostLeftNode ; } // \u53f3\u5b50\u6811\u4e3a\u7a7a else if ( this . root . left != null ) { this . root . left . parent = null ; this . root = this . root . left ; } // \u5355\u72ec\u6839\u8282\u70b9 else { this . root = null ; } } public void removeChild ( Node node ) { // 1\u3001\u6ca1\u6709\u5b50\u8282\u70b9 if ( node . left == null && node . right == null ) { if ( node . parent . left == node ) { node . parent . left = null ; } else { node . parent . right = null ; } } // 2\u3001\u6709\u4e00\u4e2a\u5b50\u8282\u70b9 // 2-1 \u53ea\u6709\u53f3\u8282\u70b9 else if ( node . left == null ) { if ( node . parent . left == node ) { node . parent . left = node . right ; } else { node . parent . right = node . right ; } } // 2-2\u53ea\u6709\u5de6\u8282\u70b9 else if ( node . right == null ) { if ( node . parent . left == node ) { node . parent . left = node . left ; } else { node . parent . right = node . left ; } } // 3\u3001\u6709\u4e24\u4e2a\u5b50\u8282\u70b9 else { Node mostLeftNode = node . right . getMostLeftNode (); mostLeftNode . parent . left = null ; mostLeftNode . parent = node . parent ; mostLeftNode . left = node . left ; mostLeftNode . right = node . right ; } node . parent = null ; } public void remove ( Comparable < T > data ) { Node node = this . root . getNode ( data ); if ( node == null ) { return ; } // \u5355\u72ec\u8003\u8651\u6839\u8282\u70b9\uff0c\u6ca1\u6709\u7236\u8282\u70b9 if ( this . root == node ) { this . removeRoot (); } else { this . removeChild ( node ); } this . count --; } public Object [] toArray () { if ( this . count == 0 ) { return null ; } this . foot = 0 ; this . dataList = new Object [ this . count ]; this . root . toArrayNode (); return this . dataList ; } } class Demo { public static void main ( String [] args ) { BinaryTree < Integer > tree = new BinaryTree <>(); tree . addMany ( 8 , 7 , 12 ); System . out . println ( Arrays . toString ( tree . toArray ())); tree . remove ( 7 ); System . out . println ( Arrays . toString ( tree . toArray ())); } } 58 \u7ea2\u9ed1\u6811\u539f\u7406\u7b80\u4ecb \u4e8c\u53c9\u6811\u4e3b\u8981\u7279\u70b9\uff1a \u4f18\u70b9\uff1a\u6570\u636e\u67e5\u8be2\u7684\u65f6\u5019\u53ef\u4ee5\u63d0\u4f9b\u66f4\u597d\u7684\u67e5\u8be2\u6027\u80fd \u7f3a\u9677\uff1a\u4e8c\u53c9\u6811\u7ed3\u6784\u6539\u53d8\u7684\u65f6\u5019\uff08\u589e\u52a0\u6216\u5220\u9664\uff09\u5c31\u6709\u53ef\u80fd\u51fa\u73b0\u4e0d\u5e73\u8861\u7684\u95ee\u9898 \u5e73\u8861\u4e8c\u53c9\u6811 \u522b\u79f0\uff1a\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u5e73\u8861\u4e8c\u53c9B\u6811 \u63d2\u5165\uff0c\u5220\u9664\uff0c\u67e5\u627e\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(logn) \u5728\u8282\u70b9\u4e0a\u8ffd\u52a0\u4e86\u4e00\u4e2a\u989c\u8272\u8868\u793a \u4e5f\u53ef\u4ee5\u4f7f\u7528boolean true\u6216false enum Color { RED , BLACK ; } class BinaryTree < T >{ private Node left ; private Node right ; private Node parent ; private T data ; private Color color ; } \u7ea2\u9ed1\u6811\u7684\u7279\u70b9 1\u3001\u6bcf\u4e2a\u8282\u70b9\u6216\u8005\u9ed1\u8272\u6216\u8005\u7ea2\u8272 2\u3001\u6839\u8282\u70b9\u5fc5\u987b\u662f\u9ed1\u8272 3\u3001\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u662f\u9ed1\u8272 Java\u5b9e\u73b0\u7684\u7ea2\u9ed1\u6811\u5c06\u4f7f\u7528null\u4ee3\u8868\u7a7a\u8282\u70b9\uff0c\u56e0\u6b64\u904d\u5386\u7ea2\u9ed1\u6811\u5c06\u770b\u4e0d\u5230\u9ed1\u8272\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u53cd\u800c\u770b\u5230\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u90fd\u662f\u7ea2\u8272\u7684 4\u3001\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\u7684\uff0c\u5219\u5b83\u7684\u5b50\u8282\u70b9\u5fc5\u987b\u662f\u9ed1\u8272 \u4ece\u6bcf\u4e2a\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u4e0d\u4f1a\u6709\u4e24\u4e2a\u8fde\u7eed\u7684\u7ea2\u8272\u8282\u70b9\uff0c\u5f53\u9ed1\u8272\u8282\u70b9\u662f\u53ef\u4ee5\u8fde\u7eed\u7684 \u82e5\u7ed9\u5b9a\u9ed1\u8272\u8282\u70b9\u7684\u4e2a\u6570N\uff0c\u6700\u77ed\u8def\u5f84\u60c5\u51b5\u662f\u8fde\u7eed\u7684N\u4e2a\u9ed1\u8272\uff0c\u6570\u7684\u9ad8\u5ea6\u4e3aN-1; \u6700\u957f\u8def\u5f84\u7684\u60c5\u51b5\u4e3a\u8282\u70b9\u7ea2\u9ed1\u76f8\u95f4\uff0c\u6811\u7684\u9ad8\u5ea6\u4e3a2(N-1); 5\u3001\u4ece\u4e00\u4e2a\u8282\u70b9\u5230\u8be5\u8282\u70b9\u7684\u5b50\u5b59\u8282\u70b9\u7684\u6240\u6709\u8def\u5f84\u4e0a\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8272\u8282\u70b9\u6570\u91cf 6\u3001\u6210\u4e3a\u7ea2\u9ed1\u6811\u7684\u4e3b\u8981\u6761\u4ef6\uff0c\u540e\u5e8f\u7684\u63d2\u5165\u3001\u5220\u9664\u64cd\u4f5c\u90fd\u662f\u4e3a\u4e86\u9075\u5b88\u8fd9\u4e2a\u89c4\u5b9a \u9ed1 \u7ea2 \u7ea2 null null null null \u5141\u8bb8\u9ed1-\u9ed1\u8fde\u63a5\uff0c\u4e0d\u5141\u8bb8\u7ea2-\u7ea2\u8fde\u63a5 \u5229\u7528\u7ea2\u8272\u8282\u70b9\u548c\u9ed1\u8272\u8282\u70b9\u5b9e\u73b0\u5747\u8861\u63a7\u5236 \u6570\u636e\u63d2\u5165\u5904\u7406 1\u3001\u7b2c\u4e00\u6b21\u63d2\u5165\uff0c\u7531\u4e8e\u539f\u6811\u4e3a\u7a7a\uff0c\u6240\u4ee5\u53ea\u4f1a\u8fdd\u53cd\u7ea2-\u9ed1\u6811\u7684\u89c4\u52192 \u8981\u628a\u6839\u8282\u70b9\u6d82\u9ed1 2\u3001\u5982\u679c\u63d2\u5165\u8282\u70b9\u7684\u7236\u8282\u70b9\u662f\u9ed1\u8272\u7684\uff0c\u90a3\u4e0d\u4f1a\u8fdd\u80cc\u7ea2-\u9ed1\u6811\u7684\u539f\u5219\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u9700\u8981\u505a\uff0c \u4f46\u662f\u9047\u5230\u5982\u4e0b\u4e09\u79cd\u60c5\u51b5\u65f6\uff0c\u5c31\u8981\u5f00\u59cb\u53d8\u8272\u548c\u65cb\u8f6c\u4e86 \uff081\uff09\u63d2\u5165\u8282\u70b9\u7684\u7236\u8282\u70b9\u548c\u5176\u53d4\u53d4\u8282\u70b9\uff08\u7956\u7236\u8282\u70b9\u7684\u53e6\u4e00\u4e2a\u5b50\u8282\u70b9\uff09\u5747\u4e3a\u7ea2\u8272\u7684 \uff082\uff09\u63d2\u5165\u8282\u70b9\u7684\u7236\u8282\u70b9\u662f\u7ea2\u8272\uff0c\u53d4\u53d4\u8282\u70b9\u662f\u9ed1\u8272\uff0c\u4e14\u63d2\u5165\u8282\u70b9\u662f\u5176\u7236\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9 \uff083\uff09\u63d2\u5165\u8282\u70b9\u7684\u7236\u8282\u70b9\u662f\u7ea2\u8272\uff0c\u53d4\u53d4\u8282\u70b9\u662f\u9ed1\u8272\uff0c\u4e14\u63d2\u5165\u8282\u70b9\u662f\u5176\u7236\u8282\u70b9\u7684\u53f3\u5b50\u8282\u70b9 \u63d2\u5165\u8282\u70b9\u548c\u7236\u8282\u70b9\uff0c\u53d4\u53d4\u8282\u70b9\u6765\u51b3\u5b9a\u4fee\u590d\u5904\u7406 \u6570\u636e\u5220\u9664\u5904\u7406 \u4fee\u590d\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6811\u7ed3\u6784\u4e2d\u9ed1\u8272\u8282\u70b9\u6570\u91cf\u5e73\u8861 \u7b2c14 \u7ae0 \uff1a \u7c7b\u5e93\u4f7f\u7528\u6848\u4f8b\u5206\u6790 59 StringBuffer\u4f7f\u7528 \u4f7f\u7528StringBuffer\u8ffd\u52a026\u4e2a\u5c0f\u5199\u5b57\u6bcd\u3002\u9006\u5e8f\u8f93\u51fa\uff0c\u5e76\u5220\u9664\u524d5\u4e2a\u5b57\u7b26 StringBuffer\u5141\u8bb8\u4fee\u6539 String\u4e0d\u5141\u8bb8\u4fee\u6539 StringBuffer buff = new StringBuffer (); for ( int i = 'a' ; i <= 'z' ; i ++){ buff . append (( char ) i ); } System . out . println ( buff . reverse (). delete ( 0 , 5 )); // utsrqponmlkjihgfedcba 60 \u968f\u673a\u6570\u7ec4 Rondom \u4ea7\u751f5\u4e2a[1, 30]\u4e4b\u95f4\u968f\u673a\u6570 import java.util.Arrays ; import java.util.Random ; class NumberFactory { private static Random random = new Random (); public static int [] getRandomList ( int num ){ int [] list = new int [ num ]; int foot = 0 ; while ( foot < num ) { int value = random . nextInt ( 31 ); if ( value != 0 ){ list [ foot ++] = value ; } } return list ; } } class Demo { public static void main ( String [] args ) { int [] list = NumberFactory . getRandomList ( 5 ); System . out . println ( Arrays . toString ( list )); // [27, 3, 9, 4, 12] } } 61 Email\u9a8c\u8bc1 class Validator { public static boolean isEmail ( String email ){ if ( email == null || \"\" . equals ( email )){ return false ; } String regex = \"\\\\w+@\\\\w+\\\\.\\\\w+\" ; return email . matches ( regex ); } } class Demo { public static void main ( String [] args ) { System . out . println ( Validator . isEmail ( \"ooxx@qq.com\" )); // true } } 62 \u6254\u786c\u5e01 0-1\u968f\u673a\u6570\u6a21\u62df\u6295\u63b7\u786c\u5e01 1000\u6b21 import java.util.Random ; class Coin { private int front ; private int back ; private Random random = new Random (); public void throwCoin ( int num ){ for ( int i = 0 ; i < num ; i ++) { int value = random . nextInt ( 2 ); if ( value == 0 ){ this . front ++; } else { this . back ++; } } } public int getFront () { return this . front ; } public int getBack () { return this . back ; } } class Demo { public static void main ( String [] args ) { Coin coin = new Coin (); coin . throwCoin ( 1000 ); System . out . println ( \"\u6b63\u9762\uff1a \" + coin . getFront ()); System . out . println ( \"\u80cc\u9762\uff1a \" + coin . getBack ()); // \u6b63\u9762\uff1a 495 // \u80cc\u9762\uff1a 505 } } 63 IP\u9a8c\u8bc1 eg: 127.0.0.1 \u7b2c\u4e00\u4f4d [12]? \u7b2c\u4e8c\u4f4d [0-9]{0, 2} import java.util.Random ; class Validator { public static boolean isIp ( String ip ) { String regex = \"(\\\\d{1,3}\\\\.){3}\\\\d{1,3}\" ; if (! ip . matches ( regex )) { return false ; } String [] list = ip . split ( \"\\\\.\" ); for ( String str : list ) { int num = Integer . parseInt ( str ); if ( num > 255 || ! str . equals ( Integer . toString ( num ))) { return false ; } } return true ; } } class Demo { public static void main ( String [] args ) { System . out . println ( Validator . isIp ( \"127.0.0\" )); // false System . out . println ( Validator . isIp ( \"127.0.0.1\" )); // true System . out . println ( Validator . isIp ( \"255.255.255.255\" )); // true System . out . println ( Validator . isIp ( \"255.255.255.666\" )); // false System . out . println ( Validator . isIp ( \"255.255.001.1\" )); // false } } 64 HTML\u62c6\u5206 < font face = \"Arial,Serif\" size = \"+2\" color = \"red\" ></ font > import java.util.regex.Matcher ; import java.util.regex.Pattern ; class Demo { public static void main ( String [] args ) { String html = \"<font face=\\\"Arial,Serif\\\" size=\\\"+2\\\" color=\\\"red\\\"></font>\" ; String regex = \"\\\\w+=\\\"[a-zA-Z0-9,\\\\+]+\\\"\" ; Matcher matcher = Pattern . compile ( regex ). matcher ( html ); while ( matcher . find ()){ String temp = matcher . group ( 0 ); String [] result = temp . split ( \"=\" ); System . out . println ( result [ 0 ] + \"\\t\" + result [ 1 ]. replaceAll ( \"\\\"\" , \"\" )); /** * face Arial,Serif * size +2 * color red */ } } } 65 \u56fd\u5bb6\u4ee3\u7801 \u5b9e\u73b0\u56fd\u9645\u5316\u5e94\u7528 \u8f93\u5165\u56fd\u5bb6\u4ee3\u53f7\uff0c\u8c03\u7528\u8d44\u6e90\u6587\u4ef6 3\u4e2a\u8d44\u6e90\u6587\u4ef6 # message . properties info = \u9ed8\u8ba4\u8d44\u6e90 # message_en_US . properties info = \u82f1\u6587\u8d44\u6e90 # message_zh_CN . properties info = \u4e2d\u6587\u8d44\u6e90 import java.io.UnsupportedEncodingException ; import java.util.Locale ; import java.util.ResourceBundle ; class MessageUtil { // \u5c06\u56fa\u5b9a\u7684\u5185\u5bb9\u5b9a\u4e49\u4e3a\u5e38\u91cf private static final String CHINA = \"cn\" ; private static final String ENGLISH = \"en\" ; private static final String BASENAME = \"message\" ; private static final String KEY = \"info\" ; public static String getMessage ( String country ) throws UnsupportedEncodingException { Locale locale = getLocale ( country ); if ( locale == null ) { return null ; } else { ResourceBundle bundle = ResourceBundle . getBundle ( BASENAME , locale ); return new String ( bundle . getString ( KEY ). getBytes ( \"ISO-8859-1\" ), \"utf-8\" ); } } private static Locale getLocale ( String country ) { switch ( country ) { case CHINA : return new Locale ( \"zh\" , \"CN\" ); case ENGLISH : return new Locale ( \"en\" , \"US\" ); default : return null ; } } } class Demo { public static void main ( String [] args ) throws UnsupportedEncodingException { if ( args . length < 1 ) { System . out . println ( \"\u8bf7\u8f93\u5165\uff1acn \u6216\u8005 en\" ); System . exit ( 1 ); } System . out . println ( MessageUtil . getMessage ( args [ 0 ])); // \u4e2d\u6587\u8d44\u6e90 } } 66 \u5b66\u751f\u4fe1\u606f\u6bd4\u8f83 \u5148\u7528\u6210\u7ee9\u6bd4\u8f83\uff0c\u5982\u679c\u76f8\u540c\u6309\u5e74\u9f84\u6bd4\u8f83 \u6570\u636e\u7ed3\u6784 \u59d3\u540d\uff1a\u5e74\u9f84\uff1a\u6210\u7ee9 | \u59d3\u540d\uff1a\u5e74\u9f84\uff1a\u6210\u7ee9 eg : \u5f20\u4e09 : 21 : 98 | \u674e\u56db : 23 : 96 | \u738b\u4e94 : 24 : 94 \u7ed3\u6784\u5316\u7684\u5b57\u7b26\u4e32\u5904\u7406 import java.io.UnsupportedEncodingException ; import java.util.Arrays ; class Student implements Comparable < Student >{ private String name ; private int age ; private double score ; public Student ( String name , int age , double score ) { this . name = name ; this . age = age ; this . score = score ; } @Override public int compareTo ( Student other ) { // \u5148\u7528\u6210\u7ee9\u6bd4\u8f83\uff0c\u518d\u7528\u5e74\u9f84\u6bd4\u8f83 if ( this . score > other . score ){ return 1 ; } else if ( this . score < other . score ){ return - 1 ; } else { return this . age - other . age ; } } @Override public String toString () { return \"Student{\" + name + ',' + age + \", \" + score + \"}\" ; } } class Demo { public static void main ( String [] args ) throws UnsupportedEncodingException { String data = \"\u5f20\u4e09:21:98|\u674e\u56db:23:96|\u738b\u4e94:24:94\" ; String [] list = data . split ( \"\\\\|\" ); Student [] students = new Student [ list . length ]; for ( int i = 0 ; i < list . length ; i ++) { String [] temp = list [ i ]. split ( \":\" ); students [ i ] = new Student ( temp [ 0 ], Integer . parseInt ( temp [ 1 ]), Double . parseDouble ( temp [ 2 ])); } Arrays . sort ( students ); System . out . println ( Arrays . toString ( students )); // [Student{\u738b\u4e94,24, 94.0}, Student{\u674e\u56db,23, 96.0}, Student{\u5f20\u4e09,21, 98.0}] } }","title":"12 \u7ae0 \uff1a \u5f00\u53d1\u652f\u6301\u7c7b\u5e93"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#12","text":"","title":"12 \u7ae0 \uff1a \u5f00\u53d1\u652f\u6301\u7c7b\u5e93"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#47-uuid","text":"UUID \u6839\u636e\u65f6\u95f4\u6233\u5b9e\u73b0\u81ea\u52a8\u65e0\u91cd\u590d\u5b57\u7b26\u4e32\u5b9a\u4e49 // \u83b7\u53d6UUID public static UUID randomUUID () // \u6839\u636e\u5b57\u7b26\u4e32\u83b7\u53d6UUID public static UUID fromString ( String name ) \u5e94\u7528\uff1a\u5bf9\u6587\u4ef6\u8fdb\u884c\u81ea\u52a8\u547d\u540d\u5904\u7406 import java.util.UUID ; class Demo { public static void main ( String [] args ) { System . out . println ( UUID . randomUUID ()); // 85a8ccb1-88f8-4b3c-833d-d45b58e0204e System . out . println ( UUID . fromString ( \"85a8ccb1-88f8-4b3c-833d-d45b58e0204e\" )); // 85a8ccb1-88f8-4b3c-833d-d45b58e0204e } }","title":"47 UUID\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#48-optional","text":"Optional \u4e3b\u8981\u529f\u80fd\u662f\u8fdb\u884cnull\u7a7a\u6307\u9488\u5904\u7406 JDK >= 1.8 \u793a\u4f8b\uff1a\u5355\u72ec\u5904\u7406null\u53c2\u6570 class Message { private String message ; public Message ( String message ) { this . message = message ; } public String getMessage (){ return this . message ; } } class Demo { public static void showMessage ( Message message ) { if ( message != null ){ System . out . println ( message . getMessage ()); } } public static void main ( String [] args ) { Message message = new Message ( \"\u8fd9\u662f\u6d88\u606f\" ); showMessage ( message ); showMessage ( null ); } } \u51e0\u4e2a\u65b9\u6cd5 public final class Optional < T > { public static < T > Optional < T > empty () { @SuppressWarnings ( \"unchecked\" ) Optional < T > t = ( Optional < T >) EMPTY ; return t ; } public static < T > Optional < T > of ( T value ) { return new Optional <>( value ); } public static < T > Optional < T > ofNullable ( T value ) { return value == null ? empty () : of ( value ); } public T get () { if ( value == null ) { throw new NoSuchElementException ( \"No value present\" ); } return value ; } public T orElse ( T other ) { return value != null ? value : other ; } } \u4f7f\u7528\u793a\u4f8b import java.util.Optional ; /** * \u5b58\u5165 */ Optional < String > optOf = Optional . of ( \"message\" ); // Optional<String> optOfNull = Optional.of(null); // java.lang.NullPointerException Optional < String > optOfNullable = Optional . ofNullable ( \"message\" ); Optional < String > optOfNullableNull = Optional . ofNullable ( null ); /** * \u53d6\u51fa */ System . out . println ( optOf . get ()); // message System . out . println ( optOfNullable . get ()); // message // System.out.println(optOfNullableNull.get()); // java.util.NoSuchElementException: No value present System . out . println ( optOf . orElse ( \"default\" )); // message System . out . println ( optOfNullable . orElse ( \"default\" )); // message System . out . println ( optOfNullableNull . orElse ( \"default\" )); // default \u81ea\u5b9a\u4e49\u51fd\u6570\u5b9e\u73b0 class Demo { public static String getDefault ( String object , String defaultValue ){ return object != null ? object : defaultValue ; } public static void main ( String [] args ) { System . out . println ( getDefault ( \"message\" , \"default\" )); // message System . out . println ( getDefault ( null , \"default\" )); // default } }","title":"48 Optional\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#49-threadlocal","text":"ThreadLocal\u89e3\u51b3\u7ebf\u7a0b\u540c\u6b65\u95ee\u9898 public T get () public void set ( T value ) public void remove () \u5b9a\u4e49\u53d1\u9001\u6d88\u606f\u7c7b class Message { private String message ; public Message ( String message ) { this . message = message ; } public String getMessage (){ return this . message ; } } class Channel { private static Message message ; public static void setMessage ( Message msg ){ message = msg ; } public static void send (){ System . out . println ( message . getMessage ()); } } \u5355\u7ebf\u7a0b\u4e0b\u8fd0\u884c class Demo { public static void main ( String [] args ) { Message message = new Message ( \"\u4f60\u597d\" ); Chanel . setMessage ( message ); Chanel . send (); // \u4f60\u597d } } \u591a\u7ebf\u7a0b\u4e0b\u8fd0\u884c\uff0c\u51fa\u73b0\u6570\u636e\u8986\u76d6\u73b0\u8c61 class Demo { public static void main ( String [] args ) { new Thread (()->{ Channel . setMessage ( new Message ( \"\u4f60\u597d-1\" )); Channel . send (); }, \"\u7ebf\u7a0b-1\" ). start (); new Thread (()->{ Channel . setMessage ( new Message ( \"\u4f60\u597d-2\" )); Channel . send (); }, \"\u7ebf\u7a0b-2\" ). start (); new Thread (()->{ Channel . setMessage ( new Message ( \"\u4f60\u597d-3\" )); Channel . send (); }, \"\u7ebf\u7a0b-3\" ). start (); /** * \u7ebf\u7a0b-2 \u4f60\u597d-3 * \u7ebf\u7a0b-1 \u4f60\u597d-1 * \u7ebf\u7a0b-3 \u4f60\u597d-3 */ } } \u6539\u9020 Channel class Channel { // private static Message message; private static final ThreadLocal < Message > THREAD_LOCAL = new ThreadLocal < Message >(); public static void setMessage ( Message msg ){ THREAD_LOCAL . set ( msg ); } public static void send (){ System . out . println ( Thread . currentThread (). getName () + \" \" + THREAD_LOCAL . get (). getMessage ()); } } // \u6267\u884c\u540e\u6570\u636e\u5bf9\u5e94 /** \u7ebf\u7a0b-2 \u4f60\u597d-2 \u7ebf\u7a0b-1 \u4f60\u597d-1 \u7ebf\u7a0b-3 \u4f60\u597d-3 */ ThreadLocal\uff0c \u53ea\u5141\u8bb8\u4fdd\u5b58\u4e00\u4e2a\u6570\u636e","title":"49 ThreadLocal\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#50","text":"\u5b9a\u65f6\u5668\u8fdb\u884c\u5b9a\u65f6\u4efb\u52a1\u5904\u7406\uff0c\u5b9e\u73b0\u4e86\u4e00\u79cd\u95f4\u9694\u89e6\u53d1\u64cd\u4f5c java.util.TimerTask \u5b9a\u65f6\u4efb\u52a1\u5904\u7406 java.util.Timer \u4efb\u52a1\u542f\u52a8 // \u5b9a\u65f6\u542f\u52a8 public void schedule ( TimerTask task , long delay ) // \u95f4\u9694\u4efb\u52a1 public void scheduleAtFixedRate ( TimerTask task , long delay , long period ) \u5b9a\u4e49\u4efb\u52a1 import java.util.TimerTask ; class MyTask extends TimerTask { @Override public void run () { System . out . println ( \"\u4efb\u52a1\u542f\u52a8 \" + System . currentTimeMillis ()); } } \u793a\u4f8b\uff1a\u5b9a\u65f6\u542f\u52a8\uff0c\u4f1a\u5361\u4e3b import java.util.Timer ; class Demo { public static void main ( String [] args ) { Timer timer = new Timer (); timer . schedule ( new MyTask (), 100 ); // \u4efb\u52a1\u542f\u52a8 1574260837613 } } \u793a\u4f8b\uff1a\u95f4\u9694\u4efb\u52a1 class Demo { public static void main ( String [] args ) { Timer timer = new Timer (); timer . scheduleAtFixedRate ( new MyTask (), 100 , 1000 ); } }","title":"50 \u5b9a\u65f6\u8c03\u5ea6"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#51-base64","text":"\u52a0\u5bc6\u89e3\u5bc6\u793a\u4f8b String message = \"Hello Java\" ; String encodeMessage = new String ( Base64 . getEncoder (). encode ( message . getBytes ())); System . out . println ( encodeMessage ); // SGVsbG8gSmF2YQ== String decodeMessage = new String ( Base64 . getDecoder (). decode ( encodeMessage )); System . out . println ( decodeMessage ); // Hello Java \u6700\u597d\u7684\u65b9\u6cd5\u662f\u4f7f\u75282-3\u4e2d\u52a0\u5bc6\u7a0b\u5e8f\uff0c\u8fdb\u884c\u591a\u6b21\u52a0\u5bc6 \u52a0\u5bc6\u89e3\u5bc6\u793a\u4f8b import java.util.Base64 ; class Crypto { // \u52a0\u5bc6\u91cd\u590d\u6b21\u6570\uff0c\u8d8a\u9ad8\u8d8a\u5b89\u5168 private static final int REPEAT = 3 ; /** * \u52a0\u5bc6\u5904\u7406 * @param message * @return */ public static String encode ( String message ){ byte [] data = message . getBytes (); // \u91cd\u590d\u52a0\u5bc6 for ( int i = 0 ; i < REPEAT ; i ++) { data = Base64 . getEncoder (). encode ( data ); } return new String ( data ); } public static String decode ( String message ){ byte [] data = message . getBytes (); for ( int i = 0 ; i < REPEAT ; i ++) { data = Base64 . getDecoder (). decode ( data ); } return new String ( data ); } } class Demo { public static void main ( String [] args ) { String message = \"Hello Java\" ; String encodeMessage = Crypto . encode ( message ); System . out . println ( encodeMessage ); // VTBkV2MySkhPR2RUYlVZeVdWRTlQUT09 String decodeMessage = Crypto . decode ( encodeMessage ); System . out . println ( decodeMessage ); // Hello Java } }","title":"51 Base64\u52a0\u5bc6\u4e0e\u89e3\u5bc6"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#13","text":"","title":"\u7b2c13 \u7ae0 \uff1a \u6bd4\u8f83\u5668"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#52","text":"\u6bd4\u8f83\u5668\uff1a\u5927\u5c0f\u5173\u7cfb\u5224\u65ad \u793a\u4f8b\uff1a\u5bf9\u8c61\u6570\u7ec4\u6392\u5e8f Integer [] data = new Integer []{ 1 , 4 , 5 , 8 , 6 }; Arrays . sort ( data ); System . out . println ( Arrays . toString ( data )); // [1, 4, 5, 6, 8]","title":"52 \u6bd4\u8f83\u5668\u95ee\u9898\u5f15\u51fa"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#53-comparable","text":"\u63a5\u53e3\uff1aComparable public interface Comparable < T > { public int compareTo ( T o ); } \u5927\u4e8e\u8fd4\u56de\u6b63\u6570 \u7b49\u4e8e\u8fd4\u56de0 \u5c0f\u4e8e\u8fd4\u56de\u8d1f\u6570 \u793a\u4f8b\uff1a\u81ea\u5b9a\u4e49\u7c7b\u578b\u6570\u7ec4\u6392\u5e8f import java.util.Arrays ; class Person implements Comparable < Person >{ private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } @Override public int compareTo ( Person other ) { return this . age - other . age ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } class Demo { public static void main ( String [] args ) { Person [] data = { new Person ( \"\u5c0f\u738b\" , 23 ), new Person ( \"\u5c0f\u5218\" , 27 ), new Person ( \"\u5c0f\u5f20\" , 25 ), }; Arrays . sort ( data ); System . out . println ( Arrays . toString ( data )); // [ // Person{name='\u5c0f\u738b', age=23}, // Person{name='\u5c0f\u5f20', age=25}, // Person{name='\u5c0f\u5218', age=27} // ] } }","title":"53 Comparable\u6bd4\u8f83\u5668"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#54-comparator","text":"\u89e3\u51b3\u6ca1\u6709\u5b9e\u73b0Comparable\u63a5\u53e3\u7684\u5bf9\u8c61\u6bd4\u8f83 @FunctionalInterface public interface Comparator < T > { int compare ( T o1 , T o2 ); } \u6392\u5e8f\u65b9\u6cd5 import java.util.Arrays ; public static void sort ( Object [] a ) public static < T > void sort ( T [] a , Comparator <? super T > c ) \u4f7f\u7528\u793a\u4f8b import java.util.Arrays ; import java.util.Comparator ; class Person { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } public int getAge () { return age ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } class PersonComparator implements Comparator < Person > { @Override public int compare ( Person person1 , Person person2 ) { return person1 . getAge () - person2 . getAge (); } } class Demo { public static void main ( String [] args ) { Person [] data = { new Person ( \"\u5c0f\u738b\" , 23 ), new Person ( \"\u5c0f\u5218\" , 27 ), new Person ( \"\u5c0f\u5f20\" , 25 ), }; Arrays . sort ( data , new PersonComparator ()); System . out . println ( Arrays . toString ( data )); // [ // Person{name='\u5c0f\u738b', age=23}, // Person{name='\u5c0f\u5f20', age=25}, // Person{name='\u5c0f\u5218', age=27} // ] } } Comparable\u4f18\u5148\u4f7f\u7528 \u533a\u522b Comparable Comparator Comparable \u5b9a\u4e49\u7c7b\u7684\u65f6\u5019\u5b9e\u73b0\u7236\u63a5\u53e3\uff0c\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219 public int compareTo ( T o ) Comparator \u633d\u6551\u7684\u6bd4\u8f83\u5668\u64cd\u4f5c\uff0c\u9700\u8981\u5355\u72ec\u8bbe\u7f6e\u6bd4\u8f83\u89c4\u5219\u5b9e\u73b0\u6392\u5e8f int compare ( T o1 , T o2 ); \u53ef\u4ee5\u4f7f\u7528\u533f\u540d\u7c7b Arrays . sort ( data , new Comparator < Person >() { @Override public int compare ( Person o1 , Person o2 ) { return o1 . getAge () - o2 . getAge (); } }); \u4e5f\u53ef\u4ee5\u4f7f\u7528Lambda\u8868\u8fbe\u5f0f Comparator < Person > comparator = ( Person o1 , Person o2 )->{ return o1 . getAge () - o2 . getAge (); }; Arrays . sort ( data , comparator ); \u6216\u8005 Arrays . sort ( data , ( p1 , p2 )->{ return p1 . getAge () - p2 . getAge (); });","title":"54 Comparator\u6bd4\u8f83\u5668"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#55","text":"\u94fe\u8868\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n) \u4e8c\u53c9\u6811\u67e5\u627e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(logn) \u6570\u636e\u4f4d\u7f6e \u7236\u8282\u70b9 - \u4e2d \u5de6\u5b50\u6811 - \u5c0f \u53f3\u5b50\u6811 - \u5927 \u904d\u5386\u6570\u636e 1\u3001\u524d\u5e8f\u904d\u5386 \u6839-\u5de6-\u53f3 2\u3001\u4e2d\u5e8f\u904d\u5386 \u5de6-\u6839-\u53f3 3\u3001\u540e\u5e8f\u904d\u5386 \u5de6-\u53f3-\u6839","title":"55 \u4e8c\u53c9\u6811\u7ed3\u6784\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#56","text":"import java.util.Arrays ; class Person implements Comparable < Person > { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } public int getAge () { return age ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } @Override public int compareTo ( Person other ) { return this . age - other . age ; } } class BinaryTree < T extends Comparable < T >> { private class Node { private Comparable < T > data ; private Node parent ; private Node left ; private Node right ; public Node ( Comparable < T > data ) { this . data = data ; } public void addNode ( Node node ) { // \u6570\u636e\u6bd4\u5f53\u524d\u8282\u70b9\u5c0f\uff0c\u6dfb\u52a0\u5230\u5de6\u5b50\u6811 if ( node . data . compareTo (( T ) this . data ) <= 0 ) { if ( this . left == null ) { this . left = node ; node . parent = this ; // \u4fdd\u5b58\u7236\u8282\u70b9 } else { this . left . addNode ( node ); } } // \u6570\u636e\u6bd4\u5f53\u524d\u8282\u70b9\u5927\uff0c\u6dfb\u52a0\u5230\u53f3\u5b50\u6811 else { if ( this . right == null ) { this . right = node ; node . parent = this ; } else { this . right . addNode ( node ); } } } public void toArrayNode (){ if ( this . left != null ){ this . left . toArrayNode (); } BinaryTree . this . dataList [ BinaryTree . this . foot ++] = this . data ; if ( this . right != null ){ this . right . toArrayNode (); } } } private Node root ; // \u6839\u8282\u70b9 private int count ; private int foot ; private Object [] dataList ; /** * \u6570\u636e\u6dfb\u52a0 * * @param data \u8981\u6dfb\u52a0\u7684\u6570\u636e */ public void add ( Comparable < T > data ) { if ( data == null ) { throw new NullPointerException ( \"\u6570\u636e\u4e0d\u5141\u8bb8\u4e3a\u7a7a\" ); } Node node = new Node ( data ); if ( this . root == null ) { this . root = node ; } else { this . root . addNode ( node ); } this . count ++; } public Object [] toArray (){ if ( this . count == 0 ){ return null ; } this . foot = 0 ; this . dataList = new Object [ this . count ]; this . root . toArrayNode (); return this . dataList ; } } class Demo { public static void main ( String [] args ) { BinaryTree < Person > tree = new BinaryTree <>(); tree . add ( new Person ( \"\u5c0f\u738b\" , 23 )); tree . add ( new Person ( \"\u5c0f\u5218\" , 27 )); tree . add ( new Person ( \"\u5c0f\u5f20\" , 25 )); System . out . println ( Arrays . toString ( tree . toArray ())); /** * [ * Person{name='\u5c0f\u738b', age=23}, * Person{name='\u5c0f\u5f20', age=25}, * Person{name='\u5c0f\u5218', age=27} * ] */ } }","title":"56 \u4e8c\u53c9\u6811\u57fa\u7840\u5b9e\u73b0"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#57","text":"\u8981\u5220\u9664\u7684\u8282\u70b9\u60c5\u51b5\uff1a 1\u3001\u6ca1\u6709\u5b50\u8282\u70b9\uff0c\u76f4\u63a5\u5220\u9664 2\u3001\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\uff08\u5de6\u8282\u70b9\u6216\u53f3\u8282\u70b9\uff09\uff0c\u5220\u9664\u540e\u7528\u5b50\u8282\u70b9\u9876\u66ff 3\u3001\u6709\u5de6\u53f3\u8282\u70b9\uff0c\u5728\u53f3\u5b50\u6811\u4e2d\u627e\u6700\u5de6\u8fb9\u8282\u70b9\u9876\u66ff 4\u3001\u9700\u8981\u7279\u6b8a\u8003\u8651\u6839\u8282\u70b9 import java.util.Arrays ; class BinaryTree < T extends Comparable < T >> { private class Node { private Comparable < T > data ; private Node parent ; private Node left ; private Node right ; public Node ( Comparable < T > data ) { this . data = data ; } public void addNode ( Node node ) { // \u6570\u636e\u6bd4\u5f53\u524d\u8282\u70b9\u5c0f\uff0c\u6dfb\u52a0\u5230\u5de6\u5b50\u6811 if ( node . data . compareTo (( T ) this . data ) <= 0 ) { if ( this . left == null ) { this . left = node ; node . parent = this ; // \u4fdd\u5b58\u7236\u8282\u70b9 } else { this . left . addNode ( node ); } } // \u6570\u636e\u6bd4\u5f53\u524d\u8282\u70b9\u5927\uff0c\u6dfb\u52a0\u5230\u53f3\u5b50\u6811 else { if ( this . right == null ) { this . right = node ; node . parent = this ; } else { this . right . addNode ( node ); } } } public Node getMostLeftNode () { if ( this . left != null ) { return this . left . getMostLeftNode (); } else { return this ; } } public Node getNode ( Comparable < T > data ) { if ( this . data . compareTo (( T ) data ) == 0 ) { return this ; } // \u67e5\u627e\u5b50\u8282\u70b9 else { // \u53f3\u8fb9\u8282\u70b9 if ( data . compareTo (( T ) this . data ) > 0 ) { if ( this . right != null ) { return this . right . getNode ( data ); } else { return null ; } // \u5de6\u8fb9\u8282\u70b9 } else { if ( this . left != null ) { return this . left . getNode ( data ); } else { return null ; } } } } public void toArrayNode () { if ( this . left != null ) { System . out . println ( this . data + \" left-> \" + this . left . data ); this . left . toArrayNode (); } BinaryTree . this . dataList [ BinaryTree . this . foot ++] = this . data ; if ( this . right != null ) { System . out . println ( this . data + \" right-> \" + this . right . data ); this . right . toArrayNode (); } } } private Node root ; // \u6839\u8282\u70b9 private int count ; private int foot ; private Object [] dataList ; /** * \u6570\u636e\u6dfb\u52a0 * * @param data \u8981\u6dfb\u52a0\u7684\u6570\u636e */ public void add ( Comparable < T > data ) { if ( data == null ) { throw new NullPointerException ( \"\u6570\u636e\u4e0d\u5141\u8bb8\u4e3a\u7a7a\" ); } Node node = new Node ( data ); if ( this . root == null ) { this . root = node ; } else { this . root . addNode ( node ); } this . count ++; } public void addMany ( Comparable < T >... list ) { for ( Comparable < T > data : list ) { this . add ( data ); } } public void removeRoot () { // \u53f3\u5b50\u6811\u4e0d\u4e3a\u7a7a if ( this . root . right != null ) { Node mostLeftNode = this . root . right . getMostLeftNode (); System . out . println ( mostLeftNode . data ); mostLeftNode . parent . left = null ; mostLeftNode . parent = null ; mostLeftNode . left = root . left ; mostLeftNode . right = root . right ; this . root = mostLeftNode ; } // \u53f3\u5b50\u6811\u4e3a\u7a7a else if ( this . root . left != null ) { this . root . left . parent = null ; this . root = this . root . left ; } // \u5355\u72ec\u6839\u8282\u70b9 else { this . root = null ; } } public void removeChild ( Node node ) { // 1\u3001\u6ca1\u6709\u5b50\u8282\u70b9 if ( node . left == null && node . right == null ) { if ( node . parent . left == node ) { node . parent . left = null ; } else { node . parent . right = null ; } } // 2\u3001\u6709\u4e00\u4e2a\u5b50\u8282\u70b9 // 2-1 \u53ea\u6709\u53f3\u8282\u70b9 else if ( node . left == null ) { if ( node . parent . left == node ) { node . parent . left = node . right ; } else { node . parent . right = node . right ; } } // 2-2\u53ea\u6709\u5de6\u8282\u70b9 else if ( node . right == null ) { if ( node . parent . left == node ) { node . parent . left = node . left ; } else { node . parent . right = node . left ; } } // 3\u3001\u6709\u4e24\u4e2a\u5b50\u8282\u70b9 else { Node mostLeftNode = node . right . getMostLeftNode (); mostLeftNode . parent . left = null ; mostLeftNode . parent = node . parent ; mostLeftNode . left = node . left ; mostLeftNode . right = node . right ; } node . parent = null ; } public void remove ( Comparable < T > data ) { Node node = this . root . getNode ( data ); if ( node == null ) { return ; } // \u5355\u72ec\u8003\u8651\u6839\u8282\u70b9\uff0c\u6ca1\u6709\u7236\u8282\u70b9 if ( this . root == node ) { this . removeRoot (); } else { this . removeChild ( node ); } this . count --; } public Object [] toArray () { if ( this . count == 0 ) { return null ; } this . foot = 0 ; this . dataList = new Object [ this . count ]; this . root . toArrayNode (); return this . dataList ; } } class Demo { public static void main ( String [] args ) { BinaryTree < Integer > tree = new BinaryTree <>(); tree . addMany ( 8 , 7 , 12 ); System . out . println ( Arrays . toString ( tree . toArray ())); tree . remove ( 7 ); System . out . println ( Arrays . toString ( tree . toArray ())); } }","title":"57 \u4e8c\u53c9\u6811\u6570\u636e\u5220\u9664"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#58","text":"\u4e8c\u53c9\u6811\u4e3b\u8981\u7279\u70b9\uff1a \u4f18\u70b9\uff1a\u6570\u636e\u67e5\u8be2\u7684\u65f6\u5019\u53ef\u4ee5\u63d0\u4f9b\u66f4\u597d\u7684\u67e5\u8be2\u6027\u80fd \u7f3a\u9677\uff1a\u4e8c\u53c9\u6811\u7ed3\u6784\u6539\u53d8\u7684\u65f6\u5019\uff08\u589e\u52a0\u6216\u5220\u9664\uff09\u5c31\u6709\u53ef\u80fd\u51fa\u73b0\u4e0d\u5e73\u8861\u7684\u95ee\u9898 \u5e73\u8861\u4e8c\u53c9\u6811 \u522b\u79f0\uff1a\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u5e73\u8861\u4e8c\u53c9B\u6811 \u63d2\u5165\uff0c\u5220\u9664\uff0c\u67e5\u627e\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(logn) \u5728\u8282\u70b9\u4e0a\u8ffd\u52a0\u4e86\u4e00\u4e2a\u989c\u8272\u8868\u793a \u4e5f\u53ef\u4ee5\u4f7f\u7528boolean true\u6216false enum Color { RED , BLACK ; } class BinaryTree < T >{ private Node left ; private Node right ; private Node parent ; private T data ; private Color color ; } \u7ea2\u9ed1\u6811\u7684\u7279\u70b9 1\u3001\u6bcf\u4e2a\u8282\u70b9\u6216\u8005\u9ed1\u8272\u6216\u8005\u7ea2\u8272 2\u3001\u6839\u8282\u70b9\u5fc5\u987b\u662f\u9ed1\u8272 3\u3001\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u662f\u9ed1\u8272 Java\u5b9e\u73b0\u7684\u7ea2\u9ed1\u6811\u5c06\u4f7f\u7528null\u4ee3\u8868\u7a7a\u8282\u70b9\uff0c\u56e0\u6b64\u904d\u5386\u7ea2\u9ed1\u6811\u5c06\u770b\u4e0d\u5230\u9ed1\u8272\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u53cd\u800c\u770b\u5230\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u90fd\u662f\u7ea2\u8272\u7684 4\u3001\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\u7684\uff0c\u5219\u5b83\u7684\u5b50\u8282\u70b9\u5fc5\u987b\u662f\u9ed1\u8272 \u4ece\u6bcf\u4e2a\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u4e0d\u4f1a\u6709\u4e24\u4e2a\u8fde\u7eed\u7684\u7ea2\u8272\u8282\u70b9\uff0c\u5f53\u9ed1\u8272\u8282\u70b9\u662f\u53ef\u4ee5\u8fde\u7eed\u7684 \u82e5\u7ed9\u5b9a\u9ed1\u8272\u8282\u70b9\u7684\u4e2a\u6570N\uff0c\u6700\u77ed\u8def\u5f84\u60c5\u51b5\u662f\u8fde\u7eed\u7684N\u4e2a\u9ed1\u8272\uff0c\u6570\u7684\u9ad8\u5ea6\u4e3aN-1; \u6700\u957f\u8def\u5f84\u7684\u60c5\u51b5\u4e3a\u8282\u70b9\u7ea2\u9ed1\u76f8\u95f4\uff0c\u6811\u7684\u9ad8\u5ea6\u4e3a2(N-1); 5\u3001\u4ece\u4e00\u4e2a\u8282\u70b9\u5230\u8be5\u8282\u70b9\u7684\u5b50\u5b59\u8282\u70b9\u7684\u6240\u6709\u8def\u5f84\u4e0a\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8272\u8282\u70b9\u6570\u91cf 6\u3001\u6210\u4e3a\u7ea2\u9ed1\u6811\u7684\u4e3b\u8981\u6761\u4ef6\uff0c\u540e\u5e8f\u7684\u63d2\u5165\u3001\u5220\u9664\u64cd\u4f5c\u90fd\u662f\u4e3a\u4e86\u9075\u5b88\u8fd9\u4e2a\u89c4\u5b9a \u9ed1 \u7ea2 \u7ea2 null null null null \u5141\u8bb8\u9ed1-\u9ed1\u8fde\u63a5\uff0c\u4e0d\u5141\u8bb8\u7ea2-\u7ea2\u8fde\u63a5 \u5229\u7528\u7ea2\u8272\u8282\u70b9\u548c\u9ed1\u8272\u8282\u70b9\u5b9e\u73b0\u5747\u8861\u63a7\u5236 \u6570\u636e\u63d2\u5165\u5904\u7406 1\u3001\u7b2c\u4e00\u6b21\u63d2\u5165\uff0c\u7531\u4e8e\u539f\u6811\u4e3a\u7a7a\uff0c\u6240\u4ee5\u53ea\u4f1a\u8fdd\u53cd\u7ea2-\u9ed1\u6811\u7684\u89c4\u52192 \u8981\u628a\u6839\u8282\u70b9\u6d82\u9ed1 2\u3001\u5982\u679c\u63d2\u5165\u8282\u70b9\u7684\u7236\u8282\u70b9\u662f\u9ed1\u8272\u7684\uff0c\u90a3\u4e0d\u4f1a\u8fdd\u80cc\u7ea2-\u9ed1\u6811\u7684\u539f\u5219\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u9700\u8981\u505a\uff0c \u4f46\u662f\u9047\u5230\u5982\u4e0b\u4e09\u79cd\u60c5\u51b5\u65f6\uff0c\u5c31\u8981\u5f00\u59cb\u53d8\u8272\u548c\u65cb\u8f6c\u4e86 \uff081\uff09\u63d2\u5165\u8282\u70b9\u7684\u7236\u8282\u70b9\u548c\u5176\u53d4\u53d4\u8282\u70b9\uff08\u7956\u7236\u8282\u70b9\u7684\u53e6\u4e00\u4e2a\u5b50\u8282\u70b9\uff09\u5747\u4e3a\u7ea2\u8272\u7684 \uff082\uff09\u63d2\u5165\u8282\u70b9\u7684\u7236\u8282\u70b9\u662f\u7ea2\u8272\uff0c\u53d4\u53d4\u8282\u70b9\u662f\u9ed1\u8272\uff0c\u4e14\u63d2\u5165\u8282\u70b9\u662f\u5176\u7236\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9 \uff083\uff09\u63d2\u5165\u8282\u70b9\u7684\u7236\u8282\u70b9\u662f\u7ea2\u8272\uff0c\u53d4\u53d4\u8282\u70b9\u662f\u9ed1\u8272\uff0c\u4e14\u63d2\u5165\u8282\u70b9\u662f\u5176\u7236\u8282\u70b9\u7684\u53f3\u5b50\u8282\u70b9 \u63d2\u5165\u8282\u70b9\u548c\u7236\u8282\u70b9\uff0c\u53d4\u53d4\u8282\u70b9\u6765\u51b3\u5b9a\u4fee\u590d\u5904\u7406 \u6570\u636e\u5220\u9664\u5904\u7406 \u4fee\u590d\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6811\u7ed3\u6784\u4e2d\u9ed1\u8272\u8282\u70b9\u6570\u91cf\u5e73\u8861","title":"58 \u7ea2\u9ed1\u6811\u539f\u7406\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#14","text":"","title":"\u7b2c14 \u7ae0 \uff1a \u7c7b\u5e93\u4f7f\u7528\u6848\u4f8b\u5206\u6790"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#59-stringbuffer","text":"\u4f7f\u7528StringBuffer\u8ffd\u52a026\u4e2a\u5c0f\u5199\u5b57\u6bcd\u3002\u9006\u5e8f\u8f93\u51fa\uff0c\u5e76\u5220\u9664\u524d5\u4e2a\u5b57\u7b26 StringBuffer\u5141\u8bb8\u4fee\u6539 String\u4e0d\u5141\u8bb8\u4fee\u6539 StringBuffer buff = new StringBuffer (); for ( int i = 'a' ; i <= 'z' ; i ++){ buff . append (( char ) i ); } System . out . println ( buff . reverse (). delete ( 0 , 5 )); // utsrqponmlkjihgfedcba","title":"59 StringBuffer\u4f7f\u7528"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#60","text":"Rondom \u4ea7\u751f5\u4e2a[1, 30]\u4e4b\u95f4\u968f\u673a\u6570 import java.util.Arrays ; import java.util.Random ; class NumberFactory { private static Random random = new Random (); public static int [] getRandomList ( int num ){ int [] list = new int [ num ]; int foot = 0 ; while ( foot < num ) { int value = random . nextInt ( 31 ); if ( value != 0 ){ list [ foot ++] = value ; } } return list ; } } class Demo { public static void main ( String [] args ) { int [] list = NumberFactory . getRandomList ( 5 ); System . out . println ( Arrays . toString ( list )); // [27, 3, 9, 4, 12] } }","title":"60 \u968f\u673a\u6570\u7ec4"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#61-email","text":"class Validator { public static boolean isEmail ( String email ){ if ( email == null || \"\" . equals ( email )){ return false ; } String regex = \"\\\\w+@\\\\w+\\\\.\\\\w+\" ; return email . matches ( regex ); } } class Demo { public static void main ( String [] args ) { System . out . println ( Validator . isEmail ( \"ooxx@qq.com\" )); // true } }","title":"61 Email\u9a8c\u8bc1"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#62","text":"0-1\u968f\u673a\u6570\u6a21\u62df\u6295\u63b7\u786c\u5e01 1000\u6b21 import java.util.Random ; class Coin { private int front ; private int back ; private Random random = new Random (); public void throwCoin ( int num ){ for ( int i = 0 ; i < num ; i ++) { int value = random . nextInt ( 2 ); if ( value == 0 ){ this . front ++; } else { this . back ++; } } } public int getFront () { return this . front ; } public int getBack () { return this . back ; } } class Demo { public static void main ( String [] args ) { Coin coin = new Coin (); coin . throwCoin ( 1000 ); System . out . println ( \"\u6b63\u9762\uff1a \" + coin . getFront ()); System . out . println ( \"\u80cc\u9762\uff1a \" + coin . getBack ()); // \u6b63\u9762\uff1a 495 // \u80cc\u9762\uff1a 505 } }","title":"62 \u6254\u786c\u5e01"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#63-ip","text":"eg: 127.0.0.1 \u7b2c\u4e00\u4f4d [12]? \u7b2c\u4e8c\u4f4d [0-9]{0, 2} import java.util.Random ; class Validator { public static boolean isIp ( String ip ) { String regex = \"(\\\\d{1,3}\\\\.){3}\\\\d{1,3}\" ; if (! ip . matches ( regex )) { return false ; } String [] list = ip . split ( \"\\\\.\" ); for ( String str : list ) { int num = Integer . parseInt ( str ); if ( num > 255 || ! str . equals ( Integer . toString ( num ))) { return false ; } } return true ; } } class Demo { public static void main ( String [] args ) { System . out . println ( Validator . isIp ( \"127.0.0\" )); // false System . out . println ( Validator . isIp ( \"127.0.0.1\" )); // true System . out . println ( Validator . isIp ( \"255.255.255.255\" )); // true System . out . println ( Validator . isIp ( \"255.255.255.666\" )); // false System . out . println ( Validator . isIp ( \"255.255.001.1\" )); // false } }","title":"63 IP\u9a8c\u8bc1"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#64-html","text":"< font face = \"Arial,Serif\" size = \"+2\" color = \"red\" ></ font > import java.util.regex.Matcher ; import java.util.regex.Pattern ; class Demo { public static void main ( String [] args ) { String html = \"<font face=\\\"Arial,Serif\\\" size=\\\"+2\\\" color=\\\"red\\\"></font>\" ; String regex = \"\\\\w+=\\\"[a-zA-Z0-9,\\\\+]+\\\"\" ; Matcher matcher = Pattern . compile ( regex ). matcher ( html ); while ( matcher . find ()){ String temp = matcher . group ( 0 ); String [] result = temp . split ( \"=\" ); System . out . println ( result [ 0 ] + \"\\t\" + result [ 1 ]. replaceAll ( \"\\\"\" , \"\" )); /** * face Arial,Serif * size +2 * color red */ } } }","title":"64 HTML\u62c6\u5206"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#65","text":"\u5b9e\u73b0\u56fd\u9645\u5316\u5e94\u7528 \u8f93\u5165\u56fd\u5bb6\u4ee3\u53f7\uff0c\u8c03\u7528\u8d44\u6e90\u6587\u4ef6 3\u4e2a\u8d44\u6e90\u6587\u4ef6 # message . properties info = \u9ed8\u8ba4\u8d44\u6e90 # message_en_US . properties info = \u82f1\u6587\u8d44\u6e90 # message_zh_CN . properties info = \u4e2d\u6587\u8d44\u6e90 import java.io.UnsupportedEncodingException ; import java.util.Locale ; import java.util.ResourceBundle ; class MessageUtil { // \u5c06\u56fa\u5b9a\u7684\u5185\u5bb9\u5b9a\u4e49\u4e3a\u5e38\u91cf private static final String CHINA = \"cn\" ; private static final String ENGLISH = \"en\" ; private static final String BASENAME = \"message\" ; private static final String KEY = \"info\" ; public static String getMessage ( String country ) throws UnsupportedEncodingException { Locale locale = getLocale ( country ); if ( locale == null ) { return null ; } else { ResourceBundle bundle = ResourceBundle . getBundle ( BASENAME , locale ); return new String ( bundle . getString ( KEY ). getBytes ( \"ISO-8859-1\" ), \"utf-8\" ); } } private static Locale getLocale ( String country ) { switch ( country ) { case CHINA : return new Locale ( \"zh\" , \"CN\" ); case ENGLISH : return new Locale ( \"en\" , \"US\" ); default : return null ; } } } class Demo { public static void main ( String [] args ) throws UnsupportedEncodingException { if ( args . length < 1 ) { System . out . println ( \"\u8bf7\u8f93\u5165\uff1acn \u6216\u8005 en\" ); System . exit ( 1 ); } System . out . println ( MessageUtil . getMessage ( args [ 0 ])); // \u4e2d\u6587\u8d44\u6e90 } }","title":"65 \u56fd\u5bb6\u4ee3\u7801"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u652f\u6301\u7c7b\u5e93/#66","text":"\u5148\u7528\u6210\u7ee9\u6bd4\u8f83\uff0c\u5982\u679c\u76f8\u540c\u6309\u5e74\u9f84\u6bd4\u8f83 \u6570\u636e\u7ed3\u6784 \u59d3\u540d\uff1a\u5e74\u9f84\uff1a\u6210\u7ee9 | \u59d3\u540d\uff1a\u5e74\u9f84\uff1a\u6210\u7ee9 eg : \u5f20\u4e09 : 21 : 98 | \u674e\u56db : 23 : 96 | \u738b\u4e94 : 24 : 94 \u7ed3\u6784\u5316\u7684\u5b57\u7b26\u4e32\u5904\u7406 import java.io.UnsupportedEncodingException ; import java.util.Arrays ; class Student implements Comparable < Student >{ private String name ; private int age ; private double score ; public Student ( String name , int age , double score ) { this . name = name ; this . age = age ; this . score = score ; } @Override public int compareTo ( Student other ) { // \u5148\u7528\u6210\u7ee9\u6bd4\u8f83\uff0c\u518d\u7528\u5e74\u9f84\u6bd4\u8f83 if ( this . score > other . score ){ return 1 ; } else if ( this . score < other . score ){ return - 1 ; } else { return this . age - other . age ; } } @Override public String toString () { return \"Student{\" + name + ',' + age + \", \" + score + \"}\" ; } } class Demo { public static void main ( String [] args ) throws UnsupportedEncodingException { String data = \"\u5f20\u4e09:21:98|\u674e\u56db:23:96|\u738b\u4e94:24:94\" ; String [] list = data . split ( \"\\\\|\" ); Student [] students = new Student [ list . length ]; for ( int i = 0 ; i < list . length ; i ++) { String [] temp = list [ i ]. split ( \":\" ); students [ i ] = new Student ( temp [ 0 ], Integer . parseInt ( temp [ 1 ]), Double . parseDouble ( temp [ 2 ])); } Arrays . sort ( students ); System . out . println ( Arrays . toString ( students )); // [Student{\u738b\u4e94,24, 94.0}, Student{\u674e\u56db,23, 96.0}, Student{\u5f20\u4e09,21, 98.0}] } }","title":"66 \u5b66\u751f\u4fe1\u606f\u6bd4\u8f83"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6570\u636e\u5e93\u7f16\u7a0b/","text":"\u7b2c36 \u7ae0 \uff1a Java\u6570\u636e\u5e93\u7f16\u7a0b\u57fa\u7840\u64cd\u4f5c 156 JDBC\u7b80\u4ecb JDBC \u5c5e\u4e8e\u4e00\u79cd\u670d\u52a1\uff0c\u6240\u6709\u670d\u52a1\u90fd\u5fc5\u987b\u6309\u7167\u6307\u5b9a\u7684\u6d41\u7a0b\u8fdb\u884c\u64cd\u4f5c Java Database Connectivity \u5f00\u53d1\u5305 java.sql \u6838\u5fc3\u7ec4\u6210 DriverManager \u63a5\u53e3 Connection\u3001Statement\u3001PreparedStatement\u3001ResultSet \u56db\u79cd\u8fde\u63a5\u65b9\u5f0f\uff1a JDBC-ODBC \u6865\u8fde\u63a5 JDK\u652f\u6301\uff0c\u6027\u80fd\u8f83\u5dee JDBC \u4e00\u822c\u53ea\u8fde\u63a5\u672c\u5730\u670d\u52a1 JDBC\u7f51\u7edc\u8fde\u63a5 \u8fde\u63a5\u7f51\u7edc\u6570\u636e\u5e93 JDBC\u534f\u8bae\u8fde\u63a5 157 \u8fde\u63a5MySQL\u6570\u636e\u5e93 \u9700\u8981\u914d\u7f6e\u9a71\u52a8\u7a0b\u5e8f\u8def\u5f84 \u901a\u8fc7\u53cd\u5c04\u673a\u5236\u52a0\u8f7d\u6570\u636e\u5e93\u9a71\u52a8\u7a0b\u5e8f\u7c7b \u6574\u4e2aJDBC\u8bbe\u8ba1\u5b9e\u73b0\u7684\u5c31\u662f\u4e00\u4e2a\u5de5\u5382\u7c7b pom.xml <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.18 </version> </dependency> import java.sql.Connection ; import java.sql.DriverManager ; class Demo { // MySQL < 8.0 // static final String JDBC_DRIVER = \"com.mysql.jdbc.Driver\"; // static final String DB_URL = \"jdbc:mysql://localhost:3306/data\"; // MySQL >= 8.0 private static final String JDBC_DRIVER = \"com.mysql.cj.jdbc.Driver\" ; private static final String DB_URL = \"jdbc:mysql://localhost:3306/data?useSSL=false&serverTimezone=UTC\" ; private static final String USER = \"root\" ; private static final String PASSWORD = \"123456\" ; public static void main ( String [] args ) throws Exception { // \u6ce8\u518c JDBC \u9a71\u52a8 Class . forName ( JDBC_DRIVER ); // \u6253\u5f00\u94fe\u63a5 Connection conn = DriverManager . getConnection ( DB_URL , USER , PASSWORD ); // \u5173\u95ed\u94fe\u63a5 conn . close (); } } \u53c2\u8003\uff1a https://www.runoob.com/java/java-mysql-connect.html \u7b2c37 \u7ae0 \uff1a Statement\u6570\u636e\u5e93\u64cd\u4f5c\u63a5\u53e3 158 Statement\u63a5\u53e3\u7b80\u4ecb Statement \u6570\u636e\u64cd\u4f5c \u95e8\u9762\u8bbe\u8ba1\u6a21\u5f0f Connection - \u521b\u5efa -> Statement - \u64cd\u4f5c -> SQl\u6570\u636e\u5e93 \u5e38\u7528\u64cd\u4f5c // \u6570\u636e\u66f4\u65b0 insert update delete \u8fd4\u56de\u5f71\u54cd\u884c\u6570 int executeUpdate ( String sql ) // \u6570\u636e\u67e5\u8be2 select \u8fd4\u56de\u67e5\u8be2\u7ed3\u679c ResultSet executeQuery ( String sql ) 159 Statement\u5b9e\u73b0\u6570\u636e\u66f4\u65b0 \u65b0\u5efa\u5b66\u751f\u8868 create table student ( id int not null PRIMARY key auto_increment , name varchar ( 20 ), age int ) import java.sql.Connection ; import java.sql.DriverManager ; import java.sql.Statement ; class Demo { // MySQL >= 8.0 private static final String JDBC_DRIVER = \"com.mysql.cj.jdbc.Driver\" ; private static final String DB_URL = \"jdbc:mysql://localhost:3306/data?useSSL=false&serverTimezone=UTC\" ; private static final String USER = \"root\" ; private static final String PASSWORD = \"123456\" ; public static void main ( String [] args ) throws Exception { // \u6ce8\u518c JDBC \u9a71\u52a8 Class . forName ( JDBC_DRIVER ); // \u6253\u5f00\u94fe\u63a5 Connection conn = DriverManager . getConnection ( DB_URL , USER , PASSWORD ); // \u6267\u884cSQL\u8bed\u53e5 Statement statement = conn . createStatement (); String sql = \"insert into student(name, age) values('Tom', 23)\" ; int count = statement . executeUpdate ( sql ); System . out . println ( \"insert count: \" + count ); // insert count: 1 // \u5173\u95ed\u94fe\u63a5 conn . close (); } } 160 Statement\u5b9e\u73b0\u6570\u636e\u67e5\u8be2 \u907f\u514d SELECT * \u67e5\u8be2\uff0c\u8ddf\u4e0a\u5177\u4f53\u8981\u8fd4\u56de\u7684\u5b57\u6bb5\u540d\u79f0 select\u67e5\u8be2\u7ed3\u679c\u8fc7\u5927\u4e5f\u4f1a\u5bf9\u7a0b\u5e8f\u9020\u6210\u5f71\u54cd\uff0c\u6ce8\u610f\u52a0limit\u9650\u5236 // \u67e5\u8be2\u6570\u636e String sql = \"select name, age from student\" ; ResultSet result = statement . executeQuery ( sql ); while ( result . next ()){ String name = result . getString ( \"name\" ); int age = result . getInt ( \"age\" ); System . out . println ( String . format ( \"%s %s\" , name , age )); // Tom 23 } \u7b2c38 \u7ae0 \uff1a PreparedStatement\u6570\u636e\u5e93\u64cd\u4f5c 161 Statement\u95ee\u9898\u5206\u6790 Statement\u95ee\u9898\uff1a 1\u3001\u4e0d\u80fd\u5f88\u597d\u63cf\u8ff0\u65e5\u671f\u5f62\u5f0f 2\u3001SQL\u62fc\u51d1\uff0c\u9020\u6210\u7f16\u5199\u4e0e\u7ef4\u62a4\u56f0\u96be 3\u3001\u5bf9\u654f\u611f\u5b57\u7b26\u6570\u636e\u4e0d\u80fd\u5408\u7406\u62fc\u51d1 162 PreparedStatement\u63a5\u53e3\u7b80\u4ecb \u6570\u636e\u548cSQL\u8bed\u53e5\u5206\u79bb\uff0c \u95ee\u53f7? \u4f5c\u4e3a\u5360\u4f4d\u7b26 \u5e38\u7528\u64cd\u4f5c // \u6570\u636e\u66f4\u65b0 int executeUpdate () // \u6570\u636e\u67e5\u8be2 ResultSet executeQuery () \u66f4\u65b0\u6570\u636e String sql = \"update student set age = ? where id = ? \" ; PreparedStatement statement = conn . prepareStatement ( sql ); statement . setInt ( 1 , 16 ); statement . setInt ( 2 , 1 ); int count = statement . executeUpdate (); System . out . println ( \"update count: \" + count ); // 1 163 \u4f7f\u7528PreparedStatement\u5b9e\u73b0\u6570\u636e\u67e5\u8be2\u64cd\u4f5c -- \u67e5\u8be2\u5168\u90e8\u6570\u636e select name , age from student -- \u6839\u636eid\u67e5\u8be2\u6570\u636e select name , age from student where id = ? -- \u5206\u9875\u67e5\u8be2 select name , age from student limit ? -- \u7edf\u8ba1\u67e5\u8be2 select count ( * ) from student","title":"\u7b2c36 \u7ae0 \uff1a Java\u6570\u636e\u5e93\u7f16\u7a0b\u57fa\u7840\u64cd\u4f5c"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6570\u636e\u5e93\u7f16\u7a0b/#36-java","text":"","title":"\u7b2c36 \u7ae0 \uff1a Java\u6570\u636e\u5e93\u7f16\u7a0b\u57fa\u7840\u64cd\u4f5c"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6570\u636e\u5e93\u7f16\u7a0b/#156-jdbc","text":"JDBC \u5c5e\u4e8e\u4e00\u79cd\u670d\u52a1\uff0c\u6240\u6709\u670d\u52a1\u90fd\u5fc5\u987b\u6309\u7167\u6307\u5b9a\u7684\u6d41\u7a0b\u8fdb\u884c\u64cd\u4f5c Java Database Connectivity \u5f00\u53d1\u5305 java.sql \u6838\u5fc3\u7ec4\u6210 DriverManager \u63a5\u53e3 Connection\u3001Statement\u3001PreparedStatement\u3001ResultSet \u56db\u79cd\u8fde\u63a5\u65b9\u5f0f\uff1a JDBC-ODBC \u6865\u8fde\u63a5 JDK\u652f\u6301\uff0c\u6027\u80fd\u8f83\u5dee JDBC \u4e00\u822c\u53ea\u8fde\u63a5\u672c\u5730\u670d\u52a1 JDBC\u7f51\u7edc\u8fde\u63a5 \u8fde\u63a5\u7f51\u7edc\u6570\u636e\u5e93 JDBC\u534f\u8bae\u8fde\u63a5","title":"156 JDBC\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6570\u636e\u5e93\u7f16\u7a0b/#157-mysql","text":"\u9700\u8981\u914d\u7f6e\u9a71\u52a8\u7a0b\u5e8f\u8def\u5f84 \u901a\u8fc7\u53cd\u5c04\u673a\u5236\u52a0\u8f7d\u6570\u636e\u5e93\u9a71\u52a8\u7a0b\u5e8f\u7c7b \u6574\u4e2aJDBC\u8bbe\u8ba1\u5b9e\u73b0\u7684\u5c31\u662f\u4e00\u4e2a\u5de5\u5382\u7c7b pom.xml <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.18 </version> </dependency> import java.sql.Connection ; import java.sql.DriverManager ; class Demo { // MySQL < 8.0 // static final String JDBC_DRIVER = \"com.mysql.jdbc.Driver\"; // static final String DB_URL = \"jdbc:mysql://localhost:3306/data\"; // MySQL >= 8.0 private static final String JDBC_DRIVER = \"com.mysql.cj.jdbc.Driver\" ; private static final String DB_URL = \"jdbc:mysql://localhost:3306/data?useSSL=false&serverTimezone=UTC\" ; private static final String USER = \"root\" ; private static final String PASSWORD = \"123456\" ; public static void main ( String [] args ) throws Exception { // \u6ce8\u518c JDBC \u9a71\u52a8 Class . forName ( JDBC_DRIVER ); // \u6253\u5f00\u94fe\u63a5 Connection conn = DriverManager . getConnection ( DB_URL , USER , PASSWORD ); // \u5173\u95ed\u94fe\u63a5 conn . close (); } } \u53c2\u8003\uff1a https://www.runoob.com/java/java-mysql-connect.html","title":"157 \u8fde\u63a5MySQL\u6570\u636e\u5e93"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6570\u636e\u5e93\u7f16\u7a0b/#37-statement","text":"","title":"\u7b2c37 \u7ae0 \uff1a Statement\u6570\u636e\u5e93\u64cd\u4f5c\u63a5\u53e3"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6570\u636e\u5e93\u7f16\u7a0b/#158-statement","text":"Statement \u6570\u636e\u64cd\u4f5c \u95e8\u9762\u8bbe\u8ba1\u6a21\u5f0f Connection - \u521b\u5efa -> Statement - \u64cd\u4f5c -> SQl\u6570\u636e\u5e93 \u5e38\u7528\u64cd\u4f5c // \u6570\u636e\u66f4\u65b0 insert update delete \u8fd4\u56de\u5f71\u54cd\u884c\u6570 int executeUpdate ( String sql ) // \u6570\u636e\u67e5\u8be2 select \u8fd4\u56de\u67e5\u8be2\u7ed3\u679c ResultSet executeQuery ( String sql )","title":"158 Statement\u63a5\u53e3\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6570\u636e\u5e93\u7f16\u7a0b/#159-statement","text":"\u65b0\u5efa\u5b66\u751f\u8868 create table student ( id int not null PRIMARY key auto_increment , name varchar ( 20 ), age int ) import java.sql.Connection ; import java.sql.DriverManager ; import java.sql.Statement ; class Demo { // MySQL >= 8.0 private static final String JDBC_DRIVER = \"com.mysql.cj.jdbc.Driver\" ; private static final String DB_URL = \"jdbc:mysql://localhost:3306/data?useSSL=false&serverTimezone=UTC\" ; private static final String USER = \"root\" ; private static final String PASSWORD = \"123456\" ; public static void main ( String [] args ) throws Exception { // \u6ce8\u518c JDBC \u9a71\u52a8 Class . forName ( JDBC_DRIVER ); // \u6253\u5f00\u94fe\u63a5 Connection conn = DriverManager . getConnection ( DB_URL , USER , PASSWORD ); // \u6267\u884cSQL\u8bed\u53e5 Statement statement = conn . createStatement (); String sql = \"insert into student(name, age) values('Tom', 23)\" ; int count = statement . executeUpdate ( sql ); System . out . println ( \"insert count: \" + count ); // insert count: 1 // \u5173\u95ed\u94fe\u63a5 conn . close (); } }","title":"159 Statement\u5b9e\u73b0\u6570\u636e\u66f4\u65b0"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6570\u636e\u5e93\u7f16\u7a0b/#160-statement","text":"\u907f\u514d SELECT * \u67e5\u8be2\uff0c\u8ddf\u4e0a\u5177\u4f53\u8981\u8fd4\u56de\u7684\u5b57\u6bb5\u540d\u79f0 select\u67e5\u8be2\u7ed3\u679c\u8fc7\u5927\u4e5f\u4f1a\u5bf9\u7a0b\u5e8f\u9020\u6210\u5f71\u54cd\uff0c\u6ce8\u610f\u52a0limit\u9650\u5236 // \u67e5\u8be2\u6570\u636e String sql = \"select name, age from student\" ; ResultSet result = statement . executeQuery ( sql ); while ( result . next ()){ String name = result . getString ( \"name\" ); int age = result . getInt ( \"age\" ); System . out . println ( String . format ( \"%s %s\" , name , age )); // Tom 23 }","title":"160 Statement\u5b9e\u73b0\u6570\u636e\u67e5\u8be2"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6570\u636e\u5e93\u7f16\u7a0b/#38-preparedstatement","text":"","title":"\u7b2c38 \u7ae0 \uff1a PreparedStatement\u6570\u636e\u5e93\u64cd\u4f5c"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6570\u636e\u5e93\u7f16\u7a0b/#161-statement","text":"Statement\u95ee\u9898\uff1a 1\u3001\u4e0d\u80fd\u5f88\u597d\u63cf\u8ff0\u65e5\u671f\u5f62\u5f0f 2\u3001SQL\u62fc\u51d1\uff0c\u9020\u6210\u7f16\u5199\u4e0e\u7ef4\u62a4\u56f0\u96be 3\u3001\u5bf9\u654f\u611f\u5b57\u7b26\u6570\u636e\u4e0d\u80fd\u5408\u7406\u62fc\u51d1","title":"161 Statement\u95ee\u9898\u5206\u6790"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6570\u636e\u5e93\u7f16\u7a0b/#162-preparedstatement","text":"\u6570\u636e\u548cSQL\u8bed\u53e5\u5206\u79bb\uff0c \u95ee\u53f7? \u4f5c\u4e3a\u5360\u4f4d\u7b26 \u5e38\u7528\u64cd\u4f5c // \u6570\u636e\u66f4\u65b0 int executeUpdate () // \u6570\u636e\u67e5\u8be2 ResultSet executeQuery () \u66f4\u65b0\u6570\u636e String sql = \"update student set age = ? where id = ? \" ; PreparedStatement statement = conn . prepareStatement ( sql ); statement . setInt ( 1 , 16 ); statement . setInt ( 2 , 1 ); int count = statement . executeUpdate (); System . out . println ( \"update count: \" + count ); // 1","title":"162 PreparedStatement\u63a5\u53e3\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6570\u636e\u5e93\u7f16\u7a0b/#163-preparedstatement","text":"-- \u67e5\u8be2\u5168\u90e8\u6570\u636e select name , age from student -- \u6839\u636eid\u67e5\u8be2\u6570\u636e select name , age from student where id = ? -- \u5206\u9875\u67e5\u8be2 select name , age from student limit ? -- \u7edf\u8ba1\u67e5\u8be2 select count ( * ) from student","title":"163 \u4f7f\u7528PreparedStatement\u5b9e\u73b0\u6570\u636e\u67e5\u8be2\u64cd\u4f5c"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/","text":"\u7b2c15 \u7ae0 \uff1a \u6587\u4ef6\u64cd\u4f5c 67 File\u7c7b\u57fa\u672c\u64cd\u4f5c \u6587\u4ef6\u64cd\u4f5c\u7cfb\u7edf\u64cd\u4f5c\u7c7b\uff1a java.io.File \u6587\u4ef6\u521b\u5efa\uff0c\u5220\u9664\uff0c\u91cd\u547d\u540d File\u7c7b\u57fa\u672c\u4f7f\u7528 File \u5b9e\u73b0\u4e86Comparable\u63a5\u53e3 // \u6784\u9020\u65b9\u6cd5 public File ( String pathname ) public File ( String parent , String child ) // \u521b\u5efa\u6587\u4ef6 public boolean createNewFile () throws IOException // \u6587\u4ef6\u5b58\u5728 public boolean exists () // \u5220\u9664\u6587\u4ef6 public boolean delete () \u793a\u4f8b\uff1a import java.io.File ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws IOException { File file = new File ( \"./demo.txt\" ); if ( file . exists ()){ boolean ret = file . delete (); System . out . println ( \"\u5220\u9664\u7ed3\u679c\uff1a\" + ret ); } else { boolean ret = file . createNewFile (); System . out . println ( \"\u521b\u5efa\u7ed3\u679c\uff1a\" + ret ); } } } 68 File\u7c7b\u64cd\u4f5c\u6df1\u5165 1\u3001\u8def\u5f84\u5206\u9694\u7b26 Windows\u5206\u9694\u7b26 \"\\\" Linux\u5206\u9694\u7b26 \"/\" \u8def\u5f84\u5206\u9694\u7b26\u5e38\u91cf File.separator 2\u3001\u6587\u4ef6\u64cd\u4f5c\u6d41\u7a0b \u7a0b\u5e8f -> JVM -> \u64cd\u4f5c\u7cfb\u7edf\u51fd\u6570 -> \u6587\u4ef6\u5904\u7406 \u91cd\u590d\u5220\u9664\u6216\u521b\u5efa\u7684\u65f6\u5019\u4f1a\u6709\u5ef6\u65f6\u60c5\u51b5\uff0c \u5efa\u8bae\uff1a\u6587\u4ef6\u540d\u4e0d\u8981\u91cd\u540d 3\u3001\u521b\u5efa\u6587\u4ef6\u7684\u65f6\u5019\u7236\u7ea7\u76ee\u5f55\u5fc5\u987b\u5b58\u5728 // \u83b7\u53d6\u7236\u8def\u5f84 public File getParentFile () // \u521b\u5efa\u76ee\u5f55 public boolean mkdirs () \u793a\u4f8b import java.io.File ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws IOException { File file = new File ( \"./dir/demo/demo.txt\" ); File parentFile = file . getParentFile (); if (! parentFile . exists ()) { parentFile . mkdirs (); } file . createNewFile (); } } 69 \u83b7\u53d6\u6587\u4ef6\u4fe1\u606f \u6d89\u53ca\u6587\u4ef6\u672c\u8eab\u64cd\u4f5c\uff0c\u4e0d\u6d89\u53ca\u6587\u4ef6\u5185\u5bb9\u5904\u7406 // \u662f\u5426\u53ef\u8bfb public boolean canRead () // \u662f\u5426\u53ef\u5199 public boolean canWrite () // \u662f\u5426\u53ef\u6267\u884c public boolean canExecute () // \u662f\u5426\u4e3a\u6587\u4ef6 public boolean isFile () // \u662f\u5426\u4e3a\u76ee\u5f55 public boolean isDirectory () // \u83b7\u53d6\u6587\u4ef6\u957f\u5ea6 \u5b57\u8282 public long length () // \u6700\u540e\u4fee\u6539\u65f6\u95f4 13\u4f4d\u65f6\u95f4\u6233 public long lastModified () // \u5217\u51fa\u76ee\u5f55\u5185\u5bb9 public File [] listFiles () \u793a\u4f8b import java.io.File ; class Demo { public static void main ( String [] args ) { File file = new File ( \"./dir/demo\" ); System . out . println ( file . canRead ()); // true System . out . println ( file . canWrite ()); // true System . out . println ( file . canExecute ()); // false System . out . println ( file . isFile ()); // true System . out . println ( file . isDirectory ()); // false System . out . println ( file . length ()); // 135 \u5b57\u8282 System . out . println ( file . lastModified ()); // 1574952161000 File [] list = file . listFiles (); for ( File f : list ) { System . out . println ( f ); } // ./dir/demo/demo.txt } } 70 \u7efc\u5408\u6848\u4f8b\uff1a\u5217\u51fa\u76ee\u5f55\u7ed3\u6784 import java.io.File ; class Demo { public static void main ( String [] args ) { File file = new File ( \"./dir\" ); listDir ( file ); } public static void listDir ( File file ){ if ( file . isDirectory ()){ File [] files = file . listFiles (); if ( files != null ){ for ( File f : files ){ listDir ( f ); } } } else { System . out . println ( file ); } } } 71 \u7efc\u5408\u6848\u4f8b\uff1a\u6587\u4ef6\u6279\u91cf\u66f4\u540d import java.io.File ; class Demo { public static void main ( String [] args ) { long start = System . currentTimeMillis (); File file = new File ( \"./dir\" ); renameDir ( file ); long end = System . currentTimeMillis (); System . out . println ( \"\u82b1\u8d39\u65f6\u95f4\uff1a\" + ( end - start )); } public static void renameDir ( File file ){ if ( file . isDirectory ()){ File [] files = file . listFiles (); if ( files != null ){ for ( File f : files ){ renameDir ( f ); } } } else { if ( file . getName (). contains ( \".\" )){ int endPos = file . getName (). lastIndexOf ( \".\" ); String name = file . getName (). substring ( 0 , endPos ); File newFile = new File ( file . getParent (), name + \".txt\" ); System . out . println ( file . getName ()); System . out . println ( newFile ); file . renameTo ( newFile ); } } } } \u7b2c16\u7ae0 \u5b57\u8282\u6d41\u4e0e\u5b57\u7b26\u6d41 72 \u6d41\u7684\u57fa\u672c\u6982\u5ff5 File\u7c7b\u662f\u552f\u4e00\u4e00\u4e2a\u4e0e\u6587\u4ef6\u672c\u8eab\u6709\u5173\u7684\u7a0b\u5e8f\u5904\u7406\u7c7b File\u7c7b\u53ea\u80fd\u591f\u64cd\u4f5c\u6587\u4ef6\u672c\u8eab\uff0c\u800c\u4e0d\u80fd\u64cd\u4f5c\u6587\u4ef6\u5185\u5bb9 IO\u64cd\u4f5c\uff1a\u8f93\u5165\u8f93\u51fa\u64cd\u4f5c java.io \u62bd\u8c61\u7c7b \u8f93\u51fa \u8f93\u5165 \u5b57\u8282\u6d41\uff1a OutputStream , InputStream \u5b57\u7b26\u6d41\uff1a Writer , Reader \u6587\u4ef6\u5904\u7406\u6d41\u7a0b\uff1a 1\u3001File\u627e\u5230\u4e00\u4e2a\u6587\u4ef6 2\u3001\u901a\u8fc7\u5b57\u8282\u6d41\u6216\u5b57\u7b26\u6d41\u7684\u5b50\u7c7b\u4e3a\u7236\u7c7b\u5bf9\u8c61\u5b9e\u4f8b\u5316 3\u3001\u5229\u7528\u5b57\u8282\u6d41\u6216\u5b57\u7b26\u6d41\u4e2d\u7684\u65b9\u6cd5\u5b9e\u73b0\u6570\u636e\u51fa\u5165\u4e0e\u8f93\u51fa\u64cd\u4f5c 4\u3001\u6d41\u7684\u64cd\u4f5c\u5c5e\u4e8e\u8d44\u6e90\u64cd\u4f5c\uff0c\u8d44\u6e90\u64cd\u4f5c\u5fc5\u987b\u8fdb\u884c\u5173\u95ed 73 OutputStream\u5b57\u8282\u8f93\u51fa\u6d41 \u5b9e\u73b0\u4ee3\u7801 public interface AutoCloseable { void close () throws Exception ; } public interface Closeable extends AutoCloseable { public void close () throws IOException ; } public interface Flushable { void flush () throws IOException ; } public abstract class OutputStream implements Closeable , Flushable { public abstract void write ( int b ) throws IOException ; public void write ( byte b []) throws IOException ; public void write ( byte b [], int off , int len ) throws IOException ; } // \u5b50\u7c7b public class FileOutputStream extends OutputStream { // \u8986\u76d6 public FileOutputStream ( File file ) throws FileNotFoundException // \u8ffd\u52a0 public FileOutputStream ( File file , boolean append ) throws FileNotFoundException ; } \u5185\u5bb9\u8f93\u51fa\u5230\u6587\u4ef6 import java.io.File ; import java.io.FileOutputStream ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws IOException { File file = new File ( \"demo/demo.txt\" ); // \u7236\u7ea7\u76ee\u5f55\u4e0d\u5b58\u5728\u5219\u521b\u5efa if (! file . getParentFile (). exists ()){ file . getParentFile (). mkdir (); } String message = \"\u8fd9\u662f\u8f93\u51fa\u7684\u5185\u5bb9\" ; // \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5b57\u8282\u6570\u7ec4\u8f93\u51fa\u5230\u6587\u4ef6\uff0c\u5e76\u5173\u95ed\u6587\u4ef6 FileOutputStream output = new FileOutputStream ( file ); output . write ( message . getBytes ()); output . close (); } } \u81ea\u52a8\u5173\u95ed\u7684\u5199\u6cd5 try ( FileOutputStream output = new FileOutputStream ( file )){ output . write ( message . getBytes ()); } catch ( IOException e ){ e . printStackTrace (); } \u4f7f\u7528\u8ffd\u52a0\u6362\u884c\u8f93\u51fa String message = \"\u8fd9\u662f\u8f93\u51fa\u7684\u5185\u5bb9\\r\\n\" ; FileOutputStream output = new FileOutputStream ( file , true ); output . write ( message . getBytes ()); output . close (); 74 InputStream\u5b57\u8282\u8f93\u5165\u6d41 public abstract class InputStream implements Closeable { // \u8bfb\u53d6\u5355\u4e2a\u5b57\u8282\u6570\u636e\uff0c\u8bfb\u5230\u6587\u4ef6\u5e95\u90e8\u8fd4\u56de-1 public abstract int read () throws IOException ; // \u8bfb\u53d6\u4e00\u7ec4\u5b57\u8282\u6570\u636e\uff0c\u8fd4\u56de\u8bfb\u53d6\u7684\u4e2a\u6570\uff0c\u6587\u4ef6\u5e95\u90e8\u8fd4\u56de-1 public int read ( byte b []) throws IOException ; public int read ( byte b [], int off , int len ) throws IOException ; } \u6587\u4ef6\u5c3e\u90e8\u8fd4\u56de -1\uff0c \u8868\u793a\u6587\u4ef6\u8bfb\u53d6\u5b8c\u6210 \u5b50\u7c7b public class FileInputStream extends InputStream { public FileInputStream ( String name ) throws FileNotFoundException public FileInputStream ( File file ) throws FileNotFoundException } \u8bfb\u53d6\u793a\u4f8b import java.io.File ; import java.io.FileInputStream ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws IOException { File file = new File ( \"demo/demo.txt\" ); FileInputStream input = new FileInputStream ( file ); // \u5f00\u8f9f\u7f13\u51b2\u533a\u8bfb\u53d6\u6570\u636e byte [] data = new byte [ 1024 ]; int len = input . read ( data ); System . out . println ( \"[\" + new String ( data , 0 , len ) + \"]\" ); input . close (); } } 75 Writer\u5b57\u7b26\u8f93\u51fa\u6d41 Writer\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\u5b57\u7b26\u4e32 public abstract class Writer implements Appendable , Closeable , Flushable { public void write ( char cbuf []) throws IOException ; public void write ( String str ) throws IOException ; } public class OutputStreamWriter extends Writer public class FileWriter extends OutputStreamWriter { public FileWriter ( String fileName , boolean append ); public FileWriter ( String fileName ) public FileWriter ( File file ) public FileWriter ( File file , boolean append ) } \u4ee3\u7801\u5b9e\u4f8b import java.io.File ; import java.io.FileWriter ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws IOException { File file = new File ( \"demo/demo.txt\" ); FileWriter writer = new FileWriter ( file ); writer . write ( \"hello java\" ); writer . append ( \"\u4f60\u597d\uff01java!\" ); writer . close (); } } 76 Reader\u5b57\u7b26\u8f93\u5165\u6d41 \u7ee7\u627f\u5173\u7cfb public abstract class Reader implements Readable , Closeable public class InputStreamReader extends Reader public class FileReader extends InputStreamReader { public FileReader ( File file ); public FileReader ( String fileName ); } \u8bfb\u53d6\u793a\u4f8b import java.io.File ; import java.io.FileReader ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws IOException { File file = new File ( \"demo/demo.txt\" ); FileReader reader = new FileReader ( file ); char [] data = new char [ 1024 ]; int len = reader . read ( data ); System . out . println ( new String ( data , 0 , len )); reader . close (); } } \u5b57\u7b26\u6d41\u8bfb\u53d6\u53ea\u80fd\u6309\u7167\u6570\u7ec4\u6570\u636e\u8bfb\u53d6 77 \u5b57\u8282\u6d41\u4e0e\u5b57\u7b26\u6d41\u7684\u533a\u522b \u4e0d\u4f7f\u7528close\u5173\u95ed \u4f7f\u7528\u5b57\u8282\u6d41\u8f93\u51fa OutputStream \u6b63\u5e38\u8f93\u51fa \u4f7f\u7528\u5b57\u7b26\u6d41\u8f93\u51fa Writer \u65e0\u6cd5\u8f93\u51fa\uff0c\u4f7f\u7528\u4e86\u7f13\u51b2\u533a close\u4f1a\u5f3a\u5236\u5237\u65b0\u7f13\u51b2\u533a\uff08flush\uff09 \u5b57\u8282\u6d41\u4e0d\u4f7f\u7528\u7f13\u51b2\u533a\uff0c\u5b57\u7b26\u6d41\u4f7f\u7528\u7f13\u51b2\u533a 78 \u8f6c\u6362\u6d41 \u5b57\u8282\u6d41\u4e0e\u5b57\u7b26\u6d41\u64cd\u4f5c\u7684\u529f\u80fd\u8f6c\u6362 import java.io.* ; class Demo { public static void main ( String [] args ) throws IOException { File file = new File ( \"demo/demo.txt\" ); // \u5b57\u8282\u6d41\u8f6c\u5b57\u7b26\u6d41\u64cd\u4f5c OutputStream out = new FileOutputStream ( file ); Writer wirter = new OutputStreamWriter ( out ); wirter . write ( \"\u4f60\u597d\" ); wirter . close (); } } \u7ee7\u627f\u5173\u7cfb OutputStream ( Closeable , Flushable ) - FileOutputStream InputStream ( Closeable ) - FileInputStream Writer ( Appendable , Closeable , Flushable ) - OutputStreamWriter - FileWriter Reader ( Readable , Closeable ) - InputStreamReader - FileReader \u7f13\u5b58\uff0c\u7a0b\u5e8f\u4e2d\u95f4\u7f13\u51b2\u533a \u5b57\u8282\u6570\u636e\uff1a101010101... 79 \u7efc\u5408\u5b9e\u6218\uff1a\u6587\u4ef6\u62f7\u8d1d \u5b9e\u73b0\u6587\u4ef6\u62f7\u8d1d\u64cd\u4f5c \u4f7f\u7528\u5b57\u8282\u6d41 \u65b9\u6848\u4e00\uff1a \u5168\u90e8\u8bfb\u53d6\uff0c\u4e00\u6b21\u6027\u8f93\u51fa \u65b9\u6cd5\u4e8c\uff1a \u6bcf\u6b21\u8bfb\u53d6\u4e00\u90e8\u5206\uff0c\u8f93\u51fa\u4e00\u90e8\u5206 import java.io.* ; class FileUtil { public static void copyFile ( String src , String target ) throws IOException { InputStream input = new FileInputStream ( src ); OutputStream output = new FileOutputStream ( target ); byte [] data = new byte [ 1024 ]; int len = 0 ; while (( len = input . read ( data )) != - 1 ) { output . write ( data , 0 , len ); } input . close (); output . close (); } public static void copyDir ( String src , String target ) throws IOException { File srcFile = new File ( src ); File targetFile = new File ( target ); if (! targetFile . exists ()) { targetFile . mkdirs (); } File [] results = srcFile . listFiles (); if ( results != null ) { for ( File file : results ) { String fileName = targetFile + File . separator + file . getName (); if ( file . isDirectory ()) { copyDir ( file . getPath (), fileName ); } else { copyFile ( file . getPath (), fileName ); } } } } } class Demo { public static void main ( String [] args ) throws IOException { FileUtil . copyDir ( \"demo\" , \"demo2\" ); System . out . println ( \"\u62f7\u8d1d\u5b8c\u6210\" ); } } \u5982\u679c\u62f7\u8d1d\u76ee\u5f55\u5219\u4f7f\u7528\u9012\u5f52\u62f7\u8d1d \u7b2c17 \u7ae0 \uff1a IO\u64cd\u4f5c\u6df1\u5165 80 \u5b57\u7b26\u7f16\u7801 \u5e38\u7528\u7684\u7f16\u7801 1\u3001GBK/GB2312 \u56fd\u6807\u7f16\u7801\uff0c GB2312\u7b80\u4f53\u4e2d\u6587\uff0cGBK\u5305\u542b\u7b80\u4f53\u548c\u7e41\u4f53 2\u3001ISO8859-1 \u56fd\u9645\u901a\u7528\u7f16\u7801\uff0c\u63cf\u8ff0\u6240\u6709\u5b57\u6bcd 3\u3001UNICODE 16\u8fdb\u5236\u5b58\u50a8\uff0c\u63cf\u8ff0\u6240\u6709\u95ee\u9898 4\u3001UTF \u8c61\u5f62\u6587\u5b57\u90e8\u5206\u4f7f\u752816\u8fdb\u5236\uff0c\u666e\u901a\u5b57\u6bcd\u91c7\u7528ISO8859-1\uff0c\u4e3b\u8981\u4f7f\u7528UTF-8 \u5217\u51fa\u672c\u673a\u5c5e\u6027 System . getProperties (). list ( System . out ); \u9879\u76ee\u4e2d\u51fa\u73b0\u4e71\u7801\u95ee\u9898\u5c31\u662f\u7f16\u7801\u548c\u89e3\u7801\u6807\u51c6\u4e0d\u7edf\u4e00 81 \u5185\u5b58\u64cd\u4f5c\u6d41 \u6587\u4ef6\u64cd\u4f5c\u6d41 \u4ee5\u6587\u4ef6\u4e3a\u64cd\u4f5c\u7ec8\u7aef\uff0cInputStream\u3001OutputStream \u5185\u5b58\u64cd\u4f5c\u6d41 1\u3001\u5b57\u8282\u5185\u5b58\u64cd\u4f5c\u6d41 ByteArrayOutputStream ByteArrayInputStream 2\u3001\u5b57\u7b26\u5185\u5b58\u64cd\u4f5c\u6d41 CharArrayWriter CharArrayReader \u7ee7\u627f\u5173\u7cfb OutputStream - FileOutputStream - ByteArrayOutputStream InputStream - FileInputStream - ByteArrayInputStream Writer - OutputStreamWriter - FileWriter - CharArrayWriter Reader - InputStreamReader - FileReader - CharArrayReader \u793a\u4f8b\uff1a\u5229\u7528\u5185\u5b58\u6d41\u5c0f\u5199\u8f6c\u5927\u5199\u64cd\u4f5c import java.io.* ; class Demo { public static void main ( String [] args ) throws IOException { String message = \"hello java\" ; // \u5c06\u6570\u636e\u4fdd\u5b58\u5230\u5185\u5b58\u6d41\u4e2d InputStream input = new ByteArrayInputStream ( message . getBytes ()); OutputStream output = new ByteArrayOutputStream (); int data = 0 ; // \u6bcf\u6b21\u8bfb\u53d6\u4e00\u4e2a\u6570\u636e while (( data = input . read ())!=- 1 ){ output . write ( Character . toUpperCase ( data )); } System . out . println ( output ); // HELLO JAVA output . close (); input . close (); } } 82 \u7ba1\u9053\u6d41 \u53d1\u9001\u4fe1\u606f <- \u7ba1\u9053 -> \u63a5\u6536\u4fe1\u606f \u5b57\u8282\u7ba1\u9053\u6d41 PipedInputStream, PipedOutputStream \u5b57\u7b26\u7ba1\u9053\u6d41 PipedReader, PipedWriter \u7ee7\u627f\u5173\u7cfb InputStream - PipedInputStream OutputStream - PipedOutputStream Reader - PipedReader Writer - PipedWriter \u7ba1\u9053\u53d1\u9001\u63a5\u6536\u6570\u636e import java.io.* ; class Sender implements Runnable { private PipedOutputStream output ; public Sender () { this . output = new PipedOutputStream (); } @Override public void run () { try { this . output . write ( \"\u4f60\u597d\" . getBytes ()); } catch ( IOException e ) { e . printStackTrace (); } try { this . output . close (); } catch ( IOException e ) { e . printStackTrace (); } } public PipedOutputStream getOutput () { return this . output ; } } class Receiver implements Runnable { private PipedInputStream input ; public Receiver () { this . input = new PipedInputStream (); } @Override public void run () { try { byte [] data = new byte [ 1024 ]; int len = this . input . read ( data ); System . out . println ( new String ( data , 0 , len )); // \u4f60\u597d } catch ( IOException e ) { e . printStackTrace (); } try { this . input . close (); } catch ( IOException e ) { e . printStackTrace (); } } public PipedInputStream getInput () { return this . input ; } } class Demo { public static void main ( String [] args ) throws IOException { Sender sender = new Sender (); Receiver receiver = new Receiver (); // \u7ba1\u9053\u8fde\u63a5 sender . getOutput (). connect ( receiver . getInput ()); new Thread ( sender ). start (); new Thread ( receiver ). start (); } } 83 RandomAccessFile \u968f\u673a\u8bfb\u53d6\u7c7b\uff0c\u53ef\u4ee5\u79fb\u52a8\u6587\u4ef6\u6307\u9488 public RandomAccessFile ( String name , String mode ) import java.io.* ; class Demo { public static void main ( String [] args ) throws IOException { // \u5199\u5165 RandomAccessFile writer = new RandomAccessFile ( \"demo.txt\" , \"rw\" ); writer . write ( \"\u4f60\u597d\u4e16\u754c\" . getBytes ()); writer . close (); // \u8bfb\u53d6 RandomAccessFile reader = new RandomAccessFile ( \"demo.txt\" , \"rw\" ); String line ; while (( line = reader . readLine ()) != null ) { System . out . println ( line ); } writer . close (); } } \u7b2c18 \u7ae0 \uff1a \u8f93\u5165\u4e0e\u8f93\u51fa\u652f\u6301 84 \u6253\u5370\u6d41 \u8bbe\u8ba1\u601d\u60f3\uff1a\u88c5\u9970\u8bbe\u8ba1\u6a21\u5f0f \u4e3aOutputStream \u7c7b\u5b9e\u73b0\u4e00\u5c42\u5305\u88c5 PrintStream PrintWriter \u7ee7\u627f\u5173\u7cfb OutputStream - FilterOutputStream - PrintStream Writer - PrintWriter import java.io.* ; class Demo { public static void main ( String [] args ) throws IOException { PrintWriter writer = new PrintWriter ( new FileWriter ( \"demo.txt\" )); // \u6362\u884c\u8f93\u51fa writer . println ( \"\u4f60\u597d\" ); // \u683c\u5f0f\u5316\u8f93\u51fa writer . printf ( \"\u59d3\u540d %s, \u5e74\u9f84: %s\" , \"\u5c0f\u5f3a\" , 23 ); writer . close (); } } \u53ea\u8981\u662f\u6587\u4ef6\u5185\u5bb9\u8f93\u51fa\u65f6\u90fd\u4f7f\u7528\u6253\u5370\u6d41 85 System\u7c7b\u5bf9IO\u7684\u652f\u6301 System\u662f\u7cfb\u7edf\u7c7b 1\u3001\u6807\u51c6\u8f93\u51fa\uff08\u663e\u793a\u5668\uff09 2\u3001\u9519\u8bef\u8f93\u51fa 3\u3001\u6807\u51c6\u8f93\u5165\uff08\u952e\u76d8\uff09 public final class System { public final static InputStream in = null ; public final static PrintStream out = null ; // \u9ed1\u8272\u5b57\u4f53 public final static PrintStream err = null ; // \u7ea2\u8272\u5b57\u4f53 } \u4fee\u6539\u8f93\u51fa\u4f4d\u7f6e import java.io.File ; import java.io.FileOutputStream ; import java.io.IOException ; import java.io.PrintStream ; class Demo { public static void main ( String [] args ) throws IOException { System . setErr ( new PrintStream ( new FileOutputStream ( new File ( \"demo.txt\" )))); System . err . println ( \"\u4f60\u597d\" ); } } \u63a5\u6536\u952e\u76d8\u8f93\u5165\uff08\u4e00\u822c\u4e0d\u7528\u6b64\u65b9\u6cd5\uff09 import java.io.IOException ; import java.io.InputStream ; class Demo { public static void main ( String [] args ) throws IOException { InputStream input = System . in ; System . out . println ( \"\u8bf7\u8f93\u5165\u59d3\u540d\uff1a\" ); byte [] data = new byte [ 1024 ]; int len = input . read ( data ); System . err . println ( new String ( data , 0 , len )); } } 86 BufferedReader\u7f13\u51b2\u8f93\u5165\u6d41 JDK < 1.5 \u7f13\u51b2\u5b57\u7b26\u8f93\u5165\u6d41 \u7ee7\u627f\u5173\u7cfb Reader - BufferedReader \u4ee3\u7801\u793a\u4f8b import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; class Demo { public static void main ( String [] args ) throws IOException { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in )); System . out . println ( \"\u8bf7\u8f93\u5165\uff1a\" ); String msg = reader . readLine (); System . out . println ( msg ); } } 87 Scanner\u626b\u63cf\u6d41 JDK > 1.5 \u66ff\u4ee3BufferedReader \u6784\u9020\u51fd\u6570 \u5224\u65ad\u662f\u5426\u6709\u6570\u636e public boolean hasNext() \u8bfb\u53d6\u6570\u636e public String next() \u8bbe\u7f6e\u5206\u9694\u7b26 import java.io.IOException ; import java.util.Scanner ; class Demo { public static void main ( String [] args ) throws IOException { Scanner scanner = new Scanner ( System . in ); System . out . println ( \"\u8bf7\u8f93\u5165\u5e74\u9f84\uff1a\" ); if ( scanner . hasNextInt ()){ int age = scanner . nextInt (); System . out . println ( \"\u60a8\u8f93\u5165\u7684\u5e74\u9f84\u662f\uff1a\" + age ); } else { System . out . println ( \"\u8f93\u5165\u4e0d\u6b63\u786e\" ); } scanner . close (); } } \u53ef\u4ee5\u7ed3\u5408\u6b63\u5219\u8fdb\u884c\u5224\u65ad\u9a8c\u8bc1 import java.text.ParseException ; import java.text.SimpleDateFormat ; import java.util.Scanner ; class Demo { public static void main ( String [] args ) throws ParseException { Scanner scanner = new Scanner ( System . in ); System . out . println ( \"\u8bf7\u8f93\u5165\u751f\u65e5\uff1a\" ); if ( scanner . hasNext ( \"\\\\d{4}-\\\\d{2}-\\\\d{2}\" )) { String msg = scanner . next ( \"\\\\d{4}-\\\\d{2}-\\\\d{2}\" ); System . out . println ( \"\u60a8\u8f93\u5165\u7684\u5e74\u9f84\u662f\uff1a\" + new SimpleDateFormat ( \"yyyy-MM-dd\" ). parse ( msg )); } else { System . out . println ( \"\u8f93\u5165\u4e0d\u6b63\u786e\" ); } scanner . close (); } } \u8bfb\u53d6\u6587\u4ef6 import java.io.File ; import java.io.FileNotFoundException ; import java.util.Scanner ; class Demo { public static void main ( String [] args ) throws FileNotFoundException { Scanner scanner = new Scanner ( new File ( \"demo.txt\" )); // \u8bbe\u7f6e\u6362\u884c\u5206\u9694\u7b26 // scanner.useDelimiter(\"\\n\"); while ( scanner . hasNext ()) { System . out . println ( scanner . next ()); } scanner . close (); } } \u5f00\u53d1\u4e2d: \u8f93\u51fa\u4f7f\u7528PrintWriter\u6253\u5370\u6d41 \u8f93\u5165\u4f7f\u7528Scanner\u626b\u63cf\u6d41 \u7b2c19 \u7ae0 \uff1a \u5bf9\u8c61\u5e8f\u5217\u5316 88 \u5bf9\u8c61\u5e8f\u5217\u5316\u57fa\u672c\u6982\u5ff5 \u5bf9\u8c61\u5e8f\u5217\u5316\uff1a \u5c06\u5185\u5b58\u4e2d\u4fdd\u5b58\u7684\u5bf9\u8c61\u4ee5\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u5f62\u5f0f\u5904\u7406\uff0c \u5b9e\u73b0\u5bf9\u8c61\u7684\u4fdd\u5b58\u6216\u8005\u7f51\u7edc\u4f20\u8f93 \u4fdd\u5b58\u5230\u6587\u4ef6 \u5806\u5185\u5b58 - \u4e8c\u8fdb\u5236\u8f6c\u6362 -> \u4fdd\u5b58\u5230\u6570\u636e\u5e93 \u53d1\u9001\u5230\u670d\u52a1\u5668 \u8981\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0java.io.Serializable \u63a5\u53e3 \u6ca1\u6709\u4efb\u4f55\u65b9\u6cd5\uff0c\u53ea\u662f\u63cf\u8ff0\u4e00\u79cd\u80fd\u529b \u793a\u4f8b import java.io.Serializable ; class Person implements Serializable { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } } 89 \u5e8f\u5217\u5316\u4e0e\u53cd\u5e8f\u5217\u5316\u5904\u7406 \u7ee7\u627f\u5173\u7cfb InputStream ( ObjectInput , ObjectStreamConstants ) - ObjectInputStream OutputStream ( ObjectOutput , ObjectStreamConstants ) - ObjectOutputStream \u4ee3\u7801\u793a\u4f8b import java.io.* ; class Person implements Serializable { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } } class Demo { private static final File SAVE_FILE = new File ( \"demo.person\" ); public static void main ( String [] args ) throws IOException , ClassNotFoundException { Person person = new Person ( \"Tom\" , 23 ); // saveObject(person); System . out . println ( loadObject ()); // Person@15aeb7ab } // \u5e8f\u5217\u5316 public static void saveObject ( Object obj ) throws IOException { ObjectOutputStream oos = new ObjectOutputStream ( new FileOutputStream ( SAVE_FILE )); oos . writeObject ( obj ); oos . close (); } // \u53cd\u5e8f\u5217\u5316 public static Object loadObject () throws IOException , ClassNotFoundException { ObjectInputStream ois = new ObjectInputStream ( new FileInputStream ( SAVE_FILE )); Object obj = ois . readObject (); ois . close (); return obj ; } } \u5b9e\u9645\u5f00\u53d1\u4e2d\u4e0d\u76f4\u63a5\u64cd\u4f5cObjectInputStream\u3001ObjectOutputStream 90 transient\u5173\u952e\u5b57 \u8868\u793a\u8fdb\u884c\u5e8f\u5217\u5316\u5904\u7406\u65f6\uff0c\u4e0d\u5904\u7406\u88abtransient\u5173\u952e\u5b57\u4fee\u9970\u7684\u5b57\u6bb5 \u4e0d\u5e38\u7528\uff0c\u77e5\u9053\u5373\u53ef IO\u7ee7\u627f\u4f53\u7cfb\u6574\u5408 // \u5b57\u8282\u6d41\uff1a OutputStream ( Closeable , Flushable ) - FileOutputStream - ByteArrayOutputStream - PipedOutputStream - FilterOutputStream - PrintStream - ObjectOutputStream InputStream ( Closeable ) - FileInputStream - ByteArrayInputStream - PipedInputStream - ObjectInputStream // \u5b57\u7b26\u6d41\uff1a Writer ( Appendable , Closeable , Flushable ) - OutputStreamWriter - FileWriter - CharArrayWriter - PipedReader - PrintWriter - BufferedWriter Reader ( Readable , Closeable ) - InputStreamReader - FileReader - CharArrayReader - PipedWriter - BufferedReader \u7b2c20 \u7ae0 \uff1a JavaIO\u7f16\u7a0b\u6848\u4f8b 91 \u6570\u5b57\u5927\u5c0f\u6bd4\u8f83 \u8f93\u51653\u4e2a\u6574\u6570\uff0c\u5e76\u6c42\u51fa3\u4e2a\u6574\u6570\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; class InputUtil { /** * \u8bfb\u53d6\u6307\u5b9a\u4e2a\u6570\u7684\u6574\u6570\u8f93\u5165 * * @param num \u6307\u5b9a\u8981\u8f93\u5165\u7684\u6574\u6570\u4e2a\u6570 * @return \u6240\u6709\u8bfb\u53d6\u7684\u6574\u6570\u6570\u7ec4 * @throws IOException */ public static int [] getIntList ( int num ) throws IOException { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in )); System . out . println ( \"\u8bf7\u8f93\u5165\" + num + \"\u4e2a\u6574\u6570\uff1a\" ); int [] list = new int [ num ]; int count = 0 ; while ( count < num ) { String msg = reader . readLine (); if ( msg . matches ( \"\\\\d+\" )) { list [ count ++] = Integer . parseInt ( msg ); } else { System . out . println ( \"\u8bf7\u8f93\u5165\u6574\u6570\" ); } } reader . close (); return list ; } } class NumberUtil { /** * \u83b7\u53d6int \u578b\u6570\u7ec4\u4e2d\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c * * @param list \u6574\u6570\u6570\u7ec4 * @return int[] {max, min} */ public static int [] getMaxMin ( int [] list ) { int max = list [ 0 ]; int min = list [ 0 ]; for ( int x : list ) { if ( x > max ) { max = x ; } if ( min > x ) { min = x ; } } return new int []{ max , min }; } } class Demo { public static void main ( String [] args ) throws IOException { // \u8bfb\u53d63\u4e2a\u6570\u636e int [] list = InputUtil . getIntList ( 3 ); int [] data = NumberUtil . getMaxMin ( list ); System . out . println ( \"\u6700\u5927\u503c\uff1a\" + data [ 0 ]); System . out . println ( \"\u6700\u5c0f\u503c\uff1a\" + data [ 1 ]); } } 92 \u6587\u4ef6\u4fdd\u5b58 \u4ece\u952e\u76d8\u8f93\u5165\u6587\u4ef6\u540d\u548c\u6587\u4ef6\u5185\u5bb9\uff0c\u7136\u540e\u5c06\u6587\u4ef6\u5185\u5bb9\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d 1\u3001\u5b9a\u4e49\u63a5\u53e3 2\u3001\u5de5\u5177\u7c7b 3\u3001\u5b9e\u73b0\u63a5\u53e3\u7c7b 4\u3001\u5de5\u5382\u7c7b 5\u3001\u6d4b\u8bd5\u51fd\u6570 import java.io.* ; class InputUtil { private static final BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in )); public static String getInput ( String prompt ) { System . out . println ( prompt ); String msg = null ; while ( true ) { try { msg = reader . readLine (); if (! \"\" . equals ( msg )) { break ; } else { System . out . println ( \"\u8bf7\u8f93\u5165\u975e\u7a7a\u5b57\u7b26\u4e32\uff1a\" ); } } catch ( IOException e ) { } } return msg ; } } interface IFileService { public static final String FILE_DIR = \"demo\" ; public boolean save (); } class FileServiceImpl implements IFileService { private String filename ; private String content ; public FileServiceImpl () { this . filename = InputUtil . getInput ( \"\u8bf7\u8f93\u5165\u6587\u4ef6\u540d\" ); this . content = InputUtil . getInput ( \"\u8bf7\u8f93\u5165\u6587\u4ef6\u5185\u5bb9\" ); } @Override public boolean save () { String fullname = this . FILE_DIR + File . separator + this . filename ; PrintWriter writer = null ; try { writer = new PrintWriter ( fullname ); writer . print ( this . content ); } catch ( FileNotFoundException e ) { e . printStackTrace (); } finally { if ( writer != null ) { writer . close (); } } return false ; } } class Factory { private Factory (){} public static FileServiceImpl getInstance (){ return new FileServiceImpl (); } } class Demo { // \u9879\u76ee\u542f\u52a8\u65f6\u521b\u5efa\u6587\u4ef6\u5939 static { File file = new File ( IFileService . FILE_DIR ); if (! file . exists ()) { file . mkdirs (); } } public static void main ( String [] args ) throws IOException { FileServiceImpl fileService = Factory . getInstance (); fileService . save (); } } 93 \u5b57\u7b26\u4e32\u9006\u5e8f\u663e\u793a \u952e\u76d8\u4f20\u5165\u591a\u4e2a\u5b57\u7b26\u4e32\u5230\u7a0b\u5e8f\u4e2d\uff0c\u5e76\u5c06\u5b83\u4eec\u6309\u7167\u9006\u5e8f\u8f93\u51fa\u5230\u5c4f\u5e55 \u8bbe\u8ba1\u8003\u8651\uff1a 1\u3001\u5b57\u7b26\u4e32\u5185\u5bb9\u968f\u65f6\u4fee\u6539\uff0c\u4f7f\u7528StringBuffer 2\u3001\u7531\u7528\u6237\u81ea\u5df1\u51b3\u5b9a\u662f\u5426\u7ee7\u7eed\u8f93\u5165 \u5b9e\u73b0\u6b65\u9aa4 1\u3001\u5b9a\u4e49\u63a5\u53e3 \u64cd\u4f5c\u6807\u51c6 2\u3001\u5b9a\u4e49\u5b9e\u73b0\u7c7b 3\u3001\u5b9a\u4e49\u5de5\u5382\u7c7b 4\u3001\u7f16\u5199\u8f85\u52a9\u7c7b 5\u3001\u7f16\u5199\u6d4b\u8bd5\u7c7b \u5b9e\u73b0\u4ee3\u7801 IStringService.java public interface IStringService { public void append ( String str ); public String [] reverse (); } StringServiceImpl.java public class StringServiceImpl implements IStringService { private StringBuffer data = new StringBuffer (); public void append ( String str ){ this . data . append ( str ). append ( \"|\" ); } public String [] reverse (){ String [] list = this . data . toString (). split ( \"\\\\|\" ); String [] tmp = new String [ list . length ]; for ( int i = 0 ; i < list . length ; i ++){ tmp [ i ] = list [ list . length - i - 1 ]; } return tmp ; } } InputUtil.java import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; class InputUtil { private static final BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in )); public static String getString ( String prompt ) { System . out . println ( prompt ); String msg = null ; while ( true ) { try { msg = reader . readLine (); if (! \"\" . equals ( msg )) { break ; } else { System . out . println ( \"\u8bf7\u8f93\u5165\u975e\u7a7a\u5b57\u7b26\u4e32\uff1a\" ); } } catch ( IOException e ) { } } return msg ; } public static void main ( String [] args ) { System . out . println ( InputUtil . getString ( \"\u8bf7\u8f93\u5165\" )); } } Factory.java class Factory { private Factory (){} public static StringServiceImpl getInstance (){ return new StringServiceImpl (); } } Menu.java import java.util.Arrays ; public class Menu { private StringServiceImpl stringServiceImpl ; public Menu () { this . stringServiceImpl = Factory . getInstance (); this . choose (); } public void choose () { help (); String msg = InputUtil . getString ( \"\u8bf7\u9009\u62e9\uff1a\" ); switch ( msg ) { case \"1\" : this . stringServiceImpl . append ( InputUtil . getString ( \"\u8bf7\u8f93\u5165\u5b57\u7b26\u4e32\uff1a\" )); choose (); case \"2\" : System . out . println ( Arrays . toString ( this . stringServiceImpl . reverse ())); choose (); case \"0\" : System . exit ( 0 ); default: choose (); } } public static void help () { System . out . println ( \"[1]\u8f93\u5165\u5185\u5bb9\uff1a\" ); System . out . println ( \"[2]\u8f93\u51fa\u53cd\u8f6c\u5185\u5bb9\uff1a\" ); System . out . println ( \"[0]\u9000\u51fa\" ); } } Demo.java class Demo { public static void main ( String [] args ) { new Menu (); } } 94 \u6570\u636e\u6392\u5e8f\u5904\u7406 \u952e\u76d8\u8f93\u5165\u6570\u636e \u59d3\u540d:\u6210\u7ee9|\u59d3\u540d:\u6210\u7ee9 eg: Tom : 89 | Jack : 91 | Tony : 86 \u6309\u7167\u6210\u7ee9\u7531\u9ad8\u5230\u4f4e\u6392\u5e8f \u601d\u8def\uff1a Comparable + Arrays \u4ee3\u7801\u5b9e\u73b0 IStudentService.java public interface IStudentService { Student [] getData (); } Student.java public class Student implements Comparable < Student >{ private String name ; private double score ; public Student ( String name , double score ) { this . name = name ; this . score = score ; } @Override public String toString () { return \"Student<\" + name + \", \" + score + '>' ; } @Override public int compareTo ( Student obj ) { return Double . compare ( obj . score , this . score ); } } StudentServiceImpl.java import java.util.Arrays ; public class StudentServiceImpl implements IStudentService { private String content ; private Student [] students ; public StudentServiceImpl ( String content ) { this . content = content ; this . handle (); } private void handle (){ String [] list = this . content . split ( \"\\\\|\" ); this . students = new Student [ list . length ]; for ( int i = 0 ; i < list . length ; i ++){ String [] items = list [ i ]. split ( \":\" ); this . students [ i ] = new Student ( items [ 0 ], Double . parseDouble ( items [ 1 ])); } } @Override public Student [] getData () { Arrays . sort ( this . students ); return this . students ; } } Factory.java public class Factory { private Factory (){} public static StudentServiceImpl getInstance (){ return new StudentServiceImpl ( InputUtil . getString ( \"\u8bf7\u8f93\u5165\u6570\u636e\uff1a\" )); } } Demo.java import java.util.Arrays ; public class Demo { public static void main ( String [] args ) { // Tom:89|Jack:91|Tony:86 System . out . println ( Arrays . toString ( Factory . getInstance (). getData ())); // [Student<Jack, 91.0>, Student<Tom, 89.0>, Student<Tony, 86.0>] } } 95 \u6570\u636e\u6392\u5e8f\u5904\u7406\u6df1\u5165 \u6269\u5c55\u4e0a\u4e00\u8282\u5185\u5bb9\uff0c\u5c06\u8f93\u5165\u4fe1\u606f\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u6dfb\u52a0\u4fe1\u606f\uff0c\u5e76\u4e14\u67e5\u770b\u5168\u90e8\u6570\u636e \u786e\u8ba4\u4fdd\u5b58\u4f4d\u7f6e \u683c\u5f0f\u7edf\u4e00 FileUtil.java\u6587\u4ef6\u8bfb\u53d6\u5de5\u5177\u7c7b package util ; import java.io.* ; import java.util.Scanner ; public class FileUtil { public static String read ( File file ) throws FileNotFoundException { Scanner scanner = new Scanner ( file ); StringBuilder contents = new StringBuilder (); while ( scanner . hasNext ()) { contents . append ( scanner . next ()); } scanner . close (); return contents . toString (); } public static void append ( File file , String content ) throws IOException { PrintWriter writer = new PrintWriter ( new FileWriter ( file , true )); writer . write ( content ); writer . close (); } public static void save ( File file , String content ) throws IOException { PrintWriter writer = new PrintWriter ( file ); writer . write ( content ); writer . close (); } public static void main ( String [] args ) throws IOException { File file = new File ( \"demo.txt\" ); FileUtil . save ( file , \"\u4f60\u597d\" ); FileUtil . append ( file , \"\u4f60\u4e5f\u597d\" ); System . out . println ( FileUtil . read ( file )); } } 96 \u5947\u5076\u6570\u7edf\u8ba1 \u8f93\u5165\u5b57\u7b26\u4e32\u62c6\u5206\u540e\u7edf\u8ba1\u5947\u6570\uff0c\u5076\u6570\u4e2a\u6570 \u63a5\u53e3INumberService.java public interface INumberService { public int [] handle (); } \u5b9e\u73b0\u7c7b NumberServiceImpl.java import util.InputUtil ; public class NumberServiceImpl implements INumberService { private String str ; public NumberServiceImpl (){ this . str = InputUtil . getString ( \"\u8bf7\u8f93\u5165\u6570\u5b57\u4e32\uff1a\" ); } @Override public int [] handle () { String [] numbers = this . str . split ( \"\" ); // \u5076\u6570\uff0c \u5947\u6570 int [] result = new int []{ 0 , 0 }; for ( String num : numbers ){ if ( Integer . parseInt ( num ) % 2 == 0 ){ result [ 0 ] ++; } else { result [ 1 ] ++; } } return result ; } } \u6d4b\u8bd5\u7c7b Demo.java import java.util.Arrays ; public class Demo { public static void main ( String [] args ) { System . out . println ( Arrays . toString ( new NumberServiceImpl (). handle ())); // 1234567890 // [5, 5] } } 97 \u7528\u6237\u767b\u5f55 \u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801 root 123456 \u5982\u679c\u6ca1\u6709\u8f93\u5165\u5219\u63d0\u793a\u8f93\u5165 \u8f93\u5165\u9519\u8bef3\u6b21\u9000\u51fa \u63d0\u793a\u767b\u5f55\u6210\u529f \u771f\u5b9e\u4e1a\u52a1\u53ea\u5b9e\u73b0\u6838\u5fc3\u529f\u80fd\uff0c\u8f85\u52a9\u903b\u8f91\u5904\u7406\u4ea4\u7ed9\u4ee3\u7406\u63a7\u5236 \u63a5\u53e3\u7c7b IUserService isExit login \u5b9e\u73b0\u7c7b UserServiceImpl \u4ee3\u7406\u7c7b UserServiceProxy \u5de5\u5382\u7c7b Factory \u6d4b\u8bd5\u7c7b Demo \u5b9e\u73b0\u4ee3\u7801 IUserService.java public interface IUserService { public boolean isExit (); public boolean login ( String name , String password ); } UserServiceImpl.java public class UserServiceImpl implements IUserService { private int tryCount = 0 ; @Override public boolean isExit () { // \u8d85\u8fc7\u4e09\u6b21\u9519\u8bef return this . tryCount >= 3 ; } /** * \u5b9e\u73b0\u6838\u5fc3\u903b\u8f91 */ @Override public boolean login ( String name , String password ) { this . tryCount ++; if ( \"root\" . equals ( name ) && \"123456\" . equals ( password )){ return true ; } else { return false ; } } } UserServiceProxy.java import util.InputUtil ; public class UserServiceProxy implements IUserService { private IUserService userService ; public UserServiceProxy ( IUserService userService ) { this . userService = userService ; } @Override public boolean isExit () { return this . userService . isExit (); } /** * \u5b9e\u73b0\u8f85\u52a9\u903b\u8f91 */ @Override public boolean login ( String name , String password ) { while (! this . isExit ()) { String inputName = InputUtil . getString ( \"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\" ); String inputPassword = InputUtil . getString ( \"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\" ); if ( this . userService . login ( inputName , inputPassword )) { System . out . println ( \"\u767b\u5f55\u6210\u529f\" ); System . exit ( 0 ); } else { System . out . println ( \"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\uff0c\u8bf7\u91cd\u8bd5\" ); } } System . out . println ( \"\u91cd\u8bd5\u6b21\u6570\u8fc7\u591a\uff0c\u8bf7\u7a0d\u540e\u91cd\u8bd5\" ); return true ; } } Factory.java import util.InputUtil ; public class Factory { private Factory (){} public static IUserService getInstance (){ return new UserServiceProxy ( new UserServiceImpl ()); } } Demo.java public class Demo { public static void main ( String [] args ) { Factory . getInstance (). login ( null , null ); } } 98 \u6295\u7968\u9009\u4e3e 1\u3001\u8f93\u5165\u5019\u9009\u4eba\u540d\u5355 2\u3001\u7edf\u8ba1\u6bcf\u4e2a\u5019\u9009\u4eba\u7968\u6570 3\u3001\u663e\u793a\u6700\u7ec8\u6295\u7968\u7ed3\u679c \u601d\u8def\u5206\u6790 1 \u3001\u5b9a\u4e49\u6570\u636e\u7ed3\u6784\uff1a Student name sid vote 2 \u3001\u64cd\u4f5c\u63a5\u53e3\u7c7b IVoteService void inc ( int sid ) Student [] result () \u6392\u5e8f\u6570\u636e Student [] getData () \u672a\u6392\u5e8f\u6570\u636e 3 \u3001\u5b9e\u73b0\u7c7b VoteServiceImpl 4 \u3001\u5de5\u5382\u7c7b Factory 5 \u3001\u6d4b\u8bd5\u7c7b Demo \u5b9e\u73b0\u4ee3\u7801 \u6570\u636e\u7ed3\u6784 Student.java public class Student implements Comparable < Student > { private String name ; private int sid ; private int vote ; public Student ( String name , int sid , int vote ) { this . name = name ; this . sid = sid ; this . vote = vote ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getSid () { return sid ; } public void setSid ( int sid ) { this . sid = sid ; } public int getVote () { return vote ; } public void setVote ( int vote ) { this . vote = vote ; } @Override public int compareTo ( Student obj ) { return obj . vote - this . vote ; } @Override public String toString () { return String . format ( \"[%s] %s - %s\" , sid , name , vote ); } } \u63a5\u53e3 IVoteService.java public interface IVoteService { public void inc ( int sid ); public Student result (); public Student [] getData (); } \u5b9e\u73b0\u7c7b VoteServiceImpl.java import util.InputUtil ; import java.util.Arrays ; public class VoteServiceImpl implements IVoteService { private Student [] students ; public VoteServiceImpl () { this . students = new Student []{ new Student ( \"\u5f20\u4e09\" , 1 , 0 ), new Student ( \"\u674e\u56db\" , 2 , 0 ), new Student ( \"\u738b\u4e94\" , 3 , 0 ), }; } @Override public void inc ( int sid ) { for ( Student s : this . students ){ if ( s . getSid () == sid ){ s . setVote ( s . getVote () + 1 ); } } } @Override public Student result () { Arrays . sort ( this . students ); return this . students [ 0 ]; } @Override public Student [] getData () { return this . students ; } } \u5de5\u4ea7\u7c7b Factory.java public class Factory { private Factory (){} public static IVoteService getInstance (){ return new VoteServiceImpl (); } } \u83dc\u5355\u7c7b Menu.java import util.InputUtil ; import java.util.Arrays ; public class Menu { private IVoteService voteService ; public Menu () { this . voteService = Factory . getInstance (); this . choose (); } public void choose (){ this . help (); String num = InputUtil . getString ( \"\u8bf7\u9009\u62e9\uff1a\" ); switch ( num ){ case \"1\" : String sid = InputUtil . getString ( \"\u8bf7\u8f93\u5165\u5019\u9009\u4ebaid\" ); this . voteService . inc ( Integer . parseInt ( sid )); this . choose (); break ; case \"2\" : System . out . println ( Arrays . toString ( this . voteService . getData ())); this . choose (); break ; case \"3\" : System . out . println ( this . voteService . result ()); this . choose (); break ; case \"0\" : System . out . println ( \"\u62dc\u62dc...\" ); System . exit ( 0 ); default : help (); this . choose (); } } public void help (){ System . out . println ( \"\u30101\u3011\u5019\u9009\u4eba\u589e\u52a0\u7968\u6570\" ); System . out . println ( \"\u30102\u3011\u663e\u793a\u6295\u7968\u7edf\u8ba1\" ); System . out . println ( \"\u30103\u3011\u663e\u793a\u7edf\u8ba1\u7ed3\u679c\" ); System . out . println ( \"\u30100\u3011\u9000\u51fa\u7cfb\u7edf\" ); } } \u6d4b\u8bd5\u7c7b Demo.java public class Demo { public static void main ( String [] args ) { new Menu (); } }","title":"\u7b2c15 \u7ae0 \uff1a \u6587\u4ef6\u64cd\u4f5c"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#15","text":"","title":"\u7b2c15 \u7ae0 \uff1a \u6587\u4ef6\u64cd\u4f5c"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#67-file","text":"\u6587\u4ef6\u64cd\u4f5c\u7cfb\u7edf\u64cd\u4f5c\u7c7b\uff1a java.io.File \u6587\u4ef6\u521b\u5efa\uff0c\u5220\u9664\uff0c\u91cd\u547d\u540d File\u7c7b\u57fa\u672c\u4f7f\u7528 File \u5b9e\u73b0\u4e86Comparable\u63a5\u53e3 // \u6784\u9020\u65b9\u6cd5 public File ( String pathname ) public File ( String parent , String child ) // \u521b\u5efa\u6587\u4ef6 public boolean createNewFile () throws IOException // \u6587\u4ef6\u5b58\u5728 public boolean exists () // \u5220\u9664\u6587\u4ef6 public boolean delete () \u793a\u4f8b\uff1a import java.io.File ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws IOException { File file = new File ( \"./demo.txt\" ); if ( file . exists ()){ boolean ret = file . delete (); System . out . println ( \"\u5220\u9664\u7ed3\u679c\uff1a\" + ret ); } else { boolean ret = file . createNewFile (); System . out . println ( \"\u521b\u5efa\u7ed3\u679c\uff1a\" + ret ); } } }","title":"67 File\u7c7b\u57fa\u672c\u64cd\u4f5c"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#68-file","text":"1\u3001\u8def\u5f84\u5206\u9694\u7b26 Windows\u5206\u9694\u7b26 \"\\\" Linux\u5206\u9694\u7b26 \"/\" \u8def\u5f84\u5206\u9694\u7b26\u5e38\u91cf File.separator 2\u3001\u6587\u4ef6\u64cd\u4f5c\u6d41\u7a0b \u7a0b\u5e8f -> JVM -> \u64cd\u4f5c\u7cfb\u7edf\u51fd\u6570 -> \u6587\u4ef6\u5904\u7406 \u91cd\u590d\u5220\u9664\u6216\u521b\u5efa\u7684\u65f6\u5019\u4f1a\u6709\u5ef6\u65f6\u60c5\u51b5\uff0c \u5efa\u8bae\uff1a\u6587\u4ef6\u540d\u4e0d\u8981\u91cd\u540d 3\u3001\u521b\u5efa\u6587\u4ef6\u7684\u65f6\u5019\u7236\u7ea7\u76ee\u5f55\u5fc5\u987b\u5b58\u5728 // \u83b7\u53d6\u7236\u8def\u5f84 public File getParentFile () // \u521b\u5efa\u76ee\u5f55 public boolean mkdirs () \u793a\u4f8b import java.io.File ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws IOException { File file = new File ( \"./dir/demo/demo.txt\" ); File parentFile = file . getParentFile (); if (! parentFile . exists ()) { parentFile . mkdirs (); } file . createNewFile (); } }","title":"68 File\u7c7b\u64cd\u4f5c\u6df1\u5165"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#69","text":"\u6d89\u53ca\u6587\u4ef6\u672c\u8eab\u64cd\u4f5c\uff0c\u4e0d\u6d89\u53ca\u6587\u4ef6\u5185\u5bb9\u5904\u7406 // \u662f\u5426\u53ef\u8bfb public boolean canRead () // \u662f\u5426\u53ef\u5199 public boolean canWrite () // \u662f\u5426\u53ef\u6267\u884c public boolean canExecute () // \u662f\u5426\u4e3a\u6587\u4ef6 public boolean isFile () // \u662f\u5426\u4e3a\u76ee\u5f55 public boolean isDirectory () // \u83b7\u53d6\u6587\u4ef6\u957f\u5ea6 \u5b57\u8282 public long length () // \u6700\u540e\u4fee\u6539\u65f6\u95f4 13\u4f4d\u65f6\u95f4\u6233 public long lastModified () // \u5217\u51fa\u76ee\u5f55\u5185\u5bb9 public File [] listFiles () \u793a\u4f8b import java.io.File ; class Demo { public static void main ( String [] args ) { File file = new File ( \"./dir/demo\" ); System . out . println ( file . canRead ()); // true System . out . println ( file . canWrite ()); // true System . out . println ( file . canExecute ()); // false System . out . println ( file . isFile ()); // true System . out . println ( file . isDirectory ()); // false System . out . println ( file . length ()); // 135 \u5b57\u8282 System . out . println ( file . lastModified ()); // 1574952161000 File [] list = file . listFiles (); for ( File f : list ) { System . out . println ( f ); } // ./dir/demo/demo.txt } }","title":"69 \u83b7\u53d6\u6587\u4ef6\u4fe1\u606f"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#70","text":"import java.io.File ; class Demo { public static void main ( String [] args ) { File file = new File ( \"./dir\" ); listDir ( file ); } public static void listDir ( File file ){ if ( file . isDirectory ()){ File [] files = file . listFiles (); if ( files != null ){ for ( File f : files ){ listDir ( f ); } } } else { System . out . println ( file ); } } }","title":"70 \u7efc\u5408\u6848\u4f8b\uff1a\u5217\u51fa\u76ee\u5f55\u7ed3\u6784"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#71","text":"import java.io.File ; class Demo { public static void main ( String [] args ) { long start = System . currentTimeMillis (); File file = new File ( \"./dir\" ); renameDir ( file ); long end = System . currentTimeMillis (); System . out . println ( \"\u82b1\u8d39\u65f6\u95f4\uff1a\" + ( end - start )); } public static void renameDir ( File file ){ if ( file . isDirectory ()){ File [] files = file . listFiles (); if ( files != null ){ for ( File f : files ){ renameDir ( f ); } } } else { if ( file . getName (). contains ( \".\" )){ int endPos = file . getName (). lastIndexOf ( \".\" ); String name = file . getName (). substring ( 0 , endPos ); File newFile = new File ( file . getParent (), name + \".txt\" ); System . out . println ( file . getName ()); System . out . println ( newFile ); file . renameTo ( newFile ); } } } }","title":"71 \u7efc\u5408\u6848\u4f8b\uff1a\u6587\u4ef6\u6279\u91cf\u66f4\u540d"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#16","text":"","title":"\u7b2c16\u7ae0 \u5b57\u8282\u6d41\u4e0e\u5b57\u7b26\u6d41"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#72","text":"File\u7c7b\u662f\u552f\u4e00\u4e00\u4e2a\u4e0e\u6587\u4ef6\u672c\u8eab\u6709\u5173\u7684\u7a0b\u5e8f\u5904\u7406\u7c7b File\u7c7b\u53ea\u80fd\u591f\u64cd\u4f5c\u6587\u4ef6\u672c\u8eab\uff0c\u800c\u4e0d\u80fd\u64cd\u4f5c\u6587\u4ef6\u5185\u5bb9 IO\u64cd\u4f5c\uff1a\u8f93\u5165\u8f93\u51fa\u64cd\u4f5c java.io \u62bd\u8c61\u7c7b \u8f93\u51fa \u8f93\u5165 \u5b57\u8282\u6d41\uff1a OutputStream , InputStream \u5b57\u7b26\u6d41\uff1a Writer , Reader \u6587\u4ef6\u5904\u7406\u6d41\u7a0b\uff1a 1\u3001File\u627e\u5230\u4e00\u4e2a\u6587\u4ef6 2\u3001\u901a\u8fc7\u5b57\u8282\u6d41\u6216\u5b57\u7b26\u6d41\u7684\u5b50\u7c7b\u4e3a\u7236\u7c7b\u5bf9\u8c61\u5b9e\u4f8b\u5316 3\u3001\u5229\u7528\u5b57\u8282\u6d41\u6216\u5b57\u7b26\u6d41\u4e2d\u7684\u65b9\u6cd5\u5b9e\u73b0\u6570\u636e\u51fa\u5165\u4e0e\u8f93\u51fa\u64cd\u4f5c 4\u3001\u6d41\u7684\u64cd\u4f5c\u5c5e\u4e8e\u8d44\u6e90\u64cd\u4f5c\uff0c\u8d44\u6e90\u64cd\u4f5c\u5fc5\u987b\u8fdb\u884c\u5173\u95ed","title":"72 \u6d41\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#73-outputstream","text":"\u5b9e\u73b0\u4ee3\u7801 public interface AutoCloseable { void close () throws Exception ; } public interface Closeable extends AutoCloseable { public void close () throws IOException ; } public interface Flushable { void flush () throws IOException ; } public abstract class OutputStream implements Closeable , Flushable { public abstract void write ( int b ) throws IOException ; public void write ( byte b []) throws IOException ; public void write ( byte b [], int off , int len ) throws IOException ; } // \u5b50\u7c7b public class FileOutputStream extends OutputStream { // \u8986\u76d6 public FileOutputStream ( File file ) throws FileNotFoundException // \u8ffd\u52a0 public FileOutputStream ( File file , boolean append ) throws FileNotFoundException ; } \u5185\u5bb9\u8f93\u51fa\u5230\u6587\u4ef6 import java.io.File ; import java.io.FileOutputStream ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws IOException { File file = new File ( \"demo/demo.txt\" ); // \u7236\u7ea7\u76ee\u5f55\u4e0d\u5b58\u5728\u5219\u521b\u5efa if (! file . getParentFile (). exists ()){ file . getParentFile (). mkdir (); } String message = \"\u8fd9\u662f\u8f93\u51fa\u7684\u5185\u5bb9\" ; // \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5b57\u8282\u6570\u7ec4\u8f93\u51fa\u5230\u6587\u4ef6\uff0c\u5e76\u5173\u95ed\u6587\u4ef6 FileOutputStream output = new FileOutputStream ( file ); output . write ( message . getBytes ()); output . close (); } } \u81ea\u52a8\u5173\u95ed\u7684\u5199\u6cd5 try ( FileOutputStream output = new FileOutputStream ( file )){ output . write ( message . getBytes ()); } catch ( IOException e ){ e . printStackTrace (); } \u4f7f\u7528\u8ffd\u52a0\u6362\u884c\u8f93\u51fa String message = \"\u8fd9\u662f\u8f93\u51fa\u7684\u5185\u5bb9\\r\\n\" ; FileOutputStream output = new FileOutputStream ( file , true ); output . write ( message . getBytes ()); output . close ();","title":"73 OutputStream\u5b57\u8282\u8f93\u51fa\u6d41"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#74-inputstream","text":"public abstract class InputStream implements Closeable { // \u8bfb\u53d6\u5355\u4e2a\u5b57\u8282\u6570\u636e\uff0c\u8bfb\u5230\u6587\u4ef6\u5e95\u90e8\u8fd4\u56de-1 public abstract int read () throws IOException ; // \u8bfb\u53d6\u4e00\u7ec4\u5b57\u8282\u6570\u636e\uff0c\u8fd4\u56de\u8bfb\u53d6\u7684\u4e2a\u6570\uff0c\u6587\u4ef6\u5e95\u90e8\u8fd4\u56de-1 public int read ( byte b []) throws IOException ; public int read ( byte b [], int off , int len ) throws IOException ; } \u6587\u4ef6\u5c3e\u90e8\u8fd4\u56de -1\uff0c \u8868\u793a\u6587\u4ef6\u8bfb\u53d6\u5b8c\u6210 \u5b50\u7c7b public class FileInputStream extends InputStream { public FileInputStream ( String name ) throws FileNotFoundException public FileInputStream ( File file ) throws FileNotFoundException } \u8bfb\u53d6\u793a\u4f8b import java.io.File ; import java.io.FileInputStream ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws IOException { File file = new File ( \"demo/demo.txt\" ); FileInputStream input = new FileInputStream ( file ); // \u5f00\u8f9f\u7f13\u51b2\u533a\u8bfb\u53d6\u6570\u636e byte [] data = new byte [ 1024 ]; int len = input . read ( data ); System . out . println ( \"[\" + new String ( data , 0 , len ) + \"]\" ); input . close (); } }","title":"74 InputStream\u5b57\u8282\u8f93\u5165\u6d41"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#75-writer","text":"Writer\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\u5b57\u7b26\u4e32 public abstract class Writer implements Appendable , Closeable , Flushable { public void write ( char cbuf []) throws IOException ; public void write ( String str ) throws IOException ; } public class OutputStreamWriter extends Writer public class FileWriter extends OutputStreamWriter { public FileWriter ( String fileName , boolean append ); public FileWriter ( String fileName ) public FileWriter ( File file ) public FileWriter ( File file , boolean append ) } \u4ee3\u7801\u5b9e\u4f8b import java.io.File ; import java.io.FileWriter ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws IOException { File file = new File ( \"demo/demo.txt\" ); FileWriter writer = new FileWriter ( file ); writer . write ( \"hello java\" ); writer . append ( \"\u4f60\u597d\uff01java!\" ); writer . close (); } }","title":"75 Writer\u5b57\u7b26\u8f93\u51fa\u6d41"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#76-reader","text":"\u7ee7\u627f\u5173\u7cfb public abstract class Reader implements Readable , Closeable public class InputStreamReader extends Reader public class FileReader extends InputStreamReader { public FileReader ( File file ); public FileReader ( String fileName ); } \u8bfb\u53d6\u793a\u4f8b import java.io.File ; import java.io.FileReader ; import java.io.IOException ; class Demo { public static void main ( String [] args ) throws IOException { File file = new File ( \"demo/demo.txt\" ); FileReader reader = new FileReader ( file ); char [] data = new char [ 1024 ]; int len = reader . read ( data ); System . out . println ( new String ( data , 0 , len )); reader . close (); } } \u5b57\u7b26\u6d41\u8bfb\u53d6\u53ea\u80fd\u6309\u7167\u6570\u7ec4\u6570\u636e\u8bfb\u53d6","title":"76 Reader\u5b57\u7b26\u8f93\u5165\u6d41"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#77","text":"\u4e0d\u4f7f\u7528close\u5173\u95ed \u4f7f\u7528\u5b57\u8282\u6d41\u8f93\u51fa OutputStream \u6b63\u5e38\u8f93\u51fa \u4f7f\u7528\u5b57\u7b26\u6d41\u8f93\u51fa Writer \u65e0\u6cd5\u8f93\u51fa\uff0c\u4f7f\u7528\u4e86\u7f13\u51b2\u533a close\u4f1a\u5f3a\u5236\u5237\u65b0\u7f13\u51b2\u533a\uff08flush\uff09 \u5b57\u8282\u6d41\u4e0d\u4f7f\u7528\u7f13\u51b2\u533a\uff0c\u5b57\u7b26\u6d41\u4f7f\u7528\u7f13\u51b2\u533a","title":"77 \u5b57\u8282\u6d41\u4e0e\u5b57\u7b26\u6d41\u7684\u533a\u522b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#78","text":"\u5b57\u8282\u6d41\u4e0e\u5b57\u7b26\u6d41\u64cd\u4f5c\u7684\u529f\u80fd\u8f6c\u6362 import java.io.* ; class Demo { public static void main ( String [] args ) throws IOException { File file = new File ( \"demo/demo.txt\" ); // \u5b57\u8282\u6d41\u8f6c\u5b57\u7b26\u6d41\u64cd\u4f5c OutputStream out = new FileOutputStream ( file ); Writer wirter = new OutputStreamWriter ( out ); wirter . write ( \"\u4f60\u597d\" ); wirter . close (); } } \u7ee7\u627f\u5173\u7cfb OutputStream ( Closeable , Flushable ) - FileOutputStream InputStream ( Closeable ) - FileInputStream Writer ( Appendable , Closeable , Flushable ) - OutputStreamWriter - FileWriter Reader ( Readable , Closeable ) - InputStreamReader - FileReader \u7f13\u5b58\uff0c\u7a0b\u5e8f\u4e2d\u95f4\u7f13\u51b2\u533a \u5b57\u8282\u6570\u636e\uff1a101010101...","title":"78 \u8f6c\u6362\u6d41"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#79","text":"\u5b9e\u73b0\u6587\u4ef6\u62f7\u8d1d\u64cd\u4f5c \u4f7f\u7528\u5b57\u8282\u6d41 \u65b9\u6848\u4e00\uff1a \u5168\u90e8\u8bfb\u53d6\uff0c\u4e00\u6b21\u6027\u8f93\u51fa \u65b9\u6cd5\u4e8c\uff1a \u6bcf\u6b21\u8bfb\u53d6\u4e00\u90e8\u5206\uff0c\u8f93\u51fa\u4e00\u90e8\u5206 import java.io.* ; class FileUtil { public static void copyFile ( String src , String target ) throws IOException { InputStream input = new FileInputStream ( src ); OutputStream output = new FileOutputStream ( target ); byte [] data = new byte [ 1024 ]; int len = 0 ; while (( len = input . read ( data )) != - 1 ) { output . write ( data , 0 , len ); } input . close (); output . close (); } public static void copyDir ( String src , String target ) throws IOException { File srcFile = new File ( src ); File targetFile = new File ( target ); if (! targetFile . exists ()) { targetFile . mkdirs (); } File [] results = srcFile . listFiles (); if ( results != null ) { for ( File file : results ) { String fileName = targetFile + File . separator + file . getName (); if ( file . isDirectory ()) { copyDir ( file . getPath (), fileName ); } else { copyFile ( file . getPath (), fileName ); } } } } } class Demo { public static void main ( String [] args ) throws IOException { FileUtil . copyDir ( \"demo\" , \"demo2\" ); System . out . println ( \"\u62f7\u8d1d\u5b8c\u6210\" ); } } \u5982\u679c\u62f7\u8d1d\u76ee\u5f55\u5219\u4f7f\u7528\u9012\u5f52\u62f7\u8d1d","title":"79 \u7efc\u5408\u5b9e\u6218\uff1a\u6587\u4ef6\u62f7\u8d1d"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#17-io","text":"","title":"\u7b2c17 \u7ae0 \uff1a IO\u64cd\u4f5c\u6df1\u5165"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#80","text":"\u5e38\u7528\u7684\u7f16\u7801 1\u3001GBK/GB2312 \u56fd\u6807\u7f16\u7801\uff0c GB2312\u7b80\u4f53\u4e2d\u6587\uff0cGBK\u5305\u542b\u7b80\u4f53\u548c\u7e41\u4f53 2\u3001ISO8859-1 \u56fd\u9645\u901a\u7528\u7f16\u7801\uff0c\u63cf\u8ff0\u6240\u6709\u5b57\u6bcd 3\u3001UNICODE 16\u8fdb\u5236\u5b58\u50a8\uff0c\u63cf\u8ff0\u6240\u6709\u95ee\u9898 4\u3001UTF \u8c61\u5f62\u6587\u5b57\u90e8\u5206\u4f7f\u752816\u8fdb\u5236\uff0c\u666e\u901a\u5b57\u6bcd\u91c7\u7528ISO8859-1\uff0c\u4e3b\u8981\u4f7f\u7528UTF-8 \u5217\u51fa\u672c\u673a\u5c5e\u6027 System . getProperties (). list ( System . out ); \u9879\u76ee\u4e2d\u51fa\u73b0\u4e71\u7801\u95ee\u9898\u5c31\u662f\u7f16\u7801\u548c\u89e3\u7801\u6807\u51c6\u4e0d\u7edf\u4e00","title":"80 \u5b57\u7b26\u7f16\u7801"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#81","text":"\u6587\u4ef6\u64cd\u4f5c\u6d41 \u4ee5\u6587\u4ef6\u4e3a\u64cd\u4f5c\u7ec8\u7aef\uff0cInputStream\u3001OutputStream \u5185\u5b58\u64cd\u4f5c\u6d41 1\u3001\u5b57\u8282\u5185\u5b58\u64cd\u4f5c\u6d41 ByteArrayOutputStream ByteArrayInputStream 2\u3001\u5b57\u7b26\u5185\u5b58\u64cd\u4f5c\u6d41 CharArrayWriter CharArrayReader \u7ee7\u627f\u5173\u7cfb OutputStream - FileOutputStream - ByteArrayOutputStream InputStream - FileInputStream - ByteArrayInputStream Writer - OutputStreamWriter - FileWriter - CharArrayWriter Reader - InputStreamReader - FileReader - CharArrayReader \u793a\u4f8b\uff1a\u5229\u7528\u5185\u5b58\u6d41\u5c0f\u5199\u8f6c\u5927\u5199\u64cd\u4f5c import java.io.* ; class Demo { public static void main ( String [] args ) throws IOException { String message = \"hello java\" ; // \u5c06\u6570\u636e\u4fdd\u5b58\u5230\u5185\u5b58\u6d41\u4e2d InputStream input = new ByteArrayInputStream ( message . getBytes ()); OutputStream output = new ByteArrayOutputStream (); int data = 0 ; // \u6bcf\u6b21\u8bfb\u53d6\u4e00\u4e2a\u6570\u636e while (( data = input . read ())!=- 1 ){ output . write ( Character . toUpperCase ( data )); } System . out . println ( output ); // HELLO JAVA output . close (); input . close (); } }","title":"81 \u5185\u5b58\u64cd\u4f5c\u6d41"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#82","text":"\u53d1\u9001\u4fe1\u606f <- \u7ba1\u9053 -> \u63a5\u6536\u4fe1\u606f \u5b57\u8282\u7ba1\u9053\u6d41 PipedInputStream, PipedOutputStream \u5b57\u7b26\u7ba1\u9053\u6d41 PipedReader, PipedWriter \u7ee7\u627f\u5173\u7cfb InputStream - PipedInputStream OutputStream - PipedOutputStream Reader - PipedReader Writer - PipedWriter \u7ba1\u9053\u53d1\u9001\u63a5\u6536\u6570\u636e import java.io.* ; class Sender implements Runnable { private PipedOutputStream output ; public Sender () { this . output = new PipedOutputStream (); } @Override public void run () { try { this . output . write ( \"\u4f60\u597d\" . getBytes ()); } catch ( IOException e ) { e . printStackTrace (); } try { this . output . close (); } catch ( IOException e ) { e . printStackTrace (); } } public PipedOutputStream getOutput () { return this . output ; } } class Receiver implements Runnable { private PipedInputStream input ; public Receiver () { this . input = new PipedInputStream (); } @Override public void run () { try { byte [] data = new byte [ 1024 ]; int len = this . input . read ( data ); System . out . println ( new String ( data , 0 , len )); // \u4f60\u597d } catch ( IOException e ) { e . printStackTrace (); } try { this . input . close (); } catch ( IOException e ) { e . printStackTrace (); } } public PipedInputStream getInput () { return this . input ; } } class Demo { public static void main ( String [] args ) throws IOException { Sender sender = new Sender (); Receiver receiver = new Receiver (); // \u7ba1\u9053\u8fde\u63a5 sender . getOutput (). connect ( receiver . getInput ()); new Thread ( sender ). start (); new Thread ( receiver ). start (); } }","title":"82 \u7ba1\u9053\u6d41"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#83-randomaccessfile","text":"\u968f\u673a\u8bfb\u53d6\u7c7b\uff0c\u53ef\u4ee5\u79fb\u52a8\u6587\u4ef6\u6307\u9488 public RandomAccessFile ( String name , String mode ) import java.io.* ; class Demo { public static void main ( String [] args ) throws IOException { // \u5199\u5165 RandomAccessFile writer = new RandomAccessFile ( \"demo.txt\" , \"rw\" ); writer . write ( \"\u4f60\u597d\u4e16\u754c\" . getBytes ()); writer . close (); // \u8bfb\u53d6 RandomAccessFile reader = new RandomAccessFile ( \"demo.txt\" , \"rw\" ); String line ; while (( line = reader . readLine ()) != null ) { System . out . println ( line ); } writer . close (); } }","title":"83 RandomAccessFile"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#18","text":"","title":"\u7b2c18 \u7ae0 \uff1a \u8f93\u5165\u4e0e\u8f93\u51fa\u652f\u6301"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#84","text":"\u8bbe\u8ba1\u601d\u60f3\uff1a\u88c5\u9970\u8bbe\u8ba1\u6a21\u5f0f \u4e3aOutputStream \u7c7b\u5b9e\u73b0\u4e00\u5c42\u5305\u88c5 PrintStream PrintWriter \u7ee7\u627f\u5173\u7cfb OutputStream - FilterOutputStream - PrintStream Writer - PrintWriter import java.io.* ; class Demo { public static void main ( String [] args ) throws IOException { PrintWriter writer = new PrintWriter ( new FileWriter ( \"demo.txt\" )); // \u6362\u884c\u8f93\u51fa writer . println ( \"\u4f60\u597d\" ); // \u683c\u5f0f\u5316\u8f93\u51fa writer . printf ( \"\u59d3\u540d %s, \u5e74\u9f84: %s\" , \"\u5c0f\u5f3a\" , 23 ); writer . close (); } } \u53ea\u8981\u662f\u6587\u4ef6\u5185\u5bb9\u8f93\u51fa\u65f6\u90fd\u4f7f\u7528\u6253\u5370\u6d41","title":"84 \u6253\u5370\u6d41"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#85-systemio","text":"System\u662f\u7cfb\u7edf\u7c7b 1\u3001\u6807\u51c6\u8f93\u51fa\uff08\u663e\u793a\u5668\uff09 2\u3001\u9519\u8bef\u8f93\u51fa 3\u3001\u6807\u51c6\u8f93\u5165\uff08\u952e\u76d8\uff09 public final class System { public final static InputStream in = null ; public final static PrintStream out = null ; // \u9ed1\u8272\u5b57\u4f53 public final static PrintStream err = null ; // \u7ea2\u8272\u5b57\u4f53 } \u4fee\u6539\u8f93\u51fa\u4f4d\u7f6e import java.io.File ; import java.io.FileOutputStream ; import java.io.IOException ; import java.io.PrintStream ; class Demo { public static void main ( String [] args ) throws IOException { System . setErr ( new PrintStream ( new FileOutputStream ( new File ( \"demo.txt\" )))); System . err . println ( \"\u4f60\u597d\" ); } } \u63a5\u6536\u952e\u76d8\u8f93\u5165\uff08\u4e00\u822c\u4e0d\u7528\u6b64\u65b9\u6cd5\uff09 import java.io.IOException ; import java.io.InputStream ; class Demo { public static void main ( String [] args ) throws IOException { InputStream input = System . in ; System . out . println ( \"\u8bf7\u8f93\u5165\u59d3\u540d\uff1a\" ); byte [] data = new byte [ 1024 ]; int len = input . read ( data ); System . err . println ( new String ( data , 0 , len )); } }","title":"85 System\u7c7b\u5bf9IO\u7684\u652f\u6301"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#86-bufferedreader","text":"JDK < 1.5 \u7f13\u51b2\u5b57\u7b26\u8f93\u5165\u6d41 \u7ee7\u627f\u5173\u7cfb Reader - BufferedReader \u4ee3\u7801\u793a\u4f8b import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; class Demo { public static void main ( String [] args ) throws IOException { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in )); System . out . println ( \"\u8bf7\u8f93\u5165\uff1a\" ); String msg = reader . readLine (); System . out . println ( msg ); } }","title":"86 BufferedReader\u7f13\u51b2\u8f93\u5165\u6d41"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#87-scanner","text":"JDK > 1.5 \u66ff\u4ee3BufferedReader \u6784\u9020\u51fd\u6570 \u5224\u65ad\u662f\u5426\u6709\u6570\u636e public boolean hasNext() \u8bfb\u53d6\u6570\u636e public String next() \u8bbe\u7f6e\u5206\u9694\u7b26 import java.io.IOException ; import java.util.Scanner ; class Demo { public static void main ( String [] args ) throws IOException { Scanner scanner = new Scanner ( System . in ); System . out . println ( \"\u8bf7\u8f93\u5165\u5e74\u9f84\uff1a\" ); if ( scanner . hasNextInt ()){ int age = scanner . nextInt (); System . out . println ( \"\u60a8\u8f93\u5165\u7684\u5e74\u9f84\u662f\uff1a\" + age ); } else { System . out . println ( \"\u8f93\u5165\u4e0d\u6b63\u786e\" ); } scanner . close (); } } \u53ef\u4ee5\u7ed3\u5408\u6b63\u5219\u8fdb\u884c\u5224\u65ad\u9a8c\u8bc1 import java.text.ParseException ; import java.text.SimpleDateFormat ; import java.util.Scanner ; class Demo { public static void main ( String [] args ) throws ParseException { Scanner scanner = new Scanner ( System . in ); System . out . println ( \"\u8bf7\u8f93\u5165\u751f\u65e5\uff1a\" ); if ( scanner . hasNext ( \"\\\\d{4}-\\\\d{2}-\\\\d{2}\" )) { String msg = scanner . next ( \"\\\\d{4}-\\\\d{2}-\\\\d{2}\" ); System . out . println ( \"\u60a8\u8f93\u5165\u7684\u5e74\u9f84\u662f\uff1a\" + new SimpleDateFormat ( \"yyyy-MM-dd\" ). parse ( msg )); } else { System . out . println ( \"\u8f93\u5165\u4e0d\u6b63\u786e\" ); } scanner . close (); } } \u8bfb\u53d6\u6587\u4ef6 import java.io.File ; import java.io.FileNotFoundException ; import java.util.Scanner ; class Demo { public static void main ( String [] args ) throws FileNotFoundException { Scanner scanner = new Scanner ( new File ( \"demo.txt\" )); // \u8bbe\u7f6e\u6362\u884c\u5206\u9694\u7b26 // scanner.useDelimiter(\"\\n\"); while ( scanner . hasNext ()) { System . out . println ( scanner . next ()); } scanner . close (); } } \u5f00\u53d1\u4e2d: \u8f93\u51fa\u4f7f\u7528PrintWriter\u6253\u5370\u6d41 \u8f93\u5165\u4f7f\u7528Scanner\u626b\u63cf\u6d41","title":"87 Scanner\u626b\u63cf\u6d41"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#19","text":"","title":"\u7b2c19 \u7ae0 \uff1a \u5bf9\u8c61\u5e8f\u5217\u5316"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#88","text":"\u5bf9\u8c61\u5e8f\u5217\u5316\uff1a \u5c06\u5185\u5b58\u4e2d\u4fdd\u5b58\u7684\u5bf9\u8c61\u4ee5\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u5f62\u5f0f\u5904\u7406\uff0c \u5b9e\u73b0\u5bf9\u8c61\u7684\u4fdd\u5b58\u6216\u8005\u7f51\u7edc\u4f20\u8f93 \u4fdd\u5b58\u5230\u6587\u4ef6 \u5806\u5185\u5b58 - \u4e8c\u8fdb\u5236\u8f6c\u6362 -> \u4fdd\u5b58\u5230\u6570\u636e\u5e93 \u53d1\u9001\u5230\u670d\u52a1\u5668 \u8981\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0java.io.Serializable \u63a5\u53e3 \u6ca1\u6709\u4efb\u4f55\u65b9\u6cd5\uff0c\u53ea\u662f\u63cf\u8ff0\u4e00\u79cd\u80fd\u529b \u793a\u4f8b import java.io.Serializable ; class Person implements Serializable { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } }","title":"88 \u5bf9\u8c61\u5e8f\u5217\u5316\u57fa\u672c\u6982\u5ff5"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#89","text":"\u7ee7\u627f\u5173\u7cfb InputStream ( ObjectInput , ObjectStreamConstants ) - ObjectInputStream OutputStream ( ObjectOutput , ObjectStreamConstants ) - ObjectOutputStream \u4ee3\u7801\u793a\u4f8b import java.io.* ; class Person implements Serializable { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } } class Demo { private static final File SAVE_FILE = new File ( \"demo.person\" ); public static void main ( String [] args ) throws IOException , ClassNotFoundException { Person person = new Person ( \"Tom\" , 23 ); // saveObject(person); System . out . println ( loadObject ()); // Person@15aeb7ab } // \u5e8f\u5217\u5316 public static void saveObject ( Object obj ) throws IOException { ObjectOutputStream oos = new ObjectOutputStream ( new FileOutputStream ( SAVE_FILE )); oos . writeObject ( obj ); oos . close (); } // \u53cd\u5e8f\u5217\u5316 public static Object loadObject () throws IOException , ClassNotFoundException { ObjectInputStream ois = new ObjectInputStream ( new FileInputStream ( SAVE_FILE )); Object obj = ois . readObject (); ois . close (); return obj ; } } \u5b9e\u9645\u5f00\u53d1\u4e2d\u4e0d\u76f4\u63a5\u64cd\u4f5cObjectInputStream\u3001ObjectOutputStream","title":"89 \u5e8f\u5217\u5316\u4e0e\u53cd\u5e8f\u5217\u5316\u5904\u7406"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#90-transient","text":"\u8868\u793a\u8fdb\u884c\u5e8f\u5217\u5316\u5904\u7406\u65f6\uff0c\u4e0d\u5904\u7406\u88abtransient\u5173\u952e\u5b57\u4fee\u9970\u7684\u5b57\u6bb5 \u4e0d\u5e38\u7528\uff0c\u77e5\u9053\u5373\u53ef IO\u7ee7\u627f\u4f53\u7cfb\u6574\u5408 // \u5b57\u8282\u6d41\uff1a OutputStream ( Closeable , Flushable ) - FileOutputStream - ByteArrayOutputStream - PipedOutputStream - FilterOutputStream - PrintStream - ObjectOutputStream InputStream ( Closeable ) - FileInputStream - ByteArrayInputStream - PipedInputStream - ObjectInputStream // \u5b57\u7b26\u6d41\uff1a Writer ( Appendable , Closeable , Flushable ) - OutputStreamWriter - FileWriter - CharArrayWriter - PipedReader - PrintWriter - BufferedWriter Reader ( Readable , Closeable ) - InputStreamReader - FileReader - CharArrayReader - PipedWriter - BufferedReader","title":"90 transient\u5173\u952e\u5b57"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#20-javaio","text":"","title":"\u7b2c20 \u7ae0 \uff1a JavaIO\u7f16\u7a0b\u6848\u4f8b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#91","text":"\u8f93\u51653\u4e2a\u6574\u6570\uff0c\u5e76\u6c42\u51fa3\u4e2a\u6574\u6570\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; class InputUtil { /** * \u8bfb\u53d6\u6307\u5b9a\u4e2a\u6570\u7684\u6574\u6570\u8f93\u5165 * * @param num \u6307\u5b9a\u8981\u8f93\u5165\u7684\u6574\u6570\u4e2a\u6570 * @return \u6240\u6709\u8bfb\u53d6\u7684\u6574\u6570\u6570\u7ec4 * @throws IOException */ public static int [] getIntList ( int num ) throws IOException { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in )); System . out . println ( \"\u8bf7\u8f93\u5165\" + num + \"\u4e2a\u6574\u6570\uff1a\" ); int [] list = new int [ num ]; int count = 0 ; while ( count < num ) { String msg = reader . readLine (); if ( msg . matches ( \"\\\\d+\" )) { list [ count ++] = Integer . parseInt ( msg ); } else { System . out . println ( \"\u8bf7\u8f93\u5165\u6574\u6570\" ); } } reader . close (); return list ; } } class NumberUtil { /** * \u83b7\u53d6int \u578b\u6570\u7ec4\u4e2d\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c * * @param list \u6574\u6570\u6570\u7ec4 * @return int[] {max, min} */ public static int [] getMaxMin ( int [] list ) { int max = list [ 0 ]; int min = list [ 0 ]; for ( int x : list ) { if ( x > max ) { max = x ; } if ( min > x ) { min = x ; } } return new int []{ max , min }; } } class Demo { public static void main ( String [] args ) throws IOException { // \u8bfb\u53d63\u4e2a\u6570\u636e int [] list = InputUtil . getIntList ( 3 ); int [] data = NumberUtil . getMaxMin ( list ); System . out . println ( \"\u6700\u5927\u503c\uff1a\" + data [ 0 ]); System . out . println ( \"\u6700\u5c0f\u503c\uff1a\" + data [ 1 ]); } }","title":"91 \u6570\u5b57\u5927\u5c0f\u6bd4\u8f83"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#92","text":"\u4ece\u952e\u76d8\u8f93\u5165\u6587\u4ef6\u540d\u548c\u6587\u4ef6\u5185\u5bb9\uff0c\u7136\u540e\u5c06\u6587\u4ef6\u5185\u5bb9\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d 1\u3001\u5b9a\u4e49\u63a5\u53e3 2\u3001\u5de5\u5177\u7c7b 3\u3001\u5b9e\u73b0\u63a5\u53e3\u7c7b 4\u3001\u5de5\u5382\u7c7b 5\u3001\u6d4b\u8bd5\u51fd\u6570 import java.io.* ; class InputUtil { private static final BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in )); public static String getInput ( String prompt ) { System . out . println ( prompt ); String msg = null ; while ( true ) { try { msg = reader . readLine (); if (! \"\" . equals ( msg )) { break ; } else { System . out . println ( \"\u8bf7\u8f93\u5165\u975e\u7a7a\u5b57\u7b26\u4e32\uff1a\" ); } } catch ( IOException e ) { } } return msg ; } } interface IFileService { public static final String FILE_DIR = \"demo\" ; public boolean save (); } class FileServiceImpl implements IFileService { private String filename ; private String content ; public FileServiceImpl () { this . filename = InputUtil . getInput ( \"\u8bf7\u8f93\u5165\u6587\u4ef6\u540d\" ); this . content = InputUtil . getInput ( \"\u8bf7\u8f93\u5165\u6587\u4ef6\u5185\u5bb9\" ); } @Override public boolean save () { String fullname = this . FILE_DIR + File . separator + this . filename ; PrintWriter writer = null ; try { writer = new PrintWriter ( fullname ); writer . print ( this . content ); } catch ( FileNotFoundException e ) { e . printStackTrace (); } finally { if ( writer != null ) { writer . close (); } } return false ; } } class Factory { private Factory (){} public static FileServiceImpl getInstance (){ return new FileServiceImpl (); } } class Demo { // \u9879\u76ee\u542f\u52a8\u65f6\u521b\u5efa\u6587\u4ef6\u5939 static { File file = new File ( IFileService . FILE_DIR ); if (! file . exists ()) { file . mkdirs (); } } public static void main ( String [] args ) throws IOException { FileServiceImpl fileService = Factory . getInstance (); fileService . save (); } }","title":"92 \u6587\u4ef6\u4fdd\u5b58"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#93","text":"\u952e\u76d8\u4f20\u5165\u591a\u4e2a\u5b57\u7b26\u4e32\u5230\u7a0b\u5e8f\u4e2d\uff0c\u5e76\u5c06\u5b83\u4eec\u6309\u7167\u9006\u5e8f\u8f93\u51fa\u5230\u5c4f\u5e55 \u8bbe\u8ba1\u8003\u8651\uff1a 1\u3001\u5b57\u7b26\u4e32\u5185\u5bb9\u968f\u65f6\u4fee\u6539\uff0c\u4f7f\u7528StringBuffer 2\u3001\u7531\u7528\u6237\u81ea\u5df1\u51b3\u5b9a\u662f\u5426\u7ee7\u7eed\u8f93\u5165 \u5b9e\u73b0\u6b65\u9aa4 1\u3001\u5b9a\u4e49\u63a5\u53e3 \u64cd\u4f5c\u6807\u51c6 2\u3001\u5b9a\u4e49\u5b9e\u73b0\u7c7b 3\u3001\u5b9a\u4e49\u5de5\u5382\u7c7b 4\u3001\u7f16\u5199\u8f85\u52a9\u7c7b 5\u3001\u7f16\u5199\u6d4b\u8bd5\u7c7b \u5b9e\u73b0\u4ee3\u7801 IStringService.java public interface IStringService { public void append ( String str ); public String [] reverse (); } StringServiceImpl.java public class StringServiceImpl implements IStringService { private StringBuffer data = new StringBuffer (); public void append ( String str ){ this . data . append ( str ). append ( \"|\" ); } public String [] reverse (){ String [] list = this . data . toString (). split ( \"\\\\|\" ); String [] tmp = new String [ list . length ]; for ( int i = 0 ; i < list . length ; i ++){ tmp [ i ] = list [ list . length - i - 1 ]; } return tmp ; } } InputUtil.java import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; class InputUtil { private static final BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in )); public static String getString ( String prompt ) { System . out . println ( prompt ); String msg = null ; while ( true ) { try { msg = reader . readLine (); if (! \"\" . equals ( msg )) { break ; } else { System . out . println ( \"\u8bf7\u8f93\u5165\u975e\u7a7a\u5b57\u7b26\u4e32\uff1a\" ); } } catch ( IOException e ) { } } return msg ; } public static void main ( String [] args ) { System . out . println ( InputUtil . getString ( \"\u8bf7\u8f93\u5165\" )); } } Factory.java class Factory { private Factory (){} public static StringServiceImpl getInstance (){ return new StringServiceImpl (); } } Menu.java import java.util.Arrays ; public class Menu { private StringServiceImpl stringServiceImpl ; public Menu () { this . stringServiceImpl = Factory . getInstance (); this . choose (); } public void choose () { help (); String msg = InputUtil . getString ( \"\u8bf7\u9009\u62e9\uff1a\" ); switch ( msg ) { case \"1\" : this . stringServiceImpl . append ( InputUtil . getString ( \"\u8bf7\u8f93\u5165\u5b57\u7b26\u4e32\uff1a\" )); choose (); case \"2\" : System . out . println ( Arrays . toString ( this . stringServiceImpl . reverse ())); choose (); case \"0\" : System . exit ( 0 ); default: choose (); } } public static void help () { System . out . println ( \"[1]\u8f93\u5165\u5185\u5bb9\uff1a\" ); System . out . println ( \"[2]\u8f93\u51fa\u53cd\u8f6c\u5185\u5bb9\uff1a\" ); System . out . println ( \"[0]\u9000\u51fa\" ); } } Demo.java class Demo { public static void main ( String [] args ) { new Menu (); } }","title":"93 \u5b57\u7b26\u4e32\u9006\u5e8f\u663e\u793a"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#94","text":"\u952e\u76d8\u8f93\u5165\u6570\u636e \u59d3\u540d:\u6210\u7ee9|\u59d3\u540d:\u6210\u7ee9 eg: Tom : 89 | Jack : 91 | Tony : 86 \u6309\u7167\u6210\u7ee9\u7531\u9ad8\u5230\u4f4e\u6392\u5e8f \u601d\u8def\uff1a Comparable + Arrays \u4ee3\u7801\u5b9e\u73b0 IStudentService.java public interface IStudentService { Student [] getData (); } Student.java public class Student implements Comparable < Student >{ private String name ; private double score ; public Student ( String name , double score ) { this . name = name ; this . score = score ; } @Override public String toString () { return \"Student<\" + name + \", \" + score + '>' ; } @Override public int compareTo ( Student obj ) { return Double . compare ( obj . score , this . score ); } } StudentServiceImpl.java import java.util.Arrays ; public class StudentServiceImpl implements IStudentService { private String content ; private Student [] students ; public StudentServiceImpl ( String content ) { this . content = content ; this . handle (); } private void handle (){ String [] list = this . content . split ( \"\\\\|\" ); this . students = new Student [ list . length ]; for ( int i = 0 ; i < list . length ; i ++){ String [] items = list [ i ]. split ( \":\" ); this . students [ i ] = new Student ( items [ 0 ], Double . parseDouble ( items [ 1 ])); } } @Override public Student [] getData () { Arrays . sort ( this . students ); return this . students ; } } Factory.java public class Factory { private Factory (){} public static StudentServiceImpl getInstance (){ return new StudentServiceImpl ( InputUtil . getString ( \"\u8bf7\u8f93\u5165\u6570\u636e\uff1a\" )); } } Demo.java import java.util.Arrays ; public class Demo { public static void main ( String [] args ) { // Tom:89|Jack:91|Tony:86 System . out . println ( Arrays . toString ( Factory . getInstance (). getData ())); // [Student<Jack, 91.0>, Student<Tom, 89.0>, Student<Tony, 86.0>] } }","title":"94 \u6570\u636e\u6392\u5e8f\u5904\u7406"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#95","text":"\u6269\u5c55\u4e0a\u4e00\u8282\u5185\u5bb9\uff0c\u5c06\u8f93\u5165\u4fe1\u606f\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u6dfb\u52a0\u4fe1\u606f\uff0c\u5e76\u4e14\u67e5\u770b\u5168\u90e8\u6570\u636e \u786e\u8ba4\u4fdd\u5b58\u4f4d\u7f6e \u683c\u5f0f\u7edf\u4e00 FileUtil.java\u6587\u4ef6\u8bfb\u53d6\u5de5\u5177\u7c7b package util ; import java.io.* ; import java.util.Scanner ; public class FileUtil { public static String read ( File file ) throws FileNotFoundException { Scanner scanner = new Scanner ( file ); StringBuilder contents = new StringBuilder (); while ( scanner . hasNext ()) { contents . append ( scanner . next ()); } scanner . close (); return contents . toString (); } public static void append ( File file , String content ) throws IOException { PrintWriter writer = new PrintWriter ( new FileWriter ( file , true )); writer . write ( content ); writer . close (); } public static void save ( File file , String content ) throws IOException { PrintWriter writer = new PrintWriter ( file ); writer . write ( content ); writer . close (); } public static void main ( String [] args ) throws IOException { File file = new File ( \"demo.txt\" ); FileUtil . save ( file , \"\u4f60\u597d\" ); FileUtil . append ( file , \"\u4f60\u4e5f\u597d\" ); System . out . println ( FileUtil . read ( file )); } }","title":"95 \u6570\u636e\u6392\u5e8f\u5904\u7406\u6df1\u5165"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#96","text":"\u8f93\u5165\u5b57\u7b26\u4e32\u62c6\u5206\u540e\u7edf\u8ba1\u5947\u6570\uff0c\u5076\u6570\u4e2a\u6570 \u63a5\u53e3INumberService.java public interface INumberService { public int [] handle (); } \u5b9e\u73b0\u7c7b NumberServiceImpl.java import util.InputUtil ; public class NumberServiceImpl implements INumberService { private String str ; public NumberServiceImpl (){ this . str = InputUtil . getString ( \"\u8bf7\u8f93\u5165\u6570\u5b57\u4e32\uff1a\" ); } @Override public int [] handle () { String [] numbers = this . str . split ( \"\" ); // \u5076\u6570\uff0c \u5947\u6570 int [] result = new int []{ 0 , 0 }; for ( String num : numbers ){ if ( Integer . parseInt ( num ) % 2 == 0 ){ result [ 0 ] ++; } else { result [ 1 ] ++; } } return result ; } } \u6d4b\u8bd5\u7c7b Demo.java import java.util.Arrays ; public class Demo { public static void main ( String [] args ) { System . out . println ( Arrays . toString ( new NumberServiceImpl (). handle ())); // 1234567890 // [5, 5] } }","title":"96 \u5947\u5076\u6570\u7edf\u8ba1"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#97","text":"\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801 root 123456 \u5982\u679c\u6ca1\u6709\u8f93\u5165\u5219\u63d0\u793a\u8f93\u5165 \u8f93\u5165\u9519\u8bef3\u6b21\u9000\u51fa \u63d0\u793a\u767b\u5f55\u6210\u529f \u771f\u5b9e\u4e1a\u52a1\u53ea\u5b9e\u73b0\u6838\u5fc3\u529f\u80fd\uff0c\u8f85\u52a9\u903b\u8f91\u5904\u7406\u4ea4\u7ed9\u4ee3\u7406\u63a7\u5236 \u63a5\u53e3\u7c7b IUserService isExit login \u5b9e\u73b0\u7c7b UserServiceImpl \u4ee3\u7406\u7c7b UserServiceProxy \u5de5\u5382\u7c7b Factory \u6d4b\u8bd5\u7c7b Demo \u5b9e\u73b0\u4ee3\u7801 IUserService.java public interface IUserService { public boolean isExit (); public boolean login ( String name , String password ); } UserServiceImpl.java public class UserServiceImpl implements IUserService { private int tryCount = 0 ; @Override public boolean isExit () { // \u8d85\u8fc7\u4e09\u6b21\u9519\u8bef return this . tryCount >= 3 ; } /** * \u5b9e\u73b0\u6838\u5fc3\u903b\u8f91 */ @Override public boolean login ( String name , String password ) { this . tryCount ++; if ( \"root\" . equals ( name ) && \"123456\" . equals ( password )){ return true ; } else { return false ; } } } UserServiceProxy.java import util.InputUtil ; public class UserServiceProxy implements IUserService { private IUserService userService ; public UserServiceProxy ( IUserService userService ) { this . userService = userService ; } @Override public boolean isExit () { return this . userService . isExit (); } /** * \u5b9e\u73b0\u8f85\u52a9\u903b\u8f91 */ @Override public boolean login ( String name , String password ) { while (! this . isExit ()) { String inputName = InputUtil . getString ( \"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\" ); String inputPassword = InputUtil . getString ( \"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\" ); if ( this . userService . login ( inputName , inputPassword )) { System . out . println ( \"\u767b\u5f55\u6210\u529f\" ); System . exit ( 0 ); } else { System . out . println ( \"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\uff0c\u8bf7\u91cd\u8bd5\" ); } } System . out . println ( \"\u91cd\u8bd5\u6b21\u6570\u8fc7\u591a\uff0c\u8bf7\u7a0d\u540e\u91cd\u8bd5\" ); return true ; } } Factory.java import util.InputUtil ; public class Factory { private Factory (){} public static IUserService getInstance (){ return new UserServiceProxy ( new UserServiceImpl ()); } } Demo.java public class Demo { public static void main ( String [] args ) { Factory . getInstance (). login ( null , null ); } }","title":"97 \u7528\u6237\u767b\u5f55"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u6587\u4ef6\u64cd\u4f5c/#98","text":"1\u3001\u8f93\u5165\u5019\u9009\u4eba\u540d\u5355 2\u3001\u7edf\u8ba1\u6bcf\u4e2a\u5019\u9009\u4eba\u7968\u6570 3\u3001\u663e\u793a\u6700\u7ec8\u6295\u7968\u7ed3\u679c \u601d\u8def\u5206\u6790 1 \u3001\u5b9a\u4e49\u6570\u636e\u7ed3\u6784\uff1a Student name sid vote 2 \u3001\u64cd\u4f5c\u63a5\u53e3\u7c7b IVoteService void inc ( int sid ) Student [] result () \u6392\u5e8f\u6570\u636e Student [] getData () \u672a\u6392\u5e8f\u6570\u636e 3 \u3001\u5b9e\u73b0\u7c7b VoteServiceImpl 4 \u3001\u5de5\u5382\u7c7b Factory 5 \u3001\u6d4b\u8bd5\u7c7b Demo \u5b9e\u73b0\u4ee3\u7801 \u6570\u636e\u7ed3\u6784 Student.java public class Student implements Comparable < Student > { private String name ; private int sid ; private int vote ; public Student ( String name , int sid , int vote ) { this . name = name ; this . sid = sid ; this . vote = vote ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getSid () { return sid ; } public void setSid ( int sid ) { this . sid = sid ; } public int getVote () { return vote ; } public void setVote ( int vote ) { this . vote = vote ; } @Override public int compareTo ( Student obj ) { return obj . vote - this . vote ; } @Override public String toString () { return String . format ( \"[%s] %s - %s\" , sid , name , vote ); } } \u63a5\u53e3 IVoteService.java public interface IVoteService { public void inc ( int sid ); public Student result (); public Student [] getData (); } \u5b9e\u73b0\u7c7b VoteServiceImpl.java import util.InputUtil ; import java.util.Arrays ; public class VoteServiceImpl implements IVoteService { private Student [] students ; public VoteServiceImpl () { this . students = new Student []{ new Student ( \"\u5f20\u4e09\" , 1 , 0 ), new Student ( \"\u674e\u56db\" , 2 , 0 ), new Student ( \"\u738b\u4e94\" , 3 , 0 ), }; } @Override public void inc ( int sid ) { for ( Student s : this . students ){ if ( s . getSid () == sid ){ s . setVote ( s . getVote () + 1 ); } } } @Override public Student result () { Arrays . sort ( this . students ); return this . students [ 0 ]; } @Override public Student [] getData () { return this . students ; } } \u5de5\u4ea7\u7c7b Factory.java public class Factory { private Factory (){} public static IVoteService getInstance (){ return new VoteServiceImpl (); } } \u83dc\u5355\u7c7b Menu.java import util.InputUtil ; import java.util.Arrays ; public class Menu { private IVoteService voteService ; public Menu () { this . voteService = Factory . getInstance (); this . choose (); } public void choose (){ this . help (); String num = InputUtil . getString ( \"\u8bf7\u9009\u62e9\uff1a\" ); switch ( num ){ case \"1\" : String sid = InputUtil . getString ( \"\u8bf7\u8f93\u5165\u5019\u9009\u4ebaid\" ); this . voteService . inc ( Integer . parseInt ( sid )); this . choose (); break ; case \"2\" : System . out . println ( Arrays . toString ( this . voteService . getData ())); this . choose (); break ; case \"3\" : System . out . println ( this . voteService . result ()); this . choose (); break ; case \"0\" : System . out . println ( \"\u62dc\u62dc...\" ); System . exit ( 0 ); default : help (); this . choose (); } } public void help (){ System . out . println ( \"\u30101\u3011\u5019\u9009\u4eba\u589e\u52a0\u7968\u6570\" ); System . out . println ( \"\u30102\u3011\u663e\u793a\u6295\u7968\u7edf\u8ba1\" ); System . out . println ( \"\u30103\u3011\u663e\u793a\u7edf\u8ba1\u7ed3\u679c\" ); System . out . println ( \"\u30100\u3011\u9000\u51fa\u7cfb\u7edf\" ); } } \u6d4b\u8bd5\u7c7b Demo.java public class Demo { public static void main ( String [] args ) { new Menu (); } }","title":"98 \u6295\u7968\u9009\u4e3e"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/","text":"\u7b2c28 \u7ae0 \uff1a \u7c7b\u96c6\u6846\u67b6\u7b80\u4ecb 123 \u7c7b\u96c6\u6846\u67b6\u7b80\u4ecb \u6570\u7ec4\u957f\u5ea6\u56fa\u5b9a \u91cd\u8981\u7684\u6570\u636e\u7ed3\u6784\uff1a \u94fe\u8868\u4e0e\u6811 \u7c7b\u96c6\uff1a JDK >= 1.2 Object JDK >= 1.5 \u6cdb\u578b JDK >= 1.8 \u6027\u80fd\u63d0\u5347 \u6838\u5fc3\u63a5\u53e3: Collection List Set Map Iterator Enumeration Queue ListIterator \u7ee7\u627f\u4f53\u7cfb // \u63a5\u53e3\u5173\u7cfb @Iterable @ListIterator @Collection @List @Set @SortedSet @NavigableSet @Queue // \u961f\u5217 @Deque // \u53cc\u7aef\u961f\u5217 @Map @SortedMap @NavigableMap // \u5b9e\u73b0\u7c7b\u5173\u7cfb AbstractCollection ( Collection ) - AbstractList ( List ) - ArrayList ( List , RandomAccess , Cloneable , Serializable ) - Vector ( List , RandomAccess , Cloneable , Serializable ) - Stack - AbstractSequentialList - LinkedList ( List , Deque , Cloneable , Serializable ) - AbstractSet ( Set ) - HashSet ( Set , Cloneable , java . io . Serializable ) - TreeSet ( NavigableSet , Cloneable , java . io . Serializable ) - AbstractQueue ( Queue ) - PriorityQueue ( Serializable ) AbstractMap ( Map ) - HashMap ( Map , Cloneable , Serializable ) - LinkedHashMap ( Map ) - TreeMap ( NavigableMap , Cloneable , Serializable ) Dictionary - Hashtable ( Map , Cloneable , Serializable ) - Properties 124 Collection\u63a5\u53e3\u7b80\u4ecb \u5355\u503c\u6570\u636e\u5904\u7406 add \u589e\u52a0\u4e00\u4e2a\u6570\u636e addAll \u8ffd\u52a0\u4e00\u7ec4\u6570\u636e clear \u6e05\u7a7a\u96c6\u5408 contains \u5305\u542b \u9700\u8981 equals\u65b9\u6cd5\u652f\u6301 remove \u5220\u9664 size \u83b7\u53d6\u6570\u636e\u957f\u5ea6 toArray \u96c6\u5408\u53d8\u5bf9\u8c61\u6570\u7ec4 iterator \u96c6\u5408\u53d8 Iterator\u63a5\u53e3\u8fd4\u56de JDK < 1.5 Collection JDK >= 1.5 List Set public interface Iterable < T > public interface Collection < E > extends Iterable < E > public interface List < E > extends Collection < E > public interface Set < E > extends Collection < E > // \u7ee7\u627f\u5173\u7cfb Iterable - Collection - List - Set \u7b2c29 \u7ae0 \uff1a List\u96c6\u5408 125 List\u63a5\u53e3\u7b80\u4ecb \u5141\u8bb8\u4fdd\u5b58\u91cd\u590d\u6570\u636e List\u65b0\u7684\u65b9\u6cd5 E get ( int index ); E set ( int index , E element ); ListIterator < E > listIterator (); \u4e09\u4e2a\u5e38\u7528\u5b50\u7c7b ArrayList 90 % Vector 8 % LinkedList 2 % \u5b9a\u4e49 public class ArrayList < E > extends AbstractList < E > implements List < E >, RandomAccess , Cloneable , java . io . Serializable public class Vector < E > extends AbstractList < E > implements List < E >, RandomAccess , Cloneable , java . io . Serializable public class LinkedList < E > extends AbstractSequentialList < E > implements List < E >, Deque < E >, Cloneable , java . io . Serializable 126 ArrayList\u5b50\u7c7b \u7ee7\u627f\u7ed3\u6784 @Iterable - @Collection - @List AbstractCollection ( Collection ) - AbstractList ( List ) - ArrayList ( List , RandomAccess , Cloneable , java . io . Serializable ) List\u7279\u5f81 1\u3001\u4fdd\u5b58\u987a\u5e8f\u5c31\u662f\u5b58\u50a8\u987a\u5e8f 2\u3001\u5141\u8bb8\u6709\u91cd\u590d\u6570\u636e JDK >= 1.8 Iterable\u63a5\u53e3\u4e2d\u6709forEach\u65b9\u6cd5 import java.util.ArrayList ; import java.util.List ; class Demo { public static void main ( String [] args ) { List < String > list = new ArrayList < String >(); list . add ( \"Hello\" ); list . add ( \"Hello\" ); list . add ( \"World\" ); System . out . println ( list ); // [Hello, Hello, World] list . forEach (( str )->{ System . out . println ( str ); }); /** * Hello * Hello * World */ System . out . println ( list . size ()); // 3 System . out . println ( list . isEmpty ()); // false } } ArrayList \u5b9e\u9645\u5305\u542b\u4e00\u4e2a\u5bf9\u8c61\u6570\u7ec4 \u9ed8\u8ba4\u4f7f\u7528\u7a7a\u6570\u7ec4 \u6dfb\u52a0\u65b0\u5143\u7d20\u65f6\uff0c\u5982\u679c\u957f\u5ea6\u4e0d\u591f\uff0c\u4f1a\u5f00\u8f9f\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4 \u7248\u672c\u4e0d\u4e00\u6837\u5b9e\u73b0\u4e5f\u4e0d\u4e00\u6837 JDK < 1.9 \u9ed8\u8ba4\u4f7f\u7528\u957f\u5ea6\u4e3a10\u7684\u6570\u7ec4 JDK >= 1.9 \u9ed8\u8ba4\u7a7a\u6570\u7ec4 \u5982\u679c\u8d85\u8fc710\u4e2a\u6570\u636e\uff0c\u8003\u8651\u4f7f\u7528\u6709\u53c2\u6784\u9020\uff0c\u907f\u514d\u5783\u573e\u6570\u7ec4\u7684\u4ea7\u751f 127 ArrayList\u4fdd\u5b58\u81ea\u5b9a\u4e49\u7c7b\u5bf9\u8c61 \u5982\u679c\u9700\u8981remove\uff0ccontains\u65b9\u6cd5\uff0c\u8981\u8986\u5199equals\u65b9\u6cd5 import java.util.ArrayList ; import java.util.List ; class Person { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } @Override public boolean equals ( Object obj ) { if ( obj == null ) { return false ; } if ( obj == this ) { return true ; } if (!( obj instanceof Person )) { return false ; } Person other = ( Person ) obj ; return this . name . equals ( other . name ) && this . age == other . age ; } } class Demo { public static void main ( String [] args ) { List < Person > list = new ArrayList < Person >(); list . add ( new Person ( \"Tom\" , 23 )); list . add ( new Person ( \"Jack\" , 24 )); list . add ( new Person ( \"Steve\" , 25 )); System . out . println ( list . contains ( new Person ( \"Tom\" , 23 ))); // true } } 128 LinkedList\u5b50\u7c7b \u7ee7\u627f\u5173\u7cfb @Iterable - @Collection - @List AbstractCollection ( Collection ) - AbstractList ( List ) - AbstractSequentialList - LinkedList ( List , Deque , Cloneable , java . io . Serializable ) \u4ee3\u7801\u5b9e\u4f8b import java.util.LinkedList ; import java.util.List ; class Demo { public static void main ( String [] args ) { List < String > list = new LinkedList < String >(); list . add ( \"Hello\" ); list . add ( \"Hello\" ); list . add ( \"World\" ); System . out . println ( list ); // [Hello, Hello, World] list . forEach ( System . out :: println ); /** * Hello * Hello * World */ } } LinkedList\u548cArrayList\u63a5\u53e3\u4e00\u81f4\uff0c\u5b9e\u73b0\u4e0d\u4e00\u6837 \u533a\u522b\uff1a ArrayList \u6570\u7ec4\u5b9e\u73b0 get\u67e5\u627e\u590d\u6742\u5ea6\u4e3aO ( 1 ) LinkedList \u94fe\u8868\u5b9e\u73b0 get\u67e5\u627e\u590d\u6742\u5ea6\u4e3aO ( n ) ArrayList\u9ed8\u8ba4\u521d\u59cb\u5316\u5927\u5c0f\u4e3a10\uff0c\u957f\u5ea6\u4f1a\u81ea\u52a8\u6269\u5bb9\uff0c\u4fdd\u5b58\u5927\u6570\u636e\u4f1a\u4ea7\u751f\u5783\u573e\uff0c\u8fd9\u65f6\u4f7f\u7528LinkedList 129 Vector\u5b50\u7c7b Vector\u548cArrayList\u7ee7\u627f\u5173\u7cfb\u4e00\u81f4 Vector \u7684\u65b9\u6cd5\u52a0\u4e86\u540c\u6b65\u5904\u7406synchronized \uff0c\u591a\u7ebf\u7a0b\u5b89\u5168\uff0c\u6027\u80fd\u4e0d\u5982ArrayList import java.util.List ; import java.util.Vector ; class Demo { public static void main ( String [] args ) { List < String > list = new Vector < String >(); list . add ( \"Hello\" ); list . add ( \"Hello\" ); list . add ( \"World\" ); System . out . println ( list ); // [Hello, Hello, World] list . forEach ( System . out :: println ); /** * Hello * Hello * World */ } } \u603b\u7ed3 \u96c6\u5408 | \u8bf4\u660e - | - ArrayList | \u6570\u7ec4\u5b9e\u73b0\uff0c\u8bfb>\u5199 Vector | \u6570\u7ec4\u5b9e\u73b0\uff0c\u7ebf\u7a0b\u5b89\u5168 LinkedList | \u94fe\u8868\u5b9e\u73b0\uff0c\u5199>\u8bfb \u7ee7\u627f\u5173\u7cfb @Iterable - @Collection - @List AbstractCollection ( Collection ) - AbstractList ( List ) - ArrayList ( List , RandomAccess , Cloneable , java . io . Serializable ) - Vector ( List , RandomAccess , Cloneable , java . io . Serializable ) - AbstractSequentialList - LinkedList ( List , Deque , Cloneable , java . io . Serializable ) \u7b2c30 \u7ae0 \uff1a Set\u96c6\u5408 130 Set\u63a5\u53e3\u7b80\u4ecb Set\u96c6\u5408\u4e0d\u5141\u8bb8\u4fdd\u5b58\u91cd\u590d\u6570\u636e \u7ee7\u627f\u5173\u7cfb - @Iterable - @Collection - @Set - @SortedSet - @NavigableSet AbstractCollection ( Collection ) - AbstractSet ( Set ) - HashSet ( Set , Cloneable , java . io . Serializable ) - TreeSet ( NavigableSet , Cloneable , java . io . Serializable ) 131 HashSet\u5b50\u7c7b HashSet\u5143\u7d20\u65e0\u5e8f import java.util.HashSet ; import java.util.Set ; class Demo { public static void main ( String [] args ) { Set < String > list = new HashSet < String >(); list . add ( \"Hello\" ); list . add ( \"Hello\" ); list . add ( \"World\" ); System . out . println ( list ); // [Hello, World] list . forEach ( System . out :: println ); /** Hello World */ } } 132 TreeSet\u5b50\u7c7b TreeSet\u6570\u636e\u6709\u5e8f\uff0c\u6309\u7167\u5347\u5e8f\u6392\u5e8f import java.util.Set ; import java.util.TreeSet ; class Demo { public static void main ( String [] args ) { Set < String > list = new TreeSet < String >(); list . add ( \"Hello\" ); list . add ( \"Hello\" ); list . add ( \"World\" ); System . out . println ( list ); // [Hello, World] list . forEach ( System . out :: println ); /** Hello World */ } } 133 \u5206\u6790TreeSet\u5b50\u7c7b\u6392\u5e8f\u64cd\u4f5c TreeSet \u901a\u8fc7TreeMap\u5b9e\u73b0 \u9700\u8981\u5b9e\u73b0Comparable\u63a5\u53e3 \u81ea\u5b9a\u4e49\u7c7b\u9700\u8981\u5c06\u6240\u6709\u5c5e\u6027\u8fdb\u884c\u6bd4\u5bf9\uff0c\u9996\u9009HashSet import java.util.Set ; import java.util.TreeSet ; class Person implements Comparable < Person > { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } @Override public int compareTo ( Person other ) { if ( this . age > other . age ) { return 1 ; } else if ( this . age < other . age ) { return - 1 ; } else { return this . name . compareTo ( other . name ); } } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } class Demo { public static void main ( String [] args ) { Set < Person > list = new TreeSet < Person >(); list . add ( new Person ( \"Jack\" , 24 )); list . add ( new Person ( \"Tom\" , 23 )); list . add ( new Person ( \"Tom\" , 23 )); System . out . println ( list ); // [Person{name='Tom', age=23}, Person{name='Jack', age=24}] list . forEach ( System . out :: println ); /** Person{name='Tom', age=23} Person{name='Jack', age=24} */ } } 134 \u5206\u6790\u91cd\u590d\u5143\u7d20\u6d88\u9664 \u5b9e\u73b0\u91cd\u590d\u5143\u7d20\u5224\u65ad TreeSet Comparable\u63a5\u53e3 HashSet \u5bf9\u8c61\u7f16\u7801 hashCode\u65b9\u6cd5 ; \u5bf9\u8c61\u6bd4\u8f83 equals\u65b9\u6cd5 import java.util.HashSet ; import java.util.Objects ; import java.util.Set ; class Person implements Comparable < Person > { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } @Override public boolean equals ( Object o ) { if ( this == o ) return true ; if ( o == null || getClass () != o . getClass ()) return false ; Person person = ( Person ) o ; return age == person . age && Objects . equals ( name , person . name ); } @Override public int hashCode () { return Objects . hash ( name , age ); } @Override public int compareTo ( Person other ) { if ( this . age > other . age ) { return 1 ; } else if ( this . age < other . age ) { return - 1 ; } else { return this . name . compareTo ( other . name ); } } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } class Demo { public static void main ( String [] args ) { Set < Person > list = new HashSet < Person >(); list . add ( new Person ( \"Jack\" , 24 )); list . add ( new Person ( \"Tom\" , 23 )); list . add ( new Person ( \"Tom\" , 23 )); System . out . println ( list ); // [Person{name='Tom', age=23}, Person{name='Jack', age=24}] list . forEach ( System . out :: println ); /** Person{name='Tom', age=23} Person{name='Jack', age=24} */ } } \u7b2c31 \u7ae0 \uff1a \u96c6\u5408\u8f93\u51fa 135 Iterator\u8fed\u4ee3\u8f93\u51fa \u56db\u79cd\u8f93\u51fa\u5f62\u5f0f Iterator\u8fed\u4ee3\u8f93\u51fa 95 % ListIterator\u53cc\u5411\u8fed\u4ee3\u8f93\u51fa 0 . 1 % Enumeration\u679a\u4e3e 4 . 8 % foreach \u76f8\u5f53\u4e8e Iterator 1\u3001Iterator\u8fed\u4ee3\u8f93\u51fa hasNext \u5224\u65ad\u662f\u5426\u6709\u6570\u636e next \u53d6\u51fa\u5f53\u524d\u6570\u636e remove \u5220\u9664 ( \u5982\u679c\u4e0d\u662f\u5fc5\u987b\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528 ) java.util.Scanner \u662fIterator\u5b50\u7c7b import java.util.ArrayList ; import java.util.Iterator ; import java.util.List ; class Demo { public static void main ( String [] args ) { List < String > list = new ArrayList < String >(); list . add ( \"Tom\" ); list . add ( \"Jack\" ); list . add ( \"Steve\" ); // \u83b7\u53d6Iterator\u63a5\u53e3\u5bf9\u8c61 Iterator < String > iter = list . iterator (); while ( iter . hasNext ()){ String str = iter . next (); System . out . println ( str ); } } } \u8fed\u4ee3\u8fc7\u7a0b\u4e2d\u4f7f\u7528Collection.remove()\u4f1a\u8fed\u4ee3\u5931\u8d25 Iterator.remove() \u53ef\u4ee5\u6b63\u5e38\u5220\u9664\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528 136 ListIterator\u53cc\u5411\u8fed\u4ee3\u8f93\u51fa \u7ee7\u627f\u5173\u7cfb @Iterator - @ListIterator \u8fed\u4ee3\u987a\u5e8f\uff1a\u5148\u4ece\u524d\u5230\u540e\uff0c\u518d\u7531\u540e\u5411\u524d import java.util.ArrayList ; import java.util.List ; import java.util.ListIterator ; class Demo { public static void main ( String [] args ) { List < String > list = new ArrayList < String >(); list . add ( \"Tom\" ); list . add ( \"Jack\" ); list . add ( \"Steve\" ); // \u83b7\u53d6Iterator\u63a5\u53e3\u5bf9\u8c61 ListIterator < String > iter = list . listIterator (); // \u7531\u524d\u5411\u540e while ( iter . hasNext ()){ System . out . println ( iter . next ()); } // Tom Jack Steve // \u7531\u540e\u5411\u524d while ( iter . hasPrevious ()){ System . out . println ( iter . previous ()); } // Steve Jack Tom } } 137 Enumeration\u679a\u4e3e\u8f93\u51fa Enumeration\u4e3b\u8981\u662f\u4e3aVector\u7c7b\u63d0\u4f9b\u670d\u52a1 hasMoreElements \u5224\u65ad\u662f\u5426\u6709\u4e0b\u4e00\u4e2a\u5143\u7d20 nextElement \u83b7\u53d6\u5f53\u524d\u5143\u7d20 import java.util.Enumeration ; import java.util.Vector ; class Demo { public static void main ( String [] args ) { Vector < String > list = new Vector <>(); list . add ( \"Tom\" ); list . add ( \"Jack\" ); list . add ( \"Steve\" ); // \u83b7\u53d6\u63a5\u53e3\u5bf9\u8c61 Enumeration < String > enu = list . elements (); while ( enu . hasMoreElements ()){ System . out . println ( enu . nextElement ()); } // Tom Jack Steve } } 138 foreach\u8f93\u51fa import java.util.ArrayList ; import java.util.List ; class Demo { public static void main ( String [] args ) { List < String > list = new ArrayList < String >(); list . add ( \"Tom\" ); list . add ( \"Jack\" ); list . add ( \"Steve\" ); for ( String str : list ) { System . out . println ( str ); } // Tom Jack Steve } } \u7b2c32 \u7ae0 \uff1a Map\u96c6\u5408 139 Map\u63a5\u53e3\u7b80\u4ecb \u4e8c\u5143\u5076\u5bf9\u8c61\uff08key=value\uff09 Collection\u96c6\u5408\u4fdd\u5b58\u6570\u636e\u662f\u4e3a\u4e86\u8f93\u51fa Map\u96c6\u5408\u4fdd\u5b58\u6570\u636e\u662f\u4e3a\u4e86key\u67e5\u627e \u5e38\u7528\u65b9\u6cd5 put \u6dfb\u52a0\u6570\u636e get \u83b7\u53d6\u6570\u636e entrySet \u5c06 Map\u8f6c\u4e3aSet containsKey \u68c0\u67e5\u5b58\u5728 keySet \u5c06 Map\u4e2d\u7684key\u8f6c\u4e3aSet remove \u5220\u9664\u6570\u636e \u7ee7\u627f\u5173\u7cfb @Map - @SortedMap - @NavigableMap AbstractMap ( Map ) - HashMap ( Map , Cloneable , Serializable ) - LinkedHashMap ( Map ) - TreeMap ( NavigableMap , Cloneable , Serializable ) Dictionary - Hashtable ( Map , Cloneable , Serializable ) 140 HashMap\u5b50\u7c7b hash \u65e0\u5e8f tree \u6709\u5e8f HashMap \u65e0\u5e8f\u5b58\u50a8 import java.util.HashMap ; import java.util.Map ; class Demo { public static void main ( String [] args ) { Map < String , String > map = new HashMap <>(); map . put ( \"one\" , \"one\" ); map . put ( \"one\" , \"one+\" ); // key\u91cd\u590d \u4f1a\u88ab\u8986\u76d6 map . put ( \"two\" , null ); // value \u4e3anull map . put ( null , \"three\" ); // key \u4e3anull System . out . println ( map . get ( \"one\" )); // key\u91cd\u590d one+ System . out . println ( map . get ( \"two\" )); // key\u5b58\u5728 null System . out . println ( map . get ( \"ten\" )); // key\u4e0d\u5b58\u5728 null } } put\u4f1a\u8fd4\u56de\u539f\u6765\u7684value Map < String , Integer > map = new HashMap <>(); System . out . println ( map . put ( \"one\" , 1 )); // null System . out . println ( map . put ( \"one\" , 101 )); // key\u91cd\u590d 1 \u9762\u8bd5\u9898\uff1aHashMap\u5bb9\u91cf\u6269\u5145 \u521d\u59cb\u5bb9\u91cf\u4e3a16\u4e2a\u5143\u7d20\uff0c\u8d85\u8fc7\u4e86\u9608\u503c0.75 \u76f8\u5f53\u4e8e \u5bb9\u91cf * \u9608\u503c = 12 \uff0c\u4f1a\u81ea\u52a8\u6269\u5145 \u6269\u5145\u7684\u65f6\u5019\u4f1a\u6210\u500d\u6269\u5145 \u9762\u8bd5\u9898\uff1aHashMap\u5de5\u4f5c\u539f\u7406 \u94fe\u8868O(n) \u4e8c\u53c9\u6811O(logn) JDK < 1.8 \u94fe\u8868O(n) JDK >= 1.8 \u94fe\u8868O(n) \u6570\u91cf\u5927\u4e8e8\u4e2a\u5143\u7d20\u540e\u53d8\u4e3a \u7ea2\u9ed1\u6811\uff0c\u4fdd\u8bc1\u67e5\u8be2\u6027\u80fd 141 LinkedHashMap\u5b50\u7c7b LinkedHashMap\uff08\u94fe\u8868\u5b9e\u73b0\uff09\u6309\u7167\u6dfb\u52a0\u987a\u5e8f\u4fdd\u5b58\u6570\u636e import java.util.HashMap ; import java.util.LinkedHashMap ; import java.util.Map ; class Demo { public static void main ( String [] args ) { Map < String , Integer > map = new LinkedHashMap <>(); map . put ( \"two\" , 2 ); map . put ( \"one\" , 1 ); map . put ( \"three\" , 3 ); System . out . println ( map ); // HashMap {one=1, two=2, three=3} // LinkedHashMap {two=2, one=1, three=3} } } 142 Hashtable\u5b50\u7c7b \u4e0eVector\uff0cEnumeration\u5c5e\u4e8e\u6700\u65e9\u7684\u52a8\u6001\u6570\u7ec4\u5b9e\u73b0\u7c7b Hashtable key \u548cvalue\u90fd\u4e0d\u80fd\u4e3anull import java.util.Hashtable ; import java.util.Map ; class Demo { public static void main ( String [] args ) { Map < String , Integer > map = new Hashtable <>(); map . put ( \"two\" , 2 ); map . put ( \"one\" , 1 ); map . put ( \"three\" , 3 ); System . out . println ( map ); // {two=2, one=1, three=3} } } \u9762\u8bd5\u9898\uff1aHashMap\u4e0eHashTable\u533a\u522b HashMap \u5f02\u6b65\u64cd\u4f5c\uff0c\u975e\u7ebf\u7a0b\u5b89\u5168\uff0c \u5141\u8bb8 null HashTable \u540c\u6b65\u64cd\u4f5c\uff0c\u7ebf\u7a0b\u5b89\u5168\uff0c\u4e0d\u5141\u8bb8 null 143 Map.Entry\u5185\u90e8\u63a5\u53e3 Map.Entry \u4f5c\u4e3a\u4e00\u4e2akey\uff0cvalue\u7684\u5305\u88c5 JDK >= 1.9 144 \u5229\u7528Iterator\u8f93\u51faMap\u96c6\u5408 \u5b58\u50a8\u7ed3\u6784 Collection ( Iterator ) Map vlaue Map . Entry ( key , value ) vlaue Map . Entry ( key , value ) Map\u5bf9\u8c61\u8fed\u4ee3\u65b9\u5f0f Map - entrySet () -> Set Set - iterator () -> Iterator Iterator -> Map . Entry import java.util.HashMap ; import java.util.Iterator ; import java.util.Map ; import java.util.Set ; class Demo { public static void main ( String [] args ) { Map < String , Integer > map = new HashMap <>(); map . put ( \"Tom\" , 20 ); map . put ( \"Jack\" , 21 ); // 1\u3001\u5c06Map\u8f6cSet Set < Map . Entry < String , Integer >> set = map . entrySet (); // 2\u3001\u5c06Set \u8f6cIterator Iterator < Map . Entry < String , Integer >> iterator = set . iterator (); while ( iterator . hasNext ()){ Map . Entry < String , Integer > entry = iterator . next (); System . out . println ( entry . getKey () + \"= \" + entry . getValue ()); } /** * Tom= 20 * Jack= 21 */ } } \u7b80\u5316\u5199\u6cd5 import java.util.HashMap ; import java.util.Map ; class Demo { public static void main ( String [] args ) { Map < String , Integer > map = new HashMap <>(); map . put ( \"Tom\" , 20 ); map . put ( \"Jack\" , 21 ); for ( Map . Entry < String , Integer > entry : map . entrySet ()){ System . out . println ( entry . getKey () + \"= \" + entry . getValue ()); } /** * Tom= 20 * Jack= 21 */ } } 145 \u81ea\u5b9a\u4e49Map\u7684key\u7c7b\u578b \u901a\u8fc7key\u83b7\u53d6hash\u7801 \u5e38\u7528key\uff1a String Integer Long \u9762\u8bd5\u4f53\uff1aHashMap\u51fa\u73b0Hash\u51b2\u7a81 Hash\u51b2\u7a81\u4f1a\u8f6c\u4e3a\u94fe\u8868 key key key ( hash\u51b2\u7a81 ) value value value value value import java.util.HashMap ; import java.util.Map ; import java.util.Objects ; class Person { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } @Override public boolean equals ( Object o ) { if ( this == o ) return true ; if ( o == null || getClass () != o . getClass ()) return false ; Person person = ( Person ) o ; return age == person . age && Objects . equals ( name , person . name ); } @Override public int hashCode () { return Objects . hash ( name , age ); } } class Demo { public static void main ( String [] args ) { Map < Person , Integer > map = new HashMap <>(); map . put ( new Person ( \"Tom\" , 20 ), 20 ); System . out . println ( map . get ( new Person ( \"Tom\" , 20 ))); // 20 } } \u7b2c33 \u7ae0 \uff1a \u96c6\u5408\u5de5\u5177\u7c7b 146 Stack\u6808\u64cd\u4f5c Stack\u6808\u5148\u8fdb\u540e\u51fa\uff0c \u7ee7\u627f\u81eaVector \u7ee7\u627f\u5173\u7cfb AbstractCollection ( Collection ) - AbstractList ( List ) - ArrayList ( List , RandomAccess , Cloneable , java . io . Serializable ) - Vector ( List , RandomAccess , Cloneable , java . io . Serializable ) - Stack push \u5165\u6808 pop \u51fa\u6808 import java.util.Stack ; class Demo { public static void main ( String [] args ) { Stack < String > stack = new Stack <>(); stack . push ( \"Tom\" ); stack . push ( \"Jack\" ); System . out . println ( stack . pop ()); // Jack } } 147 Queue\u961f\u5217 Queue\u961f\u5217\u5148\u8fdb\u5148\u51fa @Iterable @Collection @Queue // \u961f\u5217 @Deque // \u53cc\u7aef\u961f\u5217 AbstractCollection ( Collection ) - AbstractList ( List ) - ArrayList ( List , RandomAccess , Cloneable , Serializable ) - Vector ( List , RandomAccess , Cloneable , Serializable ) - AbstractSequentialList - LinkedList ( List , Deque , Cloneable , Serializable ) - AbstractQueue ( Queue ) - PriorityQueue ( Serializable ) import java.util.LinkedList ; import java.util.Queue ; class Demo { public static void main ( String [] args ) { Queue < String > queue = new LinkedList <>(); queue . offer ( \"Tom\" ); queue . offer ( \"Jack\" ); System . out . println ( queue . poll ()); // Tom } } PriorityQueue\u4f18\u5148\u7ea7\u961f\u5217 \u6d89\u53ca\u6392\u5e8fComparable\u63a5\u53e3 import java.util.PriorityQueue ; import java.util.Queue ; class Demo { public static void main ( String [] args ) { Queue < String > queue = new PriorityQueue <>(); queue . offer ( \"Tom\" ); queue . offer ( \"Jack\" ); System . out . println ( queue . poll ()); // Jack } } 148 Properties\u5c5e\u6027\u64cd\u4f5c \u8d44\u6e90\u6587\u4ef6 *.properties \u7ee7\u627f\u5173\u7cfb Hashtable < Object , Object > - Properties Properties\u5e38\u7528\u65b9\u6cd5 setProperty // \u8bbe\u7f6e\u5c5e\u6027 getProperty // \u83b7\u53d6\u5c5e\u6027 store // \u4fdd\u5b58 load // \u8bfb\u53d6 \u53ea\u80fd\u64cd\u4f5cString\u7c7b\u578b \u8303\u4f8b\uff1a\u8d44\u6e90\u5185\u5bb9\u8f93\u5165\u4e0e\u8f93\u51fa\uff0c\u7528\u4e8e\u8bfb\u53d6\u914d\u7f6e\u8d44\u6e90 import java.io.File ; import java.io.FileInputStream ; import java.io.FileOutputStream ; import java.io.IOException ; import java.util.Properties ; class Demo { public static void main ( String [] args ) throws IOException { Properties properties = new Properties (); properties . setProperty ( \"name\" , \"\u5c0f\u5f3a\" ); properties . setProperty ( \"age\" , \"23\" ); // \u8f93\u51fa\uff0c\u4e2d\u6587\u4f1a\u88ab\u8f6c\u6362\u4e3aunicode\u7801 properties . store ( new FileOutputStream ( new File ( \"demo/demo.properties\" )), \"\u6ce8\u91ca\" ); // \u8bfb\u53d6\u6587\u4ef6 properties . load ( new FileInputStream ( new File ( \"demo/demo.properties\" ))); System . out . println ( properties . getProperty ( \"name\" )); // \u5c0f\u5f3a } } 149 Collections\u5de5\u5177\u7c7b import java.util.ArrayList ; import java.util.Collections ; import java.util.List ; class Demo { public static void main ( String [] args ) { List < String > list = new ArrayList <>(); // \u591a\u5143\u7d20\u6dfb\u52a0 Collections . addAll ( list , \"Tom\" , \"Jack\" , \"Steve\" ); System . out . println ( list ); // [Tom, Jack, Steve] // \u5217\u8868\u53cd\u8f6c Collections . reverse ( list ); System . out . println ( list ); // [Steve, Jack, Tom] // \u6392\u5e8f Collections . sort ( list ); // \u4e8c\u5206\u67e5\u627e System . out . println ( Collections . binarySearch ( list , \"Tom\" )); // 2 } } \u9762\u8bd5\u9898\uff1aCollection \u548c Collections\u533a\u522b Collection \u96c6\u5408\u63a5\u53e3 Collections \u96c6\u5408\u64cd\u4f5c\u5de5\u5177\u7c7b \u7b2c34 \u7ae0 \uff1a Stream\u6570\u636e\u6d41 150 Stream\u57fa\u672c\u64cd\u4f5c Stream \u4e3b\u8981\u662f\u5bf9\u96c6\u5408\u6570\u636e\u8fdb\u884c\u6570\u636e\u5206\u6790\u64cd\u4f5c import java.util.ArrayList ; import java.util.Collections ; import java.util.List ; import java.util.stream.Stream ; class Demo { public static void main ( String [] args ) { List < String > list = new ArrayList <>(); Collections . addAll ( list , \"Tom\" , \"Jack\" , \"Steve\" ); Stream < String > stream = list . stream (); System . out . println ( stream . filter ( item -> item . toUpperCase (). contains ( \"J\" )). count ()); // 1 } } \u793a\u4f8b\uff1a\u6570\u636e\u91c7\u96c6 import java.util.ArrayList ; import java.util.Collections ; import java.util.List ; import java.util.stream.Collectors ; import java.util.stream.Stream ; class Demo { public static void main ( String [] args ) { List < String > list = new ArrayList <>(); Collections . addAll ( list , \"Tom\" , \"Jack\" , \"Steve\" ); Stream < String > stream = list . stream (); // \u7b26\u5408\u6761\u4ef6\u7684\u6570\u636e\u8f6c\u4e3a\u5217\u8868\u8f93\u51fa List < String > newList = stream . filter ( item -> item . toUpperCase (). contains ( \"J\" )). collect ( Collectors . toList ()); System . out . println ( newList ); // [Jack] } } 151 MapReduce\u57fa\u7840\u6a21\u578b MapReduce\u6a21\u578b\u5206\u4e3a\u4e24\u90e8\u5206 Map Reduce import java.util.ArrayList ; import java.util.Collections ; import java.util.IntSummaryStatistics ; import java.util.List ; import java.util.stream.Stream ; class Person { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } public String getName () { return name ; } public int getAge () { return age ; } } class Demo { public static void main ( String [] args ) { List < Person > list = new ArrayList <>(); Collections . addAll ( list , new Person ( \"\u5c0f\u8d75\" , 21 ), new Person ( \"\u5c0f\u94b1\" , 22 ), new Person ( \"\u5c0f\u5b59\" , 23 ), new Person ( \"\u5c0f\u674e\" , 24 ), new Person ( \"\u5c0f\u5468\" , 25 ), new Person ( \"\u5c0f\u5434\" , 26 ) ); Stream < Person > stream = list . stream (); IntSummaryStatistics stat = stream . filter ( item -> item . getName (). contains ( \"\u5c0f\" ) ). mapToInt ( item -> item . getAge () + 1 ). summaryStatistics (); System . out . println ( stat . getSum ()); // 147 System . out . println ( stat . getCount ()); // 6 System . out . println ( stat . getAverage ()); // 24.5 } } \u8fd9\u53ea\u662f\u4e00\u4e2a\u57fa\u7840\u6a21\u578b\uff0c\u5982\u679c\u5b9e\u9645\u5f00\u53d1\u4e2d\u5c06\u5927\u91cf\u6570\u636e\u5b58\u5165\u5185\u5b58\uff0c\u90a3\u673a\u5668\u5c31\u5d29\u4e86","title":"\u7b2c28 \u7ae0 \uff1a \u7c7b\u96c6\u6846\u67b6\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#28","text":"","title":"\u7b2c28 \u7ae0 \uff1a \u7c7b\u96c6\u6846\u67b6\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#123","text":"\u6570\u7ec4\u957f\u5ea6\u56fa\u5b9a \u91cd\u8981\u7684\u6570\u636e\u7ed3\u6784\uff1a \u94fe\u8868\u4e0e\u6811 \u7c7b\u96c6\uff1a JDK >= 1.2 Object JDK >= 1.5 \u6cdb\u578b JDK >= 1.8 \u6027\u80fd\u63d0\u5347 \u6838\u5fc3\u63a5\u53e3: Collection List Set Map Iterator Enumeration Queue ListIterator \u7ee7\u627f\u4f53\u7cfb // \u63a5\u53e3\u5173\u7cfb @Iterable @ListIterator @Collection @List @Set @SortedSet @NavigableSet @Queue // \u961f\u5217 @Deque // \u53cc\u7aef\u961f\u5217 @Map @SortedMap @NavigableMap // \u5b9e\u73b0\u7c7b\u5173\u7cfb AbstractCollection ( Collection ) - AbstractList ( List ) - ArrayList ( List , RandomAccess , Cloneable , Serializable ) - Vector ( List , RandomAccess , Cloneable , Serializable ) - Stack - AbstractSequentialList - LinkedList ( List , Deque , Cloneable , Serializable ) - AbstractSet ( Set ) - HashSet ( Set , Cloneable , java . io . Serializable ) - TreeSet ( NavigableSet , Cloneable , java . io . Serializable ) - AbstractQueue ( Queue ) - PriorityQueue ( Serializable ) AbstractMap ( Map ) - HashMap ( Map , Cloneable , Serializable ) - LinkedHashMap ( Map ) - TreeMap ( NavigableMap , Cloneable , Serializable ) Dictionary - Hashtable ( Map , Cloneable , Serializable ) - Properties","title":"123 \u7c7b\u96c6\u6846\u67b6\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#124-collection","text":"\u5355\u503c\u6570\u636e\u5904\u7406 add \u589e\u52a0\u4e00\u4e2a\u6570\u636e addAll \u8ffd\u52a0\u4e00\u7ec4\u6570\u636e clear \u6e05\u7a7a\u96c6\u5408 contains \u5305\u542b \u9700\u8981 equals\u65b9\u6cd5\u652f\u6301 remove \u5220\u9664 size \u83b7\u53d6\u6570\u636e\u957f\u5ea6 toArray \u96c6\u5408\u53d8\u5bf9\u8c61\u6570\u7ec4 iterator \u96c6\u5408\u53d8 Iterator\u63a5\u53e3\u8fd4\u56de JDK < 1.5 Collection JDK >= 1.5 List Set public interface Iterable < T > public interface Collection < E > extends Iterable < E > public interface List < E > extends Collection < E > public interface Set < E > extends Collection < E > // \u7ee7\u627f\u5173\u7cfb Iterable - Collection - List - Set","title":"124 Collection\u63a5\u53e3\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#29-list","text":"","title":"\u7b2c29 \u7ae0 \uff1a List\u96c6\u5408"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#125-list","text":"\u5141\u8bb8\u4fdd\u5b58\u91cd\u590d\u6570\u636e List\u65b0\u7684\u65b9\u6cd5 E get ( int index ); E set ( int index , E element ); ListIterator < E > listIterator (); \u4e09\u4e2a\u5e38\u7528\u5b50\u7c7b ArrayList 90 % Vector 8 % LinkedList 2 % \u5b9a\u4e49 public class ArrayList < E > extends AbstractList < E > implements List < E >, RandomAccess , Cloneable , java . io . Serializable public class Vector < E > extends AbstractList < E > implements List < E >, RandomAccess , Cloneable , java . io . Serializable public class LinkedList < E > extends AbstractSequentialList < E > implements List < E >, Deque < E >, Cloneable , java . io . Serializable","title":"125 List\u63a5\u53e3\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#126-arraylist","text":"\u7ee7\u627f\u7ed3\u6784 @Iterable - @Collection - @List AbstractCollection ( Collection ) - AbstractList ( List ) - ArrayList ( List , RandomAccess , Cloneable , java . io . Serializable ) List\u7279\u5f81 1\u3001\u4fdd\u5b58\u987a\u5e8f\u5c31\u662f\u5b58\u50a8\u987a\u5e8f 2\u3001\u5141\u8bb8\u6709\u91cd\u590d\u6570\u636e JDK >= 1.8 Iterable\u63a5\u53e3\u4e2d\u6709forEach\u65b9\u6cd5 import java.util.ArrayList ; import java.util.List ; class Demo { public static void main ( String [] args ) { List < String > list = new ArrayList < String >(); list . add ( \"Hello\" ); list . add ( \"Hello\" ); list . add ( \"World\" ); System . out . println ( list ); // [Hello, Hello, World] list . forEach (( str )->{ System . out . println ( str ); }); /** * Hello * Hello * World */ System . out . println ( list . size ()); // 3 System . out . println ( list . isEmpty ()); // false } } ArrayList \u5b9e\u9645\u5305\u542b\u4e00\u4e2a\u5bf9\u8c61\u6570\u7ec4 \u9ed8\u8ba4\u4f7f\u7528\u7a7a\u6570\u7ec4 \u6dfb\u52a0\u65b0\u5143\u7d20\u65f6\uff0c\u5982\u679c\u957f\u5ea6\u4e0d\u591f\uff0c\u4f1a\u5f00\u8f9f\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4 \u7248\u672c\u4e0d\u4e00\u6837\u5b9e\u73b0\u4e5f\u4e0d\u4e00\u6837 JDK < 1.9 \u9ed8\u8ba4\u4f7f\u7528\u957f\u5ea6\u4e3a10\u7684\u6570\u7ec4 JDK >= 1.9 \u9ed8\u8ba4\u7a7a\u6570\u7ec4 \u5982\u679c\u8d85\u8fc710\u4e2a\u6570\u636e\uff0c\u8003\u8651\u4f7f\u7528\u6709\u53c2\u6784\u9020\uff0c\u907f\u514d\u5783\u573e\u6570\u7ec4\u7684\u4ea7\u751f","title":"126 ArrayList\u5b50\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#127-arraylist","text":"\u5982\u679c\u9700\u8981remove\uff0ccontains\u65b9\u6cd5\uff0c\u8981\u8986\u5199equals\u65b9\u6cd5 import java.util.ArrayList ; import java.util.List ; class Person { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } @Override public boolean equals ( Object obj ) { if ( obj == null ) { return false ; } if ( obj == this ) { return true ; } if (!( obj instanceof Person )) { return false ; } Person other = ( Person ) obj ; return this . name . equals ( other . name ) && this . age == other . age ; } } class Demo { public static void main ( String [] args ) { List < Person > list = new ArrayList < Person >(); list . add ( new Person ( \"Tom\" , 23 )); list . add ( new Person ( \"Jack\" , 24 )); list . add ( new Person ( \"Steve\" , 25 )); System . out . println ( list . contains ( new Person ( \"Tom\" , 23 ))); // true } }","title":"127 ArrayList\u4fdd\u5b58\u81ea\u5b9a\u4e49\u7c7b\u5bf9\u8c61"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#128-linkedlist","text":"\u7ee7\u627f\u5173\u7cfb @Iterable - @Collection - @List AbstractCollection ( Collection ) - AbstractList ( List ) - AbstractSequentialList - LinkedList ( List , Deque , Cloneable , java . io . Serializable ) \u4ee3\u7801\u5b9e\u4f8b import java.util.LinkedList ; import java.util.List ; class Demo { public static void main ( String [] args ) { List < String > list = new LinkedList < String >(); list . add ( \"Hello\" ); list . add ( \"Hello\" ); list . add ( \"World\" ); System . out . println ( list ); // [Hello, Hello, World] list . forEach ( System . out :: println ); /** * Hello * Hello * World */ } } LinkedList\u548cArrayList\u63a5\u53e3\u4e00\u81f4\uff0c\u5b9e\u73b0\u4e0d\u4e00\u6837 \u533a\u522b\uff1a ArrayList \u6570\u7ec4\u5b9e\u73b0 get\u67e5\u627e\u590d\u6742\u5ea6\u4e3aO ( 1 ) LinkedList \u94fe\u8868\u5b9e\u73b0 get\u67e5\u627e\u590d\u6742\u5ea6\u4e3aO ( n ) ArrayList\u9ed8\u8ba4\u521d\u59cb\u5316\u5927\u5c0f\u4e3a10\uff0c\u957f\u5ea6\u4f1a\u81ea\u52a8\u6269\u5bb9\uff0c\u4fdd\u5b58\u5927\u6570\u636e\u4f1a\u4ea7\u751f\u5783\u573e\uff0c\u8fd9\u65f6\u4f7f\u7528LinkedList","title":"128 LinkedList\u5b50\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#129-vector","text":"Vector\u548cArrayList\u7ee7\u627f\u5173\u7cfb\u4e00\u81f4 Vector \u7684\u65b9\u6cd5\u52a0\u4e86\u540c\u6b65\u5904\u7406synchronized \uff0c\u591a\u7ebf\u7a0b\u5b89\u5168\uff0c\u6027\u80fd\u4e0d\u5982ArrayList import java.util.List ; import java.util.Vector ; class Demo { public static void main ( String [] args ) { List < String > list = new Vector < String >(); list . add ( \"Hello\" ); list . add ( \"Hello\" ); list . add ( \"World\" ); System . out . println ( list ); // [Hello, Hello, World] list . forEach ( System . out :: println ); /** * Hello * Hello * World */ } } \u603b\u7ed3 \u96c6\u5408 | \u8bf4\u660e - | - ArrayList | \u6570\u7ec4\u5b9e\u73b0\uff0c\u8bfb>\u5199 Vector | \u6570\u7ec4\u5b9e\u73b0\uff0c\u7ebf\u7a0b\u5b89\u5168 LinkedList | \u94fe\u8868\u5b9e\u73b0\uff0c\u5199>\u8bfb \u7ee7\u627f\u5173\u7cfb @Iterable - @Collection - @List AbstractCollection ( Collection ) - AbstractList ( List ) - ArrayList ( List , RandomAccess , Cloneable , java . io . Serializable ) - Vector ( List , RandomAccess , Cloneable , java . io . Serializable ) - AbstractSequentialList - LinkedList ( List , Deque , Cloneable , java . io . Serializable )","title":"129 Vector\u5b50\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#30-set","text":"","title":"\u7b2c30 \u7ae0 \uff1a Set\u96c6\u5408"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#130-set","text":"Set\u96c6\u5408\u4e0d\u5141\u8bb8\u4fdd\u5b58\u91cd\u590d\u6570\u636e \u7ee7\u627f\u5173\u7cfb - @Iterable - @Collection - @Set - @SortedSet - @NavigableSet AbstractCollection ( Collection ) - AbstractSet ( Set ) - HashSet ( Set , Cloneable , java . io . Serializable ) - TreeSet ( NavigableSet , Cloneable , java . io . Serializable )","title":"130 Set\u63a5\u53e3\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#131-hashset","text":"HashSet\u5143\u7d20\u65e0\u5e8f import java.util.HashSet ; import java.util.Set ; class Demo { public static void main ( String [] args ) { Set < String > list = new HashSet < String >(); list . add ( \"Hello\" ); list . add ( \"Hello\" ); list . add ( \"World\" ); System . out . println ( list ); // [Hello, World] list . forEach ( System . out :: println ); /** Hello World */ } }","title":"131 HashSet\u5b50\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#132-treeset","text":"TreeSet\u6570\u636e\u6709\u5e8f\uff0c\u6309\u7167\u5347\u5e8f\u6392\u5e8f import java.util.Set ; import java.util.TreeSet ; class Demo { public static void main ( String [] args ) { Set < String > list = new TreeSet < String >(); list . add ( \"Hello\" ); list . add ( \"Hello\" ); list . add ( \"World\" ); System . out . println ( list ); // [Hello, World] list . forEach ( System . out :: println ); /** Hello World */ } }","title":"132 TreeSet\u5b50\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#133-treeset","text":"TreeSet \u901a\u8fc7TreeMap\u5b9e\u73b0 \u9700\u8981\u5b9e\u73b0Comparable\u63a5\u53e3 \u81ea\u5b9a\u4e49\u7c7b\u9700\u8981\u5c06\u6240\u6709\u5c5e\u6027\u8fdb\u884c\u6bd4\u5bf9\uff0c\u9996\u9009HashSet import java.util.Set ; import java.util.TreeSet ; class Person implements Comparable < Person > { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } @Override public int compareTo ( Person other ) { if ( this . age > other . age ) { return 1 ; } else if ( this . age < other . age ) { return - 1 ; } else { return this . name . compareTo ( other . name ); } } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } class Demo { public static void main ( String [] args ) { Set < Person > list = new TreeSet < Person >(); list . add ( new Person ( \"Jack\" , 24 )); list . add ( new Person ( \"Tom\" , 23 )); list . add ( new Person ( \"Tom\" , 23 )); System . out . println ( list ); // [Person{name='Tom', age=23}, Person{name='Jack', age=24}] list . forEach ( System . out :: println ); /** Person{name='Tom', age=23} Person{name='Jack', age=24} */ } }","title":"133 \u5206\u6790TreeSet\u5b50\u7c7b\u6392\u5e8f\u64cd\u4f5c"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#134","text":"\u5b9e\u73b0\u91cd\u590d\u5143\u7d20\u5224\u65ad TreeSet Comparable\u63a5\u53e3 HashSet \u5bf9\u8c61\u7f16\u7801 hashCode\u65b9\u6cd5 ; \u5bf9\u8c61\u6bd4\u8f83 equals\u65b9\u6cd5 import java.util.HashSet ; import java.util.Objects ; import java.util.Set ; class Person implements Comparable < Person > { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } @Override public boolean equals ( Object o ) { if ( this == o ) return true ; if ( o == null || getClass () != o . getClass ()) return false ; Person person = ( Person ) o ; return age == person . age && Objects . equals ( name , person . name ); } @Override public int hashCode () { return Objects . hash ( name , age ); } @Override public int compareTo ( Person other ) { if ( this . age > other . age ) { return 1 ; } else if ( this . age < other . age ) { return - 1 ; } else { return this . name . compareTo ( other . name ); } } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } class Demo { public static void main ( String [] args ) { Set < Person > list = new HashSet < Person >(); list . add ( new Person ( \"Jack\" , 24 )); list . add ( new Person ( \"Tom\" , 23 )); list . add ( new Person ( \"Tom\" , 23 )); System . out . println ( list ); // [Person{name='Tom', age=23}, Person{name='Jack', age=24}] list . forEach ( System . out :: println ); /** Person{name='Tom', age=23} Person{name='Jack', age=24} */ } }","title":"134 \u5206\u6790\u91cd\u590d\u5143\u7d20\u6d88\u9664"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#31","text":"","title":"\u7b2c31 \u7ae0 \uff1a \u96c6\u5408\u8f93\u51fa"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#135-iterator","text":"\u56db\u79cd\u8f93\u51fa\u5f62\u5f0f Iterator\u8fed\u4ee3\u8f93\u51fa 95 % ListIterator\u53cc\u5411\u8fed\u4ee3\u8f93\u51fa 0 . 1 % Enumeration\u679a\u4e3e 4 . 8 % foreach \u76f8\u5f53\u4e8e Iterator 1\u3001Iterator\u8fed\u4ee3\u8f93\u51fa hasNext \u5224\u65ad\u662f\u5426\u6709\u6570\u636e next \u53d6\u51fa\u5f53\u524d\u6570\u636e remove \u5220\u9664 ( \u5982\u679c\u4e0d\u662f\u5fc5\u987b\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528 ) java.util.Scanner \u662fIterator\u5b50\u7c7b import java.util.ArrayList ; import java.util.Iterator ; import java.util.List ; class Demo { public static void main ( String [] args ) { List < String > list = new ArrayList < String >(); list . add ( \"Tom\" ); list . add ( \"Jack\" ); list . add ( \"Steve\" ); // \u83b7\u53d6Iterator\u63a5\u53e3\u5bf9\u8c61 Iterator < String > iter = list . iterator (); while ( iter . hasNext ()){ String str = iter . next (); System . out . println ( str ); } } } \u8fed\u4ee3\u8fc7\u7a0b\u4e2d\u4f7f\u7528Collection.remove()\u4f1a\u8fed\u4ee3\u5931\u8d25 Iterator.remove() \u53ef\u4ee5\u6b63\u5e38\u5220\u9664\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528","title":"135 Iterator\u8fed\u4ee3\u8f93\u51fa"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#136-listiterator","text":"\u7ee7\u627f\u5173\u7cfb @Iterator - @ListIterator \u8fed\u4ee3\u987a\u5e8f\uff1a\u5148\u4ece\u524d\u5230\u540e\uff0c\u518d\u7531\u540e\u5411\u524d import java.util.ArrayList ; import java.util.List ; import java.util.ListIterator ; class Demo { public static void main ( String [] args ) { List < String > list = new ArrayList < String >(); list . add ( \"Tom\" ); list . add ( \"Jack\" ); list . add ( \"Steve\" ); // \u83b7\u53d6Iterator\u63a5\u53e3\u5bf9\u8c61 ListIterator < String > iter = list . listIterator (); // \u7531\u524d\u5411\u540e while ( iter . hasNext ()){ System . out . println ( iter . next ()); } // Tom Jack Steve // \u7531\u540e\u5411\u524d while ( iter . hasPrevious ()){ System . out . println ( iter . previous ()); } // Steve Jack Tom } }","title":"136 ListIterator\u53cc\u5411\u8fed\u4ee3\u8f93\u51fa"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#137-enumeration","text":"Enumeration\u4e3b\u8981\u662f\u4e3aVector\u7c7b\u63d0\u4f9b\u670d\u52a1 hasMoreElements \u5224\u65ad\u662f\u5426\u6709\u4e0b\u4e00\u4e2a\u5143\u7d20 nextElement \u83b7\u53d6\u5f53\u524d\u5143\u7d20 import java.util.Enumeration ; import java.util.Vector ; class Demo { public static void main ( String [] args ) { Vector < String > list = new Vector <>(); list . add ( \"Tom\" ); list . add ( \"Jack\" ); list . add ( \"Steve\" ); // \u83b7\u53d6\u63a5\u53e3\u5bf9\u8c61 Enumeration < String > enu = list . elements (); while ( enu . hasMoreElements ()){ System . out . println ( enu . nextElement ()); } // Tom Jack Steve } }","title":"137 Enumeration\u679a\u4e3e\u8f93\u51fa"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#138-foreach","text":"import java.util.ArrayList ; import java.util.List ; class Demo { public static void main ( String [] args ) { List < String > list = new ArrayList < String >(); list . add ( \"Tom\" ); list . add ( \"Jack\" ); list . add ( \"Steve\" ); for ( String str : list ) { System . out . println ( str ); } // Tom Jack Steve } }","title":"138 foreach\u8f93\u51fa"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#32-map","text":"","title":"\u7b2c32 \u7ae0 \uff1a Map\u96c6\u5408"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#139-map","text":"\u4e8c\u5143\u5076\u5bf9\u8c61\uff08key=value\uff09 Collection\u96c6\u5408\u4fdd\u5b58\u6570\u636e\u662f\u4e3a\u4e86\u8f93\u51fa Map\u96c6\u5408\u4fdd\u5b58\u6570\u636e\u662f\u4e3a\u4e86key\u67e5\u627e \u5e38\u7528\u65b9\u6cd5 put \u6dfb\u52a0\u6570\u636e get \u83b7\u53d6\u6570\u636e entrySet \u5c06 Map\u8f6c\u4e3aSet containsKey \u68c0\u67e5\u5b58\u5728 keySet \u5c06 Map\u4e2d\u7684key\u8f6c\u4e3aSet remove \u5220\u9664\u6570\u636e \u7ee7\u627f\u5173\u7cfb @Map - @SortedMap - @NavigableMap AbstractMap ( Map ) - HashMap ( Map , Cloneable , Serializable ) - LinkedHashMap ( Map ) - TreeMap ( NavigableMap , Cloneable , Serializable ) Dictionary - Hashtable ( Map , Cloneable , Serializable )","title":"139 Map\u63a5\u53e3\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#140-hashmap","text":"hash \u65e0\u5e8f tree \u6709\u5e8f HashMap \u65e0\u5e8f\u5b58\u50a8 import java.util.HashMap ; import java.util.Map ; class Demo { public static void main ( String [] args ) { Map < String , String > map = new HashMap <>(); map . put ( \"one\" , \"one\" ); map . put ( \"one\" , \"one+\" ); // key\u91cd\u590d \u4f1a\u88ab\u8986\u76d6 map . put ( \"two\" , null ); // value \u4e3anull map . put ( null , \"three\" ); // key \u4e3anull System . out . println ( map . get ( \"one\" )); // key\u91cd\u590d one+ System . out . println ( map . get ( \"two\" )); // key\u5b58\u5728 null System . out . println ( map . get ( \"ten\" )); // key\u4e0d\u5b58\u5728 null } } put\u4f1a\u8fd4\u56de\u539f\u6765\u7684value Map < String , Integer > map = new HashMap <>(); System . out . println ( map . put ( \"one\" , 1 )); // null System . out . println ( map . put ( \"one\" , 101 )); // key\u91cd\u590d 1 \u9762\u8bd5\u9898\uff1aHashMap\u5bb9\u91cf\u6269\u5145 \u521d\u59cb\u5bb9\u91cf\u4e3a16\u4e2a\u5143\u7d20\uff0c\u8d85\u8fc7\u4e86\u9608\u503c0.75 \u76f8\u5f53\u4e8e \u5bb9\u91cf * \u9608\u503c = 12 \uff0c\u4f1a\u81ea\u52a8\u6269\u5145 \u6269\u5145\u7684\u65f6\u5019\u4f1a\u6210\u500d\u6269\u5145 \u9762\u8bd5\u9898\uff1aHashMap\u5de5\u4f5c\u539f\u7406 \u94fe\u8868O(n) \u4e8c\u53c9\u6811O(logn) JDK < 1.8 \u94fe\u8868O(n) JDK >= 1.8 \u94fe\u8868O(n) \u6570\u91cf\u5927\u4e8e8\u4e2a\u5143\u7d20\u540e\u53d8\u4e3a \u7ea2\u9ed1\u6811\uff0c\u4fdd\u8bc1\u67e5\u8be2\u6027\u80fd","title":"140 HashMap\u5b50\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#141-linkedhashmap","text":"LinkedHashMap\uff08\u94fe\u8868\u5b9e\u73b0\uff09\u6309\u7167\u6dfb\u52a0\u987a\u5e8f\u4fdd\u5b58\u6570\u636e import java.util.HashMap ; import java.util.LinkedHashMap ; import java.util.Map ; class Demo { public static void main ( String [] args ) { Map < String , Integer > map = new LinkedHashMap <>(); map . put ( \"two\" , 2 ); map . put ( \"one\" , 1 ); map . put ( \"three\" , 3 ); System . out . println ( map ); // HashMap {one=1, two=2, three=3} // LinkedHashMap {two=2, one=1, three=3} } }","title":"141 LinkedHashMap\u5b50\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#142-hashtable","text":"\u4e0eVector\uff0cEnumeration\u5c5e\u4e8e\u6700\u65e9\u7684\u52a8\u6001\u6570\u7ec4\u5b9e\u73b0\u7c7b Hashtable key \u548cvalue\u90fd\u4e0d\u80fd\u4e3anull import java.util.Hashtable ; import java.util.Map ; class Demo { public static void main ( String [] args ) { Map < String , Integer > map = new Hashtable <>(); map . put ( \"two\" , 2 ); map . put ( \"one\" , 1 ); map . put ( \"three\" , 3 ); System . out . println ( map ); // {two=2, one=1, three=3} } } \u9762\u8bd5\u9898\uff1aHashMap\u4e0eHashTable\u533a\u522b HashMap \u5f02\u6b65\u64cd\u4f5c\uff0c\u975e\u7ebf\u7a0b\u5b89\u5168\uff0c \u5141\u8bb8 null HashTable \u540c\u6b65\u64cd\u4f5c\uff0c\u7ebf\u7a0b\u5b89\u5168\uff0c\u4e0d\u5141\u8bb8 null","title":"142 Hashtable\u5b50\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#143-mapentry","text":"Map.Entry \u4f5c\u4e3a\u4e00\u4e2akey\uff0cvalue\u7684\u5305\u88c5 JDK >= 1.9","title":"143 Map.Entry\u5185\u90e8\u63a5\u53e3"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#144-iteratormap","text":"\u5b58\u50a8\u7ed3\u6784 Collection ( Iterator ) Map vlaue Map . Entry ( key , value ) vlaue Map . Entry ( key , value ) Map\u5bf9\u8c61\u8fed\u4ee3\u65b9\u5f0f Map - entrySet () -> Set Set - iterator () -> Iterator Iterator -> Map . Entry import java.util.HashMap ; import java.util.Iterator ; import java.util.Map ; import java.util.Set ; class Demo { public static void main ( String [] args ) { Map < String , Integer > map = new HashMap <>(); map . put ( \"Tom\" , 20 ); map . put ( \"Jack\" , 21 ); // 1\u3001\u5c06Map\u8f6cSet Set < Map . Entry < String , Integer >> set = map . entrySet (); // 2\u3001\u5c06Set \u8f6cIterator Iterator < Map . Entry < String , Integer >> iterator = set . iterator (); while ( iterator . hasNext ()){ Map . Entry < String , Integer > entry = iterator . next (); System . out . println ( entry . getKey () + \"= \" + entry . getValue ()); } /** * Tom= 20 * Jack= 21 */ } } \u7b80\u5316\u5199\u6cd5 import java.util.HashMap ; import java.util.Map ; class Demo { public static void main ( String [] args ) { Map < String , Integer > map = new HashMap <>(); map . put ( \"Tom\" , 20 ); map . put ( \"Jack\" , 21 ); for ( Map . Entry < String , Integer > entry : map . entrySet ()){ System . out . println ( entry . getKey () + \"= \" + entry . getValue ()); } /** * Tom= 20 * Jack= 21 */ } }","title":"144 \u5229\u7528Iterator\u8f93\u51faMap\u96c6\u5408"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#145-mapkey","text":"\u901a\u8fc7key\u83b7\u53d6hash\u7801 \u5e38\u7528key\uff1a String Integer Long \u9762\u8bd5\u4f53\uff1aHashMap\u51fa\u73b0Hash\u51b2\u7a81 Hash\u51b2\u7a81\u4f1a\u8f6c\u4e3a\u94fe\u8868 key key key ( hash\u51b2\u7a81 ) value value value value value import java.util.HashMap ; import java.util.Map ; import java.util.Objects ; class Person { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } @Override public boolean equals ( Object o ) { if ( this == o ) return true ; if ( o == null || getClass () != o . getClass ()) return false ; Person person = ( Person ) o ; return age == person . age && Objects . equals ( name , person . name ); } @Override public int hashCode () { return Objects . hash ( name , age ); } } class Demo { public static void main ( String [] args ) { Map < Person , Integer > map = new HashMap <>(); map . put ( new Person ( \"Tom\" , 20 ), 20 ); System . out . println ( map . get ( new Person ( \"Tom\" , 20 ))); // 20 } }","title":"145 \u81ea\u5b9a\u4e49Map\u7684key\u7c7b\u578b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#33","text":"","title":"\u7b2c33 \u7ae0 \uff1a \u96c6\u5408\u5de5\u5177\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#146-stack","text":"Stack\u6808\u5148\u8fdb\u540e\u51fa\uff0c \u7ee7\u627f\u81eaVector \u7ee7\u627f\u5173\u7cfb AbstractCollection ( Collection ) - AbstractList ( List ) - ArrayList ( List , RandomAccess , Cloneable , java . io . Serializable ) - Vector ( List , RandomAccess , Cloneable , java . io . Serializable ) - Stack push \u5165\u6808 pop \u51fa\u6808 import java.util.Stack ; class Demo { public static void main ( String [] args ) { Stack < String > stack = new Stack <>(); stack . push ( \"Tom\" ); stack . push ( \"Jack\" ); System . out . println ( stack . pop ()); // Jack } }","title":"146 Stack\u6808\u64cd\u4f5c"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#147-queue","text":"Queue\u961f\u5217\u5148\u8fdb\u5148\u51fa @Iterable @Collection @Queue // \u961f\u5217 @Deque // \u53cc\u7aef\u961f\u5217 AbstractCollection ( Collection ) - AbstractList ( List ) - ArrayList ( List , RandomAccess , Cloneable , Serializable ) - Vector ( List , RandomAccess , Cloneable , Serializable ) - AbstractSequentialList - LinkedList ( List , Deque , Cloneable , Serializable ) - AbstractQueue ( Queue ) - PriorityQueue ( Serializable ) import java.util.LinkedList ; import java.util.Queue ; class Demo { public static void main ( String [] args ) { Queue < String > queue = new LinkedList <>(); queue . offer ( \"Tom\" ); queue . offer ( \"Jack\" ); System . out . println ( queue . poll ()); // Tom } } PriorityQueue\u4f18\u5148\u7ea7\u961f\u5217 \u6d89\u53ca\u6392\u5e8fComparable\u63a5\u53e3 import java.util.PriorityQueue ; import java.util.Queue ; class Demo { public static void main ( String [] args ) { Queue < String > queue = new PriorityQueue <>(); queue . offer ( \"Tom\" ); queue . offer ( \"Jack\" ); System . out . println ( queue . poll ()); // Jack } }","title":"147 Queue\u961f\u5217"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#148-properties","text":"\u8d44\u6e90\u6587\u4ef6 *.properties \u7ee7\u627f\u5173\u7cfb Hashtable < Object , Object > - Properties Properties\u5e38\u7528\u65b9\u6cd5 setProperty // \u8bbe\u7f6e\u5c5e\u6027 getProperty // \u83b7\u53d6\u5c5e\u6027 store // \u4fdd\u5b58 load // \u8bfb\u53d6 \u53ea\u80fd\u64cd\u4f5cString\u7c7b\u578b \u8303\u4f8b\uff1a\u8d44\u6e90\u5185\u5bb9\u8f93\u5165\u4e0e\u8f93\u51fa\uff0c\u7528\u4e8e\u8bfb\u53d6\u914d\u7f6e\u8d44\u6e90 import java.io.File ; import java.io.FileInputStream ; import java.io.FileOutputStream ; import java.io.IOException ; import java.util.Properties ; class Demo { public static void main ( String [] args ) throws IOException { Properties properties = new Properties (); properties . setProperty ( \"name\" , \"\u5c0f\u5f3a\" ); properties . setProperty ( \"age\" , \"23\" ); // \u8f93\u51fa\uff0c\u4e2d\u6587\u4f1a\u88ab\u8f6c\u6362\u4e3aunicode\u7801 properties . store ( new FileOutputStream ( new File ( \"demo/demo.properties\" )), \"\u6ce8\u91ca\" ); // \u8bfb\u53d6\u6587\u4ef6 properties . load ( new FileInputStream ( new File ( \"demo/demo.properties\" ))); System . out . println ( properties . getProperty ( \"name\" )); // \u5c0f\u5f3a } }","title":"148 Properties\u5c5e\u6027\u64cd\u4f5c"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#149-collections","text":"import java.util.ArrayList ; import java.util.Collections ; import java.util.List ; class Demo { public static void main ( String [] args ) { List < String > list = new ArrayList <>(); // \u591a\u5143\u7d20\u6dfb\u52a0 Collections . addAll ( list , \"Tom\" , \"Jack\" , \"Steve\" ); System . out . println ( list ); // [Tom, Jack, Steve] // \u5217\u8868\u53cd\u8f6c Collections . reverse ( list ); System . out . println ( list ); // [Steve, Jack, Tom] // \u6392\u5e8f Collections . sort ( list ); // \u4e8c\u5206\u67e5\u627e System . out . println ( Collections . binarySearch ( list , \"Tom\" )); // 2 } } \u9762\u8bd5\u9898\uff1aCollection \u548c Collections\u533a\u522b Collection \u96c6\u5408\u63a5\u53e3 Collections \u96c6\u5408\u64cd\u4f5c\u5de5\u5177\u7c7b","title":"149 Collections\u5de5\u5177\u7c7b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#34-stream","text":"","title":"\u7b2c34 \u7ae0 \uff1a Stream\u6570\u636e\u6d41"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#150-stream","text":"Stream \u4e3b\u8981\u662f\u5bf9\u96c6\u5408\u6570\u636e\u8fdb\u884c\u6570\u636e\u5206\u6790\u64cd\u4f5c import java.util.ArrayList ; import java.util.Collections ; import java.util.List ; import java.util.stream.Stream ; class Demo { public static void main ( String [] args ) { List < String > list = new ArrayList <>(); Collections . addAll ( list , \"Tom\" , \"Jack\" , \"Steve\" ); Stream < String > stream = list . stream (); System . out . println ( stream . filter ( item -> item . toUpperCase (). contains ( \"J\" )). count ()); // 1 } } \u793a\u4f8b\uff1a\u6570\u636e\u91c7\u96c6 import java.util.ArrayList ; import java.util.Collections ; import java.util.List ; import java.util.stream.Collectors ; import java.util.stream.Stream ; class Demo { public static void main ( String [] args ) { List < String > list = new ArrayList <>(); Collections . addAll ( list , \"Tom\" , \"Jack\" , \"Steve\" ); Stream < String > stream = list . stream (); // \u7b26\u5408\u6761\u4ef6\u7684\u6570\u636e\u8f6c\u4e3a\u5217\u8868\u8f93\u51fa List < String > newList = stream . filter ( item -> item . toUpperCase (). contains ( \"J\" )). collect ( Collectors . toList ()); System . out . println ( newList ); // [Jack] } }","title":"150 Stream\u57fa\u672c\u64cd\u4f5c"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7c7b\u96c6\u6846\u67b6/#151-mapreduce","text":"MapReduce\u6a21\u578b\u5206\u4e3a\u4e24\u90e8\u5206 Map Reduce import java.util.ArrayList ; import java.util.Collections ; import java.util.IntSummaryStatistics ; import java.util.List ; import java.util.stream.Stream ; class Person { private String name ; private int age ; public Person ( String name , int age ) { this . name = name ; this . age = age ; } public String getName () { return name ; } public int getAge () { return age ; } } class Demo { public static void main ( String [] args ) { List < Person > list = new ArrayList <>(); Collections . addAll ( list , new Person ( \"\u5c0f\u8d75\" , 21 ), new Person ( \"\u5c0f\u94b1\" , 22 ), new Person ( \"\u5c0f\u5b59\" , 23 ), new Person ( \"\u5c0f\u674e\" , 24 ), new Person ( \"\u5c0f\u5468\" , 25 ), new Person ( \"\u5c0f\u5434\" , 26 ) ); Stream < Person > stream = list . stream (); IntSummaryStatistics stat = stream . filter ( item -> item . getName (). contains ( \"\u5c0f\" ) ). mapToInt ( item -> item . getAge () + 1 ). summaryStatistics (); System . out . println ( stat . getSum ()); // 147 System . out . println ( stat . getCount ()); // 6 System . out . println ( stat . getAverage ()); // 24.5 } } \u8fd9\u53ea\u662f\u4e00\u4e2a\u57fa\u7840\u6a21\u578b\uff0c\u5982\u679c\u5b9e\u9645\u5f00\u53d1\u4e2d\u5c06\u5927\u91cf\u6570\u636e\u5b58\u5165\u5185\u5b58\uff0c\u90a3\u673a\u5668\u5c31\u5d29\u4e86","title":"151 MapReduce\u57fa\u7840\u6a21\u578b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7f51\u7edc\u7f16\u7a0b/","text":"\u7b2c35 \u7ae0 \uff1a \u7f51\u7edc\u7f16\u7a0b 152 \u7f51\u7edc\u7f16\u7a0b\u7b80\u4ecb \u7f51\u7edc\u7f16\u7a0b: \u591a\u53f0\u4e3b\u673a\u4e4b\u95f4\u7684\u6570\u636e\u901a\u4fe1 \u901a\u4fe1\u534f\u8bae\uff1aIP\u3001TCP\uff08\u53ef\u9760\u6570\u636e\u8fde\u63a5\uff09\u3001UDP\uff08\u4e0d\u53ef\u9760\u6570\u636e\u8fde\u63a5\uff09 \u7f51\u7edc\u7a0b\u5e8f\u6a21\u578b: C/S Client/Server \u5ba2\u6237\u7aef/\u670d\u52a1\u7aef \u5b89\u5168\u6027\u9ad8 \u5f00\u53d1\u6210\u672c\u9ad8 B/S Browser/Server \u6d4f\u89c8\u5668/\u670d\u52a1\u5668 \u5b89\u5168\u6027\u8f83\u4f4e \u5f00\u53d1\u6210\u672c\u4f4e \u76ee\u524d\u4ee5B/S \u7ed3\u6784\u4e3a\u4e3b 153 Echo\u7a0b\u5e8f\u6a21\u578b ServerSocket\u4e0eSocket ServerSocket \u8bbe\u7f6e\u670d\u52a1\u5668\u76d1\u542c\u7aef\u53e3 Socket \u8bbe\u7f6e\u8981\u8fde\u63a5\u670d\u52a1\u5668\u7684ip\u548c\u7aef\u53e3 \u5b9e\u73b0\u4e00\u4e2a\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u7aef\u901a\u4fe1 Echo\u670d\u52a1 Server.java import java.io.IOException ; import java.io.PrintWriter ; import java.net.ServerSocket ; import java.net.Socket ; import java.util.Scanner ; public class Server { public static void main ( String [] args ) throws IOException { // \u8bbe\u7f6e\u670d\u52a1\u5668\u76d1\u542c\u7aef\u53e3 ServerSocket server = new ServerSocket ( 8080 ); System . out . println ( \"\u670d\u52a1\u542f\u52a8\u3002\u3002\u3002\" ); // \u63a5\u6536\u5ba2\u6237\u7aef\u8fde\u63a5 Socket client = server . accept (); // \u63a5\u6536\u5ba2\u6237\u7aef\u6d88\u606f Scanner scanner = new Scanner ( client . getInputStream ()); scanner . useDelimiter ( \"\\n\" ); // \u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u6570\u636e PrintWriter out = new PrintWriter ( client . getOutputStream ()); // \u7ed3\u675f\u6807\u5fd7 boolean flag = true ; while ( flag ) { if ( scanner . hasNext ()) { // \u8bfb\u53d6\u5ba2\u6237\u7aef\u6570\u636e String message = scanner . next (); System . out . println ( \"\u6536\u5230: \" + message ); // \u7ed3\u675f\u6807\u5fd7 if ( \"bye\" . equalsIgnoreCase ( message )) { flag = false ; } // \u53d1\u9001\u6570\u636e\u7ed9\u5ba2\u6237\u7aef out . println ( \"[echo] \" + message ); out . flush (); } } // \u5173\u95ed out . close (); scanner . close (); client . close (); server . close (); } } Client.java import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.io.PrintWriter ; import java.net.Socket ; import java.util.Scanner ; public class Client { private final static BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in )); public static void main ( String [] args ) throws IOException { // \u8fde\u63a5\u670d\u52a1\u5668 Socket client = new Socket ( \"localhost\" , 8080 ); // \u63a5\u6536\u670d\u52a1\u5668\u4fe1\u606f Scanner scanner = new Scanner ( client . getInputStream ()); scanner . useDelimiter ( \"\\n\" ); // \u5411\u670d\u52a1\u5668\u53d1\u9001\u4fe1\u606f PrintWriter out = new PrintWriter ( client . getOutputStream ()); // \u7ed3\u675f\u6807\u5fd7 boolean flag = true ; while ( flag ) { // \u8bfb\u53d6\u63a7\u5236\u53f0\u8f93\u5165\uff0c\u53d1\u9001\u7ed9\u670d\u52a1\u5668 String message = getInput ( \"\u8bf7\u8f93\u5165\uff1a\" ); System . out . println ( \"\u53d1\u9001\uff1a\" + message ); out . println ( message ); out . flush (); // \u63a5\u6536\u670d\u52a1\u7aef\u8fd4\u56de\u7684\u6570\u636e if ( scanner . hasNext ()) { System . out . println ( \"\u8fd4\u56de\uff1a\" + scanner . next ()); } // \u7ed3\u675f\u6807\u5fd7 if ( \"bye\" . equalsIgnoreCase ( message )) { flag = false ; } } // \u5173\u95ed\u64cd\u4f5c out . close (); scanner . close (); client . close (); } // \u63a5\u6536\u63a7\u5236\u53f0\u8f93\u5165 public static String getInput ( String prompt ) throws IOException { System . out . println ( prompt ); return reader . readLine (); } } 154 BIO\u5904\u7406\u6a21\u578b \u591a\u7ebf\u7a0b\u63a5\u6536\u591a\u4e2a\u5ba2\u6237\u7aef\u8fde\u63a5 \u53ea\u7528\u4fee\u6539\u670d\u52a1\u7aef\u4ee3\u7801 Server.java import java.io.IOException ; import java.io.PrintWriter ; import java.net.ServerSocket ; import java.net.Socket ; import java.util.Scanner ; public class Server { public static class ClientThread implements Runnable { private Socket client = null ; private Scanner scanner = null ; private PrintWriter out = null ; private boolean flag = true ; // \u7ed3\u675f\u6807\u5fd7 ClientThread ( Socket client ) throws IOException { this . client = client ; // \u63a5\u6536\u5ba2\u6237\u7aef\u6d88\u606f this . scanner = new Scanner ( client . getInputStream ()); this . scanner . useDelimiter ( \"\\n\" ); // \u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u6570\u636e this . out = new PrintWriter ( client . getOutputStream ()); } @Override public void run () { while ( this . flag ) { if ( this . scanner . hasNext ()) { // \u8bfb\u53d6\u5ba2\u6237\u7aef\u6570\u636e String message = this . scanner . next (); System . out . println ( \"\u6536\u5230: \" + Thread . currentThread () + message ); // \u7ed3\u675f\u6807\u5fd7 if ( \"bye\" . equalsIgnoreCase ( message )) { this . flag = false ; } // \u53d1\u9001\u6570\u636e\u7ed9\u5ba2\u6237\u7aef this . out . println ( \"[echo] \" + message ); this . out . flush (); } } this . out . close (); this . scanner . close (); try { this . client . close (); } catch ( IOException e ) { e . printStackTrace (); } } } public static void main ( String [] args ) throws IOException { // \u8bbe\u7f6e\u670d\u52a1\u5668\u76d1\u542c\u7aef\u53e3 ServerSocket server = new ServerSocket ( 8080 ); System . out . println ( \"\u670d\u52a1\u542f\u52a8\u3002\u3002\u3002\" ); while ( true ) { // \u63a5\u6536\u5ba2\u6237\u7aef\u8fde\u63a5 Socket client = server . accept (); new Thread ( new ClientThread ( client )). start (); } // \u5173\u95ed // server.close(); } } 155 UDP\u7a0b\u5e8f UDP \u57fa\u4e8e\u6570\u636e\u62a5\u5b9e\u73b0 TCP\u8981\u4fdd\u8bc1\u53ef\u9760\u8fde\u63a5\uff0c\u9700\u8981\u7684\u670d\u52a1\u5668\u8d44\u6e90\u5c31\u591a \u4e0d\u7ba1\u5ba2\u6237\u7aef\u662f\u5426\u63a5\u6536\u5230 Receiver.java import java.io.IOException ; import java.net.DatagramPacket ; import java.net.DatagramSocket ; public class Receiver { public static void main ( String [] args ) throws IOException { DatagramSocket receiver = new DatagramSocket ( 9000 ); byte [] data = new byte [ 2014 ]; DatagramPacket packet = new DatagramPacket ( data , data . length ); // \u7b49\u5f85\u63a5\u6536\u6570\u636e receiver . receive ( packet ); System . out . println ( new String ( data , 0 , packet . getLength ())); // \u5173\u95ed receiver . close (); } } Sender.java import java.net.DatagramPacket ; import java.net.DatagramSocket ; import java.net.InetAddress ; public class Sender { public static void main ( String [] args ) throws Exception { DatagramSocket sender = new DatagramSocket ( 9001 ); // \u53d1\u9001\u6570\u636e String message = \"Hello world\" ; DatagramPacket packet = new DatagramPacket ( message . getBytes (), 0 , message . length (), InetAddress . getByName ( \"localhost\" ), 9000 ); sender . send ( packet ); // \u5173\u95ed sender . close (); } }","title":"\u7b2c35 \u7ae0 \uff1a \u7f51\u7edc\u7f16\u7a0b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7f51\u7edc\u7f16\u7a0b/#35","text":"","title":"\u7b2c35 \u7ae0 \uff1a \u7f51\u7edc\u7f16\u7a0b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7f51\u7edc\u7f16\u7a0b/#152","text":"\u7f51\u7edc\u7f16\u7a0b: \u591a\u53f0\u4e3b\u673a\u4e4b\u95f4\u7684\u6570\u636e\u901a\u4fe1 \u901a\u4fe1\u534f\u8bae\uff1aIP\u3001TCP\uff08\u53ef\u9760\u6570\u636e\u8fde\u63a5\uff09\u3001UDP\uff08\u4e0d\u53ef\u9760\u6570\u636e\u8fde\u63a5\uff09 \u7f51\u7edc\u7a0b\u5e8f\u6a21\u578b: C/S Client/Server \u5ba2\u6237\u7aef/\u670d\u52a1\u7aef \u5b89\u5168\u6027\u9ad8 \u5f00\u53d1\u6210\u672c\u9ad8 B/S Browser/Server \u6d4f\u89c8\u5668/\u670d\u52a1\u5668 \u5b89\u5168\u6027\u8f83\u4f4e \u5f00\u53d1\u6210\u672c\u4f4e \u76ee\u524d\u4ee5B/S \u7ed3\u6784\u4e3a\u4e3b","title":"152 \u7f51\u7edc\u7f16\u7a0b\u7b80\u4ecb"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7f51\u7edc\u7f16\u7a0b/#153-echo","text":"ServerSocket\u4e0eSocket ServerSocket \u8bbe\u7f6e\u670d\u52a1\u5668\u76d1\u542c\u7aef\u53e3 Socket \u8bbe\u7f6e\u8981\u8fde\u63a5\u670d\u52a1\u5668\u7684ip\u548c\u7aef\u53e3 \u5b9e\u73b0\u4e00\u4e2a\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u7aef\u901a\u4fe1 Echo\u670d\u52a1 Server.java import java.io.IOException ; import java.io.PrintWriter ; import java.net.ServerSocket ; import java.net.Socket ; import java.util.Scanner ; public class Server { public static void main ( String [] args ) throws IOException { // \u8bbe\u7f6e\u670d\u52a1\u5668\u76d1\u542c\u7aef\u53e3 ServerSocket server = new ServerSocket ( 8080 ); System . out . println ( \"\u670d\u52a1\u542f\u52a8\u3002\u3002\u3002\" ); // \u63a5\u6536\u5ba2\u6237\u7aef\u8fde\u63a5 Socket client = server . accept (); // \u63a5\u6536\u5ba2\u6237\u7aef\u6d88\u606f Scanner scanner = new Scanner ( client . getInputStream ()); scanner . useDelimiter ( \"\\n\" ); // \u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u6570\u636e PrintWriter out = new PrintWriter ( client . getOutputStream ()); // \u7ed3\u675f\u6807\u5fd7 boolean flag = true ; while ( flag ) { if ( scanner . hasNext ()) { // \u8bfb\u53d6\u5ba2\u6237\u7aef\u6570\u636e String message = scanner . next (); System . out . println ( \"\u6536\u5230: \" + message ); // \u7ed3\u675f\u6807\u5fd7 if ( \"bye\" . equalsIgnoreCase ( message )) { flag = false ; } // \u53d1\u9001\u6570\u636e\u7ed9\u5ba2\u6237\u7aef out . println ( \"[echo] \" + message ); out . flush (); } } // \u5173\u95ed out . close (); scanner . close (); client . close (); server . close (); } } Client.java import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.io.PrintWriter ; import java.net.Socket ; import java.util.Scanner ; public class Client { private final static BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in )); public static void main ( String [] args ) throws IOException { // \u8fde\u63a5\u670d\u52a1\u5668 Socket client = new Socket ( \"localhost\" , 8080 ); // \u63a5\u6536\u670d\u52a1\u5668\u4fe1\u606f Scanner scanner = new Scanner ( client . getInputStream ()); scanner . useDelimiter ( \"\\n\" ); // \u5411\u670d\u52a1\u5668\u53d1\u9001\u4fe1\u606f PrintWriter out = new PrintWriter ( client . getOutputStream ()); // \u7ed3\u675f\u6807\u5fd7 boolean flag = true ; while ( flag ) { // \u8bfb\u53d6\u63a7\u5236\u53f0\u8f93\u5165\uff0c\u53d1\u9001\u7ed9\u670d\u52a1\u5668 String message = getInput ( \"\u8bf7\u8f93\u5165\uff1a\" ); System . out . println ( \"\u53d1\u9001\uff1a\" + message ); out . println ( message ); out . flush (); // \u63a5\u6536\u670d\u52a1\u7aef\u8fd4\u56de\u7684\u6570\u636e if ( scanner . hasNext ()) { System . out . println ( \"\u8fd4\u56de\uff1a\" + scanner . next ()); } // \u7ed3\u675f\u6807\u5fd7 if ( \"bye\" . equalsIgnoreCase ( message )) { flag = false ; } } // \u5173\u95ed\u64cd\u4f5c out . close (); scanner . close (); client . close (); } // \u63a5\u6536\u63a7\u5236\u53f0\u8f93\u5165 public static String getInput ( String prompt ) throws IOException { System . out . println ( prompt ); return reader . readLine (); } }","title":"153 Echo\u7a0b\u5e8f\u6a21\u578b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7f51\u7edc\u7f16\u7a0b/#154-bio","text":"\u591a\u7ebf\u7a0b\u63a5\u6536\u591a\u4e2a\u5ba2\u6237\u7aef\u8fde\u63a5 \u53ea\u7528\u4fee\u6539\u670d\u52a1\u7aef\u4ee3\u7801 Server.java import java.io.IOException ; import java.io.PrintWriter ; import java.net.ServerSocket ; import java.net.Socket ; import java.util.Scanner ; public class Server { public static class ClientThread implements Runnable { private Socket client = null ; private Scanner scanner = null ; private PrintWriter out = null ; private boolean flag = true ; // \u7ed3\u675f\u6807\u5fd7 ClientThread ( Socket client ) throws IOException { this . client = client ; // \u63a5\u6536\u5ba2\u6237\u7aef\u6d88\u606f this . scanner = new Scanner ( client . getInputStream ()); this . scanner . useDelimiter ( \"\\n\" ); // \u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u6570\u636e this . out = new PrintWriter ( client . getOutputStream ()); } @Override public void run () { while ( this . flag ) { if ( this . scanner . hasNext ()) { // \u8bfb\u53d6\u5ba2\u6237\u7aef\u6570\u636e String message = this . scanner . next (); System . out . println ( \"\u6536\u5230: \" + Thread . currentThread () + message ); // \u7ed3\u675f\u6807\u5fd7 if ( \"bye\" . equalsIgnoreCase ( message )) { this . flag = false ; } // \u53d1\u9001\u6570\u636e\u7ed9\u5ba2\u6237\u7aef this . out . println ( \"[echo] \" + message ); this . out . flush (); } } this . out . close (); this . scanner . close (); try { this . client . close (); } catch ( IOException e ) { e . printStackTrace (); } } } public static void main ( String [] args ) throws IOException { // \u8bbe\u7f6e\u670d\u52a1\u5668\u76d1\u542c\u7aef\u53e3 ServerSocket server = new ServerSocket ( 8080 ); System . out . println ( \"\u670d\u52a1\u542f\u52a8\u3002\u3002\u3002\" ); while ( true ) { // \u63a5\u6536\u5ba2\u6237\u7aef\u8fde\u63a5 Socket client = server . accept (); new Thread ( new ClientThread ( client )). start (); } // \u5173\u95ed // server.close(); } }","title":"154 BIO\u5904\u7406\u6a21\u578b"},{"location":"Java/Java\u8bed\u8a00\u57fa\u7840/3-Java\u9ad8\u7ea7\u7f16\u7a0b-\u7f51\u7edc\u7f16\u7a0b/#155-udp","text":"UDP \u57fa\u4e8e\u6570\u636e\u62a5\u5b9e\u73b0 TCP\u8981\u4fdd\u8bc1\u53ef\u9760\u8fde\u63a5\uff0c\u9700\u8981\u7684\u670d\u52a1\u5668\u8d44\u6e90\u5c31\u591a \u4e0d\u7ba1\u5ba2\u6237\u7aef\u662f\u5426\u63a5\u6536\u5230 Receiver.java import java.io.IOException ; import java.net.DatagramPacket ; import java.net.DatagramSocket ; public class Receiver { public static void main ( String [] args ) throws IOException { DatagramSocket receiver = new DatagramSocket ( 9000 ); byte [] data = new byte [ 2014 ]; DatagramPacket packet = new DatagramPacket ( data , data . length ); // \u7b49\u5f85\u63a5\u6536\u6570\u636e receiver . receive ( packet ); System . out . println ( new String ( data , 0 , packet . getLength ())); // \u5173\u95ed receiver . close (); } } Sender.java import java.net.DatagramPacket ; import java.net.DatagramSocket ; import java.net.InetAddress ; public class Sender { public static void main ( String [] args ) throws Exception { DatagramSocket sender = new DatagramSocket ( 9001 ); // \u53d1\u9001\u6570\u636e String message = \"Hello world\" ; DatagramPacket packet = new DatagramPacket ( message . getBytes (), 0 , message . length (), InetAddress . getByName ( \"localhost\" ), 9000 ); sender . send ( packet ); // \u5173\u95ed sender . close (); } }","title":"155 UDP\u7a0b\u5e8f"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/","text":"Java \u9762\u8bd5\u6280\u5de7 1-\u9762\u8bd5\u76f8\u5173\u95ee\u9898 2-\u8bed\u8a00\u57fa\u7840-1 2-\u8bed\u8a00\u57fa\u7840-2 3-\u6570\u636e\u5e93\u5f00\u53d1 4-\u5f00\u53d1\u5de5\u5177\u53ca\u6846\u67b6","title":"Java \u9762\u8bd5\u6280\u5de7"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/#java","text":"1-\u9762\u8bd5\u76f8\u5173\u95ee\u9898 2-\u8bed\u8a00\u57fa\u7840-1 2-\u8bed\u8a00\u57fa\u7840-2 3-\u6570\u636e\u5e93\u5f00\u53d1 4-\u5f00\u53d1\u5de5\u5177\u53ca\u6846\u67b6","title":"Java \u9762\u8bd5\u6280\u5de7"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/1-\u9762\u8bd5\u76f8\u5173\u95ee\u9898/","text":"\u5c31\u4e1a\u60c5\u51b5 \u4f20\u7edf\u5f00\u53d1 SSH \u6846\u67b6\u5f00\u53d1 \u67b6\u6784\u5f00\u53d1 \u65b0\u5174\u4e92\u8054\u7f51\uff1a \u96c6\u7fa4\u67b6\u6784\u3001\u9ad8\u5e76\u53d1\u3001\u5206\u5e03\u5f0f\u3001\u9ad8\u53ef\u7528\u3001\u6027\u80fd\u8c03\u4f18 \u601d\u8003 \u91cd\u590d \u52a8\u6001\u6269\u5145 \u8db3\u591f\u5b89\u5168 \u6280\u672f\u6808\uff1a SSH SSM Linux Maven Web \u5f00\u53d1\uff08JSP, Servlet\uff09 \u5b66\u4e60\u6377\u5f84 JSP + JavaBean MVC AJax Json JQuery Bootstrap Maven Git CURD \u5206\u9875 \u4e0a\u4f20 \u6846\u67b6\u5b66\u4e60 Spring SpringMVC Shiro MyBatis \u5fae\u670d\u52a1 SpringBoot \u5e38\u89c1\u9762\u8bd5\u9898 1\u3001Java \u7c7b\u96c6 List Set Map Iterator Enumeration List \u7d22\u5f15\u53d6\u503c ArrayList \u5305\u88c5\u4e86\u6570\u7ec4\u7684\u96c6\u5408\uff0c\u5e38\u7528\uff0c\u6570\u7ec4\u53ef\u53d8 LinkedList \u94fe\u8868\u5b9e\u73b0\uff0c\u641c\u7d22\u6570\u636e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a n Set HashSet \u65e0\u5e8f \u91cd\u590d\u5224\u65ad\u4f9d\u636e\uff1ahashCode() \u4e0e equals TreeSet \u6709\u5e8f \u4f9d\u9760 Comparable \u6392\u5e8f LinkedHashSet \u6709\u5e8f \u7ee7\u627f HashSet Map \u8f93\u51fa Map.Entry Iterator HashMap WeakHashMap \u5f31\u5f15\u7528 \u7f16\u5199\u94fe\u8868\u548c\u4e8c\u53c9\u6811 2\u3001\u5b57\u7b26\u4e32\u54c8\u5e0c\u76f8\u7b49\uff0cequals \u76f8\u7b49\u5417\uff1f\u53cd\u8fc7\u6765 \uff081\uff09\u76f4\u63a5\u8d4b\u503c String str1 = \"hello\" ; String str2 = \"hello\" ; System . out . println ( str1 . equals ( str2 )); // true \uff082\uff09\u6784\u9020\u65b9\u6cd5 String str1 = new String ( \"hello\" ); String str2 = new String ( \"hello\" ); System . out . println ( str1 . equals ( str2 )); // true \uff083\uff09StringBuffer String str1 = new StringBuffer ( \"hello\" ). toString (); String str2 = \"hello\" ; System . out . println ( str1 . equals ( str2 )); // true \u5b57\u7b26\u4e32\u54c8\u5e0c\u76f8\u7b49\uff0cequals \u76f8\u7b49 \u53cd\u8fc7\u6765\u6210\u7acb \u6e90\u7801\u5b9e\u73b0 public boolean equals ( Object anObject ) { if ( this == anObject ) { return true ; } if ( anObject instanceof String ) { String anotherString = ( String ) anObject ; int n = value . length ; if ( n == anotherString . value . length ) { char v1 [] = value ; char v2 [] = anotherString . value ; int i = 0 ; while ( n -- != 0 ) { if ( v1 [ i ] != v2 [ i ]) return false ; i ++; } return true ; } } return false ; } public int hashCode () { int h = hash ; if ( h == 0 && value . length > 0 ) { char val [] = value ; for ( int i = 0 ; i < value . length ; i ++) { h = 31 * h + val [ i ]; } hash = h ; } return h ; } 3\u3001Spring \u5de5\u4f5c\u539f\u7406\uff0c\u63a7\u5236\u53cd\u8f6c\u600e\u4e48\u5b9e\u73b0\uff1f\u7f16\u7801\u8fc7\u6ee4\u5668\u5b9e\u73b0 Spring \u6838\u5fc3\u7ec4\u6210\uff1a IOC&DI\uff08\u5de5\u5382\u8bbe\u8ba1\uff09 AOP(\u52a8\u6001\u4ee3\u7406\u6a21\u5f0f) XML \u89e3\u6790\u5904\u7406: DOM4J Annotation \u5fc5\u987b\u8981\u6c42\u6709\u4e00\u4e2a\u5bb9\u5668 \u7f16\u7801\u8fc7\u6ee4\u5668\uff1a Struts 1.x SpringMVC,JSP + Servlet \u90fd\u53ef\u4ee5\u901a\u8fc7\u8fc7\u6ee4\u5668\u5b8c\u6210 Struts 2.x \u5fc5\u987b\u901a\u8fc7\u62e6\u622a\u5668\u5b8c\u6210 \u5b9e\u73b0\uff1a \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u7f16\u7801\uff0c\u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a8\u6001\u53d6\u5f97\u8bbe\u7f6e\u7684\u7f16\u7801 \u9700\u8981\u8bbe\u7f6e\u4e24\u4e2a\u7f16\u7801\uff1a\u8bf7\u6c42\u7f16\u7801\uff0c\u54cd\u5e94\u7f16\u7801 4\u3001\u6846\u67b6\u6e90\u7801 \u6846\u67b6\u6838\u5fc3\u601d\u60f3\uff1a\u53cd\u5c04+XML\uff08annotation\uff09 Struts2 \u8bf7\u6c42\u4ea4\u7ed9\u8fc7\u6ee4\u5668\u6267\u884c\uff0c\u8fc7\u6ee4\u5668\u4ea4\u7ed9\u63a7\u5236\u5668\u5b8c\u6210\uff08action\uff09 SpringMVC \u672c\u8d28\u662f\u4e00\u4e2a DispatcherServlet Hibernate \u53cd\u5c04\u548c DOM4J \u89e3\u6790\u5904\u7406 5\u3001\u52a8\u6001\u4ee3\u7406 \u76f4\u63a5\u4f7f\u7528 InvocationHandler \u63a5\u53e3\u8fdb\u884c\u5b9e\u73b0\uff0c\u540c\u65f6\u5229\u7528 Proxy \u7c7b\u8bbe\u7f6e\u52a8\u6001\u8bf7\u6c42\u5bf9\u8c61 \u4f7f\u7528 CGLIB \u6765\u907f\u514d\"\u4ee3\u7406\u8bbe\u8ba1\u6a21\u5f0f\u9700\u8981\u4f7f\u7528\u63a5\u53e3\u5b9e\u73b0\"\u7684\u9650\u5236 6\u3001action \u662f\u5355\u5b9e\u4f8b\u8fd8\u662f\u591a\u5b9e\u4f8b Struts2 \u548c SpringMVC \u4e2d\u7684 Action \u90fd\u662f\u591a\u5b9e\u4f8b Struts1 \u7684 Action \u662f\u5355\u5b9e\u4f8b Struts2 \u548c SpringMVC \u53ef\u4ee5\u901a\u8fc7@Scope=\"prototype\"\u8fdb\u884c\u63a7\u5236 7\u3001\u600e\u4e48\u914d\u7f6e Bean \u4e3b\u8981\u5728 Spring \u91cc\u9762\uff0c\u91cd\u70b9\u7531 xml \u548c annotation \u626b\u63cf\u8d1f\u8d23 xml \u4e2d\u76f4\u63a5\u4f7f\u7528 <bean> , Spring \u5bb9\u5668\u542f\u52a8\u65f6\u5c31\u53ef\u4ee5\u8fdb\u884c\u521d\u59cb\u5316 Annitation \u5fc5\u987b\u8bbe\u7f6e context \u547d\u540d\u7a7a\u95f4\uff0c\u800c\u540e\u8fdb\u884c\u626b\u63cf\u5305\u7684\u914d\u7f6e 8\u3001\u4fee\u6539\u5355\u5b9e\u4f8b\u591a\u5b9e\u4f8b @Scope=\"prototype\" 9\u3001Java \u7684\u8bbe\u8ba1\u6a21\u5f0f \u5de5\u5382 \u4ee3\u7406 \u5355\u4f8b Runtime \u5408\u6210 \u95e8\u9762 JDBC \u88c5\u9970 PrintStream\u3001PrintWrite \u6a21\u677f Servlet 10\u3001\u4e8b\u52a1\u63a7\u5236 MySQL \u6570\u636e\u5e93\u5f15\u64ce type=innodb \u4e8b\u52a1\u7684\u6838\u5fc3\u63a7\u5236: commit rollback Spring \u5229\u7528 AspectJ \u8bbe\u7f6e AOP \u5207\u9762\uff0c\u8fdb\u884c\u58f0\u660e\u5f0f\u4e8b\u52a1\u63a7\u5236 11\u3001\u810f\u8bfb\u3001\u5e7b\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb \u810f\u8bfb\uff1a\u8bfb\u53d6\u672a\u63d0\u4ea4\u6570\u636e \u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\u53e6\u5916\u4e00\u4e2a\u4e8b\u52a1\u8fd8\u6ca1\u6709\u63d0\u4ea4\u7684\u6570\u636e \u8bfb\u53d6\u4e86\u672a\u63d0\u4ea4\u7684\u65b0\u4e8b\u7269\uff0c\u7136\u540e\u88ab\u56de\u6eda\u4e86 \u5e7b\u8bfb\uff1a\u524d\u540e\u591a\u6b21\u8bfb\u53d6\uff0c\u6570\u636e\u603b\u91cf\u4e0d\u4e00\u81f4 \u5f53\u4e8b\u52a1\u4e0d\u72ec\u7acb\u6267\u884c\u65f6\uff0c\u63d2\u5165\u6216\u8005\u5220\u9664\u53e6\u4e00\u4e2a\u4e8b\u52a1\u5f53\u524d\u5f71\u54cd\u7684\u6570\u636e \u8bfb\u53d6\u4e86\u63d0\u4ea4\u7684\u65b0\u4e8b\u7269\uff0c\u6307\u589e\u5220\u64cd\u4f5c \u4e0d\u53ef\u91cd\u590d\u8bfb\uff1a\u524d\u540e\u591a\u6b21\u8bfb\u53d6\uff0c\u6570\u636e\u5185\u5bb9\u4e0d\u4e00\u81f4 \u540c\u4e00\u4e2a\u4e8b\u52a1\u5185\uff0c\u4e24\u6b21\u76f8\u540c\u7684\u67e5\u8be2\u8fd4\u56de\u4e86\u4e0d\u540c\u7684\u7ed3\u679c \u8bfb\u53d6\u4e86\u63d0\u4ea4\u7684\u65b0\u4e8b\u7269\uff0c\u6307\u66f4\u65b0\u64cd\u4f5c 12\u3001Spring 7 \u4e2a\u4e8b\u52a1\u4f20\u64ad\u884c\u4e3a REQUIRED \u5982\u679c\u5b58\u5728\u4e00\u4e2a\u4e8b\u52a1\uff0c\u5219\u652f\u6301\u5f53\u524d\u4e8b\u52a1\u3002 \u5982\u679c\u6ca1\u6709\u4e8b\u52a1\uff0c\u5219\u5f00\u542f\u65b0\u4e8b\u52a1 13\u3001\u8d2d\u7269\u8f66\u5b9e\u73b0 \u57fa\u4e8e\uff1a Session \u6d4f\u89c8\u5668\u5173\u95ed\u540e\u6d88\u5931 Cookie \u6570\u636e\u4fdd\u5b58\u5728\u672c\u5730\uff0c\u5982\u679c\u5207\u6362\u5230\u624b\u673a\u65e0\u6548 \u6570\u636e\u5e93 \u53ef\u4ee5\u5728\u4e0d\u540c\u7ec8\u7aef\u4e0a\u6301\u7eed\u64cd\u4f5c \u5b9e\u73b0\uff1a Ajax \u5982\u679c\u8bbf\u95ee\u9891\u7e41\u9700\u8981\u8bbe\u8ba1\u8d2d\u7269\u8f66\u5b50\u7cfb\u7edf\u6a21\u5757 14\u3001\u7edf\u8ba1\u4e00\u5929\u7684\u8ba2\u5355\u91cf \u5982\u679c\u4e00\u5929 1w \u6761\uff0c\u968f\u4fbf\u5904\u7406 \u5343\u4e07\u7ea7\u4e0d\u80fd\u4f7f\u7528 count \u548c where \u5904\u7406\u65b9\u5f0f\u5206\u65f6\u7edf\u8ba1\uff0c\u6587\u4ef6\u8ba1\u6570\uff08\u8003\u8651\u540c\u6b65\uff09\uff0c\u4e0d\u80fd\u7528\u4e8e\u62a2\u8d2d\u73af\u8282 15\u3001IN\u3001HAVING\u3001EXISIT IN \u5224\u65ad\u5177\u4f53\u7684\u51e0\u9879\u6570\u636e HAVING \u9488\u5bf9\u5206\u7ec4\u540e\u6570\u636e\u7b5b\u9009\uff0c\u4f9d\u7136\u8981\u4f7f\u7528\u7edf\u8ba1\u51fd\u6570 EXISIT \u5224\u65ad\u5b50\u67e5\u8be2\u662f\u5426\u6709\u6570\u636e 16\u3001\u5b9a\u65f6\u4efb\u52a1 Java\uff1aTimeTask Timer \u53ea\u80fd\u591f\u505a\u9891\u7387\u64cd\u4f5c \u4f7f\u7528 quartz \u51c6\u786e\u65f6\u95f4\u70b9\u89e6\u53d1 17\u3001JVM \u5185\u5b58\u7ba1\u7406 \u5185\u5b58\u5206\u4e3a\uff1a\u6808\uff08Java \u865a\u62df\u673a\u6808\uff09\u3001\u5806\u3001\u7a0b\u5e8f\u8ba1\u6570\u5668\u3001\u65b9\u6cd5\u533a\u3001\u672c\u5730\u65b9\u6cd5\u6808 \u5783\u573e\u5904\u7406\u64cd\u4f5c\u6307\u7684\u662f\u5806\u5185\u5b58\uff1a\u5e74\u8f7b\u4ee3\uff0c\u8001\u5e74\u4ee3\uff0c\u6c38\u751f\u4ee3\uff08JDK1.8 \u79fb\u9664\uff09 18\u3001\u5806\u5185\u5b58\u3001\u6808\u5185\u5b58\u6ea2\u51fa \u6808\u6ea2\u51fa\uff1a\u6808\u5e27 \u5806\u6ea2\u51fa\uff1aOutOfMemoryError 19\u3001\u7f13\u5b58 \u76ee\u7684\uff1a\u63d0\u9ad8\u67e5\u8be2\u6548\u7387 \u7f13\u5b58\u7ec4\u4ef6\uff1a EhCache \u6570\u636e\u5e93 OSCache \u9875\u9762 \u7f13\u5b58\u6570\u636e\u5e93 redis \u6570\u636e\u4fdd\u5b58\u5230\u78c1\u76d8\uff0c15w/s memcached 20\u3001\u7edf\u8ba1\u6240\u6709\u91cd\u540d\u7528\u6237 \u6570\u636e\u91cf\u5927\u8003\u8651\u4f4d\u56fe\u7d22\u5f15 \u6570\u91cf\u91cf\u5c0f\u4f7f\u7528\u5206\u7ec4\u7edf\u8ba1 22\u3001\u4f7f\u7528 InputStream \u7528\u4ec0\u4e48\u65b9\u6cd5 read() 23\u3001JQuery \u7ed1\u5b9a\u4e8b\u4ef6 $ . on ( \"click\" , function () {}); 24\u3001JQuery \u4f7f\u7528 Ajax \u7684\u5904\u7406\u51fd\u6570 $ajax (), $ . get (), $ . post (), $ . jsonp (); 25\u3001Spring \u63a7\u5236\u5c42\u8fd4\u56de\u4ec0\u4e48 String, ModelAndView 26\u3001WebService web \u670d\u52a1\u8c03\u7528\uff0cCXF, Jersey 27\u3001RPC \u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528 28\u3001Spring \u81ea\u52a8\u6ce8\u5165\u6ce8\u89e3 @Component @Service @Repository @Controller 29\u3001\u7f13\u5b58\u662f\u4ec0\u4e48 ORM \u7f13\u5b58\u6709\u4e24\u79cd\uff08\u4e00\u7ea7\uff0c\u4e8c\u7ea7\uff09\uff0c\u4e3b\u8981\u4f7f\u7528 EHCache \u7ec4\u4ef6 \u6e90\u7801\u95ee\u9898 1\u3001\u6846\u67b6\u6e90\u7801 2\u3001\u5e95\u5c42\u5b9e\u73b0\u7b97\u6cd5 HashMap \u5728\u6570\u636e\u91cf\u5927\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u8f6c\u6362\u4e3a\u7ea2\u9ed1\u6811 \u6570\u7ec4\u3001\u961f\u5217\u3001\u94fe\u8868\u3001\u6811\u3001\u56fe \u9879\u76ee\uff1a \u516c\u8ba4\u9879\u76ee\uff1a\u4f20\u7edf\u529e\u516c\u7cfb\u7edf\uff0c\u7ba1\u7406\u5e73\u53f0\uff0cERP CRM OA\uff0c\u4e0d\u7528\u8003\u8651\u7528\u6237\u91cf \u4e92\u8054\u7f51\uff1a\u4ea7\u54c1\uff0c\u7535\u5546\uff0c\u8003\u8651\u7528\u6237\u91cf\u5927 \u4e13\u4e1a\u80cc\u666f\uff1a\u6570\u636e\u91c7\u96c6\uff0c\u5206\u6790\u64cd\u4f5c","title":"1 \u9762\u8bd5\u76f8\u5173\u95ee\u9898"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/1-\u9762\u8bd5\u76f8\u5173\u95ee\u9898/#_1","text":"\u4f20\u7edf\u5f00\u53d1 SSH \u6846\u67b6\u5f00\u53d1 \u67b6\u6784\u5f00\u53d1 \u65b0\u5174\u4e92\u8054\u7f51\uff1a \u96c6\u7fa4\u67b6\u6784\u3001\u9ad8\u5e76\u53d1\u3001\u5206\u5e03\u5f0f\u3001\u9ad8\u53ef\u7528\u3001\u6027\u80fd\u8c03\u4f18 \u601d\u8003 \u91cd\u590d \u52a8\u6001\u6269\u5145 \u8db3\u591f\u5b89\u5168 \u6280\u672f\u6808\uff1a SSH SSM Linux Maven Web \u5f00\u53d1\uff08JSP, Servlet\uff09 \u5b66\u4e60\u6377\u5f84 JSP + JavaBean MVC AJax Json JQuery Bootstrap Maven Git CURD \u5206\u9875 \u4e0a\u4f20 \u6846\u67b6\u5b66\u4e60 Spring SpringMVC Shiro MyBatis \u5fae\u670d\u52a1 SpringBoot","title":"\u5c31\u4e1a\u60c5\u51b5"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/1-\u9762\u8bd5\u76f8\u5173\u95ee\u9898/#_2","text":"1\u3001Java \u7c7b\u96c6 List Set Map Iterator Enumeration List \u7d22\u5f15\u53d6\u503c ArrayList \u5305\u88c5\u4e86\u6570\u7ec4\u7684\u96c6\u5408\uff0c\u5e38\u7528\uff0c\u6570\u7ec4\u53ef\u53d8 LinkedList \u94fe\u8868\u5b9e\u73b0\uff0c\u641c\u7d22\u6570\u636e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a n Set HashSet \u65e0\u5e8f \u91cd\u590d\u5224\u65ad\u4f9d\u636e\uff1ahashCode() \u4e0e equals TreeSet \u6709\u5e8f \u4f9d\u9760 Comparable \u6392\u5e8f LinkedHashSet \u6709\u5e8f \u7ee7\u627f HashSet Map \u8f93\u51fa Map.Entry Iterator HashMap WeakHashMap \u5f31\u5f15\u7528 \u7f16\u5199\u94fe\u8868\u548c\u4e8c\u53c9\u6811 2\u3001\u5b57\u7b26\u4e32\u54c8\u5e0c\u76f8\u7b49\uff0cequals \u76f8\u7b49\u5417\uff1f\u53cd\u8fc7\u6765 \uff081\uff09\u76f4\u63a5\u8d4b\u503c String str1 = \"hello\" ; String str2 = \"hello\" ; System . out . println ( str1 . equals ( str2 )); // true \uff082\uff09\u6784\u9020\u65b9\u6cd5 String str1 = new String ( \"hello\" ); String str2 = new String ( \"hello\" ); System . out . println ( str1 . equals ( str2 )); // true \uff083\uff09StringBuffer String str1 = new StringBuffer ( \"hello\" ). toString (); String str2 = \"hello\" ; System . out . println ( str1 . equals ( str2 )); // true \u5b57\u7b26\u4e32\u54c8\u5e0c\u76f8\u7b49\uff0cequals \u76f8\u7b49 \u53cd\u8fc7\u6765\u6210\u7acb \u6e90\u7801\u5b9e\u73b0 public boolean equals ( Object anObject ) { if ( this == anObject ) { return true ; } if ( anObject instanceof String ) { String anotherString = ( String ) anObject ; int n = value . length ; if ( n == anotherString . value . length ) { char v1 [] = value ; char v2 [] = anotherString . value ; int i = 0 ; while ( n -- != 0 ) { if ( v1 [ i ] != v2 [ i ]) return false ; i ++; } return true ; } } return false ; } public int hashCode () { int h = hash ; if ( h == 0 && value . length > 0 ) { char val [] = value ; for ( int i = 0 ; i < value . length ; i ++) { h = 31 * h + val [ i ]; } hash = h ; } return h ; } 3\u3001Spring \u5de5\u4f5c\u539f\u7406\uff0c\u63a7\u5236\u53cd\u8f6c\u600e\u4e48\u5b9e\u73b0\uff1f\u7f16\u7801\u8fc7\u6ee4\u5668\u5b9e\u73b0 Spring \u6838\u5fc3\u7ec4\u6210\uff1a IOC&DI\uff08\u5de5\u5382\u8bbe\u8ba1\uff09 AOP(\u52a8\u6001\u4ee3\u7406\u6a21\u5f0f) XML \u89e3\u6790\u5904\u7406: DOM4J Annotation \u5fc5\u987b\u8981\u6c42\u6709\u4e00\u4e2a\u5bb9\u5668 \u7f16\u7801\u8fc7\u6ee4\u5668\uff1a Struts 1.x SpringMVC,JSP + Servlet \u90fd\u53ef\u4ee5\u901a\u8fc7\u8fc7\u6ee4\u5668\u5b8c\u6210 Struts 2.x \u5fc5\u987b\u901a\u8fc7\u62e6\u622a\u5668\u5b8c\u6210 \u5b9e\u73b0\uff1a \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u7f16\u7801\uff0c\u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a8\u6001\u53d6\u5f97\u8bbe\u7f6e\u7684\u7f16\u7801 \u9700\u8981\u8bbe\u7f6e\u4e24\u4e2a\u7f16\u7801\uff1a\u8bf7\u6c42\u7f16\u7801\uff0c\u54cd\u5e94\u7f16\u7801 4\u3001\u6846\u67b6\u6e90\u7801 \u6846\u67b6\u6838\u5fc3\u601d\u60f3\uff1a\u53cd\u5c04+XML\uff08annotation\uff09 Struts2 \u8bf7\u6c42\u4ea4\u7ed9\u8fc7\u6ee4\u5668\u6267\u884c\uff0c\u8fc7\u6ee4\u5668\u4ea4\u7ed9\u63a7\u5236\u5668\u5b8c\u6210\uff08action\uff09 SpringMVC \u672c\u8d28\u662f\u4e00\u4e2a DispatcherServlet Hibernate \u53cd\u5c04\u548c DOM4J \u89e3\u6790\u5904\u7406 5\u3001\u52a8\u6001\u4ee3\u7406 \u76f4\u63a5\u4f7f\u7528 InvocationHandler \u63a5\u53e3\u8fdb\u884c\u5b9e\u73b0\uff0c\u540c\u65f6\u5229\u7528 Proxy \u7c7b\u8bbe\u7f6e\u52a8\u6001\u8bf7\u6c42\u5bf9\u8c61 \u4f7f\u7528 CGLIB \u6765\u907f\u514d\"\u4ee3\u7406\u8bbe\u8ba1\u6a21\u5f0f\u9700\u8981\u4f7f\u7528\u63a5\u53e3\u5b9e\u73b0\"\u7684\u9650\u5236 6\u3001action \u662f\u5355\u5b9e\u4f8b\u8fd8\u662f\u591a\u5b9e\u4f8b Struts2 \u548c SpringMVC \u4e2d\u7684 Action \u90fd\u662f\u591a\u5b9e\u4f8b Struts1 \u7684 Action \u662f\u5355\u5b9e\u4f8b Struts2 \u548c SpringMVC \u53ef\u4ee5\u901a\u8fc7@Scope=\"prototype\"\u8fdb\u884c\u63a7\u5236 7\u3001\u600e\u4e48\u914d\u7f6e Bean \u4e3b\u8981\u5728 Spring \u91cc\u9762\uff0c\u91cd\u70b9\u7531 xml \u548c annotation \u626b\u63cf\u8d1f\u8d23 xml \u4e2d\u76f4\u63a5\u4f7f\u7528 <bean> , Spring \u5bb9\u5668\u542f\u52a8\u65f6\u5c31\u53ef\u4ee5\u8fdb\u884c\u521d\u59cb\u5316 Annitation \u5fc5\u987b\u8bbe\u7f6e context \u547d\u540d\u7a7a\u95f4\uff0c\u800c\u540e\u8fdb\u884c\u626b\u63cf\u5305\u7684\u914d\u7f6e 8\u3001\u4fee\u6539\u5355\u5b9e\u4f8b\u591a\u5b9e\u4f8b @Scope=\"prototype\" 9\u3001Java \u7684\u8bbe\u8ba1\u6a21\u5f0f \u5de5\u5382 \u4ee3\u7406 \u5355\u4f8b Runtime \u5408\u6210 \u95e8\u9762 JDBC \u88c5\u9970 PrintStream\u3001PrintWrite \u6a21\u677f Servlet 10\u3001\u4e8b\u52a1\u63a7\u5236 MySQL \u6570\u636e\u5e93\u5f15\u64ce type=innodb \u4e8b\u52a1\u7684\u6838\u5fc3\u63a7\u5236: commit rollback Spring \u5229\u7528 AspectJ \u8bbe\u7f6e AOP \u5207\u9762\uff0c\u8fdb\u884c\u58f0\u660e\u5f0f\u4e8b\u52a1\u63a7\u5236 11\u3001\u810f\u8bfb\u3001\u5e7b\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb \u810f\u8bfb\uff1a\u8bfb\u53d6\u672a\u63d0\u4ea4\u6570\u636e \u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\u53e6\u5916\u4e00\u4e2a\u4e8b\u52a1\u8fd8\u6ca1\u6709\u63d0\u4ea4\u7684\u6570\u636e \u8bfb\u53d6\u4e86\u672a\u63d0\u4ea4\u7684\u65b0\u4e8b\u7269\uff0c\u7136\u540e\u88ab\u56de\u6eda\u4e86 \u5e7b\u8bfb\uff1a\u524d\u540e\u591a\u6b21\u8bfb\u53d6\uff0c\u6570\u636e\u603b\u91cf\u4e0d\u4e00\u81f4 \u5f53\u4e8b\u52a1\u4e0d\u72ec\u7acb\u6267\u884c\u65f6\uff0c\u63d2\u5165\u6216\u8005\u5220\u9664\u53e6\u4e00\u4e2a\u4e8b\u52a1\u5f53\u524d\u5f71\u54cd\u7684\u6570\u636e \u8bfb\u53d6\u4e86\u63d0\u4ea4\u7684\u65b0\u4e8b\u7269\uff0c\u6307\u589e\u5220\u64cd\u4f5c \u4e0d\u53ef\u91cd\u590d\u8bfb\uff1a\u524d\u540e\u591a\u6b21\u8bfb\u53d6\uff0c\u6570\u636e\u5185\u5bb9\u4e0d\u4e00\u81f4 \u540c\u4e00\u4e2a\u4e8b\u52a1\u5185\uff0c\u4e24\u6b21\u76f8\u540c\u7684\u67e5\u8be2\u8fd4\u56de\u4e86\u4e0d\u540c\u7684\u7ed3\u679c \u8bfb\u53d6\u4e86\u63d0\u4ea4\u7684\u65b0\u4e8b\u7269\uff0c\u6307\u66f4\u65b0\u64cd\u4f5c 12\u3001Spring 7 \u4e2a\u4e8b\u52a1\u4f20\u64ad\u884c\u4e3a REQUIRED \u5982\u679c\u5b58\u5728\u4e00\u4e2a\u4e8b\u52a1\uff0c\u5219\u652f\u6301\u5f53\u524d\u4e8b\u52a1\u3002 \u5982\u679c\u6ca1\u6709\u4e8b\u52a1\uff0c\u5219\u5f00\u542f\u65b0\u4e8b\u52a1 13\u3001\u8d2d\u7269\u8f66\u5b9e\u73b0 \u57fa\u4e8e\uff1a Session \u6d4f\u89c8\u5668\u5173\u95ed\u540e\u6d88\u5931 Cookie \u6570\u636e\u4fdd\u5b58\u5728\u672c\u5730\uff0c\u5982\u679c\u5207\u6362\u5230\u624b\u673a\u65e0\u6548 \u6570\u636e\u5e93 \u53ef\u4ee5\u5728\u4e0d\u540c\u7ec8\u7aef\u4e0a\u6301\u7eed\u64cd\u4f5c \u5b9e\u73b0\uff1a Ajax \u5982\u679c\u8bbf\u95ee\u9891\u7e41\u9700\u8981\u8bbe\u8ba1\u8d2d\u7269\u8f66\u5b50\u7cfb\u7edf\u6a21\u5757 14\u3001\u7edf\u8ba1\u4e00\u5929\u7684\u8ba2\u5355\u91cf \u5982\u679c\u4e00\u5929 1w \u6761\uff0c\u968f\u4fbf\u5904\u7406 \u5343\u4e07\u7ea7\u4e0d\u80fd\u4f7f\u7528 count \u548c where \u5904\u7406\u65b9\u5f0f\u5206\u65f6\u7edf\u8ba1\uff0c\u6587\u4ef6\u8ba1\u6570\uff08\u8003\u8651\u540c\u6b65\uff09\uff0c\u4e0d\u80fd\u7528\u4e8e\u62a2\u8d2d\u73af\u8282 15\u3001IN\u3001HAVING\u3001EXISIT IN \u5224\u65ad\u5177\u4f53\u7684\u51e0\u9879\u6570\u636e HAVING \u9488\u5bf9\u5206\u7ec4\u540e\u6570\u636e\u7b5b\u9009\uff0c\u4f9d\u7136\u8981\u4f7f\u7528\u7edf\u8ba1\u51fd\u6570 EXISIT \u5224\u65ad\u5b50\u67e5\u8be2\u662f\u5426\u6709\u6570\u636e 16\u3001\u5b9a\u65f6\u4efb\u52a1 Java\uff1aTimeTask Timer \u53ea\u80fd\u591f\u505a\u9891\u7387\u64cd\u4f5c \u4f7f\u7528 quartz \u51c6\u786e\u65f6\u95f4\u70b9\u89e6\u53d1 17\u3001JVM \u5185\u5b58\u7ba1\u7406 \u5185\u5b58\u5206\u4e3a\uff1a\u6808\uff08Java \u865a\u62df\u673a\u6808\uff09\u3001\u5806\u3001\u7a0b\u5e8f\u8ba1\u6570\u5668\u3001\u65b9\u6cd5\u533a\u3001\u672c\u5730\u65b9\u6cd5\u6808 \u5783\u573e\u5904\u7406\u64cd\u4f5c\u6307\u7684\u662f\u5806\u5185\u5b58\uff1a\u5e74\u8f7b\u4ee3\uff0c\u8001\u5e74\u4ee3\uff0c\u6c38\u751f\u4ee3\uff08JDK1.8 \u79fb\u9664\uff09 18\u3001\u5806\u5185\u5b58\u3001\u6808\u5185\u5b58\u6ea2\u51fa \u6808\u6ea2\u51fa\uff1a\u6808\u5e27 \u5806\u6ea2\u51fa\uff1aOutOfMemoryError 19\u3001\u7f13\u5b58 \u76ee\u7684\uff1a\u63d0\u9ad8\u67e5\u8be2\u6548\u7387 \u7f13\u5b58\u7ec4\u4ef6\uff1a EhCache \u6570\u636e\u5e93 OSCache \u9875\u9762 \u7f13\u5b58\u6570\u636e\u5e93 redis \u6570\u636e\u4fdd\u5b58\u5230\u78c1\u76d8\uff0c15w/s memcached 20\u3001\u7edf\u8ba1\u6240\u6709\u91cd\u540d\u7528\u6237 \u6570\u636e\u91cf\u5927\u8003\u8651\u4f4d\u56fe\u7d22\u5f15 \u6570\u91cf\u91cf\u5c0f\u4f7f\u7528\u5206\u7ec4\u7edf\u8ba1 22\u3001\u4f7f\u7528 InputStream \u7528\u4ec0\u4e48\u65b9\u6cd5 read() 23\u3001JQuery \u7ed1\u5b9a\u4e8b\u4ef6 $ . on ( \"click\" , function () {}); 24\u3001JQuery \u4f7f\u7528 Ajax \u7684\u5904\u7406\u51fd\u6570 $ajax (), $ . get (), $ . post (), $ . jsonp (); 25\u3001Spring \u63a7\u5236\u5c42\u8fd4\u56de\u4ec0\u4e48 String, ModelAndView 26\u3001WebService web \u670d\u52a1\u8c03\u7528\uff0cCXF, Jersey 27\u3001RPC \u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528 28\u3001Spring \u81ea\u52a8\u6ce8\u5165\u6ce8\u89e3 @Component @Service @Repository @Controller 29\u3001\u7f13\u5b58\u662f\u4ec0\u4e48 ORM \u7f13\u5b58\u6709\u4e24\u79cd\uff08\u4e00\u7ea7\uff0c\u4e8c\u7ea7\uff09\uff0c\u4e3b\u8981\u4f7f\u7528 EHCache \u7ec4\u4ef6","title":"\u5e38\u89c1\u9762\u8bd5\u9898"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/1-\u9762\u8bd5\u76f8\u5173\u95ee\u9898/#_3","text":"1\u3001\u6846\u67b6\u6e90\u7801 2\u3001\u5e95\u5c42\u5b9e\u73b0\u7b97\u6cd5 HashMap \u5728\u6570\u636e\u91cf\u5927\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u8f6c\u6362\u4e3a\u7ea2\u9ed1\u6811 \u6570\u7ec4\u3001\u961f\u5217\u3001\u94fe\u8868\u3001\u6811\u3001\u56fe \u9879\u76ee\uff1a \u516c\u8ba4\u9879\u76ee\uff1a\u4f20\u7edf\u529e\u516c\u7cfb\u7edf\uff0c\u7ba1\u7406\u5e73\u53f0\uff0cERP CRM OA\uff0c\u4e0d\u7528\u8003\u8651\u7528\u6237\u91cf \u4e92\u8054\u7f51\uff1a\u4ea7\u54c1\uff0c\u7535\u5546\uff0c\u8003\u8651\u7528\u6237\u91cf\u5927 \u4e13\u4e1a\u80cc\u666f\uff1a\u6570\u636e\u91c7\u96c6\uff0c\u5206\u6790\u64cd\u4f5c","title":"\u6e90\u7801\u95ee\u9898"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/","text":"\u8bed\u8a00\u57fa\u7840 default \u5173\u952e\u5b57 \u4e00\u822c\u7528\u4e8e switch int flag = 2 ; switch ( flag ){ case 1 : System . out . println ( \"1\" ); break ; case 2 : System . out . println ( \"2\" ); break ; default : System . out . println ( \"default\" ); } JDK 1.8 \u4e4b\u540e \u53ef\u4ee5\u5728\u63a5\u53e3\u4e2d\u5b9a\u4e49\u9ed8\u8ba4\u65b9\u6cd5 package demo ; interface Message { // \u62bd\u8c61\u65b9\u6cd5 public void print (); // \u9ed8\u8ba4\u65b9\u6cd5 JDK>=1.8 default void getMessage () { System . out . println ( \"Message\" ); } } class MessageImpl implements Message { @Override public void print () { System . out . println ( \"message\" ); } } public class DefaultDemo { public static void main ( String [] args ) { Message message = new MessageImpl (); message . getMessage (); message . print (); } } Java \u5185\u5b58\u6a21\u578b \u5185\u5b58\u5212\u5206 GC Runtime \u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f \u5185\u5b58\u4fe1\u606f\u53d6\u5f97\uff0c\u7cfb\u7edf\u5783\u573e\u6536\u96c6\u5904\u7406 \u6570\u636e\u5355\u4f4d\uff1a\u5b57\u8282 /1024 -> KB /1024 -> M Runtime runtime = Runtime . getRuntime (); System . out . println ( \"maxMemory \" + runtime . maxMemory ()/ 1024 / 1024 ); System . out . println ( \"totalMemory \" + runtime . totalMemory ()/ 1024 / 1024 ); System . out . println ( \"freeMemory \" + runtime . freeMemory ()/ 1024 / 1024 ); /** * maxMemory 1820 * totalMemory 123 * freeMemory 121 */ \u5185\u5b58\u7a7a\u95f4\u5212\u5206 \u4f0a\u7538\u56ed\u533a\uff1a\u65b0\u751f\u5bf9\u8c61\uff0c\u5982\u679c\u88ab\u5360\u6ee1\uff0c\u4f1a\u6267\u884c gc \u65e7\u751f\u4ee3\u533a\uff1a\u5982\u679c\u53d1\u73b0\u5176\u4e00\u76f4\u4f1a\u88ab\u4f7f\u7528\uff0c\u5c31\u4f1a\u8fdb\u5165\u65e7\u751f\u4ee3\uff0c\u7a7a\u95f4\u4e0d\u8db3\u7ee7\u7eed gc \u6c38\u4e45\u533a\uff1a\u6570\u636e\u4e0d\u4f1a\u88ab\u6e05\u9664 \u9ed8\u8ba4\u5927\u5c0f\u5185\u5b58\u7684 1/4 \u8c03\u6574\u5185\u5b58\u5927\u5c0f -Xms2048M \u51fa\u59cb\u5206\u914d\u5185\u5b58\u5927\u5c0f\uff0c\u9ed8\u8ba4\u7269\u7406\u5185\u5b58 1/64 \u4f46\u5c0f\u4e8e 1G -Xmx2048M \u6700\u5927\u5206\u914d\u5185\u5b58\uff0c\u9ed8\u8ba4\u7269\u7406\u5185\u5b58 1/4 \u4f46\u5c0f\u4e8e 1G -Xmn1024M \u8bbe\u7f6e\u5e74\u8f7b\u4ee3\uff08\u4f0a\u7538\u56ed\u533a\uff09\u5806\u5185\u5b58\u5927\u5c0f \u4e8c\u53c9\u6811 BinaryTree \u6570\u636e\u5b58\u50a8\uff1a\u5de6\u8282\u70b9\u3001\u53f3\u8282\u70b9 \u6811\u7684\u904d\u5386\uff1a\u524d\u5e8f\u3001\u4e2d\u5e8f\u3001\u540e\u5e8f \u8003\u8651\u5927\u5c0f\u5173\u7cfb\uff0c\u6570\u636e\u5e94\u8be5\u4ee5 Comparable \u4e3a\u4e3b package demo ; import java.util.Arrays ; class BinaryTree { private class Node { private Comparable data ; private Node left ; private Node right ; public Node ( Comparable data ) { this . data = data ; } public void addNode ( Node node ) { if ( this . data . compareTo ( node . data ) < 0 ) { if ( this . right == null ) { this . right = node ; } else { this . right . addNode ( node ); } } else { if ( this . left == null ) { this . left = node ; } else { this . left . addNode ( node ); } } } public void toArrayNode () { if ( this . left != null ) { this . left . toArrayNode (); } BinaryTree . this . list [ BinaryTree . this . foot ++] = this . data ; if ( this . right != null ) { this . right . toArrayNode (); } } } // \u6839\u8282\u70b9 private Node root ; // \u7edf\u8ba1\u4e2a\u6570 private int count ; private Comparable [] list ; private int foot ; public void add ( Comparable data ) { Node node = new Node ( data ); // \u6ca1\u6709\u6839\u8282\u70b9 if ( this . root == null ) { this . root = node ; } // \u4ea4\u7ed9Node\u5904\u7406\uff0c\u9700\u8981\u6bd4\u8f83\u5927\u5c0f else { this . root . addNode ( node ); } this . count ++; } public Comparable [] toArray () { if ( this . root == null ) return null ; this . foot = 0 ; this . list = new Comparable [ this . count ]; this . root . toArrayNode (); return this . list ; } } public class BinaryTreeDemo { public static void main ( String [] args ) { BinaryTree tree = new BinaryTree (); tree . add ( \"A\" ); tree . add ( \"C\" ); tree . add ( \"E\" ); tree . add ( \"D\" ); tree . add ( \"B\" ); System . out . println ( Arrays . toString ( tree . toArray ())); // [A, B, C, D, E] } } ClassLoader \u52a0\u8f7d Java \u4e2d\u7684\u7c7b\u52a0\u8f7d\u5668\u4e0d\u6b62\u4e00\u4e2a\uff0c\u81ea\u5b9a\u4e49\u52a0\u8f7d\u5668\u662f\u6700\u540e\u6267\u884c\u7684 package demo ; class User { } public class ClassLoaderDemo { public static void main ( String [] args ) throws ClassNotFoundException { Class <?> cls = Class . forName ( \"demo.User\" ); System . out . println ( cls . getClassLoader ()); // 3. sun.misc.Launcher$AppClassLoader@135fbaa4 System . out . println ( cls . getClassLoader (). getParent ()); // 2. sun.misc.Launcher$ExtClassLoader@2503dbd3 System . out . println ( cls . getClassLoader (). getParent (). getParent ()); // 1. null Bootstrap } } \u6240\u6709\u7684 Java \u7a0b\u5e8f\u7c7b\u52a0\u8f7d\u5668\u4e00\u5171\u5206\u4e3a\u4e24\u5957\u7c7b\u52a0\u8f7d\u5668\uff1a\u53cc\u4eb2\u52a0\u8f7d \u5982\u679c\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7c7b\uff0c\u4f1a\u4f7f\u7528\u5176\u4ed6\u7c7b\u52a0\u8f7d\u5668\uff1a AppClassLoader\u3001ExtClassLoader\u3001\u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\u52a0\u8f7d\u5668 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u901a\u8fc7 CLASSPATH \u52a0\u8f7d \u81ea\u5b9a\u4e49\u7c7b\u52a0\u8f7d\u5668\u53ef\u4ee5\u901a\u8fc7\u8fdc\u7a0b\u6216\u6587\u4ef6\u52a0\u8f7d HashMap \u6e90\u4ee3\u7801 HashMap \u6570\u636e\u589e\u52a0\u5230\u4e00\u5b9a\u6570\u91cf\u540e\uff0c\u5c31\u4f1a\u6709\u94fe\u8868\u53d8\u4e3a\u7ea2\u9ed1\u6811 \u9608\u503c\uff1a static final int TREEIFY_THRESHOLD = 8 ; \u5982\u679c \u8fbe\u5230 16 * 0.75 \u4e2a\u6570\u65f6\uff0c\u5bb9\u91cf\u4f1a\u6269\u5145\u4e00\u500d \u53d8\u4e3a 32 \u6269\u5145 static final float DEFAULT_LOAD_FACTOR = 0.75f ; HashMap \u65b9\u6cd5\u90fd\u662f\u5f02\u6b65\u5904\u7406\uff0c\u975e\u7ebf\u7a0b\u5b89\u5168 package demo ; import java.util.HashMap ; public class HashMapDemo { public static void main ( String [] args ) { HashMap < String , String > map = new HashMap <>(); for ( int i = 0 ; i < 3 ; i ++) { new Thread (() -> { for ( int j = 0 ; j < 9 ; j ++) { map . put ( Thread . currentThread (). getName (), \"y=\" + j ); } }). start (); } System . out . println ( map ); /** * \u53ef\u80fd\u8f93\u51fa\u503c\uff1a * {Thread-0=y=8, Thread-1=y=8, Thread-2=y=8} * {Thread-0=y=8, Thread-1=y=8} * java.util.ConcurrentModificationException * {} */ } } Hash \u51b2\u7a81 HashMap \u4e2d Hash \u51b2\u7a81\u4e25\u91cd\u65f6\u4f1a\u5f71\u54cd\u6027\u80fd \u5f00\u653e\u5b9a\u5740\u6cd5\uff1a\u4e3a\u4e00\u4e2a\u54c8\u5e0c\u51b2\u7a81\u6c42\u7684\u4e00\u4e2a\u5730\u5740\u5e8f\u5217 \u94fe\u5730\u5740\u6cd5\uff1a\u5c06\u6240\u6709\u54c8\u5e0c\u51b2\u7a81\u7684\u5185\u5bb9\u4fdd\u5b58\u5230\u4e00\u4e2a\u94fe\u8868\u91cc\uff08HashMap \u5b9e\u73b0\u539f\u7406\uff09 \u518d\u54c8\u5e0c\u6cd5\uff1a\u91cd\u65b0\u505a\u4e00\u4e2a Hash \u8ba1\u7b97 Node \u5185\u90e8\u7c7b, Map.Entry \u5185\u90e8\u63a5\u53e3 ArrayList \u539f\u7406\u5206\u6790 ArrayList \u7ebf\u6027\u590d\u6742\u5ea6\u662f 1 \u7c7b\u4f3c\u6570\u7ec4\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u7d22\u5f15\u53d6\u503c \u5728\u6570\u91cf\u56fa\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0cArrayList\uff08\u6570\u7ec4\u52a8\u6001\u64cd\u4f5c\uff09 \u907f\u514d\u5f00\u8f9f\u989d\u5916\u7684\u7a7a\u95f4 \u4e0d\u786e\u5b9a\u6570\u91cf\u4f7f\u7528 LinkedList(\u94fe\u8868\u5b9e\u73b0) package demo ; import java.util.ArrayList ; import java.util.List ; public class ListDemo { public static void main ( String [] args ) { List < String > list = new ArrayList <>(); list . add ( \"A\" ); list . add ( \"B\" ); System . out . println ( list ); // [A, B] } } Set \u96c6\u5408 Set \u96c6\u5408\u4e0d\u5141\u8bb8\u5143\u7d20\u91cd\u590d \u5b50\u7c7b HashSet \u65e0\u5e8f\u5b58\u653e\uff0c\u7531 HashMap \u5b9e\u73b0 TreeSet \u7531 TreeMap \u5b9e\u73b0,\u4f7f\u7528 Comparable \u63a5\u53e3\u6392\u5e8f LinkedHashSet \u987a\u5e8f\u4fdd\u5b58 public HashSet () { map = new HashMap <>(); } \u65ad\u70b9\u8c03\u8bd5 step over \u5355\u6b65\u8df3\u8fc7 step into \u5355\u6b65\u8fdb\u5165 step out \u5355\u6b65\u8df3\u51fa this \u5173\u952e\u5b57 \u8bbf\u95ee\u672c\u7c7b\u5c5e\u6027\u52a0 this \u8bbf\u95ee\u672c\u7c7b\u65b9\u6cd5\u52a0 this \u8c03\u7528\u672c\u7c7b\u5176\u4ed6\u6784\u9020\u65b9\u6cd5 this() \u65b9\u6cd5\u5185\u7684 this\uff0c\u8868\u793a\u5f53\u524d\u5b9e\u4f8b\u5bf9\u8c61 Java \u7cfb\u5217\u5c0f\u95ee\u9898 1\u3001\u5b57\u7b26\u4e32\u662f\u533f\u540d\u5bf9\u8c61 \u6ca1\u6709\u660e\u786e\u6307\u5411\u5c31\u662f\u533f\u540d\u5bf9\u8c61 \"Hello\" . length (); \u6709\u660e\u786e\u6307\u5411\u5c31\u4e0d\u662f\u533f\u540d\u5bf9\u8c61 String str = \"Hello\" ; 2\u3001\u76f4\u63a5\u8d4b\u503c\u7684\u65b9\u5f0f\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5b57\u7b26\u4e32\u5bf9\u8c61\uff0c\u5f15\u7528\u5730\u5740\u4fdd\u5b58\u5728\u54ea\u91cc\uff1f \u53ea\u8981\u662f\u5f15\u7528\u5bf9\u8c61\uff0c\u5c31\u4fdd\u5b58\u5728\u5806\u5185\u5b58\u91cc\u9762\uff0c\u6211\u4eec\u80fd\u8fdb\u884c\u63a7\u5236\u7684\u5185\u5b58\u53ea\u6709\u5806\u5185\u5b58 3\u3001\u5bf9\u8c61\u6c60\uff08\u5e38\u91cf\u6c60\uff09\u548c\u6808\u662f\u4ec0\u4e48\u5173\u7cfb\uff1f \u5bf9\u8c61\u6c60\uff08\u5e38\u91cf\u6c60\uff09\u4fdd\u5b58\u5230\u5806\u5185\u5b58 4\u3001\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u7684\u865a\u62df\u673a JVM \u6709\u4e09\u79cd\u5b9e\u73b0\u6807\u51c6 \u6211\u4eec\u4f7f\u7528\u7684\u662f HotSpot \u5b9e\u73b0\u6807\u51c6 JVM \u6838\u5fc3\u4f18\u5316\u7b56\u7565 1\u3001\u53d6\u6d88\u4f38\u7f29\u533a total=max; \uff081\uff09CMS \u95ee\u9898\uff0c\u9891\u7e41 CMS \u4f1a\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d \uff082\uff09\u4f0a\u7538\u56ed\u533a\uff0c\u5b58\u6d3b\u533a\uff0c\u8001\u5e74\u4ee3 \uff083\uff09JDK1.8 \u4e4b\u540e\u53d6\u6d88\u4e86\u6c38\u4e45\u4ee3\uff0c\u4f7f\u7528\u5143\u7a7a\u95f4\u4ee3\u66ff 2\u3001\u5982\u679c\u5185\u5b58\u8fc7\u5927\u8981\u4f7f\u7528 G1 \u6536\u96c6\u5668\u6765\u8fdb\u884c\u6536\u96c6 3\u3001Tomcat \u4f7f\u7528 JVM, \u9700\u8981\u8bbe\u7f6e JAVA_OPTS \u6307\u4ee4 \u53ef\u5c06\u5168\u90e8\u5185\u5b58\u4f9b Tomcat \u4f7f\u7528 \uff081\uff09\u9ed8\u8ba4\u6700\u5927\u4f7f\u7528\u5185\u5b58\u4e3a\u5168\u90e8\u5185\u5b58\u7684 1/4 \uff082\uff09\u9ed8\u8ba4 total \u5185\u5b58\u4e3a\u5168\u90e8\u5185\u5b58\u7684 1/64 JVM \u5185\u5b58\u7ec4\u6210 \u6808\u5185\u5b58 \u53ea\u4fdd\u5b58\u5806\u5185\u5b58\u7684\u5f15\u7528\u5730\u5740\uff0c\u53ef\u4ee5\u4fdd\u5b58\u57fa\u672c\u7c7b\u578b \u5806\u5185\u5b58 \u5206\u4e3a\u82e5\u5e72\u5b50\u5185\u5b58\u7a7a\u95f4\uff1a\u4f0a\u7538\u56ed\u533a\uff0c\u5b58\u6d3b\u533a\uff0c\u8001\u5e74\u4ee3 \u65b9\u6cd5\u533a\uff08JDK1.8 \u4e4b\u524d\uff1a\u6c38\u4e45\u4ee3\uff0c\u4e4b\u540e\uff1a\u5143\u7a7a\u95f4 \uff09 \u539f\u5219\uff1a 1\u3001\u51cf\u5c11\u65e0\u7528\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4f1a\u5f15\u53d1\u9891\u53d1 GC 2\u3001\u521d\u59cb\u5316\u7a7a\u95f4\u5927\u5c0f\u7b49\u4e8e\u6574\u4e2a\u5806\u5185\u5b58\u7684\u5206\u914d\u5927\u5c0f\uff0c\u907f\u514d\u4f38\u7f29\u533a Map-Resize HashMap \u9700\u8981\u6269\u5bb9\u65f6\uff0c\u5982\u4f55\u5f97\u5230\u6269\u5bb9\u56e0\u5b50 // \u79fb\u4f4d\u8fd0\u7b97\uff0c\u76f8\u5f53\u4e8e*2 newCap = oldCap << 1 Runtime \u76f8\u5173\u8bf4\u660e Runtime \u662f\u5355\u4f8b \u533a\u522b\uff1aRuntimeException \u548c \u975e RuntimeException package demo ; public class RuntimeDemo { public static void main ( String [] args ) { // \u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f Runtime runtime = Runtime . getRuntime (); // \u6700\u5927\u5185\u5b58, \u9ed8\u8ba4\u662f\u6574\u4e2a\u7535\u8111\u76841/4 System . out . println ( \"maxMemory \" + runtime . maxMemory ()/( double ) 1024 / 1024 ); // \u521d\u59cb\u5316\u5185\u5b58\u7a7a\u95f4, \u9ed8\u8ba4\u662f\u7535\u8111\u76841/64 System . out . println ( \"totalMemory \" + runtime . totalMemory ()/( double ) 1024 / 1024 ); System . out . println ( \"freeMemory \" + runtime . freeMemory ()/( double ) 1024 / 1024 ); /** * maxMemory 1820.5 * totalMemory 123.0 * freeMemory 121.0499267578125 */ } } \u53c2\u6570\u8bbe\u7f6e -Xmx1g -Xmn1g RuntimeException \u4e0d\u9700\u8981\u5f3a\u5236\u5904\u7406 Exception \u9700\u8981\u5f3a\u5236\u5904\u7406 RuntimeException \u662f Exception \u5b50\u7c7b String \u8f6c\u6362 package demo ; public class StringTest { public static void main ( String [] args ) { // Object str = \"Hello\"; Object str = null ; // \u5411\u4e0b\u8f6c\u578b String str1 = ( String ) str ; // toString\u65b9\u6cd5\u83b7\u5f97 \u5982\u679c\u662fnull, \u4f1a\u629b\u51fa\u5f02\u5e38NullPointerException String str2 = str . toString (); System . out . println ( str1 ); System . out . println ( str2 ); } } ThreadLocal \u91c7\u7528\u53cd\u5c04\u8fdb\u884c\u5bf9\u8c61\u5b9e\u4f8b\u5316\uff0c\u8981\u6c42\u7c7b\u4e2d\u8981\u63d0\u4f9b\u6709\u65e0\u53c2\u6784\u9020\u65b9\u6cd5 \u7b80\u5355 Java \u7c7b\uff0c\u672c\u8d28\u5728\u4e8e\u8fdb\u884c\u6570\u636e\u7684\u5305\u88c5 package demo ; class MessageDemo { public static String message ; public MessageDemo ( String message ) { this . message = message ; } public void showMessage () { System . out . println ( Thread . currentThread (). getName () + \" \" + this . message ); } } public class ThreadLocalDemo { public static void main ( String [] args ) { new Thread (() -> { MessageDemo messageDemo = new MessageDemo ( \"A\" ); messageDemo . showMessage (); }, \"\u7ebf\u7a0bA\" ). start (); new Thread (() -> { MessageDemo messageDemo = new MessageDemo ( \"B\" ); messageDemo . showMessage (); }, \"\u7ebf\u7a0bB\" ). start (); new Thread (() -> { MessageDemo messageDemo = new MessageDemo ( \"C\" ); messageDemo . showMessage (); }, \"\u7ebf\u7a0bC\" ). start (); } } \u8f93\u51fa \u7ebf\u7a0b B C \u7ebf\u7a0b C C \u7ebf\u7a0b A C static \u662f\u5168\u5c40\u6570\u636e\uff0c\u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u4f1a\u51fa\u73b0\u6570\u636e\u4e0d\u540c\u6b65 ThreadLocal \u4fdd\u5b58\u4e86\u6570\u636e\u548c\u5f53\u524d\u7ebf\u7a0b\u5bf9\u8c61 package demo ; class MessageDemo { public static ThreadLocal < String > local = new ThreadLocal <>(); public MessageDemo ( String message ) { this . local . set ( message ); } public void showMessage () { System . out . println ( Thread . currentThread (). getName () + \" \" + this . local . get ()); } } public class ThreadLocalDemo { public static void main ( String [] args ) { new Thread (() -> { MessageDemo messageDemo = new MessageDemo ( \"A\" ); messageDemo . showMessage (); }, \"\u7ebf\u7a0bA\" ). start (); new Thread (() -> { MessageDemo messageDemo = new MessageDemo ( \"B\" ); messageDemo . showMessage (); }, \"\u7ebf\u7a0bB\" ). start (); new Thread (() -> { MessageDemo messageDemo = new MessageDemo ( \"C\" ); messageDemo . showMessage (); }, \"\u7ebf\u7a0bC\" ). start (); } } \u8f93\u51fa \u7ebf\u7a0b A A \u7ebf\u7a0b C C \u7ebf\u7a0b B B ThreadPool \u7ebf\u7a0b\u6c60\u6709\u56db\u79cd\uff1a \u65e0\u9650\u589e\u957f \u5b9a\u957f\u6267\u884c \u5b9a\u65f6\u64cd\u4f5c \u5355\u7ebf\u7a0b\u6c60 package demo ; import java.util.concurrent.ExecutorService ; import java.util.concurrent.Executors ; public class ThreadPoolDemo { public static void main ( String [] args ) { // \u6240\u6709\u7ebf\u7a0b\u90fd\u4f1a\u88ab\u8fd9\u4e2a\u7c7b\u6240\u7ba1\u7406 ExecutorService service = Executors . newCachedThreadPool (); for ( int i = 0 ; i < 10 ; i ++) { final int temp = i ; service . execute ( new Runnable () { @Override public void run () { System . out . println ( Thread . currentThread (). getName () + \" \" + temp ); } }); } } } ThreadLocal \u5f15\u7528\u4f20\u9012 ThreadLocal \u4e0d\u4ec5\u4fdd\u5b58\u7684\u662f\u4e00\u4e2a\u5f15\u7528\u5bf9\u8c61\uff0c\u800c\u4e14\u8fd8\u4fdd\u5b58\u6709\u4e00\u4e2a\u5f53\u524d\u5bf9\u8c61 \u4e0d\u4f1a\u4e0e\u5176\u4ed6\u7ebf\u7a0b\u8fdb\u884c\u6df7\u6dc6 1\u3001\u4e0d\u4f7f\u7528 ThreadLocal package demo ; class Message { private String message ; public String getMessage () { return message ; } public void setMessage ( String message ) { this . message = message ; } @Override public String toString () { return this . message ; } } class MessageDemo { public void print (){ System . out . println ( Thread . currentThread (). getName () + DataCache . message ); } } class DataCache { public static Message message ; } public class ThreadLocalDemo { public static void main ( String [] args ) { new Thread (() -> { Message message = new Message (); message . setMessage ( \"A\" ); DataCache . message = message ; new MessageDemo (). print (); }, \"\u7ebf\u7a0bA\" ). start (); new Thread (() -> { Message message = new Message (); message . setMessage ( \"B\" ); DataCache . message = message ; new MessageDemo (). print (); }, \"\u7ebf\u7a0bB\" ). start (); new Thread (() -> { Message message = new Message (); message . setMessage ( \"C\" ); DataCache . message = message ; new MessageDemo (). print (); }, \"\u7ebf\u7a0bC\" ). start (); } } \u6267\u884c\u7ed3\u679c \u7ebf\u7a0b BA \u7ebf\u7a0b AA \u7ebf\u7a0b CA 2\u3001\u4f7f\u7528 ThreadLocal package demo ; class Message { private String message ; public String getMessage () { return message ; } public void setMessage ( String message ) { this . message = message ; } @Override public String toString () { return this . message ; } } class MessageDemo { public void print (){ System . out . println ( Thread . currentThread (). getName () + DataCache . get ()); } } class DataCache { private static ThreadLocal < Message > threadLocal = new ThreadLocal <>(); public static void set ( Message message ){ threadLocal . set ( message ); } public static Message get (){ return threadLocal . get (); } } public class ThreadLocalDemo { public static void main ( String [] args ) { new Thread (() -> { Message message = new Message (); message . setMessage ( \"A\" ); DataCache . set ( message ); new MessageDemo (). print (); }, \"\u7ebf\u7a0bA\" ). start (); new Thread (() -> { Message message = new Message (); message . setMessage ( \"B\" ); DataCache . set ( message ); new MessageDemo (). print (); }, \"\u7ebf\u7a0bB\" ). start (); new Thread (() -> { Message message = new Message (); message . setMessage ( \"C\" ); DataCache . set ( message ); new MessageDemo (). print (); }, \"\u7ebf\u7a0bC\" ). start (); } } \u6267\u884c\u7ed3\u679c \u7ebf\u7a0b BB \u7ebf\u7a0b AA \u7ebf\u7a0b CC YML \u683c\u5f0f person : name : Tom age : 23 \u62bd\u8c61\u7c7b \u62bd\u8c61\u7c7b\u7684\u5b9e\u4f8b\u5316 \u6838\u5fc3\u8ba4\u8bc6\uff1a \u62bd\u8c61\u7c7b\u6bd4\u666e\u901a\u7c7b\u591a\u4e86\u62bd\u8c61\u65b9\u6cd5 \u62bd\u8c61\u7c7b\u4e0d\u80fd\u4f7f\u7528\u5173\u952e\u8bcd new \u5b9e\u4f8b\u5316\u5bf9\u8c61 \u666e\u901a\u7c7b\u7684\u7ee7\u627f\u5bf9\u5b50\u7c7b\u6ca1\u6709\u5f3a\u5236\u6027\u7ea6\u675f \u5982\u679c\u67d0\u4e9b\u65b9\u6cd5\u5fc5\u987b\u8981\u6c42\u5b50\u7c7b\u6765\u5b9e\u73b0\uff0c\u9700\u8981\u4f7f\u7528\u62bd\u8c61\u7c7b \u6240\u6709\u5173\u952e\u8bcd new \u8c03\u7528\u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u90e8\u5206\u90fd\u53ef\u4ee5\u5c06\u5176\u7406\u89e3\u4e3a\u201c\u533f\u540d\u5bf9\u8c61\u201d A a = new B (); package demo ; abstract class PersonAbstract { public PersonAbstract (){ System . out . println ( \"PersonAbstract\" ); } public abstract void sayHello (); } class Person extends PersonAbstract { public Person () { // super(); // \u53ef\u4ee5\u7701\u7565 System . out . println ( \"Person\" ); } @Override public void sayHello () { System . out . println ( \"say hello\" ); } } public class AbstractDemo { public static void main ( String [] args ) { Person person = new Person (); person . sayHello (); /** * PersonAbstract * Person * say hello */ } } \u62bd\u8c61\u7c7b\u57fa\u7840 \u7406\u8bba\u4e0a\u62bd\u8c61\u7c7b\u7684\u6240\u6709\u62bd\u8c61\u65b9\u6cd5\u5fc5\u987b\u88ab\u8986\u5199 \u5bf9\u4e8e\u975e\u62bd\u8c61\u65b9\u6cd5\u662f\u4e0d\u9700\u8981\u5f3a\u5236\u8986\u5199\u7684 GenericServlet HttpServlet \u6a21\u677f\u8bbe\u8ba1\u6a21\u5f0f \u591a\u7ebf\u7a0b\u5e94\u7528 Tomcat \u6bcf\u4e00\u4e2a\u8fde\u63a5\u7684\u7528\u6237\u7528\u4e00\u4e2a\u7ebf\u7a0b\u6765\u5904\u7406 \u52a8\u6001\u4e0e\u9759\u6001 EL \u8868\u8fbe\u5f0f\u5de5\u4f5c\u5728\u670d\u52a1\u5668\u7aef JSON \u5728\u670d\u52a1\u5668\u7aef\u751f\u6210\uff0c\u5728\u5ba2\u6237\u7aef\u64cd\u4f5c \u5bf9\u8c61\u5f15\u7528 \u5185\u5b58\u5173\u7cfb\u5185\u5bb9\uff1a \u5185\u5b58\u5206\u914d \u5783\u573e\u56de\u6536 JDK>=1.2 \u56db\u79cd\u5f15\u7528\u5173\u7cfb \u5f3a\u5f15\u7528\uff1a\u5bf9\u8c61\u4e00\u76f4\u88ab\u5f15\u7528 \u8f6f\u5f15\u7528\uff1a\u5bf9\u8c61\u5c06\u957f\u65f6\u95f4\u4fdd\u5b58\uff0c\u4e00\u76f4\u5230\u5185\u5b58\u4e0d\u8db3\u624d\u88ab\u56de\u6536\uff0c\u5e38\u7528\u4e8e\u7f13\u5b58\uff0c\u5982 MyBatis \u5f31\u5f15\u7528\uff1a\u4e00\u65e6\u6709\u5783\u573e\u6536\u96c6\u64cd\u4f5c\u4e4b\u540e\u5c31\u4f1a\u88ab\u56de\u6536 \u865a\u5f15\u7528\uff1a\u8fd4\u56de\u6c38\u8fdc\u90fd\u662f null\uff0c\u5c31\u662f\u4e0d\u5f15\u7528 1\u3001\u5f3a\u5f15\u7528\u793a\u4f8b Strong Reference package demo ; public class ReferenceDemo { public static void main ( String [] args ) { Object obj = new Object (); Object ref = obj ; // \u9ed8\u8ba4\u4e3a\u5f3a\u5f15\u7528 obj = null ; // \u539f\u59cb\u7684\u5bf9\u8c61\u65ad\u5f00\uff0c\u5f15\u7528\u5173\u7cfb\u4f9d\u7136\u5b58\u5728 System . gc (); // \u5783\u573e\u56de\u6536 System . out . println ( ref ); // java.lang.Object@2503dbd3 } } 2\u3001\u8f6f\u5f15\u7528\u793a\u4f8b Soft Reference package demo ; import java.lang.ref.SoftReference ; public class ReferenceDemo { public static void main ( String [] args ) { Object obj = new Object (); // \u8f6f\u5f15\u7528 SoftReference < Object > ref = new SoftReference <>( obj ); obj = null ; // \u539f\u59cb\u7684\u5bf9\u8c61\u65ad\u5f00 System . gc (); // \u5783\u573e\u56de\u6536 System . out . println ( ref . get ()); // java.lang.Object@2503dbd3 } } 3\u3001\u5f31\u5f15\u7528\u793a\u4f8b Weak Reference package demo ; import java.lang.ref.WeakReference ; public class ReferenceDemo { public static void main ( String [] args ) { Object obj = new Object (); // \u4f7f\u7528\u5f31\u5f15\u7528 WeakReference < Object > ref = new WeakReference <>( obj ); obj = null ; System . gc (); System . out . println ( ref . get ()); // null } } 4\u3001\u865a\u5f15\u7528\u793a\u4f8b Phantom Reference package demo ; import java.lang.ref.PhantomReference ; import java.lang.ref.ReferenceQueue ; public class ReferenceDemo { public static void main ( String [] args ) { Object obj = new Object (); // \u4f7f\u7528\u865a\u5f15\u7528 ReferenceQueue < Object > queue = new ReferenceQueue <>(); PhantomReference < Object > ref = new PhantomReference <>( obj , queue ); System . out . println ( ref . get ()); // null } } \u591a\u5bf9\u591a\u5173\u7cfb \u6570\u636e\u8868\u548c\u7b80\u5355 Java \u7c7b\u7684\u6620\u5c04\u8f6c\u6362 \u5408\u6210\u8bbe\u8ba1\u9762\u6a21\u5f0f\u7684\u5e94\u7528\uff0c\u76f8\u5f53\u4e8e\u7ec4\u5408 \u6570\u7ec4\u7684\u7406\u89e3\u53ca\u5e94\u7528 package demo ; class User { private String name ; private int age ; private Book [] books ; public User ( String name , int age ) { this . name = name ; this . age = age ; } public Book [] getBooks () { return books ; } public void setBooks ( Book [] books ) { this . books = books ; } @Override public String toString () { return \"User{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } class Book { private String title ; private double price ; private User [] users ; public Book ( String title , double price ) { this . title = title ; this . price = price ; } public User [] getUsers () { return users ; } public void setUsers ( User [] users ) { this . users = users ; } @Override public String toString () { return \"Book{\" + \"title='\" + title + '\\'' + \", price=\" + price + '}' ; } } public class MoreToMoreDemo { public static void main ( String [] args ) { // \u5b9e\u4f53\u7c7b Book book1 = new Book ( \"\u300a\u4e09\u56fd\u6f14\u4e49\u300b\" , 69.8 ); Book book2 = new Book ( \"\u300a\u7ea2\u697c\u68a6\u300b\" , 76.9 ); Book book3 = new Book ( \"\u300a\u897f\u6e38\u8bb0\u300b\" , 88.6 ); User user1 = new User ( \"\u8d75\u5c0f\u56db\" , 23 ); User user2 = new User ( \"\u738b\u5c0f\u516d\" , 26 ); User user3 = new User ( \"\u5218\u5c0f\u4e03\" , 27 ); // \u6570\u636e\u5173\u7cfb book1 . setUsers ( new User []{ user1 , user2 }); book2 . setUsers ( new User []{ user1 , user3 }); book3 . setUsers ( new User []{ user2 , user3 }); user1 . setBooks ( new Book []{ book1 , book2 }); user2 . setBooks ( new Book []{ book1 , book3 }); user3 . setBooks ( new Book []{ book2 , book3 }); // \u6570\u636e\u5c55\u793a for ( User user : book1 . getUsers ()) { System . out . println ( user ); } for ( Book book : user1 . getBooks ()) { System . out . println ( book ); } /** * User{name='\u8d75\u5c0f\u56db', age=23} * User{name='\u738b\u5c0f\u516d', age=26} * * Book{title='\u300a\u4e09\u56fd\u6f14\u4e49\u300b', price=69.8} * Book{title='\u300a\u7ea2\u697c\u68a6\u300b', price=76.9} */ } }","title":"\u8bed\u8a00\u57fa\u7840"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#_1","text":"","title":"\u8bed\u8a00\u57fa\u7840"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#default","text":"\u4e00\u822c\u7528\u4e8e switch int flag = 2 ; switch ( flag ){ case 1 : System . out . println ( \"1\" ); break ; case 2 : System . out . println ( \"2\" ); break ; default : System . out . println ( \"default\" ); } JDK 1.8 \u4e4b\u540e \u53ef\u4ee5\u5728\u63a5\u53e3\u4e2d\u5b9a\u4e49\u9ed8\u8ba4\u65b9\u6cd5 package demo ; interface Message { // \u62bd\u8c61\u65b9\u6cd5 public void print (); // \u9ed8\u8ba4\u65b9\u6cd5 JDK>=1.8 default void getMessage () { System . out . println ( \"Message\" ); } } class MessageImpl implements Message { @Override public void print () { System . out . println ( \"message\" ); } } public class DefaultDemo { public static void main ( String [] args ) { Message message = new MessageImpl (); message . getMessage (); message . print (); } }","title":"default \u5173\u952e\u5b57"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#java","text":"\u5185\u5b58\u5212\u5206 GC Runtime \u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f \u5185\u5b58\u4fe1\u606f\u53d6\u5f97\uff0c\u7cfb\u7edf\u5783\u573e\u6536\u96c6\u5904\u7406 \u6570\u636e\u5355\u4f4d\uff1a\u5b57\u8282 /1024 -> KB /1024 -> M Runtime runtime = Runtime . getRuntime (); System . out . println ( \"maxMemory \" + runtime . maxMemory ()/ 1024 / 1024 ); System . out . println ( \"totalMemory \" + runtime . totalMemory ()/ 1024 / 1024 ); System . out . println ( \"freeMemory \" + runtime . freeMemory ()/ 1024 / 1024 ); /** * maxMemory 1820 * totalMemory 123 * freeMemory 121 */ \u5185\u5b58\u7a7a\u95f4\u5212\u5206 \u4f0a\u7538\u56ed\u533a\uff1a\u65b0\u751f\u5bf9\u8c61\uff0c\u5982\u679c\u88ab\u5360\u6ee1\uff0c\u4f1a\u6267\u884c gc \u65e7\u751f\u4ee3\u533a\uff1a\u5982\u679c\u53d1\u73b0\u5176\u4e00\u76f4\u4f1a\u88ab\u4f7f\u7528\uff0c\u5c31\u4f1a\u8fdb\u5165\u65e7\u751f\u4ee3\uff0c\u7a7a\u95f4\u4e0d\u8db3\u7ee7\u7eed gc \u6c38\u4e45\u533a\uff1a\u6570\u636e\u4e0d\u4f1a\u88ab\u6e05\u9664 \u9ed8\u8ba4\u5927\u5c0f\u5185\u5b58\u7684 1/4 \u8c03\u6574\u5185\u5b58\u5927\u5c0f -Xms2048M \u51fa\u59cb\u5206\u914d\u5185\u5b58\u5927\u5c0f\uff0c\u9ed8\u8ba4\u7269\u7406\u5185\u5b58 1/64 \u4f46\u5c0f\u4e8e 1G -Xmx2048M \u6700\u5927\u5206\u914d\u5185\u5b58\uff0c\u9ed8\u8ba4\u7269\u7406\u5185\u5b58 1/4 \u4f46\u5c0f\u4e8e 1G -Xmn1024M \u8bbe\u7f6e\u5e74\u8f7b\u4ee3\uff08\u4f0a\u7538\u56ed\u533a\uff09\u5806\u5185\u5b58\u5927\u5c0f","title":"Java \u5185\u5b58\u6a21\u578b"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#binarytree","text":"\u6570\u636e\u5b58\u50a8\uff1a\u5de6\u8282\u70b9\u3001\u53f3\u8282\u70b9 \u6811\u7684\u904d\u5386\uff1a\u524d\u5e8f\u3001\u4e2d\u5e8f\u3001\u540e\u5e8f \u8003\u8651\u5927\u5c0f\u5173\u7cfb\uff0c\u6570\u636e\u5e94\u8be5\u4ee5 Comparable \u4e3a\u4e3b package demo ; import java.util.Arrays ; class BinaryTree { private class Node { private Comparable data ; private Node left ; private Node right ; public Node ( Comparable data ) { this . data = data ; } public void addNode ( Node node ) { if ( this . data . compareTo ( node . data ) < 0 ) { if ( this . right == null ) { this . right = node ; } else { this . right . addNode ( node ); } } else { if ( this . left == null ) { this . left = node ; } else { this . left . addNode ( node ); } } } public void toArrayNode () { if ( this . left != null ) { this . left . toArrayNode (); } BinaryTree . this . list [ BinaryTree . this . foot ++] = this . data ; if ( this . right != null ) { this . right . toArrayNode (); } } } // \u6839\u8282\u70b9 private Node root ; // \u7edf\u8ba1\u4e2a\u6570 private int count ; private Comparable [] list ; private int foot ; public void add ( Comparable data ) { Node node = new Node ( data ); // \u6ca1\u6709\u6839\u8282\u70b9 if ( this . root == null ) { this . root = node ; } // \u4ea4\u7ed9Node\u5904\u7406\uff0c\u9700\u8981\u6bd4\u8f83\u5927\u5c0f else { this . root . addNode ( node ); } this . count ++; } public Comparable [] toArray () { if ( this . root == null ) return null ; this . foot = 0 ; this . list = new Comparable [ this . count ]; this . root . toArrayNode (); return this . list ; } } public class BinaryTreeDemo { public static void main ( String [] args ) { BinaryTree tree = new BinaryTree (); tree . add ( \"A\" ); tree . add ( \"C\" ); tree . add ( \"E\" ); tree . add ( \"D\" ); tree . add ( \"B\" ); System . out . println ( Arrays . toString ( tree . toArray ())); // [A, B, C, D, E] } }","title":"\u4e8c\u53c9\u6811 BinaryTree"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#classloader","text":"Java \u4e2d\u7684\u7c7b\u52a0\u8f7d\u5668\u4e0d\u6b62\u4e00\u4e2a\uff0c\u81ea\u5b9a\u4e49\u52a0\u8f7d\u5668\u662f\u6700\u540e\u6267\u884c\u7684 package demo ; class User { } public class ClassLoaderDemo { public static void main ( String [] args ) throws ClassNotFoundException { Class <?> cls = Class . forName ( \"demo.User\" ); System . out . println ( cls . getClassLoader ()); // 3. sun.misc.Launcher$AppClassLoader@135fbaa4 System . out . println ( cls . getClassLoader (). getParent ()); // 2. sun.misc.Launcher$ExtClassLoader@2503dbd3 System . out . println ( cls . getClassLoader (). getParent (). getParent ()); // 1. null Bootstrap } } \u6240\u6709\u7684 Java \u7a0b\u5e8f\u7c7b\u52a0\u8f7d\u5668\u4e00\u5171\u5206\u4e3a\u4e24\u5957\u7c7b\u52a0\u8f7d\u5668\uff1a\u53cc\u4eb2\u52a0\u8f7d \u5982\u679c\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7c7b\uff0c\u4f1a\u4f7f\u7528\u5176\u4ed6\u7c7b\u52a0\u8f7d\u5668\uff1a AppClassLoader\u3001ExtClassLoader\u3001\u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\u52a0\u8f7d\u5668 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u901a\u8fc7 CLASSPATH \u52a0\u8f7d \u81ea\u5b9a\u4e49\u7c7b\u52a0\u8f7d\u5668\u53ef\u4ee5\u901a\u8fc7\u8fdc\u7a0b\u6216\u6587\u4ef6\u52a0\u8f7d","title":"ClassLoader \u52a0\u8f7d"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#hashmap","text":"HashMap \u6570\u636e\u589e\u52a0\u5230\u4e00\u5b9a\u6570\u91cf\u540e\uff0c\u5c31\u4f1a\u6709\u94fe\u8868\u53d8\u4e3a\u7ea2\u9ed1\u6811 \u9608\u503c\uff1a static final int TREEIFY_THRESHOLD = 8 ; \u5982\u679c \u8fbe\u5230 16 * 0.75 \u4e2a\u6570\u65f6\uff0c\u5bb9\u91cf\u4f1a\u6269\u5145\u4e00\u500d \u53d8\u4e3a 32 \u6269\u5145 static final float DEFAULT_LOAD_FACTOR = 0.75f ; HashMap \u65b9\u6cd5\u90fd\u662f\u5f02\u6b65\u5904\u7406\uff0c\u975e\u7ebf\u7a0b\u5b89\u5168 package demo ; import java.util.HashMap ; public class HashMapDemo { public static void main ( String [] args ) { HashMap < String , String > map = new HashMap <>(); for ( int i = 0 ; i < 3 ; i ++) { new Thread (() -> { for ( int j = 0 ; j < 9 ; j ++) { map . put ( Thread . currentThread (). getName (), \"y=\" + j ); } }). start (); } System . out . println ( map ); /** * \u53ef\u80fd\u8f93\u51fa\u503c\uff1a * {Thread-0=y=8, Thread-1=y=8, Thread-2=y=8} * {Thread-0=y=8, Thread-1=y=8} * java.util.ConcurrentModificationException * {} */ } }","title":"HashMap \u6e90\u4ee3\u7801"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#hash","text":"HashMap \u4e2d Hash \u51b2\u7a81\u4e25\u91cd\u65f6\u4f1a\u5f71\u54cd\u6027\u80fd \u5f00\u653e\u5b9a\u5740\u6cd5\uff1a\u4e3a\u4e00\u4e2a\u54c8\u5e0c\u51b2\u7a81\u6c42\u7684\u4e00\u4e2a\u5730\u5740\u5e8f\u5217 \u94fe\u5730\u5740\u6cd5\uff1a\u5c06\u6240\u6709\u54c8\u5e0c\u51b2\u7a81\u7684\u5185\u5bb9\u4fdd\u5b58\u5230\u4e00\u4e2a\u94fe\u8868\u91cc\uff08HashMap \u5b9e\u73b0\u539f\u7406\uff09 \u518d\u54c8\u5e0c\u6cd5\uff1a\u91cd\u65b0\u505a\u4e00\u4e2a Hash \u8ba1\u7b97 Node \u5185\u90e8\u7c7b, Map.Entry \u5185\u90e8\u63a5\u53e3","title":"Hash \u51b2\u7a81"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#arraylist","text":"ArrayList \u7ebf\u6027\u590d\u6742\u5ea6\u662f 1 \u7c7b\u4f3c\u6570\u7ec4\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u7d22\u5f15\u53d6\u503c \u5728\u6570\u91cf\u56fa\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0cArrayList\uff08\u6570\u7ec4\u52a8\u6001\u64cd\u4f5c\uff09 \u907f\u514d\u5f00\u8f9f\u989d\u5916\u7684\u7a7a\u95f4 \u4e0d\u786e\u5b9a\u6570\u91cf\u4f7f\u7528 LinkedList(\u94fe\u8868\u5b9e\u73b0) package demo ; import java.util.ArrayList ; import java.util.List ; public class ListDemo { public static void main ( String [] args ) { List < String > list = new ArrayList <>(); list . add ( \"A\" ); list . add ( \"B\" ); System . out . println ( list ); // [A, B] } }","title":"ArrayList \u539f\u7406\u5206\u6790"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#set","text":"Set \u96c6\u5408\u4e0d\u5141\u8bb8\u5143\u7d20\u91cd\u590d \u5b50\u7c7b HashSet \u65e0\u5e8f\u5b58\u653e\uff0c\u7531 HashMap \u5b9e\u73b0 TreeSet \u7531 TreeMap \u5b9e\u73b0,\u4f7f\u7528 Comparable \u63a5\u53e3\u6392\u5e8f LinkedHashSet \u987a\u5e8f\u4fdd\u5b58 public HashSet () { map = new HashMap <>(); }","title":"Set \u96c6\u5408"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#_2","text":"step over \u5355\u6b65\u8df3\u8fc7 step into \u5355\u6b65\u8fdb\u5165 step out \u5355\u6b65\u8df3\u51fa","title":"\u65ad\u70b9\u8c03\u8bd5"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#this","text":"\u8bbf\u95ee\u672c\u7c7b\u5c5e\u6027\u52a0 this \u8bbf\u95ee\u672c\u7c7b\u65b9\u6cd5\u52a0 this \u8c03\u7528\u672c\u7c7b\u5176\u4ed6\u6784\u9020\u65b9\u6cd5 this() \u65b9\u6cd5\u5185\u7684 this\uff0c\u8868\u793a\u5f53\u524d\u5b9e\u4f8b\u5bf9\u8c61","title":"this \u5173\u952e\u5b57"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#java_1","text":"1\u3001\u5b57\u7b26\u4e32\u662f\u533f\u540d\u5bf9\u8c61 \u6ca1\u6709\u660e\u786e\u6307\u5411\u5c31\u662f\u533f\u540d\u5bf9\u8c61 \"Hello\" . length (); \u6709\u660e\u786e\u6307\u5411\u5c31\u4e0d\u662f\u533f\u540d\u5bf9\u8c61 String str = \"Hello\" ; 2\u3001\u76f4\u63a5\u8d4b\u503c\u7684\u65b9\u5f0f\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5b57\u7b26\u4e32\u5bf9\u8c61\uff0c\u5f15\u7528\u5730\u5740\u4fdd\u5b58\u5728\u54ea\u91cc\uff1f \u53ea\u8981\u662f\u5f15\u7528\u5bf9\u8c61\uff0c\u5c31\u4fdd\u5b58\u5728\u5806\u5185\u5b58\u91cc\u9762\uff0c\u6211\u4eec\u80fd\u8fdb\u884c\u63a7\u5236\u7684\u5185\u5b58\u53ea\u6709\u5806\u5185\u5b58 3\u3001\u5bf9\u8c61\u6c60\uff08\u5e38\u91cf\u6c60\uff09\u548c\u6808\u662f\u4ec0\u4e48\u5173\u7cfb\uff1f \u5bf9\u8c61\u6c60\uff08\u5e38\u91cf\u6c60\uff09\u4fdd\u5b58\u5230\u5806\u5185\u5b58 4\u3001\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u7684\u865a\u62df\u673a JVM \u6709\u4e09\u79cd\u5b9e\u73b0\u6807\u51c6 \u6211\u4eec\u4f7f\u7528\u7684\u662f HotSpot \u5b9e\u73b0\u6807\u51c6","title":"Java \u7cfb\u5217\u5c0f\u95ee\u9898"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#jvm","text":"1\u3001\u53d6\u6d88\u4f38\u7f29\u533a total=max; \uff081\uff09CMS \u95ee\u9898\uff0c\u9891\u7e41 CMS \u4f1a\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d \uff082\uff09\u4f0a\u7538\u56ed\u533a\uff0c\u5b58\u6d3b\u533a\uff0c\u8001\u5e74\u4ee3 \uff083\uff09JDK1.8 \u4e4b\u540e\u53d6\u6d88\u4e86\u6c38\u4e45\u4ee3\uff0c\u4f7f\u7528\u5143\u7a7a\u95f4\u4ee3\u66ff 2\u3001\u5982\u679c\u5185\u5b58\u8fc7\u5927\u8981\u4f7f\u7528 G1 \u6536\u96c6\u5668\u6765\u8fdb\u884c\u6536\u96c6 3\u3001Tomcat \u4f7f\u7528 JVM, \u9700\u8981\u8bbe\u7f6e JAVA_OPTS \u6307\u4ee4 \u53ef\u5c06\u5168\u90e8\u5185\u5b58\u4f9b Tomcat \u4f7f\u7528 \uff081\uff09\u9ed8\u8ba4\u6700\u5927\u4f7f\u7528\u5185\u5b58\u4e3a\u5168\u90e8\u5185\u5b58\u7684 1/4 \uff082\uff09\u9ed8\u8ba4 total \u5185\u5b58\u4e3a\u5168\u90e8\u5185\u5b58\u7684 1/64","title":"JVM \u6838\u5fc3\u4f18\u5316\u7b56\u7565"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#jvm_1","text":"\u6808\u5185\u5b58 \u53ea\u4fdd\u5b58\u5806\u5185\u5b58\u7684\u5f15\u7528\u5730\u5740\uff0c\u53ef\u4ee5\u4fdd\u5b58\u57fa\u672c\u7c7b\u578b \u5806\u5185\u5b58 \u5206\u4e3a\u82e5\u5e72\u5b50\u5185\u5b58\u7a7a\u95f4\uff1a\u4f0a\u7538\u56ed\u533a\uff0c\u5b58\u6d3b\u533a\uff0c\u8001\u5e74\u4ee3 \u65b9\u6cd5\u533a\uff08JDK1.8 \u4e4b\u524d\uff1a\u6c38\u4e45\u4ee3\uff0c\u4e4b\u540e\uff1a\u5143\u7a7a\u95f4 \uff09 \u539f\u5219\uff1a 1\u3001\u51cf\u5c11\u65e0\u7528\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4f1a\u5f15\u53d1\u9891\u53d1 GC 2\u3001\u521d\u59cb\u5316\u7a7a\u95f4\u5927\u5c0f\u7b49\u4e8e\u6574\u4e2a\u5806\u5185\u5b58\u7684\u5206\u914d\u5927\u5c0f\uff0c\u907f\u514d\u4f38\u7f29\u533a","title":"JVM \u5185\u5b58\u7ec4\u6210"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#map-resize","text":"HashMap \u9700\u8981\u6269\u5bb9\u65f6\uff0c\u5982\u4f55\u5f97\u5230\u6269\u5bb9\u56e0\u5b50 // \u79fb\u4f4d\u8fd0\u7b97\uff0c\u76f8\u5f53\u4e8e*2 newCap = oldCap << 1","title":"Map-Resize"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#runtime","text":"Runtime \u662f\u5355\u4f8b \u533a\u522b\uff1aRuntimeException \u548c \u975e RuntimeException package demo ; public class RuntimeDemo { public static void main ( String [] args ) { // \u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f Runtime runtime = Runtime . getRuntime (); // \u6700\u5927\u5185\u5b58, \u9ed8\u8ba4\u662f\u6574\u4e2a\u7535\u8111\u76841/4 System . out . println ( \"maxMemory \" + runtime . maxMemory ()/( double ) 1024 / 1024 ); // \u521d\u59cb\u5316\u5185\u5b58\u7a7a\u95f4, \u9ed8\u8ba4\u662f\u7535\u8111\u76841/64 System . out . println ( \"totalMemory \" + runtime . totalMemory ()/( double ) 1024 / 1024 ); System . out . println ( \"freeMemory \" + runtime . freeMemory ()/( double ) 1024 / 1024 ); /** * maxMemory 1820.5 * totalMemory 123.0 * freeMemory 121.0499267578125 */ } } \u53c2\u6570\u8bbe\u7f6e -Xmx1g -Xmn1g RuntimeException \u4e0d\u9700\u8981\u5f3a\u5236\u5904\u7406 Exception \u9700\u8981\u5f3a\u5236\u5904\u7406 RuntimeException \u662f Exception \u5b50\u7c7b","title":"Runtime \u76f8\u5173\u8bf4\u660e"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#string","text":"package demo ; public class StringTest { public static void main ( String [] args ) { // Object str = \"Hello\"; Object str = null ; // \u5411\u4e0b\u8f6c\u578b String str1 = ( String ) str ; // toString\u65b9\u6cd5\u83b7\u5f97 \u5982\u679c\u662fnull, \u4f1a\u629b\u51fa\u5f02\u5e38NullPointerException String str2 = str . toString (); System . out . println ( str1 ); System . out . println ( str2 ); } }","title":"String \u8f6c\u6362"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#threadlocal","text":"\u91c7\u7528\u53cd\u5c04\u8fdb\u884c\u5bf9\u8c61\u5b9e\u4f8b\u5316\uff0c\u8981\u6c42\u7c7b\u4e2d\u8981\u63d0\u4f9b\u6709\u65e0\u53c2\u6784\u9020\u65b9\u6cd5 \u7b80\u5355 Java \u7c7b\uff0c\u672c\u8d28\u5728\u4e8e\u8fdb\u884c\u6570\u636e\u7684\u5305\u88c5 package demo ; class MessageDemo { public static String message ; public MessageDemo ( String message ) { this . message = message ; } public void showMessage () { System . out . println ( Thread . currentThread (). getName () + \" \" + this . message ); } } public class ThreadLocalDemo { public static void main ( String [] args ) { new Thread (() -> { MessageDemo messageDemo = new MessageDemo ( \"A\" ); messageDemo . showMessage (); }, \"\u7ebf\u7a0bA\" ). start (); new Thread (() -> { MessageDemo messageDemo = new MessageDemo ( \"B\" ); messageDemo . showMessage (); }, \"\u7ebf\u7a0bB\" ). start (); new Thread (() -> { MessageDemo messageDemo = new MessageDemo ( \"C\" ); messageDemo . showMessage (); }, \"\u7ebf\u7a0bC\" ). start (); } } \u8f93\u51fa \u7ebf\u7a0b B C \u7ebf\u7a0b C C \u7ebf\u7a0b A C static \u662f\u5168\u5c40\u6570\u636e\uff0c\u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u4f1a\u51fa\u73b0\u6570\u636e\u4e0d\u540c\u6b65 ThreadLocal \u4fdd\u5b58\u4e86\u6570\u636e\u548c\u5f53\u524d\u7ebf\u7a0b\u5bf9\u8c61 package demo ; class MessageDemo { public static ThreadLocal < String > local = new ThreadLocal <>(); public MessageDemo ( String message ) { this . local . set ( message ); } public void showMessage () { System . out . println ( Thread . currentThread (). getName () + \" \" + this . local . get ()); } } public class ThreadLocalDemo { public static void main ( String [] args ) { new Thread (() -> { MessageDemo messageDemo = new MessageDemo ( \"A\" ); messageDemo . showMessage (); }, \"\u7ebf\u7a0bA\" ). start (); new Thread (() -> { MessageDemo messageDemo = new MessageDemo ( \"B\" ); messageDemo . showMessage (); }, \"\u7ebf\u7a0bB\" ). start (); new Thread (() -> { MessageDemo messageDemo = new MessageDemo ( \"C\" ); messageDemo . showMessage (); }, \"\u7ebf\u7a0bC\" ). start (); } } \u8f93\u51fa \u7ebf\u7a0b A A \u7ebf\u7a0b C C \u7ebf\u7a0b B B","title":"ThreadLocal"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#threadpool","text":"\u7ebf\u7a0b\u6c60\u6709\u56db\u79cd\uff1a \u65e0\u9650\u589e\u957f \u5b9a\u957f\u6267\u884c \u5b9a\u65f6\u64cd\u4f5c \u5355\u7ebf\u7a0b\u6c60 package demo ; import java.util.concurrent.ExecutorService ; import java.util.concurrent.Executors ; public class ThreadPoolDemo { public static void main ( String [] args ) { // \u6240\u6709\u7ebf\u7a0b\u90fd\u4f1a\u88ab\u8fd9\u4e2a\u7c7b\u6240\u7ba1\u7406 ExecutorService service = Executors . newCachedThreadPool (); for ( int i = 0 ; i < 10 ; i ++) { final int temp = i ; service . execute ( new Runnable () { @Override public void run () { System . out . println ( Thread . currentThread (). getName () + \" \" + temp ); } }); } } }","title":"ThreadPool"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#threadlocal_1","text":"ThreadLocal \u4e0d\u4ec5\u4fdd\u5b58\u7684\u662f\u4e00\u4e2a\u5f15\u7528\u5bf9\u8c61\uff0c\u800c\u4e14\u8fd8\u4fdd\u5b58\u6709\u4e00\u4e2a\u5f53\u524d\u5bf9\u8c61 \u4e0d\u4f1a\u4e0e\u5176\u4ed6\u7ebf\u7a0b\u8fdb\u884c\u6df7\u6dc6 1\u3001\u4e0d\u4f7f\u7528 ThreadLocal package demo ; class Message { private String message ; public String getMessage () { return message ; } public void setMessage ( String message ) { this . message = message ; } @Override public String toString () { return this . message ; } } class MessageDemo { public void print (){ System . out . println ( Thread . currentThread (). getName () + DataCache . message ); } } class DataCache { public static Message message ; } public class ThreadLocalDemo { public static void main ( String [] args ) { new Thread (() -> { Message message = new Message (); message . setMessage ( \"A\" ); DataCache . message = message ; new MessageDemo (). print (); }, \"\u7ebf\u7a0bA\" ). start (); new Thread (() -> { Message message = new Message (); message . setMessage ( \"B\" ); DataCache . message = message ; new MessageDemo (). print (); }, \"\u7ebf\u7a0bB\" ). start (); new Thread (() -> { Message message = new Message (); message . setMessage ( \"C\" ); DataCache . message = message ; new MessageDemo (). print (); }, \"\u7ebf\u7a0bC\" ). start (); } } \u6267\u884c\u7ed3\u679c \u7ebf\u7a0b BA \u7ebf\u7a0b AA \u7ebf\u7a0b CA 2\u3001\u4f7f\u7528 ThreadLocal package demo ; class Message { private String message ; public String getMessage () { return message ; } public void setMessage ( String message ) { this . message = message ; } @Override public String toString () { return this . message ; } } class MessageDemo { public void print (){ System . out . println ( Thread . currentThread (). getName () + DataCache . get ()); } } class DataCache { private static ThreadLocal < Message > threadLocal = new ThreadLocal <>(); public static void set ( Message message ){ threadLocal . set ( message ); } public static Message get (){ return threadLocal . get (); } } public class ThreadLocalDemo { public static void main ( String [] args ) { new Thread (() -> { Message message = new Message (); message . setMessage ( \"A\" ); DataCache . set ( message ); new MessageDemo (). print (); }, \"\u7ebf\u7a0bA\" ). start (); new Thread (() -> { Message message = new Message (); message . setMessage ( \"B\" ); DataCache . set ( message ); new MessageDemo (). print (); }, \"\u7ebf\u7a0bB\" ). start (); new Thread (() -> { Message message = new Message (); message . setMessage ( \"C\" ); DataCache . set ( message ); new MessageDemo (). print (); }, \"\u7ebf\u7a0bC\" ). start (); } } \u6267\u884c\u7ed3\u679c \u7ebf\u7a0b BB \u7ebf\u7a0b AA \u7ebf\u7a0b CC","title":"ThreadLocal \u5f15\u7528\u4f20\u9012"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#yml","text":"person : name : Tom age : 23","title":"YML \u683c\u5f0f"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#_3","text":"\u62bd\u8c61\u7c7b\u7684\u5b9e\u4f8b\u5316 \u6838\u5fc3\u8ba4\u8bc6\uff1a \u62bd\u8c61\u7c7b\u6bd4\u666e\u901a\u7c7b\u591a\u4e86\u62bd\u8c61\u65b9\u6cd5 \u62bd\u8c61\u7c7b\u4e0d\u80fd\u4f7f\u7528\u5173\u952e\u8bcd new \u5b9e\u4f8b\u5316\u5bf9\u8c61 \u666e\u901a\u7c7b\u7684\u7ee7\u627f\u5bf9\u5b50\u7c7b\u6ca1\u6709\u5f3a\u5236\u6027\u7ea6\u675f \u5982\u679c\u67d0\u4e9b\u65b9\u6cd5\u5fc5\u987b\u8981\u6c42\u5b50\u7c7b\u6765\u5b9e\u73b0\uff0c\u9700\u8981\u4f7f\u7528\u62bd\u8c61\u7c7b \u6240\u6709\u5173\u952e\u8bcd new \u8c03\u7528\u6784\u9020\u65b9\u6cd5\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u90e8\u5206\u90fd\u53ef\u4ee5\u5c06\u5176\u7406\u89e3\u4e3a\u201c\u533f\u540d\u5bf9\u8c61\u201d A a = new B (); package demo ; abstract class PersonAbstract { public PersonAbstract (){ System . out . println ( \"PersonAbstract\" ); } public abstract void sayHello (); } class Person extends PersonAbstract { public Person () { // super(); // \u53ef\u4ee5\u7701\u7565 System . out . println ( \"Person\" ); } @Override public void sayHello () { System . out . println ( \"say hello\" ); } } public class AbstractDemo { public static void main ( String [] args ) { Person person = new Person (); person . sayHello (); /** * PersonAbstract * Person * say hello */ } }","title":"\u62bd\u8c61\u7c7b"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#_4","text":"\u7406\u8bba\u4e0a\u62bd\u8c61\u7c7b\u7684\u6240\u6709\u62bd\u8c61\u65b9\u6cd5\u5fc5\u987b\u88ab\u8986\u5199 \u5bf9\u4e8e\u975e\u62bd\u8c61\u65b9\u6cd5\u662f\u4e0d\u9700\u8981\u5f3a\u5236\u8986\u5199\u7684 GenericServlet HttpServlet \u6a21\u677f\u8bbe\u8ba1\u6a21\u5f0f","title":"\u62bd\u8c61\u7c7b\u57fa\u7840"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#_5","text":"Tomcat \u6bcf\u4e00\u4e2a\u8fde\u63a5\u7684\u7528\u6237\u7528\u4e00\u4e2a\u7ebf\u7a0b\u6765\u5904\u7406","title":"\u591a\u7ebf\u7a0b\u5e94\u7528"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#_6","text":"EL \u8868\u8fbe\u5f0f\u5de5\u4f5c\u5728\u670d\u52a1\u5668\u7aef JSON \u5728\u670d\u52a1\u5668\u7aef\u751f\u6210\uff0c\u5728\u5ba2\u6237\u7aef\u64cd\u4f5c","title":"\u52a8\u6001\u4e0e\u9759\u6001"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#_7","text":"\u5185\u5b58\u5173\u7cfb\u5185\u5bb9\uff1a \u5185\u5b58\u5206\u914d \u5783\u573e\u56de\u6536 JDK>=1.2 \u56db\u79cd\u5f15\u7528\u5173\u7cfb \u5f3a\u5f15\u7528\uff1a\u5bf9\u8c61\u4e00\u76f4\u88ab\u5f15\u7528 \u8f6f\u5f15\u7528\uff1a\u5bf9\u8c61\u5c06\u957f\u65f6\u95f4\u4fdd\u5b58\uff0c\u4e00\u76f4\u5230\u5185\u5b58\u4e0d\u8db3\u624d\u88ab\u56de\u6536\uff0c\u5e38\u7528\u4e8e\u7f13\u5b58\uff0c\u5982 MyBatis \u5f31\u5f15\u7528\uff1a\u4e00\u65e6\u6709\u5783\u573e\u6536\u96c6\u64cd\u4f5c\u4e4b\u540e\u5c31\u4f1a\u88ab\u56de\u6536 \u865a\u5f15\u7528\uff1a\u8fd4\u56de\u6c38\u8fdc\u90fd\u662f null\uff0c\u5c31\u662f\u4e0d\u5f15\u7528 1\u3001\u5f3a\u5f15\u7528\u793a\u4f8b Strong Reference package demo ; public class ReferenceDemo { public static void main ( String [] args ) { Object obj = new Object (); Object ref = obj ; // \u9ed8\u8ba4\u4e3a\u5f3a\u5f15\u7528 obj = null ; // \u539f\u59cb\u7684\u5bf9\u8c61\u65ad\u5f00\uff0c\u5f15\u7528\u5173\u7cfb\u4f9d\u7136\u5b58\u5728 System . gc (); // \u5783\u573e\u56de\u6536 System . out . println ( ref ); // java.lang.Object@2503dbd3 } } 2\u3001\u8f6f\u5f15\u7528\u793a\u4f8b Soft Reference package demo ; import java.lang.ref.SoftReference ; public class ReferenceDemo { public static void main ( String [] args ) { Object obj = new Object (); // \u8f6f\u5f15\u7528 SoftReference < Object > ref = new SoftReference <>( obj ); obj = null ; // \u539f\u59cb\u7684\u5bf9\u8c61\u65ad\u5f00 System . gc (); // \u5783\u573e\u56de\u6536 System . out . println ( ref . get ()); // java.lang.Object@2503dbd3 } } 3\u3001\u5f31\u5f15\u7528\u793a\u4f8b Weak Reference package demo ; import java.lang.ref.WeakReference ; public class ReferenceDemo { public static void main ( String [] args ) { Object obj = new Object (); // \u4f7f\u7528\u5f31\u5f15\u7528 WeakReference < Object > ref = new WeakReference <>( obj ); obj = null ; System . gc (); System . out . println ( ref . get ()); // null } } 4\u3001\u865a\u5f15\u7528\u793a\u4f8b Phantom Reference package demo ; import java.lang.ref.PhantomReference ; import java.lang.ref.ReferenceQueue ; public class ReferenceDemo { public static void main ( String [] args ) { Object obj = new Object (); // \u4f7f\u7528\u865a\u5f15\u7528 ReferenceQueue < Object > queue = new ReferenceQueue <>(); PhantomReference < Object > ref = new PhantomReference <>( obj , queue ); System . out . println ( ref . get ()); // null } }","title":"\u5bf9\u8c61\u5f15\u7528"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-1/#_8","text":"\u6570\u636e\u8868\u548c\u7b80\u5355 Java \u7c7b\u7684\u6620\u5c04\u8f6c\u6362 \u5408\u6210\u8bbe\u8ba1\u9762\u6a21\u5f0f\u7684\u5e94\u7528\uff0c\u76f8\u5f53\u4e8e\u7ec4\u5408 \u6570\u7ec4\u7684\u7406\u89e3\u53ca\u5e94\u7528 package demo ; class User { private String name ; private int age ; private Book [] books ; public User ( String name , int age ) { this . name = name ; this . age = age ; } public Book [] getBooks () { return books ; } public void setBooks ( Book [] books ) { this . books = books ; } @Override public String toString () { return \"User{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } class Book { private String title ; private double price ; private User [] users ; public Book ( String title , double price ) { this . title = title ; this . price = price ; } public User [] getUsers () { return users ; } public void setUsers ( User [] users ) { this . users = users ; } @Override public String toString () { return \"Book{\" + \"title='\" + title + '\\'' + \", price=\" + price + '}' ; } } public class MoreToMoreDemo { public static void main ( String [] args ) { // \u5b9e\u4f53\u7c7b Book book1 = new Book ( \"\u300a\u4e09\u56fd\u6f14\u4e49\u300b\" , 69.8 ); Book book2 = new Book ( \"\u300a\u7ea2\u697c\u68a6\u300b\" , 76.9 ); Book book3 = new Book ( \"\u300a\u897f\u6e38\u8bb0\u300b\" , 88.6 ); User user1 = new User ( \"\u8d75\u5c0f\u56db\" , 23 ); User user2 = new User ( \"\u738b\u5c0f\u516d\" , 26 ); User user3 = new User ( \"\u5218\u5c0f\u4e03\" , 27 ); // \u6570\u636e\u5173\u7cfb book1 . setUsers ( new User []{ user1 , user2 }); book2 . setUsers ( new User []{ user1 , user3 }); book3 . setUsers ( new User []{ user2 , user3 }); user1 . setBooks ( new Book []{ book1 , book2 }); user2 . setBooks ( new Book []{ book1 , book3 }); user3 . setBooks ( new Book []{ book2 , book3 }); // \u6570\u636e\u5c55\u793a for ( User user : book1 . getUsers ()) { System . out . println ( user ); } for ( Book book : user1 . getBooks ()) { System . out . println ( book ); } /** * User{name='\u8d75\u5c0f\u56db', age=23} * User{name='\u738b\u5c0f\u516d', age=26} * * Book{title='\u300a\u4e09\u56fd\u6f14\u4e49\u300b', price=69.8} * Book{title='\u300a\u7ea2\u697c\u68a6\u300b', price=76.9} */ } }","title":"\u591a\u5bf9\u591a\u5173\u7cfb"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/","text":"Java \u6280\u672f\u4f53\u7cfb Java \u6838\u5fc3\u672c\u8d28\u5728\u4e8e MVC \u8bbe\u8ba1\u6a21\u5f0f JSP\u3001Servlet \u662f\u6280\u672f\u7684\u5b9e\u73b0\u672c\u8d28 \u672c\u8d28\u6280\u672f\uff1a JSP\u3001HTML\u3001CSS\u3001JavaScript \u524d\u7aef UI \u8bbe\u8ba1 (HTML\u3001CSS) \u524d\u7aef\u5de5\u7a0b\u5e08 ( js \u52a8\u6001\u6548\u679c) WEB \u5de5\u7a0b\u5e08(JSP\u3001PHP\u3001Node.JS) \u63a7\u5236\u5c42 \u524d\u7aef web \u5f00\u53d1 \u4e1a\u52a1\u5c42 \u53ea\u8003\u8651\u64cd\u4f5c\u672c\u8d28 \u7b2c\u4e00\u9636\u6bb5 \u57fa\u7840\u9636\u6bb5 SQL \u8bed\u53e5\uff1a\u67e5\u8be2\u3001\u66f4\u65b0\u3001\u5efa\u8868\u3001\u7ea6\u675f Java \u57fa\u7840\uff1a\u57fa\u7840\u8bed\u6cd5\u3001\u9762\u5411\u5bf9\u8c61\u3001\u7c7b\u5e93\u3001\u7c7b\u96c6\u3001IO\u3001JDBC\u3001DAO\u3001\u8bbe\u8ba1\u6a21\u5f0f JSP \u5f00\u53d1\uff1aJSP\u3001DAO\u3001MVC(EL\u3001JSTL) \u603b\u7ed3\uff1a\u5355\u8868 CURD + \u5206\u9875 + \u4e0a\u4f20 \u91cd\u590d\u4ee3\u7801\u8bbe\u8ba1 \u89c2\u5bdf\u95ee\u9898\u7684\u4e24\u4e2a\u70b9\uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u3001\u7a7a\u95f4\u590d\u6742\u5ea6 \u7b2c\u4e8c\u9636\u6bb5 \u4e2d\u7ea7\u5f00\u53d1\u9636\u6bb5 \u4e3b\u8981\u9488\u5bf9\u4ee3\u7801\u8bbe\u8ba1\u8fdb\u884c\u5b8c\u5584 \u6027\u80fd\uff1aAJAX XML \u4e0e DOM \u89e3\u6790\u3001JSON jQuery\u3001Jsonp GIT\u3001SVN\u3001Maven \u7b2c\u4e09\u9636\u6bb5 \u6846\u67b6\u5f00\u53d1 \u63a7\u5236\u5c42\u3001\u4e1a\u52a1\u5c42\u3001\u6570\u636e\u5c42\u6539\u5584 Struts2\uff1a\u63a7\u5236\u5668\u3001\u62e6\u622a\u5668\u3001\u5b9e\u73b0\u539f\u7406 Hibernate: \u89e3\u51b3\u6570\u636e\u5c42\u5f00\u53d1\u8bbe\u8ba1\uff0c\u5355\u8868 CURD\u3001\u4e00\u5bf9\u591a\u3001\u591a\u5bf9\u591a\u3002\u7f13\u5b58\uff0c\u8bbe\u8ba1\u601d\u60f3\u3001\u7f3a\u9677 Spring IOC \u4e0e AOP, SHH \u6574\u5408 MyBatis \u597d\u5904\uff0c\u4e0e Hibernate \u533a\u522b SpringMVC \u4e0e Struts2 \u5b9e\u73b0\u533a\u522b SpringMVC + MyBatis \u5f00\u53d1\u4e0e\u6574\u5408 \u591a\u7ebf\u7a0b\u5de5\u5177\u7c7b \u591a\u7ebf\u7a0b\u540c\u6b65\u5904\u7406 synchronized JDK>=1.5 \u5f15\u5165\u4e86 java.util.concurrent package demo ; import java.util.concurrent.locks.ReentrantLock ; class MyTask { private static final ReentrantLock lock = new ReentrantLock (); private static int count = 0 ; public void doing () { lock . lock (); count ++; try { System . out . println ( Thread . currentThread (). getName () + \" \" + count ); } finally { lock . unlock (); } } } public class LockDemo { public static void main ( String [] args ) { for ( int i = 0 ; i < 10 ; i ++){ new Thread (()->{ new MyTask (). doing (); }). start (); } } } \u8f93\u51fa\u7ed3\u679c Thread - 0 1 Thread - 9 2 Thread - 3 3 Thread - 2 4 Thread - 5 5 Thread - 7 6 Thread - 4 7 Thread - 6 8 Thread - 8 9 Thread - 1 10 \u53cd\u5c04\u53c2\u6570 class getClass() \u53cd\u5c04\u4e0e new \u7684\u5173\u7cfb package demo ; interface IMessage { void print (); } class MyMessage implements IMessage { @Override public void print () { System . out . println ( \"MyMessage\" ); } } public class reflectDemo { public static void main ( String [] args ) throws Exception { // \u76f8\u5f53\u4e8e IMessage message = new MyMessage(); Class <?> clazz = Class . forName ( \"demo.MyMessage\" ); IMessage message = ( IMessage ) clazz . newInstance (); clazz . getMethod ( \"print\" ). invoke ( message ); } } \u65b9\u6cd5\u53d8\u91cf\u4e0e\u540c\u6b65 \u65b9\u6cd5\u4e2d\u7684\u53d8\u91cf\u662f\u5c40\u90e8\u4f5c\u7528\u57df\uff0c\u540c\u6b65\u53ea\u8003\u8651\u7c7b\u5c5e\u6027 1\u3001synchronized \u540c\u6b65\u65b9\u6cd5 package demo ; class MyThread implements Runnable { private int count = 5 ; @Override public synchronized void run () { System . out . println ( Thread . currentThread (). getName () + \" \" + this . count --); } } public class SyncDemo { public static void main ( String [] args ) { MyThread t = new MyThread (); for ( int i = 0 ; i < 5 ; i ++) { new Thread ( t ). start (); } } } \u8f93\u51fa\u7ed3\u679c Thread - 0 5 Thread - 2 4 Thread - 1 3 Thread - 4 2 Thread - 3 1 2\u3001\u4e0d\u540c\u6b65 package demo ; class MyThread implements Runnable { private int count = 5 ; @Override public void run () { System . out . println ( Thread . currentThread (). getName () + \" \" + this . count --); } } public class SyncDemo { public static void main ( String [] args ) { MyThread t = new MyThread (); for ( int i = 0 ; i < 5 ; i ++) { new Thread ( t ). start (); } } } \u8f93\u51fa\u7ed3\u679c Thread - 0 5 Thread - 3 2 Thread - 2 3 Thread - 1 4 Thread - 4 1 \u9ad8\u5e76\u53d1\u5305 java.util.concurrent \u56db\u79cd\u7ebf\u7a0b\u6c60 \u4efb\u610f\u6269\u5c55\u7684\u7ebf\u7a0b\u6c60 \u5b9a\u957f\u7ebf\u7a0b\u6c60 \u7ebf\u7a0b\u8c03\u5ea6\u6c60 \u5355\u7ebf\u7a0b\u6c60 \u63a5\u53e3\u7279\u70b9: \u4e0d\u540c\u5b50\u7c7b\u5bf9\u540c\u4e00\u65b9\u6cd5\u6709\u4e0d\u540c\u7684\u5b9e\u73b0 Hashtable \u7ebf\u7a0b\u5b89\u5168\uff0c\u4e00\u4e2a\u65f6\u523b\u53ea\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee HashMap \u6240\u6709\u65b9\u6cd5\u90fd\u662f\u5f02\u6b65\u5904\u7406\uff0c\u975e\u7ebf\u7a0b\u5b89\u5168\uff0c\u8bbf\u95ee\u901f\u5ea6\u5feb ConcurrentHashMap \u53ef\u5e76\u53d1\u3001\u9ad8\u901f\u8bbf\u95ee \u8fdb\u7a0b\u95f4\u901a\u8baf \u8fdb\u7a0b\u95f4\u901a\u8baf\uff1a\u4e0d\u540c\u8fdb\u7a0b\u4e4b\u95f4\u7684 JVM \u901a\u8baf \u53ef\u4ee5\u4f7f\u7528\u516c\u5171\u6587\u4ef6\uff0c\u6216\u8005\u76f4\u63a5\u8fdb\u884c\u7ba1\u9053\u6d41\u5904\u7406 \u8fdb\u7a0b\u548c\u7ebf\u7a0b \u8fdb\u7a0b\u6267\u884c\u901f\u5ea6\u6162 \u7ebf\u7a0b\u6267\u884c\u901f\u5ea6\u5feb \u7ebf\u7a0b\u6536\u5230\u8fdb\u7a0b\u63a7\u5236 \u96c6\u5408\u4fe1\u606f List \u4f18\u5148\u4f7f\u7528 get() \u65b9\u6cd5\u83b7\u53d6\u5143\u7d20 \u63a5\u53e3\u6807\u51c6 \u6807\u51c6\u6307\u7684\u662f\u6240\u6709\u7c7b\u90fd\u8981\u5949\u884c\u7684\u6cd5\u5219 \u63a5\u53e3\u7684\u4f7f\u7528 \u63a5\u53e3\uff1a\u6838\u5fc3\u610f\u4e49\u662f\u66b4\u9732\u8fdc\u7a0b\u7ed3\u6784\uff08\u65b9\u6cd5\u89c6\u56fe\uff09 \u62bd\u8c61\u7c7b\uff1a\u7ed9\u63a5\u53e3\u548c\u5b50\u7c7b\u4e4b\u95f4\u505a\u8fc7\u8fc7\u6e21\u4f7f\u7528 \u94fe\u8868 \u5185\u90e8\u7c7b\u7279\u70b9\uff1a \u5185\u90e8\u7c7b\u53ef\u4ee5\u65b9\u4fbf\u7684\u4e0e\u5916\u90e8\u7c7b\u4e4b\u95f4\u8fdb\u884c\u79c1\u6709\u5c5e\u6027\u58f0\u660e \u5185\u90e8\u7c7b\u5982\u679c\u4f7f\u7528\u4e86 priate \u58f0\u660e\uff0c\u90a3\u4e48\u5916\u90e8\u5c06\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528\u5b83 \u5916\u90e8\u7c7b\u5f62\u5f0f class Link {} class Node {} \u5185\u90e8\u7c7b\u5f62\u5f0f class Link { private class Node {} } \u7ebf\u7a0b\u6c60 \u65e0\u9650\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60 package demo ; import java.util.concurrent.ExecutorService ; import java.util.concurrent.Executors ; public class ThreadPoolDemo { public static void main ( String [] args ) { // \u521b\u5efa\u4e00\u4e2a\u65e0\u9650\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60 ExecutorService service = Executors . newCachedThreadPool (); for ( int i = 0 ; i < 10 ; i ++) { final int temp = i ; service . execute ( new Runnable () { @Override public void run () { try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( Thread . currentThread (). getName () + \" \" + temp ); } }); } } } \u56fa\u5b9a\u4e2a\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60 package demo ; import java.util.concurrent.ExecutorService ; import java.util.concurrent.Executors ; public class ThreadPoolDemo { public static void main ( String [] args ) { // \u521b\u5efa\u4e00\u4e2a3\u4e2a\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60 ExecutorService service = Executors . newFixedThreadPool ( 3 ); for ( int i = 0 ; i < 10 ; i ++) { final int temp = i ; service . execute ( new Runnable () { @Override public void run () { try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( Thread . currentThread (). getName () + \" \" + temp ); } }); } } } \u53d6\u5f97\u53ef\u7528\u7ebf\u7a0b\u6c60\u5927\u5c0f Runtime . getRuntime (). availableProcessors () \u7ebf\u7a0b\u540c\u6b65\u5de5\u5177\u7c7b CountDownLatch \u7b49\u5f85\u6240\u6709\u4eba\u90fd\u8d70\u4e86\uff0c\u6211\u518d\u5e72\uff1b\u4e00\u8ba1\u5230\u5e95\uff0c\u4e0d\u53ef\u4ee5\u91cd\u7f6e CyclicBarrier \u6c47\u805a\u591a\u4e2a\u7b49\u5f85\u7ebf\u7a0b\uff0c\u90fd\u5230\u4e86\uff0c\u4e00\u8d77\u5e72,\u53ef\u4ee5\u91cd\u7f6e \u4e0d\u4f7f\u7528\u7b49\u5f85\u7ebf\u7a0b package demo ; public class ThreadPoolDemo { public static void main ( String [] args ) { for ( int i = 0 ; i < 3 ; i ++) { final int temp = i ; new Thread (() -> { System . out . println ( Thread . currentThread (). getName () + \" \" + temp ); } ). start (); } System . out . println ( \"\u4e3b\u7ebf\u7a0b\u6267\u884c\" ); } } \u6267\u884c\u7ed3\u679c \u4e3b\u7ebf\u7a0b\u6267\u884c Thread - 2 2 Thread - 0 0 Thread - 1 1 \u4f7f\u7528 CountDownLatch package demo ; import java.util.concurrent.CountDownLatch ; public class ThreadPoolDemo { public static void main ( String [] args ) throws InterruptedException { // 3\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u540e\u518d\u7ee7\u7eed CountDownLatch countDownLatch = new CountDownLatch ( 3 ); for ( int i = 0 ; i < 3 ; i ++) { final int temp = i ; new Thread (() -> { System . out . println ( Thread . currentThread (). getName () + \" \" + temp ); // \u6267\u884c\u5b8c\u62101\u6b21 countDownLatch . countDown (); } ). start (); } // \u963b\u585e\u4e3b\u7ebf\u7a0b\u6267\u884c countDownLatch . await (); System . out . println ( \"\u4e3b\u7ebf\u7a0b\u6267\u884c\" ); } } \u6267\u884c\u7ed3\u679c Thread - 0 0 Thread - 2 2 Thread - 1 1 \u4e3b\u7ebf\u7a0b\u6267\u884c \u4f7f\u7528 CyclicBarrier package demo ; import java.util.concurrent.BrokenBarrierException ; import java.util.concurrent.CyclicBarrier ; public class ThreadPoolDemo { public static void main ( String [] args ) { CyclicBarrier cyclicBarrier = new CyclicBarrier ( 2 ); for ( int i = 0 ; i < 3 ; i ++) { new Thread (() -> { System . out . println ( Thread . currentThread (). getName () + \"[before]\" ); try { cyclicBarrier . await (); } catch ( Exception e ) { e . printStackTrace (); } System . out . println ( Thread . currentThread (). getName () + \"[after]\" ); } ). start (); } } } \u6267\u884c\u7ed3\u679c Thread - 0 [ before ] Thread - 2 [ before ] Thread - 1 [ before ] Thread - 2 [ after ] Thread - 0 [ after ] ( \u7ebf\u7a0b\u5361\u4e3b\u4e86 ) \u57fa\u672c\u7c7b\u578b\u4e0e\u5305\u88c5\u7c7b\u578b JDK1.5 \u4e4b\u540e\u63d0\u4f9b\u4e86\u81ea\u52a8\u88c5\u7bb1\u62c6\u7bb1\u5904\u7406\u673a\u5236 \u5305\u88c5\u7c7b\u4ee5\u5bf9\u8c61\u7684\u5f62\u5f0f\u8fd0\u884c \u5305\u88c5\u7c7b\u53ef\u4ee5\u8fdb\u884c null \u7684\u63cf\u8ff0 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u578b\u9ed8\u8ba4\u503c\u662f\u5bf9\u5e94\u9ed8\u8ba4\u503c\uff0c\u5305\u88c5\u7c7b\u9ed8\u8ba4\u503c\u662f null \u5bf9\u8c61\u5185\u5bb9\u7c7b ov \u90fd\u4f1a\u4f7f\u7528\u5305\u88c5\u7c7b\uff0c\u4fbf\u4e8e null \u7684\u63a7\u5236 \u57fa\u672c\u7c7b\u578b\u4e0e\u5f15\u7528\u4f20\u9012 Java \u4e2d\u4e24\u79cd\u6570\u636e\u7c7b\u578b\uff1a \u5f15\u7528\u7c7b\u578b\uff1a \u53ef\u4ee5\u53d1\u751f\u5f15\u7528\u4f20\u9012 \u57fa\u672c\u7c7b\u578b\uff1a \u53ea\u662f\u4e00\u4e2a\u503c\u62f7\u8d1d \u5305\u88c5\u7c7b\u63d0\u4f9b\u4e86 null Mybatis \u7b49\u4f7f\u7528\u5305\u88c5\u7c7b\u66ff\u4ee3\u57fa\u672c\u6570\u636e\u7c7b\u578b \u4f7f\u7528 Object \u4f5c\u4e3a\u63a5\u6536\u53c2\u6570 \u4f7f\u7528\u6cdb\u578b\u6765\u907f\u514d\u5411\u4e0b\u8f6c\u578b\u7684\u64cd\u4f5c \u5c3d\u91cf\u51cf\u5c11 Object \u4f7f\u7528 \u8f6c\u578b \u5411\u4e0b\u8f6c\u578b\uff1a\uff08\u4e0d\u63a8\u8350\uff09\u53ef\u4ee5\u8fbe\u5230\u53c2\u6570\u7684\u7edf\u4e00\uff0c\u9700\u8981\u5f3a\u5236\u5904\u7406\uff0c\u9020\u6210\u7c7b\u578b\u4e0d\u5339\u914d \u5411\u4e0a\u8f6c\u578b\uff1a\u6700\u9876\u7aef\u662f Object package demo ; public class StringTest { public static void main ( String [] args ) { String str = \"Hello\" ; // \u5411\u4e0a\u8f6c\u578b Object obj = str ; // \u5411\u4e0b\u8f6c\u578b String ref = ( String ) obj ; } } \u5f15\u7528\u4f20\u9012 \u5f15\u7528\u4f20\u9012\u672c\u8d28\uff1a \u540c\u4e00\u5757\u5806\u5185\u5b58\u80fd\u591f\u88ab\u4e0d\u540c\u7684\u6808\u5185\u5b58\u6307\u5411 \u5f15\u7528\u6570\u636e\u7c7b\u578b\u771f\u6b63\u7684\u5185\u5bb9\u5728\u5806\u5185\u5b58\u4e2d \u57fa\u672c\u6570\u636e\u7c7b\u578b\u662f\u6570\u503c\u4f20\u9012 JSP \u4e2d JSTL \u548c EL \u64cd\u4f5c\uff0c\u5e2e\u52a9\u7528\u6237\u56de\u907f\u6389\u8f6c\u578b\u64cd\u4f5c package demo ; import java.lang.reflect.InvocationTargetException ; import java.lang.reflect.Method ; class Student { private String name ; public Student ( String name ) { this . name = name ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } } public class StringTest { public static void main ( String [] args ) throws NoSuchMethodException , InvocationTargetException , IllegalAccessException { // \u5411\u4e0a\u8f6c\u578b Object obj = new Student ( \"Tom\" ); Class <?> clazz = obj . getClass (); Method method = clazz . getMethod ( \"getName\" ); System . out . println ( method . invoke ( obj )); // Tom } } \u6cdb\u578b\u901a\u914d\u7b26 package demo ; interface IMessage { void print (); } class TextMessage implements IMessage { @Override public void print () { System . out . println ( \"TextMessage\" ); } } class Factory { public static < T > T getInstance ( Class < T > clazz ) throws IllegalAccessException , InstantiationException { return clazz . newInstance (); } } public class FactoryDemo { public static void main ( String [] args ) throws InstantiationException , IllegalAccessException { IMessage message = Factory . getInstance ( TextMessage . class ); message . print (); } } \u6cdb\u578b\u4e2d\u7684\u201cT\u201d\u4e0e\u201c\uff1f\u201d\u7684\u533a\u522b\uff1f < T > \u7528\u4e8e\u6cdb\u578b\u7c7b\u58f0\u660e <? > \u7528\u4e8e\u65b9\u6cd5\u63a5\u6536\u53c2\u6570\uff0c\u6216\u8005\u8fd4\u56de\u7c7b\u578b \u53ea\u80fd\u53d6\u5f97\u5185\u5bb9\uff0c\u4e0d\u80fd\u8bbe\u7f6e\u5185\u5bb9 \u865a\u62df\u5185\u5b58 \u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u786c\u76d8\u8fdb\u884c\u5185\u5b58\u865a\u62df\u5316 \u76f8\u5f53\u4e8e\u786c\u76d8\u53ef\u4ee5\u6a21\u62df\u5185\u5b58 Java8 \u5f00\u59cb\u53d6\u6d88\u4e86\u6c38\u4e45\u4ee3\uff0c\u4f7f\u7528\u5143\u7a7a\u95f4\u6765\u8fdb\u884c\u64cd\u4f5c \u9762\u8bd5\u9898 \u4ee3\u7801\u5757\uff08\u5e38\u7528\u8bed junit\uff09 \u666e\u901a\u4ee3\u7801\u5757 \u6784\u9020\u4ee3\u7801\u5757 \u4f18\u5148\u4e8e\u6784\u9020\u65b9\u6cd5 static \u4ee3\u7801\u5757 \u4f18\u5148\u4e8e\u6784\u9020\u65b9\u6cd5\uff0c\u4f18\u5148\u4e8e\u4e3b\u65b9\u6cd5 \u540c\u6b65\u4ee3\u7801\u5757 \u5b50\u7c7b\u5b9e\u4f8b\u5316\u4e00\u5b9a\u4f1a\u9ed8\u8ba4\u6267\u884c\u7236\u7c7b\u6784\u9020\u65b9\u6cd5\uff0c\u518d\u6267\u884c\u5b50\u7c7b\u81ea\u5df1\u7684\u6784\u9020\u65b9\u6cd5 \u7a0b\u5e8f\u6267\u884c\u662f\u7531\u7236\u5230\u5b50\u7684\u987a\u5e8f\u6267\u884c package demo ; class A { static { System . out . println ( \"1\" ); } public A () { System . out . println ( \"2\" ); } } class B extends A { static { System . out . println ( \"3\" ); } public B () { System . out . println ( \"4\" ); } } public class StringTest { public static void main ( String [] args ) { A a = new B (); a = new B (); } } \u6267\u884c\u7ed3\u679c A a = new B (); 1 -> static { System . out . println ( \"1\" ); } 3 -> static { System . out . println ( \"3\" ); } 2 -> public A () { System . out . println ( \"2\" ); } 4 -> public B () { System . out . println ( \"4\" ); } a = new B (); 2 -> public A () { System . out . println ( \"2\" ); } 4 -> public B () { System . out . println ( \"4\" ); } \u8f6c\u4e49\u5b57\u7b26\u5904\u7406 \\\\ \\ n \\ t \u6b63\u5219\u4e2d\u5199\u6cd5 \\\\ d \u8d44\u6e90\u6ce8\u5165 @Resource\u3001@Autowired \u4e24\u4e2a\u6ce8\u89e3\u90fd\u662f\u76f4\u63a5\u5229\u7528\u53cd\u5c04\u8fdb\u884c\u5bf9\u8c61\u7684\u5f15\u7528\u8bbe\u7f6e IO \u5f02\u6b65 IO \u7b49\u5f85\u8fd4\u56de\u540e\u7ee7\u7eed \u540c\u6b65 IO \u4e0d\u7b49\u5f85\u8fd4\u56de\uff0c\u76f4\u63a5\u7ee7\u7eed BIO Blocking \u540c\u6b65\u963b\u585e IO \u4f20\u7edf\u6a21\u5f0f NIO Non-blocking \u540c\u6b65\u975e\u963b\u585e IO \u96f6\u62f7\u8d1d AIO Asynchronous \u5f02\u6b65\u975e\u963b\u585e IO \u5b57\u8282\u6d41\u4e0e\u5b57\u7b26\u6d41 \u6240\u6709\u78c1\u76d8\u4fdd\u5b58\u7684\u6587\u4ef6\u548c\u7f51\u7edc\u4f20\u8f93\u7684\u6587\u4ef6\u5b9e\u9645\u4e0a\u90fd\u662f\u5b57\u8282\u6570\u636e \u4e3a\u4e86\u5904\u7406\u4e2d\u6587\u66f4\u65b9\u4fbf\uff0c\u4f7f\u7528\u5b57\u7b26\u6d41\u6765\u64cd\u4f5c \u5185\u5b58\u6d41\u548c\u7ba1\u9053\u6d41 \u5185\u5b58\u6d41\uff1a\u9700\u8981\u4ea7\u751f IO \u7684\u60c5\u51b5\u4e0b\uff0c\u4f46\u662f\u53c8\u4e0d\u5e0c\u671b\u4ea7\u751f\u5b9e\u9645\u7684\u5b58\u50a8\u6587\u4ef6\u6240\u91c7\u7528\u7684\u4e00\u79cd IO \u65b9\u6848 \u7ba1\u9053\u6d41\uff1a\u6765\u81ea Unix \u7cfb\u7edf\u4e2d\u7684\u6982\u5ff5\uff0c\u6307\u7684\u662f\u4e24\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u8baf\u5173\u7cfb\uff0c\u540c\u4e00\u4e2a\u7a0b\u5e8f\u7531\u4e8e\u8fd0\u884c\u7684\u8fdb\u7a0b\u4e0d\u540c\uff0c\u6240\u4ee5\u5176\u62e5\u6709\u5404\u81ea\u7684\u6570\u636e\u5b58\u50a8\u7a7a\u95f4 Java \u5e76\u6ca1\u6709\u8fdb\u7a0b\u7684\u5f00\u53d1\uff0c\u662f\u591a\u7ebf\u7a0b\u7f16\u7a0b\u8bed\u8a00 Python \u63d0\u4f9b\u591a\u8fdb\u884c\u7a0b\u5f00\u53d1\uff0c\u8fd8\u6709\u534f\u7a0b\u5f00\u53d1 Java \u5728\u591a\u7ebf\u7a0b\u7684\u7ed3\u6784\u4e0a\u4f7f\u7528\u4e86\u7ba1\u9053\u7684\u6982\u5ff5 \u7f13\u5b58\u6d41\u4e0e\u5185\u5b58\u6d41 \u5185\u5b58\u6d41\uff1a \u5c06\u6240\u6709\u6570\u636e\u5728\u5185\u5b58\u4e4b\u4e2d\u8fdb\u884c\u5b8c\u6574\u7684\u5904\u7406\u64cd\u4f5c \u7f13\u5b58\u6d41\uff1a\u6682\u65f6\u7684\u64cd\u4f5c, Scanner","title":"2 \u8bed\u8a00\u57fa\u7840 2"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#java","text":"Java \u6838\u5fc3\u672c\u8d28\u5728\u4e8e MVC \u8bbe\u8ba1\u6a21\u5f0f JSP\u3001Servlet \u662f\u6280\u672f\u7684\u5b9e\u73b0\u672c\u8d28 \u672c\u8d28\u6280\u672f\uff1a JSP\u3001HTML\u3001CSS\u3001JavaScript \u524d\u7aef UI \u8bbe\u8ba1 (HTML\u3001CSS) \u524d\u7aef\u5de5\u7a0b\u5e08 ( js \u52a8\u6001\u6548\u679c) WEB \u5de5\u7a0b\u5e08(JSP\u3001PHP\u3001Node.JS) \u63a7\u5236\u5c42 \u524d\u7aef web \u5f00\u53d1 \u4e1a\u52a1\u5c42 \u53ea\u8003\u8651\u64cd\u4f5c\u672c\u8d28 \u7b2c\u4e00\u9636\u6bb5 \u57fa\u7840\u9636\u6bb5 SQL \u8bed\u53e5\uff1a\u67e5\u8be2\u3001\u66f4\u65b0\u3001\u5efa\u8868\u3001\u7ea6\u675f Java \u57fa\u7840\uff1a\u57fa\u7840\u8bed\u6cd5\u3001\u9762\u5411\u5bf9\u8c61\u3001\u7c7b\u5e93\u3001\u7c7b\u96c6\u3001IO\u3001JDBC\u3001DAO\u3001\u8bbe\u8ba1\u6a21\u5f0f JSP \u5f00\u53d1\uff1aJSP\u3001DAO\u3001MVC(EL\u3001JSTL) \u603b\u7ed3\uff1a\u5355\u8868 CURD + \u5206\u9875 + \u4e0a\u4f20 \u91cd\u590d\u4ee3\u7801\u8bbe\u8ba1 \u89c2\u5bdf\u95ee\u9898\u7684\u4e24\u4e2a\u70b9\uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u3001\u7a7a\u95f4\u590d\u6742\u5ea6 \u7b2c\u4e8c\u9636\u6bb5 \u4e2d\u7ea7\u5f00\u53d1\u9636\u6bb5 \u4e3b\u8981\u9488\u5bf9\u4ee3\u7801\u8bbe\u8ba1\u8fdb\u884c\u5b8c\u5584 \u6027\u80fd\uff1aAJAX XML \u4e0e DOM \u89e3\u6790\u3001JSON jQuery\u3001Jsonp GIT\u3001SVN\u3001Maven \u7b2c\u4e09\u9636\u6bb5 \u6846\u67b6\u5f00\u53d1 \u63a7\u5236\u5c42\u3001\u4e1a\u52a1\u5c42\u3001\u6570\u636e\u5c42\u6539\u5584 Struts2\uff1a\u63a7\u5236\u5668\u3001\u62e6\u622a\u5668\u3001\u5b9e\u73b0\u539f\u7406 Hibernate: \u89e3\u51b3\u6570\u636e\u5c42\u5f00\u53d1\u8bbe\u8ba1\uff0c\u5355\u8868 CURD\u3001\u4e00\u5bf9\u591a\u3001\u591a\u5bf9\u591a\u3002\u7f13\u5b58\uff0c\u8bbe\u8ba1\u601d\u60f3\u3001\u7f3a\u9677 Spring IOC \u4e0e AOP, SHH \u6574\u5408 MyBatis \u597d\u5904\uff0c\u4e0e Hibernate \u533a\u522b SpringMVC \u4e0e Struts2 \u5b9e\u73b0\u533a\u522b SpringMVC + MyBatis \u5f00\u53d1\u4e0e\u6574\u5408","title":"Java \u6280\u672f\u4f53\u7cfb"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_1","text":"\u591a\u7ebf\u7a0b\u540c\u6b65\u5904\u7406 synchronized JDK>=1.5 \u5f15\u5165\u4e86 java.util.concurrent package demo ; import java.util.concurrent.locks.ReentrantLock ; class MyTask { private static final ReentrantLock lock = new ReentrantLock (); private static int count = 0 ; public void doing () { lock . lock (); count ++; try { System . out . println ( Thread . currentThread (). getName () + \" \" + count ); } finally { lock . unlock (); } } } public class LockDemo { public static void main ( String [] args ) { for ( int i = 0 ; i < 10 ; i ++){ new Thread (()->{ new MyTask (). doing (); }). start (); } } } \u8f93\u51fa\u7ed3\u679c Thread - 0 1 Thread - 9 2 Thread - 3 3 Thread - 2 4 Thread - 5 5 Thread - 7 6 Thread - 4 7 Thread - 6 8 Thread - 8 9 Thread - 1 10","title":"\u591a\u7ebf\u7a0b\u5de5\u5177\u7c7b"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_2","text":"class getClass()","title":"\u53cd\u5c04\u53c2\u6570"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#new","text":"package demo ; interface IMessage { void print (); } class MyMessage implements IMessage { @Override public void print () { System . out . println ( \"MyMessage\" ); } } public class reflectDemo { public static void main ( String [] args ) throws Exception { // \u76f8\u5f53\u4e8e IMessage message = new MyMessage(); Class <?> clazz = Class . forName ( \"demo.MyMessage\" ); IMessage message = ( IMessage ) clazz . newInstance (); clazz . getMethod ( \"print\" ). invoke ( message ); } }","title":"\u53cd\u5c04\u4e0e new \u7684\u5173\u7cfb"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_3","text":"\u65b9\u6cd5\u4e2d\u7684\u53d8\u91cf\u662f\u5c40\u90e8\u4f5c\u7528\u57df\uff0c\u540c\u6b65\u53ea\u8003\u8651\u7c7b\u5c5e\u6027 1\u3001synchronized \u540c\u6b65\u65b9\u6cd5 package demo ; class MyThread implements Runnable { private int count = 5 ; @Override public synchronized void run () { System . out . println ( Thread . currentThread (). getName () + \" \" + this . count --); } } public class SyncDemo { public static void main ( String [] args ) { MyThread t = new MyThread (); for ( int i = 0 ; i < 5 ; i ++) { new Thread ( t ). start (); } } } \u8f93\u51fa\u7ed3\u679c Thread - 0 5 Thread - 2 4 Thread - 1 3 Thread - 4 2 Thread - 3 1 2\u3001\u4e0d\u540c\u6b65 package demo ; class MyThread implements Runnable { private int count = 5 ; @Override public void run () { System . out . println ( Thread . currentThread (). getName () + \" \" + this . count --); } } public class SyncDemo { public static void main ( String [] args ) { MyThread t = new MyThread (); for ( int i = 0 ; i < 5 ; i ++) { new Thread ( t ). start (); } } } \u8f93\u51fa\u7ed3\u679c Thread - 0 5 Thread - 3 2 Thread - 2 3 Thread - 1 4 Thread - 4 1","title":"\u65b9\u6cd5\u53d8\u91cf\u4e0e\u540c\u6b65"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_4","text":"java.util.concurrent \u56db\u79cd\u7ebf\u7a0b\u6c60 \u4efb\u610f\u6269\u5c55\u7684\u7ebf\u7a0b\u6c60 \u5b9a\u957f\u7ebf\u7a0b\u6c60 \u7ebf\u7a0b\u8c03\u5ea6\u6c60 \u5355\u7ebf\u7a0b\u6c60 \u63a5\u53e3\u7279\u70b9: \u4e0d\u540c\u5b50\u7c7b\u5bf9\u540c\u4e00\u65b9\u6cd5\u6709\u4e0d\u540c\u7684\u5b9e\u73b0 Hashtable \u7ebf\u7a0b\u5b89\u5168\uff0c\u4e00\u4e2a\u65f6\u523b\u53ea\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee HashMap \u6240\u6709\u65b9\u6cd5\u90fd\u662f\u5f02\u6b65\u5904\u7406\uff0c\u975e\u7ebf\u7a0b\u5b89\u5168\uff0c\u8bbf\u95ee\u901f\u5ea6\u5feb ConcurrentHashMap \u53ef\u5e76\u53d1\u3001\u9ad8\u901f\u8bbf\u95ee","title":"\u9ad8\u5e76\u53d1\u5305"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_5","text":"\u8fdb\u7a0b\u95f4\u901a\u8baf\uff1a\u4e0d\u540c\u8fdb\u7a0b\u4e4b\u95f4\u7684 JVM \u901a\u8baf \u53ef\u4ee5\u4f7f\u7528\u516c\u5171\u6587\u4ef6\uff0c\u6216\u8005\u76f4\u63a5\u8fdb\u884c\u7ba1\u9053\u6d41\u5904\u7406","title":"\u8fdb\u7a0b\u95f4\u901a\u8baf"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_6","text":"\u8fdb\u7a0b\u6267\u884c\u901f\u5ea6\u6162 \u7ebf\u7a0b\u6267\u884c\u901f\u5ea6\u5feb \u7ebf\u7a0b\u6536\u5230\u8fdb\u7a0b\u63a7\u5236","title":"\u8fdb\u7a0b\u548c\u7ebf\u7a0b"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_7","text":"List \u4f18\u5148\u4f7f\u7528 get() \u65b9\u6cd5\u83b7\u53d6\u5143\u7d20","title":"\u96c6\u5408\u4fe1\u606f"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_8","text":"\u6807\u51c6\u6307\u7684\u662f\u6240\u6709\u7c7b\u90fd\u8981\u5949\u884c\u7684\u6cd5\u5219","title":"\u63a5\u53e3\u6807\u51c6"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_9","text":"\u63a5\u53e3\uff1a\u6838\u5fc3\u610f\u4e49\u662f\u66b4\u9732\u8fdc\u7a0b\u7ed3\u6784\uff08\u65b9\u6cd5\u89c6\u56fe\uff09 \u62bd\u8c61\u7c7b\uff1a\u7ed9\u63a5\u53e3\u548c\u5b50\u7c7b\u4e4b\u95f4\u505a\u8fc7\u8fc7\u6e21\u4f7f\u7528","title":"\u63a5\u53e3\u7684\u4f7f\u7528"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_10","text":"\u5185\u90e8\u7c7b\u7279\u70b9\uff1a \u5185\u90e8\u7c7b\u53ef\u4ee5\u65b9\u4fbf\u7684\u4e0e\u5916\u90e8\u7c7b\u4e4b\u95f4\u8fdb\u884c\u79c1\u6709\u5c5e\u6027\u58f0\u660e \u5185\u90e8\u7c7b\u5982\u679c\u4f7f\u7528\u4e86 priate \u58f0\u660e\uff0c\u90a3\u4e48\u5916\u90e8\u5c06\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528\u5b83 \u5916\u90e8\u7c7b\u5f62\u5f0f class Link {} class Node {} \u5185\u90e8\u7c7b\u5f62\u5f0f class Link { private class Node {} }","title":"\u94fe\u8868"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_11","text":"\u65e0\u9650\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60 package demo ; import java.util.concurrent.ExecutorService ; import java.util.concurrent.Executors ; public class ThreadPoolDemo { public static void main ( String [] args ) { // \u521b\u5efa\u4e00\u4e2a\u65e0\u9650\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60 ExecutorService service = Executors . newCachedThreadPool (); for ( int i = 0 ; i < 10 ; i ++) { final int temp = i ; service . execute ( new Runnable () { @Override public void run () { try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( Thread . currentThread (). getName () + \" \" + temp ); } }); } } } \u56fa\u5b9a\u4e2a\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60 package demo ; import java.util.concurrent.ExecutorService ; import java.util.concurrent.Executors ; public class ThreadPoolDemo { public static void main ( String [] args ) { // \u521b\u5efa\u4e00\u4e2a3\u4e2a\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60 ExecutorService service = Executors . newFixedThreadPool ( 3 ); for ( int i = 0 ; i < 10 ; i ++) { final int temp = i ; service . execute ( new Runnable () { @Override public void run () { try { Thread . sleep ( 1000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( Thread . currentThread (). getName () + \" \" + temp ); } }); } } } \u53d6\u5f97\u53ef\u7528\u7ebf\u7a0b\u6c60\u5927\u5c0f Runtime . getRuntime (). availableProcessors ()","title":"\u7ebf\u7a0b\u6c60"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_12","text":"CountDownLatch \u7b49\u5f85\u6240\u6709\u4eba\u90fd\u8d70\u4e86\uff0c\u6211\u518d\u5e72\uff1b\u4e00\u8ba1\u5230\u5e95\uff0c\u4e0d\u53ef\u4ee5\u91cd\u7f6e CyclicBarrier \u6c47\u805a\u591a\u4e2a\u7b49\u5f85\u7ebf\u7a0b\uff0c\u90fd\u5230\u4e86\uff0c\u4e00\u8d77\u5e72,\u53ef\u4ee5\u91cd\u7f6e \u4e0d\u4f7f\u7528\u7b49\u5f85\u7ebf\u7a0b package demo ; public class ThreadPoolDemo { public static void main ( String [] args ) { for ( int i = 0 ; i < 3 ; i ++) { final int temp = i ; new Thread (() -> { System . out . println ( Thread . currentThread (). getName () + \" \" + temp ); } ). start (); } System . out . println ( \"\u4e3b\u7ebf\u7a0b\u6267\u884c\" ); } } \u6267\u884c\u7ed3\u679c \u4e3b\u7ebf\u7a0b\u6267\u884c Thread - 2 2 Thread - 0 0 Thread - 1 1 \u4f7f\u7528 CountDownLatch package demo ; import java.util.concurrent.CountDownLatch ; public class ThreadPoolDemo { public static void main ( String [] args ) throws InterruptedException { // 3\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u540e\u518d\u7ee7\u7eed CountDownLatch countDownLatch = new CountDownLatch ( 3 ); for ( int i = 0 ; i < 3 ; i ++) { final int temp = i ; new Thread (() -> { System . out . println ( Thread . currentThread (). getName () + \" \" + temp ); // \u6267\u884c\u5b8c\u62101\u6b21 countDownLatch . countDown (); } ). start (); } // \u963b\u585e\u4e3b\u7ebf\u7a0b\u6267\u884c countDownLatch . await (); System . out . println ( \"\u4e3b\u7ebf\u7a0b\u6267\u884c\" ); } } \u6267\u884c\u7ed3\u679c Thread - 0 0 Thread - 2 2 Thread - 1 1 \u4e3b\u7ebf\u7a0b\u6267\u884c \u4f7f\u7528 CyclicBarrier package demo ; import java.util.concurrent.BrokenBarrierException ; import java.util.concurrent.CyclicBarrier ; public class ThreadPoolDemo { public static void main ( String [] args ) { CyclicBarrier cyclicBarrier = new CyclicBarrier ( 2 ); for ( int i = 0 ; i < 3 ; i ++) { new Thread (() -> { System . out . println ( Thread . currentThread (). getName () + \"[before]\" ); try { cyclicBarrier . await (); } catch ( Exception e ) { e . printStackTrace (); } System . out . println ( Thread . currentThread (). getName () + \"[after]\" ); } ). start (); } } } \u6267\u884c\u7ed3\u679c Thread - 0 [ before ] Thread - 2 [ before ] Thread - 1 [ before ] Thread - 2 [ after ] Thread - 0 [ after ] ( \u7ebf\u7a0b\u5361\u4e3b\u4e86 )","title":"\u7ebf\u7a0b\u540c\u6b65\u5de5\u5177\u7c7b"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_13","text":"JDK1.5 \u4e4b\u540e\u63d0\u4f9b\u4e86\u81ea\u52a8\u88c5\u7bb1\u62c6\u7bb1\u5904\u7406\u673a\u5236 \u5305\u88c5\u7c7b\u4ee5\u5bf9\u8c61\u7684\u5f62\u5f0f\u8fd0\u884c \u5305\u88c5\u7c7b\u53ef\u4ee5\u8fdb\u884c null \u7684\u63cf\u8ff0 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u578b\u9ed8\u8ba4\u503c\u662f\u5bf9\u5e94\u9ed8\u8ba4\u503c\uff0c\u5305\u88c5\u7c7b\u9ed8\u8ba4\u503c\u662f null \u5bf9\u8c61\u5185\u5bb9\u7c7b ov \u90fd\u4f1a\u4f7f\u7528\u5305\u88c5\u7c7b\uff0c\u4fbf\u4e8e null \u7684\u63a7\u5236","title":"\u57fa\u672c\u7c7b\u578b\u4e0e\u5305\u88c5\u7c7b\u578b"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_14","text":"Java \u4e2d\u4e24\u79cd\u6570\u636e\u7c7b\u578b\uff1a \u5f15\u7528\u7c7b\u578b\uff1a \u53ef\u4ee5\u53d1\u751f\u5f15\u7528\u4f20\u9012 \u57fa\u672c\u7c7b\u578b\uff1a \u53ea\u662f\u4e00\u4e2a\u503c\u62f7\u8d1d \u5305\u88c5\u7c7b\u63d0\u4f9b\u4e86 null Mybatis \u7b49\u4f7f\u7528\u5305\u88c5\u7c7b\u66ff\u4ee3\u57fa\u672c\u6570\u636e\u7c7b\u578b","title":"\u57fa\u672c\u7c7b\u578b\u4e0e\u5f15\u7528\u4f20\u9012"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#object","text":"\u4f7f\u7528\u6cdb\u578b\u6765\u907f\u514d\u5411\u4e0b\u8f6c\u578b\u7684\u64cd\u4f5c \u5c3d\u91cf\u51cf\u5c11 Object \u4f7f\u7528","title":"\u4f7f\u7528 Object \u4f5c\u4e3a\u63a5\u6536\u53c2\u6570"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_15","text":"\u5411\u4e0b\u8f6c\u578b\uff1a\uff08\u4e0d\u63a8\u8350\uff09\u53ef\u4ee5\u8fbe\u5230\u53c2\u6570\u7684\u7edf\u4e00\uff0c\u9700\u8981\u5f3a\u5236\u5904\u7406\uff0c\u9020\u6210\u7c7b\u578b\u4e0d\u5339\u914d \u5411\u4e0a\u8f6c\u578b\uff1a\u6700\u9876\u7aef\u662f Object package demo ; public class StringTest { public static void main ( String [] args ) { String str = \"Hello\" ; // \u5411\u4e0a\u8f6c\u578b Object obj = str ; // \u5411\u4e0b\u8f6c\u578b String ref = ( String ) obj ; } }","title":"\u8f6c\u578b"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_16","text":"\u5f15\u7528\u4f20\u9012\u672c\u8d28\uff1a \u540c\u4e00\u5757\u5806\u5185\u5b58\u80fd\u591f\u88ab\u4e0d\u540c\u7684\u6808\u5185\u5b58\u6307\u5411 \u5f15\u7528\u6570\u636e\u7c7b\u578b\u771f\u6b63\u7684\u5185\u5bb9\u5728\u5806\u5185\u5b58\u4e2d \u57fa\u672c\u6570\u636e\u7c7b\u578b\u662f\u6570\u503c\u4f20\u9012 JSP \u4e2d JSTL \u548c EL \u64cd\u4f5c\uff0c\u5e2e\u52a9\u7528\u6237\u56de\u907f\u6389\u8f6c\u578b\u64cd\u4f5c package demo ; import java.lang.reflect.InvocationTargetException ; import java.lang.reflect.Method ; class Student { private String name ; public Student ( String name ) { this . name = name ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } } public class StringTest { public static void main ( String [] args ) throws NoSuchMethodException , InvocationTargetException , IllegalAccessException { // \u5411\u4e0a\u8f6c\u578b Object obj = new Student ( \"Tom\" ); Class <?> clazz = obj . getClass (); Method method = clazz . getMethod ( \"getName\" ); System . out . println ( method . invoke ( obj )); // Tom } }","title":"\u5f15\u7528\u4f20\u9012"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_17","text":"package demo ; interface IMessage { void print (); } class TextMessage implements IMessage { @Override public void print () { System . out . println ( \"TextMessage\" ); } } class Factory { public static < T > T getInstance ( Class < T > clazz ) throws IllegalAccessException , InstantiationException { return clazz . newInstance (); } } public class FactoryDemo { public static void main ( String [] args ) throws InstantiationException , IllegalAccessException { IMessage message = Factory . getInstance ( TextMessage . class ); message . print (); } }","title":"\u6cdb\u578b\u901a\u914d\u7b26"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#t","text":"< T > \u7528\u4e8e\u6cdb\u578b\u7c7b\u58f0\u660e <? > \u7528\u4e8e\u65b9\u6cd5\u63a5\u6536\u53c2\u6570\uff0c\u6216\u8005\u8fd4\u56de\u7c7b\u578b \u53ea\u80fd\u53d6\u5f97\u5185\u5bb9\uff0c\u4e0d\u80fd\u8bbe\u7f6e\u5185\u5bb9","title":"\u6cdb\u578b\u4e2d\u7684\u201cT\u201d\u4e0e\u201c\uff1f\u201d\u7684\u533a\u522b\uff1f"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_18","text":"\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u786c\u76d8\u8fdb\u884c\u5185\u5b58\u865a\u62df\u5316 \u76f8\u5f53\u4e8e\u786c\u76d8\u53ef\u4ee5\u6a21\u62df\u5185\u5b58 Java8 \u5f00\u59cb\u53d6\u6d88\u4e86\u6c38\u4e45\u4ee3\uff0c\u4f7f\u7528\u5143\u7a7a\u95f4\u6765\u8fdb\u884c\u64cd\u4f5c","title":"\u865a\u62df\u5185\u5b58"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_19","text":"\u4ee3\u7801\u5757\uff08\u5e38\u7528\u8bed junit\uff09 \u666e\u901a\u4ee3\u7801\u5757 \u6784\u9020\u4ee3\u7801\u5757 \u4f18\u5148\u4e8e\u6784\u9020\u65b9\u6cd5 static \u4ee3\u7801\u5757 \u4f18\u5148\u4e8e\u6784\u9020\u65b9\u6cd5\uff0c\u4f18\u5148\u4e8e\u4e3b\u65b9\u6cd5 \u540c\u6b65\u4ee3\u7801\u5757 \u5b50\u7c7b\u5b9e\u4f8b\u5316\u4e00\u5b9a\u4f1a\u9ed8\u8ba4\u6267\u884c\u7236\u7c7b\u6784\u9020\u65b9\u6cd5\uff0c\u518d\u6267\u884c\u5b50\u7c7b\u81ea\u5df1\u7684\u6784\u9020\u65b9\u6cd5 \u7a0b\u5e8f\u6267\u884c\u662f\u7531\u7236\u5230\u5b50\u7684\u987a\u5e8f\u6267\u884c package demo ; class A { static { System . out . println ( \"1\" ); } public A () { System . out . println ( \"2\" ); } } class B extends A { static { System . out . println ( \"3\" ); } public B () { System . out . println ( \"4\" ); } } public class StringTest { public static void main ( String [] args ) { A a = new B (); a = new B (); } } \u6267\u884c\u7ed3\u679c A a = new B (); 1 -> static { System . out . println ( \"1\" ); } 3 -> static { System . out . println ( \"3\" ); } 2 -> public A () { System . out . println ( \"2\" ); } 4 -> public B () { System . out . println ( \"4\" ); } a = new B (); 2 -> public A () { System . out . println ( \"2\" ); } 4 -> public B () { System . out . println ( \"4\" ); }","title":"\u9762\u8bd5\u9898"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_20","text":"\\\\ \\ n \\ t \u6b63\u5219\u4e2d\u5199\u6cd5 \\\\ d","title":"\u8f6c\u4e49\u5b57\u7b26\u5904\u7406"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_21","text":"@Resource\u3001@Autowired \u4e24\u4e2a\u6ce8\u89e3\u90fd\u662f\u76f4\u63a5\u5229\u7528\u53cd\u5c04\u8fdb\u884c\u5bf9\u8c61\u7684\u5f15\u7528\u8bbe\u7f6e","title":"\u8d44\u6e90\u6ce8\u5165"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#io","text":"\u5f02\u6b65 IO \u7b49\u5f85\u8fd4\u56de\u540e\u7ee7\u7eed \u540c\u6b65 IO \u4e0d\u7b49\u5f85\u8fd4\u56de\uff0c\u76f4\u63a5\u7ee7\u7eed BIO Blocking \u540c\u6b65\u963b\u585e IO \u4f20\u7edf\u6a21\u5f0f NIO Non-blocking \u540c\u6b65\u975e\u963b\u585e IO \u96f6\u62f7\u8d1d AIO Asynchronous \u5f02\u6b65\u975e\u963b\u585e IO","title":"IO"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_22","text":"\u6240\u6709\u78c1\u76d8\u4fdd\u5b58\u7684\u6587\u4ef6\u548c\u7f51\u7edc\u4f20\u8f93\u7684\u6587\u4ef6\u5b9e\u9645\u4e0a\u90fd\u662f\u5b57\u8282\u6570\u636e \u4e3a\u4e86\u5904\u7406\u4e2d\u6587\u66f4\u65b9\u4fbf\uff0c\u4f7f\u7528\u5b57\u7b26\u6d41\u6765\u64cd\u4f5c","title":"\u5b57\u8282\u6d41\u4e0e\u5b57\u7b26\u6d41"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_23","text":"\u5185\u5b58\u6d41\uff1a\u9700\u8981\u4ea7\u751f IO \u7684\u60c5\u51b5\u4e0b\uff0c\u4f46\u662f\u53c8\u4e0d\u5e0c\u671b\u4ea7\u751f\u5b9e\u9645\u7684\u5b58\u50a8\u6587\u4ef6\u6240\u91c7\u7528\u7684\u4e00\u79cd IO \u65b9\u6848 \u7ba1\u9053\u6d41\uff1a\u6765\u81ea Unix \u7cfb\u7edf\u4e2d\u7684\u6982\u5ff5\uff0c\u6307\u7684\u662f\u4e24\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u8baf\u5173\u7cfb\uff0c\u540c\u4e00\u4e2a\u7a0b\u5e8f\u7531\u4e8e\u8fd0\u884c\u7684\u8fdb\u7a0b\u4e0d\u540c\uff0c\u6240\u4ee5\u5176\u62e5\u6709\u5404\u81ea\u7684\u6570\u636e\u5b58\u50a8\u7a7a\u95f4 Java \u5e76\u6ca1\u6709\u8fdb\u7a0b\u7684\u5f00\u53d1\uff0c\u662f\u591a\u7ebf\u7a0b\u7f16\u7a0b\u8bed\u8a00 Python \u63d0\u4f9b\u591a\u8fdb\u884c\u7a0b\u5f00\u53d1\uff0c\u8fd8\u6709\u534f\u7a0b\u5f00\u53d1 Java \u5728\u591a\u7ebf\u7a0b\u7684\u7ed3\u6784\u4e0a\u4f7f\u7528\u4e86\u7ba1\u9053\u7684\u6982\u5ff5","title":"\u5185\u5b58\u6d41\u548c\u7ba1\u9053\u6d41"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/2-\u8bed\u8a00\u57fa\u7840-2/#_24","text":"\u5185\u5b58\u6d41\uff1a \u5c06\u6240\u6709\u6570\u636e\u5728\u5185\u5b58\u4e4b\u4e2d\u8fdb\u884c\u5b8c\u6574\u7684\u5904\u7406\u64cd\u4f5c \u7f13\u5b58\u6d41\uff1a\u6682\u65f6\u7684\u64cd\u4f5c, Scanner","title":"\u7f13\u5b58\u6d41\u4e0e\u5185\u5b58\u6d41"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/3-\u6570\u636e\u5e93\u5f00\u53d1/","text":"\u6570\u636e\u5e93 \u6570\u636e\u5e93\u4f18\u5316 \u4f18\u5316\u5c42\u6b21 1\u3001\u8bed\u53e5\u4e0a\u7684\u4f18\u5316\uff1a \u5c3d\u91cf\u4e0d\u4f7f\u7528\u591a\u8868\u67e5\u8be2\uff0c\u4e0d\u8981\u9891\u7e41\u7684\u4f7f\u7528\u5404\u79cd\u795e\u5947\u7684\u7edf\u8ba1\u67e5\u8be2\uff08\u5efa\u8bae\u4f7f\u7528\u5b50\u67e5\u8be2\u4ee3\u66ff\uff09 2\u3001\u6570\u636e\u5e93\u4f18\u5316\u53ea\u80fd\u4f53\u73b0\u5728\u67e5\u8be2\u4e0a \u6570\u636e\u4e0d\u5e94\u8be5\u8fdb\u884c\u7269\u7406\u5220\u9664\uff0c\u800c\u8981\u8fdb\u884c\u903b\u8f91\u5220\u9664\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u7d22\u5f15\u4e0d\u88ab\u91cd\u65b0\u521b\u5efa \u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u65f6\u95f4\u6362\u7a7a\u95f4 3\u3001\u5982\u679c\u5b58\u5728\u591a\u4e2a RPC \u4e1a\u52a1\u7aef\u65f6\uff0c\u53ef\u4ee5\u8003\u8651\u8fdb\u884c\u5782\u76f4\u62c6\u5206\u5e93\uff0c\u53ea\u80fd\u6309\u7167\u529f\u80fd\u8fdb\u884c\u62c6\u5206\uff0c\u9700\u8981\u63a5\u53e3\u6280\u672f\u652f\u6301 4\u3001\u5206\u5e93\u4e5f\u65e0\u6cd5\u89e3\u51b3\u95ee\u9898\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u8003\u8651\u6570\u636e\u5e93\u7684\u6c34\u5e73\u62c6\u5206 5\u3001\u5982\u679c\u9700\u8981\u4fdd\u8bc1\u5f3a\u5927\u7684\u67e5\u8be2\u6027\u80fd\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u518d\u6b21\u5f15\u5165\u641c\u7d22\u5f15\u64ce\u8fdb\u884c\u5206\u8bcd\u5904\u7406 NoSQL \u4f7f\u7528\u573a\u666f NoSQL \u53ef\u4ee5\u5b9e\u73b0\u6587\u6863\u5b58\u50a8\uff08BSON,JSON\uff09\u3001\u7f13\u5b58\u5b58\u50a8\u3001\u56fe\u50cf\u7f13\u5b58\uff08\u56fe\u50cf\u641c\u7d22\uff09 \u7f13\u5b58\u578b Redis \u7528\u4e8e\u5b9e\u73b0\uff1a\u8d2d\u7269\u8f66\uff0c\u77ed\u4fe1\u9a8c\u8bc1\u7801 \u6d88\u606f\u961f\u5217\uff1a Redis\u3001RabbitMQ\u3001Kafka \u4f18\u70b9\uff1a\u5b9e\u73b0\u6bcf\u79d2\u8fd1\u4e4e 10W \u6b21\u7684\u8bfb\u5199\u5904\u7406 \u5206\u5e03\u5f0f\u6570\u636e\u5e93 WEB \u7aef \u89c6\u56fe\u5c42 \u63a7\u5236\u5c42 \u4e1a\u52a1\u5c42 \u6570\u636e\u5c42 \u6570\u636e\u5e93\u670d\u52a1\u5668 WEB \u7aef \u89c6\u56fe\u5c42 \u63a7\u5236\u5c42 RPC\u7aef \u4e1a\u52a1\u5c42 \u6570\u636e\u5c42 \u6570\u636e\u5e93\u670d\u52a1\u5668 RPC \u7aef\u5c06\u4e1a\u52a1\u5206\u79bb\u51fa\u6765\uff0cWEB \u7aef\u5b9e\u73b0\u4e1a\u52a1\u6574\u5408 \u6570\u636e\u5e93\u8bbe\u8ba1 Spring \u4e8b\u52a1\u4f20\u64ad\u5c5e\u6027\uff08Propagation\uff09\uff1a REQUIRED\uff08\u9ed8\u8ba4\u5c5e\u6027\uff09\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u4e8b\u52a1\uff0c\u5219\u652f\u6301\u5f53\u524d\u4e8b\u52a1\u3002\u5982\u679c\u6ca1\u6709\u4e8b\u52a1\u5219\u5f00\u542f\u4e00\u4e2a\u65b0\u7684\u4e8b\u52a1\u3002 MANDATORY \u652f\u6301\u5f53\u524d\u4e8b\u52a1\uff0c\u5982\u679c\u5f53\u524d\u6ca1\u6709\u4e8b\u52a1\uff0c\u5c31\u629b\u51fa\u5f02\u5e38\u3002 NEVER \u4ee5\u975e\u4e8b\u52a1\u65b9\u5f0f\u6267\u884c\uff0c\u5982\u679c\u5f53\u524d\u5b58\u5728\u4e8b\u52a1\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002 NOT_SUPPORTED \u4ee5\u975e\u4e8b\u52a1\u65b9\u5f0f\u6267\u884c\u64cd\u4f5c\uff0c\u5982\u679c\u5f53\u524d\u5b58\u5728\u4e8b\u52a1\uff0c\u5c31\u628a\u5f53\u524d\u4e8b\u52a1\u6302\u8d77\u3002 REQUIRES_NEW \u65b0\u5efa\u4e8b\u52a1\uff0c\u5982\u679c\u5f53\u524d\u5b58\u5728\u4e8b\u52a1\uff0c\u628a\u5f53\u524d\u4e8b\u52a1\u6302\u8d77\u3002 SUPPORTS \u652f\u6301\u5f53\u524d\u4e8b\u52a1\uff0c\u5982\u679c\u5f53\u524d\u6ca1\u6709\u4e8b\u52a1\uff0c\u5c31\u4ee5\u975e\u4e8b\u52a1\u65b9\u5f0f\u6267\u884c\u3002 NESTED \u652f\u6301\u5f53\u524d\u4e8b\u52a1\uff0c\u65b0\u589e Savepoint \u70b9\uff0c\u4e0e\u5f53\u524d\u4e8b\u52a1\u540c\u6b65\u63d0\u4ea4\u6216\u56de\u6eda\u3002 \u6570\u636e\u5e93\u62c6\u5206\uff1a \u6c34\u5e73\u62c6\u5206 \u5782\u76f4\u62c6\u5206 \u7f13\u5b58 \u751f\u6210\u9759\u6001\u6587\u4ef6 \u4f7f\u7528\u5185\u5b58\u4f5c\u4e3a\u7f13\u5b58 \u4f7f\u7528\u7f13\u5b58\u6570\u636e\u5e93 Redis/Memcached \u5185\u5b58\u7f13\u5b58\u7ec4\u4ef6\uff1a oscache \u9875\u9762\u4e0a\u4f7f\u7528 eg: jsp ehcache \u6846\u67b6\u4e2d\u51fa\u73b0 eg: Hibernate\u3001MyBatis \u7f13\u5b58\u672c\u8d28 = \u51cf\u5c11\u7269\u7406\u78c1\u76d8\u8bfb\u53d6\u65f6\u95f4 \u7f13\u5b58\u4e0e\u6570\u636e\u5e93\u540c\u6b65 \u7f13\u5b58\u7684\u5185\u5bb9 99%\u60c5\u51b5\u4e0b\u548c\u6570\u636e\u90fd\u4e0d\u662f\u540c\u6b65\u7684 \u4e50\u89c2\u9501\u548c\u60b2\u89c2\u9501 \u60b2\u89c2\u9501\uff1a\u4e8b\u52a1\u63d0\u4ea4\u6216\u56de\u6eda\u4e4b\u524d\u8be5\u6570\u636e\u90fd\u4e0d\u5141\u8bb8\u66f4\u65b0 select * from \u8868\u540d for update \u4e50\u89c2\u9501\uff1a\uff08\u4e0d\u63a8\u8350\u4f7f\u7528\uff09\u591a\u52a0\u4e00\u4e2a\u5b57\u6bb5\u5217\uff1a\u7248\u672c\u53f7 version -- \u5141\u8bb8\u66f4\u65b0 update \u8868\u540d set name = \"Tom\" , version = version + 1 where id = 1 and version = 0 -- \u4e0d\u5141\u8bb8\u66f4\u65b0 update \u8868\u540d set name = \"Tom\" , version = version + 1 where id = 1 and version = 0 \u6570\u636e\u7f13\u5b58 \u5206\u5e03\u5f0f\u7684\u6838\u5fc3\u672c\u8d28\uff1a \u4e00\u53f0\u7535\u8111\u4e0a\u5b8c\u6210\u7684\u529f\u80fd\u4ea4\u7ed9\u591a\u53f0\u7535\u8111\u53bb\u505a \u6240\u6709 CPU \u53ef\u4ee5\u5904\u7406\u7684\u6570\u636e\u90fd\u8981\u5148\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d \u9700\u8981\u7f13\u5b58\u7684\u6570\u636e\uff1a\u70ed\u70b9\u64cd\u4f5c \u6e05\u7406\u7f13\u5b58\u6570\u636e\u7684\u65f6\u673a\uff1a\u5e38\u7528\u7b97\u6cd5: LRU\u3001FIFO \u7f13\u5b58\u540c\u6b65\uff1a\u7f13\u5b58\u6570\u636e\u53ea\u4f1a\u91c7\u7528\u53ea\u8bfb\u6a21\u5f0f \u7f13\u5b58\u5b9e\u73b0\uff1a \u6587\u4ef6\u7f13\u5b58: \u907f\u514d\u6587\u4ef6\u5185\u5bb9\u52a8\u6001\u751f\u6210 \u5185\u5b58\u7f13\u5b58 OSCache(jsp \u9875\u9762) EhCache \u7f13\u5b58\u6570\u636e\u5e93 Memcached Redis \u7f13\u5b58\u6570\u636e\u4e22\u5931 Zookeeper \u6570\u636e\u5e93\u66f4\u65b0\u76d1\u542c \u8bef\u533a\uff1a \u89e6\u53d1\u5668\uff1a\u53ea\u80fd\u591f\u5728\u6570\u636e\u5e93\u5c42\u6b21\u4e0a\u5b58\u5728 \u5b9a\u65f6\u6570\u636e\u76d1\u6d4b\uff1a\u4f1a\u989d\u5916\u589e\u52a0\u6570\u636e\u5e93\u8d1f\u8377 \u89e3\u51b3\uff1a\u5728\u4e1a\u52a1\u5c42\u52a0 AOP \u5904\u7406\u5c06\u66f4\u65b0\u6d88\u606f\u53d1\u5e03\u5230\u66f4\u65b0\u961f\u5217 \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u5b9e\u73b0\u539f\u7406 \u5bf9\u8c61\u6570\u7ec4\u548c\u8fde\u63a5\u72b6\u6001 ConcurrentHashMap \u6570\u636e\u5e93\u4e8b\u52a1\u63a7\u5236 \u6570\u636e\u5e93\u5212\u5206: \u5173\u7cfb\u578b\u6570\u636e\u5e93 NoSQL \u6570\u636e\u5e93 ACID \u539f\u5219: \u539f\u5b50\u6027\uff08Atomicity\uff0c\u6216\u79f0\u4e0d\u53ef\u5206\u5272\u6027\uff09 \u4e00\u81f4\u6027\uff08Consistency\uff09 \u9694\u79bb\u6027\uff08Isolation\uff0c\u53c8\u79f0\u72ec\u7acb\u6027\uff09 \u6301\u4e45\u6027\uff08Durability\uff09 \u539f\u5b50\u6027\uff1a\u4e00\u4e2a\u4e8b\u52a1\uff08transaction\uff09\u4e2d\u7684\u6240\u6709\u64cd\u4f5c\uff0c\u8981\u4e48\u5168\u90e8\u5b8c\u6210\uff0c\u8981\u4e48\u5168\u90e8\u4e0d\u5b8c\u6210\uff0c\u4e0d\u4f1a\u7ed3\u675f\u5728\u4e2d\u95f4\u67d0\u4e2a\u73af\u8282\u3002\u4e8b\u52a1\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u53d1\u751f\u9519\u8bef\uff0c\u4f1a\u88ab\u56de\u6eda\uff08Rollback\uff09\u5230\u4e8b\u52a1\u5f00\u59cb\u524d\u7684\u72b6\u6001\uff0c\u5c31\u50cf\u8fd9\u4e2a\u4e8b\u52a1\u4ece\u6765\u6ca1\u6709\u6267\u884c\u8fc7\u4e00\u6837\u3002 \u4e00\u81f4\u6027\uff1a\u5728\u4e8b\u52a1\u5f00\u59cb\u4e4b\u524d\u548c\u4e8b\u52a1\u7ed3\u675f\u4ee5\u540e\uff0c\u6570\u636e\u5e93\u7684\u5b8c\u6574\u6027\u6ca1\u6709\u88ab\u7834\u574f\u3002\u8fd9\u8868\u793a\u5199\u5165\u7684\u8d44\u6599\u5fc5\u987b\u5b8c\u5168\u7b26\u5408\u6240\u6709\u7684\u9884\u8bbe\u89c4\u5219\uff0c\u8fd9\u5305\u542b\u8d44\u6599\u7684\u7cbe\u786e\u5ea6\u3001\u4e32\u8054\u6027\u4ee5\u53ca\u540e\u7eed\u6570\u636e\u5e93\u53ef\u4ee5\u81ea\u53d1\u6027\u5730\u5b8c\u6210\u9884\u5b9a\u7684\u5de5\u4f5c\u3002 \u9694\u79bb\u6027\uff1a\u6570\u636e\u5e93\u5141\u8bb8\u591a\u4e2a\u5e76\u53d1\u4e8b\u52a1\u540c\u65f6\u5bf9\u5176\u6570\u636e\u8fdb\u884c\u8bfb\u5199\u548c\u4fee\u6539\u7684\u80fd\u529b\uff0c\u9694\u79bb\u6027\u53ef\u4ee5\u9632\u6b62\u591a\u4e2a\u4e8b\u52a1\u5e76\u53d1\u6267\u884c\u65f6\u7531\u4e8e\u4ea4\u53c9\u6267\u884c\u800c\u5bfc\u81f4\u6570\u636e\u7684\u4e0d\u4e00\u81f4\u3002\u4e8b\u52a1\u9694\u79bb\u5206\u4e3a\u4e0d\u540c\u7ea7\u522b\uff0c\u5305\u62ec \u8bfb\u672a\u63d0\u4ea4\uff08Read uncommitted\uff09 \u8bfb\u63d0\u4ea4\uff08read committed\uff09 \u53ef\u91cd\u590d\u8bfb\uff08repeatable read\uff09 \u4e32\u884c\u5316\uff08Serializable\uff09 \u6301\u4e45\u6027\uff1a\u4e8b\u52a1\u5904\u7406\u7ed3\u675f\u540e\uff0c\u5bf9\u6570\u636e\u7684\u4fee\u6539\u5c31\u662f\u6c38\u4e45\u7684\uff0c\u5373\u4fbf\u7cfb\u7edf\u6545\u969c\u4e5f\u4e0d\u4f1a\u4e22\u5931\u3002 \u5f00\u53d1\u4e2d\u5e38\u89c1\u7684\u4e8b\u52a1\u5904\u7406\uff1a JDBC \u4e8b\u52a1\u5904\u7406\uff1a commit()/rollback()/setAutoCommit() \u5bb9\u5668\u63a7\u5236\u4e8b\u52a1 \u4f7f\u7528 jta \u7ec4\u4ef6\uff0c\u4e00\u822c\u4e0d\u7528 Spring \u4e8b\u52a1\u63a7\u5236 \u4e8b\u52a1\u5904\u7406\u6838\u5fc3\u601d\u60f3\uff1a \u6240\u6709\u64cd\u4f5c\u8981\u4e48\u4e00\u8d77\u6210\u529f\uff0c\u8981\u4e48\u4e00\u8d77\u5931\u8d25 \u6570\u636e\u6e90 \u6570\u636e\u5e93\u7684\u6570\u636e\u6e90\u8bbe\u7f6e DataSource\uff0c\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u89e3\u51b3\u6570\u636e\u5e93\u7684\u9891\u7e41\u6253\u5f00\u4e0e\u5173\u95ed\u5e26\u6765\u7684\u6027\u80fd\u635f\u8017 \u6570\u636e\u6e90\uff1a\u4e0d\u8fdb\u884c\u91cd\u590d\u6253\u5f00\u4e0e\u5173\u95ed\uff0c\u4ee5\u53ca\u63a7\u5236\u8fde\u63a5\u4eba\u6570 \u6570\u636e\u6e90\u914d\u7f6e\u4e3b\u8981\u7684\u4e24\u79cd\u6a21\u5f0f \u5bb9\u5668\u914d\u7f6e Tomcat WebLogic WAS \u7a0b\u5e8f\u914d\u7f6e \uff08\u4f18\u5148\uff09Spring \u4e2d\u4f7f\u7528 C3p0 \u968f\u673a\u53d6\u5f97\u6570\u636e\u5e93\u6570\u636e \u7b97\u6cd5\uff1a count()\u53d6\u5f97\u6570\u636e\u91cf\u4e2a\u6570 Random.nextInt() id \u4e0d\u5b58\u5728\u518d\u751f\u6210\u4e00\u4e2a","title":"\u6570\u636e\u5e93"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/3-\u6570\u636e\u5e93\u5f00\u53d1/#_1","text":"","title":"\u6570\u636e\u5e93"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/3-\u6570\u636e\u5e93\u5f00\u53d1/#_2","text":"\u4f18\u5316\u5c42\u6b21 1\u3001\u8bed\u53e5\u4e0a\u7684\u4f18\u5316\uff1a \u5c3d\u91cf\u4e0d\u4f7f\u7528\u591a\u8868\u67e5\u8be2\uff0c\u4e0d\u8981\u9891\u7e41\u7684\u4f7f\u7528\u5404\u79cd\u795e\u5947\u7684\u7edf\u8ba1\u67e5\u8be2\uff08\u5efa\u8bae\u4f7f\u7528\u5b50\u67e5\u8be2\u4ee3\u66ff\uff09 2\u3001\u6570\u636e\u5e93\u4f18\u5316\u53ea\u80fd\u4f53\u73b0\u5728\u67e5\u8be2\u4e0a \u6570\u636e\u4e0d\u5e94\u8be5\u8fdb\u884c\u7269\u7406\u5220\u9664\uff0c\u800c\u8981\u8fdb\u884c\u903b\u8f91\u5220\u9664\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u7d22\u5f15\u4e0d\u88ab\u91cd\u65b0\u521b\u5efa \u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u65f6\u95f4\u6362\u7a7a\u95f4 3\u3001\u5982\u679c\u5b58\u5728\u591a\u4e2a RPC \u4e1a\u52a1\u7aef\u65f6\uff0c\u53ef\u4ee5\u8003\u8651\u8fdb\u884c\u5782\u76f4\u62c6\u5206\u5e93\uff0c\u53ea\u80fd\u6309\u7167\u529f\u80fd\u8fdb\u884c\u62c6\u5206\uff0c\u9700\u8981\u63a5\u53e3\u6280\u672f\u652f\u6301 4\u3001\u5206\u5e93\u4e5f\u65e0\u6cd5\u89e3\u51b3\u95ee\u9898\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u8003\u8651\u6570\u636e\u5e93\u7684\u6c34\u5e73\u62c6\u5206 5\u3001\u5982\u679c\u9700\u8981\u4fdd\u8bc1\u5f3a\u5927\u7684\u67e5\u8be2\u6027\u80fd\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u518d\u6b21\u5f15\u5165\u641c\u7d22\u5f15\u64ce\u8fdb\u884c\u5206\u8bcd\u5904\u7406","title":"\u6570\u636e\u5e93\u4f18\u5316"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/3-\u6570\u636e\u5e93\u5f00\u53d1/#nosql","text":"NoSQL \u53ef\u4ee5\u5b9e\u73b0\u6587\u6863\u5b58\u50a8\uff08BSON,JSON\uff09\u3001\u7f13\u5b58\u5b58\u50a8\u3001\u56fe\u50cf\u7f13\u5b58\uff08\u56fe\u50cf\u641c\u7d22\uff09 \u7f13\u5b58\u578b Redis \u7528\u4e8e\u5b9e\u73b0\uff1a\u8d2d\u7269\u8f66\uff0c\u77ed\u4fe1\u9a8c\u8bc1\u7801 \u6d88\u606f\u961f\u5217\uff1a Redis\u3001RabbitMQ\u3001Kafka \u4f18\u70b9\uff1a\u5b9e\u73b0\u6bcf\u79d2\u8fd1\u4e4e 10W \u6b21\u7684\u8bfb\u5199\u5904\u7406","title":"NoSQL \u4f7f\u7528\u573a\u666f"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/3-\u6570\u636e\u5e93\u5f00\u53d1/#_3","text":"WEB \u7aef \u89c6\u56fe\u5c42 \u63a7\u5236\u5c42 \u4e1a\u52a1\u5c42 \u6570\u636e\u5c42 \u6570\u636e\u5e93\u670d\u52a1\u5668 WEB \u7aef \u89c6\u56fe\u5c42 \u63a7\u5236\u5c42 RPC\u7aef \u4e1a\u52a1\u5c42 \u6570\u636e\u5c42 \u6570\u636e\u5e93\u670d\u52a1\u5668 RPC \u7aef\u5c06\u4e1a\u52a1\u5206\u79bb\u51fa\u6765\uff0cWEB \u7aef\u5b9e\u73b0\u4e1a\u52a1\u6574\u5408","title":"\u5206\u5e03\u5f0f\u6570\u636e\u5e93"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/3-\u6570\u636e\u5e93\u5f00\u53d1/#_4","text":"Spring \u4e8b\u52a1\u4f20\u64ad\u5c5e\u6027\uff08Propagation\uff09\uff1a REQUIRED\uff08\u9ed8\u8ba4\u5c5e\u6027\uff09\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u4e8b\u52a1\uff0c\u5219\u652f\u6301\u5f53\u524d\u4e8b\u52a1\u3002\u5982\u679c\u6ca1\u6709\u4e8b\u52a1\u5219\u5f00\u542f\u4e00\u4e2a\u65b0\u7684\u4e8b\u52a1\u3002 MANDATORY \u652f\u6301\u5f53\u524d\u4e8b\u52a1\uff0c\u5982\u679c\u5f53\u524d\u6ca1\u6709\u4e8b\u52a1\uff0c\u5c31\u629b\u51fa\u5f02\u5e38\u3002 NEVER \u4ee5\u975e\u4e8b\u52a1\u65b9\u5f0f\u6267\u884c\uff0c\u5982\u679c\u5f53\u524d\u5b58\u5728\u4e8b\u52a1\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002 NOT_SUPPORTED \u4ee5\u975e\u4e8b\u52a1\u65b9\u5f0f\u6267\u884c\u64cd\u4f5c\uff0c\u5982\u679c\u5f53\u524d\u5b58\u5728\u4e8b\u52a1\uff0c\u5c31\u628a\u5f53\u524d\u4e8b\u52a1\u6302\u8d77\u3002 REQUIRES_NEW \u65b0\u5efa\u4e8b\u52a1\uff0c\u5982\u679c\u5f53\u524d\u5b58\u5728\u4e8b\u52a1\uff0c\u628a\u5f53\u524d\u4e8b\u52a1\u6302\u8d77\u3002 SUPPORTS \u652f\u6301\u5f53\u524d\u4e8b\u52a1\uff0c\u5982\u679c\u5f53\u524d\u6ca1\u6709\u4e8b\u52a1\uff0c\u5c31\u4ee5\u975e\u4e8b\u52a1\u65b9\u5f0f\u6267\u884c\u3002 NESTED \u652f\u6301\u5f53\u524d\u4e8b\u52a1\uff0c\u65b0\u589e Savepoint \u70b9\uff0c\u4e0e\u5f53\u524d\u4e8b\u52a1\u540c\u6b65\u63d0\u4ea4\u6216\u56de\u6eda\u3002 \u6570\u636e\u5e93\u62c6\u5206\uff1a \u6c34\u5e73\u62c6\u5206 \u5782\u76f4\u62c6\u5206","title":"\u6570\u636e\u5e93\u8bbe\u8ba1"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/3-\u6570\u636e\u5e93\u5f00\u53d1/#_5","text":"\u751f\u6210\u9759\u6001\u6587\u4ef6 \u4f7f\u7528\u5185\u5b58\u4f5c\u4e3a\u7f13\u5b58 \u4f7f\u7528\u7f13\u5b58\u6570\u636e\u5e93 Redis/Memcached \u5185\u5b58\u7f13\u5b58\u7ec4\u4ef6\uff1a oscache \u9875\u9762\u4e0a\u4f7f\u7528 eg: jsp ehcache \u6846\u67b6\u4e2d\u51fa\u73b0 eg: Hibernate\u3001MyBatis \u7f13\u5b58\u672c\u8d28 = \u51cf\u5c11\u7269\u7406\u78c1\u76d8\u8bfb\u53d6\u65f6\u95f4","title":"\u7f13\u5b58"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/3-\u6570\u636e\u5e93\u5f00\u53d1/#_6","text":"\u7f13\u5b58\u7684\u5185\u5bb9 99%\u60c5\u51b5\u4e0b\u548c\u6570\u636e\u90fd\u4e0d\u662f\u540c\u6b65\u7684","title":"\u7f13\u5b58\u4e0e\u6570\u636e\u5e93\u540c\u6b65"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/3-\u6570\u636e\u5e93\u5f00\u53d1/#_7","text":"\u60b2\u89c2\u9501\uff1a\u4e8b\u52a1\u63d0\u4ea4\u6216\u56de\u6eda\u4e4b\u524d\u8be5\u6570\u636e\u90fd\u4e0d\u5141\u8bb8\u66f4\u65b0 select * from \u8868\u540d for update \u4e50\u89c2\u9501\uff1a\uff08\u4e0d\u63a8\u8350\u4f7f\u7528\uff09\u591a\u52a0\u4e00\u4e2a\u5b57\u6bb5\u5217\uff1a\u7248\u672c\u53f7 version -- \u5141\u8bb8\u66f4\u65b0 update \u8868\u540d set name = \"Tom\" , version = version + 1 where id = 1 and version = 0 -- \u4e0d\u5141\u8bb8\u66f4\u65b0 update \u8868\u540d set name = \"Tom\" , version = version + 1 where id = 1 and version = 0","title":"\u4e50\u89c2\u9501\u548c\u60b2\u89c2\u9501"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/3-\u6570\u636e\u5e93\u5f00\u53d1/#_8","text":"\u5206\u5e03\u5f0f\u7684\u6838\u5fc3\u672c\u8d28\uff1a \u4e00\u53f0\u7535\u8111\u4e0a\u5b8c\u6210\u7684\u529f\u80fd\u4ea4\u7ed9\u591a\u53f0\u7535\u8111\u53bb\u505a \u6240\u6709 CPU \u53ef\u4ee5\u5904\u7406\u7684\u6570\u636e\u90fd\u8981\u5148\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d \u9700\u8981\u7f13\u5b58\u7684\u6570\u636e\uff1a\u70ed\u70b9\u64cd\u4f5c \u6e05\u7406\u7f13\u5b58\u6570\u636e\u7684\u65f6\u673a\uff1a\u5e38\u7528\u7b97\u6cd5: LRU\u3001FIFO \u7f13\u5b58\u540c\u6b65\uff1a\u7f13\u5b58\u6570\u636e\u53ea\u4f1a\u91c7\u7528\u53ea\u8bfb\u6a21\u5f0f \u7f13\u5b58\u5b9e\u73b0\uff1a \u6587\u4ef6\u7f13\u5b58: \u907f\u514d\u6587\u4ef6\u5185\u5bb9\u52a8\u6001\u751f\u6210 \u5185\u5b58\u7f13\u5b58 OSCache(jsp \u9875\u9762) EhCache \u7f13\u5b58\u6570\u636e\u5e93 Memcached Redis \u7f13\u5b58\u6570\u636e\u4e22\u5931 Zookeeper","title":"\u6570\u636e\u7f13\u5b58"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/3-\u6570\u636e\u5e93\u5f00\u53d1/#_9","text":"\u8bef\u533a\uff1a \u89e6\u53d1\u5668\uff1a\u53ea\u80fd\u591f\u5728\u6570\u636e\u5e93\u5c42\u6b21\u4e0a\u5b58\u5728 \u5b9a\u65f6\u6570\u636e\u76d1\u6d4b\uff1a\u4f1a\u989d\u5916\u589e\u52a0\u6570\u636e\u5e93\u8d1f\u8377 \u89e3\u51b3\uff1a\u5728\u4e1a\u52a1\u5c42\u52a0 AOP \u5904\u7406\u5c06\u66f4\u65b0\u6d88\u606f\u53d1\u5e03\u5230\u66f4\u65b0\u961f\u5217","title":"\u6570\u636e\u5e93\u66f4\u65b0\u76d1\u542c"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/3-\u6570\u636e\u5e93\u5f00\u53d1/#_10","text":"\u5bf9\u8c61\u6570\u7ec4\u548c\u8fde\u63a5\u72b6\u6001 ConcurrentHashMap","title":"\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u5b9e\u73b0\u539f\u7406"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/3-\u6570\u636e\u5e93\u5f00\u53d1/#_11","text":"\u6570\u636e\u5e93\u5212\u5206: \u5173\u7cfb\u578b\u6570\u636e\u5e93 NoSQL \u6570\u636e\u5e93 ACID \u539f\u5219: \u539f\u5b50\u6027\uff08Atomicity\uff0c\u6216\u79f0\u4e0d\u53ef\u5206\u5272\u6027\uff09 \u4e00\u81f4\u6027\uff08Consistency\uff09 \u9694\u79bb\u6027\uff08Isolation\uff0c\u53c8\u79f0\u72ec\u7acb\u6027\uff09 \u6301\u4e45\u6027\uff08Durability\uff09 \u539f\u5b50\u6027\uff1a\u4e00\u4e2a\u4e8b\u52a1\uff08transaction\uff09\u4e2d\u7684\u6240\u6709\u64cd\u4f5c\uff0c\u8981\u4e48\u5168\u90e8\u5b8c\u6210\uff0c\u8981\u4e48\u5168\u90e8\u4e0d\u5b8c\u6210\uff0c\u4e0d\u4f1a\u7ed3\u675f\u5728\u4e2d\u95f4\u67d0\u4e2a\u73af\u8282\u3002\u4e8b\u52a1\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u53d1\u751f\u9519\u8bef\uff0c\u4f1a\u88ab\u56de\u6eda\uff08Rollback\uff09\u5230\u4e8b\u52a1\u5f00\u59cb\u524d\u7684\u72b6\u6001\uff0c\u5c31\u50cf\u8fd9\u4e2a\u4e8b\u52a1\u4ece\u6765\u6ca1\u6709\u6267\u884c\u8fc7\u4e00\u6837\u3002 \u4e00\u81f4\u6027\uff1a\u5728\u4e8b\u52a1\u5f00\u59cb\u4e4b\u524d\u548c\u4e8b\u52a1\u7ed3\u675f\u4ee5\u540e\uff0c\u6570\u636e\u5e93\u7684\u5b8c\u6574\u6027\u6ca1\u6709\u88ab\u7834\u574f\u3002\u8fd9\u8868\u793a\u5199\u5165\u7684\u8d44\u6599\u5fc5\u987b\u5b8c\u5168\u7b26\u5408\u6240\u6709\u7684\u9884\u8bbe\u89c4\u5219\uff0c\u8fd9\u5305\u542b\u8d44\u6599\u7684\u7cbe\u786e\u5ea6\u3001\u4e32\u8054\u6027\u4ee5\u53ca\u540e\u7eed\u6570\u636e\u5e93\u53ef\u4ee5\u81ea\u53d1\u6027\u5730\u5b8c\u6210\u9884\u5b9a\u7684\u5de5\u4f5c\u3002 \u9694\u79bb\u6027\uff1a\u6570\u636e\u5e93\u5141\u8bb8\u591a\u4e2a\u5e76\u53d1\u4e8b\u52a1\u540c\u65f6\u5bf9\u5176\u6570\u636e\u8fdb\u884c\u8bfb\u5199\u548c\u4fee\u6539\u7684\u80fd\u529b\uff0c\u9694\u79bb\u6027\u53ef\u4ee5\u9632\u6b62\u591a\u4e2a\u4e8b\u52a1\u5e76\u53d1\u6267\u884c\u65f6\u7531\u4e8e\u4ea4\u53c9\u6267\u884c\u800c\u5bfc\u81f4\u6570\u636e\u7684\u4e0d\u4e00\u81f4\u3002\u4e8b\u52a1\u9694\u79bb\u5206\u4e3a\u4e0d\u540c\u7ea7\u522b\uff0c\u5305\u62ec \u8bfb\u672a\u63d0\u4ea4\uff08Read uncommitted\uff09 \u8bfb\u63d0\u4ea4\uff08read committed\uff09 \u53ef\u91cd\u590d\u8bfb\uff08repeatable read\uff09 \u4e32\u884c\u5316\uff08Serializable\uff09 \u6301\u4e45\u6027\uff1a\u4e8b\u52a1\u5904\u7406\u7ed3\u675f\u540e\uff0c\u5bf9\u6570\u636e\u7684\u4fee\u6539\u5c31\u662f\u6c38\u4e45\u7684\uff0c\u5373\u4fbf\u7cfb\u7edf\u6545\u969c\u4e5f\u4e0d\u4f1a\u4e22\u5931\u3002 \u5f00\u53d1\u4e2d\u5e38\u89c1\u7684\u4e8b\u52a1\u5904\u7406\uff1a JDBC \u4e8b\u52a1\u5904\u7406\uff1a commit()/rollback()/setAutoCommit() \u5bb9\u5668\u63a7\u5236\u4e8b\u52a1 \u4f7f\u7528 jta \u7ec4\u4ef6\uff0c\u4e00\u822c\u4e0d\u7528 Spring \u4e8b\u52a1\u63a7\u5236 \u4e8b\u52a1\u5904\u7406\u6838\u5fc3\u601d\u60f3\uff1a \u6240\u6709\u64cd\u4f5c\u8981\u4e48\u4e00\u8d77\u6210\u529f\uff0c\u8981\u4e48\u4e00\u8d77\u5931\u8d25","title":"\u6570\u636e\u5e93\u4e8b\u52a1\u63a7\u5236"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/3-\u6570\u636e\u5e93\u5f00\u53d1/#_12","text":"\u6570\u636e\u5e93\u7684\u6570\u636e\u6e90\u8bbe\u7f6e DataSource\uff0c\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u89e3\u51b3\u6570\u636e\u5e93\u7684\u9891\u7e41\u6253\u5f00\u4e0e\u5173\u95ed\u5e26\u6765\u7684\u6027\u80fd\u635f\u8017 \u6570\u636e\u6e90\uff1a\u4e0d\u8fdb\u884c\u91cd\u590d\u6253\u5f00\u4e0e\u5173\u95ed\uff0c\u4ee5\u53ca\u63a7\u5236\u8fde\u63a5\u4eba\u6570 \u6570\u636e\u6e90\u914d\u7f6e\u4e3b\u8981\u7684\u4e24\u79cd\u6a21\u5f0f \u5bb9\u5668\u914d\u7f6e Tomcat WebLogic WAS \u7a0b\u5e8f\u914d\u7f6e \uff08\u4f18\u5148\uff09Spring \u4e2d\u4f7f\u7528 C3p0","title":"\u6570\u636e\u6e90"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/3-\u6570\u636e\u5e93\u5f00\u53d1/#_13","text":"\u7b97\u6cd5\uff1a count()\u53d6\u5f97\u6570\u636e\u91cf\u4e2a\u6570 Random.nextInt() id \u4e0d\u5b58\u5728\u518d\u751f\u6210\u4e00\u4e2a","title":"\u968f\u673a\u53d6\u5f97\u6570\u636e\u5e93\u6570\u636e"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/4-\u5f00\u53d1\u5de5\u5177\u53ca\u6846\u67b6/","text":"4-\u5f00\u53d1\u5de5\u5177\u53ca\u6846\u67b6","title":"4-\u5f00\u53d1\u5de5\u5177\u53ca\u6846\u67b6"},{"location":"Java/Java\u9762\u8bd5\u6280\u5de7/4-\u5f00\u53d1\u5de5\u5177\u53ca\u6846\u67b6/#4-","text":"","title":"4-\u5f00\u53d1\u5de5\u5177\u53ca\u6846\u67b6"},{"location":"Java/SpringBoot/","text":"Spring Boot \u8bfe\u7a0b\u76ee\u5f55 \u7b2c\u4e00\u7ae0 Spring Boot \u5165\u95e8 \u7b2c\u4e8c\u7ae0-SpringBoot \u914d\u7f6e \u7b2c\u4e09\u7ae0-SpringBoot \u65e5\u5fd7 \u7b2c\u56db\u7ae0-SpringBootWeb \u5f00\u53d1 \u7b2c\u4e94\u7ae0-SpringBoot \u4e0e Docker \u7b2c\u516d\u7ae0-SpringBoot \u4e0e\u6570\u636e\u8bbf\u95ee \u7b2c\u4e03\u7ae0-SpringBoot \u542f\u52a8\u914d\u7f6e\u539f\u7406 \u7b2c\u516b\u7ae0-SpringBoot \u81ea\u5b9a\u4e49 starters \u7b2c\u4e5d\u7ae0-SpringBoot \u4e0e\u7f13\u5b58 \u7b2c\u5341\u7ae0-SpringBoot \u4e0e\u6d88\u606f \u7b2c\u5341\u4e00\u7ae0-SpringBoot \u4e0e\u68c0\u7d22 \u7b2c\u5341\u4e8c\u7ae0-SpringBoot \u4e0e\u4efb\u52a1 \u7b2c\u5341\u4e09\u7ae0-SpringBoot \u4e0e\u5b89\u5168 \u7b2c\u5341\u56db\u7ae0-SpringBoot \u4e0e\u5206\u5e03\u5f0f \u7b2c\u5341\u4e94\u7ae0-SpringBoot \u4e0e\u90e8\u7f72 \u7b2c\u5341\u516d\u7ae0-SpringBoot \u4e0e\u76d1\u63a7\u7ba1\u7406 \u8bfe\u7a0b\u89c6\u9891\u5730\u5740 1-8 \u7ae0\uff1a SpringBoot \u5feb\u901f\u638c\u63e1(1)\uff1a\u6838\u5fc3\u6280\u672f 9-16 \u7ae0\uff1a SpringBoot \u5feb\u901f\u638c\u63e1(2)\uff1a\u9ad8\u7ea7\u5e94\u7528 \u793a\u4f8b\u4ee3\u7801\u5730\u5740: https://github.com/mouday/SpringBoot-demo \u7b14\u8bb0\u5730\u5740\uff1a https://www.pengshiyu.com/LearningNote/Java/springboot/index","title":"Spring Boot"},{"location":"Java/SpringBoot/#spring-boot","text":"","title":"Spring Boot"},{"location":"Java/SpringBoot/#_1","text":"\u7b2c\u4e00\u7ae0 Spring Boot \u5165\u95e8 \u7b2c\u4e8c\u7ae0-SpringBoot \u914d\u7f6e \u7b2c\u4e09\u7ae0-SpringBoot \u65e5\u5fd7 \u7b2c\u56db\u7ae0-SpringBootWeb \u5f00\u53d1 \u7b2c\u4e94\u7ae0-SpringBoot \u4e0e Docker \u7b2c\u516d\u7ae0-SpringBoot \u4e0e\u6570\u636e\u8bbf\u95ee \u7b2c\u4e03\u7ae0-SpringBoot \u542f\u52a8\u914d\u7f6e\u539f\u7406 \u7b2c\u516b\u7ae0-SpringBoot \u81ea\u5b9a\u4e49 starters \u7b2c\u4e5d\u7ae0-SpringBoot \u4e0e\u7f13\u5b58 \u7b2c\u5341\u7ae0-SpringBoot \u4e0e\u6d88\u606f \u7b2c\u5341\u4e00\u7ae0-SpringBoot \u4e0e\u68c0\u7d22 \u7b2c\u5341\u4e8c\u7ae0-SpringBoot \u4e0e\u4efb\u52a1 \u7b2c\u5341\u4e09\u7ae0-SpringBoot \u4e0e\u5b89\u5168 \u7b2c\u5341\u56db\u7ae0-SpringBoot \u4e0e\u5206\u5e03\u5f0f \u7b2c\u5341\u4e94\u7ae0-SpringBoot \u4e0e\u90e8\u7f72 \u7b2c\u5341\u516d\u7ae0-SpringBoot \u4e0e\u76d1\u63a7\u7ba1\u7406","title":"\u8bfe\u7a0b\u76ee\u5f55"},{"location":"Java/SpringBoot/#_2","text":"1-8 \u7ae0\uff1a SpringBoot \u5feb\u901f\u638c\u63e1(1)\uff1a\u6838\u5fc3\u6280\u672f 9-16 \u7ae0\uff1a SpringBoot \u5feb\u901f\u638c\u63e1(2)\uff1a\u9ad8\u7ea7\u5e94\u7528 \u793a\u4f8b\u4ee3\u7801\u5730\u5740: https://github.com/mouday/SpringBoot-demo \u7b14\u8bb0\u5730\u5740\uff1a https://www.pengshiyu.com/LearningNote/Java/springboot/index","title":"\u8bfe\u7a0b\u89c6\u9891\u5730\u5740"},{"location":"Java/SpringBoot/\u7b2c\u4e00\u7ae0-SpringBoot\u5165\u95e8/","text":"\u7b2c\u4e00\u7ae0 Spring Boot \u5165\u95e8 1\u3001SpringBoot \u7b80\u4ecb 1\u3001\u7b80\u4ecb SpringBoot \u7b80\u5316\u4e86 Spring \u5e94\u7528\u5f00\u53d1\uff0c\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e \u6574\u4e2a Spring \u6280\u672f\u6808\u7684\u4e00\u4e2a\u5927\u6574\u5408 J2EE \u5f00\u53d1\u4e00\u7ad9\u5f0f\u89e3\u51b3\u65b9\u6848 2\u3001\u4f18\u70b9 \u5feb\u901f\u5efa\u7acb\u72ec\u7acb\u8fd0\u884c\u7684 Spring \u9879\u76ee\u4ee5\u53ca\u4e0e\u4e3b\u6d41\u6846\u67b6\u96c6\u6210 \u4f7f\u7528\u5d4c\u5165\u5f0f\u7684 Servlet \u5bb9\u5668\uff0c\u5e94\u7528\u65e0\u9700\u6253\u6210 war \u5305 starts \u81ea\u52a8\u4f9d\u8d56\u4e0e\u7248\u672c\u63a7\u5236 \u5927\u91cf\u7684\u81ea\u52a8\u914d\u7f6e\uff0c\u7b80\u5316\u5f00\u53d1\uff0c\u4e5f\u53ef\u4ee5\u4fee\u6539\u9ed8\u8ba4\u503c \u65e0\u9700\u914d\u7f6e XML,\u65e0\u4ee3\u7801\u751f\u6210\uff0c\u5f00\u7bb1\u5373\u7528 \u51c6\u751f\u4ea7\u73af\u5883\u7684\u8fd0\u884c\u65f6\u5e94\u7528\u76d1\u63a7 \u4e0e\u4e91\u8ba1\u7b97\u7684\u5929\u7136\u96c6\u6210 3\u3001\u7f3a\u70b9 \u9700\u8981\u5b66\u4e60 Spring 2\u3001\u5fae\u670d\u52a1 2014 \u5e74 martin fowler \u539f\u6587\uff1ahttps://martinfowler.com/articles/microservices.html \u8bd1\u6587\uff1ahttp://blog.cuicc.com/blog/2015/07/22/microservices/ \u5fae\u670d\u52a1\u662f\u4e00\u79cd\u67b6\u6784\u98ce\u683c \u4e00\u4e2a\u5e94\u7528\u5e94\u8be5\u662f\u4e00\u7ec4\u5c0f\u578b\u670d\u52a1 \u53ef\u4ee5\u901a\u8fc7 HTTP \u7684\u65b9\u5f0f\u8fdb\u884c\u4e92\u901a \u6bcf\u4e2a\u529f\u80fd\u5143\u7d20\u6700\u7ec8\u90fd\u662f\u4e00\u4e2a\u53ef\u72ec\u7acb\u66ff\u6362\u548c\u72ec\u7acb\u5347\u7ea7\u7684\u8f6f\u4ef6\u5355\u5143 \u5355\u4f53\u5e94\u7528 <-> \u5fae\u670d\u52a1 3\u3001\u73af\u5883\u51c6\u5907 JDK 1 . 8 Maven 3 . x IntelliJ IDEA 2017 \u6216\u8005 STS SpringBoot 1 . 5 . 9 . RELEASE $ java -version java version \"1.8.0_221\" $ mvn -v Apache Maven 3 .6.3 1\u3001\u4fee\u6539\u7528\u6237\u7ea7\u522b\u8bbe\u7f6e maven ~/.m2/settins.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <settings xmlns= \"http://maven.apache.org/SETTINGS/1.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\" > <!-- \u914d\u7f6e\u955c\u50cf --> <mirrors> <mirror> <id> alimaven </id> <name> aliyun maven </name> <mirrorOf> central </mirrorOf> <url> http://maven.aliyun.com/nexus/content/groups/public/ </url> </mirror> <mirror> <id> alimaven </id> <name> aliyun maven </name> <mirrorOf> central </mirrorOf> <url> http://maven.aliyun.com/nexus/content/repositories/central/ </url> </mirror> </mirrors> <profiles> <profile> <id> jdk-1.8 </id> <activation> <activeByDefault> true </activeByDefault> <jdk> 1.8 </jdk> </activation> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> <maven.compiler.compilerVersion> 1.8 </maven.compiler.compilerVersion> </properties> </profile> </profiles> </settings> 2\u3001\u4fee\u6539 IDEA \u7684 maven \u8def\u5f84 4\u3001SpringBoot HelloWorld 1\u3001\u521b\u5efa Maven \u5de5\u7a0b 2\u3001\u5bfc\u5165 SpringBoot \u4f9d\u8d56 <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 1.5.9.RELEASE </version> </parent> <dependencies> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> </dependency> </dependencies> <build> <plugins> <plugin> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-maven-plugin </artifactId> </plugin> </plugins> </build> 3\u3001\u521b\u5efa\u4e3b\u7a0b\u5e8f package com.mouday ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; // \u6807\u6ce8\u4e3b\u7a0b\u5e8f\uff0c\u8bf4\u660e\u8fd9\u662f\u4e00\u4e2aSpringBoot\u5e94\u7528 @SpringBootApplication public class ApplicationMain { public static void main ( String [] args ) { SpringApplication . run ( ApplicationMain . class , args ); } } 4\u3001\u521b\u5efa Controller package com.mouday.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.ResponseBody ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) @ResponseBody public String hello (){ return \"Hello world!\" ; } } 5\u3001\u542f\u52a8\u7a0b\u5e8f $mvn spring-boot:run \u8bbf\u95ee\uff1a http://localhost:8080/hello 6\u3001\u7b80\u5316\u90e8\u7f72 \u53ef\u4ee5\u5c06\u5e94\u7528\u6253\u5305\u6210\u4e00\u4e2a\u53ef\u6267\u884c jar \u5305 # \u6253\u5305 $ mvn clean package # \u8fd0\u884c $ java -jar springboot-helloword-1.0-SNAPSHOT.jar 5\u3001\u6587\u4ef6\u8bf4\u660e pom.xml 1\u3001\u7236\u9879\u76ee <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 1.5.9.RELEASE </version> </parent> SpringBoot \u7248\u672c\u4ef2\u88c1\u4e2d\u5fc3 \u6211\u4eec\u5bfc\u5165\u7684\u4f9d\u8d56\u9ed8\u8ba4\u4e0d\u9700\u8981\u5199\u7248\u672c \u6ca1\u6709\u5728 dependencies \u4e2d\u7ba1\u7406\u7684\u4f9d\u8d56\u9700\u8981\u4e9b\u7248\u672c\u53f7 2\u3001\u5bfc\u5165\u7684\u4f9d\u8d56 <dependencies> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> </dependency> </dependencies> spring-boot-start: springBoot \u573a\u666f\u542f\u52a8\u5668 \u5e2e\u6211\u4eec\u5bfc\u5165\u4e86 web \u6a21\u5757\u6b63\u5e38\u8fd0\u884c\u6240\u4f9d\u8d56\u7684\u7ec4\u4ef6 spring-boot \u5c06\u6240\u6709\u7684\u529f\u80fd\u573a\u666f\u90fd\u62bd\u53d6\u51fa\u6765\uff0c\u505a\u6210\u4e00\u4e2a\u4e2a\u7684 starters \u542f\u52a8\u5668 6\u3001\u81ea\u52a8\u914d\u7f6e package com.mouday ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; @SpringBootApplication public class ApplicationMain { public static void main ( String [] args ) { SpringApplication . run ( ApplicationMain . class , args ); } } @SpringBootApplication \u6807\u6ce8 SpringBoot \u7684\u4e3b\u914d\u7f6e\u7c7b @SpringBootConfiguration \u914d\u7f6e\u7c7b @Configuration \u6807\u6ce8\u914d\u7f6e\u7c7b \u914d\u7f6e\u7c7b - \u914d\u7f6e\u6587\u4ef6 \u914d\u7f6e\u7c7b\u4e5f\u662f\u5bb9\u5668\u7684\u4e00\u4e2a\u7ec4\u4ef6 @Component @EnableAutoConfiguration \u5f00\u542f\u81ea\u52a8\u914d\u7f6e\u529f\u80fd @AutoConfigurationPackage \u81ea\u52a8\u914d\u7f6e\u5305 \u5c06\u4e3b\u914d\u7f6e\u7c7b\u6240\u5728\u7684\u5305\u53ca\u4e0b\u9762\u5b50\u5305\u6240\u6709\u7ec4\u4ef6\u626b\u63cf\u5230 Spring \u5bb9\u5668 @Import \u7ed9\u5bb9\u5668\u4e2d\u5bfc\u5165\u4e00\u4e2a\u7ec4\u4ef6 \u4ece META-INF/spring.factories \u5bfc\u5165\u81ea\u52a8\u914d\u7f6e\u7c7b \u81ea\u52a8\u914d\u7f6e\u7c7b org.springframework.boot.autoconfigure 7\u3001\u4f7f\u7528\u5411\u5bfc\u5feb\u901f\u521b\u5efa Spring Boot \u5e94\u7528 https://start.spring.io/ @ReponseBody \u7528\u5728\u65b9\u6cd5\u4e0a\uff0c\u65b9\u6cd5\u76f4\u63a5\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 \u7528\u5728\u7c7b\u4e0a\uff0c\u7c7b\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u76f4\u63a5\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668\uff0c\u5982\u679c\u662f\u5bf9\u8c61\u8f6c\u4e3a JSON @RestController \u7b49\u4ef7\u4e8e\uff1a @Controller @ResponseBody \u9ed8\u8ba4\u751f\u6210\u7684 SpringBoot \u9879\u76ee resources / static \u4fdd\u5b58\u9759\u6001\u8d44\u6e90 js / css / image tamplates \u6a21\u677f\u9875\u9762 \u9ed8\u8ba4\u4e0d\u652f\u6301 jsp \uff0c\u53ef\u4ee5\u4f7f\u7528\u6a21\u677f\u5f15\u64ce\uff08 freemaker / thymeleaf \uff09 application . properties \u5e94\u7528\u914d\u7f6e","title":"\u7b2c\u4e00\u7ae0 Spring Boot \u5165\u95e8"},{"location":"Java/SpringBoot/\u7b2c\u4e00\u7ae0-SpringBoot\u5165\u95e8/#spring-boot","text":"","title":"\u7b2c\u4e00\u7ae0 Spring Boot \u5165\u95e8"},{"location":"Java/SpringBoot/\u7b2c\u4e00\u7ae0-SpringBoot\u5165\u95e8/#1springboot","text":"1\u3001\u7b80\u4ecb SpringBoot \u7b80\u5316\u4e86 Spring \u5e94\u7528\u5f00\u53d1\uff0c\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e \u6574\u4e2a Spring \u6280\u672f\u6808\u7684\u4e00\u4e2a\u5927\u6574\u5408 J2EE \u5f00\u53d1\u4e00\u7ad9\u5f0f\u89e3\u51b3\u65b9\u6848 2\u3001\u4f18\u70b9 \u5feb\u901f\u5efa\u7acb\u72ec\u7acb\u8fd0\u884c\u7684 Spring \u9879\u76ee\u4ee5\u53ca\u4e0e\u4e3b\u6d41\u6846\u67b6\u96c6\u6210 \u4f7f\u7528\u5d4c\u5165\u5f0f\u7684 Servlet \u5bb9\u5668\uff0c\u5e94\u7528\u65e0\u9700\u6253\u6210 war \u5305 starts \u81ea\u52a8\u4f9d\u8d56\u4e0e\u7248\u672c\u63a7\u5236 \u5927\u91cf\u7684\u81ea\u52a8\u914d\u7f6e\uff0c\u7b80\u5316\u5f00\u53d1\uff0c\u4e5f\u53ef\u4ee5\u4fee\u6539\u9ed8\u8ba4\u503c \u65e0\u9700\u914d\u7f6e XML,\u65e0\u4ee3\u7801\u751f\u6210\uff0c\u5f00\u7bb1\u5373\u7528 \u51c6\u751f\u4ea7\u73af\u5883\u7684\u8fd0\u884c\u65f6\u5e94\u7528\u76d1\u63a7 \u4e0e\u4e91\u8ba1\u7b97\u7684\u5929\u7136\u96c6\u6210 3\u3001\u7f3a\u70b9 \u9700\u8981\u5b66\u4e60 Spring","title":"1\u3001SpringBoot \u7b80\u4ecb"},{"location":"Java/SpringBoot/\u7b2c\u4e00\u7ae0-SpringBoot\u5165\u95e8/#2","text":"2014 \u5e74 martin fowler \u539f\u6587\uff1ahttps://martinfowler.com/articles/microservices.html \u8bd1\u6587\uff1ahttp://blog.cuicc.com/blog/2015/07/22/microservices/ \u5fae\u670d\u52a1\u662f\u4e00\u79cd\u67b6\u6784\u98ce\u683c \u4e00\u4e2a\u5e94\u7528\u5e94\u8be5\u662f\u4e00\u7ec4\u5c0f\u578b\u670d\u52a1 \u53ef\u4ee5\u901a\u8fc7 HTTP \u7684\u65b9\u5f0f\u8fdb\u884c\u4e92\u901a \u6bcf\u4e2a\u529f\u80fd\u5143\u7d20\u6700\u7ec8\u90fd\u662f\u4e00\u4e2a\u53ef\u72ec\u7acb\u66ff\u6362\u548c\u72ec\u7acb\u5347\u7ea7\u7684\u8f6f\u4ef6\u5355\u5143 \u5355\u4f53\u5e94\u7528 <-> \u5fae\u670d\u52a1","title":"2\u3001\u5fae\u670d\u52a1"},{"location":"Java/SpringBoot/\u7b2c\u4e00\u7ae0-SpringBoot\u5165\u95e8/#3","text":"JDK 1 . 8 Maven 3 . x IntelliJ IDEA 2017 \u6216\u8005 STS SpringBoot 1 . 5 . 9 . RELEASE $ java -version java version \"1.8.0_221\" $ mvn -v Apache Maven 3 .6.3 1\u3001\u4fee\u6539\u7528\u6237\u7ea7\u522b\u8bbe\u7f6e maven ~/.m2/settins.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <settings xmlns= \"http://maven.apache.org/SETTINGS/1.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\" > <!-- \u914d\u7f6e\u955c\u50cf --> <mirrors> <mirror> <id> alimaven </id> <name> aliyun maven </name> <mirrorOf> central </mirrorOf> <url> http://maven.aliyun.com/nexus/content/groups/public/ </url> </mirror> <mirror> <id> alimaven </id> <name> aliyun maven </name> <mirrorOf> central </mirrorOf> <url> http://maven.aliyun.com/nexus/content/repositories/central/ </url> </mirror> </mirrors> <profiles> <profile> <id> jdk-1.8 </id> <activation> <activeByDefault> true </activeByDefault> <jdk> 1.8 </jdk> </activation> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> <maven.compiler.compilerVersion> 1.8 </maven.compiler.compilerVersion> </properties> </profile> </profiles> </settings> 2\u3001\u4fee\u6539 IDEA \u7684 maven \u8def\u5f84","title":"3\u3001\u73af\u5883\u51c6\u5907"},{"location":"Java/SpringBoot/\u7b2c\u4e00\u7ae0-SpringBoot\u5165\u95e8/#4springboot-helloworld","text":"1\u3001\u521b\u5efa Maven \u5de5\u7a0b 2\u3001\u5bfc\u5165 SpringBoot \u4f9d\u8d56 <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 1.5.9.RELEASE </version> </parent> <dependencies> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> </dependency> </dependencies> <build> <plugins> <plugin> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-maven-plugin </artifactId> </plugin> </plugins> </build> 3\u3001\u521b\u5efa\u4e3b\u7a0b\u5e8f package com.mouday ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; // \u6807\u6ce8\u4e3b\u7a0b\u5e8f\uff0c\u8bf4\u660e\u8fd9\u662f\u4e00\u4e2aSpringBoot\u5e94\u7528 @SpringBootApplication public class ApplicationMain { public static void main ( String [] args ) { SpringApplication . run ( ApplicationMain . class , args ); } } 4\u3001\u521b\u5efa Controller package com.mouday.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.ResponseBody ; @Controller public class HelloController { @RequestMapping ( \"/hello\" ) @ResponseBody public String hello (){ return \"Hello world!\" ; } } 5\u3001\u542f\u52a8\u7a0b\u5e8f $mvn spring-boot:run \u8bbf\u95ee\uff1a http://localhost:8080/hello 6\u3001\u7b80\u5316\u90e8\u7f72 \u53ef\u4ee5\u5c06\u5e94\u7528\u6253\u5305\u6210\u4e00\u4e2a\u53ef\u6267\u884c jar \u5305 # \u6253\u5305 $ mvn clean package # \u8fd0\u884c $ java -jar springboot-helloword-1.0-SNAPSHOT.jar","title":"4\u3001SpringBoot HelloWorld"},{"location":"Java/SpringBoot/\u7b2c\u4e00\u7ae0-SpringBoot\u5165\u95e8/#5","text":"pom.xml 1\u3001\u7236\u9879\u76ee <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 1.5.9.RELEASE </version> </parent> SpringBoot \u7248\u672c\u4ef2\u88c1\u4e2d\u5fc3 \u6211\u4eec\u5bfc\u5165\u7684\u4f9d\u8d56\u9ed8\u8ba4\u4e0d\u9700\u8981\u5199\u7248\u672c \u6ca1\u6709\u5728 dependencies \u4e2d\u7ba1\u7406\u7684\u4f9d\u8d56\u9700\u8981\u4e9b\u7248\u672c\u53f7 2\u3001\u5bfc\u5165\u7684\u4f9d\u8d56 <dependencies> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> </dependency> </dependencies> spring-boot-start: springBoot \u573a\u666f\u542f\u52a8\u5668 \u5e2e\u6211\u4eec\u5bfc\u5165\u4e86 web \u6a21\u5757\u6b63\u5e38\u8fd0\u884c\u6240\u4f9d\u8d56\u7684\u7ec4\u4ef6 spring-boot \u5c06\u6240\u6709\u7684\u529f\u80fd\u573a\u666f\u90fd\u62bd\u53d6\u51fa\u6765\uff0c\u505a\u6210\u4e00\u4e2a\u4e2a\u7684 starters \u542f\u52a8\u5668","title":"5\u3001\u6587\u4ef6\u8bf4\u660e"},{"location":"Java/SpringBoot/\u7b2c\u4e00\u7ae0-SpringBoot\u5165\u95e8/#6","text":"package com.mouday ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; @SpringBootApplication public class ApplicationMain { public static void main ( String [] args ) { SpringApplication . run ( ApplicationMain . class , args ); } } @SpringBootApplication \u6807\u6ce8 SpringBoot \u7684\u4e3b\u914d\u7f6e\u7c7b @SpringBootConfiguration \u914d\u7f6e\u7c7b @Configuration \u6807\u6ce8\u914d\u7f6e\u7c7b \u914d\u7f6e\u7c7b - \u914d\u7f6e\u6587\u4ef6 \u914d\u7f6e\u7c7b\u4e5f\u662f\u5bb9\u5668\u7684\u4e00\u4e2a\u7ec4\u4ef6 @Component @EnableAutoConfiguration \u5f00\u542f\u81ea\u52a8\u914d\u7f6e\u529f\u80fd @AutoConfigurationPackage \u81ea\u52a8\u914d\u7f6e\u5305 \u5c06\u4e3b\u914d\u7f6e\u7c7b\u6240\u5728\u7684\u5305\u53ca\u4e0b\u9762\u5b50\u5305\u6240\u6709\u7ec4\u4ef6\u626b\u63cf\u5230 Spring \u5bb9\u5668 @Import \u7ed9\u5bb9\u5668\u4e2d\u5bfc\u5165\u4e00\u4e2a\u7ec4\u4ef6 \u4ece META-INF/spring.factories \u5bfc\u5165\u81ea\u52a8\u914d\u7f6e\u7c7b \u81ea\u52a8\u914d\u7f6e\u7c7b org.springframework.boot.autoconfigure","title":"6\u3001\u81ea\u52a8\u914d\u7f6e"},{"location":"Java/SpringBoot/\u7b2c\u4e00\u7ae0-SpringBoot\u5165\u95e8/#7-spring-boot","text":"https://start.spring.io/ @ReponseBody \u7528\u5728\u65b9\u6cd5\u4e0a\uff0c\u65b9\u6cd5\u76f4\u63a5\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 \u7528\u5728\u7c7b\u4e0a\uff0c\u7c7b\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u76f4\u63a5\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668\uff0c\u5982\u679c\u662f\u5bf9\u8c61\u8f6c\u4e3a JSON @RestController \u7b49\u4ef7\u4e8e\uff1a @Controller @ResponseBody \u9ed8\u8ba4\u751f\u6210\u7684 SpringBoot \u9879\u76ee resources / static \u4fdd\u5b58\u9759\u6001\u8d44\u6e90 js / css / image tamplates \u6a21\u677f\u9875\u9762 \u9ed8\u8ba4\u4e0d\u652f\u6301 jsp \uff0c\u53ef\u4ee5\u4f7f\u7528\u6a21\u677f\u5f15\u64ce\uff08 freemaker / thymeleaf \uff09 application . properties \u5e94\u7528\u914d\u7f6e","title":"7\u3001\u4f7f\u7528\u5411\u5bfc\u5feb\u901f\u521b\u5efa Spring Boot \u5e94\u7528"},{"location":"Java/SpringBoot/\u7b2c\u4e03\u7ae0-SpringBoot\u542f\u52a8\u914d\u7f6e\u539f\u7406/","text":"\u7b2c\u4e03\u7ae0 Spring Boot \u542f\u52a8\u914d\u7f6e\u539f\u7406 \u542f\u52a8\u539f\u7406\uff0c\u8fd0\u884c\u6d41\u7a0b\uff0c\u81ea\u52a8\u914d\u7f6e\u539f\u7406 run() \u51c6\u5907\u73af\u5883 \u6267\u884c ApplicationContextInitializer.initialize() \u76d1\u542c\u5668 SpringApplicationRunListener \u56de\u8c03 contextPrepared \u52a0\u8f7d\u4e3b\u914d\u7f6e\u7c7b\u5b9a\u4e49\u4fe1\u606f \u76d1\u542c\u5668 SpringApplicationRunListener \u56de\u8c03 contextLoaded \u5237\u65b0\u542f\u52a8 ICO \u5bb9\u5668 \u626b\u63cf\u52a0\u8f7d\u6240\u6709\u5bb9\u5668\u4e2d\u7684\u7ec4\u4ef6 \u5305\u62ec\u4ece META-INF/spring.factories \u4e2d\u83b7\u53d6\u6240\u6709 EnableAutoConfiguration \u7ec4\u4ef6 \u56de\u8c03\u5bb9\u5668\u4e2d\u6240\u6709\u7684 ApplicationRunner/CommandLineRunner \u7684 run \u65b9\u6cd5 \u76d1\u542c\u5668 SpringApplicationRunListener \u56de\u8c03 finished \u76d1\u542c\u5668\u914d\u7f6e\u793a\u4f8b \u914d\u7f6e\u76ee\u5f55\uff1a src / main / java / com / example / demo / listener / - MyApplicationContextInitializer . java - MySpringApplicationRunListener . java - MyApplicationRunner . java - MyCommandLineRunner . java \u5b9e\u73b0\u7c7b package com.example.demo.listener ; import org.springframework.context.ApplicationContextInitializer ; import org.springframework.context.ConfigurableApplicationContext ; public class MyApplicationContextInitializer implements ApplicationContextInitializer < ConfigurableApplicationContext > { @Override public void initialize ( ConfigurableApplicationContext applicationContext ) { System . out . println ( \"MyApplicationContextInitializer initialize\" + applicationContext ); } } package com.example.demo.listener ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.SpringApplicationRunListener ; import org.springframework.context.ConfigurableApplicationContext ; import org.springframework.core.env.ConfigurableEnvironment ; public class MySpringApplicationRunListener implements SpringApplicationRunListener { public MySpringApplicationRunListener ( SpringApplication application , String [] args ) { } @Override public void starting () { System . out . println ( \"MySpringApplicationRunListener starting\" ); } @Override public void environmentPrepared ( ConfigurableEnvironment environment ) { Object name = environment . getSystemProperties (). get ( \"os.name\" ); System . out . println ( \"environmentPrepared\" + name ); } @Override public void contextPrepared ( ConfigurableApplicationContext context ) { System . out . println ( \"contextPrepared\" ); } @Override public void contextLoaded ( ConfigurableApplicationContext context ) { System . out . println ( \"contextLoaded\" ); } @Override public void started ( ConfigurableApplicationContext context ) { System . out . println ( \"started\" ); } @Override public void failed ( ConfigurableApplicationContext context , Throwable exception ) { System . out . println ( \"failed\" ); } @Override public void running ( ConfigurableApplicationContext context ) { System . out . println ( \"running\" ); } } package com.example.demo.listener ; import org.springframework.boot.ApplicationArguments ; import org.springframework.boot.ApplicationRunner ; import org.springframework.stereotype.Component ; @Component public class MyApplicationRunner implements ApplicationRunner { @Override public void run ( ApplicationArguments args ) throws Exception { System . out . println ( \"MyApplicationRunner\" ); } } package com.example.demo.listener ; import org.springframework.boot.ApplicationArguments ; import org.springframework.boot.ApplicationRunner ; import org.springframework.stereotype.Component ; @Component public class MyApplicationRunner implements ApplicationRunner { @Override public void run ( ApplicationArguments args ) throws Exception { System . out . println ( \"MyApplicationRunner\" ); } } src/main/resources/META-INF/spring.factories org . springframework . boot . SpringApplicationRunListener = \\ com . example . demo . listener . MySpringApplicationRunListener org . springframework . context . ApplicationContextInitializer = \\ com . example . demo . listener . MyApplicationContextInitializer","title":"\u7b2c\u4e03\u7ae0 Spring Boot \u542f\u52a8\u914d\u7f6e\u539f\u7406"},{"location":"Java/SpringBoot/\u7b2c\u4e03\u7ae0-SpringBoot\u542f\u52a8\u914d\u7f6e\u539f\u7406/#spring-boot","text":"\u542f\u52a8\u539f\u7406\uff0c\u8fd0\u884c\u6d41\u7a0b\uff0c\u81ea\u52a8\u914d\u7f6e\u539f\u7406 run() \u51c6\u5907\u73af\u5883 \u6267\u884c ApplicationContextInitializer.initialize() \u76d1\u542c\u5668 SpringApplicationRunListener \u56de\u8c03 contextPrepared \u52a0\u8f7d\u4e3b\u914d\u7f6e\u7c7b\u5b9a\u4e49\u4fe1\u606f \u76d1\u542c\u5668 SpringApplicationRunListener \u56de\u8c03 contextLoaded \u5237\u65b0\u542f\u52a8 ICO \u5bb9\u5668 \u626b\u63cf\u52a0\u8f7d\u6240\u6709\u5bb9\u5668\u4e2d\u7684\u7ec4\u4ef6 \u5305\u62ec\u4ece META-INF/spring.factories \u4e2d\u83b7\u53d6\u6240\u6709 EnableAutoConfiguration \u7ec4\u4ef6 \u56de\u8c03\u5bb9\u5668\u4e2d\u6240\u6709\u7684 ApplicationRunner/CommandLineRunner \u7684 run \u65b9\u6cd5 \u76d1\u542c\u5668 SpringApplicationRunListener \u56de\u8c03 finished","title":"\u7b2c\u4e03\u7ae0 Spring Boot \u542f\u52a8\u914d\u7f6e\u539f\u7406"},{"location":"Java/SpringBoot/\u7b2c\u4e03\u7ae0-SpringBoot\u542f\u52a8\u914d\u7f6e\u539f\u7406/#_1","text":"\u914d\u7f6e\u76ee\u5f55\uff1a src / main / java / com / example / demo / listener / - MyApplicationContextInitializer . java - MySpringApplicationRunListener . java - MyApplicationRunner . java - MyCommandLineRunner . java \u5b9e\u73b0\u7c7b package com.example.demo.listener ; import org.springframework.context.ApplicationContextInitializer ; import org.springframework.context.ConfigurableApplicationContext ; public class MyApplicationContextInitializer implements ApplicationContextInitializer < ConfigurableApplicationContext > { @Override public void initialize ( ConfigurableApplicationContext applicationContext ) { System . out . println ( \"MyApplicationContextInitializer initialize\" + applicationContext ); } } package com.example.demo.listener ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.SpringApplicationRunListener ; import org.springframework.context.ConfigurableApplicationContext ; import org.springframework.core.env.ConfigurableEnvironment ; public class MySpringApplicationRunListener implements SpringApplicationRunListener { public MySpringApplicationRunListener ( SpringApplication application , String [] args ) { } @Override public void starting () { System . out . println ( \"MySpringApplicationRunListener starting\" ); } @Override public void environmentPrepared ( ConfigurableEnvironment environment ) { Object name = environment . getSystemProperties (). get ( \"os.name\" ); System . out . println ( \"environmentPrepared\" + name ); } @Override public void contextPrepared ( ConfigurableApplicationContext context ) { System . out . println ( \"contextPrepared\" ); } @Override public void contextLoaded ( ConfigurableApplicationContext context ) { System . out . println ( \"contextLoaded\" ); } @Override public void started ( ConfigurableApplicationContext context ) { System . out . println ( \"started\" ); } @Override public void failed ( ConfigurableApplicationContext context , Throwable exception ) { System . out . println ( \"failed\" ); } @Override public void running ( ConfigurableApplicationContext context ) { System . out . println ( \"running\" ); } } package com.example.demo.listener ; import org.springframework.boot.ApplicationArguments ; import org.springframework.boot.ApplicationRunner ; import org.springframework.stereotype.Component ; @Component public class MyApplicationRunner implements ApplicationRunner { @Override public void run ( ApplicationArguments args ) throws Exception { System . out . println ( \"MyApplicationRunner\" ); } } package com.example.demo.listener ; import org.springframework.boot.ApplicationArguments ; import org.springframework.boot.ApplicationRunner ; import org.springframework.stereotype.Component ; @Component public class MyApplicationRunner implements ApplicationRunner { @Override public void run ( ApplicationArguments args ) throws Exception { System . out . println ( \"MyApplicationRunner\" ); } } src/main/resources/META-INF/spring.factories org . springframework . boot . SpringApplicationRunListener = \\ com . example . demo . listener . MySpringApplicationRunListener org . springframework . context . ApplicationContextInitializer = \\ com . example . demo . listener . MyApplicationContextInitializer","title":"\u76d1\u542c\u5668\u914d\u7f6e\u793a\u4f8b"},{"location":"Java/SpringBoot/\u7b2c\u4e09\u7ae0-SpringBoot\u65e5\u5fd7/","text":"\u7b2c\u4e09\u7ae0 Spring Boot \u65e5\u5fd7 1\u3001\u65e5\u5fd7\u6846\u67b6\u5206\u7c7b\u548c\u9009\u62e9 \u65e5\u5fd7\u6846\u67b6\uff1a \u65e5\u5fd7\u95e8\u9762\uff08\u62bd\u8c61\u5c42\uff09\uff1a JCL Jakarta Commons Logging SLF4j Simple Logging Facade for Java Jboss - logging \u65e5\u5fd7\u5b9e\u73b0\uff1a JUL Java . util . logging logback log4j log4j2 SpringBoot \u9009\u62e9\uff1a \u65e5\u5fd7\u95e8\u9762 SLF4j \u65e5\u5fd7\u5b9e\u73b0 logback 2\u3001slf4j \u4f7f\u7528\u539f\u7406 \u5f00\u53d1\u7684\u65f6\u5019\uff0c\u65e5\u5fd7\u8bb0\u5f55\u65b9\u6cd5\u7684\u8c03\u7528\u4e0d\u5e94\u8be5\u6765\u76f4\u63a5\u8c03\u7528\u65e5\u5fd7\u7684\u5b9e\u73b0\u7c7b \u800c\u662f\u8c03\u7528\u65e5\u5fd7\u62bd\u8c61\u5c42\u91cc\u7684\u65b9\u6cd5 http://www.slf4j.org/manual.html import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; public class HelloWorld { public static void main ( String [] args ) { Logger logger = LoggerFactory . getLogger ( HelloWorld . class ); logger . info ( \"Hello World\" ); } \u6bcf\u4e00\u4e2a\u65e5\u5fd7\u7684\u5b9e\u73b0\u6846\u67b6\u90fd\u6709\u81ea\u5df1\u7684\u914d\u7f6e\u6587\u4ef6\uff0c \u4f7f\u7528 slf4j \u4ee5\u540e\uff0c\u914d\u7f6e\u6587\u4ef6\u8fd8\u662f\u505a\u6210\u65e5\u5fd7\u5b9e\u73b0\u6846\u67b6\u7684\u914d\u7f6e\u6587\u4ef6 3\u3001\u5176\u4ed6\u65e5\u5fd7\u6846\u67b6\u7edf\u4e00\u8f6c\u6362\u4e3a slf4j \u9057\u7559\u95ee\u9898, \u5404\u6846\u67b6\u4f7f\u7528\u7684\u65e5\u5fd7\u6846\u67b6\u4e0d\u4e00\u6837 Spring ( commons - logging ) Hibernate ( jboss - logging ) MyBaits \u7edf\u4e00\u65e5\u5fd7\u6846\u67b6 \u5c06\u7cfb\u7edf\u4e2d\u5176\u4ed6\u65e5\u5fd7\u6846\u67b6\u5148\u6392\u9664 \u7528\u4e2d\u95f4\u5305\u6765\u66ff\u6362\u539f\u6709\u7684\u65e5\u5fd7\u6846\u67b6 \u5f15\u5165 slf4j \u5176\u4ed6\u5b9e\u73b0 4\u3001SpringBoot \u65e5\u5fd7\u5173\u7cfb SpringBoot \u80fd\u81ea\u52a8\u9002\u914d\u6240\u6709\u65e5\u5fd7\uff0c\u5e95\u5c42\u4f7f\u7528 slf4j+logback \u65b9\u5f0f\u8bb0\u5f55\u65e5\u5fd7 SpringBoot \u628a\u5176\u4ed6\u65e5\u5fd7\u66ff\u6362\u6210\u4e86 slf4j \u4e2d\u95f4\u66ff\u6362\u5305 \u5982\u679c\u5f15\u5165\u5176\u4ed6\u6846\u67b6\uff0c\u9700\u8981\u628a\u5176\u4ed6\u6846\u67b6\u9ed8\u8ba4\u7684\u65e5\u5fd7\u4f9d\u8d56\u79fb\u9664 5\u3001SpringBoot \u9ed8\u8ba4\u914d\u7f6e \u65e5\u5fd7\u7ea7\u522b\u7531\u4f4e\u5230\u9ad8 trace debug info \u9ed8\u8ba4\u7ea7\u522b warn error \u4fee\u6539\u65e5\u5fd7\u7ea7\u522b application.properties logging.level.com.className = trace \u4f7f\u7528\u793a\u4f8b package com.mouday ; import org.junit.Test ; import org.junit.runner.RunWith ; import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; import org.springframework.boot.test.context.SpringBootTest ; import org.springframework.test.context.junit4.SpringRunner ; @RunWith ( SpringRunner . class ) @SpringBootTest public class DemoApplicationTests { Logger logger = LoggerFactory . getLogger ( getClass ()); @Test public void contextLoads () { logger . trace ( \"trace\" ); logger . debug ( \"trace\" ); logger . info ( \"trace\" ); logger . warn ( \"trace\" ); logger . error ( \"trace\" ); } } \u65e5\u5fd7\u914d\u7f6e # \u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6(\u4f18\u5148\u4f5c\u7528) logging.file = spring.log # \u6307\u5b9a\u65e5\u5fd7\u8def\u5f84 logging.path = logs # \u63a7\u5236\u53f0\u8f93\u51fa\u65e5\u5fd7\u683c\u5f0f logging.pattern.console = %d { yyyy-MM-dd } [ %thread ] %-5level %logger { 50 } - %msg%n # \u6587\u4ef6\u8f93\u51fa\u65e5\u5fd7\u683c\u5f0f logging.pattern.file = %d { yyyy-MM-dd } === [ %thread ] %-5level %logger { 50 } - %msg%n \u65e5\u5fd7\u683c\u5f0f\u8bf4\u660e %d \u65e5\u671f\u65f6\u95f4 %thread \u7ebf\u7a0b\u540d %- 5l evel \u7ea7\u522b\u4ece\u5de6\u663e\u793a 5 \u4e2a\u5b57\u7b26\u5bbd\u5ea6 %logger { 50 } logger\u540d\u5b57\u6700\u957f\u663e\u793a50\u4e2a\u5b57\u7b26 \uff0c\u5426\u5219\u6309\u7167\u53e5\u70b9\u5206\u5272 %msg \u65e5\u5fd7\u6d88\u606f %n \u6362\u884c 6\u3001\u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6\u548c\u65e5\u5fd7 Profile \u529f\u80fd \u5efa\u7acb\u4f7f\u7528\u65e5\u5fd7\u6846\u67b6\u7684\u914d\u7f6e\u6587\u4ef6\uff0cspringboot \u5c06\u4e0d\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e logback logback - spring . xml , logback . xml Log4j2 log4j2 - spring . xml JUL ( Java Util Logging ) logging . properties \u8bf4\u660e logback . xml \u76f4\u63a5\u88ab\u65e5\u5fd7\u6846\u67b6\u8bc6\u522b logback - spring . xml \u65e5\u5fd7\u6846\u67b6\u4e0d\u76f4\u63a5\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6 \u53ef\u4ee5\u4f7f\u7528\u9ad8\u7ea7\u529f\u80fd <springProfile name= \"dev\" > </springProfile> 7\u3001\u5207\u6362\u65e5\u5fd7\u6846\u67b6 \u53ef\u4ee5\u6309\u7167 slf4j \u65e5\u5fd7\u9002\u914d\u56fe\u8fdb\u884c\u5207\u6362","title":"\u7b2c\u4e09\u7ae0 Spring Boot \u65e5\u5fd7"},{"location":"Java/SpringBoot/\u7b2c\u4e09\u7ae0-SpringBoot\u65e5\u5fd7/#spring-boot","text":"","title":"\u7b2c\u4e09\u7ae0 Spring Boot \u65e5\u5fd7"},{"location":"Java/SpringBoot/\u7b2c\u4e09\u7ae0-SpringBoot\u65e5\u5fd7/#1","text":"\u65e5\u5fd7\u6846\u67b6\uff1a \u65e5\u5fd7\u95e8\u9762\uff08\u62bd\u8c61\u5c42\uff09\uff1a JCL Jakarta Commons Logging SLF4j Simple Logging Facade for Java Jboss - logging \u65e5\u5fd7\u5b9e\u73b0\uff1a JUL Java . util . logging logback log4j log4j2 SpringBoot \u9009\u62e9\uff1a \u65e5\u5fd7\u95e8\u9762 SLF4j \u65e5\u5fd7\u5b9e\u73b0 logback","title":"1\u3001\u65e5\u5fd7\u6846\u67b6\u5206\u7c7b\u548c\u9009\u62e9"},{"location":"Java/SpringBoot/\u7b2c\u4e09\u7ae0-SpringBoot\u65e5\u5fd7/#2slf4j","text":"\u5f00\u53d1\u7684\u65f6\u5019\uff0c\u65e5\u5fd7\u8bb0\u5f55\u65b9\u6cd5\u7684\u8c03\u7528\u4e0d\u5e94\u8be5\u6765\u76f4\u63a5\u8c03\u7528\u65e5\u5fd7\u7684\u5b9e\u73b0\u7c7b \u800c\u662f\u8c03\u7528\u65e5\u5fd7\u62bd\u8c61\u5c42\u91cc\u7684\u65b9\u6cd5 http://www.slf4j.org/manual.html import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; public class HelloWorld { public static void main ( String [] args ) { Logger logger = LoggerFactory . getLogger ( HelloWorld . class ); logger . info ( \"Hello World\" ); } \u6bcf\u4e00\u4e2a\u65e5\u5fd7\u7684\u5b9e\u73b0\u6846\u67b6\u90fd\u6709\u81ea\u5df1\u7684\u914d\u7f6e\u6587\u4ef6\uff0c \u4f7f\u7528 slf4j \u4ee5\u540e\uff0c\u914d\u7f6e\u6587\u4ef6\u8fd8\u662f\u505a\u6210\u65e5\u5fd7\u5b9e\u73b0\u6846\u67b6\u7684\u914d\u7f6e\u6587\u4ef6","title":"2\u3001slf4j \u4f7f\u7528\u539f\u7406"},{"location":"Java/SpringBoot/\u7b2c\u4e09\u7ae0-SpringBoot\u65e5\u5fd7/#3-slf4j","text":"\u9057\u7559\u95ee\u9898, \u5404\u6846\u67b6\u4f7f\u7528\u7684\u65e5\u5fd7\u6846\u67b6\u4e0d\u4e00\u6837 Spring ( commons - logging ) Hibernate ( jboss - logging ) MyBaits \u7edf\u4e00\u65e5\u5fd7\u6846\u67b6 \u5c06\u7cfb\u7edf\u4e2d\u5176\u4ed6\u65e5\u5fd7\u6846\u67b6\u5148\u6392\u9664 \u7528\u4e2d\u95f4\u5305\u6765\u66ff\u6362\u539f\u6709\u7684\u65e5\u5fd7\u6846\u67b6 \u5f15\u5165 slf4j \u5176\u4ed6\u5b9e\u73b0","title":"3\u3001\u5176\u4ed6\u65e5\u5fd7\u6846\u67b6\u7edf\u4e00\u8f6c\u6362\u4e3a slf4j"},{"location":"Java/SpringBoot/\u7b2c\u4e09\u7ae0-SpringBoot\u65e5\u5fd7/#4springboot","text":"SpringBoot \u80fd\u81ea\u52a8\u9002\u914d\u6240\u6709\u65e5\u5fd7\uff0c\u5e95\u5c42\u4f7f\u7528 slf4j+logback \u65b9\u5f0f\u8bb0\u5f55\u65e5\u5fd7 SpringBoot \u628a\u5176\u4ed6\u65e5\u5fd7\u66ff\u6362\u6210\u4e86 slf4j \u4e2d\u95f4\u66ff\u6362\u5305 \u5982\u679c\u5f15\u5165\u5176\u4ed6\u6846\u67b6\uff0c\u9700\u8981\u628a\u5176\u4ed6\u6846\u67b6\u9ed8\u8ba4\u7684\u65e5\u5fd7\u4f9d\u8d56\u79fb\u9664","title":"4\u3001SpringBoot \u65e5\u5fd7\u5173\u7cfb"},{"location":"Java/SpringBoot/\u7b2c\u4e09\u7ae0-SpringBoot\u65e5\u5fd7/#5springboot","text":"\u65e5\u5fd7\u7ea7\u522b\u7531\u4f4e\u5230\u9ad8 trace debug info \u9ed8\u8ba4\u7ea7\u522b warn error \u4fee\u6539\u65e5\u5fd7\u7ea7\u522b application.properties logging.level.com.className = trace \u4f7f\u7528\u793a\u4f8b package com.mouday ; import org.junit.Test ; import org.junit.runner.RunWith ; import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; import org.springframework.boot.test.context.SpringBootTest ; import org.springframework.test.context.junit4.SpringRunner ; @RunWith ( SpringRunner . class ) @SpringBootTest public class DemoApplicationTests { Logger logger = LoggerFactory . getLogger ( getClass ()); @Test public void contextLoads () { logger . trace ( \"trace\" ); logger . debug ( \"trace\" ); logger . info ( \"trace\" ); logger . warn ( \"trace\" ); logger . error ( \"trace\" ); } } \u65e5\u5fd7\u914d\u7f6e # \u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6(\u4f18\u5148\u4f5c\u7528) logging.file = spring.log # \u6307\u5b9a\u65e5\u5fd7\u8def\u5f84 logging.path = logs # \u63a7\u5236\u53f0\u8f93\u51fa\u65e5\u5fd7\u683c\u5f0f logging.pattern.console = %d { yyyy-MM-dd } [ %thread ] %-5level %logger { 50 } - %msg%n # \u6587\u4ef6\u8f93\u51fa\u65e5\u5fd7\u683c\u5f0f logging.pattern.file = %d { yyyy-MM-dd } === [ %thread ] %-5level %logger { 50 } - %msg%n \u65e5\u5fd7\u683c\u5f0f\u8bf4\u660e %d \u65e5\u671f\u65f6\u95f4 %thread \u7ebf\u7a0b\u540d %- 5l evel \u7ea7\u522b\u4ece\u5de6\u663e\u793a 5 \u4e2a\u5b57\u7b26\u5bbd\u5ea6 %logger { 50 } logger\u540d\u5b57\u6700\u957f\u663e\u793a50\u4e2a\u5b57\u7b26 \uff0c\u5426\u5219\u6309\u7167\u53e5\u70b9\u5206\u5272 %msg \u65e5\u5fd7\u6d88\u606f %n \u6362\u884c","title":"5\u3001SpringBoot \u9ed8\u8ba4\u914d\u7f6e"},{"location":"Java/SpringBoot/\u7b2c\u4e09\u7ae0-SpringBoot\u65e5\u5fd7/#6-profile","text":"\u5efa\u7acb\u4f7f\u7528\u65e5\u5fd7\u6846\u67b6\u7684\u914d\u7f6e\u6587\u4ef6\uff0cspringboot \u5c06\u4e0d\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e logback logback - spring . xml , logback . xml Log4j2 log4j2 - spring . xml JUL ( Java Util Logging ) logging . properties \u8bf4\u660e logback . xml \u76f4\u63a5\u88ab\u65e5\u5fd7\u6846\u67b6\u8bc6\u522b logback - spring . xml \u65e5\u5fd7\u6846\u67b6\u4e0d\u76f4\u63a5\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6 \u53ef\u4ee5\u4f7f\u7528\u9ad8\u7ea7\u529f\u80fd <springProfile name= \"dev\" > </springProfile>","title":"6\u3001\u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6\u548c\u65e5\u5fd7 Profile \u529f\u80fd"},{"location":"Java/SpringBoot/\u7b2c\u4e09\u7ae0-SpringBoot\u65e5\u5fd7/#7","text":"\u53ef\u4ee5\u6309\u7167 slf4j \u65e5\u5fd7\u9002\u914d\u56fe\u8fdb\u884c\u5207\u6362","title":"7\u3001\u5207\u6362\u65e5\u5fd7\u6846\u67b6"},{"location":"Java/SpringBoot/\u7b2c\u4e5d\u7ae0-SpringBoot\u4e0e\u7f13\u5b58/","text":"\u7b2c\u4e5d\u7ae0 Spring Boot \u4e0e\u7f13\u5b58 \u4e3b\u8981\u5185\u5bb9 JSR - 107 Spring \u7f13\u5b58\u62bd\u8c61 \u6574\u5408 Redis 1\u3001JSR-107 Java Caching \u5b9a\u4e49\u4e86 5 \u4e2a\u6838\u5fc3\u63a5\u53e3 CachingProvider \uff1a\u7ba1\u7406\u591a\u4e2a CacheManager CacheManager \uff1a\u7ba1\u7406\u591a\u4e2a Cache Cache \uff1a\u7c7b\u4f3c Map\u6570\u636e\u7ed3\u6784 Entry \uff1a\u5b58\u50a8\u5728 Cache\u4e2d\u7684key - value\u5bf9 Expiry \uff1a \u6709\u6548\u671f Application - CachingProvider - CacheManager - Cache Entry <-> Expiry Spring \u7f13\u5b58\u62bd\u8c61\u7b80\u4ecb \u91cd\u8981\u6982\u5ff5 Cache \u7f13\u5b58\u63a5\u53e3 \uff0c \u5b9e\u73b0 RedisCache \u3001 EhCacheCache \u3001 ConcurrentMapCache CacheManager \u7f13\u5b58\u7ba1\u7406\u5668 @Cacheable \u6839\u636e\u65b9\u6cd5\u8bf7\u6c42\u53c2\u6570 \uff0c \u5bf9\u7ed3\u679c\u8fdb\u884c\u7f13\u5b58 @CacheEvict \u6e05\u7a7a\u7f13\u5b58 @CachePut \u4fdd\u8bc1\u65b9\u6cd5\u88ab\u8c03\u7528 \uff0c \u53c8\u5e0c\u671b\u7ed3\u679c\u88ab\u7f13\u5b58 @EnableCaching \u5f00\u542f\u57fa\u4e8e\u6ce8\u89e3\u7684\u7f13\u5b58 keyGenerator \u7f13\u5b58\u6570\u636e\u65f6 key \u7684\u751f\u6210\u7b56\u7565 serialize \u7f13\u5b58\u6570\u636e\u65f6 value \u5e8f\u5217\u5316\u7b56\u7565 1\u3001\u642d\u5efa\u73af\u5883 \u5f15\u5165 Spring \u4f9d\u8d56 Cache Web MySQL MyBatis \u5bfc\u5165\u6570\u636e\u5e93\u6587\u4ef6\uff0c\u521b\u5efa\u51fa employee \u548c department \u8868 \u521b\u5efa javabean \u5c01\u88c5\u6570\u636e \u6574\u5408 MyBatis \u64cd\u4f5c\u6570\u636e\u5e93 \u914d\u7f6e\u6570\u636e\u6e90\u4fe1\u606f \u4f7f\u7528\u6ce8\u89e3\u7248 MyBatis @MapperScan \u6307\u5b9a\u9700\u8981\u626b\u63cf\u7684 Mapper \u63a5\u53e3\u6240\u5728\u5305 2\u3001\u4f7f\u7528\u7f13\u5b58 \u5f00\u542f\u57fa\u4e8e\u6ce8\u89e3\u7684\u7f13\u5b58 @EnableCaching \u6807\u6ce8\u7f13\u5b58\u6ce8\u89e3 @Cacheable @Cacheable SpEL methodName \u65b9\u6cd5\u540d method \u65b9\u6cd5 target \u76ee\u6807\u5bf9\u8c61 targetClass \u76ee\u6807\u5bf9\u8c61\u7c7b args \u53c2\u6570\u5217\u8868 caches \u7f13\u5b58\u5217\u8868 argumentname \u53c2\u6570\u540d result \u8fd4\u56de\u503c \u53c2\u6570 value \u7f13\u5b58\u7ec4\u4ef6\u540d key \u7f13\u5b58\u4f7f\u7528\u7684 key , \u9ed8\u8ba4\u4f7f\u7528\u65b9\u6cd5\u53c2\u6570\u503c keyGenerator \u6307\u5b9a key\u7684\u751f\u6210\u5668 \uff0c\u548c key\u4e8c\u9009\u4e00 cacheManager \u7f13\u5b58\u7ba1\u7406\u5668 cacheResolver \u7f13\u5b58\u89e3\u6790\u5668 \u548c\u7f13\u5b58\u7ba1\u7406\u5668\u4e8c\u9009\u4e00 condition \u7f13\u5b58\u6761\u4ef6 eg : # id > 0 unless \u5426\u5b9a\u7f13\u5b58 \u6761\u4ef6\u4e3a true\u4e0d\u7f13\u5b58 sync \u4f7f\u7528\u540c\u6b65 \u7f13\u5b58\u5de5\u4f5c\u539f\u7406 \u81ea\u52a8\u914d\u7f6e\u7c7b CacheAutoConfiguration GenericCacheConfiguration \" JCacheCacheConfiguration\" EhCacheCacheConfiguration \" HazelcastCacheConfiguration\" InfinispanCacheConfiguration \" CouchbaseCacheConfiguration\" RedisCacheConfiguration \" CaffeineCacheConfiguration\" SimpleCacheConfiguration \" NoOpCacheConfiguration\" \u9ed8\u8ba4\u4f7f\u7528 SimpleCacheConfiguration cacheManager\uff1aConcurrentMapCacheManager \u8fd0\u884c\u6d41\u7a0b\uff1a \u6267\u884c\u65b9\u6cd5\u4e4b\u524d\uff0c\u5148\u6309\u7167 cacheNames \u83b7\u53d6 Cache \u7f13\u5b58\u7ec4\u4ef6\uff0c\u6697 \u7b2c\u4e00\u6b21\u83b7\u53d6\u7f13\u5b58\u5982\u679c\u6ca1\u6709 cache \u7ec4\u4ef6\u5c31\u521b\u5efa \u6309\u7167\u67d0\u79cd\u7b56\u7565\u751f\u6210 key\uff0c\u67e5\u6284\u5185\u5bb9 \u6ca1\u6709\u67e5\u627e\u5230\u7f13\u5b58\u5c31\u8c03\u7528\u76ee\u6807\u65b9\u6cd5 \u76ee\u6807\u65b9\u6cd5\u6362\u56de\u7684\u7ed3\u679c\u653e\u8fdb\u7f13\u5b58\u4e2d SimpleKeyGenerator \u9ed8\u8ba4\u7b56\u7565 \u5982\u679c\u6ca1\u6709\u53c2\u6570 key = new SimpleKey() \u5982\u679c\u6709\u4e00\u4e2a\u53c2\u6570 key = \u53c2\u6570\u503c \u5982\u679c\u6709\u591a\u4e2a\u53c2\u6570 key - new SimpleKey(params) \u6838\u5fc3\uff1a \u83b7\u53d6 CacheManger(\u9ed8\u8ba4 ConcurrentMapCacheManager) \u4f7f\u7528 KeyGenerator \u751f\u6210 key \u9ed8\u8ba4 SimpleKeyGenerator \u81ea\u5b9a\u4e49 key \u7684\u751f\u6210\u65b9\u5f0f package com.example.demo.config ; import org.springframework.cache.interceptor.KeyGenerator ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import java.lang.reflect.Method ; import java.util.Arrays ; @Configuration public class MyCacheConfig { @Bean ( \"myKeyGenerator\" ) public KeyGenerator keyGenerator (){ return new KeyGenerator (){ @Override public Object generate ( Object target , Method method , Object ... params ) { System . out . println ( \"generate\" ); return method . getName () + \"[\" + Arrays . asList ( params ). toString ()+ \"]\" ; } }; } } // keyGenerator\u548ckey\u4e8c\u9009\u4e00 // key \u652f\u6301SpEL\u8868\u8fbe\u5f0f @Cacheable ( value = \"department\" , key = \"#id\" ) public Department getById ( Integer id ){ return departmentMapper . getById ( id ); } // keyGenerator @Cacheable ( value = \"department\" , keyGenerator = \"myKeyGenerator\" ) public Department getById ( Integer id ){ return departmentMapper . getById ( id ); } @CachePut @CachePut \u65e2\u8c03\u7528\u65b9\u6cd5\uff0c\u53c8\u66f4\u65b0\u7f13\u5b58\u6570\u636e \u4fee\u6539\u4e86\u6570\u636e\u5e93\u7684\u67d0\u4e2a\u6570\u636e\uff0c\u540c\u65f6\u66f4\u65b0\u7f13\u5b58 \u8fd0\u884c\u65f6\u673a\uff1a\u5148\u8c03\u7528\u76ee\u6807\u65b9\u6cd5\uff0c\u518d\u5c06\u65b9\u6cd5\u7684\u7ed3\u679c\u7f13\u5b58 @CachePut ( value = \"department\" , key = \"#department.id\" ) public Department update ( Department department ){ departmentMapper . update ( department ); return department ; } @CacheEvict @CacheEvict \u7f13\u5b58\u5220\u9664 \u53c2\u6570 key \u6e05\u9664\u6307\u5b9a\u7f13\u5b58 allEntries \u6e05\u9664\u6240\u6709\u7f13\u5b58 beforeInvocation \u6e05\u9664\u7f13\u5b58\u5728\u65b9\u6cd5\u8fd0\u884c\u4e4b\u524d\u6267\u884c \u9ed8\u8ba4 false = \u65b9\u6cd5\u4e4b\u540e\u6267\u884c // \u6e05\u9664\u5355\u4e2a\u7f13\u5b58 @CacheEvict ( value = \"department\" , key = \"#id\" ) public String delete ( Integer id ){ return \"success\" ; } // \u6e05\u9664\u6240\u6709\u7f13\u5b58 @CacheEvict ( value = \"department\" , allEntries = true ) public String deleteAllCache (){ return \"success\" ; } @Caching&@CacheConfig public @interface Caching { Cacheable [] cacheable () default {}; CachePut [] put () default {}; CacheEvict [] evict () default {}; } CacheConfig \u62bd\u53d6\u7f13\u5b58\u516c\u5171\u914d\u7f6e @CacheConfig ( cacheNames ={ \"department\" }) @Service public class DepartmentService { @Autowired private DepartmentMapper departmentMapper ; // \u7f13\u5b58\u6570\u636e @Cacheable ( key = \"#id\" ) public Department getById ( Integer id ){ return departmentMapper . getById ( id ); } } \u642d\u5efa redis \u73af\u5883&\u6d4b\u8bd5 \u672c\u673a\u5b89\u88c5 # \u542f\u52a8 $ redis-server # \u505c\u6b62\u672c\u673aredis $ redid-cli shutdown \u53ef\u4ee5\u4f7f\u7528 Docker \u65b9\u5f0f\u5b89\u88c5 https://hub.docker.com/ # \u5b89\u88c5 docker pull redis # \u542f\u52a8 docker run -d -p 6379 :6379 --name my-redis redis # \u67e5\u770b\u8fd0\u884c\u72b6\u6001 docker ps Redis \u547d\u4ee4 http://www.redis.cn/commands.html RedisTemplate&\u5e8f\u5217\u5316\u673a\u5236 \u5f15\u5165\u4f9d\u8d56 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-data-redis </artifactId> </dependency> \u6307\u5b9a redis \u5730\u5740 spring : redis : host : localhost redis \u5e38\u89c1 5 \u4e2d\u6570\u636e\u7c7b\u578b String \u5b57\u7b26\u4e32 List \u5217\u8868 Set \u96c6\u5408 Hash \u6563\u5217 ZSet \u6709\u5e8f\u96c6\u5408 \u6d4b\u8bd5\u4f7f\u7528 package com.example.demo ; import org.junit.jupiter.api.Test ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.test.context.SpringBootTest ; import org.springframework.data.redis.core.RedisTemplate ; import org.springframework.data.redis.core.StringRedisTemplate ; @SpringBootTest public class RedisTest { // k-v\u5b57\u7b26\u4e32\u5f62\u5f0f @Autowired private StringRedisTemplate stringRedisTemplate ; // k-v\u5bf9\u8c61\u5f62\u5f0f @Autowired private RedisTemplate redisTemplate ; @Test public void testRedis (){ stringRedisTemplate . opsForValue (). set ( \"name\" , \"Tom\" ); String name = stringRedisTemplate . opsForValue (). get ( \"name\" ); System . out . println ( name ); } } \u4fdd\u5b58\u5bf9\u8c61\uff1a\u5e8f\u5217\u5316\u540e\u518d\u4fdd\u5b58 1\u3001\u624b\u52a8\u8f6c\u6362\u6570\u636e\u4e3a json 2\u3001\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u89c4\u5219 package com.example.demo.config ; import com.example.demo.pojo.Employee ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.data.redis.connection.RedisConnectionFactory ; import org.springframework.data.redis.core.RedisTemplate ; import org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer ; @Configuration public class MyRedisConfig { @Bean public RedisTemplate < Object , Employee > employeeRedisTemplate ( RedisConnectionFactory factory ) { RedisTemplate < Object , Employee > redisTemplate = new RedisTemplate < Object , Employee >(); redisTemplate . setConnectionFactory ( factory ); // \u8bbe\u7f6e\u5e8f\u5217\u5316\u5668 Jackson2JsonRedisSerializer < Employee > serializer = new Jackson2JsonRedisSerializer <>( Employee . class ); redisTemplate . setDefaultSerializer ( serializer ); return redisTemplate ; } } \u6d4b\u8bd5 package com.example.demo ; import com.example.demo.pojo.Employee ; import org.junit.jupiter.api.Test ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.test.context.SpringBootTest ; import org.springframework.data.redis.core.RedisTemplate ; @SpringBootTest public class RedisTest { @Autowired RedisTemplate < Object , Employee > employeeRedisTemplate ; @Test public void testRedisSerializer (){ Employee employee = new Employee (); employee . setName ( \"Tom\" ); employee . setAge ( 23 ); employeeRedisTemplate . opsForValue (). set ( \"emp\" , employee ); } } \u5f15\u5165 redis-starter \u4e4b\u540e\uff0c\u7f13\u5b58\u7ec4\u4ef6\u4f7f\u7528 RedisCache \u5229\u7528\u5e8f\u5217\u5316\u4fdd\u5b58\u6570\u636e\uff0c\u90fd\u662f\u4ee5 Object \u5f62\u5f0f\u4fdd\u5b58\uff0c\u9ed8\u8ba4\u4f7f\u7528 jdk \u5e8f\u5217\u5316\u673a\u5236 \u53ef\u4ee5\u4fdd\u5b58\u4e3a json","title":"\u7b2c\u4e5d\u7ae0 Spring Boot \u4e0e\u7f13\u5b58"},{"location":"Java/SpringBoot/\u7b2c\u4e5d\u7ae0-SpringBoot\u4e0e\u7f13\u5b58/#spring-boot","text":"\u4e3b\u8981\u5185\u5bb9 JSR - 107 Spring \u7f13\u5b58\u62bd\u8c61 \u6574\u5408 Redis","title":"\u7b2c\u4e5d\u7ae0 Spring Boot \u4e0e\u7f13\u5b58"},{"location":"Java/SpringBoot/\u7b2c\u4e5d\u7ae0-SpringBoot\u4e0e\u7f13\u5b58/#1jsr-107","text":"Java Caching \u5b9a\u4e49\u4e86 5 \u4e2a\u6838\u5fc3\u63a5\u53e3 CachingProvider \uff1a\u7ba1\u7406\u591a\u4e2a CacheManager CacheManager \uff1a\u7ba1\u7406\u591a\u4e2a Cache Cache \uff1a\u7c7b\u4f3c Map\u6570\u636e\u7ed3\u6784 Entry \uff1a\u5b58\u50a8\u5728 Cache\u4e2d\u7684key - value\u5bf9 Expiry \uff1a \u6709\u6548\u671f Application - CachingProvider - CacheManager - Cache Entry <-> Expiry","title":"1\u3001JSR-107"},{"location":"Java/SpringBoot/\u7b2c\u4e5d\u7ae0-SpringBoot\u4e0e\u7f13\u5b58/#spring","text":"\u91cd\u8981\u6982\u5ff5 Cache \u7f13\u5b58\u63a5\u53e3 \uff0c \u5b9e\u73b0 RedisCache \u3001 EhCacheCache \u3001 ConcurrentMapCache CacheManager \u7f13\u5b58\u7ba1\u7406\u5668 @Cacheable \u6839\u636e\u65b9\u6cd5\u8bf7\u6c42\u53c2\u6570 \uff0c \u5bf9\u7ed3\u679c\u8fdb\u884c\u7f13\u5b58 @CacheEvict \u6e05\u7a7a\u7f13\u5b58 @CachePut \u4fdd\u8bc1\u65b9\u6cd5\u88ab\u8c03\u7528 \uff0c \u53c8\u5e0c\u671b\u7ed3\u679c\u88ab\u7f13\u5b58 @EnableCaching \u5f00\u542f\u57fa\u4e8e\u6ce8\u89e3\u7684\u7f13\u5b58 keyGenerator \u7f13\u5b58\u6570\u636e\u65f6 key \u7684\u751f\u6210\u7b56\u7565 serialize \u7f13\u5b58\u6570\u636e\u65f6 value \u5e8f\u5217\u5316\u7b56\u7565 1\u3001\u642d\u5efa\u73af\u5883 \u5f15\u5165 Spring \u4f9d\u8d56 Cache Web MySQL MyBatis \u5bfc\u5165\u6570\u636e\u5e93\u6587\u4ef6\uff0c\u521b\u5efa\u51fa employee \u548c department \u8868 \u521b\u5efa javabean \u5c01\u88c5\u6570\u636e \u6574\u5408 MyBatis \u64cd\u4f5c\u6570\u636e\u5e93 \u914d\u7f6e\u6570\u636e\u6e90\u4fe1\u606f \u4f7f\u7528\u6ce8\u89e3\u7248 MyBatis @MapperScan \u6307\u5b9a\u9700\u8981\u626b\u63cf\u7684 Mapper \u63a5\u53e3\u6240\u5728\u5305 2\u3001\u4f7f\u7528\u7f13\u5b58 \u5f00\u542f\u57fa\u4e8e\u6ce8\u89e3\u7684\u7f13\u5b58 @EnableCaching \u6807\u6ce8\u7f13\u5b58\u6ce8\u89e3 @Cacheable","title":"Spring \u7f13\u5b58\u62bd\u8c61\u7b80\u4ecb"},{"location":"Java/SpringBoot/\u7b2c\u4e5d\u7ae0-SpringBoot\u4e0e\u7f13\u5b58/#cacheable","text":"SpEL methodName \u65b9\u6cd5\u540d method \u65b9\u6cd5 target \u76ee\u6807\u5bf9\u8c61 targetClass \u76ee\u6807\u5bf9\u8c61\u7c7b args \u53c2\u6570\u5217\u8868 caches \u7f13\u5b58\u5217\u8868 argumentname \u53c2\u6570\u540d result \u8fd4\u56de\u503c \u53c2\u6570 value \u7f13\u5b58\u7ec4\u4ef6\u540d key \u7f13\u5b58\u4f7f\u7528\u7684 key , \u9ed8\u8ba4\u4f7f\u7528\u65b9\u6cd5\u53c2\u6570\u503c keyGenerator \u6307\u5b9a key\u7684\u751f\u6210\u5668 \uff0c\u548c key\u4e8c\u9009\u4e00 cacheManager \u7f13\u5b58\u7ba1\u7406\u5668 cacheResolver \u7f13\u5b58\u89e3\u6790\u5668 \u548c\u7f13\u5b58\u7ba1\u7406\u5668\u4e8c\u9009\u4e00 condition \u7f13\u5b58\u6761\u4ef6 eg : # id > 0 unless \u5426\u5b9a\u7f13\u5b58 \u6761\u4ef6\u4e3a true\u4e0d\u7f13\u5b58 sync \u4f7f\u7528\u540c\u6b65","title":"@Cacheable"},{"location":"Java/SpringBoot/\u7b2c\u4e5d\u7ae0-SpringBoot\u4e0e\u7f13\u5b58/#_1","text":"\u81ea\u52a8\u914d\u7f6e\u7c7b CacheAutoConfiguration GenericCacheConfiguration \" JCacheCacheConfiguration\" EhCacheCacheConfiguration \" HazelcastCacheConfiguration\" InfinispanCacheConfiguration \" CouchbaseCacheConfiguration\" RedisCacheConfiguration \" CaffeineCacheConfiguration\" SimpleCacheConfiguration \" NoOpCacheConfiguration\" \u9ed8\u8ba4\u4f7f\u7528 SimpleCacheConfiguration cacheManager\uff1aConcurrentMapCacheManager \u8fd0\u884c\u6d41\u7a0b\uff1a \u6267\u884c\u65b9\u6cd5\u4e4b\u524d\uff0c\u5148\u6309\u7167 cacheNames \u83b7\u53d6 Cache \u7f13\u5b58\u7ec4\u4ef6\uff0c\u6697 \u7b2c\u4e00\u6b21\u83b7\u53d6\u7f13\u5b58\u5982\u679c\u6ca1\u6709 cache \u7ec4\u4ef6\u5c31\u521b\u5efa \u6309\u7167\u67d0\u79cd\u7b56\u7565\u751f\u6210 key\uff0c\u67e5\u6284\u5185\u5bb9 \u6ca1\u6709\u67e5\u627e\u5230\u7f13\u5b58\u5c31\u8c03\u7528\u76ee\u6807\u65b9\u6cd5 \u76ee\u6807\u65b9\u6cd5\u6362\u56de\u7684\u7ed3\u679c\u653e\u8fdb\u7f13\u5b58\u4e2d SimpleKeyGenerator \u9ed8\u8ba4\u7b56\u7565 \u5982\u679c\u6ca1\u6709\u53c2\u6570 key = new SimpleKey() \u5982\u679c\u6709\u4e00\u4e2a\u53c2\u6570 key = \u53c2\u6570\u503c \u5982\u679c\u6709\u591a\u4e2a\u53c2\u6570 key - new SimpleKey(params) \u6838\u5fc3\uff1a \u83b7\u53d6 CacheManger(\u9ed8\u8ba4 ConcurrentMapCacheManager) \u4f7f\u7528 KeyGenerator \u751f\u6210 key \u9ed8\u8ba4 SimpleKeyGenerator \u81ea\u5b9a\u4e49 key \u7684\u751f\u6210\u65b9\u5f0f package com.example.demo.config ; import org.springframework.cache.interceptor.KeyGenerator ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import java.lang.reflect.Method ; import java.util.Arrays ; @Configuration public class MyCacheConfig { @Bean ( \"myKeyGenerator\" ) public KeyGenerator keyGenerator (){ return new KeyGenerator (){ @Override public Object generate ( Object target , Method method , Object ... params ) { System . out . println ( \"generate\" ); return method . getName () + \"[\" + Arrays . asList ( params ). toString ()+ \"]\" ; } }; } } // keyGenerator\u548ckey\u4e8c\u9009\u4e00 // key \u652f\u6301SpEL\u8868\u8fbe\u5f0f @Cacheable ( value = \"department\" , key = \"#id\" ) public Department getById ( Integer id ){ return departmentMapper . getById ( id ); } // keyGenerator @Cacheable ( value = \"department\" , keyGenerator = \"myKeyGenerator\" ) public Department getById ( Integer id ){ return departmentMapper . getById ( id ); }","title":"\u7f13\u5b58\u5de5\u4f5c\u539f\u7406"},{"location":"Java/SpringBoot/\u7b2c\u4e5d\u7ae0-SpringBoot\u4e0e\u7f13\u5b58/#cacheput","text":"@CachePut \u65e2\u8c03\u7528\u65b9\u6cd5\uff0c\u53c8\u66f4\u65b0\u7f13\u5b58\u6570\u636e \u4fee\u6539\u4e86\u6570\u636e\u5e93\u7684\u67d0\u4e2a\u6570\u636e\uff0c\u540c\u65f6\u66f4\u65b0\u7f13\u5b58 \u8fd0\u884c\u65f6\u673a\uff1a\u5148\u8c03\u7528\u76ee\u6807\u65b9\u6cd5\uff0c\u518d\u5c06\u65b9\u6cd5\u7684\u7ed3\u679c\u7f13\u5b58 @CachePut ( value = \"department\" , key = \"#department.id\" ) public Department update ( Department department ){ departmentMapper . update ( department ); return department ; }","title":"@CachePut"},{"location":"Java/SpringBoot/\u7b2c\u4e5d\u7ae0-SpringBoot\u4e0e\u7f13\u5b58/#cacheevict","text":"@CacheEvict \u7f13\u5b58\u5220\u9664 \u53c2\u6570 key \u6e05\u9664\u6307\u5b9a\u7f13\u5b58 allEntries \u6e05\u9664\u6240\u6709\u7f13\u5b58 beforeInvocation \u6e05\u9664\u7f13\u5b58\u5728\u65b9\u6cd5\u8fd0\u884c\u4e4b\u524d\u6267\u884c \u9ed8\u8ba4 false = \u65b9\u6cd5\u4e4b\u540e\u6267\u884c // \u6e05\u9664\u5355\u4e2a\u7f13\u5b58 @CacheEvict ( value = \"department\" , key = \"#id\" ) public String delete ( Integer id ){ return \"success\" ; } // \u6e05\u9664\u6240\u6709\u7f13\u5b58 @CacheEvict ( value = \"department\" , allEntries = true ) public String deleteAllCache (){ return \"success\" ; }","title":"@CacheEvict"},{"location":"Java/SpringBoot/\u7b2c\u4e5d\u7ae0-SpringBoot\u4e0e\u7f13\u5b58/#cachingcacheconfig","text":"public @interface Caching { Cacheable [] cacheable () default {}; CachePut [] put () default {}; CacheEvict [] evict () default {}; } CacheConfig \u62bd\u53d6\u7f13\u5b58\u516c\u5171\u914d\u7f6e @CacheConfig ( cacheNames ={ \"department\" }) @Service public class DepartmentService { @Autowired private DepartmentMapper departmentMapper ; // \u7f13\u5b58\u6570\u636e @Cacheable ( key = \"#id\" ) public Department getById ( Integer id ){ return departmentMapper . getById ( id ); } }","title":"@Caching&amp;@CacheConfig"},{"location":"Java/SpringBoot/\u7b2c\u4e5d\u7ae0-SpringBoot\u4e0e\u7f13\u5b58/#redis","text":"\u672c\u673a\u5b89\u88c5 # \u542f\u52a8 $ redis-server # \u505c\u6b62\u672c\u673aredis $ redid-cli shutdown \u53ef\u4ee5\u4f7f\u7528 Docker \u65b9\u5f0f\u5b89\u88c5 https://hub.docker.com/ # \u5b89\u88c5 docker pull redis # \u542f\u52a8 docker run -d -p 6379 :6379 --name my-redis redis # \u67e5\u770b\u8fd0\u884c\u72b6\u6001 docker ps Redis \u547d\u4ee4 http://www.redis.cn/commands.html","title":"\u642d\u5efa redis \u73af\u5883&amp;\u6d4b\u8bd5"},{"location":"Java/SpringBoot/\u7b2c\u4e5d\u7ae0-SpringBoot\u4e0e\u7f13\u5b58/#redistemplate","text":"\u5f15\u5165\u4f9d\u8d56 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-data-redis </artifactId> </dependency> \u6307\u5b9a redis \u5730\u5740 spring : redis : host : localhost redis \u5e38\u89c1 5 \u4e2d\u6570\u636e\u7c7b\u578b String \u5b57\u7b26\u4e32 List \u5217\u8868 Set \u96c6\u5408 Hash \u6563\u5217 ZSet \u6709\u5e8f\u96c6\u5408 \u6d4b\u8bd5\u4f7f\u7528 package com.example.demo ; import org.junit.jupiter.api.Test ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.test.context.SpringBootTest ; import org.springframework.data.redis.core.RedisTemplate ; import org.springframework.data.redis.core.StringRedisTemplate ; @SpringBootTest public class RedisTest { // k-v\u5b57\u7b26\u4e32\u5f62\u5f0f @Autowired private StringRedisTemplate stringRedisTemplate ; // k-v\u5bf9\u8c61\u5f62\u5f0f @Autowired private RedisTemplate redisTemplate ; @Test public void testRedis (){ stringRedisTemplate . opsForValue (). set ( \"name\" , \"Tom\" ); String name = stringRedisTemplate . opsForValue (). get ( \"name\" ); System . out . println ( name ); } } \u4fdd\u5b58\u5bf9\u8c61\uff1a\u5e8f\u5217\u5316\u540e\u518d\u4fdd\u5b58 1\u3001\u624b\u52a8\u8f6c\u6362\u6570\u636e\u4e3a json 2\u3001\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u89c4\u5219 package com.example.demo.config ; import com.example.demo.pojo.Employee ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.data.redis.connection.RedisConnectionFactory ; import org.springframework.data.redis.core.RedisTemplate ; import org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer ; @Configuration public class MyRedisConfig { @Bean public RedisTemplate < Object , Employee > employeeRedisTemplate ( RedisConnectionFactory factory ) { RedisTemplate < Object , Employee > redisTemplate = new RedisTemplate < Object , Employee >(); redisTemplate . setConnectionFactory ( factory ); // \u8bbe\u7f6e\u5e8f\u5217\u5316\u5668 Jackson2JsonRedisSerializer < Employee > serializer = new Jackson2JsonRedisSerializer <>( Employee . class ); redisTemplate . setDefaultSerializer ( serializer ); return redisTemplate ; } } \u6d4b\u8bd5 package com.example.demo ; import com.example.demo.pojo.Employee ; import org.junit.jupiter.api.Test ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.test.context.SpringBootTest ; import org.springframework.data.redis.core.RedisTemplate ; @SpringBootTest public class RedisTest { @Autowired RedisTemplate < Object , Employee > employeeRedisTemplate ; @Test public void testRedisSerializer (){ Employee employee = new Employee (); employee . setName ( \"Tom\" ); employee . setAge ( 23 ); employeeRedisTemplate . opsForValue (). set ( \"emp\" , employee ); } } \u5f15\u5165 redis-starter \u4e4b\u540e\uff0c\u7f13\u5b58\u7ec4\u4ef6\u4f7f\u7528 RedisCache \u5229\u7528\u5e8f\u5217\u5316\u4fdd\u5b58\u6570\u636e\uff0c\u90fd\u662f\u4ee5 Object \u5f62\u5f0f\u4fdd\u5b58\uff0c\u9ed8\u8ba4\u4f7f\u7528 jdk \u5e8f\u5217\u5316\u673a\u5236 \u53ef\u4ee5\u4fdd\u5b58\u4e3a json","title":"RedisTemplate&amp;\u5e8f\u5217\u5316\u673a\u5236"},{"location":"Java/SpringBoot/\u7b2c\u4e8c\u7ae0-SpringBoot\u914d\u7f6e/","text":"\u7b2c\u4e8c\u7ae0 Spring Boot \u914d\u7f6e 1\u3001YAML \u914d\u7f6e SpringBoot \u5168\u5c40\u914d\u7f6e\u6587\u4ef6 application . properties application . yml YAML \u4ee5\u6570\u636e\u4e3a\u4e2d\u5fc3\uff0c\u6bd4 json\u3001xml \u66f4\u9002\u5408\u4f5c\u4e3a\u914d\u7f6e\u6587\u4ef6 server : port : 8081 <server> <port> 8081 </port> </server> 2\u3001YAML \u8bed\u6cd5 https://yaml.org/ YAML \u8bed\u8a00\u6559\u7a0b\uff1a http://www.ruanyifeng.com/blog/2016/07/yaml.html 1\u3001\u57fa\u672c\u8bed\u6cd5 key : \u7a7a\u683c value \u7a7a\u683c\u7f29\u8fdb\u6765\u63a7\u5236\u5c42\u7ea7\u5173\u7cfb\uff0c\u5de6\u5bf9\u9f50\u7684\u6570\u636e\u5c31\u662f\u4e00\u4e2a\u5c42\u7ea7 \u5c5e\u6027\u548c\u503c\u5927\u5c0f\u5199\u654f\u611f \u7a7a\u683c\u5fc5\u987b\u6709 2\u3001\u503c\u7684\u5199\u6cd5 2.1\u3001\u5b57\u9762\u91cf\uff1a\u666e\u901a\u7684\u503c\uff08\u6570\u5b57\uff0c\u5b57\u7b26\u4e32\uff0c\u5e03\u5c14\uff09 \u5b57\u7b26\u4e32\u9ed8\u8ba4\u4e0d\u7528\u52a0\u5355\u5f15\u53f7\u6216\u8005\u53cc\u5f15\u53f7 \uff081\uff09\"\"\u53cc\u5f15\u53f7\u4e0d\u4f1a\u8f6c\u4e49\u7279\u6b8a\u5b57\u7b26\u3002\u7279\u6b8a\u5b57\u7b26\u4f1a\u4f5c\u4e3a\u672c\u8eab\u60f3\u8868\u8fbe\u7684\u610f\u601d eg: name : \"\u5f20\u4e09\\n\u674e\u56db\" \u8f93\u51fa\uff1a \u5f20\u4e09 [ \u6362\u884c ] \u674e\u56db \uff082\uff09''\u5355\u5f15\u53f7\uff0c\u4f1a\u8f6c\u4e49\u7279\u6b8a\u5b57\u7b26\uff0c\u7279\u6b8a\u5b57\u7b26\u6700\u7ec8\u53ea\u662f\u4e00\u4e2a\u666e\u901a\u7684\u5b57\u7b26\u4e32\u6570\u636e eg: name : \"\u5f20\u4e09\\n\u674e\u56db\" \u8f93\u51fa\uff1a \u5f20\u4e09\\ n\u674e\u56db 2.2\u3001\u5bf9\u8c61\uff0cmap\uff08\u5c5e\u6027\u548c\u503c\uff0c\u952e\u503c\u5bf9\uff09 \uff081\uff09\u666e\u901a\u5199\u6cd5 person : name : Tom age : 23 \uff082\uff09\u884c\u5185\u5199\u6cd5 person : { name : Tom , age : 23 } 2.3\u3001\u6570\u7ec4\uff0c\uff08List, Set\uff09 \uff081\uff09\u666e\u901a\u5199\u6cd5 pets : - cat - dog - pig \uff082\uff09\u884c\u5185\u5199\u6cd5 pets : [ cat , dog , pig ] 3\u3001YAML \u914d\u7f6e\u6587\u4ef6\u4e2d\u503c\u83b7\u53d6 \u914d\u7f6e\u6587\u4ef6 src/main/resources/application.yml person : lastName : Tom age : 18 boss : false birth : 2017 /12/ 12 maps : { k1 : v1 , k2 : v2 } lists : - cat - dog dog : name : Jack age : 2 \u6620\u5c04\u7c7b src/main/java/com/mouday/bean/Person.java package com.mouday.bean ; import org.springframework.boot.context.properties.ConfigurationProperties ; import org.springframework.stereotype.Component ; import java.util.Date ; import java.util.List ; import java.util.Map ; /** * \u5c06\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u5c5e\u6027\u6620\u5c04\u5230\u8fd9\u4e2a\u7ec4\u4ef6\u4e2d */ @Component @ConfigurationProperties ( prefix = \"person\" ) public class Person { private String name ; private Integer age ; private Boolean sex ; private Date birth ; private Map < String , Object > maps ; private List < String > lists ; private Dog dog ; public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public Integer getAge () { return age ; } public void setAge ( Integer age ) { this . age = age ; } public Boolean getSex () { return sex ; } public void setSex ( Boolean sex ) { this . sex = sex ; } public Date getBirth () { return birth ; } public void setBirth ( Date birth ) { this . birth = birth ; } public Map < String , Object > getMaps () { return maps ; } public void setMaps ( Map < String , Object > maps ) { this . maps = maps ; } public List < String > getLists () { return lists ; } public void setLists ( List < String > lists ) { this . lists = lists ; } public Dog getDog () { return dog ; } public void setDog ( Dog dog ) { this . dog = dog ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + \", sex=\" + sex + \", birth=\" + birth + \", maps=\" + maps + \", lists=\" + lists + \", dog=\" + dog + '}' ; } } src/main/java/com/mouday/bean/Dog.java package com.mouday.bean ; public class Dog { private String name ; private Integer age ; public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public Integer getAge () { return age ; } public void setAge ( Integer age ) { this . age = age ; } @Override public String toString () { return \"Dog{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } \u5355\u5143\u6d4b\u8bd5\u4f9d\u8d56 pom.xml <!--\u914d\u7f6e\u6587\u4ef6\u5904\u7406\u5668 \u5bfc\u5165\u914d\u7f6e\u6587\u4ef6\u5bfc\u5165\u63d0\u793a--> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-configuration-processor </artifactId> <optional> true </optional> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-test </artifactId> <scope> test </scope> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> \u5355\u5143\u6d4b\u8bd5 src/test/java/com/mouday/DemoApplicationTests.java package com.mouday ; import com.mouday.bean.Person ; import org.junit.Test ; import org.junit.runner.RunWith ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.test.context.SpringBootTest ; import org.springframework.test.context.junit4.SpringRunner ; @RunWith ( SpringRunner . class ) @SpringBootTest public class DemoApplicationTests { @Autowired private Person person ; @Test public void contextLoads () { System . out . println ( person ); } } \u6253\u5370\u7ed3\u679c Person { name = 'Tom' , age = 18 , sex = false , birth = Tue Dec 12 00 : 00 : 00 CST 2017 , maps = { k1 = v1 , k2 = v2 } , lists = [ cat , dog ], dog = Dog { name = 'Jack' , age = 2 } } \u8bfb\u53d6 properties \u6587\u4ef6\u914d\u7f6e src/main/resources/application.properties person . name = TOM person . age = 18 person . sex = false person . birth = 2017 / 12 / 12 person . maps . k1 = v1 person . maps . k2 = v2 person . lists = cat , dog person . dog . name = Jack person . dog . age = 2 4\u3001@ConfigurationProperties \u4e0e@Value \u533a\u522b @ConfigurationProperties @Value \u529f\u80fd \u6279\u91cf\u6ce8\u5165\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u5c5e\u6027 \u4e00\u4e2a\u4e00\u4e2a\u6307\u5b9a \u677e\u6563\u7ed1\u5b9a \u652f\u6301 \u4e0d\u652f\u6301 SpEL \u4e0d\u652f\u6301 \u652f\u6301 JSR303 \u6570\u636e\u6821\u9a8c \u652f\u6301 \u4e0d\u652f\u6301 \u590d\u6742\u7c7b\u578b\u5c01\u88c5 \u652f\u6301 \u4e0d\u652f\u6301 \u5c5e\u6027\u540d\u5339\u914d\u89c4\u5219 person . firstName person . first - name person . first_name PERSON_FIRST_NAME package com.mouday.bean ; import org.springframework.beans.factory.annotation.Value ; import org.springframework.boot.context.properties.ConfigurationProperties ; import org.springframework.stereotype.Component ; import java.util.Date ; import java.util.List ; import java.util.Map ; /** * \u5c06\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u5c5e\u6027\u6620\u5c04\u5230\u8fd9\u4e2a\u7ec4\u4ef6\u4e2d */ @Component // @ConfigurationProperties(prefix = \"person\") public class Person { /** * <bean class=\"Person\"> * <property name=\"name\" value=\"Tom\" /> * </bean> * * value \u652f\u6301 * \u5b57\u9762\u91cf * ${key}\u4ece\u73af\u5883\u53d8\u91cf\uff0c\u914d\u7f6e\u6587\u4ef6\u4e2d\u83b7\u53d6\u503c * #{SpEL}\u8868\u8fbe\u5f0f */ @Value ( \"Tom\" ) private String name ; @Value ( \"#{12*2}\" ) private Integer age ; @Value ( \"true\" ) private Boolean sex ; @Value ( \"${person.birth}\" ) private Date birth ; private Map < String , Object > maps ; private List < String > lists ; private Dog dog ; /** * \u7565setter/getter toString() */ } \u6253\u5370\u7ed3\u679c Person { name = 'Tom' , age = 24 , sex = true , birth = Tue Dec 12 00 : 00 : 00 CST 2017 , maps = null , lists = null , dog = null } \u914d\u7f6e\u6587\u4ef6\u6ce8\u5165\u503c\u6570\u636e\u6821\u9a8c import org.hibernate.validator.constraints.Email ; import org.springframework.boot.context.properties.ConfigurationProperties ; import org.springframework.stereotype.Component ; import org.springframework.validation.annotation.Validated ; @Component @ConfigurationProperties ( prefix = \"person\" ) @Validated public class Person { @Email private String name ; } \u4f7f\u7528\u65b9\u5f0f \u53ea\u662f\u5728\u67d0\u4e2a\u4e1a\u52a1\u903b\u8f91\u4e2d\u83b7\u53d6\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u67d0\u9879\u503c\uff0c\u4f7f\u7528@Value \u4e13\u95e8\u7f16\u5199\u4e00\u4e2a javaBean \u6765\u6620\u5c04\u914d\u7f6e\u6587\u4ef6\uff0c\u90a3\u4e48\u4f7f\u7528@ConfigurationProperties @Value \u7528\u6cd5\u793a\u4f8b package com.mouday.controller ; import org.springframework.beans.factory.annotation.Value ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.ResponseBody ; import org.springframework.web.bind.annotation.RestController ; @Controller @RestController public class HelloController { @Value ( \"${person.name}\" ) private String name ; @RequestMapping ( \"/hello\" ) @ResponseBody public String hello (){ return \"Hello world! \" + this . name ; } } 5\u3001@PropertySource\u3001@ImportResource\u3001@Bean @ConfigurationProperties \u9ed8\u8ba4\u52a0\u8f7d\u5168\u5c40\u914d\u7f6e 5.1\u3001@PropertySource \u52a0\u8f7d\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6 import org.springframework.stereotype.Component ; import org.springframework.context.annotation.PropertySource ; @Component // @ConfigurationProperties(prefix = \"person\") @PropertySource ( value = { \"classpath:person.properties\" }) public class Person {} 5.2\u3001@ImportResource \u5bfc\u5165 Spring \u914d\u7f6e\u6587\u4ef6 src/main/resources/beans.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean name= \"dog\" class= \"com.mouday.bean.Dog\" /> </beans> @ImportResource \u6807\u6ce8\u5728\u914d\u7f6e\u7c7b\u4e0a package com.mouday ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; import org.springframework.context.annotation.ImportResource ; @ImportResource ( value = { \"classpath:beans.xml\" }) @SpringBootApplication public class ApplicationMain { public static void main ( String [] args ) { SpringApplication . run ( ApplicationMain . class , args ); } } \u6d4b\u8bd5\u65b9\u6cd5 package com.mouday ; import org.junit.Test ; import org.junit.runner.RunWith ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.test.context.SpringBootTest ; import org.springframework.context.ApplicationContext ; import org.springframework.test.context.junit4.SpringRunner ; @RunWith ( SpringRunner . class ) @SpringBootTest public class DemoApplicationTests { @Autowired private ApplicationContext context ; @Test public void TestDog (){ System . out . println ( this . context . containsBean ( \"dog\" )); } } 5.3\u3001@Bean \u7528\u4e8e\u914d\u7f6e\u7c7b\u4e2d\u7ed9\u5bb9\u5668\u6dfb\u52a0\u7ec4\u4ef6 package com.mouday.config ; import com.mouday.bean.Dog ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; /** * @Configuration \u6307\u660e\u5f53\u524d\u7c7b\u662f\u4e00\u4e2a\u914d\u7f6e\u7c7b * \u66ff\u4ee3Spring\u7684\u914d\u7f6e\u6587\u4ef6 */ @Configuration public class MyConfig { // \u5c06\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u6dfb\u52a0\u5230\u5bb9\u5668\uff0c\u5bb9\u5668\u4e2d\u7ec4\u4ef6\u9ed8\u8ba4id\u662f\u65b9\u6cd5\u540d @Bean public Dog dog (){ return new Dog (); } } Spring \u63a8\u8350\u4f7f\u7528\u5168\u6ce8\u89e3\u65b9\u5f0f\u7ed9\u5bb9\u5668\u6dfb\u52a0\u7ec4\u4ef6 6\u3001\u914d\u7f6e\u6587\u4ef6\u5360\u4f4d\u7b26 RandomValuePropertySource \u914d\u7f6e\u6587\u4ef6\u4e2d\u53ef\u4ee5\u4f7f\u7528\u968f\u673a\u6570 ${ random . value } ${ random . int } ${ random . uuid } ${ random . long } ${ random . int ( 10 ) } ${ random . int [ 1024 , 65536 ]} \u5c5e\u6027\u914d\u7f6e\u5360\u4f4d\u7b26 app.name=MyApp app.description= ${ app . name : \u9ed8\u8ba4\u503c } 7\u3001Profile \u591a\u73af\u5883\u652f\u6301 Profile \u5bf9\u4e0d\u540c\u73af\u5883\u63d0\u4f9b\u4e0d\u540c\u914d\u7f6e\u529f\u80fd\u7684\u652f\u6301 1\u3001\u591a Profile \u6587\u4ef6 application-{profile}.properties \u9ed8\u8ba4\u4f7f\u7528 application.properties \u901a\u8fc7 spring.profiles.active=prod \u6307\u5b9a\u914d\u7f6e\u6587\u4ef6 eg: application.properties server . port = 8080 spring . profiles . active = prod application-dev.properties server . port = 8081 application-prod.properties server . port = 8082 2\u3001yaml \u6587\u6863\u5757\u6a21\u5f0f application.yml server : port : 8080 spring : profiles : active : dev --- server : port : 8081 spring : profiles : dev --- server : port : 8082 spring : profiles : prod 3\u3001\u6fc0\u6d3b\u65b9\u5f0f 1 \u3001\u547d\u4ee4\u884c --spring.profiles.active=dev 2 \u3001\u914d\u7f6e\u6587\u4ef6 spring . profiles . active = dev 3 \u3001 jvm\u53c2\u6570 - Dspring . profiles . active = dev 8\u3001\u914d\u7f6e\u6587\u4ef6\u7684\u52a0\u8f7d\u4f4d\u7f6e Spring Boot \u4f1a\u81ea\u52a8\u626b\u63cf\u4e00\u4e0b\u4f4d\u7f6e\u7684 application.properties \u6216\u8005 application.yml \u6587\u4ef6\u4f5c\u4e3a\u914d\u7f6e\u6587\u4ef6 \u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\uff0c\u6240\u6709\u6587\u4ef6\u90fd\u88ab\u52a0\u8f7d\uff0c \u4e92\u8865\u914d\u7f6e\uff1a\u9ad8\u4f18\u5148\u7ea7\u8986\u76d6\u4f4e\u4f18\u5148\u7ea7 . / config / . / classpath : / config / classpath : / spring.config.location \u4fee\u6539\u9ed8\u8ba4\u4f4d\u7f6e 9\u3001\u5916\u90e8\u914d\u7f6e\u52a0\u8f7d\u987a\u5e8f \u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\u5982\u4e0b 1. \u547d\u4ee4\u884c\u53c2\u6570 $ java - jar springboot - helloword - 1.0 - SNAPSHOT . jar --server.port=8005 2. java : comp / env\u7684JNDI\u5c5e\u6027 3. java\u7cfb\u7edf\u5c5e\u6027System . getProperties () 4. \u64cd\u4f5c\u7cfb\u7edf\u73af\u5883\u53d8\u91cf 5. RandomValuePropertySource\u914d\u7f6e\u7684random . * \u5c5e\u6027 6. jar\u5305\u5916\u90e8\u7684application - { profile } . properties\u6216application . yml \uff08 \u5e26spring . profile \uff09 \u914d\u7f6e\u6587\u4ef6 7. jar\u5305\u5185\u90e8\u7684application - { profile } . properties\u6216application . yml \uff08 \u5e26spring . profile \uff09 \u914d\u7f6e\u6587\u4ef6 8. jar\u5305\u5916\u90e8\u7684application . properties\u6216application . yml \uff08 \u4e0d\u5e26spring . profile \uff09 \u914d\u7f6e\u6587\u4ef6 9. jar\u5305\u5185\u90e8\u7684application . properties\u6216application . yml \uff08 \u4e0d\u5e26spring . profile \uff09 \u914d\u7f6e\u6587\u4ef6 10. @Configuration\u6ce8\u89e3\u7c7b\u4e0a\u7684@PropertySource 11. \u901a\u8fc7SpringApplication . setDefualtProperties\u6307\u5b9a\u7684\u9ed8\u8ba4\u5c5e\u6027 \u603b\u7ed3\uff1a \u9ad8\u4f18\u5148\u7ea7\u914d\u7f6e\u4f1a\u8986\u76d6\u4f4e\u4f18\u5148\u7ea7\u914d\u7f6e \u6240\u6709\u914d\u7f6e\u4f1a\u5f62\u6210\u4e92\u8865\u914d\u7f6e 10\u3001\u81ea\u52a8\u914d\u7f6e\u539f\u7406 \u626b\u63cf\u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\u5305\u88c5\u6210 properties \u5bf9\u8c61 \u5c06\u914d\u7f6e\u5185\u5bb9\u52a0\u8f7d\u5230\u5bb9\u5668\u4e2d AutoConfiguration \u81ea\u52a8\u914d\u7f6e\u7c7b Properties \u5c01\u88c5\u5c5e\u6027 @Condition \u5224\u65ad\u6761\u4ef6\u6210\u7acb\uff0c\u51b3\u5b9a\u914d\u7f6e\u7c7b\u662f\u5426\u751f\u6548 11\u3001@Conditional&\u81ea\u52a8\u914d\u7f6e\u62a5\u544a @ConditionalOnJava @ConditionalOnMissingBean @ConditionalOnClass ... \u81ea\u52a8\u914d\u7f6e\u7c7b\u5fc5\u987b\u5728\u4e00\u5b9a\u7684\u6761\u4ef6\u4e0b\u624d\u751f\u6548 \u5f00\u542f\u8c03\u8bd5\u6a21\u5f0f debug = true \u6253\u5370\u81ea\u52a8\u914d\u7f6e\u62a5\u544a ========================= AUTO - CONFIGURATION REPORT ========================= Positive matches : \u542f\u52a8\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b Negative matches : \u6ca1\u542f\u7528\u542f\u52a8\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b Exclusions : Unconditional classes :","title":"\u7b2c\u4e8c\u7ae0 Spring Boot \u914d\u7f6e"},{"location":"Java/SpringBoot/\u7b2c\u4e8c\u7ae0-SpringBoot\u914d\u7f6e/#spring-boot","text":"","title":"\u7b2c\u4e8c\u7ae0 Spring Boot \u914d\u7f6e"},{"location":"Java/SpringBoot/\u7b2c\u4e8c\u7ae0-SpringBoot\u914d\u7f6e/#1yaml","text":"SpringBoot \u5168\u5c40\u914d\u7f6e\u6587\u4ef6 application . properties application . yml YAML \u4ee5\u6570\u636e\u4e3a\u4e2d\u5fc3\uff0c\u6bd4 json\u3001xml \u66f4\u9002\u5408\u4f5c\u4e3a\u914d\u7f6e\u6587\u4ef6 server : port : 8081 <server> <port> 8081 </port> </server>","title":"1\u3001YAML \u914d\u7f6e"},{"location":"Java/SpringBoot/\u7b2c\u4e8c\u7ae0-SpringBoot\u914d\u7f6e/#2yaml","text":"https://yaml.org/ YAML \u8bed\u8a00\u6559\u7a0b\uff1a http://www.ruanyifeng.com/blog/2016/07/yaml.html 1\u3001\u57fa\u672c\u8bed\u6cd5 key : \u7a7a\u683c value \u7a7a\u683c\u7f29\u8fdb\u6765\u63a7\u5236\u5c42\u7ea7\u5173\u7cfb\uff0c\u5de6\u5bf9\u9f50\u7684\u6570\u636e\u5c31\u662f\u4e00\u4e2a\u5c42\u7ea7 \u5c5e\u6027\u548c\u503c\u5927\u5c0f\u5199\u654f\u611f \u7a7a\u683c\u5fc5\u987b\u6709 2\u3001\u503c\u7684\u5199\u6cd5 2.1\u3001\u5b57\u9762\u91cf\uff1a\u666e\u901a\u7684\u503c\uff08\u6570\u5b57\uff0c\u5b57\u7b26\u4e32\uff0c\u5e03\u5c14\uff09 \u5b57\u7b26\u4e32\u9ed8\u8ba4\u4e0d\u7528\u52a0\u5355\u5f15\u53f7\u6216\u8005\u53cc\u5f15\u53f7 \uff081\uff09\"\"\u53cc\u5f15\u53f7\u4e0d\u4f1a\u8f6c\u4e49\u7279\u6b8a\u5b57\u7b26\u3002\u7279\u6b8a\u5b57\u7b26\u4f1a\u4f5c\u4e3a\u672c\u8eab\u60f3\u8868\u8fbe\u7684\u610f\u601d eg: name : \"\u5f20\u4e09\\n\u674e\u56db\" \u8f93\u51fa\uff1a \u5f20\u4e09 [ \u6362\u884c ] \u674e\u56db \uff082\uff09''\u5355\u5f15\u53f7\uff0c\u4f1a\u8f6c\u4e49\u7279\u6b8a\u5b57\u7b26\uff0c\u7279\u6b8a\u5b57\u7b26\u6700\u7ec8\u53ea\u662f\u4e00\u4e2a\u666e\u901a\u7684\u5b57\u7b26\u4e32\u6570\u636e eg: name : \"\u5f20\u4e09\\n\u674e\u56db\" \u8f93\u51fa\uff1a \u5f20\u4e09\\ n\u674e\u56db 2.2\u3001\u5bf9\u8c61\uff0cmap\uff08\u5c5e\u6027\u548c\u503c\uff0c\u952e\u503c\u5bf9\uff09 \uff081\uff09\u666e\u901a\u5199\u6cd5 person : name : Tom age : 23 \uff082\uff09\u884c\u5185\u5199\u6cd5 person : { name : Tom , age : 23 } 2.3\u3001\u6570\u7ec4\uff0c\uff08List, Set\uff09 \uff081\uff09\u666e\u901a\u5199\u6cd5 pets : - cat - dog - pig \uff082\uff09\u884c\u5185\u5199\u6cd5 pets : [ cat , dog , pig ]","title":"2\u3001YAML \u8bed\u6cd5"},{"location":"Java/SpringBoot/\u7b2c\u4e8c\u7ae0-SpringBoot\u914d\u7f6e/#3yaml","text":"\u914d\u7f6e\u6587\u4ef6 src/main/resources/application.yml person : lastName : Tom age : 18 boss : false birth : 2017 /12/ 12 maps : { k1 : v1 , k2 : v2 } lists : - cat - dog dog : name : Jack age : 2 \u6620\u5c04\u7c7b src/main/java/com/mouday/bean/Person.java package com.mouday.bean ; import org.springframework.boot.context.properties.ConfigurationProperties ; import org.springframework.stereotype.Component ; import java.util.Date ; import java.util.List ; import java.util.Map ; /** * \u5c06\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u5c5e\u6027\u6620\u5c04\u5230\u8fd9\u4e2a\u7ec4\u4ef6\u4e2d */ @Component @ConfigurationProperties ( prefix = \"person\" ) public class Person { private String name ; private Integer age ; private Boolean sex ; private Date birth ; private Map < String , Object > maps ; private List < String > lists ; private Dog dog ; public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public Integer getAge () { return age ; } public void setAge ( Integer age ) { this . age = age ; } public Boolean getSex () { return sex ; } public void setSex ( Boolean sex ) { this . sex = sex ; } public Date getBirth () { return birth ; } public void setBirth ( Date birth ) { this . birth = birth ; } public Map < String , Object > getMaps () { return maps ; } public void setMaps ( Map < String , Object > maps ) { this . maps = maps ; } public List < String > getLists () { return lists ; } public void setLists ( List < String > lists ) { this . lists = lists ; } public Dog getDog () { return dog ; } public void setDog ( Dog dog ) { this . dog = dog ; } @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age=\" + age + \", sex=\" + sex + \", birth=\" + birth + \", maps=\" + maps + \", lists=\" + lists + \", dog=\" + dog + '}' ; } } src/main/java/com/mouday/bean/Dog.java package com.mouday.bean ; public class Dog { private String name ; private Integer age ; public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public Integer getAge () { return age ; } public void setAge ( Integer age ) { this . age = age ; } @Override public String toString () { return \"Dog{\" + \"name='\" + name + '\\'' + \", age=\" + age + '}' ; } } \u5355\u5143\u6d4b\u8bd5\u4f9d\u8d56 pom.xml <!--\u914d\u7f6e\u6587\u4ef6\u5904\u7406\u5668 \u5bfc\u5165\u914d\u7f6e\u6587\u4ef6\u5bfc\u5165\u63d0\u793a--> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-configuration-processor </artifactId> <optional> true </optional> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-test </artifactId> <scope> test </scope> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> \u5355\u5143\u6d4b\u8bd5 src/test/java/com/mouday/DemoApplicationTests.java package com.mouday ; import com.mouday.bean.Person ; import org.junit.Test ; import org.junit.runner.RunWith ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.test.context.SpringBootTest ; import org.springframework.test.context.junit4.SpringRunner ; @RunWith ( SpringRunner . class ) @SpringBootTest public class DemoApplicationTests { @Autowired private Person person ; @Test public void contextLoads () { System . out . println ( person ); } } \u6253\u5370\u7ed3\u679c Person { name = 'Tom' , age = 18 , sex = false , birth = Tue Dec 12 00 : 00 : 00 CST 2017 , maps = { k1 = v1 , k2 = v2 } , lists = [ cat , dog ], dog = Dog { name = 'Jack' , age = 2 } } \u8bfb\u53d6 properties \u6587\u4ef6\u914d\u7f6e src/main/resources/application.properties person . name = TOM person . age = 18 person . sex = false person . birth = 2017 / 12 / 12 person . maps . k1 = v1 person . maps . k2 = v2 person . lists = cat , dog person . dog . name = Jack person . dog . age = 2","title":"3\u3001YAML \u914d\u7f6e\u6587\u4ef6\u4e2d\u503c\u83b7\u53d6"},{"location":"Java/SpringBoot/\u7b2c\u4e8c\u7ae0-SpringBoot\u914d\u7f6e/#4configurationproperties-value","text":"@ConfigurationProperties @Value \u529f\u80fd \u6279\u91cf\u6ce8\u5165\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u5c5e\u6027 \u4e00\u4e2a\u4e00\u4e2a\u6307\u5b9a \u677e\u6563\u7ed1\u5b9a \u652f\u6301 \u4e0d\u652f\u6301 SpEL \u4e0d\u652f\u6301 \u652f\u6301 JSR303 \u6570\u636e\u6821\u9a8c \u652f\u6301 \u4e0d\u652f\u6301 \u590d\u6742\u7c7b\u578b\u5c01\u88c5 \u652f\u6301 \u4e0d\u652f\u6301 \u5c5e\u6027\u540d\u5339\u914d\u89c4\u5219 person . firstName person . first - name person . first_name PERSON_FIRST_NAME package com.mouday.bean ; import org.springframework.beans.factory.annotation.Value ; import org.springframework.boot.context.properties.ConfigurationProperties ; import org.springframework.stereotype.Component ; import java.util.Date ; import java.util.List ; import java.util.Map ; /** * \u5c06\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u5c5e\u6027\u6620\u5c04\u5230\u8fd9\u4e2a\u7ec4\u4ef6\u4e2d */ @Component // @ConfigurationProperties(prefix = \"person\") public class Person { /** * <bean class=\"Person\"> * <property name=\"name\" value=\"Tom\" /> * </bean> * * value \u652f\u6301 * \u5b57\u9762\u91cf * ${key}\u4ece\u73af\u5883\u53d8\u91cf\uff0c\u914d\u7f6e\u6587\u4ef6\u4e2d\u83b7\u53d6\u503c * #{SpEL}\u8868\u8fbe\u5f0f */ @Value ( \"Tom\" ) private String name ; @Value ( \"#{12*2}\" ) private Integer age ; @Value ( \"true\" ) private Boolean sex ; @Value ( \"${person.birth}\" ) private Date birth ; private Map < String , Object > maps ; private List < String > lists ; private Dog dog ; /** * \u7565setter/getter toString() */ } \u6253\u5370\u7ed3\u679c Person { name = 'Tom' , age = 24 , sex = true , birth = Tue Dec 12 00 : 00 : 00 CST 2017 , maps = null , lists = null , dog = null } \u914d\u7f6e\u6587\u4ef6\u6ce8\u5165\u503c\u6570\u636e\u6821\u9a8c import org.hibernate.validator.constraints.Email ; import org.springframework.boot.context.properties.ConfigurationProperties ; import org.springframework.stereotype.Component ; import org.springframework.validation.annotation.Validated ; @Component @ConfigurationProperties ( prefix = \"person\" ) @Validated public class Person { @Email private String name ; } \u4f7f\u7528\u65b9\u5f0f \u53ea\u662f\u5728\u67d0\u4e2a\u4e1a\u52a1\u903b\u8f91\u4e2d\u83b7\u53d6\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u67d0\u9879\u503c\uff0c\u4f7f\u7528@Value \u4e13\u95e8\u7f16\u5199\u4e00\u4e2a javaBean \u6765\u6620\u5c04\u914d\u7f6e\u6587\u4ef6\uff0c\u90a3\u4e48\u4f7f\u7528@ConfigurationProperties @Value \u7528\u6cd5\u793a\u4f8b package com.mouday.controller ; import org.springframework.beans.factory.annotation.Value ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.ResponseBody ; import org.springframework.web.bind.annotation.RestController ; @Controller @RestController public class HelloController { @Value ( \"${person.name}\" ) private String name ; @RequestMapping ( \"/hello\" ) @ResponseBody public String hello (){ return \"Hello world! \" + this . name ; } }","title":"4\u3001@ConfigurationProperties \u4e0e@Value \u533a\u522b"},{"location":"Java/SpringBoot/\u7b2c\u4e8c\u7ae0-SpringBoot\u914d\u7f6e/#5propertysourceimportresourcebean","text":"@ConfigurationProperties \u9ed8\u8ba4\u52a0\u8f7d\u5168\u5c40\u914d\u7f6e 5.1\u3001@PropertySource \u52a0\u8f7d\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6 import org.springframework.stereotype.Component ; import org.springframework.context.annotation.PropertySource ; @Component // @ConfigurationProperties(prefix = \"person\") @PropertySource ( value = { \"classpath:person.properties\" }) public class Person {} 5.2\u3001@ImportResource \u5bfc\u5165 Spring \u914d\u7f6e\u6587\u4ef6 src/main/resources/beans.xml <?xml version=\"1.0\" encoding=\"utf-8\" ?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean name= \"dog\" class= \"com.mouday.bean.Dog\" /> </beans> @ImportResource \u6807\u6ce8\u5728\u914d\u7f6e\u7c7b\u4e0a package com.mouday ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; import org.springframework.context.annotation.ImportResource ; @ImportResource ( value = { \"classpath:beans.xml\" }) @SpringBootApplication public class ApplicationMain { public static void main ( String [] args ) { SpringApplication . run ( ApplicationMain . class , args ); } } \u6d4b\u8bd5\u65b9\u6cd5 package com.mouday ; import org.junit.Test ; import org.junit.runner.RunWith ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.test.context.SpringBootTest ; import org.springframework.context.ApplicationContext ; import org.springframework.test.context.junit4.SpringRunner ; @RunWith ( SpringRunner . class ) @SpringBootTest public class DemoApplicationTests { @Autowired private ApplicationContext context ; @Test public void TestDog (){ System . out . println ( this . context . containsBean ( \"dog\" )); } } 5.3\u3001@Bean \u7528\u4e8e\u914d\u7f6e\u7c7b\u4e2d\u7ed9\u5bb9\u5668\u6dfb\u52a0\u7ec4\u4ef6 package com.mouday.config ; import com.mouday.bean.Dog ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; /** * @Configuration \u6307\u660e\u5f53\u524d\u7c7b\u662f\u4e00\u4e2a\u914d\u7f6e\u7c7b * \u66ff\u4ee3Spring\u7684\u914d\u7f6e\u6587\u4ef6 */ @Configuration public class MyConfig { // \u5c06\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u6dfb\u52a0\u5230\u5bb9\u5668\uff0c\u5bb9\u5668\u4e2d\u7ec4\u4ef6\u9ed8\u8ba4id\u662f\u65b9\u6cd5\u540d @Bean public Dog dog (){ return new Dog (); } } Spring \u63a8\u8350\u4f7f\u7528\u5168\u6ce8\u89e3\u65b9\u5f0f\u7ed9\u5bb9\u5668\u6dfb\u52a0\u7ec4\u4ef6","title":"5\u3001@PropertySource\u3001@ImportResource\u3001@Bean"},{"location":"Java/SpringBoot/\u7b2c\u4e8c\u7ae0-SpringBoot\u914d\u7f6e/#6","text":"RandomValuePropertySource \u914d\u7f6e\u6587\u4ef6\u4e2d\u53ef\u4ee5\u4f7f\u7528\u968f\u673a\u6570 ${ random . value } ${ random . int } ${ random . uuid } ${ random . long } ${ random . int ( 10 ) } ${ random . int [ 1024 , 65536 ]} \u5c5e\u6027\u914d\u7f6e\u5360\u4f4d\u7b26 app.name=MyApp app.description= ${ app . name : \u9ed8\u8ba4\u503c }","title":"6\u3001\u914d\u7f6e\u6587\u4ef6\u5360\u4f4d\u7b26"},{"location":"Java/SpringBoot/\u7b2c\u4e8c\u7ae0-SpringBoot\u914d\u7f6e/#7profile","text":"Profile \u5bf9\u4e0d\u540c\u73af\u5883\u63d0\u4f9b\u4e0d\u540c\u914d\u7f6e\u529f\u80fd\u7684\u652f\u6301 1\u3001\u591a Profile \u6587\u4ef6 application-{profile}.properties \u9ed8\u8ba4\u4f7f\u7528 application.properties \u901a\u8fc7 spring.profiles.active=prod \u6307\u5b9a\u914d\u7f6e\u6587\u4ef6 eg: application.properties server . port = 8080 spring . profiles . active = prod application-dev.properties server . port = 8081 application-prod.properties server . port = 8082 2\u3001yaml \u6587\u6863\u5757\u6a21\u5f0f application.yml server : port : 8080 spring : profiles : active : dev --- server : port : 8081 spring : profiles : dev --- server : port : 8082 spring : profiles : prod 3\u3001\u6fc0\u6d3b\u65b9\u5f0f 1 \u3001\u547d\u4ee4\u884c --spring.profiles.active=dev 2 \u3001\u914d\u7f6e\u6587\u4ef6 spring . profiles . active = dev 3 \u3001 jvm\u53c2\u6570 - Dspring . profiles . active = dev","title":"7\u3001Profile \u591a\u73af\u5883\u652f\u6301"},{"location":"Java/SpringBoot/\u7b2c\u4e8c\u7ae0-SpringBoot\u914d\u7f6e/#8","text":"Spring Boot \u4f1a\u81ea\u52a8\u626b\u63cf\u4e00\u4e0b\u4f4d\u7f6e\u7684 application.properties \u6216\u8005 application.yml \u6587\u4ef6\u4f5c\u4e3a\u914d\u7f6e\u6587\u4ef6 \u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\uff0c\u6240\u6709\u6587\u4ef6\u90fd\u88ab\u52a0\u8f7d\uff0c \u4e92\u8865\u914d\u7f6e\uff1a\u9ad8\u4f18\u5148\u7ea7\u8986\u76d6\u4f4e\u4f18\u5148\u7ea7 . / config / . / classpath : / config / classpath : / spring.config.location \u4fee\u6539\u9ed8\u8ba4\u4f4d\u7f6e","title":"8\u3001\u914d\u7f6e\u6587\u4ef6\u7684\u52a0\u8f7d\u4f4d\u7f6e"},{"location":"Java/SpringBoot/\u7b2c\u4e8c\u7ae0-SpringBoot\u914d\u7f6e/#9","text":"\u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\u5982\u4e0b 1. \u547d\u4ee4\u884c\u53c2\u6570 $ java - jar springboot - helloword - 1.0 - SNAPSHOT . jar --server.port=8005 2. java : comp / env\u7684JNDI\u5c5e\u6027 3. java\u7cfb\u7edf\u5c5e\u6027System . getProperties () 4. \u64cd\u4f5c\u7cfb\u7edf\u73af\u5883\u53d8\u91cf 5. RandomValuePropertySource\u914d\u7f6e\u7684random . * \u5c5e\u6027 6. jar\u5305\u5916\u90e8\u7684application - { profile } . properties\u6216application . yml \uff08 \u5e26spring . profile \uff09 \u914d\u7f6e\u6587\u4ef6 7. jar\u5305\u5185\u90e8\u7684application - { profile } . properties\u6216application . yml \uff08 \u5e26spring . profile \uff09 \u914d\u7f6e\u6587\u4ef6 8. jar\u5305\u5916\u90e8\u7684application . properties\u6216application . yml \uff08 \u4e0d\u5e26spring . profile \uff09 \u914d\u7f6e\u6587\u4ef6 9. jar\u5305\u5185\u90e8\u7684application . properties\u6216application . yml \uff08 \u4e0d\u5e26spring . profile \uff09 \u914d\u7f6e\u6587\u4ef6 10. @Configuration\u6ce8\u89e3\u7c7b\u4e0a\u7684@PropertySource 11. \u901a\u8fc7SpringApplication . setDefualtProperties\u6307\u5b9a\u7684\u9ed8\u8ba4\u5c5e\u6027 \u603b\u7ed3\uff1a \u9ad8\u4f18\u5148\u7ea7\u914d\u7f6e\u4f1a\u8986\u76d6\u4f4e\u4f18\u5148\u7ea7\u914d\u7f6e \u6240\u6709\u914d\u7f6e\u4f1a\u5f62\u6210\u4e92\u8865\u914d\u7f6e","title":"9\u3001\u5916\u90e8\u914d\u7f6e\u52a0\u8f7d\u987a\u5e8f"},{"location":"Java/SpringBoot/\u7b2c\u4e8c\u7ae0-SpringBoot\u914d\u7f6e/#10","text":"\u626b\u63cf\u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\u5305\u88c5\u6210 properties \u5bf9\u8c61 \u5c06\u914d\u7f6e\u5185\u5bb9\u52a0\u8f7d\u5230\u5bb9\u5668\u4e2d AutoConfiguration \u81ea\u52a8\u914d\u7f6e\u7c7b Properties \u5c01\u88c5\u5c5e\u6027 @Condition \u5224\u65ad\u6761\u4ef6\u6210\u7acb\uff0c\u51b3\u5b9a\u914d\u7f6e\u7c7b\u662f\u5426\u751f\u6548","title":"10\u3001\u81ea\u52a8\u914d\u7f6e\u539f\u7406"},{"location":"Java/SpringBoot/\u7b2c\u4e8c\u7ae0-SpringBoot\u914d\u7f6e/#11conditional","text":"@ConditionalOnJava @ConditionalOnMissingBean @ConditionalOnClass ... \u81ea\u52a8\u914d\u7f6e\u7c7b\u5fc5\u987b\u5728\u4e00\u5b9a\u7684\u6761\u4ef6\u4e0b\u624d\u751f\u6548 \u5f00\u542f\u8c03\u8bd5\u6a21\u5f0f debug = true \u6253\u5370\u81ea\u52a8\u914d\u7f6e\u62a5\u544a ========================= AUTO - CONFIGURATION REPORT ========================= Positive matches : \u542f\u52a8\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b Negative matches : \u6ca1\u542f\u7528\u542f\u52a8\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b Exclusions : Unconditional classes :","title":"11\u3001@Conditional&amp;\u81ea\u52a8\u914d\u7f6e\u62a5\u544a"},{"location":"Java/SpringBoot/\u7b2c\u4e94\u7ae0-SpringBoot\u4e0eDocker/","text":"Docker Docker \u5f00\u6e90\u7684\u5e94\u7528\u5bb9\u5668\u5f15\u64ce \u652f\u6301\u8f6f\u4ef6\u7f16\u8bd1\u6210\u4e00\u4e2a\u955c\u50cf Docker \u6838\u5fc3\u6982\u5ff5 \u4e3b\u673a Host\uff1a\u5b89\u88c5\u4e86 Docker \u7a0b\u5e8f\u7684\u673a\u5668 \u5ba2\u6237\u7aef Client\uff1a\u8fde\u63a5\u4e3b\u673a\u8fdb\u884c\u64cd\u4f5c \u4ed3\u5e93 Registry\uff1a\u4fdd\u5b58\u6253\u5305\u597d\u7684\u8f6f\u4ef6\u955c\u50cf \u955c\u50cf Images\uff1a\u8f6f\u4ef6\u6253\u5305\u597d\u7684\u955c\u50cf \u5bb9\u5668 Container\uff1a\u955c\u50cf\u542f\u52a8\u540e\u7684\u5b9e\u4f8b\uff0c\u5bb9\u5668\u662f\u72ec\u7acb\u8fd0\u884c\u7684\u4e00\u4e2a\u6216\u4e00\u7ec4\u5e94\u7528 \u4f7f\u7528 Docker \u7684\u6b65\u9aa4 \u5b89\u88c5 Docker \u627e\u5230 Docker \u4ed3\u5e93 \u865a\u62df\u673a VirtualBox \u8bbe\u7f6e\u865a\u62df\u673a\u7f51\u7edc \u91cd\u542f\u7f51\u7edc service network restart \u67e5\u770b\u5185\u6838\u7248\u672c Linux \u5b89\u88c5 Docker # \u67e5\u770b\u5185\u6838\u7248\u672c $ uname -r # \u5347\u7ea7\u8f6f\u4ef6 $ yum update # \u5b89\u88c5Docker $ yum install docker # \u542f\u52a8 $ systemctl start docker # \u505c\u6b62 $ systemctl start docker # \u8bbe\u7f6e\u5f00\u673a\u542f\u52a8 $ systemctl enable docker \u5e38\u7528\u64cd\u4f5c https://hub.docker.com/ # \u641c\u7d22docker hub docker search mysql # \u62c9\u53d6 \u9ed8\u8ba4latest docker pull \u955c\u50cf\u540d [ :tag ] # \u67e5\u770b\u672c\u5730\u955c\u50cf\u5217\u8868 docker images # \u5220\u9664\u672c\u5730\u955c\u50cf docker rmi image-id \u5bb9\u5668\u64cd\u4f5c \u8f6f\u4ef6\u955c\u50cf \u8fd0\u884c\u955c\u50cf \u4ea7\u751f\u4e00\u4e2a\u955c\u50cf docker search tomcat # \u8fd0\u884c docker run --name container-name -d image-name --name \u81ea\u5b9a\u4e49\u5bb9\u5668\u540d -d \u540e\u53f0\u8fd0\u884c image-name \u6307\u5b9a\u955c\u50cf\u6a21\u677f # \u67e5\u770b\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668 -a\u6240\u6709 docker ps [ -a ] # \u505c\u6b62 docker stop container-name/container-id # \u542f\u52a8 docker start container-name/container-id # \u5220\u9664 docker rm container-id # \u7aef\u53e3\u6620\u5c04 \u4e3b\u673a\u7aef\u53e3\u6620\u5c04\u5230\u5bb9\u5668\u5185\u90e8\u7aef\u53e3 docker run -d -p 6379 :6379 --name myredis docker.io/redis -p 6379 :6379 # \u5bb9\u5668\u65e5\u5fd7 docker logs container-name/container-id # \u9632\u706b\u5899\u72b6\u6001 service firewalld status # \u5173\u95ed\u9632\u706b\u5899 service firewalld stop MySQL # \u9700\u8981\u6307\u5b9a\u5bc6\u7801\uff1a MYSQL_ROOT_PASSWORD, MYSQL_ALLOW_EMPTY_PASSWORD and MYSQL_RANDOM_ROOT_PASSWORD # \u542f\u52a8\u547d\u4ee4 docker run -p 3306 :3306 --name mysql01 -e MYSQL_ROOT_PASSWORD = 123456 -d mysql # \u5c06\u4e3b\u673a\u76ee\u5f55\u6302\u8f7d\u5230\u5bb9\u5668\u76ee\u5f55 -v /my/custom:/etc/mysql/conf.d redis rabbitmq elasticsearch","title":"\u7b2c\u4e94\u7ae0 SpringBoot\u4e0eDocker"},{"location":"Java/SpringBoot/\u7b2c\u4e94\u7ae0-SpringBoot\u4e0eDocker/#docker","text":"Docker \u5f00\u6e90\u7684\u5e94\u7528\u5bb9\u5668\u5f15\u64ce \u652f\u6301\u8f6f\u4ef6\u7f16\u8bd1\u6210\u4e00\u4e2a\u955c\u50cf","title":"Docker"},{"location":"Java/SpringBoot/\u7b2c\u4e94\u7ae0-SpringBoot\u4e0eDocker/#docker_1","text":"\u4e3b\u673a Host\uff1a\u5b89\u88c5\u4e86 Docker \u7a0b\u5e8f\u7684\u673a\u5668 \u5ba2\u6237\u7aef Client\uff1a\u8fde\u63a5\u4e3b\u673a\u8fdb\u884c\u64cd\u4f5c \u4ed3\u5e93 Registry\uff1a\u4fdd\u5b58\u6253\u5305\u597d\u7684\u8f6f\u4ef6\u955c\u50cf \u955c\u50cf Images\uff1a\u8f6f\u4ef6\u6253\u5305\u597d\u7684\u955c\u50cf \u5bb9\u5668 Container\uff1a\u955c\u50cf\u542f\u52a8\u540e\u7684\u5b9e\u4f8b\uff0c\u5bb9\u5668\u662f\u72ec\u7acb\u8fd0\u884c\u7684\u4e00\u4e2a\u6216\u4e00\u7ec4\u5e94\u7528 \u4f7f\u7528 Docker \u7684\u6b65\u9aa4 \u5b89\u88c5 Docker \u627e\u5230 Docker \u4ed3\u5e93 \u865a\u62df\u673a VirtualBox \u8bbe\u7f6e\u865a\u62df\u673a\u7f51\u7edc \u91cd\u542f\u7f51\u7edc service network restart \u67e5\u770b\u5185\u6838\u7248\u672c Linux \u5b89\u88c5 Docker # \u67e5\u770b\u5185\u6838\u7248\u672c $ uname -r # \u5347\u7ea7\u8f6f\u4ef6 $ yum update # \u5b89\u88c5Docker $ yum install docker # \u542f\u52a8 $ systemctl start docker # \u505c\u6b62 $ systemctl start docker # \u8bbe\u7f6e\u5f00\u673a\u542f\u52a8 $ systemctl enable docker \u5e38\u7528\u64cd\u4f5c https://hub.docker.com/ # \u641c\u7d22docker hub docker search mysql # \u62c9\u53d6 \u9ed8\u8ba4latest docker pull \u955c\u50cf\u540d [ :tag ] # \u67e5\u770b\u672c\u5730\u955c\u50cf\u5217\u8868 docker images # \u5220\u9664\u672c\u5730\u955c\u50cf docker rmi image-id \u5bb9\u5668\u64cd\u4f5c \u8f6f\u4ef6\u955c\u50cf \u8fd0\u884c\u955c\u50cf \u4ea7\u751f\u4e00\u4e2a\u955c\u50cf docker search tomcat # \u8fd0\u884c docker run --name container-name -d image-name --name \u81ea\u5b9a\u4e49\u5bb9\u5668\u540d -d \u540e\u53f0\u8fd0\u884c image-name \u6307\u5b9a\u955c\u50cf\u6a21\u677f # \u67e5\u770b\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668 -a\u6240\u6709 docker ps [ -a ] # \u505c\u6b62 docker stop container-name/container-id # \u542f\u52a8 docker start container-name/container-id # \u5220\u9664 docker rm container-id # \u7aef\u53e3\u6620\u5c04 \u4e3b\u673a\u7aef\u53e3\u6620\u5c04\u5230\u5bb9\u5668\u5185\u90e8\u7aef\u53e3 docker run -d -p 6379 :6379 --name myredis docker.io/redis -p 6379 :6379 # \u5bb9\u5668\u65e5\u5fd7 docker logs container-name/container-id # \u9632\u706b\u5899\u72b6\u6001 service firewalld status # \u5173\u95ed\u9632\u706b\u5899 service firewalld stop MySQL # \u9700\u8981\u6307\u5b9a\u5bc6\u7801\uff1a MYSQL_ROOT_PASSWORD, MYSQL_ALLOW_EMPTY_PASSWORD and MYSQL_RANDOM_ROOT_PASSWORD # \u542f\u52a8\u547d\u4ee4 docker run -p 3306 :3306 --name mysql01 -e MYSQL_ROOT_PASSWORD = 123456 -d mysql # \u5c06\u4e3b\u673a\u76ee\u5f55\u6302\u8f7d\u5230\u5bb9\u5668\u76ee\u5f55 -v /my/custom:/etc/mysql/conf.d redis rabbitmq elasticsearch","title":"Docker \u6838\u5fc3\u6982\u5ff5"},{"location":"Java/SpringBoot/\u7b2c\u516b\u7ae0-SpringBoot\u81ea\u5b9a\u4e49starters/","text":"\u7b2c\u516b\u7ae0 Spring Boot \u81ea\u5b9a\u4e49 starters \u81ea\u52a8\u914d\u7f6e\u7c7b @Configuration // \u6307\u5b9a\u8fd9\u4e2a\u7c7b\u662f\u914d\u7f6e\u7c7b @Conditionalxxx // \u6307\u5b9a\u6761\u4ef6\u6210\u7acb\u7684\u60c5\u51b5\u4e0b\u81ea\u52a8\u914d\u7f6e\u7c7b\u751f\u6548 @AutoConfigureAfter // \u6307\u5b9a\u81ea\u52a8\u914d\u7f6e\u7c7b\u7684\u987a\u5e8f @Bean // \u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u7ec4\u4ef6 @ConfigurationProperties // \u7ed3\u5408\u76f8\u5173Properties\u7c7b\u6765\u7ed1\u5b9a\u76f8\u5173\u7684\u914d\u7f6e @EnableConfigurationProperties // \u8ba9Properties\u751f\u6548\u52a0\u5165\u5230\u5bb9\u5668\u4e2d \u542f\u52a8\u5668 Starter \u542f\u52a8\u5668\u6a21\u5757\u662f\u4e00\u4e2a\u7a7a\u7684 JAR \u6587\u4ef6\uff0c\u4ec5\u63d0\u4f9b\u8f85\u52a9\u6027\u4f9d\u8d56\u7ba1\u7406\uff0c\u8fd9\u4e9b\u4f9d\u8d56\u53ef\u80fd\u7528\u4e8e\u81ea\u52a8\u88c5\u914d\u6216\u8005\u5176\u4ed6\u7c7b\u5e93 \u547d\u540d\u89c4\u7ea6\uff1a \u63a8\u8350\u4f7f\u7528\u4e00\u4e0b\u547d\u540d\u89c4\u7ea6 \u5b98\u65b9\u547d\u540d\u7a7a\u95f4\uff1a \u524d\u7f00\uff1aspring-boot-starter- \u6a21\u5f0f\uff1aspring-boot-starter-\u6a21\u5757\u540d \u4e3e\u4f8b\uff1aspring-boot-starter-web\u3001spring-boot-starter-jdbc \u81ea\u5b9a\u4e49\u547d\u540d\u7a7a\u95f4\uff1a \u524d\u7f00\uff1a-spring-boot-starter \u6a21\u5f0f\uff1a\u6a21\u5757\u540d-spring-boot-starter \u4e3e\u4f8b\uff1amybatis-spring-boot-starter \u81ea\u5b9a\u4e49 starter 1\u3001Idea \u521b\u5efa\u7a7a\u5de5\u7a0b Empty Project 2\u3001\u65b0\u5efa spring \u81ea\u52a8\u914d\u7f6e\u6a21\u5757 pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 2.3.1.RELEASE </version> <relativePath/> <!-- lookup parent from repository --> </parent> <groupId> com.mouday </groupId> <artifactId> mouday-spring-boot-starter-autoconfigurer </artifactId> <version> 0.0.1-SNAPSHOT </version> <name> mouday-spring-boot-starter-autoconfigurer </name> <description> Demo project for Spring Boot </description> <properties> <java.version> 1.8 </java.version> </properties> <!--\u6240\u6709starter\u7684\u57fa\u672c\u914d\u7f6e--> <dependencies> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter </artifactId> </dependency> </dependencies> </project> \u5c5e\u6027\u6587\u4ef6 HelloProperties.java package com.mouday.starter ; import org.springframework.boot.context.properties.ConfigurationProperties ; @ConfigurationProperties ( prefix = \"mouday.hello\" ) public class HelloProperties { private String prefix ; private String suffix ; public String getPrefix () { return prefix ; } public void setPrefix ( String prefix ) { this . prefix = prefix ; } public String getSuffix () { return suffix ; } public void setSuffix ( String suffix ) { this . suffix = suffix ; } } HelloService.java package com.mouday.starter ; public class HelloService { HelloProperties properties ; public String sayHello ( String name ){ return properties . getPrefix () + name + properties . getSuffix (); } public HelloProperties getProperties () { return properties ; } public void setProperties ( HelloProperties properties ) { this . properties = properties ; } } \u914d\u7f6e\u7c7b package com.mouday.starter ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication ; import org.springframework.boot.context.properties.EnableConfigurationProperties ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; @Configuration @ConditionalOnWebApplication // web\u5e94\u7528\u624d\u751f\u6548 @EnableConfigurationProperties ( HelloProperties . class ) public class HelloServiceAutoConfiguration { @Autowired HelloProperties helloProperties ; @Bean public HelloService helloService (){ HelloService service = new HelloService (); service . setProperties ( helloProperties ); return service ; } } src/main/resources/META-INF/spring.factories org . springframework . boot . autoconfigure . EnableAutoConfiguration = \\ com . mouday . starter . HelloServiceAutoConfiguration 3\u3001\u65b0\u5efa maven starter \u6a21\u5757 pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> com.mouday </groupId> <artifactId> mouday-spring-boot-starter </artifactId> <version> 1.0-SNAPSHOT </version> <dependencies> <dependency> <groupId> com.mouday </groupId> <artifactId> mouday-spring-boot-starter-autoconfigurer </artifactId> <version> 0.0.1-SNAPSHOT </version> </dependency> </dependencies> </project> \u6d4b\u8bd5 \u5f15\u5165\u4f9d\u8d56 pom.xml <dependency> <groupId> com.mouday </groupId> <artifactId> mouday-spring-boot-starter </artifactId> <version> 0.0.1-SNAPSHOT </version> </dependency> \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 application.properties mouday . hello . prefix = hello mouday . hello . suffix = hi \u65b0\u5efa\u6d4b\u8bd5 Controller package com.example.demo.controller ; import com.mouday.starter.HelloService ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.ResponseBody ; @Controller public class HelloController { @Autowired HelloService helloService ; @GetMapping ( \"/hello\" ) @ResponseBody public String hello ( String name ){ return helloService . sayHello ( name ); } } http://localhost:8080/hello?name=Tom \u8bbf\u95ee\u7ed3\u679c helloTomhi \u5b66\u4e60\u65b0\u6280\u672f\uff1a \u4e00\u770b\u6587\u6863\uff0c\u4e8c\u770b\u6e90\u7801","title":"\u7b2c\u516b\u7ae0 Spring Boot \u81ea\u5b9a\u4e49 starters"},{"location":"Java/SpringBoot/\u7b2c\u516b\u7ae0-SpringBoot\u81ea\u5b9a\u4e49starters/#spring-boot-starters","text":"\u81ea\u52a8\u914d\u7f6e\u7c7b @Configuration // \u6307\u5b9a\u8fd9\u4e2a\u7c7b\u662f\u914d\u7f6e\u7c7b @Conditionalxxx // \u6307\u5b9a\u6761\u4ef6\u6210\u7acb\u7684\u60c5\u51b5\u4e0b\u81ea\u52a8\u914d\u7f6e\u7c7b\u751f\u6548 @AutoConfigureAfter // \u6307\u5b9a\u81ea\u52a8\u914d\u7f6e\u7c7b\u7684\u987a\u5e8f @Bean // \u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u7ec4\u4ef6 @ConfigurationProperties // \u7ed3\u5408\u76f8\u5173Properties\u7c7b\u6765\u7ed1\u5b9a\u76f8\u5173\u7684\u914d\u7f6e @EnableConfigurationProperties // \u8ba9Properties\u751f\u6548\u52a0\u5165\u5230\u5bb9\u5668\u4e2d \u542f\u52a8\u5668 Starter \u542f\u52a8\u5668\u6a21\u5757\u662f\u4e00\u4e2a\u7a7a\u7684 JAR \u6587\u4ef6\uff0c\u4ec5\u63d0\u4f9b\u8f85\u52a9\u6027\u4f9d\u8d56\u7ba1\u7406\uff0c\u8fd9\u4e9b\u4f9d\u8d56\u53ef\u80fd\u7528\u4e8e\u81ea\u52a8\u88c5\u914d\u6216\u8005\u5176\u4ed6\u7c7b\u5e93 \u547d\u540d\u89c4\u7ea6\uff1a \u63a8\u8350\u4f7f\u7528\u4e00\u4e0b\u547d\u540d\u89c4\u7ea6 \u5b98\u65b9\u547d\u540d\u7a7a\u95f4\uff1a \u524d\u7f00\uff1aspring-boot-starter- \u6a21\u5f0f\uff1aspring-boot-starter-\u6a21\u5757\u540d \u4e3e\u4f8b\uff1aspring-boot-starter-web\u3001spring-boot-starter-jdbc \u81ea\u5b9a\u4e49\u547d\u540d\u7a7a\u95f4\uff1a \u524d\u7f00\uff1a-spring-boot-starter \u6a21\u5f0f\uff1a\u6a21\u5757\u540d-spring-boot-starter \u4e3e\u4f8b\uff1amybatis-spring-boot-starter","title":"\u7b2c\u516b\u7ae0 Spring Boot \u81ea\u5b9a\u4e49 starters"},{"location":"Java/SpringBoot/\u7b2c\u516b\u7ae0-SpringBoot\u81ea\u5b9a\u4e49starters/#starter","text":"1\u3001Idea \u521b\u5efa\u7a7a\u5de5\u7a0b Empty Project 2\u3001\u65b0\u5efa spring \u81ea\u52a8\u914d\u7f6e\u6a21\u5757 pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 2.3.1.RELEASE </version> <relativePath/> <!-- lookup parent from repository --> </parent> <groupId> com.mouday </groupId> <artifactId> mouday-spring-boot-starter-autoconfigurer </artifactId> <version> 0.0.1-SNAPSHOT </version> <name> mouday-spring-boot-starter-autoconfigurer </name> <description> Demo project for Spring Boot </description> <properties> <java.version> 1.8 </java.version> </properties> <!--\u6240\u6709starter\u7684\u57fa\u672c\u914d\u7f6e--> <dependencies> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter </artifactId> </dependency> </dependencies> </project> \u5c5e\u6027\u6587\u4ef6 HelloProperties.java package com.mouday.starter ; import org.springframework.boot.context.properties.ConfigurationProperties ; @ConfigurationProperties ( prefix = \"mouday.hello\" ) public class HelloProperties { private String prefix ; private String suffix ; public String getPrefix () { return prefix ; } public void setPrefix ( String prefix ) { this . prefix = prefix ; } public String getSuffix () { return suffix ; } public void setSuffix ( String suffix ) { this . suffix = suffix ; } } HelloService.java package com.mouday.starter ; public class HelloService { HelloProperties properties ; public String sayHello ( String name ){ return properties . getPrefix () + name + properties . getSuffix (); } public HelloProperties getProperties () { return properties ; } public void setProperties ( HelloProperties properties ) { this . properties = properties ; } } \u914d\u7f6e\u7c7b package com.mouday.starter ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication ; import org.springframework.boot.context.properties.EnableConfigurationProperties ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; @Configuration @ConditionalOnWebApplication // web\u5e94\u7528\u624d\u751f\u6548 @EnableConfigurationProperties ( HelloProperties . class ) public class HelloServiceAutoConfiguration { @Autowired HelloProperties helloProperties ; @Bean public HelloService helloService (){ HelloService service = new HelloService (); service . setProperties ( helloProperties ); return service ; } } src/main/resources/META-INF/spring.factories org . springframework . boot . autoconfigure . EnableAutoConfiguration = \\ com . mouday . starter . HelloServiceAutoConfiguration 3\u3001\u65b0\u5efa maven starter \u6a21\u5757 pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> com.mouday </groupId> <artifactId> mouday-spring-boot-starter </artifactId> <version> 1.0-SNAPSHOT </version> <dependencies> <dependency> <groupId> com.mouday </groupId> <artifactId> mouday-spring-boot-starter-autoconfigurer </artifactId> <version> 0.0.1-SNAPSHOT </version> </dependency> </dependencies> </project>","title":"\u81ea\u5b9a\u4e49 starter"},{"location":"Java/SpringBoot/\u7b2c\u516b\u7ae0-SpringBoot\u81ea\u5b9a\u4e49starters/#_1","text":"\u5f15\u5165\u4f9d\u8d56 pom.xml <dependency> <groupId> com.mouday </groupId> <artifactId> mouday-spring-boot-starter </artifactId> <version> 0.0.1-SNAPSHOT </version> </dependency> \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 application.properties mouday . hello . prefix = hello mouday . hello . suffix = hi \u65b0\u5efa\u6d4b\u8bd5 Controller package com.example.demo.controller ; import com.mouday.starter.HelloService ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.ResponseBody ; @Controller public class HelloController { @Autowired HelloService helloService ; @GetMapping ( \"/hello\" ) @ResponseBody public String hello ( String name ){ return helloService . sayHello ( name ); } } http://localhost:8080/hello?name=Tom \u8bbf\u95ee\u7ed3\u679c helloTomhi \u5b66\u4e60\u65b0\u6280\u672f\uff1a \u4e00\u770b\u6587\u6863\uff0c\u4e8c\u770b\u6e90\u7801","title":"\u6d4b\u8bd5"},{"location":"Java/SpringBoot/\u7b2c\u516d\u7ae0-SpringBoot\u4e0e\u6570\u636e\u8bbf\u95ee/","text":"\u7b2c\u516d\u7ae0 Spring Boot \u4e0e\u6570\u636e\u8bbf\u95ee \u6570\u636e\u8bbf\u95ee\u7b80\u4ecb JDBC MyBatis SpringDataJPA JDBC&\u81ea\u52a8\u914d\u7f6e\u539f\u7406 \u4f9d\u8d56 <!--\u6570\u636e\u5e93\u8bbf\u95ee--> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-jdbc </artifactId> </dependency> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <scope> runtime </scope> </dependency> \u914d\u7f6e\u6570\u636e\u6e90 \u652f\u6301\u7684\u6570\u636e\u6e90 HikariDataSource org . apache . tomcat . jdbc . pool . DataSource org . apache . commons . dbcp2 . BasicDataSource \u81ea\u5b9a\u4e49 DataSource DataSourceInitializer \u81ea\u52a8\u8fd0\u884c\u5efa\u8868\u8bed\u53e5 \u8fd0\u884c\u63d2\u5165\u6570\u636e\u7684 sql \u8bed\u53e5 \u6587\u4ef6\u540d\u547d\u540d\u89c4\u5219 scheme -* . sql data -* . sql \u6216\u8005\u6307\u5b9a\u6587\u4ef6\u540d application.yml spring : # \u914d\u7f6e\u6570\u636e\u6e90 datasource : username : root password : 123456 url : jdbc:mysql://localhost:3306/data driver-class-name : com.mysql.cj.jdbc.Driver # \u59cb\u7ec8\u6267\u884c\u521d\u59cb\u5316 initialization-mode : ALWAYS # \u6307\u5b9a\u81ea\u52a8\u5efa\u8868sql schema : - classpath:schema-all.sql schema-all.sql create table if not exists ` person ` ( ` id ` int , ` name ` varchar ( 255 ) ); -- \u6ce8\u610f\u9700\u8981\u6709\u5206\u53f7\u7ed3\u5c3e \u67e5\u8be2\u6570\u636e package com.example.demo.controller ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.jdbc.core.JdbcTemplate ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RestController ; import java.util.List ; import java.util.Map ; /** * \u4eba\u7269\u6570\u636e\u63a5\u53e3 */ @RestController @RequestMapping ( \"/person\" ) public class PersonController { @Autowired private JdbcTemplate jdbcTemplate ; @GetMapping ( \"/list\" ) public List < Map < String , Object >> list (){ String sql = \"select * from person\" ; List < Map < String , Object >> list = jdbcTemplate . queryForList ( sql ); return list ; } } \u6574\u5408 Druid&\u914d\u7f6e\u6570\u636e\u6e90\u76d1\u63a7 Druid \u80fd\u591f\u63d0\u4f9b\u5f3a\u5927\u7684\u76d1\u63a7\u548c\u6269\u5c55\u529f\u80fd druid \u7684\u914d\u7f6e initialSize: 5 minIdle: 5 maxActive: 20 maxWait: 60000 timeBetweenEvictionRunsMillis: 60000 minEvictableIdleTimeMillis: 300000 validationQuery: select 1 from dual testWhileIdle: true testOnBorrow: false testOnReturn: false poolPreparedStatements: true # \u914d\u7f6e\u76d1\u63a7\u7cfb\u7edf\u62e6\u622a\u7684filters,\u53bb\u6389\u540e\u76d1\u63a7\u89c1\u9762sql\u65e0\u6cd5\u7edf\u8ba1\uff0cwall\u7528\u4e8e\u9632\u706b\u5899 filters: stat,wall,log4j maxPoolPreparedStatementPerConnectionSize: 20 useGlobalDataSourceStat: true connectionProperties: druid.stat.mergeSql = true ; druid.stat.slowSqlMills = 500 \u4f9d\u8d56 <dependency> <groupId> com.alibaba </groupId> <artifactId> druid </artifactId> <version> 1.1.21 </version> </dependency> \u914d\u7f6e spring: # \u914d\u7f6e\u6570\u636e\u6e90 datasource: # \u81ea\u5b9a\u4e49\u6570\u636e\u6e90 type: com.alibaba.druid.pool.DruidDataSource # \u7edf\u8ba1sql filters: stat,wall \u81ea\u5b9a\u4e49\u914d\u7f6e\u7c7b package com.example.demo.config ; import com.alibaba.druid.pool.DruidDataSource ; import com.alibaba.druid.support.http.ResourceServlet ; import com.alibaba.druid.support.http.StatViewServlet ; import com.alibaba.druid.support.http.WebStatFilter ; import org.springframework.boot.context.properties.ConfigurationProperties ; import org.springframework.boot.web.servlet.FilterRegistrationBean ; import org.springframework.boot.web.servlet.ServletRegistrationBean ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import javax.sql.DataSource ; import java.util.Arrays ; import java.util.HashMap ; import java.util.Map ; @Configuration public class DruidConfig { // \u52a0\u8f7ddruid\u7684\u81ea\u5b9a\u4e49\u53c2\u6570 @ConfigurationProperties ( prefix = \"spring.datasource\" ) @Bean public DataSource druid (){ return new DruidDataSource (); } // \u914d\u7f6eDruid\u76d1\u63a7 @Bean public ServletRegistrationBean statViewServlet (){ ServletRegistrationBean bean = new ServletRegistrationBean ( new StatViewServlet (), \"/druid/*\" ); Map < String , String > params = new HashMap <>(); params . put ( ResourceServlet . PARAM_NAME_USERNAME , \"admin\" ); params . put ( ResourceServlet . PARAM_NAME_PASSWORD , \"123456\" ); bean . setInitParameters ( params ); return bean ; } // \u914d\u7f6efilter @Bean public FilterRegistrationBean webStatFilter (){ FilterRegistrationBean bean = new FilterRegistrationBean (); bean . setFilter ( new WebStatFilter ()); bean . setUrlPatterns ( Arrays . asList ( \"/*\" )); Map < String , String > params = new HashMap <>(); params . put ( WebStatFilter . PARAM_NAME_EXCLUSIONS , \"*.js,*.css\" ); bean . setInitParameters ( params ); return bean ; } } \u540e\u53f0\u76d1\u63a7\u5730\u5740 http : // localhost : 8080 / druid / \u6574\u5408 MyBatis\uff08\u4e00\uff09-\u57fa\u7840\u73af\u5883\u642d\u5efa mybatis-spring-boot-starter <dependency> <groupId> org.mybatis.spring.boot </groupId> <artifactId> mybatis-spring-boot-starter </artifactId> <version> 2.1.3 </version> </dependency> \u6574\u5408 MyBatis\uff08\u4e8c\uff09-\u6ce8\u89e3\u7248 MyBatis src/main/java/com/example/demo/mapper/DepartmentMapper.java package com.example.demo.mapper ; import com.example.demo.pojo.Department ; import org.apache.ibatis.annotations.* ; // \u6307\u5b9a\u8fd9\u662f\u4e00\u4e2a\u64cd\u4f5c\u6570\u636e\u5e93\u7684mapper // @Mapper public interface DepartmentMapper { @Select ( \"select * from department where id = #{id}\" ) public Department getById ( Integer id ); @Delete ( \"delete from department where id = #{id}\" ) public int deleteById ( Integer id ); // \u63d2\u5165\u6570\u636e\u540e\u81ea\u589e\u4e3b\u952e\u81ea\u52a8\u8bbe\u7f6e\u5230department @Options ( useGeneratedKeys = true , keyProperty = \"id\" ) @Insert ( \"insert into department(name) values(#{name}) \" ) public int insert ( Department department ); @Update ( \"update department set name = #{name} where id = #{id} \" ) public int update ( Department department ); } src/main/java/com/example/demo/controller/DepartmentController.java package com.example.demo.controller ; import com.example.demo.mapper.DepartmentMapper ; import com.example.demo.pojo.Department ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.PathVariable ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RestController ; @RestController public class DepartmentController { @Autowired private DepartmentMapper departmentMapper ; @GetMapping ( \"/dept/{id}\" ) public Department getDepartment ( @PathVariable ( \"id\" ) Integer id ){ return departmentMapper . getById ( id ); } @GetMapping ( \"/dept\" ) public Department insertDepartment ( Department department ){ departmentMapper . insert ( department ); return department ; } } src/main/java/com/example/demo/DemoApplication.java package com.example.demo ; import org.mybatis.spring.annotation.MapperScan ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; // \u81ea\u52a8\u626b\u63cfmapper\u63a5\u53e3\uff0c\u4e0d\u7528\u6bcf\u4e2amapper\u90fd\u6dfb\u52a0@Mapper\u6ce8\u89e3 @MapperScan ( value = { \"com.example.demo.mapper\" }) @SpringBootApplication public class DemoApplication { public static void main ( String [] args ) { SpringApplication . run ( DemoApplication . class , args ); } } \u6574\u5408 MyBatis\uff08\u4e8c\uff09-\u914d\u7f6e\u7248 MyBatis \u6587\u6863\uff1a https://mybatis.org/mybatis-3/zh/index.html application.yml mybatis : # \u6307\u5b9a\u5168\u5c40\u914d\u7f6e\u6587\u4ef6\u8def\u5f84 config-location : classpath:mybatis/mybatis-config.xml # \u6307\u5b9amapper\u6587\u4ef6\u8def\u5f84 mapper-locations : classpath:mybatis/mapper/*.xml src/main/resources/mybatis/mybatis-config.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <configuration> <settings> <!--\u5f00\u542f\u9a7c\u5cf0\u547d\u540d\u81ea\u52a8\u6620\u5c04--> <setting name= \"mapUnderscoreToCamelCase\" value= \"true\" /> </settings> </configuration> src/main/resources/mybatis/mapper/EmployeeMapper.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <mapper namespace= \"com.example.demo.mapper.EmployeeMapper\" > <select id= \"getById\" resultType= \"com.example.demo.pojo.Employee\" > select * from employee where id = #{id} </select> <insert id= \"insert\" > insert into employee (name, age, sex, birth, department_id) values (#{name}, #{age}, #{sex}, #{birth}, #{department_id}) </insert> <delete id= \"deleteById\" > delete from employee where id = #{id} </delete> </mapper> src/main/java/com/example/demo/mapper/EmployeeMapper.java package com.example.demo.mapper ; import com.example.demo.pojo.Employee ; // @Mapper \u6216@MapperScan \u5c06\u63a5\u53e3\u626b\u63cf\u88c5\u914d\u5230\u5bb9\u5668\u4e2d public interface EmployeeMapper { public Employee getById ( Integer id ); public int deleteById ( Integer id ); public void insert ( Employee employee ); } src/main/java/com/example/demo/controller/DepartmentController.java package com.example.demo.controller ; import com.example.demo.mapper.DepartmentMapper ; import com.example.demo.mapper.EmployeeMapper ; import com.example.demo.pojo.Department ; import com.example.demo.pojo.Employee ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.PathVariable ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RestController ; @RestController public class DepartmentController { @Autowired private EmployeeMapper employeeMapper ; @GetMapping ( \"/getEmp/{id}\" ) public Employee getEmployee ( @PathVariable ( \"id\" ) Integer id ){ return employeeMapper . getById ( id ); } } SpringData JPA SpringData \u4e3a\u6211\u4eec\u63d0\u4f9b\u4f7f\u7528\u540c\u4e00\u7684 API \u6765\u5bf9\u6570\u636e\u8bbf\u95ee\u5c42\u8fdb\u884c\u64cd\u4f5c JPA: Java Persistence API <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-data-jpa </artifactId> <version> 2.3.1.RELEASE </version> </dependency> \u914d\u7f6e\u6587\u4ef6 spring : jpa : hibernate : # \u66f4\u65b0\u6216\u521b\u5efa\u8868\u7ed3\u6784 ddl-auto : update # \u63a7\u5236\u53f0\u6253\u5370sql show-sql : true JAP\uff1aORM Object Relation Mapping \u7f16\u5199\u5b9e\u4f53\u7c7b\u4e0e\u6570\u636e\u8868\u8fdb\u884c\u6620\u5c04 package com.example.demo.entity ; import javax.persistence.* ; // \u4f7f\u7528JPA\u6ce8\u89e3\u914d\u7f6e\u6620\u5c04\u5173\u7cfb @Entity // \u5b9e\u4f53\u7c7b @Table ( name = \"tbl_user\" ) // \u6307\u5b9a\u8868\u540d public class User { @Id // \u4e3b\u952e @GeneratedValue ( strategy = GenerationType . IDENTITY ) // \u81ea\u589e private Integer id ; @Column ( name = \"last_name\" , length = 50 ) private String lastName ; @Column // \u9ed8\u8ba4\u7c7b\u540d=\u5c5e\u6027\u540d private String email ; } \u521b\u5efa repository package com.example.demo.repository ; import com.example.demo.entity.User ; import org.springframework.data.jpa.repository.JpaRepository ; // \u7ee7\u627fJpaRepository\u6765\u5b8c\u6210\u5bf9\u6570\u636e\u5e93\u7684\u64cd\u4f5c public interface UserRepository extends JpaRepository < User , Integer > { } Controller package com.example.demo.controller ; import com.example.demo.entity.User ; import com.example.demo.repository.UserRepository ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.PathVariable ; import org.springframework.web.bind.annotation.RestController ; import java.util.Optional ; @RestController public class UserController { @Autowired private UserRepository userRepository ; @GetMapping ( \"/user/{id}\" ) public User getUser ( @PathVariable ( \"id\" ) Integer id ){ Optional < User > user = userRepository . findById ( id ); if ( user . isPresent ()){ return user . get (); } else { return null ; } } @GetMapping ( \"/user\" ) public User insertUser ( User user ){ User savedUser = userRepository . save ( user ); return savedUser ; } }","title":"\u7b2c\u516d\u7ae0 Spring Boot \u4e0e\u6570\u636e\u8bbf\u95ee"},{"location":"Java/SpringBoot/\u7b2c\u516d\u7ae0-SpringBoot\u4e0e\u6570\u636e\u8bbf\u95ee/#spring-boot","text":"","title":"\u7b2c\u516d\u7ae0 Spring Boot \u4e0e\u6570\u636e\u8bbf\u95ee"},{"location":"Java/SpringBoot/\u7b2c\u516d\u7ae0-SpringBoot\u4e0e\u6570\u636e\u8bbf\u95ee/#_1","text":"JDBC MyBatis SpringDataJPA","title":"\u6570\u636e\u8bbf\u95ee\u7b80\u4ecb"},{"location":"Java/SpringBoot/\u7b2c\u516d\u7ae0-SpringBoot\u4e0e\u6570\u636e\u8bbf\u95ee/#jdbc","text":"\u4f9d\u8d56 <!--\u6570\u636e\u5e93\u8bbf\u95ee--> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-jdbc </artifactId> </dependency> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <scope> runtime </scope> </dependency> \u914d\u7f6e\u6570\u636e\u6e90 \u652f\u6301\u7684\u6570\u636e\u6e90 HikariDataSource org . apache . tomcat . jdbc . pool . DataSource org . apache . commons . dbcp2 . BasicDataSource \u81ea\u5b9a\u4e49 DataSource DataSourceInitializer \u81ea\u52a8\u8fd0\u884c\u5efa\u8868\u8bed\u53e5 \u8fd0\u884c\u63d2\u5165\u6570\u636e\u7684 sql \u8bed\u53e5 \u6587\u4ef6\u540d\u547d\u540d\u89c4\u5219 scheme -* . sql data -* . sql \u6216\u8005\u6307\u5b9a\u6587\u4ef6\u540d application.yml spring : # \u914d\u7f6e\u6570\u636e\u6e90 datasource : username : root password : 123456 url : jdbc:mysql://localhost:3306/data driver-class-name : com.mysql.cj.jdbc.Driver # \u59cb\u7ec8\u6267\u884c\u521d\u59cb\u5316 initialization-mode : ALWAYS # \u6307\u5b9a\u81ea\u52a8\u5efa\u8868sql schema : - classpath:schema-all.sql schema-all.sql create table if not exists ` person ` ( ` id ` int , ` name ` varchar ( 255 ) ); -- \u6ce8\u610f\u9700\u8981\u6709\u5206\u53f7\u7ed3\u5c3e \u67e5\u8be2\u6570\u636e package com.example.demo.controller ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.jdbc.core.JdbcTemplate ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RestController ; import java.util.List ; import java.util.Map ; /** * \u4eba\u7269\u6570\u636e\u63a5\u53e3 */ @RestController @RequestMapping ( \"/person\" ) public class PersonController { @Autowired private JdbcTemplate jdbcTemplate ; @GetMapping ( \"/list\" ) public List < Map < String , Object >> list (){ String sql = \"select * from person\" ; List < Map < String , Object >> list = jdbcTemplate . queryForList ( sql ); return list ; } }","title":"JDBC&amp;\u81ea\u52a8\u914d\u7f6e\u539f\u7406"},{"location":"Java/SpringBoot/\u7b2c\u516d\u7ae0-SpringBoot\u4e0e\u6570\u636e\u8bbf\u95ee/#druid","text":"Druid \u80fd\u591f\u63d0\u4f9b\u5f3a\u5927\u7684\u76d1\u63a7\u548c\u6269\u5c55\u529f\u80fd druid \u7684\u914d\u7f6e initialSize: 5 minIdle: 5 maxActive: 20 maxWait: 60000 timeBetweenEvictionRunsMillis: 60000 minEvictableIdleTimeMillis: 300000 validationQuery: select 1 from dual testWhileIdle: true testOnBorrow: false testOnReturn: false poolPreparedStatements: true # \u914d\u7f6e\u76d1\u63a7\u7cfb\u7edf\u62e6\u622a\u7684filters,\u53bb\u6389\u540e\u76d1\u63a7\u89c1\u9762sql\u65e0\u6cd5\u7edf\u8ba1\uff0cwall\u7528\u4e8e\u9632\u706b\u5899 filters: stat,wall,log4j maxPoolPreparedStatementPerConnectionSize: 20 useGlobalDataSourceStat: true connectionProperties: druid.stat.mergeSql = true ; druid.stat.slowSqlMills = 500 \u4f9d\u8d56 <dependency> <groupId> com.alibaba </groupId> <artifactId> druid </artifactId> <version> 1.1.21 </version> </dependency> \u914d\u7f6e spring: # \u914d\u7f6e\u6570\u636e\u6e90 datasource: # \u81ea\u5b9a\u4e49\u6570\u636e\u6e90 type: com.alibaba.druid.pool.DruidDataSource # \u7edf\u8ba1sql filters: stat,wall \u81ea\u5b9a\u4e49\u914d\u7f6e\u7c7b package com.example.demo.config ; import com.alibaba.druid.pool.DruidDataSource ; import com.alibaba.druid.support.http.ResourceServlet ; import com.alibaba.druid.support.http.StatViewServlet ; import com.alibaba.druid.support.http.WebStatFilter ; import org.springframework.boot.context.properties.ConfigurationProperties ; import org.springframework.boot.web.servlet.FilterRegistrationBean ; import org.springframework.boot.web.servlet.ServletRegistrationBean ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import javax.sql.DataSource ; import java.util.Arrays ; import java.util.HashMap ; import java.util.Map ; @Configuration public class DruidConfig { // \u52a0\u8f7ddruid\u7684\u81ea\u5b9a\u4e49\u53c2\u6570 @ConfigurationProperties ( prefix = \"spring.datasource\" ) @Bean public DataSource druid (){ return new DruidDataSource (); } // \u914d\u7f6eDruid\u76d1\u63a7 @Bean public ServletRegistrationBean statViewServlet (){ ServletRegistrationBean bean = new ServletRegistrationBean ( new StatViewServlet (), \"/druid/*\" ); Map < String , String > params = new HashMap <>(); params . put ( ResourceServlet . PARAM_NAME_USERNAME , \"admin\" ); params . put ( ResourceServlet . PARAM_NAME_PASSWORD , \"123456\" ); bean . setInitParameters ( params ); return bean ; } // \u914d\u7f6efilter @Bean public FilterRegistrationBean webStatFilter (){ FilterRegistrationBean bean = new FilterRegistrationBean (); bean . setFilter ( new WebStatFilter ()); bean . setUrlPatterns ( Arrays . asList ( \"/*\" )); Map < String , String > params = new HashMap <>(); params . put ( WebStatFilter . PARAM_NAME_EXCLUSIONS , \"*.js,*.css\" ); bean . setInitParameters ( params ); return bean ; } } \u540e\u53f0\u76d1\u63a7\u5730\u5740 http : // localhost : 8080 / druid /","title":"\u6574\u5408 Druid&amp;\u914d\u7f6e\u6570\u636e\u6e90\u76d1\u63a7"},{"location":"Java/SpringBoot/\u7b2c\u516d\u7ae0-SpringBoot\u4e0e\u6570\u636e\u8bbf\u95ee/#mybatis-","text":"mybatis-spring-boot-starter <dependency> <groupId> org.mybatis.spring.boot </groupId> <artifactId> mybatis-spring-boot-starter </artifactId> <version> 2.1.3 </version> </dependency>","title":"\u6574\u5408 MyBatis\uff08\u4e00\uff09-\u57fa\u7840\u73af\u5883\u642d\u5efa"},{"location":"Java/SpringBoot/\u7b2c\u516d\u7ae0-SpringBoot\u4e0e\u6570\u636e\u8bbf\u95ee/#mybatis-mybatis","text":"src/main/java/com/example/demo/mapper/DepartmentMapper.java package com.example.demo.mapper ; import com.example.demo.pojo.Department ; import org.apache.ibatis.annotations.* ; // \u6307\u5b9a\u8fd9\u662f\u4e00\u4e2a\u64cd\u4f5c\u6570\u636e\u5e93\u7684mapper // @Mapper public interface DepartmentMapper { @Select ( \"select * from department where id = #{id}\" ) public Department getById ( Integer id ); @Delete ( \"delete from department where id = #{id}\" ) public int deleteById ( Integer id ); // \u63d2\u5165\u6570\u636e\u540e\u81ea\u589e\u4e3b\u952e\u81ea\u52a8\u8bbe\u7f6e\u5230department @Options ( useGeneratedKeys = true , keyProperty = \"id\" ) @Insert ( \"insert into department(name) values(#{name}) \" ) public int insert ( Department department ); @Update ( \"update department set name = #{name} where id = #{id} \" ) public int update ( Department department ); } src/main/java/com/example/demo/controller/DepartmentController.java package com.example.demo.controller ; import com.example.demo.mapper.DepartmentMapper ; import com.example.demo.pojo.Department ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.PathVariable ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RestController ; @RestController public class DepartmentController { @Autowired private DepartmentMapper departmentMapper ; @GetMapping ( \"/dept/{id}\" ) public Department getDepartment ( @PathVariable ( \"id\" ) Integer id ){ return departmentMapper . getById ( id ); } @GetMapping ( \"/dept\" ) public Department insertDepartment ( Department department ){ departmentMapper . insert ( department ); return department ; } } src/main/java/com/example/demo/DemoApplication.java package com.example.demo ; import org.mybatis.spring.annotation.MapperScan ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; // \u81ea\u52a8\u626b\u63cfmapper\u63a5\u53e3\uff0c\u4e0d\u7528\u6bcf\u4e2amapper\u90fd\u6dfb\u52a0@Mapper\u6ce8\u89e3 @MapperScan ( value = { \"com.example.demo.mapper\" }) @SpringBootApplication public class DemoApplication { public static void main ( String [] args ) { SpringApplication . run ( DemoApplication . class , args ); } }","title":"\u6574\u5408 MyBatis\uff08\u4e8c\uff09-\u6ce8\u89e3\u7248 MyBatis"},{"location":"Java/SpringBoot/\u7b2c\u516d\u7ae0-SpringBoot\u4e0e\u6570\u636e\u8bbf\u95ee/#mybatis-mybatis_1","text":"\u6587\u6863\uff1a https://mybatis.org/mybatis-3/zh/index.html application.yml mybatis : # \u6307\u5b9a\u5168\u5c40\u914d\u7f6e\u6587\u4ef6\u8def\u5f84 config-location : classpath:mybatis/mybatis-config.xml # \u6307\u5b9amapper\u6587\u4ef6\u8def\u5f84 mapper-locations : classpath:mybatis/mapper/*.xml src/main/resources/mybatis/mybatis-config.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <configuration> <settings> <!--\u5f00\u542f\u9a7c\u5cf0\u547d\u540d\u81ea\u52a8\u6620\u5c04--> <setting name= \"mapUnderscoreToCamelCase\" value= \"true\" /> </settings> </configuration> src/main/resources/mybatis/mapper/EmployeeMapper.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <mapper namespace= \"com.example.demo.mapper.EmployeeMapper\" > <select id= \"getById\" resultType= \"com.example.demo.pojo.Employee\" > select * from employee where id = #{id} </select> <insert id= \"insert\" > insert into employee (name, age, sex, birth, department_id) values (#{name}, #{age}, #{sex}, #{birth}, #{department_id}) </insert> <delete id= \"deleteById\" > delete from employee where id = #{id} </delete> </mapper> src/main/java/com/example/demo/mapper/EmployeeMapper.java package com.example.demo.mapper ; import com.example.demo.pojo.Employee ; // @Mapper \u6216@MapperScan \u5c06\u63a5\u53e3\u626b\u63cf\u88c5\u914d\u5230\u5bb9\u5668\u4e2d public interface EmployeeMapper { public Employee getById ( Integer id ); public int deleteById ( Integer id ); public void insert ( Employee employee ); } src/main/java/com/example/demo/controller/DepartmentController.java package com.example.demo.controller ; import com.example.demo.mapper.DepartmentMapper ; import com.example.demo.mapper.EmployeeMapper ; import com.example.demo.pojo.Department ; import com.example.demo.pojo.Employee ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.PathVariable ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RestController ; @RestController public class DepartmentController { @Autowired private EmployeeMapper employeeMapper ; @GetMapping ( \"/getEmp/{id}\" ) public Employee getEmployee ( @PathVariable ( \"id\" ) Integer id ){ return employeeMapper . getById ( id ); } }","title":"\u6574\u5408 MyBatis\uff08\u4e8c\uff09-\u914d\u7f6e\u7248 MyBatis"},{"location":"Java/SpringBoot/\u7b2c\u516d\u7ae0-SpringBoot\u4e0e\u6570\u636e\u8bbf\u95ee/#springdata-jpa","text":"SpringData \u4e3a\u6211\u4eec\u63d0\u4f9b\u4f7f\u7528\u540c\u4e00\u7684 API \u6765\u5bf9\u6570\u636e\u8bbf\u95ee\u5c42\u8fdb\u884c\u64cd\u4f5c JPA: Java Persistence API <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-data-jpa </artifactId> <version> 2.3.1.RELEASE </version> </dependency> \u914d\u7f6e\u6587\u4ef6 spring : jpa : hibernate : # \u66f4\u65b0\u6216\u521b\u5efa\u8868\u7ed3\u6784 ddl-auto : update # \u63a7\u5236\u53f0\u6253\u5370sql show-sql : true JAP\uff1aORM Object Relation Mapping \u7f16\u5199\u5b9e\u4f53\u7c7b\u4e0e\u6570\u636e\u8868\u8fdb\u884c\u6620\u5c04 package com.example.demo.entity ; import javax.persistence.* ; // \u4f7f\u7528JPA\u6ce8\u89e3\u914d\u7f6e\u6620\u5c04\u5173\u7cfb @Entity // \u5b9e\u4f53\u7c7b @Table ( name = \"tbl_user\" ) // \u6307\u5b9a\u8868\u540d public class User { @Id // \u4e3b\u952e @GeneratedValue ( strategy = GenerationType . IDENTITY ) // \u81ea\u589e private Integer id ; @Column ( name = \"last_name\" , length = 50 ) private String lastName ; @Column // \u9ed8\u8ba4\u7c7b\u540d=\u5c5e\u6027\u540d private String email ; } \u521b\u5efa repository package com.example.demo.repository ; import com.example.demo.entity.User ; import org.springframework.data.jpa.repository.JpaRepository ; // \u7ee7\u627fJpaRepository\u6765\u5b8c\u6210\u5bf9\u6570\u636e\u5e93\u7684\u64cd\u4f5c public interface UserRepository extends JpaRepository < User , Integer > { } Controller package com.example.demo.controller ; import com.example.demo.entity.User ; import com.example.demo.repository.UserRepository ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.PathVariable ; import org.springframework.web.bind.annotation.RestController ; import java.util.Optional ; @RestController public class UserController { @Autowired private UserRepository userRepository ; @GetMapping ( \"/user/{id}\" ) public User getUser ( @PathVariable ( \"id\" ) Integer id ){ Optional < User > user = userRepository . findById ( id ); if ( user . isPresent ()){ return user . get (); } else { return null ; } } @GetMapping ( \"/user\" ) public User insertUser ( User user ){ User savedUser = userRepository . save ( user ); return savedUser ; } }","title":"SpringData JPA"},{"location":"Java/SpringBoot/\u7b2c\u5341\u4e00\u7ae0-SpringBoot\u4e0e\u68c0\u7d22/","text":"\u7b2c\u5341\u4e00\u7ae0-SpringBoot \u4e0e\u68c0\u7d22 ElasticSearch \u5206\u5e03\u5f0f\u641c\u7d22\u670d\u52a1,\u5e95\u5c42\u57fa\u4e8e Lucene \u5b89\u88c5 elasticsearch docker search elasticsearch docker pull elasticsearch docker images docker run - e ES_JAVA_OPTS = \"-Xms256m -Xmx256m\" - d - p 9200 : 9200 - p 9300 : 9300 --name ES01 elasticsearch http://localhost:9200/ Elasticsearch \u5feb\u901f\u5165\u95e8 \u6587\u6863\uff1ahttps://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html ES : \u96c6\u7fa4 - \u7d22\u5f15 - \u7c7b\u578b - \u6587\u6863 - \u5c5e\u6027 MySQL : ?- \u6570\u636e\u5e93 - \u8868 - \u8bb0\u5f55 - \u5217 \u4f7f\u7528 PostMan \u53d1\u9001\u8bf7\u6c42 \u8bf7\u6c42\u65b9\u5f0f POST /{index}/{type}/{id} \u57fa\u672c\u64cd\u4f5c # \u5b58\u5165\u6587\u6863 PUT /data/employee/1 { \"name\" : \"Tom\" , \"age\" : 23 } # \u83b7\u53d6\u6587\u6863 GET /data/employee/1 # \u68c0\u67e5\u5b58\u5728 HEAD /data/employee/4 # \u8fd4\u56de\u72b6\u6001\u7801 # \u5b58\u5728\uff1a200 # \u4e0d\u5b58\u5728\uff1a404 # \u5220\u9664 DELETE http://localhost:9200/data/employee/3 # \u66f4\u65b0\u6587\u6863 PUT /data/employee/1 { \"name\" : \"Tom\" , \"age\" : 24 } # \u641c\u7d22\u6570\u636e GET /data/employee/_search # \u4f7f\u7528\u67e5\u8be2\u5b57\u7b26\u4e32 GET /data/employee/_search?q = name:Tom # \u4f7f\u7528\u67e5\u8be2\u4f53 POST /data/employee/_search { \"query\" : { \"match\" : { \"name\" : \"Tom\" } } } # \u590d\u6742\u67e5\u8be2 POST /data/employee/_search { \"query\" : { \"bool\" : { \"must\" : { \"match\" : { \"name\" : \"Tom\" } } , \"filter\" : { \"range\" : { \"age\" : { \"gt\" : 20 } } } } } } # \u77ed\u8bed\u641c\u7d22(\u5fc5\u987b\u5b8c\u5168\u5339\u914d) POST /data/employee/_search { \"query\" : { \"match_phrase\" : { \"name\" : \"Tom Steve\" } } } # \u9ad8\u4eae\u7ed3\u679c \u4f1a\u589e\u52a0em\u6807\u7b7e POST /data/employee/_search { \"query\" : { \"match_phrase\" : { \"name\" : \"Tom Steve\" } } , \"highlight\" : { \"fields\" : { \"name\" : {} } } } SpringBoot \u6574\u5408 Jest \u64cd\u4f5c ES \u4f9d\u8d56 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-data-elasticsearch </artifactId> </dependency> SpringBoot \u652f\u6301\u4e24\u79cd\u6280\u672f\u548c ES \u4ea4\u4e92 Jest \u9ed8\u8ba4\u4e0d\u751f\u6548 io.searchbox.client.JestClient SpringData ElasticSearch \u64cd\u4f5c ES Client ElasticsearchTemplate ElasticSearchRepository 1\u3001\u4f7f\u7528 Jest Github: https://github.com/searchbox-io/Jest <dependency> <groupId> io.searchbox </groupId> <artifactId> jest </artifactId> <version> 5.3.4 </version> </dependency> \u7248\u672c\u9002\u914d Spring Data Release Train Spring Data Elasticsearch Elasticsearch Spring Boot Neumann 4.0.x 7.6.2 2.3.x Moore 3.2.x 6.8.6 2.2.x Lovelace 3.1.x 6.2.2 2.1.x Kay 3.0.x 5.5.0 2.0.x Ingalls 2.1.x 2.4.0 1.5.x \u6765\u6e90\uff1a https://docs.spring.io/spring-data/elasticsearch/docs/4.0.2.RELEASE/reference/html/#preface.versions # \u62c9\u53d6 docker pull elasticsearch:7.6.2 # \u5355\u8282\u70b9\u542f\u52a8 docker run -d \\ -e ES_JAVA_POTS = \"-Xms256m -Xmx256m\" \\ -e \"discovery.type=single-node\" \\ -p 9200 :9200 \\ -p 9300 :9300 \\ --name ES1 \\ elasticsearch:7.6.2 # \u67e5\u770b\u6240\u6709\u5bb9\u5668 docker ps -a # \u5220\u9664 docker rm <\u5bb9\u5668ID> # \u67e5\u770b\u65e5\u5fd7 docker logs -f <\u5bb9\u5668ID> \u67e5\u770b\u6570\u636e http://localhost:9200/data/_search SpringBoot \u64cd\u4f5c elasticsearch \u6587\u6863\uff1a https://github.com/spring-projects/spring-data-elasticsearch package com.example.demo.pojo ; import org.springframework.data.elasticsearch.annotations.Document ; @Document ( indexName = \"data\" ) public class Book { private Integer id ; private String name ; private String author ; public Integer getId () { return id ; } public void setId ( Integer id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public String getAuthor () { return author ; } public void setAuthor ( String author ) { this . author = author ; } @Override public String toString () { return \"Book{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", author='\" + author + '\\'' + '}' ; } } package com.example.demo.repository ; import com.example.demo.pojo.Book ; import org.springframework.data.elasticsearch.repository.ElasticsearchRepository ; import java.util.List ; public interface BookRepository extends ElasticsearchRepository < Book , Integer > { List < Book > findByNameLike ( String name ); } package com.example.demo ; import com.example.demo.pojo.Book ; import com.example.demo.repository.BookRepository ; import org.junit.jupiter.api.Test ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.test.context.SpringBootTest ; import java.util.List ; import java.util.Optional ; @SpringBootTest public class ElasticSearchTest { @Autowired public BookRepository bookRepository ; @Test public void testSave (){ Book book = new Book (); book . setId ( 1 ); book . setName ( \"<tom>\" ); book . setAuthor ( \"Jack\" ); bookRepository . save ( book ); } @Test public void testQuery01 (){ Optional result = bookRepository . findById ( 1 ); if ( result . isPresent ()){ System . out . println ( result . get ()); } } @Test public void testQuery02 (){ List < Book > list = bookRepository . findByNameLike ( \"To\" ); System . out . println ( list ); } } \u63a5\u53e3\u65b9\u6cd5\u547d\u540d https://docs.spring.io/spring-data/elasticsearch/docs/4.0.2.RELEASE/reference/html/#elasticsearch.query-methods.criterions","title":"\u7b2c\u5341\u4e00\u7ae0-SpringBoot \u4e0e\u68c0\u7d22"},{"location":"Java/SpringBoot/\u7b2c\u5341\u4e00\u7ae0-SpringBoot\u4e0e\u68c0\u7d22/#-springboot","text":"ElasticSearch \u5206\u5e03\u5f0f\u641c\u7d22\u670d\u52a1,\u5e95\u5c42\u57fa\u4e8e Lucene \u5b89\u88c5 elasticsearch docker search elasticsearch docker pull elasticsearch docker images docker run - e ES_JAVA_OPTS = \"-Xms256m -Xmx256m\" - d - p 9200 : 9200 - p 9300 : 9300 --name ES01 elasticsearch http://localhost:9200/","title":"\u7b2c\u5341\u4e00\u7ae0-SpringBoot \u4e0e\u68c0\u7d22"},{"location":"Java/SpringBoot/\u7b2c\u5341\u4e00\u7ae0-SpringBoot\u4e0e\u68c0\u7d22/#elasticsearch","text":"\u6587\u6863\uff1ahttps://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html ES : \u96c6\u7fa4 - \u7d22\u5f15 - \u7c7b\u578b - \u6587\u6863 - \u5c5e\u6027 MySQL : ?- \u6570\u636e\u5e93 - \u8868 - \u8bb0\u5f55 - \u5217 \u4f7f\u7528 PostMan \u53d1\u9001\u8bf7\u6c42 \u8bf7\u6c42\u65b9\u5f0f POST /{index}/{type}/{id} \u57fa\u672c\u64cd\u4f5c # \u5b58\u5165\u6587\u6863 PUT /data/employee/1 { \"name\" : \"Tom\" , \"age\" : 23 } # \u83b7\u53d6\u6587\u6863 GET /data/employee/1 # \u68c0\u67e5\u5b58\u5728 HEAD /data/employee/4 # \u8fd4\u56de\u72b6\u6001\u7801 # \u5b58\u5728\uff1a200 # \u4e0d\u5b58\u5728\uff1a404 # \u5220\u9664 DELETE http://localhost:9200/data/employee/3 # \u66f4\u65b0\u6587\u6863 PUT /data/employee/1 { \"name\" : \"Tom\" , \"age\" : 24 } # \u641c\u7d22\u6570\u636e GET /data/employee/_search # \u4f7f\u7528\u67e5\u8be2\u5b57\u7b26\u4e32 GET /data/employee/_search?q = name:Tom # \u4f7f\u7528\u67e5\u8be2\u4f53 POST /data/employee/_search { \"query\" : { \"match\" : { \"name\" : \"Tom\" } } } # \u590d\u6742\u67e5\u8be2 POST /data/employee/_search { \"query\" : { \"bool\" : { \"must\" : { \"match\" : { \"name\" : \"Tom\" } } , \"filter\" : { \"range\" : { \"age\" : { \"gt\" : 20 } } } } } } # \u77ed\u8bed\u641c\u7d22(\u5fc5\u987b\u5b8c\u5168\u5339\u914d) POST /data/employee/_search { \"query\" : { \"match_phrase\" : { \"name\" : \"Tom Steve\" } } } # \u9ad8\u4eae\u7ed3\u679c \u4f1a\u589e\u52a0em\u6807\u7b7e POST /data/employee/_search { \"query\" : { \"match_phrase\" : { \"name\" : \"Tom Steve\" } } , \"highlight\" : { \"fields\" : { \"name\" : {} } } }","title":"Elasticsearch \u5feb\u901f\u5165\u95e8"},{"location":"Java/SpringBoot/\u7b2c\u5341\u4e00\u7ae0-SpringBoot\u4e0e\u68c0\u7d22/#springboot-jest-es","text":"\u4f9d\u8d56 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-data-elasticsearch </artifactId> </dependency> SpringBoot \u652f\u6301\u4e24\u79cd\u6280\u672f\u548c ES \u4ea4\u4e92 Jest \u9ed8\u8ba4\u4e0d\u751f\u6548 io.searchbox.client.JestClient SpringData ElasticSearch \u64cd\u4f5c ES Client ElasticsearchTemplate ElasticSearchRepository 1\u3001\u4f7f\u7528 Jest Github: https://github.com/searchbox-io/Jest <dependency> <groupId> io.searchbox </groupId> <artifactId> jest </artifactId> <version> 5.3.4 </version> </dependency> \u7248\u672c\u9002\u914d Spring Data Release Train Spring Data Elasticsearch Elasticsearch Spring Boot Neumann 4.0.x 7.6.2 2.3.x Moore 3.2.x 6.8.6 2.2.x Lovelace 3.1.x 6.2.2 2.1.x Kay 3.0.x 5.5.0 2.0.x Ingalls 2.1.x 2.4.0 1.5.x \u6765\u6e90\uff1a https://docs.spring.io/spring-data/elasticsearch/docs/4.0.2.RELEASE/reference/html/#preface.versions # \u62c9\u53d6 docker pull elasticsearch:7.6.2 # \u5355\u8282\u70b9\u542f\u52a8 docker run -d \\ -e ES_JAVA_POTS = \"-Xms256m -Xmx256m\" \\ -e \"discovery.type=single-node\" \\ -p 9200 :9200 \\ -p 9300 :9300 \\ --name ES1 \\ elasticsearch:7.6.2 # \u67e5\u770b\u6240\u6709\u5bb9\u5668 docker ps -a # \u5220\u9664 docker rm <\u5bb9\u5668ID> # \u67e5\u770b\u65e5\u5fd7 docker logs -f <\u5bb9\u5668ID> \u67e5\u770b\u6570\u636e http://localhost:9200/data/_search SpringBoot \u64cd\u4f5c elasticsearch \u6587\u6863\uff1a https://github.com/spring-projects/spring-data-elasticsearch package com.example.demo.pojo ; import org.springframework.data.elasticsearch.annotations.Document ; @Document ( indexName = \"data\" ) public class Book { private Integer id ; private String name ; private String author ; public Integer getId () { return id ; } public void setId ( Integer id ) { this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public String getAuthor () { return author ; } public void setAuthor ( String author ) { this . author = author ; } @Override public String toString () { return \"Book{\" + \"id=\" + id + \", name='\" + name + '\\'' + \", author='\" + author + '\\'' + '}' ; } } package com.example.demo.repository ; import com.example.demo.pojo.Book ; import org.springframework.data.elasticsearch.repository.ElasticsearchRepository ; import java.util.List ; public interface BookRepository extends ElasticsearchRepository < Book , Integer > { List < Book > findByNameLike ( String name ); } package com.example.demo ; import com.example.demo.pojo.Book ; import com.example.demo.repository.BookRepository ; import org.junit.jupiter.api.Test ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.test.context.SpringBootTest ; import java.util.List ; import java.util.Optional ; @SpringBootTest public class ElasticSearchTest { @Autowired public BookRepository bookRepository ; @Test public void testSave (){ Book book = new Book (); book . setId ( 1 ); book . setName ( \"<tom>\" ); book . setAuthor ( \"Jack\" ); bookRepository . save ( book ); } @Test public void testQuery01 (){ Optional result = bookRepository . findById ( 1 ); if ( result . isPresent ()){ System . out . println ( result . get ()); } } @Test public void testQuery02 (){ List < Book > list = bookRepository . findByNameLike ( \"To\" ); System . out . println ( list ); } } \u63a5\u53e3\u65b9\u6cd5\u547d\u540d https://docs.spring.io/spring-data/elasticsearch/docs/4.0.2.RELEASE/reference/html/#elasticsearch.query-methods.criterions","title":"SpringBoot \u6574\u5408 Jest \u64cd\u4f5c ES"},{"location":"Java/SpringBoot/\u7b2c\u5341\u4e09\u7ae0-SpringBoot\u4e0e\u5b89\u5168/","text":"\u7b2c\u5341\u4e09\u7ae0-SpringBoot \u4e0e\u5b89\u5168 \u5b89\u5168\u6846\u67b6 shiro Spring Security \u8ba4\u8bc1 Authentication \u5efa\u7acb\u7528\u6237\uff0c\u8bc1\u660e \u6388\u6743 Authorization \u8bbf\u95ee\u6743\u9650 \u767b\u5f55&\u8ba4\u8bc1&\u6388\u6743 \u4f9d\u8d56 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-security </artifactId> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> </dependency> \u63a7\u5236\u5668 package com.example.demo.controller ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.RestController ; @RestController public class HelloController { @GetMapping ( \"/hello\" ) public String hello () { return \"hello\" ; } } \u8bbf\u95eehttp://localhost:8080/hello \u6ca1\u6709\u767b\u5f55\u4f1a\u8df3\u8f6c\u5230 /login \u7528\u6237\u540d\uff1a user \u5bc6\u7801\uff1a\u63a7\u5236\u53f0 Using generated security password \u81ea\u5b9a\u4e49\u7528\u6237\u540d\u5bc6\u7801 application.properties #\u81ea\u5b9a\u4e49\u7528\u6237\u540d\u548c\u5bc6\u7801 spring.security.user.name = user spring.security.user.password = 1234567 \u914d\u7f6e\u8ba4\u8bc1\u548c\u6388\u6743 package com.example.demo.config ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder ; import org.springframework.security.config.annotation.web.builders.HttpSecurity ; import org.springframework.security.config.annotation.web.builders.WebSecurity ; import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter ; import org.springframework.security.core.Authentication ; import org.springframework.security.core.AuthenticationException ; import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder ; import org.springframework.security.crypto.password.PasswordEncoder ; import org.springframework.security.web.authentication.AuthenticationFailureHandler ; import org.springframework.security.web.authentication.AuthenticationSuccessHandler ; import org.springframework.security.web.authentication.logout.LogoutSuccessHandler ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; @Configuration public class SecurityConfig extends WebSecurityConfigurerAdapter { @Override protected void configure ( AuthenticationManagerBuilder auth ) throws Exception { //\u4e0b\u9762\u8fd9\u4e24\u884c\u914d\u7f6e\u8868\u793a\u5728\u5185\u5b58\u4e2d\u914d\u7f6e\u4e86\u4e24\u4e2a\u7528\u6237 auth . inMemoryAuthentication () . withUser ( \"admin\" ). roles ( \"admin\" ). password ( \"$2a$10$7yOhpFTiwfkZaLRaArPJDu.Si4oWwQKmPIcnzPOOgBwstxoEh4gaK\" ) . and () . withUser ( \"user\" ). roles ( \"user\" ). password ( \"$2a$10$YjknRoz.3BfTOVQZbcxgN.v5w.yLrOGY8glV.IvqSBUVy29C..vU6\" ); } @Bean PasswordEncoder passwordEncoder () { return new BCryptPasswordEncoder (); } @Override protected void configure ( HttpSecurity http ) throws Exception { http . authorizeRequests () //\u5f00\u542f\u767b\u5f55\u914d\u7f6e . antMatchers ( \"/hello\" ). hasRole ( \"admin\" ) //\u8868\u793a\u8bbf\u95ee /hello \u8fd9\u4e2a\u63a5\u53e3\uff0c\u9700\u8981\u5177\u5907 admin \u8fd9\u4e2a\u89d2\u8272 . anyRequest (). authenticated () //\u8868\u793a\u5269\u4f59\u7684\u5176\u4ed6\u63a5\u53e3\uff0c\u767b\u5f55\u4e4b\u540e\u5c31\u80fd\u8bbf\u95ee . and () . formLogin () //\u5b9a\u4e49\u767b\u5f55\u9875\u9762\uff0c\u672a\u767b\u5f55\u65f6\uff0c\u8bbf\u95ee\u4e00\u4e2a\u9700\u8981\u767b\u5f55\u4e4b\u540e\u624d\u80fd\u8bbf\u95ee\u7684\u63a5\u53e3\uff0c\u4f1a\u81ea\u52a8\u8df3\u8f6c\u5230\u8be5\u9875\u9762 . loginPage ( \"/login\" ) // \u767b\u5f55\u5904\u7406\u63a5\u53e3 . loginProcessingUrl ( \"/doLogin\" ) // \u5b9a\u4e49\u767b\u5f55\u65f6\uff0c\u7528\u6237\u540d\u7684 key\uff0c\u9ed8\u8ba4\u4e3a username . usernameParameter ( \"username\" ) // \u5b9a\u4e49\u767b\u5f55\u65f6\uff0c\u7528\u6237\u5bc6\u7801\u7684 key\uff0c\u9ed8\u8ba4\u4e3a password . passwordParameter ( \"password\" ) //\u767b\u5f55\u6210\u529f\u7684\u5904\u7406\u5668 . successHandler ( new AuthenticationSuccessHandler () { @Override public void onAuthenticationSuccess ( HttpServletRequest req , HttpServletResponse resp , Authentication authentication ) throws IOException , ServletException { resp . setContentType ( \"application/json;charset=utf-8\" ); PrintWriter out = resp . getWriter (); out . write ( \"success\" ); out . flush (); } }) . failureHandler ( new AuthenticationFailureHandler () { @Override public void onAuthenticationFailure ( HttpServletRequest req , HttpServletResponse resp , AuthenticationException exception ) throws IOException , ServletException { resp . setContentType ( \"application/json;charset=utf-8\" ); PrintWriter out = resp . getWriter (); out . write ( \"fail\" ); out . flush (); } }) . permitAll () //\u548c\u8868\u5355\u767b\u5f55\u76f8\u5173\u7684\u63a5\u53e3\u7edf\u7edf\u90fd\u76f4\u63a5\u901a\u8fc7 . and () . logout () . logoutUrl ( \"/logout\" ) . logoutSuccessHandler ( new LogoutSuccessHandler () { @Override public void onLogoutSuccess ( HttpServletRequest req , HttpServletResponse resp , Authentication authentication ) throws IOException , ServletException { resp . setContentType ( \"application/json;charset=utf-8\" ); PrintWriter out = resp . getWriter (); out . write ( \"logout success\" ); out . flush (); } }) . permitAll () . and () . httpBasic () . and () . csrf (). disable (); } // \u5ffd\u7565\u62e6\u622a @Override public void configure ( WebSecurity web ) throws Exception { web . ignoring (). antMatchers ( \"/vercode\" ); } } Bcrypt \u5bc6\u7801\u9a8c\u8bc1\u6d4b\u8bd5 package com.example.demo ; import org.junit.jupiter.api.Test ; import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder ; class SecurityDemoApplicationTests { @Test void contextLoads () { String rawPassword = \"123456\" ; // \u52a0\u5bc6 BCryptPasswordEncoder encoder = new BCryptPasswordEncoder (); String password = encoder . encode ( rawPassword ); System . out . println ( password ); // \u6bd4\u5bf9 String encodePassword = \"$2a$10$7yOhpFTiwfkZaLRaArPJDu.Si4oWwQKmPIcnzPOOgBwstxoEh4gaK\" ; boolean ret = encoder . matches ( rawPassword , encodePassword ); System . out . println ( ret ); } } \u5e38\u7528\u914d\u7f6e // \u5b9a\u5236\u8bf7\u6c42\u7684\u6388\u6743\u89c4\u5219 http . authorizeRequests () . antMatchers ( \"/\" ). permitAll () . antMatchers ( \"/vip1/**\" ). hasRole ( \"VIP1\" ) . antMatchers ( \"/vip2/**\" ). hasRole ( \"VIP2\" ) . antMatchers ( \"/vip3/**\" ). hasRole ( \"VIP3\" ); // \u5f00\u542f\u767b\u5f55\u529f\u80fd /login GET \u53bb\u767b\u5f55\u9875\uff0cPOST \u63d0\u4ea4\u767b\u5f55\u6570\u636e http . formLogin () // \u81ea\u5b9a\u4e49\u767b\u5f55\u9875 http . formLogin (). loginPage ( \"/user-login\" ); // \u81ea\u5b9a\u4e49\u767b\u5f55\u8bf7\u6c42\u53c2\u6570 http . formLogin () . usernameParameter ( \"username\" ) . passwordParameter ( \"password\" ) . loginPage ( \"/user-login\" ); // \u5f00\u542f\u6ce8\u9500\u529f\u80fd http . logout (). logoutSuccessUrl ( \"/\" ) // \u8bb0\u4f4f\u6211,\u5c06\u7528\u6237\u4fe1\u606f\u4fdd\u5b58\u5728cookie\u4e2d http . remenberMe ();","title":"\u7b2c\u5341\u4e09\u7ae0-SpringBoot \u4e0e\u5b89\u5168"},{"location":"Java/SpringBoot/\u7b2c\u5341\u4e09\u7ae0-SpringBoot\u4e0e\u5b89\u5168/#-springboot","text":"\u5b89\u5168\u6846\u67b6 shiro Spring Security \u8ba4\u8bc1 Authentication \u5efa\u7acb\u7528\u6237\uff0c\u8bc1\u660e \u6388\u6743 Authorization \u8bbf\u95ee\u6743\u9650","title":"\u7b2c\u5341\u4e09\u7ae0-SpringBoot \u4e0e\u5b89\u5168"},{"location":"Java/SpringBoot/\u7b2c\u5341\u4e09\u7ae0-SpringBoot\u4e0e\u5b89\u5168/#_1","text":"\u4f9d\u8d56 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-security </artifactId> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> </dependency> \u63a7\u5236\u5668 package com.example.demo.controller ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.RestController ; @RestController public class HelloController { @GetMapping ( \"/hello\" ) public String hello () { return \"hello\" ; } } \u8bbf\u95eehttp://localhost:8080/hello \u6ca1\u6709\u767b\u5f55\u4f1a\u8df3\u8f6c\u5230 /login \u7528\u6237\u540d\uff1a user \u5bc6\u7801\uff1a\u63a7\u5236\u53f0 Using generated security password \u81ea\u5b9a\u4e49\u7528\u6237\u540d\u5bc6\u7801 application.properties #\u81ea\u5b9a\u4e49\u7528\u6237\u540d\u548c\u5bc6\u7801 spring.security.user.name = user spring.security.user.password = 1234567 \u914d\u7f6e\u8ba4\u8bc1\u548c\u6388\u6743 package com.example.demo.config ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder ; import org.springframework.security.config.annotation.web.builders.HttpSecurity ; import org.springframework.security.config.annotation.web.builders.WebSecurity ; import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter ; import org.springframework.security.core.Authentication ; import org.springframework.security.core.AuthenticationException ; import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder ; import org.springframework.security.crypto.password.PasswordEncoder ; import org.springframework.security.web.authentication.AuthenticationFailureHandler ; import org.springframework.security.web.authentication.AuthenticationSuccessHandler ; import org.springframework.security.web.authentication.logout.LogoutSuccessHandler ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; import java.io.PrintWriter ; @Configuration public class SecurityConfig extends WebSecurityConfigurerAdapter { @Override protected void configure ( AuthenticationManagerBuilder auth ) throws Exception { //\u4e0b\u9762\u8fd9\u4e24\u884c\u914d\u7f6e\u8868\u793a\u5728\u5185\u5b58\u4e2d\u914d\u7f6e\u4e86\u4e24\u4e2a\u7528\u6237 auth . inMemoryAuthentication () . withUser ( \"admin\" ). roles ( \"admin\" ). password ( \"$2a$10$7yOhpFTiwfkZaLRaArPJDu.Si4oWwQKmPIcnzPOOgBwstxoEh4gaK\" ) . and () . withUser ( \"user\" ). roles ( \"user\" ). password ( \"$2a$10$YjknRoz.3BfTOVQZbcxgN.v5w.yLrOGY8glV.IvqSBUVy29C..vU6\" ); } @Bean PasswordEncoder passwordEncoder () { return new BCryptPasswordEncoder (); } @Override protected void configure ( HttpSecurity http ) throws Exception { http . authorizeRequests () //\u5f00\u542f\u767b\u5f55\u914d\u7f6e . antMatchers ( \"/hello\" ). hasRole ( \"admin\" ) //\u8868\u793a\u8bbf\u95ee /hello \u8fd9\u4e2a\u63a5\u53e3\uff0c\u9700\u8981\u5177\u5907 admin \u8fd9\u4e2a\u89d2\u8272 . anyRequest (). authenticated () //\u8868\u793a\u5269\u4f59\u7684\u5176\u4ed6\u63a5\u53e3\uff0c\u767b\u5f55\u4e4b\u540e\u5c31\u80fd\u8bbf\u95ee . and () . formLogin () //\u5b9a\u4e49\u767b\u5f55\u9875\u9762\uff0c\u672a\u767b\u5f55\u65f6\uff0c\u8bbf\u95ee\u4e00\u4e2a\u9700\u8981\u767b\u5f55\u4e4b\u540e\u624d\u80fd\u8bbf\u95ee\u7684\u63a5\u53e3\uff0c\u4f1a\u81ea\u52a8\u8df3\u8f6c\u5230\u8be5\u9875\u9762 . loginPage ( \"/login\" ) // \u767b\u5f55\u5904\u7406\u63a5\u53e3 . loginProcessingUrl ( \"/doLogin\" ) // \u5b9a\u4e49\u767b\u5f55\u65f6\uff0c\u7528\u6237\u540d\u7684 key\uff0c\u9ed8\u8ba4\u4e3a username . usernameParameter ( \"username\" ) // \u5b9a\u4e49\u767b\u5f55\u65f6\uff0c\u7528\u6237\u5bc6\u7801\u7684 key\uff0c\u9ed8\u8ba4\u4e3a password . passwordParameter ( \"password\" ) //\u767b\u5f55\u6210\u529f\u7684\u5904\u7406\u5668 . successHandler ( new AuthenticationSuccessHandler () { @Override public void onAuthenticationSuccess ( HttpServletRequest req , HttpServletResponse resp , Authentication authentication ) throws IOException , ServletException { resp . setContentType ( \"application/json;charset=utf-8\" ); PrintWriter out = resp . getWriter (); out . write ( \"success\" ); out . flush (); } }) . failureHandler ( new AuthenticationFailureHandler () { @Override public void onAuthenticationFailure ( HttpServletRequest req , HttpServletResponse resp , AuthenticationException exception ) throws IOException , ServletException { resp . setContentType ( \"application/json;charset=utf-8\" ); PrintWriter out = resp . getWriter (); out . write ( \"fail\" ); out . flush (); } }) . permitAll () //\u548c\u8868\u5355\u767b\u5f55\u76f8\u5173\u7684\u63a5\u53e3\u7edf\u7edf\u90fd\u76f4\u63a5\u901a\u8fc7 . and () . logout () . logoutUrl ( \"/logout\" ) . logoutSuccessHandler ( new LogoutSuccessHandler () { @Override public void onLogoutSuccess ( HttpServletRequest req , HttpServletResponse resp , Authentication authentication ) throws IOException , ServletException { resp . setContentType ( \"application/json;charset=utf-8\" ); PrintWriter out = resp . getWriter (); out . write ( \"logout success\" ); out . flush (); } }) . permitAll () . and () . httpBasic () . and () . csrf (). disable (); } // \u5ffd\u7565\u62e6\u622a @Override public void configure ( WebSecurity web ) throws Exception { web . ignoring (). antMatchers ( \"/vercode\" ); } } Bcrypt \u5bc6\u7801\u9a8c\u8bc1\u6d4b\u8bd5 package com.example.demo ; import org.junit.jupiter.api.Test ; import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder ; class SecurityDemoApplicationTests { @Test void contextLoads () { String rawPassword = \"123456\" ; // \u52a0\u5bc6 BCryptPasswordEncoder encoder = new BCryptPasswordEncoder (); String password = encoder . encode ( rawPassword ); System . out . println ( password ); // \u6bd4\u5bf9 String encodePassword = \"$2a$10$7yOhpFTiwfkZaLRaArPJDu.Si4oWwQKmPIcnzPOOgBwstxoEh4gaK\" ; boolean ret = encoder . matches ( rawPassword , encodePassword ); System . out . println ( ret ); } } \u5e38\u7528\u914d\u7f6e // \u5b9a\u5236\u8bf7\u6c42\u7684\u6388\u6743\u89c4\u5219 http . authorizeRequests () . antMatchers ( \"/\" ). permitAll () . antMatchers ( \"/vip1/**\" ). hasRole ( \"VIP1\" ) . antMatchers ( \"/vip2/**\" ). hasRole ( \"VIP2\" ) . antMatchers ( \"/vip3/**\" ). hasRole ( \"VIP3\" ); // \u5f00\u542f\u767b\u5f55\u529f\u80fd /login GET \u53bb\u767b\u5f55\u9875\uff0cPOST \u63d0\u4ea4\u767b\u5f55\u6570\u636e http . formLogin () // \u81ea\u5b9a\u4e49\u767b\u5f55\u9875 http . formLogin (). loginPage ( \"/user-login\" ); // \u81ea\u5b9a\u4e49\u767b\u5f55\u8bf7\u6c42\u53c2\u6570 http . formLogin () . usernameParameter ( \"username\" ) . passwordParameter ( \"password\" ) . loginPage ( \"/user-login\" ); // \u5f00\u542f\u6ce8\u9500\u529f\u80fd http . logout (). logoutSuccessUrl ( \"/\" ) // \u8bb0\u4f4f\u6211,\u5c06\u7528\u6237\u4fe1\u606f\u4fdd\u5b58\u5728cookie\u4e2d http . remenberMe ();","title":"\u767b\u5f55&amp;\u8ba4\u8bc1&amp;\u6388\u6743"},{"location":"Java/SpringBoot/\u7b2c\u5341\u4e8c\u7ae0-SpringBoot\u4e0e\u4efb\u52a1/","text":"\u7b2c\u5341\u4e8c\u7ae0-SpringBoot \u4e0e\u4efb\u52a1 \u5f02\u6b65\u4efb\u52a1 package com.example.demo ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; import org.springframework.scheduling.annotation.EnableAsync ; @SpringBootApplication @EnableAsync // \u5f00\u542f\u5f02\u6b65\u4efb\u52a1 public class DemoApplication { public static void main ( String [] args ) { SpringApplication . run ( DemoApplication . class , args ); } } package com.example.demo.service ; import org.springframework.scheduling.annotation.Async ; import org.springframework.stereotype.Service ; @Service public class AsyncService { @Async // \u5f02\u6b65\u4efb\u52a1 public void task (){ try { Thread . sleep ( 3000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( \"task success\" ); } } package com.example.demo.controller ; import com.example.demo.service.AsyncService ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.RestController ; @RestController public class AsyncController { @Autowired AsyncService asyncService ; @GetMapping ( \"/task\" ) public String task (){ asyncService . task (); return \"success\" ; } } \u5b9a\u65f6\u4efb\u52a1 @EnableScheduling @Scheduled Cron \u8868\u8fbe\u5f0f \u5b57\u6bb5 \u5141\u8bb8\u503c \u5141\u8bb8\u7684\u5b57\u7b26 \u79d2 0-59 ,-*/ \u5206 0-59 ,-*/ \u65f6 0-23 ,-*/ \u65e5 0-31 ,-*/?LWC \u6708 0-12 ,-*/ \u5468 0-7 \u6216 SUN-SAT 0,7=SUN ,-*/?LC# \u7279\u6b8a\u5b57\u7b26\u542b\u4e49 , \u679a\u4e3e - \u533a\u95f4 * \u4efb\u610f / \u6b65\u957f ? \u65e5 / \u661f\u671f\u51b2\u7a81\u5339\u914d L \u6700\u540e W \u5de5\u4f5c\u65e5 C \u548c Calendar\u8054\u7cfb\u540e\u8ba1\u7b97\u8fc7\u7684\u503c # \u661f\u671f\uff0c 4 # 2 \u7b2c 2 \u4e2a\u661f\u671f\u56db Cron \u793a\u4f8b # \u79d2 \u5206 \u65f6 \u65e5 \u6708 \u5468 0 0 /5 14 ,18 * * ? # \u6bcf\u592914\u70b9\u548c18\u70b9\u6574\uff0c\u6bcf\u96945\u5206\u949f\u6267\u884c\u4e00\u6b21 0 15 10 \uff1f * 1 -6 # \u6bcf\u4e2a\u6708\u7684\u5468\u4e00\u81f3\u5468\u516d\uff0c10:15\u6267\u884c\u4e00\u6b21 0 0 2 ? * 6L # \u6bcf\u4e2a\u6708\u7684\u6700\u540e\u4e00\u4e2a\u5468\u516d\u51cc\u66682\u70b9\u6267\u884c\u4e00\u6b21 0 0 2 LW * ? # \u6bcf\u9694\u6708\u7684\u6700\u540e\u4e00\u4e2a\u5de5\u4f5c\u65e5\u51cc\u66682\u70b9\u6267\u884c\u4e00\u6b21 0 0 2 -4 ? * 1 #1 # \u6bcf\u4e2a\u6708\u7684\u7b2c\u4e00\u4e2a\u5468\u4e00\u51cc\u66682\u70b9\u52304\u70b9\uff0c\u6bcf\u4e2a\u6574\u70b9\u6267\u884c\u4e00\u6b21 @EnableScheduling // \u5f00\u542f\u5b9a\u65f6\u4efb\u52a1 @SpringBootApplication public class DemoApplication { public static void main ( String [] args ) { SpringApplication . run ( DemoApplication . class , args ); } } package com.example.demo.service ; import org.springframework.scheduling.annotation.Scheduled ; import org.springframework.stereotype.Service ; @Service public class ScheduleService { /** * second, minute, hour, day of month, month, day of week. */ @Scheduled ( cron = \"0 * * * * MON-FRI\" ) public void task (){ System . out . println ( \"run task\" ); } } \u53d1\u9001\u90ae\u4ef6 \u589e\u52a0\u4f9d\u8d56 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-mail </artifactId> </dependency> \u914d\u7f6e\u8d26\u53f7\u4fe1\u606f spring : # 163\u90ae\u7bb1\u53d1\u9001\u90ae\u4ef6 mail : host : smtp.163.com port : 25 username : xxx@163.com password : xxx \u53d1\u9001\u90ae\u4ef6 package com.example.demo ; import org.junit.jupiter.api.Test ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.test.context.SpringBootTest ; import org.springframework.mail.SimpleMailMessage ; import org.springframework.mail.javamail.JavaMailSenderImpl ; import org.springframework.mail.javamail.MimeMessageHelper ; import javax.mail.MessagingException ; import javax.mail.internet.MimeMessage ; import java.io.File ; @SpringBootTest public class MailTest { @Autowired private JavaMailSenderImpl mailSender ; // \u53d1\u9001\u7b80\u5355\u90ae\u4ef6 @Test public void testSimpleMail (){ SimpleMailMessage message = new SimpleMailMessage (); message . setSubject ( \"\u90ae\u4ef6\u4e3b\u9898\" ); message . setText ( \"\u90ae\u4ef6\u5185\u5bb9\" ); message . setFrom ( \"xxx@163.com\" ); message . setTo ( \"xxx@qq.com\" ); mailSender . send ( message ); } // \u53d1\u9001\u590d\u6742\u90ae\u4ef6 @Test public void testMail () throws MessagingException { MimeMessage mimeMessage = mailSender . createMimeMessage (); MimeMessageHelper helper = new MimeMessageHelper ( mimeMessage , true ); helper . setSubject ( \"\u90ae\u4ef6\u4e3b\u9898\" ); helper . setText ( \"<span style='color:red;'>\u90ae\u4ef6\u5185\u5bb9</span>\" , true ); helper . setFrom ( \"xxx@163.com\" ); helper . setTo ( \"xxx@qq.com\" ); // \u4e0a\u4f20\u6587\u4ef6 helper . addAttachment ( \"timg.jpeg\" , new File ( \"timg.jpeg\" )); mailSender . send ( mimeMessage ); } }","title":"\u7b2c\u5341\u4e8c\u7ae0-SpringBoot \u4e0e\u4efb\u52a1"},{"location":"Java/SpringBoot/\u7b2c\u5341\u4e8c\u7ae0-SpringBoot\u4e0e\u4efb\u52a1/#-springboot","text":"","title":"\u7b2c\u5341\u4e8c\u7ae0-SpringBoot \u4e0e\u4efb\u52a1"},{"location":"Java/SpringBoot/\u7b2c\u5341\u4e8c\u7ae0-SpringBoot\u4e0e\u4efb\u52a1/#_1","text":"package com.example.demo ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; import org.springframework.scheduling.annotation.EnableAsync ; @SpringBootApplication @EnableAsync // \u5f00\u542f\u5f02\u6b65\u4efb\u52a1 public class DemoApplication { public static void main ( String [] args ) { SpringApplication . run ( DemoApplication . class , args ); } } package com.example.demo.service ; import org.springframework.scheduling.annotation.Async ; import org.springframework.stereotype.Service ; @Service public class AsyncService { @Async // \u5f02\u6b65\u4efb\u52a1 public void task (){ try { Thread . sleep ( 3000 ); } catch ( InterruptedException e ) { e . printStackTrace (); } System . out . println ( \"task success\" ); } } package com.example.demo.controller ; import com.example.demo.service.AsyncService ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.RestController ; @RestController public class AsyncController { @Autowired AsyncService asyncService ; @GetMapping ( \"/task\" ) public String task (){ asyncService . task (); return \"success\" ; } }","title":"\u5f02\u6b65\u4efb\u52a1"},{"location":"Java/SpringBoot/\u7b2c\u5341\u4e8c\u7ae0-SpringBoot\u4e0e\u4efb\u52a1/#_2","text":"@EnableScheduling @Scheduled Cron \u8868\u8fbe\u5f0f \u5b57\u6bb5 \u5141\u8bb8\u503c \u5141\u8bb8\u7684\u5b57\u7b26 \u79d2 0-59 ,-*/ \u5206 0-59 ,-*/ \u65f6 0-23 ,-*/ \u65e5 0-31 ,-*/?LWC \u6708 0-12 ,-*/ \u5468 0-7 \u6216 SUN-SAT 0,7=SUN ,-*/?LC# \u7279\u6b8a\u5b57\u7b26\u542b\u4e49 , \u679a\u4e3e - \u533a\u95f4 * \u4efb\u610f / \u6b65\u957f ? \u65e5 / \u661f\u671f\u51b2\u7a81\u5339\u914d L \u6700\u540e W \u5de5\u4f5c\u65e5 C \u548c Calendar\u8054\u7cfb\u540e\u8ba1\u7b97\u8fc7\u7684\u503c # \u661f\u671f\uff0c 4 # 2 \u7b2c 2 \u4e2a\u661f\u671f\u56db Cron \u793a\u4f8b # \u79d2 \u5206 \u65f6 \u65e5 \u6708 \u5468 0 0 /5 14 ,18 * * ? # \u6bcf\u592914\u70b9\u548c18\u70b9\u6574\uff0c\u6bcf\u96945\u5206\u949f\u6267\u884c\u4e00\u6b21 0 15 10 \uff1f * 1 -6 # \u6bcf\u4e2a\u6708\u7684\u5468\u4e00\u81f3\u5468\u516d\uff0c10:15\u6267\u884c\u4e00\u6b21 0 0 2 ? * 6L # \u6bcf\u4e2a\u6708\u7684\u6700\u540e\u4e00\u4e2a\u5468\u516d\u51cc\u66682\u70b9\u6267\u884c\u4e00\u6b21 0 0 2 LW * ? # \u6bcf\u9694\u6708\u7684\u6700\u540e\u4e00\u4e2a\u5de5\u4f5c\u65e5\u51cc\u66682\u70b9\u6267\u884c\u4e00\u6b21 0 0 2 -4 ? * 1 #1 # \u6bcf\u4e2a\u6708\u7684\u7b2c\u4e00\u4e2a\u5468\u4e00\u51cc\u66682\u70b9\u52304\u70b9\uff0c\u6bcf\u4e2a\u6574\u70b9\u6267\u884c\u4e00\u6b21 @EnableScheduling // \u5f00\u542f\u5b9a\u65f6\u4efb\u52a1 @SpringBootApplication public class DemoApplication { public static void main ( String [] args ) { SpringApplication . run ( DemoApplication . class , args ); } } package com.example.demo.service ; import org.springframework.scheduling.annotation.Scheduled ; import org.springframework.stereotype.Service ; @Service public class ScheduleService { /** * second, minute, hour, day of month, month, day of week. */ @Scheduled ( cron = \"0 * * * * MON-FRI\" ) public void task (){ System . out . println ( \"run task\" ); } }","title":"\u5b9a\u65f6\u4efb\u52a1"},{"location":"Java/SpringBoot/\u7b2c\u5341\u4e8c\u7ae0-SpringBoot\u4e0e\u4efb\u52a1/#_3","text":"\u589e\u52a0\u4f9d\u8d56 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-mail </artifactId> </dependency> \u914d\u7f6e\u8d26\u53f7\u4fe1\u606f spring : # 163\u90ae\u7bb1\u53d1\u9001\u90ae\u4ef6 mail : host : smtp.163.com port : 25 username : xxx@163.com password : xxx \u53d1\u9001\u90ae\u4ef6 package com.example.demo ; import org.junit.jupiter.api.Test ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.test.context.SpringBootTest ; import org.springframework.mail.SimpleMailMessage ; import org.springframework.mail.javamail.JavaMailSenderImpl ; import org.springframework.mail.javamail.MimeMessageHelper ; import javax.mail.MessagingException ; import javax.mail.internet.MimeMessage ; import java.io.File ; @SpringBootTest public class MailTest { @Autowired private JavaMailSenderImpl mailSender ; // \u53d1\u9001\u7b80\u5355\u90ae\u4ef6 @Test public void testSimpleMail (){ SimpleMailMessage message = new SimpleMailMessage (); message . setSubject ( \"\u90ae\u4ef6\u4e3b\u9898\" ); message . setText ( \"\u90ae\u4ef6\u5185\u5bb9\" ); message . setFrom ( \"xxx@163.com\" ); message . setTo ( \"xxx@qq.com\" ); mailSender . send ( message ); } // \u53d1\u9001\u590d\u6742\u90ae\u4ef6 @Test public void testMail () throws MessagingException { MimeMessage mimeMessage = mailSender . createMimeMessage (); MimeMessageHelper helper = new MimeMessageHelper ( mimeMessage , true ); helper . setSubject ( \"\u90ae\u4ef6\u4e3b\u9898\" ); helper . setText ( \"<span style='color:red;'>\u90ae\u4ef6\u5185\u5bb9</span>\" , true ); helper . setFrom ( \"xxx@163.com\" ); helper . setTo ( \"xxx@qq.com\" ); // \u4e0a\u4f20\u6587\u4ef6 helper . addAttachment ( \"timg.jpeg\" , new File ( \"timg.jpeg\" )); mailSender . send ( mimeMessage ); } }","title":"\u53d1\u9001\u90ae\u4ef6"},{"location":"Java/SpringBoot/\u7b2c\u5341\u4e94\u7ae0-SpringBoot\u4e0e\u90e8\u7f72/","text":"\u7b2c\u5341\u4e94\u7ae0-SpringBoot \u4e0e\u90e8\u7f72 \u65b9\u5f0f\u4e00\uff1aspring-loaded -javaagent:springloaded.jar -noverify \u65b9\u5f0f\u4e8c\uff1aJRebel \u6536\u8d39 \u65b9\u5f0f\u4e09\uff1aspringboot devtools \u4f9d\u8d56 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-devtools </artifactId> <optional> true </optional> </dependency> \u4fdd\u5b58\u540e\u9700\u8981\u91cd\u65b0\u7f16\u8bd1","title":"\u7b2c\u5341\u4e94\u7ae0-SpringBoot \u4e0e\u90e8\u7f72"},{"location":"Java/SpringBoot/\u7b2c\u5341\u4e94\u7ae0-SpringBoot\u4e0e\u90e8\u7f72/#-springboot","text":"\u65b9\u5f0f\u4e00\uff1aspring-loaded -javaagent:springloaded.jar -noverify \u65b9\u5f0f\u4e8c\uff1aJRebel \u6536\u8d39 \u65b9\u5f0f\u4e09\uff1aspringboot devtools \u4f9d\u8d56 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-devtools </artifactId> <optional> true </optional> </dependency> \u4fdd\u5b58\u540e\u9700\u8981\u91cd\u65b0\u7f16\u8bd1","title":"\u7b2c\u5341\u4e94\u7ae0-SpringBoot \u4e0e\u90e8\u7f72"},{"location":"Java/SpringBoot/\u7b2c\u5341\u516d\u7ae0-SpringBoot\u4e0e\u76d1\u63a7\u7ba1\u7406/","text":"\u7b2c\u5341\u516d\u7ae0-SpringBoot \u4e0e\u76d1\u63a7\u7ba1\u7406 \u76d1\u7ba1\u7aef\u70b9\u6d4b\u8bd5 spring-boot-starter-actuator \u751f\u4ea7\u73af\u5883\u4e0b\u7684\u5e94\u7528\u76d1\u63a7\u548c\u7ba1\u7406\u529f\u80fd \u7aef\u70b9\u540d \u63cf\u8ff0 autoconfig \u81ea\u52a8\u914d\u7f6e\u4fe1\u606f auditevents \u5ba1\u8ba1\u4e8b\u4ef6 beans Bean \u4fe1\u606f configprops \u914d\u7f6e\u4fe1\u606f dump \u7ebf\u7a0b\u72b6\u6001\u4fe1\u606f env \u5f53\u524d\u73af\u5883\u4fe1\u606f health \u5e94\u7528\u5065\u5eb7\u72b6\u51b5 info \u5f53\u524d\u5e94\u7528\u4fe1\u606f metrics \u5e94\u7528\u7684\u5404\u9879\u6307\u6807 mappings \u5e94\u7528 @RequestMapping \u6620\u5c04\u8def\u5f84 shutdown \u5173\u95ed\u5f53\u524d\u5e94\u7528 \uff08 \u9ed8\u8ba4\u5173\u95ed \uff09 trace \u8ffd\u8e2a\u4fe1\u606f\u6700\u65b0\u7684 http \u8bf7\u6c42 application.properties management.endpoint.shutdown.enabled = true management.endpoints.web.exposure.include = shutdown \u5173\u95ed\u5e94\u7528 $ curl -X POST localhost:8080/actuator/shutdown","title":"\u7b2c\u5341\u516d\u7ae0-SpringBoot \u4e0e\u76d1\u63a7\u7ba1\u7406"},{"location":"Java/SpringBoot/\u7b2c\u5341\u516d\u7ae0-SpringBoot\u4e0e\u76d1\u63a7\u7ba1\u7406/#-springboot","text":"","title":"\u7b2c\u5341\u516d\u7ae0-SpringBoot \u4e0e\u76d1\u63a7\u7ba1\u7406"},{"location":"Java/SpringBoot/\u7b2c\u5341\u516d\u7ae0-SpringBoot\u4e0e\u76d1\u63a7\u7ba1\u7406/#_1","text":"spring-boot-starter-actuator \u751f\u4ea7\u73af\u5883\u4e0b\u7684\u5e94\u7528\u76d1\u63a7\u548c\u7ba1\u7406\u529f\u80fd \u7aef\u70b9\u540d \u63cf\u8ff0 autoconfig \u81ea\u52a8\u914d\u7f6e\u4fe1\u606f auditevents \u5ba1\u8ba1\u4e8b\u4ef6 beans Bean \u4fe1\u606f configprops \u914d\u7f6e\u4fe1\u606f dump \u7ebf\u7a0b\u72b6\u6001\u4fe1\u606f env \u5f53\u524d\u73af\u5883\u4fe1\u606f health \u5e94\u7528\u5065\u5eb7\u72b6\u51b5 info \u5f53\u524d\u5e94\u7528\u4fe1\u606f metrics \u5e94\u7528\u7684\u5404\u9879\u6307\u6807 mappings \u5e94\u7528 @RequestMapping \u6620\u5c04\u8def\u5f84 shutdown \u5173\u95ed\u5f53\u524d\u5e94\u7528 \uff08 \u9ed8\u8ba4\u5173\u95ed \uff09 trace \u8ffd\u8e2a\u4fe1\u606f\u6700\u65b0\u7684 http \u8bf7\u6c42 application.properties management.endpoint.shutdown.enabled = true management.endpoints.web.exposure.include = shutdown \u5173\u95ed\u5e94\u7528 $ curl -X POST localhost:8080/actuator/shutdown","title":"\u76d1\u7ba1\u7aef\u70b9\u6d4b\u8bd5"},{"location":"Java/SpringBoot/\u7b2c\u5341\u56db\u7ae0-SpringBoot\u4e0e\u5206\u5e03\u5f0f/","text":"\u7b2c\u5341\u56db\u7ae0-SpringBoot \u4e0e\u5206\u5e03\u5f0f Dubbo \u7b80\u4ecb \u5206\u5e03\u5f0f\u5e94\u7528\uff0c\u56fd\u5185\u5e38\u7528\u7ec4\u5408 Zookeeper + Dubbo SpringBoot \u4f7f\u7528 SpringCloud Zookeeper \u5206\u5e03\u5f0f\u5e94\u7528\u7a0b\u5e8f\u534f\u8c03\u670d\u52a1 Dubbo Alibaba \u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u670d\u52a1\u6846\u67b6\uff0c\u670d\u52a1\u63d0\u4f9b\u65b9 Provider+ \u670d\u52a1\u6d88\u8d39\u65b9 Consumer \u5b89\u88c5 zookeeper docker pull zookeeper # EXPOSE 2181 2888 3888 8080 docker run --name zk01 -p 2181 :2181 --restart always -d zookeeper \u521b\u5efa\u4e00\u4e2a\u7a7a\u5de5\u7a0b\uff0c\u4e24\u4e2a spring-web \u6a21\u5757 provider - ticket consumer - ticket 1\u3001\u5c06\u670d\u52a1\u63d0\u4f9b\u8005\u6ce8\u518c\u5230\u6ce8\u518c\u4e2d\u5fc3 2\u3001\u5f15\u5165 dubbo \u548c zkclient \u4f9d\u8d56 3\u3001\u914d\u7f6e dubbo \u7684\u626b\u63cf\u5305\u548c\u6ce8\u518c\u4e2d\u5fc3\u5730\u5740 4\u3001\u4f7f\u7528@Service \u53d1\u5e03\u670d\u52a1 https://github.com/alibaba/dubbo-spring-boot-starter provider-ticket \u63d0\u4f9b\u8005 \u5f15\u5165\u4f9d\u8d56 pom.xml <dependency> <groupId> com.alibaba.spring.boot </groupId> <artifactId> dubbo-spring-boot-starter </artifactId> <version> 2.0.0 </version> </dependency> <dependency> <groupId> com.101tec </groupId> <artifactId> zkclient </artifactId> <version> 0.9 </version> </dependency> \u914d\u7f6e application.properties spring.dubbo.application.name = privoder-ticket spring.dubbo.server = true #\u6ce8\u518c\u4e2d\u5fc3\u5730\u5740 spring.dubbo.registry.address = zookeeper://127.0.0.1:2181 spring.dubbo.scan = com.example.ticket.service \u670d\u52a1\u63a5\u53e3 package com.example.ticket.service ; public interface TicketService { public String getTicket (); } \u53d1\u5e03\u670d\u52a1\u5b9e\u73b0 package com.example.ticket.service.impl ; import com.alibaba.dubbo.config.annotation.Service ; import com.example.ticket.service.TicketService ; import org.springframework.stereotype.Component ; @Component @Service // \u53d1\u5e03\u670d\u52a1 public class TicketServiceImpl implements TicketService { @Override public String getTicket () { return \"\u95e8\u7968\" ; } } \u5f00\u542f\u914d\u7f6e\u53ef\u7528 package com.example.ticket ; import com.alibaba.dubbo.spring.boot.annotation.EnableDubboConfiguration ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; @EnableDubboConfiguration @SpringBootApplication public class ProviderTicketApplication { public static void main ( String [] args ) { SpringApplication . run ( ProviderTicketApplication . class , args ); } } consumer-ticket \u6d88\u8d39\u8005 \u5f15\u5165\u4f9d\u8d56 <dependency> <groupId> com.alibaba.spring.boot </groupId> <artifactId> dubbo-spring-boot-starter </artifactId> <version> 2.0.0 </version> </dependency> <dependency> <groupId> com.101tec </groupId> <artifactId> zkclient </artifactId> <version> 0.9 </version> </dependency> \u914d\u7f6e application.properties spring.dubbo.application.name = consumer-ticket #\u6ce8\u518c\u4e2d\u5fc3\u5730\u5740 spring.dubbo.registry.address = zookeeper://127.0.0.1:2181 \u66b4\u9732\u63a5\u53e3 package com.example.ticket.service ; public interface TicketService { public String getTicket (); } \u7528\u6237\u670d\u52a1\u63a5\u53e3 package com.example.ticket.service ; public interface UserService { public String getTicket (); } \u7528\u6237\u670d\u52a1\u5b9e\u73b0 package com.example.ticket.impl ; import com.alibaba.dubbo.config.annotation.Reference ; import com.example.ticket.service.TicketService ; import com.example.ticket.service.UserService ; import org.springframework.stereotype.Service ; @Service public class UserServiceImpl implements UserService { @Reference TicketService ticketService ; @Override public String getTicket () { return ticketService . getTicket (); } } \u5f00\u542f\u914d\u7f6e\u53ef\u7528 package com.example.ticket ; import com.alibaba.dubbo.spring.boot.annotation.EnableDubboConfiguration ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; @EnableDubboConfiguration @SpringBootApplication public class ConsumerTicketApplication { public static void main ( String [] args ) { SpringApplication . run ( ConsumerTicketApplication . class , args ); } } \u6d4b\u8bd5 package com.example.ticket ; import com.example.ticket.service.UserService ; import org.junit.jupiter.api.Test ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.test.context.SpringBootTest ; @SpringBootTest class ConsumerTicketApplicationTests { @Autowired UserService userService ; @Test void contextLoads () { String ticket = userService . getTicket (); System . out . println ( ticket ); } } SpringCloud-Eureka \u6ce8\u518c\u4e2d\u5fc3 SpringCloud \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u6574\u4f53\u89e3\u51b3\u65b9\u6848 5 \u5927\u5e38\u7528\u7ec4\u4ef6 \u670d\u52a1\u53d1\u73b0 Netflix Eureka \u5ba2\u6237\u7aef\u8d1f\u8f7d\u5747\u8861 Netflix Ribbon \u65ad\u8def\u5668 Netflix Hystrix \u670d\u52a1\u7f51\u5173 Netflix Zuul \u5206\u5e03\u5f0f\u914d\u7f6e Spring Cloud Config pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 2.3.2.RELEASE </version> <relativePath/> <!-- lookup parent from repository --> </parent> <groupId> com.example </groupId> <artifactId> eureka-demo </artifactId> <version> 0.0.1-SNAPSHOT </version> <name> eureka-demo </name> <description> Demo project for Spring Boot </description> <properties> <java.version> 1.8 </java.version> <spring-cloud.version> Hoxton.SR6 </spring-cloud.version> </properties> <dependencies> <dependency> <groupId> org.springframework.cloud </groupId> <artifactId> spring-cloud-starter-netflix-eureka-server </artifactId> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-test </artifactId> <scope> test </scope> <exclusions> <exclusion> <groupId> org.junit.vintage </groupId> <artifactId> junit-vintage-engine </artifactId> </exclusion> </exclusions> </dependency> </dependencies> <dependencyManagement> <dependencies> <dependency> <groupId> org.springframework.cloud </groupId> <artifactId> spring-cloud-dependencies </artifactId> <version> ${spring-cloud.version} </version> <type> pom </type> <scope> import </scope> </dependency> </dependencies> </dependencyManagement> <build> <plugins> <plugin> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-maven-plugin </artifactId> </plugin> </plugins> </build> </project> application.properties server.port = 8761 #eureka\u4e3b\u673a\u540d eureka.instance.hostname = eureka-server # \u4e0d\u628a\u81ea\u5df1\u6ce8\u518c\u5728eureka\u4e0a eureka.client.register-with-eureka = false # \u4e0d\u4eceeureka\u4e0a\u83b7\u53d6\u670d\u52a1\u6ce8\u518c\u4fe1\u606f eureka.client.fetch-registry = false eureka.client.service-url.defaultZone = http://localhost:8761/eureka/ package com.example.eurekademo ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; import org.springframework.cloud.netflix.eureka.server.EnableEurekaServer ; /** * \u6ce8\u518c\u4e2d\u5fc3 * http://localhost:8761/ */ @EnableEurekaServer // \u542f\u7528\u6ce8\u518c\u4e2d\u5fc3 @SpringBootApplication public class EurekaDemoApplication { public static void main ( String [] args ) { SpringApplication . run ( EurekaDemoApplication . class , args ); } } \u542f\u7528\u6ce8\u518c\u4e2d\u5fc3\uff1ahttp://localhost:8761/ \u670d\u52a1\u6ce8\u518c(\u670d\u52a1\u63d0\u4f9b\u8005) pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 2.3.2.RELEASE </version> <relativePath/> <!-- lookup parent from repository --> </parent> <groupId> com.example </groupId> <artifactId> provider-demo </artifactId> <version> 0.0.1-SNAPSHOT </version> <name> provider-demo </name> <description> Demo project for Spring Boot </description> <properties> <java.version> 1.8 </java.version> <spring-cloud.version> Hoxton.SR6 </spring-cloud.version> </properties> <dependencies> <dependency> <groupId> org.springframework.cloud </groupId> <artifactId> spring-cloud-starter-netflix-eureka-client </artifactId> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-test </artifactId> <scope> test </scope> <exclusions> <exclusion> <groupId> org.junit.vintage </groupId> <artifactId> junit-vintage-engine </artifactId> </exclusion> </exclusions> </dependency> </dependencies> <dependencyManagement> <dependencies> <dependency> <groupId> org.springframework.cloud </groupId> <artifactId> spring-cloud-dependencies </artifactId> <version> ${spring-cloud.version} </version> <type> pom </type> <scope> import </scope> </dependency> </dependencies> </dependencyManagement> <build> <plugins> <plugin> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-maven-plugin </artifactId> </plugin> </plugins> </build> </project> application.properties server.port = 8002 spring.application.name = provider-demo #\u6ce8\u518c\u670d\u52a1\u7684\u65f6\u5019\u4f7f\u7528ip\u5730\u5740 eureka.instance.prefer-ip-address = true eureka.client.service-url.defaultZone = http://localhost:8761/eureka/ package com.example.providerdemo ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; /** * \u670d\u52a1\u63d0\u4f9b\u8005 */ @SpringBootApplication public class ProviderDemoApplication { public static void main ( String [] args ) { SpringApplication . run ( ProviderDemoApplication . class , args ); } } \u670d\u52a1 package com.example.providerdemo.service ; import org.springframework.stereotype.Service ; @Service public class TicketService { public String getTicket (){ return \"\u7535\u5f71\u79688001\" ; // return \"\u7535\u5f71\u79688002\"; } } \u63a5\u53e3 package com.example.providerdemo.controller ; import com.example.providerdemo.service.TicketService ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.RestController ; @RestController public class TicketController { @Autowired TicketService ticketService ; @GetMapping ( \"/ticket\" ) public String getTicket (){ return ticketService . getTicket (); } } \u670d\u52a1\u53d1\u73b0&\u670d\u52a1\u6d88\u8d39\u8005 pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 2.3.2.RELEASE </version> <relativePath/> <!-- lookup parent from repository --> </parent> <groupId> com.example </groupId> <artifactId> consumer-demo </artifactId> <version> 0.0.1-SNAPSHOT </version> <name> consumer-demo </name> <description> Demo project for Spring Boot </description> <properties> <java.version> 1.8 </java.version> <spring-cloud.version> Hoxton.SR6 </spring-cloud.version> </properties> <dependencies> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> </dependency> <dependency> <groupId> org.springframework.cloud </groupId> <artifactId> spring-cloud-starter-netflix-eureka-client </artifactId> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-test </artifactId> <scope> test </scope> <exclusions> <exclusion> <groupId> org.junit.vintage </groupId> <artifactId> junit-vintage-engine </artifactId> </exclusion> </exclusions> </dependency> </dependencies> <dependencyManagement> <dependencies> <dependency> <groupId> org.springframework.cloud </groupId> <artifactId> spring-cloud-dependencies </artifactId> <version> ${spring-cloud.version} </version> <type> pom </type> <scope> import </scope> </dependency> </dependencies> </dependencyManagement> <build> <plugins> <plugin> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-maven-plugin </artifactId> </plugin> </plugins> </build> </project> application.properties server.port = 8200 spring.application.name = consumer-demo #\u6ce8\u518c\u670d\u52a1\u7684\u65f6\u5019\u4f7f\u7528ip\u5730\u5740 eureka.instance.prefer-ip-address = true eureka.client.service-url.defaultZone = http://localhost:8761/eureka/ package com.example.consumerdemo ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; import org.springframework.cloud.client.discovery.EnableDiscoveryClient ; import org.springframework.cloud.client.loadbalancer.LoadBalanced ; import org.springframework.context.annotation.Bean ; import org.springframework.web.client.RestTemplate ; /** * \u670d\u52a1\u6d88\u8d39\u8005 */ @EnableDiscoveryClient // \u5f00\u542f\u670d\u52a1\u53d1\u73b0 @SpringBootApplication public class ConsumerDemoApplication { public static void main ( String [] args ) { SpringApplication . run ( ConsumerDemoApplication . class , args ); } @LoadBalanced // \u5f00\u542f\u8d1f\u8f7d\u5747\u8861\u673a\u5236 @Bean public RestTemplate restTemplate (){ return new RestTemplate (); } } package com.example.consumerdemo.controller ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.RestController ; import org.springframework.web.client.RestTemplate ; @RestController public class UserController { @Autowired RestTemplate restTemplate ; @GetMapping ( \"buy\" ) public String getTicket (){ String ticket = restTemplate . getForObject ( \"http://PROVIDER-DEMO/ticket\" , String . class ); return \"buy\" + ticket ; } }","title":"\u7b2c\u5341\u56db\u7ae0-SpringBoot \u4e0e\u5206\u5e03\u5f0f"},{"location":"Java/SpringBoot/\u7b2c\u5341\u56db\u7ae0-SpringBoot\u4e0e\u5206\u5e03\u5f0f/#-springboot","text":"","title":"\u7b2c\u5341\u56db\u7ae0-SpringBoot \u4e0e\u5206\u5e03\u5f0f"},{"location":"Java/SpringBoot/\u7b2c\u5341\u56db\u7ae0-SpringBoot\u4e0e\u5206\u5e03\u5f0f/#dubbo","text":"\u5206\u5e03\u5f0f\u5e94\u7528\uff0c\u56fd\u5185\u5e38\u7528\u7ec4\u5408 Zookeeper + Dubbo SpringBoot \u4f7f\u7528 SpringCloud Zookeeper \u5206\u5e03\u5f0f\u5e94\u7528\u7a0b\u5e8f\u534f\u8c03\u670d\u52a1 Dubbo Alibaba \u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u670d\u52a1\u6846\u67b6\uff0c\u670d\u52a1\u63d0\u4f9b\u65b9 Provider+ \u670d\u52a1\u6d88\u8d39\u65b9 Consumer \u5b89\u88c5 zookeeper docker pull zookeeper # EXPOSE 2181 2888 3888 8080 docker run --name zk01 -p 2181 :2181 --restart always -d zookeeper \u521b\u5efa\u4e00\u4e2a\u7a7a\u5de5\u7a0b\uff0c\u4e24\u4e2a spring-web \u6a21\u5757 provider - ticket consumer - ticket 1\u3001\u5c06\u670d\u52a1\u63d0\u4f9b\u8005\u6ce8\u518c\u5230\u6ce8\u518c\u4e2d\u5fc3 2\u3001\u5f15\u5165 dubbo \u548c zkclient \u4f9d\u8d56 3\u3001\u914d\u7f6e dubbo \u7684\u626b\u63cf\u5305\u548c\u6ce8\u518c\u4e2d\u5fc3\u5730\u5740 4\u3001\u4f7f\u7528@Service \u53d1\u5e03\u670d\u52a1 https://github.com/alibaba/dubbo-spring-boot-starter","title":"Dubbo \u7b80\u4ecb"},{"location":"Java/SpringBoot/\u7b2c\u5341\u56db\u7ae0-SpringBoot\u4e0e\u5206\u5e03\u5f0f/#provider-ticket","text":"\u5f15\u5165\u4f9d\u8d56 pom.xml <dependency> <groupId> com.alibaba.spring.boot </groupId> <artifactId> dubbo-spring-boot-starter </artifactId> <version> 2.0.0 </version> </dependency> <dependency> <groupId> com.101tec </groupId> <artifactId> zkclient </artifactId> <version> 0.9 </version> </dependency> \u914d\u7f6e application.properties spring.dubbo.application.name = privoder-ticket spring.dubbo.server = true #\u6ce8\u518c\u4e2d\u5fc3\u5730\u5740 spring.dubbo.registry.address = zookeeper://127.0.0.1:2181 spring.dubbo.scan = com.example.ticket.service \u670d\u52a1\u63a5\u53e3 package com.example.ticket.service ; public interface TicketService { public String getTicket (); } \u53d1\u5e03\u670d\u52a1\u5b9e\u73b0 package com.example.ticket.service.impl ; import com.alibaba.dubbo.config.annotation.Service ; import com.example.ticket.service.TicketService ; import org.springframework.stereotype.Component ; @Component @Service // \u53d1\u5e03\u670d\u52a1 public class TicketServiceImpl implements TicketService { @Override public String getTicket () { return \"\u95e8\u7968\" ; } } \u5f00\u542f\u914d\u7f6e\u53ef\u7528 package com.example.ticket ; import com.alibaba.dubbo.spring.boot.annotation.EnableDubboConfiguration ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; @EnableDubboConfiguration @SpringBootApplication public class ProviderTicketApplication { public static void main ( String [] args ) { SpringApplication . run ( ProviderTicketApplication . class , args ); } }","title":"provider-ticket \u63d0\u4f9b\u8005"},{"location":"Java/SpringBoot/\u7b2c\u5341\u56db\u7ae0-SpringBoot\u4e0e\u5206\u5e03\u5f0f/#consumer-ticket","text":"\u5f15\u5165\u4f9d\u8d56 <dependency> <groupId> com.alibaba.spring.boot </groupId> <artifactId> dubbo-spring-boot-starter </artifactId> <version> 2.0.0 </version> </dependency> <dependency> <groupId> com.101tec </groupId> <artifactId> zkclient </artifactId> <version> 0.9 </version> </dependency> \u914d\u7f6e application.properties spring.dubbo.application.name = consumer-ticket #\u6ce8\u518c\u4e2d\u5fc3\u5730\u5740 spring.dubbo.registry.address = zookeeper://127.0.0.1:2181 \u66b4\u9732\u63a5\u53e3 package com.example.ticket.service ; public interface TicketService { public String getTicket (); } \u7528\u6237\u670d\u52a1\u63a5\u53e3 package com.example.ticket.service ; public interface UserService { public String getTicket (); } \u7528\u6237\u670d\u52a1\u5b9e\u73b0 package com.example.ticket.impl ; import com.alibaba.dubbo.config.annotation.Reference ; import com.example.ticket.service.TicketService ; import com.example.ticket.service.UserService ; import org.springframework.stereotype.Service ; @Service public class UserServiceImpl implements UserService { @Reference TicketService ticketService ; @Override public String getTicket () { return ticketService . getTicket (); } } \u5f00\u542f\u914d\u7f6e\u53ef\u7528 package com.example.ticket ; import com.alibaba.dubbo.spring.boot.annotation.EnableDubboConfiguration ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; @EnableDubboConfiguration @SpringBootApplication public class ConsumerTicketApplication { public static void main ( String [] args ) { SpringApplication . run ( ConsumerTicketApplication . class , args ); } } \u6d4b\u8bd5 package com.example.ticket ; import com.example.ticket.service.UserService ; import org.junit.jupiter.api.Test ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.test.context.SpringBootTest ; @SpringBootTest class ConsumerTicketApplicationTests { @Autowired UserService userService ; @Test void contextLoads () { String ticket = userService . getTicket (); System . out . println ( ticket ); } }","title":"consumer-ticket \u6d88\u8d39\u8005"},{"location":"Java/SpringBoot/\u7b2c\u5341\u56db\u7ae0-SpringBoot\u4e0e\u5206\u5e03\u5f0f/#springcloud-eureka","text":"SpringCloud \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u6574\u4f53\u89e3\u51b3\u65b9\u6848 5 \u5927\u5e38\u7528\u7ec4\u4ef6 \u670d\u52a1\u53d1\u73b0 Netflix Eureka \u5ba2\u6237\u7aef\u8d1f\u8f7d\u5747\u8861 Netflix Ribbon \u65ad\u8def\u5668 Netflix Hystrix \u670d\u52a1\u7f51\u5173 Netflix Zuul \u5206\u5e03\u5f0f\u914d\u7f6e Spring Cloud Config pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 2.3.2.RELEASE </version> <relativePath/> <!-- lookup parent from repository --> </parent> <groupId> com.example </groupId> <artifactId> eureka-demo </artifactId> <version> 0.0.1-SNAPSHOT </version> <name> eureka-demo </name> <description> Demo project for Spring Boot </description> <properties> <java.version> 1.8 </java.version> <spring-cloud.version> Hoxton.SR6 </spring-cloud.version> </properties> <dependencies> <dependency> <groupId> org.springframework.cloud </groupId> <artifactId> spring-cloud-starter-netflix-eureka-server </artifactId> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-test </artifactId> <scope> test </scope> <exclusions> <exclusion> <groupId> org.junit.vintage </groupId> <artifactId> junit-vintage-engine </artifactId> </exclusion> </exclusions> </dependency> </dependencies> <dependencyManagement> <dependencies> <dependency> <groupId> org.springframework.cloud </groupId> <artifactId> spring-cloud-dependencies </artifactId> <version> ${spring-cloud.version} </version> <type> pom </type> <scope> import </scope> </dependency> </dependencies> </dependencyManagement> <build> <plugins> <plugin> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-maven-plugin </artifactId> </plugin> </plugins> </build> </project> application.properties server.port = 8761 #eureka\u4e3b\u673a\u540d eureka.instance.hostname = eureka-server # \u4e0d\u628a\u81ea\u5df1\u6ce8\u518c\u5728eureka\u4e0a eureka.client.register-with-eureka = false # \u4e0d\u4eceeureka\u4e0a\u83b7\u53d6\u670d\u52a1\u6ce8\u518c\u4fe1\u606f eureka.client.fetch-registry = false eureka.client.service-url.defaultZone = http://localhost:8761/eureka/ package com.example.eurekademo ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; import org.springframework.cloud.netflix.eureka.server.EnableEurekaServer ; /** * \u6ce8\u518c\u4e2d\u5fc3 * http://localhost:8761/ */ @EnableEurekaServer // \u542f\u7528\u6ce8\u518c\u4e2d\u5fc3 @SpringBootApplication public class EurekaDemoApplication { public static void main ( String [] args ) { SpringApplication . run ( EurekaDemoApplication . class , args ); } } \u542f\u7528\u6ce8\u518c\u4e2d\u5fc3\uff1ahttp://localhost:8761/","title":"SpringCloud-Eureka \u6ce8\u518c\u4e2d\u5fc3"},{"location":"Java/SpringBoot/\u7b2c\u5341\u56db\u7ae0-SpringBoot\u4e0e\u5206\u5e03\u5f0f/#_1","text":"pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 2.3.2.RELEASE </version> <relativePath/> <!-- lookup parent from repository --> </parent> <groupId> com.example </groupId> <artifactId> provider-demo </artifactId> <version> 0.0.1-SNAPSHOT </version> <name> provider-demo </name> <description> Demo project for Spring Boot </description> <properties> <java.version> 1.8 </java.version> <spring-cloud.version> Hoxton.SR6 </spring-cloud.version> </properties> <dependencies> <dependency> <groupId> org.springframework.cloud </groupId> <artifactId> spring-cloud-starter-netflix-eureka-client </artifactId> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-test </artifactId> <scope> test </scope> <exclusions> <exclusion> <groupId> org.junit.vintage </groupId> <artifactId> junit-vintage-engine </artifactId> </exclusion> </exclusions> </dependency> </dependencies> <dependencyManagement> <dependencies> <dependency> <groupId> org.springframework.cloud </groupId> <artifactId> spring-cloud-dependencies </artifactId> <version> ${spring-cloud.version} </version> <type> pom </type> <scope> import </scope> </dependency> </dependencies> </dependencyManagement> <build> <plugins> <plugin> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-maven-plugin </artifactId> </plugin> </plugins> </build> </project> application.properties server.port = 8002 spring.application.name = provider-demo #\u6ce8\u518c\u670d\u52a1\u7684\u65f6\u5019\u4f7f\u7528ip\u5730\u5740 eureka.instance.prefer-ip-address = true eureka.client.service-url.defaultZone = http://localhost:8761/eureka/ package com.example.providerdemo ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; /** * \u670d\u52a1\u63d0\u4f9b\u8005 */ @SpringBootApplication public class ProviderDemoApplication { public static void main ( String [] args ) { SpringApplication . run ( ProviderDemoApplication . class , args ); } } \u670d\u52a1 package com.example.providerdemo.service ; import org.springframework.stereotype.Service ; @Service public class TicketService { public String getTicket (){ return \"\u7535\u5f71\u79688001\" ; // return \"\u7535\u5f71\u79688002\"; } } \u63a5\u53e3 package com.example.providerdemo.controller ; import com.example.providerdemo.service.TicketService ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.RestController ; @RestController public class TicketController { @Autowired TicketService ticketService ; @GetMapping ( \"/ticket\" ) public String getTicket (){ return ticketService . getTicket (); } }","title":"\u670d\u52a1\u6ce8\u518c(\u670d\u52a1\u63d0\u4f9b\u8005)"},{"location":"Java/SpringBoot/\u7b2c\u5341\u56db\u7ae0-SpringBoot\u4e0e\u5206\u5e03\u5f0f/#_2","text":"pom.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 2.3.2.RELEASE </version> <relativePath/> <!-- lookup parent from repository --> </parent> <groupId> com.example </groupId> <artifactId> consumer-demo </artifactId> <version> 0.0.1-SNAPSHOT </version> <name> consumer-demo </name> <description> Demo project for Spring Boot </description> <properties> <java.version> 1.8 </java.version> <spring-cloud.version> Hoxton.SR6 </spring-cloud.version> </properties> <dependencies> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> </dependency> <dependency> <groupId> org.springframework.cloud </groupId> <artifactId> spring-cloud-starter-netflix-eureka-client </artifactId> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-test </artifactId> <scope> test </scope> <exclusions> <exclusion> <groupId> org.junit.vintage </groupId> <artifactId> junit-vintage-engine </artifactId> </exclusion> </exclusions> </dependency> </dependencies> <dependencyManagement> <dependencies> <dependency> <groupId> org.springframework.cloud </groupId> <artifactId> spring-cloud-dependencies </artifactId> <version> ${spring-cloud.version} </version> <type> pom </type> <scope> import </scope> </dependency> </dependencies> </dependencyManagement> <build> <plugins> <plugin> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-maven-plugin </artifactId> </plugin> </plugins> </build> </project> application.properties server.port = 8200 spring.application.name = consumer-demo #\u6ce8\u518c\u670d\u52a1\u7684\u65f6\u5019\u4f7f\u7528ip\u5730\u5740 eureka.instance.prefer-ip-address = true eureka.client.service-url.defaultZone = http://localhost:8761/eureka/ package com.example.consumerdemo ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; import org.springframework.cloud.client.discovery.EnableDiscoveryClient ; import org.springframework.cloud.client.loadbalancer.LoadBalanced ; import org.springframework.context.annotation.Bean ; import org.springframework.web.client.RestTemplate ; /** * \u670d\u52a1\u6d88\u8d39\u8005 */ @EnableDiscoveryClient // \u5f00\u542f\u670d\u52a1\u53d1\u73b0 @SpringBootApplication public class ConsumerDemoApplication { public static void main ( String [] args ) { SpringApplication . run ( ConsumerDemoApplication . class , args ); } @LoadBalanced // \u5f00\u542f\u8d1f\u8f7d\u5747\u8861\u673a\u5236 @Bean public RestTemplate restTemplate (){ return new RestTemplate (); } } package com.example.consumerdemo.controller ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.web.bind.annotation.GetMapping ; import org.springframework.web.bind.annotation.RestController ; import org.springframework.web.client.RestTemplate ; @RestController public class UserController { @Autowired RestTemplate restTemplate ; @GetMapping ( \"buy\" ) public String getTicket (){ String ticket = restTemplate . getForObject ( \"http://PROVIDER-DEMO/ticket\" , String . class ); return \"buy\" + ticket ; } }","title":"\u670d\u52a1\u53d1\u73b0&amp;\u670d\u52a1\u6d88\u8d39\u8005"},{"location":"Java/SpringBoot/\u7b2c\u5341\u7ae0-SpringBoot\u4e0e\u6d88\u606f/","text":"\u7b2c\u5341\u7ae0-SpringBoot \u4e0e\u6d88\u606f JMS&AMQP \u7b80\u4ecb \u6d88\u606f\u670d\u52a1\u4e2d\u95f4\u4ef6\u53ef\u4ee5\u63d0\u5347\u7cfb\u7edf\u5f02\u6b65\u901a\u4fe1\uff0c\u6269\u5c55\u89e3\u8026\u80fd\u529b \u4e24\u4e2a\u91cd\u8981\u6982\u5ff5\uff1a \u6d88\u606f\u4ee3\u7406 message broker \u76ee\u7684\u5730 destination \u961f\u5217 queue \uff1a \u70b9\u5bf9\u70b9\u6d88\u606f\u901a\u4fe1 point-to-point \u552f\u4e00\u7684\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005 \u4e3b\u4f53 topic \u53d1\u5e03 publish/\u8ba2\u9605 subscribe \u6d88\u606f\u901a\u4fe1 \u591a\u63a5\u6536\u8005 \u534f\u8bae JMS AMQP \u82f1\u6587 Java Message Service Java Advanced Message Queuing Protocol \u4e2d\u6587 \u6d88\u606f\u670d\u52a1 \u9ad8\u7ea7\u6d88\u606f\u961f\u5217\u534f\u8bae \u5b9e\u73b0 ActiveMQ\u3001HornetMQ RabbitMQ \u5b9a\u4e49 JAVA API \u7f51\u7edc\u7ebf\u7ea7\u534f\u8bae \u8de8\u8bed\u8a00 \u5426 \u662f \u8de8\u5e73\u53f0 \u5426 \u662f \u6d88\u606f\u6a21\u578b peer-2-peer\u3001Pub/Sub 5 \u79cd \u652f\u6301\u6d88\u606f\u7c7b\u578b \u591a\u6d88\u606f\u7c7b\u578b byte[] \u652f\u6301 spring-jms spring-rabbit \u53d1\u9001\u6d88\u606f @JmsTemplate @RabbitTemplate \u76d1\u542c\u6d88\u606f @JmsListener @RabbitListener \u5f00\u542f\u652f\u6301 @EnableJms @EnableRabbit \u81ea\u52a8\u914d\u7f6e JmsAutoConfiguration RabbitAutoConfiguration RabbitMQ \u57fa\u672c\u6982\u5ff5\u7b80\u4ecb https://www.rabbitmq.com/ RabbitMQ \u662f\u7531 erlang \u5f00\u53d1\u7684 AMQP\uff08Advanced Message Queuing Protocol\uff09 \u5b9e\u73b0 \u6838\u5fc3\u6982\u5ff5 Message \u6d88\u606f\uff08\u6d88\u606f\u5934+\u6d88\u606f\u4f53\uff09 Publisher \u6d88\u606f\u53d1\u5e03\u8005 Exchange \u4ea4\u6362\u5668 4 \u79cd\u7c7b\u578b direct(\u9ed8\u8ba4) fanout topic headers Queue \u6d88\u606f\u961f\u5217 Binding \u7ed1\u5b9a Connection \u7f51\u7edc\u8fde\u63a5 Channel \u4fe1\u9053 Consumer \u6d88\u8d39\u8005 Virtual Host \u865a\u62df\u4e3b\u673a \u9ed8\u8ba4/ Broker \u6d88\u606f\u961f\u5217\u670d\u52a1\u5668\u5b9e\u4f53 RabbitMQ \u8fd0\u884c\u673a\u5236 \u751f\u4ea7\u8005\u628a\u6d88\u606f\u53d1\u5e03\u5230 Exchange \u4e0a\uff0c \u6d88\u606f\u6700\u7ec8\u8fbe\u5230\u961f\u5217\u5e76\u88ab\u6d88\u8d39\u8005\u63a5\u6536\uff0c \u800c Binding \u51b3\u5b9a\u4ea4\u6362\u5668\u7684\u6d88\u606f\u5e94\u8be5\u53d1\u9001\u5230\u54ea\u4e2a\u961f\u5217 RabbitMQ \u5b89\u88c5\u6d4b\u8bd5 \u5b89\u88c5\u542f\u52a8 RabbitMQ # \u5b89\u88c5\u5e26\u6709\u7ba1\u7406\u754c\u9762 docker pull rabbitmq:management # \u5ba2\u6237\u7aef\uff1a5672 \u7ba1\u7406\u754c\u9762\uff1a15672 docker run -d -p 5672 :5672 -p 15672 :15672 --name myrabbitmq rabbitmq:management \u7ba1\u7406\u754c\u9762 http://localhost:15672/ \u8d26\u53f7:guest \u5bc6\u7801:guest RabbitTemplate \u53d1\u9001\u63a5\u53d7\u6d88\u606f&\u5e8f\u5217\u5316\u673a\u5236 \u5f15\u5165\u4f9d\u8d56 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-amqp </artifactId> </dependency> \u81ea\u52a8\u914d\u7f6e\u7c7b\uff1aRabbitAutoConfiguration \u914d\u7f6e\uff1aRabbitProperties \u7ed9 Rabbit \u53d1\u9001\u548c\u63a5\u6536\u6d88\u606f\uff1aRabbitTemplate \u7cfb\u7edf\u7ba1\u7406\u7ec4\u4ef6\uff1aAmqpAdmin RabbitMQ \u4e2d\u65b0\u5efa\uff1a queue : message exchange : exchange . message Routing key : message \u81ea\u5b9a\u4e49\u5bf9\u8c61\u5e8f\u5217\u5316\u89c4\u5219 package com.example.demo.config ; import org.springframework.amqp.support.converter.Jackson2JsonMessageConverter ; import org.springframework.amqp.support.converter.MessageConverter ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; @Configuration public class MyAMQPConfig { // \u4ee5json\u7684\u65b9\u5f0f\u5e8f\u5217\u5316\u5bf9\u8c61 @Bean public MessageConverter messageConverter (){ return new Jackson2JsonMessageConverter (); } } \u70b9\u5bf9\u70b9\u53d1\u9001\u6d88\u606f\u6d4b\u8bd5 package com.example.demo ; import org.junit.jupiter.api.Test ; import org.springframework.amqp.rabbit.core.RabbitTemplate ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.test.context.SpringBootTest ; import java.util.HashMap ; import java.util.Map ; @SpringBootTest public class RabbitMQTest { @Autowired private RabbitTemplate rabbitTemplate ; // \u5355\u64ad\uff1a\u53d1\u9001\u6570\u636e @Test public void testSendRabbitMQ () { Map < String , Object > map = new HashMap <>(); map . put ( \"name\" , \"Tom\" ); map . put ( \"age\" , 23 ); rabbitTemplate . convertAndSend ( \"exchange.message\" , \"message\" , map ); } // \u5355\u64ad\uff1a\u63a5\u6536\u6570\u636e @Test public void testReceiveRabbitMQ () { Object obj = rabbitTemplate . receiveAndConvert ( \"message\" ); System . out . println ( obj ); // {name=Tom, age=23} } } @RabbitListener&@EnableRabbit \u5f00\u542f RabbitMQ package com.example.demo ; import org.springframework.amqp.rabbit.annotation.EnableRabbit ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; @SpringBootApplication @EnableRabbit public class DemoApplication { public static void main ( String [] args ) { SpringApplication . run ( DemoApplication . class , args ); } } \u76d1\u542c\u961f\u5217\u6570\u636e package com.example.demo.service ; import org.springframework.amqp.core.Message ; import org.springframework.amqp.rabbit.annotation.RabbitListener ; import org.springframework.stereotype.Service ; import java.util.Map ; @Service public class MessageService { // \u63a5\u6536\u6d88\u606f\u6570\u636e @RabbitListener ( queues ={ \"message\" }) public void listenMessage ( Map < String , Object > map ){ System . out . println ( \"\u6536\u5230\u6d88\u606f: \" + map ); } // \u63a5\u6536\u6d88\u606f\u5934\u548c\u6d88\u606f\u4f53 @RabbitListener ( queues ={ \"message\" }) public void receiveMessage ( Message message ){ System . out . println ( \"\u6536\u5230\u6d88\u606f: \" + message . getMessageProperties ()); System . out . println ( \"\u6536\u5230\u6d88\u606f: \" + message . getBody ()); } } AmqpAdmin \u7ba1\u7406\u7ec4\u4ef6\u7684\u4f7f\u7528 \u4f7f\u7528\u793a\u4f8b package com.example.demo ; import org.junit.jupiter.api.Test ; import org.springframework.amqp.core.AmqpAdmin ; import org.springframework.amqp.core.Binding ; import org.springframework.amqp.core.DirectExchange ; import org.springframework.amqp.core.Queue ; import org.springframework.amqp.rabbit.core.RabbitTemplate ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.test.context.SpringBootTest ; import java.util.HashMap ; import java.util.Map ; @SpringBootTest public class RabbitMQTest { @Autowired AmqpAdmin amqpAdmin ; @Test public void createExchange (){ // \u521b\u5efa\u4ea4\u6362\u5668 amqpAdmin . declareExchange ( new DirectExchange ( \"exchange.admin\" )); // \u521b\u5efaqueque amqpAdmin . declareQueue ( new Queue ( \"queue.admin\" )); // \u521b\u5efa\u7ed1\u5b9a\u89c4\u5219 amqpAdmin . declareBinding ( new Binding ( \"queue.admin\" , Binding . DestinationType . QUEUE , \"exchange.admin\" , \"admin\" , null )); System . out . println ( \"\u521b\u5efa\u6210\u529f\" ); } }","title":"\u7b2c\u5341\u7ae0-SpringBoot \u4e0e\u6d88\u606f"},{"location":"Java/SpringBoot/\u7b2c\u5341\u7ae0-SpringBoot\u4e0e\u6d88\u606f/#-springboot","text":"","title":"\u7b2c\u5341\u7ae0-SpringBoot \u4e0e\u6d88\u606f"},{"location":"Java/SpringBoot/\u7b2c\u5341\u7ae0-SpringBoot\u4e0e\u6d88\u606f/#jmsamqp","text":"\u6d88\u606f\u670d\u52a1\u4e2d\u95f4\u4ef6\u53ef\u4ee5\u63d0\u5347\u7cfb\u7edf\u5f02\u6b65\u901a\u4fe1\uff0c\u6269\u5c55\u89e3\u8026\u80fd\u529b \u4e24\u4e2a\u91cd\u8981\u6982\u5ff5\uff1a \u6d88\u606f\u4ee3\u7406 message broker \u76ee\u7684\u5730 destination \u961f\u5217 queue \uff1a \u70b9\u5bf9\u70b9\u6d88\u606f\u901a\u4fe1 point-to-point \u552f\u4e00\u7684\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005 \u4e3b\u4f53 topic \u53d1\u5e03 publish/\u8ba2\u9605 subscribe \u6d88\u606f\u901a\u4fe1 \u591a\u63a5\u6536\u8005 \u534f\u8bae JMS AMQP \u82f1\u6587 Java Message Service Java Advanced Message Queuing Protocol \u4e2d\u6587 \u6d88\u606f\u670d\u52a1 \u9ad8\u7ea7\u6d88\u606f\u961f\u5217\u534f\u8bae \u5b9e\u73b0 ActiveMQ\u3001HornetMQ RabbitMQ \u5b9a\u4e49 JAVA API \u7f51\u7edc\u7ebf\u7ea7\u534f\u8bae \u8de8\u8bed\u8a00 \u5426 \u662f \u8de8\u5e73\u53f0 \u5426 \u662f \u6d88\u606f\u6a21\u578b peer-2-peer\u3001Pub/Sub 5 \u79cd \u652f\u6301\u6d88\u606f\u7c7b\u578b \u591a\u6d88\u606f\u7c7b\u578b byte[] \u652f\u6301 spring-jms spring-rabbit \u53d1\u9001\u6d88\u606f @JmsTemplate @RabbitTemplate \u76d1\u542c\u6d88\u606f @JmsListener @RabbitListener \u5f00\u542f\u652f\u6301 @EnableJms @EnableRabbit \u81ea\u52a8\u914d\u7f6e JmsAutoConfiguration RabbitAutoConfiguration","title":"JMS&amp;AMQP \u7b80\u4ecb"},{"location":"Java/SpringBoot/\u7b2c\u5341\u7ae0-SpringBoot\u4e0e\u6d88\u606f/#rabbitmq","text":"https://www.rabbitmq.com/ RabbitMQ \u662f\u7531 erlang \u5f00\u53d1\u7684 AMQP\uff08Advanced Message Queuing Protocol\uff09 \u5b9e\u73b0 \u6838\u5fc3\u6982\u5ff5 Message \u6d88\u606f\uff08\u6d88\u606f\u5934+\u6d88\u606f\u4f53\uff09 Publisher \u6d88\u606f\u53d1\u5e03\u8005 Exchange \u4ea4\u6362\u5668 4 \u79cd\u7c7b\u578b direct(\u9ed8\u8ba4) fanout topic headers Queue \u6d88\u606f\u961f\u5217 Binding \u7ed1\u5b9a Connection \u7f51\u7edc\u8fde\u63a5 Channel \u4fe1\u9053 Consumer \u6d88\u8d39\u8005 Virtual Host \u865a\u62df\u4e3b\u673a \u9ed8\u8ba4/ Broker \u6d88\u606f\u961f\u5217\u670d\u52a1\u5668\u5b9e\u4f53","title":"RabbitMQ \u57fa\u672c\u6982\u5ff5\u7b80\u4ecb"},{"location":"Java/SpringBoot/\u7b2c\u5341\u7ae0-SpringBoot\u4e0e\u6d88\u606f/#rabbitmq_1","text":"\u751f\u4ea7\u8005\u628a\u6d88\u606f\u53d1\u5e03\u5230 Exchange \u4e0a\uff0c \u6d88\u606f\u6700\u7ec8\u8fbe\u5230\u961f\u5217\u5e76\u88ab\u6d88\u8d39\u8005\u63a5\u6536\uff0c \u800c Binding \u51b3\u5b9a\u4ea4\u6362\u5668\u7684\u6d88\u606f\u5e94\u8be5\u53d1\u9001\u5230\u54ea\u4e2a\u961f\u5217","title":"RabbitMQ \u8fd0\u884c\u673a\u5236"},{"location":"Java/SpringBoot/\u7b2c\u5341\u7ae0-SpringBoot\u4e0e\u6d88\u606f/#rabbitmq_2","text":"\u5b89\u88c5\u542f\u52a8 RabbitMQ # \u5b89\u88c5\u5e26\u6709\u7ba1\u7406\u754c\u9762 docker pull rabbitmq:management # \u5ba2\u6237\u7aef\uff1a5672 \u7ba1\u7406\u754c\u9762\uff1a15672 docker run -d -p 5672 :5672 -p 15672 :15672 --name myrabbitmq rabbitmq:management \u7ba1\u7406\u754c\u9762 http://localhost:15672/ \u8d26\u53f7:guest \u5bc6\u7801:guest","title":"RabbitMQ \u5b89\u88c5\u6d4b\u8bd5"},{"location":"Java/SpringBoot/\u7b2c\u5341\u7ae0-SpringBoot\u4e0e\u6d88\u606f/#rabbittemplate","text":"\u5f15\u5165\u4f9d\u8d56 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-amqp </artifactId> </dependency> \u81ea\u52a8\u914d\u7f6e\u7c7b\uff1aRabbitAutoConfiguration \u914d\u7f6e\uff1aRabbitProperties \u7ed9 Rabbit \u53d1\u9001\u548c\u63a5\u6536\u6d88\u606f\uff1aRabbitTemplate \u7cfb\u7edf\u7ba1\u7406\u7ec4\u4ef6\uff1aAmqpAdmin RabbitMQ \u4e2d\u65b0\u5efa\uff1a queue : message exchange : exchange . message Routing key : message \u81ea\u5b9a\u4e49\u5bf9\u8c61\u5e8f\u5217\u5316\u89c4\u5219 package com.example.demo.config ; import org.springframework.amqp.support.converter.Jackson2JsonMessageConverter ; import org.springframework.amqp.support.converter.MessageConverter ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; @Configuration public class MyAMQPConfig { // \u4ee5json\u7684\u65b9\u5f0f\u5e8f\u5217\u5316\u5bf9\u8c61 @Bean public MessageConverter messageConverter (){ return new Jackson2JsonMessageConverter (); } } \u70b9\u5bf9\u70b9\u53d1\u9001\u6d88\u606f\u6d4b\u8bd5 package com.example.demo ; import org.junit.jupiter.api.Test ; import org.springframework.amqp.rabbit.core.RabbitTemplate ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.test.context.SpringBootTest ; import java.util.HashMap ; import java.util.Map ; @SpringBootTest public class RabbitMQTest { @Autowired private RabbitTemplate rabbitTemplate ; // \u5355\u64ad\uff1a\u53d1\u9001\u6570\u636e @Test public void testSendRabbitMQ () { Map < String , Object > map = new HashMap <>(); map . put ( \"name\" , \"Tom\" ); map . put ( \"age\" , 23 ); rabbitTemplate . convertAndSend ( \"exchange.message\" , \"message\" , map ); } // \u5355\u64ad\uff1a\u63a5\u6536\u6570\u636e @Test public void testReceiveRabbitMQ () { Object obj = rabbitTemplate . receiveAndConvert ( \"message\" ); System . out . println ( obj ); // {name=Tom, age=23} } }","title":"RabbitTemplate \u53d1\u9001\u63a5\u53d7\u6d88\u606f&amp;\u5e8f\u5217\u5316\u673a\u5236"},{"location":"Java/SpringBoot/\u7b2c\u5341\u7ae0-SpringBoot\u4e0e\u6d88\u606f/#rabbitlistenerenablerabbit","text":"\u5f00\u542f RabbitMQ package com.example.demo ; import org.springframework.amqp.rabbit.annotation.EnableRabbit ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; @SpringBootApplication @EnableRabbit public class DemoApplication { public static void main ( String [] args ) { SpringApplication . run ( DemoApplication . class , args ); } } \u76d1\u542c\u961f\u5217\u6570\u636e package com.example.demo.service ; import org.springframework.amqp.core.Message ; import org.springframework.amqp.rabbit.annotation.RabbitListener ; import org.springframework.stereotype.Service ; import java.util.Map ; @Service public class MessageService { // \u63a5\u6536\u6d88\u606f\u6570\u636e @RabbitListener ( queues ={ \"message\" }) public void listenMessage ( Map < String , Object > map ){ System . out . println ( \"\u6536\u5230\u6d88\u606f: \" + map ); } // \u63a5\u6536\u6d88\u606f\u5934\u548c\u6d88\u606f\u4f53 @RabbitListener ( queues ={ \"message\" }) public void receiveMessage ( Message message ){ System . out . println ( \"\u6536\u5230\u6d88\u606f: \" + message . getMessageProperties ()); System . out . println ( \"\u6536\u5230\u6d88\u606f: \" + message . getBody ()); } }","title":"@RabbitListener&amp;@EnableRabbit"},{"location":"Java/SpringBoot/\u7b2c\u5341\u7ae0-SpringBoot\u4e0e\u6d88\u606f/#amqpadmin","text":"\u4f7f\u7528\u793a\u4f8b package com.example.demo ; import org.junit.jupiter.api.Test ; import org.springframework.amqp.core.AmqpAdmin ; import org.springframework.amqp.core.Binding ; import org.springframework.amqp.core.DirectExchange ; import org.springframework.amqp.core.Queue ; import org.springframework.amqp.rabbit.core.RabbitTemplate ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.test.context.SpringBootTest ; import java.util.HashMap ; import java.util.Map ; @SpringBootTest public class RabbitMQTest { @Autowired AmqpAdmin amqpAdmin ; @Test public void createExchange (){ // \u521b\u5efa\u4ea4\u6362\u5668 amqpAdmin . declareExchange ( new DirectExchange ( \"exchange.admin\" )); // \u521b\u5efaqueque amqpAdmin . declareQueue ( new Queue ( \"queue.admin\" )); // \u521b\u5efa\u7ed1\u5b9a\u89c4\u5219 amqpAdmin . declareBinding ( new Binding ( \"queue.admin\" , Binding . DestinationType . QUEUE , \"exchange.admin\" , \"admin\" , null )); System . out . println ( \"\u521b\u5efa\u6210\u529f\" ); } }","title":"AmqpAdmin \u7ba1\u7406\u7ec4\u4ef6\u7684\u4f7f\u7528"},{"location":"Java/SpringBoot/\u7b2c\u56db\u7ae0-SpringBootWeb\u5f00\u53d1/","text":"\u7b2c\u56db\u7ae0 Spring Boot Web \u5f00\u53d1 1\u3001web \u5f00\u53d1\u7b80\u4ecb https://start.spring.io/ \u521b\u5efa SpringBoot \u5e94\u7528\uff0c\u9009\u4e2d\u9700\u8981\u7684\u6a21\u5757 \u4f7f\u7528 SpringBoot \u81ea\u52a8\u914d\u7f6e \u7f16\u5199\u4e1a\u52a1\u4ee3\u7801 * AutoConfiguration \u81ea\u52a8\u914d\u7f6e\u7ec4\u4ef6 * Properties \u5c01\u88c5\u914d\u7f6e\u6587\u4ef6\u7684\u5185\u5bb9 webjars&\u9759\u6001\u8d44\u6e90\u6620\u5c04\u89c4\u5219 1\u3001webjars \u914d\u7f6e\u7c7b\uff1aWebMvcAutoConfiguration webjars \u4ee5 jar \u5305\u7684\u65b9\u5f0f\u5f15\u5165\u9759\u6001\u8d44\u6e90 https://www.webjars.org/ \u8d44\u6e90\u8def\u5f84\u6620\u5c04 / webjars /** => classpath:/META-INF/resources/webjars/ \u6dfb\u52a0 jquery \u4f9d\u8d56 <dependency> <groupId> org.webjars </groupId> <artifactId> jquery </artifactId> <version> 3.5.1 </version> </dependency> \u8bbf\u95ee\u8def\u5f84 /webjars/jquery/3.5.1/jquery.js 2\u3001\u9759\u6001\u8d44\u6e90\u6620\u5c04\u89c4\u5219 \u9759\u6001\u8d44\u6e90\u6587\u4ef6\u5939 classpath: / META-INF / resources / classpath: / resources / classpath: / static / classpath: / public / / \u5f53\u524d\u9879\u76ee\u6839\u8def\u5f84 \u9ed8\u8ba4\u9759\u6001\u6587\u4ef6\u4e0b\u67e5\u627e # \u6b22\u8fce\u9875\u9762 index.html # \u56fe\u6807\u8def\u5f84 favicon.ico \u81ea\u5b9a\u4e49\u9759\u6001\u8d44\u6e90\u6587\u4ef6\u8def\u5f84,\u9ed8\u8ba4\u8d44\u6e90\u8def\u5f84\u5931\u6548 spring . resources . static - locations = classpath : / hello / \u5f15\u5165 thymeleaf JSP\u3001Velocity\u3001Thymeleaf\u3001Freemarker \u6a21\u677f\u5f15\u64ce Template ${ name } + Data {\"name\": \"Tom\"} => TemplateEngine => output Thymeleaf \u4f9d\u8d56 <properties> <java.version> 1.8 </java.version> <project.build.sourceEncoding> UTF-8 </project.build.sourceEncoding> <!-- \u5207\u6362 thymeleaf version --> <!-- thymeleaf3 \u9002\u914d layout2 --> <springboot-thymeleaf.version> 2.1.1.RELEASE </springboot-thymeleaf.version> <thymeleaf-layout-dialect.version> 2.0.0 </thymeleaf-layout-dialect.version> </properties> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-thymeleaf </artifactId> <version> ${springboot-thymeleaf.version} </version> </dependency> thymeleaf \u8bed\u6cd5 https://www.thymeleaf.org/ \u9ed8\u8ba4\u914d\u7f6e public class ThymeleafProperties { private String prefix = \"classpath:/templates/\" ; private String suffix = \".html\" ; } \u6a21\u677f\u4f7f\u7528\u793a\u4f8b package com.example.demo.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import java.util.HashMap ; @Controller public class IndexController { @RequestMapping ( \"/hello\" ) public String hello ( HashMap < String , Object > map ){ map . put ( \"name\" , \"Tom\" ); // \u6a21\u677f\u8def\u5f84 // src/main/resources/templates/about.html return \"hello\" ; } } \u6a21\u677f\uff1a src/main/resources/templates/about.html <!DOCTYPE html> < html lang = \"en\" xmlns:th = \"http://www.thymeleaf.org\" > < head > < meta charset = \"UTF-8\" /> < title > Title </ title > </ head > < body > < h1 > Hello </ h1 > <!-- \u8bbe\u7f6e\u6587\u672c\u5185\u5bb9 --> < div th:text = \"${name}\" ></ div > </ body > </ html > \u8bed\u6cd5\u89c4\u5219 th : \u4efb\u610f html \u5c5e\u6027\uff0c\u7528\u6765\u66ff\u6362\u539f\u751f\u5c5e\u6027\u7684\u503c th : text \u6539\u53d8\u6587\u672c\u5185\u5bb9 ( \u8f6c\u4e49 ) th : utext \u6539\u53d8\u6587\u672c\u5185\u5bb9 ( \u4e0d\u8f6c\u4e49 ) th : attr th : href th : src th : each th : for \u8868\u8fbe\u5f0f ${ } \u53d8\u91cf\u8868\u8fbe\u5f0f \u83b7\u53d6\u53d8\u91cf\u503c \u83b7\u53d6\u53d8\u91cf\u5c5e\u6027 \u8c03\u7528\u65b9\u6cd5 \u5185\u7f6e\u57fa\u672c\u5bf9\u8c61 : #ctx #session... \u5185\u7f6e\u5de5\u5177\u5bf9\u8c61\uff1a * { } \u9009\u62e9\u8868\u8fbe\u5f0f \u914d\u5408th:object\u4f7f\u7528 #{} \u83b7\u53d6\u56fd\u9645\u5316\u5185\u5bb9 @{} \u5b9a\u4e49url ~{} \u7247\u6bb5\u8868\u8fbe\u5f0f \u5b57\u9762\u91cf \u6570\u5b66\u8fd0\u7b97 \u5e03\u5c14\u8fd0\u7b97 \u6bd4\u8f83\u8fd0\u7b97 \u6761\u4ef6\u8fd0\u7b97 \u7279\u6b8a\u64cd\u4f5c \u793a\u4f8b <!--\u6587\u672c\u8f93\u51fa--> < div th:text = \"${name}\" ></ div > <!--\u5faa\u73af\u904d\u5386--> < div th:each = \"pet: ${pets}\" > < div > [[${pet}]] </ div > </ div > <!--\u5faa\u73af\u904d\u5386--> < div th:each = \"pet: ${pets}\" th:text = \"pet\" ></ div > SpringMVC \u81ea\u52a8\u914d\u7f6e\u539f\u7406 SpringBoot \u5bf9 SpringMVC \u9ed8\u8ba4\u914d\u7f6e \u81ea\u52a8\u914d\u7f6e ViewResolver \u89c6\u56fe\u89e3\u6790\u5668 \u6839\u636e\u65b9\u6cd5\u8fd4\u56de\u503c\u7684\u5230\u89c6\u56fe\u5bf9\u8c61\uff08 View \uff09 \u89c6\u56fe\u5bf9\u8c61\u51b3\u5b9a\u5982\u4f55\u6e32\u67d3\u3001\u8f6c\u53d1\u3001\u91cd\u5b9a\u5411 Converter \u7c7b\u578b\u8f6c\u6362\u5668 Formatter \u683c\u5f0f\u5316\u5668 HttpMessageConverters \u8f6c\u6362\u8bf7\u6c42\u54cd\u5e94 MessageCodesResolver \u5b9a\u4e49\u9519\u8bef\u4ee3\u7801\u751f\u6210\u89c4\u5219 WebDataBinder \u6570\u636e\u7ed1\u5b9a\u5668 \u4fee\u6539 SpringBoot \u9ed8\u8ba4\u914d\u7f6e \u4f18\u5148\u4f7f\u7528\u7528\u6237\u914d\u7f6e@Bean/@Component \u5982\u679c\u6ca1\u6709\u624d\u81ea\u52a8\u914d\u7f6e \u6709\u4e9b\u7ec4\u4ef6\u53ef\u4ee5\u6709\u591a\u4e2a eg: ViewResolver \u5c06\u7528\u6237\u914d\u7f6e\u548c\u9ed8\u8ba4\u914d\u7f6e\u7ec4\u5408\u8d77\u6765 \u6269\u5c55\u4e0e\u5168\u9762\u63a5\u7ba1 SpringMVC 1\u3001\u6269\u5c55\u914d\u7f6e package com.example.demo.config ; import org.springframework.context.annotation.Configuration ; import org.springframework.web.servlet.config.annotation.ViewControllerRegistry ; import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter ; @Configuration public class CustomVmcConfig extends WebMvcConfigurerAdapter { @Override public void addViewControllers ( ViewControllerRegistry registry ) { // super.addViewControllers(registry); // \u6d4f\u89c8\u5668\u7684\u8bf7\u6c42 /demo \u5230\u89c6\u56fe /hello registry . addViewController ( \"demo\" ). setViewName ( \"hello\" ); } } 2\u3001\u5168\u9762\u63a5\u7ba1 \u589e\u52a0 @EnableWebMvc \u540e\uff0c\u81ea\u52a8\u914d\u7f6e\u5931\u6548 package com.example.demo.config ; import org.springframework.context.annotation.Configuration ; import org.springframework.web.servlet.config.annotation.EnableWebMvc ; import org.springframework.web.servlet.config.annotation.ViewControllerRegistry ; import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter ; @EnableWebMvc @Configuration public class CustomVmcConfig extends WebMvcConfigurerAdapter { @Override public void addViewControllers ( ViewControllerRegistry registry ) { // super.addViewControllers(registry); // \u6d4f\u89c8\u5668\u7684\u8bf7\u6c42 /demo \u5230\u89c6\u56fe /hello registry . addViewController ( \"demo\" ). setViewName ( \"hello\" ); } } \u5f15\u5165\u8d44\u6e90 \u6a21\u677f\u8d44\u6e90: https://getbootstrap.net/ \u6a21\u677f\u8bed\u6cd5: https://www.thymeleaf.org/ webjars: https://www.webjars.org/ \u76ee\u5f55\u8bbe\u7f6e resources / templates \u6a21\u677f\u6587\u4ef6 static \u9759\u6001\u6587\u4ef6 \u9996\u9875\u8bbe\u7f6e package com.example.demo.config ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.web.servlet.config.annotation.ViewControllerRegistry ; import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter ; @Configuration public class CustomVmcConfig extends WebMvcConfigurerAdapter { // \u8bbe\u7f6e\u9996\u9875\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u8bbf\u95ee public/index.html \u6ca1\u6709\u7ecf\u8fc7\u6a21\u677f\u5f15\u64ce\u5904\u7406 @Bean public WebMvcConfigurerAdapter CustomVmcConfig () { WebMvcConfigurerAdapter adapter = new WebMvcConfigurerAdapter () { @Override public void addViewControllers ( ViewControllerRegistry registry ) { registry . addViewController ( \"/\" ). setViewName ( \"login\" ); registry . addViewController ( \"/index.html\" ). setViewName ( \"login\" ); } }; return adapter ; } } \u56fd\u9645\u5316 \u9ed8\u8ba4\u6839\u636e\u6d4f\u89c8\u5668\u8bed\u8a00\u83b7\u53d6\u5bf9\u5e94\u56fd\u9645\u5316\u4fe1\u606f 1\u3001\u914d\u7f6e\u8bed\u8a00\u6587\u4ef6 resources \u8d44\u6e90\u6587\u4ef6\u5939\u4e0b \u251c\u2500\u2500 i18n \u2502 \u251c\u2500\u2500 login . properties \u2502 \u251c\u2500\u2500 login_en_US . properties \u2502 \u2514\u2500\u2500 login_zh_CN . properties \u9ed8\u8ba4\u914d\u7f6e login.properties login . button = \u767b\u5f55 ~ login . title = \u767b\u5f55 ~ login . username = \u7528\u6237\u540d ~ login . password = \u5bc6\u7801 ~ login . remember = \u8bb0\u4f4f\u6211 ~ \u82f1\u6587\u914d\u7f6e login_en_US.properties login . button = Sign In login . title = Login login . username = UserName login . password = Password login . remember = Remenber Me \u4e2d\u6587\u914d\u7f6e login_zh_CN.properties login . button = \u767b\u5f55 login . title = \u767b\u5f55 login . username = \u7528\u6237\u540d login . password = \u5bc6\u7801 login . remember = \u8bb0\u4f4f\u6211 2\u3001\u914d\u7f6e application.yml spring : messages : basename : i18n . login 3\u3001\u6a21\u677f\u6587\u4ef6\u4e2d\u4f7f\u7528 < button th:text = \"#{login.button}\" ></ button > \u6839\u636e\u6d4f\u89c8\u5668\u8bf7\u6c42\u5934\u8bbe\u7f6e\u8bed\u8a00 GET http :// localhost : 8080 / Accept-Language : en-US , en ; q = 0 . 9 , zh-CN ; q = 0 . 8 , zh ; q = 0 . 7 4\u3001\u81ea\u5b9a\u4e49\u56fd\u9645\u5316\u5904\u7406\u5668 package com.example.demo.component ; import org.springframework.util.StringUtils ; import org.springframework.web.servlet.LocaleResolver ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.util.Locale ; /** * \u533a\u57df\u4fe1\u606f\u89e3\u6790\u5668 * \u81ea\u5b9a\u4e49\u56fd\u9645\u5316\u53c2\u6570\uff0c\u652f\u6301\u94fe\u63a5\u4e0a\u643a\u5e26\u533a\u57df\u4fe1\u606f */ public class MyLocaleResolver implements LocaleResolver { @Override public Locale resolveLocale ( HttpServletRequest request ) { String lang = request . getParameter ( \"lang\" ); Locale locale = Locale . getDefault (); if (! StringUtils . isEmpty ( lang )) { String [] list = lang . split ( \"_\" ); if ( list . length == 2 ) { locale = new Locale ( list [ 0 ], list [ 1 ]); } } return locale ; } @Override public void setLocale ( HttpServletRequest httpServletRequest , HttpServletResponse httpServletResponse , Locale locale ) { } } \u542f\u7528\u81ea\u5b9a\u4e49\u56fd\u9645\u5316\u5904\u7406\u5668 package com.example.demo.config ; import com.example.demo.component.MyLocaleResolver ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.web.servlet.config.annotation.ViewControllerRegistry ; import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter ; /** * \u914d\u7f6e\u9996\u9875\u89c6\u56fe */ @Configuration public class CustomVmcConfig extends WebMvcConfigurerAdapter { @Bean public MyLocaleResolver localeResolver () { return new MyLocaleResolver (); } } \u4f18\u5148\u83b7\u53d6\u67e5\u8be2\u53c2\u6570\u8fd4\u56de\u8bed\u8a00\u8bbe\u7f6e http : // localhost : 8080 /? lang = zh_CN http : // localhost : 8080 /? lang = en_US \u767b\u9646&\u62e6\u622a\u5668 \u5f00\u53d1\u671f\u95f4\u6a21\u677f\u5f15\u64ce\u4fee\u6539\u8981\u5b9e\u65f6\u751f\u6548 \u7981\u7528\u6a21\u677f\u5f15\u64ce\u7f13\u5b58 \u91cd\u65b0\u7f16\u8bd1 <!--\u767b\u5f55\u9519\u8bef\u6d88\u606f\u63d0\u793a--> < p style = \"color: red;\" th:text = \"${msg}\" th:if = \"${not #strings.isEmpty(msg)}\" ></ p > \u62e6\u622a\u5668\u8fdb\u884c\u767b\u5f55\u68c0\u67e5 \u767b\u5f55 package com.example.demo.controller ; import org.springframework.stereotype.Controller ; import org.springframework.util.StringUtils ; import org.springframework.web.bind.annotation.PostMapping ; import org.springframework.web.bind.annotation.RequestParam ; import javax.servlet.http.HttpSession ; import java.util.Map ; @Controller public class LoginController { @PostMapping ( \"/user/login\" ) // \u7b49\u4ef7\u4e8e @RequestMapping(value = \"/user/login\", method = {RequestMethod.POST}) public String login ( @RequestParam ( \"username\" ) String username , @RequestParam ( \"password\" ) String password , Map < String , Object > map , HttpSession session ) { if (! StringUtils . isEmpty ( username ) && \"123\" . equals ( password )) { session . setAttribute ( \"loginUser\" , username ); // \u767b\u5f55\u6210\u529f \u9632\u6b62\u8868\u5355\u91cd\u65b0\u63d0\u4ea4\uff0c\u505a\u4e00\u4e2a\u91cd\u5b9a\u5411 return \"redirect:/dashboard.html\" ; } else { // \u767b\u5f55\u5931\u8d25 map . put ( \"msg\" , \"\u8d26\u53f7\u6216\u5bc6\u7801\u4e0d\u6b63\u786e\" ); return \"login\" ; } } } \u62e6\u622a\u5668 package com.example.demo.component ; import org.springframework.web.servlet.HandlerInterceptor ; import org.springframework.web.servlet.ModelAndView ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; /** * \u767b\u5f55\u68c0\u67e5 */ public class LoginHandlerInterceptor implements HandlerInterceptor { @Override public boolean preHandle ( HttpServletRequest request , HttpServletResponse response , Object handler ) throws Exception { Object loginUser = request . getSession (). getAttribute ( \"loginUser\" ); // \u672a\u767b\u5f55\uff0c\u8fd4\u56de\u767b\u5f55\u9875\u9762 if ( loginUser == null ) { request . setAttribute ( \"msg\" , \"\u6ca1\u6709\u6743\u9650\uff0c\u8bf7\u5148\u767b\u5f55\" ); request . getRequestDispatcher ( \"/index.html\" ). forward ( request , response ); return false ; } // \u5df2\u767b\u5f55\uff0c\u653e\u884c else { return true ; } } @Override public void postHandle ( HttpServletRequest request , HttpServletResponse response , Object handler , ModelAndView modelAndView ) throws Exception { } @Override public void afterCompletion ( HttpServletRequest request , HttpServletResponse response , Object handler , Exception ex ) throws Exception { } } \u6ce8\u518c\u62e6\u622a\u5668 package com.example.demo.config ; import com.example.demo.component.LoginHandlerInterceptor ; import com.example.demo.component.MyLocaleResolver ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.web.servlet.config.annotation.InterceptorRegistry ; import org.springframework.web.servlet.config.annotation.ViewControllerRegistry ; import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter ; /** * \u914d\u7f6e\u9996\u9875\u89c6\u56fe */ @Configuration @SuppressWarnings ( \"all\" ) public class CustomVmcConfig extends WebMvcConfigurerAdapter { // \u8bbe\u7f6e\u9996\u9875\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u8bbf\u95ee public/index.html \u6ca1\u6709\u7ecf\u8fc7\u6a21\u677f\u5f15\u64ce\u5904\u7406 @Bean public WebMvcConfigurerAdapter CustomVmcConfig () { WebMvcConfigurerAdapter adapter = new WebMvcConfigurerAdapter () { /** * \u6ce8\u518c\u89c6\u56fe\u63a7\u5236\u5668 * @param registry */ @Override public void addViewControllers ( ViewControllerRegistry registry ) { registry . addViewController ( \"/\" ). setViewName ( \"login\" ); registry . addViewController ( \"/index.html\" ). setViewName ( \"login\" ); registry . addViewController ( \"/dashboard.html\" ). setViewName ( \"dashboard\" ); } /** * \u6ce8\u518c\u62e6\u622a\u5668 * @param registry */ @Override public void addInterceptors ( InterceptorRegistry registry ) { // super.addInterceptors(registry); // \u62e6\u622a\u4efb\u610f\u8def\u5f84\u4e0b\u7684\u6240\u6709\u8bf7\u6c42, \u6392\u9664\u8bf7\u6c42 registry . addInterceptor ( new LoginHandlerInterceptor ()) . addPathPatterns ( \"/**\" ) . excludePathPatterns ( \"/index.html\" , \"/\" , \"/user/login\" , \"/static/**\" ); } }; return adapter ; } } Restful CRUD Rest \u98ce\u683c URI\uff1a /\u8d44\u6e90/\u8d44\u6e90\u6807\u8bc6 HTTP \u8bf7\u6c42\u65b9\u5f0f\u533a\u5206\u5bf9\u8d44\u6e90 CRUD \u8bf4\u660e \u666e\u901a CRUD(URI \u533a\u5206\u64cd\u4f5c) RestfulCRUD \u67e5\u8be2 getEmp GET emp \u6dfb\u52a0 addEmp POST emp \u4fee\u6539 updateEmp?id=1 PUT emp/{id} \u5220\u9664 deleteEmp?id=1 DELETE emp/{id} \u67e5\u8be2\u63a5\u53e3\u5b9a\u4e49 \u8bf4\u660e \u8bf7\u6c42\u65b9\u5f0f \u8bf7\u6c42 URI \u67e5\u8be2\u6240\u6709\u5458\u5de5 GET emps \u67e5\u8be2\u67d0\u4e2a\u5458\u5de5 GET emp/{id} \u6dfb\u52a0\u9875\u9762 GET emp \u6dfb\u52a0\u5458\u5de5 POST emp \u4fee\u6539\u9875\u9762 GET emp/{id} \u4fee\u6539\u5458\u5de5 PUT emp \u5220\u9664\u5458\u5de5 DELETE emp/{id} \u5458\u5de5\u5217\u8868-\u516c\u5171\u9875\u62bd\u53d6 \u516c\u5171\u7247\u6bb5\u62bd\u53d6 <!-- 1\u3001\u62bd\u53d6\u516c\u5171\u7247\u6bb5 --> < div th:fragment = \"copy\" > content </ div > <!-- 2\u3001\u5f15\u5165\u516c\u5171\u7247\u6bb5 --> < div th:insert = \"~{footer::copy}\" > content </ div > <!-- 3\u3001\u9ed8\u8ba4\u6548\u679c --> <!-- insert\u529f\u80fd\u7247\u6bb5\u5728div\u6807\u7b7e\u4e2d --> ~ { templateName :: selector } \u6a21\u677f\u540d :: \u9009\u62e9\u5668 ~ { templateName :: fragmentName }\u6a21\u677f\u540d :: \u7247\u6bb5\u540d 3 \u79cd\u65b9\u5f0f\u5f15\u5165\u7247\u6bb5 th : insert \u63d2\u5165 th : replace \u66ff\u6362 th : include \u5f15\u5165\u7247\u6bb5\u5185\u5bb9 \u4f7f\u7528 th : insert \u53ef\u4ee5\u4e0d\u5199 ~ {} \u8f6c\u4e49[[ ~ {}]] \u4e0d\u8f6c\u4e49[ ( ~ {} ) ] \u5f15\u5165\u7247\u6bb5\u65f6\u5019\u4f20\u5165\u53c2\u6570 \u94fe\u63a5\u9ad8\u4eae&\u5217\u8868\u5b8c\u6210 redirect \u91cd\u5b9a\u5411 forward \u8f6c\u53d1 \u65e5\u671f\u683c\u5f0f\u5316 spring . mvc . format . date : yyyy - MM - dd HiddenHttpMethodFilter SpringMVC \u4e2d\u914d\u7f6e HiddenHttpMethodFilter \u9875\u9762\u521b\u5efa\u4e00\u4e2a Post \u8868\u5355 \u521b\u5efa\u4e00\u4e2a input \u9879 name=\"_method\"\uff0c\u503c\u5c31\u662f\u8bf7\u6c42\u65b9\u5f0f < input type = \"hidden\" name = \"_method\" value = \"put\" th:if = \"${emp!=null}\" /> \u6709\u4e9b\u7248\u672c\u53ef\u80fd\u9700\u8981\u914d\u7f6e application.yml spring . mvc . hiddenmethod . filter . enabled = true \u9519\u8bef\u9875\u9762 ErrorMvcAutoConfiguration \u6709\u6a21\u677f\u5f15\u64ce\u7684\u60c5\u51b5\u4e0b error / \u72b6\u6001\u7801 eg : \u7cbe\u786e\u5339\u914d error / 404 . html \u6a21\u7cca\u5339\u914d error / 4 xx . html error / 5 xx . html \u81ea\u5b9a\u4e49\u5f02\u5e38\u5904\u7406 1\u3001\u8fd4\u56de JSON \u6570\u636e package com.example.demo.controller ; import org.springframework.web.bind.annotation.ControllerAdvice ; import org.springframework.web.bind.annotation.ExceptionHandler ; import org.springframework.web.bind.annotation.ResponseBody ; import java.util.HashMap ; import java.util.Map ; @ControllerAdvice public class ExceptionController { @ResponseBody @ExceptionHandler public Map < String , Object > handleException ( Exception e ){ Map < String , Object > map = new HashMap <>(); map . put ( \"code\" , - 1 ); map . put ( \"msg\" , e . getMessage ()); return map ; } } { \"msg\" : \"\u7528\u6237\u4e0d\u5b58\u5728\" , \"code\" : -1 } \u5d4c\u5165\u5f0f Servlet \u5bb9\u5668\u914d\u7f6e\u4fee\u6539 Tomcat \u901a\u7528\u914d\u7f6e # servlet\u914d\u7f6e server.port = 8001 server.context-path = /demo # Tomcat\u914d\u7f6e server.tomcat.uri-encoding = UTF-8 \u6ce8\u518c servlet \u4e09\u5927\u7ec4\u4ef6 Servlet/Filter/Listener 1\u3001Servlet package com.example.demo.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class MyServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { resp . getWriter (). println ( \"MyServlet\" ); } } 2\u3001Filter package com.example.demo.filter ; import javax.servlet.* ; import java.io.IOException ; public class MyFilter implements Filter { @Override public void doFilter ( ServletRequest request , ServletResponse response , FilterChain chain ) throws IOException , ServletException { System . out . println ( \"MyFilter\" ); chain . doFilter ( request , response ); } } 3\u3001Listener package com.example.demo.listener ; import javax.servlet.ServletContextEvent ; import javax.servlet.ServletContextListener ; public class MyListener implements ServletContextListener { @Override public void contextInitialized ( ServletContextEvent sce ) { System . out . println ( \"contextInitialized\" ); } @Override public void contextDestroyed ( ServletContextEvent sce ) { System . out . println ( \"contextDestroyed\" ); } } \u6ce8\u518c\u7ec4\u4ef6 package com.example.demo.config ; import com.example.demo.filter.MyFilter ; import com.example.demo.listener.MyListener ; import com.example.demo.servlet.MyServlet ; import org.springframework.boot.web.servlet.FilterRegistrationBean ; import org.springframework.boot.web.servlet.ServletListenerRegistrationBean ; import org.springframework.boot.web.servlet.ServletRegistrationBean ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import java.util.Arrays ; /** * \u6ce8\u518cServlet/Filter/Listener\u7ec4\u4ef6 */ @Configuration public class MyServletConfig { @Bean public ServletRegistrationBean myServlet (){ ServletRegistrationBean registrationBean = new ServletRegistrationBean (); registrationBean . setServlet ( new MyServlet ()); registrationBean . setUrlMappings ( Arrays . asList ( \"/servlet\" )); return registrationBean ; } @Bean public FilterRegistrationBean myFilter (){ FilterRegistrationBean registrationBean = new FilterRegistrationBean (); registrationBean . setFilter ( new MyFilter ()); registrationBean . setUrlPatterns ( Arrays . asList ( \"/servlet\" )); return registrationBean ; } @Bean public ServletListenerRegistrationBean myListener (){ ServletListenerRegistrationBean registrationBean = new ServletListenerRegistrationBean ( new MyListener ()); return registrationBean ; } } \u8bbf\u95ee http://localhost:8080/servlet \u9ed8\u8ba4\u62e6\u622a: / \u4fee\u6539 server.servletPath \u5176\u4ed6 Servlet \u5bb9\u5668 Tomcat \u9ed8\u8ba4 Jetty \u957f\u8fde\u63a5 Undertow \u4e0d\u652f\u6301 jsp \u5d4c\u5165\u5f0f\u5bb9\u5668 \u5916\u90e8\u5bb9\u5668 jar \u5305\uff1a\u6267\u884c SpringBoot \u4e3b\u7c7b\u7684 main \u65b9\u6cd5\uff0c\u542f\u52a8 IOC \u5bb9\u5668\uff0c\u521b\u5efa\u5d4c\u5165\u5f0f\u7684 Servlet \u5bb9\u5668 war \u5305\uff1a\u542f\u52a8\u670d\u52a1\u5668\uff0c\u670d\u52a1\u5668\u542f\u52a8 SpringBoot\uff0c\u542f\u52a8 IOC \u5bb9\u5668","title":"\u7b2c\u56db\u7ae0 Spring Boot Web \u5f00\u53d1"},{"location":"Java/SpringBoot/\u7b2c\u56db\u7ae0-SpringBootWeb\u5f00\u53d1/#spring-boot-web","text":"","title":"\u7b2c\u56db\u7ae0 Spring Boot Web \u5f00\u53d1"},{"location":"Java/SpringBoot/\u7b2c\u56db\u7ae0-SpringBootWeb\u5f00\u53d1/#1web","text":"https://start.spring.io/ \u521b\u5efa SpringBoot \u5e94\u7528\uff0c\u9009\u4e2d\u9700\u8981\u7684\u6a21\u5757 \u4f7f\u7528 SpringBoot \u81ea\u52a8\u914d\u7f6e \u7f16\u5199\u4e1a\u52a1\u4ee3\u7801 * AutoConfiguration \u81ea\u52a8\u914d\u7f6e\u7ec4\u4ef6 * Properties \u5c01\u88c5\u914d\u7f6e\u6587\u4ef6\u7684\u5185\u5bb9","title":"1\u3001web \u5f00\u53d1\u7b80\u4ecb"},{"location":"Java/SpringBoot/\u7b2c\u56db\u7ae0-SpringBootWeb\u5f00\u53d1/#webjars","text":"1\u3001webjars \u914d\u7f6e\u7c7b\uff1aWebMvcAutoConfiguration webjars \u4ee5 jar \u5305\u7684\u65b9\u5f0f\u5f15\u5165\u9759\u6001\u8d44\u6e90 https://www.webjars.org/ \u8d44\u6e90\u8def\u5f84\u6620\u5c04 / webjars /** => classpath:/META-INF/resources/webjars/ \u6dfb\u52a0 jquery \u4f9d\u8d56 <dependency> <groupId> org.webjars </groupId> <artifactId> jquery </artifactId> <version> 3.5.1 </version> </dependency> \u8bbf\u95ee\u8def\u5f84 /webjars/jquery/3.5.1/jquery.js 2\u3001\u9759\u6001\u8d44\u6e90\u6620\u5c04\u89c4\u5219 \u9759\u6001\u8d44\u6e90\u6587\u4ef6\u5939 classpath: / META-INF / resources / classpath: / resources / classpath: / static / classpath: / public / / \u5f53\u524d\u9879\u76ee\u6839\u8def\u5f84 \u9ed8\u8ba4\u9759\u6001\u6587\u4ef6\u4e0b\u67e5\u627e # \u6b22\u8fce\u9875\u9762 index.html # \u56fe\u6807\u8def\u5f84 favicon.ico \u81ea\u5b9a\u4e49\u9759\u6001\u8d44\u6e90\u6587\u4ef6\u8def\u5f84,\u9ed8\u8ba4\u8d44\u6e90\u8def\u5f84\u5931\u6548 spring . resources . static - locations = classpath : / hello /","title":"webjars&amp;\u9759\u6001\u8d44\u6e90\u6620\u5c04\u89c4\u5219"},{"location":"Java/SpringBoot/\u7b2c\u56db\u7ae0-SpringBootWeb\u5f00\u53d1/#thymeleaf","text":"JSP\u3001Velocity\u3001Thymeleaf\u3001Freemarker \u6a21\u677f\u5f15\u64ce Template ${ name } + Data {\"name\": \"Tom\"} => TemplateEngine => output Thymeleaf \u4f9d\u8d56 <properties> <java.version> 1.8 </java.version> <project.build.sourceEncoding> UTF-8 </project.build.sourceEncoding> <!-- \u5207\u6362 thymeleaf version --> <!-- thymeleaf3 \u9002\u914d layout2 --> <springboot-thymeleaf.version> 2.1.1.RELEASE </springboot-thymeleaf.version> <thymeleaf-layout-dialect.version> 2.0.0 </thymeleaf-layout-dialect.version> </properties> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-thymeleaf </artifactId> <version> ${springboot-thymeleaf.version} </version> </dependency>","title":"\u5f15\u5165 thymeleaf"},{"location":"Java/SpringBoot/\u7b2c\u56db\u7ae0-SpringBootWeb\u5f00\u53d1/#thymeleaf_1","text":"https://www.thymeleaf.org/ \u9ed8\u8ba4\u914d\u7f6e public class ThymeleafProperties { private String prefix = \"classpath:/templates/\" ; private String suffix = \".html\" ; } \u6a21\u677f\u4f7f\u7528\u793a\u4f8b package com.example.demo.controller ; import org.springframework.stereotype.Controller ; import org.springframework.web.bind.annotation.RequestMapping ; import java.util.HashMap ; @Controller public class IndexController { @RequestMapping ( \"/hello\" ) public String hello ( HashMap < String , Object > map ){ map . put ( \"name\" , \"Tom\" ); // \u6a21\u677f\u8def\u5f84 // src/main/resources/templates/about.html return \"hello\" ; } } \u6a21\u677f\uff1a src/main/resources/templates/about.html <!DOCTYPE html> < html lang = \"en\" xmlns:th = \"http://www.thymeleaf.org\" > < head > < meta charset = \"UTF-8\" /> < title > Title </ title > </ head > < body > < h1 > Hello </ h1 > <!-- \u8bbe\u7f6e\u6587\u672c\u5185\u5bb9 --> < div th:text = \"${name}\" ></ div > </ body > </ html > \u8bed\u6cd5\u89c4\u5219 th : \u4efb\u610f html \u5c5e\u6027\uff0c\u7528\u6765\u66ff\u6362\u539f\u751f\u5c5e\u6027\u7684\u503c th : text \u6539\u53d8\u6587\u672c\u5185\u5bb9 ( \u8f6c\u4e49 ) th : utext \u6539\u53d8\u6587\u672c\u5185\u5bb9 ( \u4e0d\u8f6c\u4e49 ) th : attr th : href th : src th : each th : for \u8868\u8fbe\u5f0f ${ } \u53d8\u91cf\u8868\u8fbe\u5f0f \u83b7\u53d6\u53d8\u91cf\u503c \u83b7\u53d6\u53d8\u91cf\u5c5e\u6027 \u8c03\u7528\u65b9\u6cd5 \u5185\u7f6e\u57fa\u672c\u5bf9\u8c61 : #ctx #session... \u5185\u7f6e\u5de5\u5177\u5bf9\u8c61\uff1a * { } \u9009\u62e9\u8868\u8fbe\u5f0f \u914d\u5408th:object\u4f7f\u7528 #{} \u83b7\u53d6\u56fd\u9645\u5316\u5185\u5bb9 @{} \u5b9a\u4e49url ~{} \u7247\u6bb5\u8868\u8fbe\u5f0f \u5b57\u9762\u91cf \u6570\u5b66\u8fd0\u7b97 \u5e03\u5c14\u8fd0\u7b97 \u6bd4\u8f83\u8fd0\u7b97 \u6761\u4ef6\u8fd0\u7b97 \u7279\u6b8a\u64cd\u4f5c \u793a\u4f8b <!--\u6587\u672c\u8f93\u51fa--> < div th:text = \"${name}\" ></ div > <!--\u5faa\u73af\u904d\u5386--> < div th:each = \"pet: ${pets}\" > < div > [[${pet}]] </ div > </ div > <!--\u5faa\u73af\u904d\u5386--> < div th:each = \"pet: ${pets}\" th:text = \"pet\" ></ div >","title":"thymeleaf \u8bed\u6cd5"},{"location":"Java/SpringBoot/\u7b2c\u56db\u7ae0-SpringBootWeb\u5f00\u53d1/#springmvc","text":"SpringBoot \u5bf9 SpringMVC \u9ed8\u8ba4\u914d\u7f6e \u81ea\u52a8\u914d\u7f6e ViewResolver \u89c6\u56fe\u89e3\u6790\u5668 \u6839\u636e\u65b9\u6cd5\u8fd4\u56de\u503c\u7684\u5230\u89c6\u56fe\u5bf9\u8c61\uff08 View \uff09 \u89c6\u56fe\u5bf9\u8c61\u51b3\u5b9a\u5982\u4f55\u6e32\u67d3\u3001\u8f6c\u53d1\u3001\u91cd\u5b9a\u5411 Converter \u7c7b\u578b\u8f6c\u6362\u5668 Formatter \u683c\u5f0f\u5316\u5668 HttpMessageConverters \u8f6c\u6362\u8bf7\u6c42\u54cd\u5e94 MessageCodesResolver \u5b9a\u4e49\u9519\u8bef\u4ee3\u7801\u751f\u6210\u89c4\u5219 WebDataBinder \u6570\u636e\u7ed1\u5b9a\u5668 \u4fee\u6539 SpringBoot \u9ed8\u8ba4\u914d\u7f6e \u4f18\u5148\u4f7f\u7528\u7528\u6237\u914d\u7f6e@Bean/@Component \u5982\u679c\u6ca1\u6709\u624d\u81ea\u52a8\u914d\u7f6e \u6709\u4e9b\u7ec4\u4ef6\u53ef\u4ee5\u6709\u591a\u4e2a eg: ViewResolver \u5c06\u7528\u6237\u914d\u7f6e\u548c\u9ed8\u8ba4\u914d\u7f6e\u7ec4\u5408\u8d77\u6765","title":"SpringMVC \u81ea\u52a8\u914d\u7f6e\u539f\u7406"},{"location":"Java/SpringBoot/\u7b2c\u56db\u7ae0-SpringBootWeb\u5f00\u53d1/#springmvc_1","text":"1\u3001\u6269\u5c55\u914d\u7f6e package com.example.demo.config ; import org.springframework.context.annotation.Configuration ; import org.springframework.web.servlet.config.annotation.ViewControllerRegistry ; import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter ; @Configuration public class CustomVmcConfig extends WebMvcConfigurerAdapter { @Override public void addViewControllers ( ViewControllerRegistry registry ) { // super.addViewControllers(registry); // \u6d4f\u89c8\u5668\u7684\u8bf7\u6c42 /demo \u5230\u89c6\u56fe /hello registry . addViewController ( \"demo\" ). setViewName ( \"hello\" ); } } 2\u3001\u5168\u9762\u63a5\u7ba1 \u589e\u52a0 @EnableWebMvc \u540e\uff0c\u81ea\u52a8\u914d\u7f6e\u5931\u6548 package com.example.demo.config ; import org.springframework.context.annotation.Configuration ; import org.springframework.web.servlet.config.annotation.EnableWebMvc ; import org.springframework.web.servlet.config.annotation.ViewControllerRegistry ; import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter ; @EnableWebMvc @Configuration public class CustomVmcConfig extends WebMvcConfigurerAdapter { @Override public void addViewControllers ( ViewControllerRegistry registry ) { // super.addViewControllers(registry); // \u6d4f\u89c8\u5668\u7684\u8bf7\u6c42 /demo \u5230\u89c6\u56fe /hello registry . addViewController ( \"demo\" ). setViewName ( \"hello\" ); } }","title":"\u6269\u5c55\u4e0e\u5168\u9762\u63a5\u7ba1 SpringMVC"},{"location":"Java/SpringBoot/\u7b2c\u56db\u7ae0-SpringBootWeb\u5f00\u53d1/#_1","text":"\u6a21\u677f\u8d44\u6e90: https://getbootstrap.net/ \u6a21\u677f\u8bed\u6cd5: https://www.thymeleaf.org/ webjars: https://www.webjars.org/ \u76ee\u5f55\u8bbe\u7f6e resources / templates \u6a21\u677f\u6587\u4ef6 static \u9759\u6001\u6587\u4ef6 \u9996\u9875\u8bbe\u7f6e package com.example.demo.config ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.web.servlet.config.annotation.ViewControllerRegistry ; import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter ; @Configuration public class CustomVmcConfig extends WebMvcConfigurerAdapter { // \u8bbe\u7f6e\u9996\u9875\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u8bbf\u95ee public/index.html \u6ca1\u6709\u7ecf\u8fc7\u6a21\u677f\u5f15\u64ce\u5904\u7406 @Bean public WebMvcConfigurerAdapter CustomVmcConfig () { WebMvcConfigurerAdapter adapter = new WebMvcConfigurerAdapter () { @Override public void addViewControllers ( ViewControllerRegistry registry ) { registry . addViewController ( \"/\" ). setViewName ( \"login\" ); registry . addViewController ( \"/index.html\" ). setViewName ( \"login\" ); } }; return adapter ; } }","title":"\u5f15\u5165\u8d44\u6e90"},{"location":"Java/SpringBoot/\u7b2c\u56db\u7ae0-SpringBootWeb\u5f00\u53d1/#_2","text":"\u9ed8\u8ba4\u6839\u636e\u6d4f\u89c8\u5668\u8bed\u8a00\u83b7\u53d6\u5bf9\u5e94\u56fd\u9645\u5316\u4fe1\u606f 1\u3001\u914d\u7f6e\u8bed\u8a00\u6587\u4ef6 resources \u8d44\u6e90\u6587\u4ef6\u5939\u4e0b \u251c\u2500\u2500 i18n \u2502 \u251c\u2500\u2500 login . properties \u2502 \u251c\u2500\u2500 login_en_US . properties \u2502 \u2514\u2500\u2500 login_zh_CN . properties \u9ed8\u8ba4\u914d\u7f6e login.properties login . button = \u767b\u5f55 ~ login . title = \u767b\u5f55 ~ login . username = \u7528\u6237\u540d ~ login . password = \u5bc6\u7801 ~ login . remember = \u8bb0\u4f4f\u6211 ~ \u82f1\u6587\u914d\u7f6e login_en_US.properties login . button = Sign In login . title = Login login . username = UserName login . password = Password login . remember = Remenber Me \u4e2d\u6587\u914d\u7f6e login_zh_CN.properties login . button = \u767b\u5f55 login . title = \u767b\u5f55 login . username = \u7528\u6237\u540d login . password = \u5bc6\u7801 login . remember = \u8bb0\u4f4f\u6211 2\u3001\u914d\u7f6e application.yml spring : messages : basename : i18n . login 3\u3001\u6a21\u677f\u6587\u4ef6\u4e2d\u4f7f\u7528 < button th:text = \"#{login.button}\" ></ button > \u6839\u636e\u6d4f\u89c8\u5668\u8bf7\u6c42\u5934\u8bbe\u7f6e\u8bed\u8a00 GET http :// localhost : 8080 / Accept-Language : en-US , en ; q = 0 . 9 , zh-CN ; q = 0 . 8 , zh ; q = 0 . 7 4\u3001\u81ea\u5b9a\u4e49\u56fd\u9645\u5316\u5904\u7406\u5668 package com.example.demo.component ; import org.springframework.util.StringUtils ; import org.springframework.web.servlet.LocaleResolver ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.util.Locale ; /** * \u533a\u57df\u4fe1\u606f\u89e3\u6790\u5668 * \u81ea\u5b9a\u4e49\u56fd\u9645\u5316\u53c2\u6570\uff0c\u652f\u6301\u94fe\u63a5\u4e0a\u643a\u5e26\u533a\u57df\u4fe1\u606f */ public class MyLocaleResolver implements LocaleResolver { @Override public Locale resolveLocale ( HttpServletRequest request ) { String lang = request . getParameter ( \"lang\" ); Locale locale = Locale . getDefault (); if (! StringUtils . isEmpty ( lang )) { String [] list = lang . split ( \"_\" ); if ( list . length == 2 ) { locale = new Locale ( list [ 0 ], list [ 1 ]); } } return locale ; } @Override public void setLocale ( HttpServletRequest httpServletRequest , HttpServletResponse httpServletResponse , Locale locale ) { } } \u542f\u7528\u81ea\u5b9a\u4e49\u56fd\u9645\u5316\u5904\u7406\u5668 package com.example.demo.config ; import com.example.demo.component.MyLocaleResolver ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.web.servlet.config.annotation.ViewControllerRegistry ; import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter ; /** * \u914d\u7f6e\u9996\u9875\u89c6\u56fe */ @Configuration public class CustomVmcConfig extends WebMvcConfigurerAdapter { @Bean public MyLocaleResolver localeResolver () { return new MyLocaleResolver (); } } \u4f18\u5148\u83b7\u53d6\u67e5\u8be2\u53c2\u6570\u8fd4\u56de\u8bed\u8a00\u8bbe\u7f6e http : // localhost : 8080 /? lang = zh_CN http : // localhost : 8080 /? lang = en_US","title":"\u56fd\u9645\u5316"},{"location":"Java/SpringBoot/\u7b2c\u56db\u7ae0-SpringBootWeb\u5f00\u53d1/#_3","text":"\u5f00\u53d1\u671f\u95f4\u6a21\u677f\u5f15\u64ce\u4fee\u6539\u8981\u5b9e\u65f6\u751f\u6548 \u7981\u7528\u6a21\u677f\u5f15\u64ce\u7f13\u5b58 \u91cd\u65b0\u7f16\u8bd1 <!--\u767b\u5f55\u9519\u8bef\u6d88\u606f\u63d0\u793a--> < p style = \"color: red;\" th:text = \"${msg}\" th:if = \"${not #strings.isEmpty(msg)}\" ></ p > \u62e6\u622a\u5668\u8fdb\u884c\u767b\u5f55\u68c0\u67e5 \u767b\u5f55 package com.example.demo.controller ; import org.springframework.stereotype.Controller ; import org.springframework.util.StringUtils ; import org.springframework.web.bind.annotation.PostMapping ; import org.springframework.web.bind.annotation.RequestParam ; import javax.servlet.http.HttpSession ; import java.util.Map ; @Controller public class LoginController { @PostMapping ( \"/user/login\" ) // \u7b49\u4ef7\u4e8e @RequestMapping(value = \"/user/login\", method = {RequestMethod.POST}) public String login ( @RequestParam ( \"username\" ) String username , @RequestParam ( \"password\" ) String password , Map < String , Object > map , HttpSession session ) { if (! StringUtils . isEmpty ( username ) && \"123\" . equals ( password )) { session . setAttribute ( \"loginUser\" , username ); // \u767b\u5f55\u6210\u529f \u9632\u6b62\u8868\u5355\u91cd\u65b0\u63d0\u4ea4\uff0c\u505a\u4e00\u4e2a\u91cd\u5b9a\u5411 return \"redirect:/dashboard.html\" ; } else { // \u767b\u5f55\u5931\u8d25 map . put ( \"msg\" , \"\u8d26\u53f7\u6216\u5bc6\u7801\u4e0d\u6b63\u786e\" ); return \"login\" ; } } } \u62e6\u622a\u5668 package com.example.demo.component ; import org.springframework.web.servlet.HandlerInterceptor ; import org.springframework.web.servlet.ModelAndView ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; /** * \u767b\u5f55\u68c0\u67e5 */ public class LoginHandlerInterceptor implements HandlerInterceptor { @Override public boolean preHandle ( HttpServletRequest request , HttpServletResponse response , Object handler ) throws Exception { Object loginUser = request . getSession (). getAttribute ( \"loginUser\" ); // \u672a\u767b\u5f55\uff0c\u8fd4\u56de\u767b\u5f55\u9875\u9762 if ( loginUser == null ) { request . setAttribute ( \"msg\" , \"\u6ca1\u6709\u6743\u9650\uff0c\u8bf7\u5148\u767b\u5f55\" ); request . getRequestDispatcher ( \"/index.html\" ). forward ( request , response ); return false ; } // \u5df2\u767b\u5f55\uff0c\u653e\u884c else { return true ; } } @Override public void postHandle ( HttpServletRequest request , HttpServletResponse response , Object handler , ModelAndView modelAndView ) throws Exception { } @Override public void afterCompletion ( HttpServletRequest request , HttpServletResponse response , Object handler , Exception ex ) throws Exception { } } \u6ce8\u518c\u62e6\u622a\u5668 package com.example.demo.config ; import com.example.demo.component.LoginHandlerInterceptor ; import com.example.demo.component.MyLocaleResolver ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.web.servlet.config.annotation.InterceptorRegistry ; import org.springframework.web.servlet.config.annotation.ViewControllerRegistry ; import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter ; /** * \u914d\u7f6e\u9996\u9875\u89c6\u56fe */ @Configuration @SuppressWarnings ( \"all\" ) public class CustomVmcConfig extends WebMvcConfigurerAdapter { // \u8bbe\u7f6e\u9996\u9875\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u8bbf\u95ee public/index.html \u6ca1\u6709\u7ecf\u8fc7\u6a21\u677f\u5f15\u64ce\u5904\u7406 @Bean public WebMvcConfigurerAdapter CustomVmcConfig () { WebMvcConfigurerAdapter adapter = new WebMvcConfigurerAdapter () { /** * \u6ce8\u518c\u89c6\u56fe\u63a7\u5236\u5668 * @param registry */ @Override public void addViewControllers ( ViewControllerRegistry registry ) { registry . addViewController ( \"/\" ). setViewName ( \"login\" ); registry . addViewController ( \"/index.html\" ). setViewName ( \"login\" ); registry . addViewController ( \"/dashboard.html\" ). setViewName ( \"dashboard\" ); } /** * \u6ce8\u518c\u62e6\u622a\u5668 * @param registry */ @Override public void addInterceptors ( InterceptorRegistry registry ) { // super.addInterceptors(registry); // \u62e6\u622a\u4efb\u610f\u8def\u5f84\u4e0b\u7684\u6240\u6709\u8bf7\u6c42, \u6392\u9664\u8bf7\u6c42 registry . addInterceptor ( new LoginHandlerInterceptor ()) . addPathPatterns ( \"/**\" ) . excludePathPatterns ( \"/index.html\" , \"/\" , \"/user/login\" , \"/static/**\" ); } }; return adapter ; } }","title":"\u767b\u9646&amp;\u62e6\u622a\u5668"},{"location":"Java/SpringBoot/\u7b2c\u56db\u7ae0-SpringBootWeb\u5f00\u53d1/#restful-crud","text":"Rest \u98ce\u683c URI\uff1a /\u8d44\u6e90/\u8d44\u6e90\u6807\u8bc6 HTTP \u8bf7\u6c42\u65b9\u5f0f\u533a\u5206\u5bf9\u8d44\u6e90 CRUD \u8bf4\u660e \u666e\u901a CRUD(URI \u533a\u5206\u64cd\u4f5c) RestfulCRUD \u67e5\u8be2 getEmp GET emp \u6dfb\u52a0 addEmp POST emp \u4fee\u6539 updateEmp?id=1 PUT emp/{id} \u5220\u9664 deleteEmp?id=1 DELETE emp/{id} \u67e5\u8be2\u63a5\u53e3\u5b9a\u4e49 \u8bf4\u660e \u8bf7\u6c42\u65b9\u5f0f \u8bf7\u6c42 URI \u67e5\u8be2\u6240\u6709\u5458\u5de5 GET emps \u67e5\u8be2\u67d0\u4e2a\u5458\u5de5 GET emp/{id} \u6dfb\u52a0\u9875\u9762 GET emp \u6dfb\u52a0\u5458\u5de5 POST emp \u4fee\u6539\u9875\u9762 GET emp/{id} \u4fee\u6539\u5458\u5de5 PUT emp \u5220\u9664\u5458\u5de5 DELETE emp/{id}","title":"Restful CRUD"},{"location":"Java/SpringBoot/\u7b2c\u56db\u7ae0-SpringBootWeb\u5f00\u53d1/#-","text":"\u516c\u5171\u7247\u6bb5\u62bd\u53d6 <!-- 1\u3001\u62bd\u53d6\u516c\u5171\u7247\u6bb5 --> < div th:fragment = \"copy\" > content </ div > <!-- 2\u3001\u5f15\u5165\u516c\u5171\u7247\u6bb5 --> < div th:insert = \"~{footer::copy}\" > content </ div > <!-- 3\u3001\u9ed8\u8ba4\u6548\u679c --> <!-- insert\u529f\u80fd\u7247\u6bb5\u5728div\u6807\u7b7e\u4e2d --> ~ { templateName :: selector } \u6a21\u677f\u540d :: \u9009\u62e9\u5668 ~ { templateName :: fragmentName }\u6a21\u677f\u540d :: \u7247\u6bb5\u540d 3 \u79cd\u65b9\u5f0f\u5f15\u5165\u7247\u6bb5 th : insert \u63d2\u5165 th : replace \u66ff\u6362 th : include \u5f15\u5165\u7247\u6bb5\u5185\u5bb9 \u4f7f\u7528 th : insert \u53ef\u4ee5\u4e0d\u5199 ~ {} \u8f6c\u4e49[[ ~ {}]] \u4e0d\u8f6c\u4e49[ ( ~ {} ) ] \u5f15\u5165\u7247\u6bb5\u65f6\u5019\u4f20\u5165\u53c2\u6570 \u94fe\u63a5\u9ad8\u4eae&\u5217\u8868\u5b8c\u6210 redirect \u91cd\u5b9a\u5411 forward \u8f6c\u53d1 \u65e5\u671f\u683c\u5f0f\u5316 spring . mvc . format . date : yyyy - MM - dd","title":"\u5458\u5de5\u5217\u8868-\u516c\u5171\u9875\u62bd\u53d6"},{"location":"Java/SpringBoot/\u7b2c\u56db\u7ae0-SpringBootWeb\u5f00\u53d1/#hiddenhttpmethodfilter","text":"SpringMVC \u4e2d\u914d\u7f6e HiddenHttpMethodFilter \u9875\u9762\u521b\u5efa\u4e00\u4e2a Post \u8868\u5355 \u521b\u5efa\u4e00\u4e2a input \u9879 name=\"_method\"\uff0c\u503c\u5c31\u662f\u8bf7\u6c42\u65b9\u5f0f < input type = \"hidden\" name = \"_method\" value = \"put\" th:if = \"${emp!=null}\" /> \u6709\u4e9b\u7248\u672c\u53ef\u80fd\u9700\u8981\u914d\u7f6e application.yml spring . mvc . hiddenmethod . filter . enabled = true","title":"HiddenHttpMethodFilter"},{"location":"Java/SpringBoot/\u7b2c\u56db\u7ae0-SpringBootWeb\u5f00\u53d1/#_4","text":"ErrorMvcAutoConfiguration \u6709\u6a21\u677f\u5f15\u64ce\u7684\u60c5\u51b5\u4e0b error / \u72b6\u6001\u7801 eg : \u7cbe\u786e\u5339\u914d error / 404 . html \u6a21\u7cca\u5339\u914d error / 4 xx . html error / 5 xx . html \u81ea\u5b9a\u4e49\u5f02\u5e38\u5904\u7406 1\u3001\u8fd4\u56de JSON \u6570\u636e package com.example.demo.controller ; import org.springframework.web.bind.annotation.ControllerAdvice ; import org.springframework.web.bind.annotation.ExceptionHandler ; import org.springframework.web.bind.annotation.ResponseBody ; import java.util.HashMap ; import java.util.Map ; @ControllerAdvice public class ExceptionController { @ResponseBody @ExceptionHandler public Map < String , Object > handleException ( Exception e ){ Map < String , Object > map = new HashMap <>(); map . put ( \"code\" , - 1 ); map . put ( \"msg\" , e . getMessage ()); return map ; } } { \"msg\" : \"\u7528\u6237\u4e0d\u5b58\u5728\" , \"code\" : -1 }","title":"\u9519\u8bef\u9875\u9762"},{"location":"Java/SpringBoot/\u7b2c\u56db\u7ae0-SpringBootWeb\u5f00\u53d1/#servlet","text":"Tomcat \u901a\u7528\u914d\u7f6e # servlet\u914d\u7f6e server.port = 8001 server.context-path = /demo # Tomcat\u914d\u7f6e server.tomcat.uri-encoding = UTF-8","title":"\u5d4c\u5165\u5f0f Servlet \u5bb9\u5668\u914d\u7f6e\u4fee\u6539"},{"location":"Java/SpringBoot/\u7b2c\u56db\u7ae0-SpringBootWeb\u5f00\u53d1/#servlet_1","text":"Servlet/Filter/Listener 1\u3001Servlet package com.example.demo.servlet ; import javax.servlet.ServletException ; import javax.servlet.http.HttpServlet ; import javax.servlet.http.HttpServletRequest ; import javax.servlet.http.HttpServletResponse ; import java.io.IOException ; public class MyServlet extends HttpServlet { @Override protected void doGet ( HttpServletRequest req , HttpServletResponse resp ) throws ServletException , IOException { resp . getWriter (). println ( \"MyServlet\" ); } } 2\u3001Filter package com.example.demo.filter ; import javax.servlet.* ; import java.io.IOException ; public class MyFilter implements Filter { @Override public void doFilter ( ServletRequest request , ServletResponse response , FilterChain chain ) throws IOException , ServletException { System . out . println ( \"MyFilter\" ); chain . doFilter ( request , response ); } } 3\u3001Listener package com.example.demo.listener ; import javax.servlet.ServletContextEvent ; import javax.servlet.ServletContextListener ; public class MyListener implements ServletContextListener { @Override public void contextInitialized ( ServletContextEvent sce ) { System . out . println ( \"contextInitialized\" ); } @Override public void contextDestroyed ( ServletContextEvent sce ) { System . out . println ( \"contextDestroyed\" ); } } \u6ce8\u518c\u7ec4\u4ef6 package com.example.demo.config ; import com.example.demo.filter.MyFilter ; import com.example.demo.listener.MyListener ; import com.example.demo.servlet.MyServlet ; import org.springframework.boot.web.servlet.FilterRegistrationBean ; import org.springframework.boot.web.servlet.ServletListenerRegistrationBean ; import org.springframework.boot.web.servlet.ServletRegistrationBean ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import java.util.Arrays ; /** * \u6ce8\u518cServlet/Filter/Listener\u7ec4\u4ef6 */ @Configuration public class MyServletConfig { @Bean public ServletRegistrationBean myServlet (){ ServletRegistrationBean registrationBean = new ServletRegistrationBean (); registrationBean . setServlet ( new MyServlet ()); registrationBean . setUrlMappings ( Arrays . asList ( \"/servlet\" )); return registrationBean ; } @Bean public FilterRegistrationBean myFilter (){ FilterRegistrationBean registrationBean = new FilterRegistrationBean (); registrationBean . setFilter ( new MyFilter ()); registrationBean . setUrlPatterns ( Arrays . asList ( \"/servlet\" )); return registrationBean ; } @Bean public ServletListenerRegistrationBean myListener (){ ServletListenerRegistrationBean registrationBean = new ServletListenerRegistrationBean ( new MyListener ()); return registrationBean ; } } \u8bbf\u95ee http://localhost:8080/servlet \u9ed8\u8ba4\u62e6\u622a: / \u4fee\u6539 server.servletPath","title":"\u6ce8\u518c servlet \u4e09\u5927\u7ec4\u4ef6"},{"location":"Java/SpringBoot/\u7b2c\u56db\u7ae0-SpringBootWeb\u5f00\u53d1/#servlet_2","text":"Tomcat \u9ed8\u8ba4 Jetty \u957f\u8fde\u63a5 Undertow \u4e0d\u652f\u6301 jsp \u5d4c\u5165\u5f0f\u5bb9\u5668 \u5916\u90e8\u5bb9\u5668 jar \u5305\uff1a\u6267\u884c SpringBoot \u4e3b\u7c7b\u7684 main \u65b9\u6cd5\uff0c\u542f\u52a8 IOC \u5bb9\u5668\uff0c\u521b\u5efa\u5d4c\u5165\u5f0f\u7684 Servlet \u5bb9\u5668 war \u5305\uff1a\u542f\u52a8\u670d\u52a1\u5668\uff0c\u670d\u52a1\u5668\u542f\u52a8 SpringBoot\uff0c\u542f\u52a8 IOC \u5bb9\u5668","title":"\u5176\u4ed6 Servlet \u5bb9\u5668"},{"location":"Java/project/BuyGoods/","text":"\u7535\u5546\u79d2\u6740\u9879\u76ee \u5e94\u7528\u7b80\u4ecb\uff1a \u5546\u54c1\u5217\u8868 \u5546\u54c1\u8be6\u60c5 \u786e\u8ba4\u4e0b\u5355\u5e76\u652f\u4ed8 \u9879\u76ee\u6280\u672f IDEA + Maven + SpringBoot + MyBatis \u521b\u5efa\u9879\u76ee \u4f7f\u7528\u6a21\u677f\uff1a maven - archetype - quickstart \u6dfb\u52a0\u4f9d\u8d56 <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 2.2.2.RELEASE </version> <relativePath/> <!-- lookup parent from repository --> </parent> <dependencies> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> </dependency> </dependencies> \u914d\u7f6e\u7b80\u5355\u7684 web \u670d\u52a1 package org.example ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.EnableAutoConfiguration ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RestController ; // \u5f00\u542fSpring\u81ea\u52a8\u5316\u914d\u7f6e @EnableAutoConfiguration @RestController public class App { @RequestMapping ( \"/\" ) public String index (){ return \"hello spring\" ; } public static void main ( String [] args ) { // \u542f\u52a8Spring\u9879\u76ee SpringApplication . run ( App . class , args ); } } \u4fee\u6539\u9ed8\u8ba4\u914d\u7f6e resources/application.properties server . port = 8090 mybatis . mapperLocation = classpath : mapping /*.xml \u4ee3\u7801\u81ea\u52a8\u751f\u6210 \u4fee\u6539\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> org.example </groupId> <artifactId> flashsale </artifactId> <version> 1.0-SNAPSHOT </version> <name> flashsale </name> <!-- FIXME change it to the project's website --> <url> http://www.example.com </url> <properties> <project.build.sourceEncoding> UTF-8 </project.build.sourceEncoding> <maven.compiler.source> 1.7 </maven.compiler.source> <maven.compiler.target> 1.7 </maven.compiler.target> </properties> <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 2.2.2.RELEASE </version> <relativePath/> <!-- lookup parent from repository --> </parent> <dependencies> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.11 </version> <scope> test </scope> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> </dependency> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.20 </version> </dependency> <!-- \u8fde\u63a5\u6c60--> <dependency> <groupId> com.alibaba </groupId> <artifactId> druid </artifactId> <version> 1.1.3 </version> </dependency> <dependency> <groupId> org.mybatis.spring.boot </groupId> <artifactId> mybatis-spring-boot-starter </artifactId> <version> 1.3.1 </version> </dependency> </dependencies> <build> <pluginManagement> <!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --> <plugins> <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle --> <plugin> <artifactId> maven-clean-plugin </artifactId> <version> 3.1.0 </version> </plugin> <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging --> <plugin> <artifactId> maven-resources-plugin </artifactId> <version> 3.0.2 </version> </plugin> <plugin> <artifactId> maven-compiler-plugin </artifactId> <version> 3.8.0 </version> </plugin> <plugin> <artifactId> maven-surefire-plugin </artifactId> <version> 2.22.1 </version> </plugin> <plugin> <artifactId> maven-jar-plugin </artifactId> <version> 3.0.2 </version> </plugin> <plugin> <artifactId> maven-install-plugin </artifactId> <version> 2.5.2 </version> </plugin> <plugin> <artifactId> maven-deploy-plugin </artifactId> <version> 2.8.2 </version> </plugin> <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle --> <plugin> <artifactId> maven-site-plugin </artifactId> <version> 3.7.1 </version> </plugin> <plugin> <artifactId> maven-project-info-reports-plugin </artifactId> <version> 3.0.0 </version> </plugin> <plugin> <groupId> org.mybatis.generator </groupId> <artifactId> mybatis-generator-maven-plugin </artifactId> <version> 1.3.5 </version> <dependencies> <!--\u8981\u60f3\u52a0\u8f7dmybatis-generator-core \u5148\u628apluginManagement\u6807\u7b7e\u5220\u9664\uff0c \u7b49\u5728\u672c\u5730\u4ed3\u5e93\u4e2d\u4e0b\u8f7d\u5230generator\u8fd9\u4e2a\u5305\u540e\uff0c \u5728\u628apluginManagement\u8fd9\u5c42\u6dfb\u52a0\u4e0a--> <dependency> <groupId> org.mybatis.generator </groupId> <artifactId> mybatis-generator-core </artifactId> <version> 1.3.5 </version> </dependency> <!--\u81ea\u52a8\u4ee3\u7801\u751f\u6210\u5931\u8d25\uff0c\u4fee\u6539mysql\u8fde\u63a5jar\u5305\u7684\u7248\u672c\u4e3a5.1.30\u6b63\u5e38--> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.20 </version> </dependency> </dependencies> <executions> <execution> <id> mybatis generator </id> <phase> package </phase> <goals> <goal> generator </goal> </goals> </execution> </executions> <configuration> <!--\u5141\u8bb8\u79fb\u52a8\u751f\u6210\u7684\u6587\u4ef6--> <verbose> true </verbose> <!--\u5141\u8bb8\u81ea\u52a8\u8986\u76d6\u6587\u4ef6--> <overwrite> true </overwrite> <configurationFile> src/main/resources/mybatis-generator.xml </configurationFile> </configuration> </plugin> </plugins> </pluginManagement> </build> </project> \u6570\u636e\u5e93\u5b57\u7b26\u96c6 utf-8 utf8-unicode-ci \u7528\u6237\u4fe1\u606f\u548c\u5bc6\u7801\u5206\u5f00\u5b58\u50a8 CREATE TABLE ` user_info ` ( ` id ` int ( 11 ) NOT NULL AUTO_INCREMENT , ` name ` varchar ( 64 ) COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' , ` gender ` tinyint ( 4 ) NOT NULL DEFAULT '0' COMMENT '0\u4ee3\u8868\u7537\u6027\uff0c1\u4ee3\u8868\u5973\u6027' , ` age ` int ( 11 ) NOT NULL DEFAULT '0' , ` telphone ` varchar ( 255 ) COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' , ` register_mode ` varchar ( 255 ) COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '\u6ce8\u518c\u65b9\u5f0f:byweixin,byphone,byweibo' , ` third_party_id ` varchar ( 64 ) COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' , PRIMARY KEY ( ` id ` ), UNIQUE KEY ` telphone_unique_index ` ( ` telphone ` ) USING BTREE ) ENGINE = InnoDB AUTO_INCREMENT = 28 DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_general_ci CREATE TABLE ` user_password ` ( ` id ` int ( 11 ) NOT NULL AUTO_INCREMENT , ` encrypt_password ` varchar ( 128 ) COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' , ` user_id ` int ( 11 ) NOT NULL DEFAULT '0' , PRIMARY KEY ( ` id ` ) ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_general_ci \u4ee3\u7801\u81ea\u52a8\u751f\u6210 src/main/resources/mybatis-generator.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE generatorConfiguration PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\" \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\"> <generatorConfiguration> <!--\u6570\u636e\u5e93\u8fde\u63a5--> <context id= \"DB2Tables\" targetRuntime= \"MyBatis3\" > <!--\u6ce8\u91ca--> <commentGenerator> <property name= \"suppressAllComments\" value= \"true\" /> <property name= \"suppressDate\" value= \"true\" /> </commentGenerator> <!--\u6570\u636e\u5e93\u8fde\u63a5\u5730\u5740\u53ca\u8d26\u53f7\u5bc6\u7801--> <jdbcConnection driverClass= \"com.mysql.jdbc.Driver\" connectionURL= \"jdbc:mysql://127.0.0.1:3306/data\" userId= \"root\" password= \"123456\" > </jdbcConnection> <javaTypeResolver > <property name= \"forceBigDecimals\" value= \"false\" /> </javaTypeResolver> <!--\u751f\u6210DataObject\u7c7b\u5b58\u653e\u4f4d\u7f6e--> <javaModelGenerator targetPackage= \"org.example.dataobject\" targetProject= \"src/main/java\" > <!--\u662f\u5426\u5bf9model\u6dfb\u52a0\u6784\u9020\u51fd\u6570--> <property name= \"constructorBased\" value= \"false\" /> <!--\u662f\u5426\u5141\u8bb8\u5b50\u5305--> <property name= \"enableSubPackages\" value= \"true\" /> <!--\u5efa\u7acb\u7684model\u5bf9\u8c61\u662f\u5426\u4e0d\u53ef\u53d8\uff0c\u4e5f\u5c31\u662f\u751f\u6210\u7684model\u6ca1\u6709setter\u65b9\u6cd5--> <property name= \"immutable\" value= \"false\" /> <property name= \"trimStrings\" value= \"true\" /> </javaModelGenerator> <!--\u751f\u6210\u6620\u5c04\u6587\u4ef6\u5b58\u653e\u4f4d\u7f6e--> <sqlMapGenerator targetPackage= \"mapping\" targetProject= \"src/main/resources\" > <property name= \"enableSubPackages\" value= \"true\" /> </sqlMapGenerator> <!--\u751f\u6210Dao\u7c7b\u7684\u5b58\u653e\u4f4d\u7f6e--> <!-- \u5ba2\u6237\u7aef\u4ee3\u7801,\u751f\u6210\u6613\u4e8e\u4f7f\u7528\u7684\u6b63\u5bf9Model\u5bf9\u8c61\u548cXML\u914d\u7f6e\u6587\u4ef6\u7684\u4ee3\u7801 type=\"ANNOTATEDMAPPER\", \u751f\u6210Java Model\u548c\u57fa\u4e8e\u6ce8\u89e3\u7684Mapper\u5bf9\u8c61 type=\"MIXEDMAPPER\", \u751f\u6210\u57fa\u4e8e\u6ce8\u89e3\u7684Java Model\u548c\u76f8\u5e94\u7684Mapper\u5bf9\u8c61 type=\"XMLMAPPER\", \u751f\u6210SQLMap XML\u6587\u4ef6\u548c\u72ec\u7acb\u7684Mapper\u63a5\u53e3 --> <javaClientGenerator type= \"XMLMAPPER\" targetPackage= \"org.example.dao\" targetProject= \"src/main/java\" > <property name= \"enableSubPackages\" value= \"true\" /> </javaClientGenerator> <!--\u751f\u6210\u5bf9\u5e94\u8868\u53ca\u7c7b\u540d--> <!--<table schema=\"mybatis\" tableName=\"user_info\" domainObjectName=\"UserDO\" enableInsert=\"true\" enableSelectByExample=\"false\" enableDeleteByPrimaryKey=\"false\" enableDeleteByExample=\"false\" enableCountByExample=\"false\" enableUpdateByExample=\"false\" enableSelectByPrimaryKey=\"true\" enableUpdateByPrimaryKey=\"true\"/>--> <!--\u907f\u514dexample\u590d\u6742\u6620\u5c04\u7684sql\u67e5\u8be2--> <table tableName= \"user_info\" domainObjectName= \"UserDao\" enableCountByExample= \"false\" enableUpdateByExample= \"false\" enableDeleteByExample= \"false\" enableSelectByExample= \"false\" selectByExampleQueryId= \"false\" enableInsert= \"true\" enableDeleteByPrimaryKey= \"false\" /> <table tableName= \"user_password\" domainObjectName= \"UserPasswordDao\" enableCountByExample= \"false\" enableUpdateByExample= \"false\" enableDeleteByExample= \"false\" enableSelectByExample= \"false\" selectByExampleQueryId= \"false\" enableInsert= \"true\" enableDeleteByPrimaryKey= \"false\" /> </context> </generatorConfiguration> \u6267\u884c\u547d\u4ee4\uff0c\u751f\u6210 dao mybatis - generator : generate src/main/java/org/example/App.java package org.example ; import org.example.dao.UserDaoMapper ; import org.example.dataobject.UserDao ; import org.mybatis.spring.annotation.MapperScan ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RestController ; /** * Hello world! * */ // \u5f00\u542fSpring\u81ea\u52a8\u5316\u914d\u7f6e // @EnableAutoConfiguration @SpringBootApplication ( scanBasePackages = { \"org.example\" }) @RestController @MapperScan ( \"org.example.dao\" ) public class App { @Autowired private UserDaoMapper userDaoMapper ; @RequestMapping ( \"/\" ) public String index (){ UserDao userDao = userDaoMapper . selectByPrimaryKey ( 1 ); if ( userDao == null ){ return \"\u7528\u6237\u5bf9\u8c61\u4e0d\u5b58\u5728\" ; } else { return userDao . getName (); } } public static void main ( String [] args ) { SpringApplication . run ( App . class , args ); } } \u542f\u52a8\u670d\u52a1\u5c31\u53ef\u4ee5\u8fdb\u884c\u6570\u636e\u67e5\u8be2\u64cd\u4f5c\u4e86 \u95ee\u9898\uff1a Unknown system variable 'query_cache_size' \u5347\u7ea7 mysql \u8fde\u63a5\u9a71\u52a8\u7248\u672c <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.20 </version> </dependency> MVC \u914d\u7f6e daoobject \u6570\u636e\u5e93\u8868\u6620\u5c04 service/model \u9886\u57df\u6a21\u578b controller/viewobject UI \u6570\u636e \u4e1a\u52a1\u9700\u6c42\u5904\u7406\uff1a \u5148\u8bbe\u8ba1\u9886\u57df\u6a21\u578b","title":"\u7535\u5546\u79d2\u6740\u9879\u76ee"},{"location":"Java/project/BuyGoods/#_1","text":"\u5e94\u7528\u7b80\u4ecb\uff1a \u5546\u54c1\u5217\u8868 \u5546\u54c1\u8be6\u60c5 \u786e\u8ba4\u4e0b\u5355\u5e76\u652f\u4ed8 \u9879\u76ee\u6280\u672f IDEA + Maven + SpringBoot + MyBatis","title":"\u7535\u5546\u79d2\u6740\u9879\u76ee"},{"location":"Java/project/BuyGoods/#_2","text":"\u4f7f\u7528\u6a21\u677f\uff1a maven - archetype - quickstart \u6dfb\u52a0\u4f9d\u8d56 <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 2.2.2.RELEASE </version> <relativePath/> <!-- lookup parent from repository --> </parent> <dependencies> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> </dependency> </dependencies> \u914d\u7f6e\u7b80\u5355\u7684 web \u670d\u52a1 package org.example ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.EnableAutoConfiguration ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RestController ; // \u5f00\u542fSpring\u81ea\u52a8\u5316\u914d\u7f6e @EnableAutoConfiguration @RestController public class App { @RequestMapping ( \"/\" ) public String index (){ return \"hello spring\" ; } public static void main ( String [] args ) { // \u542f\u52a8Spring\u9879\u76ee SpringApplication . run ( App . class , args ); } } \u4fee\u6539\u9ed8\u8ba4\u914d\u7f6e resources/application.properties server . port = 8090 mybatis . mapperLocation = classpath : mapping /*.xml","title":"\u521b\u5efa\u9879\u76ee"},{"location":"Java/project/BuyGoods/#_3","text":"\u4fee\u6539\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> org.example </groupId> <artifactId> flashsale </artifactId> <version> 1.0-SNAPSHOT </version> <name> flashsale </name> <!-- FIXME change it to the project's website --> <url> http://www.example.com </url> <properties> <project.build.sourceEncoding> UTF-8 </project.build.sourceEncoding> <maven.compiler.source> 1.7 </maven.compiler.source> <maven.compiler.target> 1.7 </maven.compiler.target> </properties> <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 2.2.2.RELEASE </version> <relativePath/> <!-- lookup parent from repository --> </parent> <dependencies> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.11 </version> <scope> test </scope> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> </dependency> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.20 </version> </dependency> <!-- \u8fde\u63a5\u6c60--> <dependency> <groupId> com.alibaba </groupId> <artifactId> druid </artifactId> <version> 1.1.3 </version> </dependency> <dependency> <groupId> org.mybatis.spring.boot </groupId> <artifactId> mybatis-spring-boot-starter </artifactId> <version> 1.3.1 </version> </dependency> </dependencies> <build> <pluginManagement> <!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --> <plugins> <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle --> <plugin> <artifactId> maven-clean-plugin </artifactId> <version> 3.1.0 </version> </plugin> <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging --> <plugin> <artifactId> maven-resources-plugin </artifactId> <version> 3.0.2 </version> </plugin> <plugin> <artifactId> maven-compiler-plugin </artifactId> <version> 3.8.0 </version> </plugin> <plugin> <artifactId> maven-surefire-plugin </artifactId> <version> 2.22.1 </version> </plugin> <plugin> <artifactId> maven-jar-plugin </artifactId> <version> 3.0.2 </version> </plugin> <plugin> <artifactId> maven-install-plugin </artifactId> <version> 2.5.2 </version> </plugin> <plugin> <artifactId> maven-deploy-plugin </artifactId> <version> 2.8.2 </version> </plugin> <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle --> <plugin> <artifactId> maven-site-plugin </artifactId> <version> 3.7.1 </version> </plugin> <plugin> <artifactId> maven-project-info-reports-plugin </artifactId> <version> 3.0.0 </version> </plugin> <plugin> <groupId> org.mybatis.generator </groupId> <artifactId> mybatis-generator-maven-plugin </artifactId> <version> 1.3.5 </version> <dependencies> <!--\u8981\u60f3\u52a0\u8f7dmybatis-generator-core \u5148\u628apluginManagement\u6807\u7b7e\u5220\u9664\uff0c \u7b49\u5728\u672c\u5730\u4ed3\u5e93\u4e2d\u4e0b\u8f7d\u5230generator\u8fd9\u4e2a\u5305\u540e\uff0c \u5728\u628apluginManagement\u8fd9\u5c42\u6dfb\u52a0\u4e0a--> <dependency> <groupId> org.mybatis.generator </groupId> <artifactId> mybatis-generator-core </artifactId> <version> 1.3.5 </version> </dependency> <!--\u81ea\u52a8\u4ee3\u7801\u751f\u6210\u5931\u8d25\uff0c\u4fee\u6539mysql\u8fde\u63a5jar\u5305\u7684\u7248\u672c\u4e3a5.1.30\u6b63\u5e38--> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.20 </version> </dependency> </dependencies> <executions> <execution> <id> mybatis generator </id> <phase> package </phase> <goals> <goal> generator </goal> </goals> </execution> </executions> <configuration> <!--\u5141\u8bb8\u79fb\u52a8\u751f\u6210\u7684\u6587\u4ef6--> <verbose> true </verbose> <!--\u5141\u8bb8\u81ea\u52a8\u8986\u76d6\u6587\u4ef6--> <overwrite> true </overwrite> <configurationFile> src/main/resources/mybatis-generator.xml </configurationFile> </configuration> </plugin> </plugins> </pluginManagement> </build> </project> \u6570\u636e\u5e93\u5b57\u7b26\u96c6 utf-8 utf8-unicode-ci \u7528\u6237\u4fe1\u606f\u548c\u5bc6\u7801\u5206\u5f00\u5b58\u50a8 CREATE TABLE ` user_info ` ( ` id ` int ( 11 ) NOT NULL AUTO_INCREMENT , ` name ` varchar ( 64 ) COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' , ` gender ` tinyint ( 4 ) NOT NULL DEFAULT '0' COMMENT '0\u4ee3\u8868\u7537\u6027\uff0c1\u4ee3\u8868\u5973\u6027' , ` age ` int ( 11 ) NOT NULL DEFAULT '0' , ` telphone ` varchar ( 255 ) COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' , ` register_mode ` varchar ( 255 ) COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' COMMENT '\u6ce8\u518c\u65b9\u5f0f:byweixin,byphone,byweibo' , ` third_party_id ` varchar ( 64 ) COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' , PRIMARY KEY ( ` id ` ), UNIQUE KEY ` telphone_unique_index ` ( ` telphone ` ) USING BTREE ) ENGINE = InnoDB AUTO_INCREMENT = 28 DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_general_ci CREATE TABLE ` user_password ` ( ` id ` int ( 11 ) NOT NULL AUTO_INCREMENT , ` encrypt_password ` varchar ( 128 ) COLLATE utf8mb4_general_ci NOT NULL DEFAULT '' , ` user_id ` int ( 11 ) NOT NULL DEFAULT '0' , PRIMARY KEY ( ` id ` ) ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_general_ci \u4ee3\u7801\u81ea\u52a8\u751f\u6210 src/main/resources/mybatis-generator.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE generatorConfiguration PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\" \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\"> <generatorConfiguration> <!--\u6570\u636e\u5e93\u8fde\u63a5--> <context id= \"DB2Tables\" targetRuntime= \"MyBatis3\" > <!--\u6ce8\u91ca--> <commentGenerator> <property name= \"suppressAllComments\" value= \"true\" /> <property name= \"suppressDate\" value= \"true\" /> </commentGenerator> <!--\u6570\u636e\u5e93\u8fde\u63a5\u5730\u5740\u53ca\u8d26\u53f7\u5bc6\u7801--> <jdbcConnection driverClass= \"com.mysql.jdbc.Driver\" connectionURL= \"jdbc:mysql://127.0.0.1:3306/data\" userId= \"root\" password= \"123456\" > </jdbcConnection> <javaTypeResolver > <property name= \"forceBigDecimals\" value= \"false\" /> </javaTypeResolver> <!--\u751f\u6210DataObject\u7c7b\u5b58\u653e\u4f4d\u7f6e--> <javaModelGenerator targetPackage= \"org.example.dataobject\" targetProject= \"src/main/java\" > <!--\u662f\u5426\u5bf9model\u6dfb\u52a0\u6784\u9020\u51fd\u6570--> <property name= \"constructorBased\" value= \"false\" /> <!--\u662f\u5426\u5141\u8bb8\u5b50\u5305--> <property name= \"enableSubPackages\" value= \"true\" /> <!--\u5efa\u7acb\u7684model\u5bf9\u8c61\u662f\u5426\u4e0d\u53ef\u53d8\uff0c\u4e5f\u5c31\u662f\u751f\u6210\u7684model\u6ca1\u6709setter\u65b9\u6cd5--> <property name= \"immutable\" value= \"false\" /> <property name= \"trimStrings\" value= \"true\" /> </javaModelGenerator> <!--\u751f\u6210\u6620\u5c04\u6587\u4ef6\u5b58\u653e\u4f4d\u7f6e--> <sqlMapGenerator targetPackage= \"mapping\" targetProject= \"src/main/resources\" > <property name= \"enableSubPackages\" value= \"true\" /> </sqlMapGenerator> <!--\u751f\u6210Dao\u7c7b\u7684\u5b58\u653e\u4f4d\u7f6e--> <!-- \u5ba2\u6237\u7aef\u4ee3\u7801,\u751f\u6210\u6613\u4e8e\u4f7f\u7528\u7684\u6b63\u5bf9Model\u5bf9\u8c61\u548cXML\u914d\u7f6e\u6587\u4ef6\u7684\u4ee3\u7801 type=\"ANNOTATEDMAPPER\", \u751f\u6210Java Model\u548c\u57fa\u4e8e\u6ce8\u89e3\u7684Mapper\u5bf9\u8c61 type=\"MIXEDMAPPER\", \u751f\u6210\u57fa\u4e8e\u6ce8\u89e3\u7684Java Model\u548c\u76f8\u5e94\u7684Mapper\u5bf9\u8c61 type=\"XMLMAPPER\", \u751f\u6210SQLMap XML\u6587\u4ef6\u548c\u72ec\u7acb\u7684Mapper\u63a5\u53e3 --> <javaClientGenerator type= \"XMLMAPPER\" targetPackage= \"org.example.dao\" targetProject= \"src/main/java\" > <property name= \"enableSubPackages\" value= \"true\" /> </javaClientGenerator> <!--\u751f\u6210\u5bf9\u5e94\u8868\u53ca\u7c7b\u540d--> <!--<table schema=\"mybatis\" tableName=\"user_info\" domainObjectName=\"UserDO\" enableInsert=\"true\" enableSelectByExample=\"false\" enableDeleteByPrimaryKey=\"false\" enableDeleteByExample=\"false\" enableCountByExample=\"false\" enableUpdateByExample=\"false\" enableSelectByPrimaryKey=\"true\" enableUpdateByPrimaryKey=\"true\"/>--> <!--\u907f\u514dexample\u590d\u6742\u6620\u5c04\u7684sql\u67e5\u8be2--> <table tableName= \"user_info\" domainObjectName= \"UserDao\" enableCountByExample= \"false\" enableUpdateByExample= \"false\" enableDeleteByExample= \"false\" enableSelectByExample= \"false\" selectByExampleQueryId= \"false\" enableInsert= \"true\" enableDeleteByPrimaryKey= \"false\" /> <table tableName= \"user_password\" domainObjectName= \"UserPasswordDao\" enableCountByExample= \"false\" enableUpdateByExample= \"false\" enableDeleteByExample= \"false\" enableSelectByExample= \"false\" selectByExampleQueryId= \"false\" enableInsert= \"true\" enableDeleteByPrimaryKey= \"false\" /> </context> </generatorConfiguration> \u6267\u884c\u547d\u4ee4\uff0c\u751f\u6210 dao mybatis - generator : generate src/main/java/org/example/App.java package org.example ; import org.example.dao.UserDaoMapper ; import org.example.dataobject.UserDao ; import org.mybatis.spring.annotation.MapperScan ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.SpringApplication ; import org.springframework.boot.autoconfigure.SpringBootApplication ; import org.springframework.web.bind.annotation.RequestMapping ; import org.springframework.web.bind.annotation.RestController ; /** * Hello world! * */ // \u5f00\u542fSpring\u81ea\u52a8\u5316\u914d\u7f6e // @EnableAutoConfiguration @SpringBootApplication ( scanBasePackages = { \"org.example\" }) @RestController @MapperScan ( \"org.example.dao\" ) public class App { @Autowired private UserDaoMapper userDaoMapper ; @RequestMapping ( \"/\" ) public String index (){ UserDao userDao = userDaoMapper . selectByPrimaryKey ( 1 ); if ( userDao == null ){ return \"\u7528\u6237\u5bf9\u8c61\u4e0d\u5b58\u5728\" ; } else { return userDao . getName (); } } public static void main ( String [] args ) { SpringApplication . run ( App . class , args ); } } \u542f\u52a8\u670d\u52a1\u5c31\u53ef\u4ee5\u8fdb\u884c\u6570\u636e\u67e5\u8be2\u64cd\u4f5c\u4e86 \u95ee\u9898\uff1a Unknown system variable 'query_cache_size' \u5347\u7ea7 mysql \u8fde\u63a5\u9a71\u52a8\u7248\u672c <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.20 </version> </dependency>","title":"\u4ee3\u7801\u81ea\u52a8\u751f\u6210"},{"location":"Java/project/BuyGoods/#mvc","text":"daoobject \u6570\u636e\u5e93\u8868\u6620\u5c04 service/model \u9886\u57df\u6a21\u578b controller/viewobject UI \u6570\u636e \u4e1a\u52a1\u9700\u6c42\u5904\u7406\uff1a \u5148\u8bbe\u8ba1\u9886\u57df\u6a21\u578b","title":"MVC \u914d\u7f6e"},{"location":"JavaScript/","text":"javascript aixos bootstrap \u6a21\u6001\u6846 css \u9884\u5904\u7406\u5668-sass\uff08scss\uff09 es6 egg.js egg.js \u5b9e\u4f8b javascript \u6d4f\u89c8\u5668 javascript \u7684\u51fd\u6570 javascript \u5feb\u901f\u5165\u95e8 javascript \u6807\u51c6\u5bf9\u8c61 javascript \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b promise requirejs \u548c\u81ea\u52a8\u6253\u5305 vant vue vue \u4e2d\u7236\u7ec4\u4ef6\u4e0e\u5b50\u7ec4\u4ef6\u4e4b\u95f4\u7684\u901a\u4fe1 axios \u5728\u9879\u76ee\u4e2d\u7684\u5e94\u7528 chrome-mac chrome es5+es6 node.js vue-cli vuex \u524d\u7aef\u6280\u5de7 \u524d\u7aef\u7b14\u8bb0\uff08\u6742\uff09 typescript VUE \u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT","title":"JavaScript"},{"location":"JavaScript/#javascript","text":"aixos bootstrap \u6a21\u6001\u6846 css \u9884\u5904\u7406\u5668-sass\uff08scss\uff09 es6 egg.js egg.js \u5b9e\u4f8b javascript \u6d4f\u89c8\u5668 javascript \u7684\u51fd\u6570 javascript \u5feb\u901f\u5165\u95e8 javascript \u6807\u51c6\u5bf9\u8c61 javascript \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b promise requirejs \u548c\u81ea\u52a8\u6253\u5305 vant vue vue \u4e2d\u7236\u7ec4\u4ef6\u4e0e\u5b50\u7ec4\u4ef6\u4e4b\u95f4\u7684\u901a\u4fe1 axios \u5728\u9879\u76ee\u4e2d\u7684\u5e94\u7528 chrome-mac chrome es5+es6 node.js vue-cli vuex \u524d\u7aef\u6280\u5de7 \u524d\u7aef\u7b14\u8bb0\uff08\u6742\uff09 typescript VUE \u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT","title":"javascript"},{"location":"JavaScript/Aixos/","text":"Aixos 1\u3001Aixos\u7279\u6027 \uff081\uff09\u652f\u6301Promise API \uff082\uff09\u62e6\u622a\u8bf7\u6c42\u548c\u54cd\u5e94 \uff083\uff09\u88c5\u6362\u8bf7\u6c42\u6570\u636e\u548c\u54cd\u5e94\u6570\u636e \uff084\uff09\u53d6\u6d88\u8bf7\u6c42 \uff085\uff09\u81ea\u52a8\u8f6c\u6362JSON\u6570\u636e \uff086\uff09\u5ba2\u6237\u7aef\u652f\u6301\u9632\u5fa1XSRF 2\u3001Axios\u57fa\u7840\u7528\u6cd5 get post put\u7b49\u8bf7\u6c42\u65b9\u6cd5 3\u3001Axios\u8fdb\u9636\u7528\u6cd5 \u5b9e\u4f8b \u914d\u7f6e \u62e6\u622a\u5668 \u53d6\u6d88\u8bf7\u6c42 4\u3001Axios\u8fdb\u4e00\u6b65\u5c01\u88c5 Axios\u57fa\u7840\u7528\u6cd5 \u6587\u6863\uff1ahttps://www.npmjs.com/package/axios 1\u3001axios\u8bf7\u6c42\u65b9\u6cd5 get \u83b7\u53d6\u6570\u636e post \u63d0\u4ea4\u6570\u636e\uff08\u8868\u5355\u63d0\u4ea4 + \u6587\u4ef6\u4e0a\u4f20\uff09 put \u66f4\u65b0\u6570\u636e\uff08\u6240\u6709\u6570\u636e\u63a8\u9001\u5230\u540e\u7aef\uff09 patch \u66f4\u65b0\u6570\u636e\uff08\u53ea\u5c06\u4fee\u6539\u7684\u6570\u636e\u63a8\u9001\u5230\u540e\u7aef\uff09 delete \u5220\u9664\u6570\u636e 2\u3001\u9879\u76ee\u73af\u5883\u642d\u5efa # \u5b89\u88c5vue $ npm install - g @vue / cli --registry=https://registry.npm.taobao.org $ npm install - g serve $ vue --version # 3.9.3 $ npm uninstall - g @vue / cli # \u5378\u8f7d $ vue create hello - world # \u521b\u5efa\u9879\u76ee \uff08 1 \uff09 \u9009\u62e9\u81ea\u5b9a\u4e49 \uff0c \u589e\u52a0\u4ee5\u4e0b\u4e24\u4e2a\u9009\u9879 router css processer \uff08 2 \uff09 \u9009\u62e9\u9ed8\u8ba4\u914d\u7f6e\u540e \uff0c \u53ef\u4ee5\u81ea\u5b9a\u4e49\u6dfb\u52a0\u4ee5\u4e0b3\u4e2a\u63d2\u4ef6 $ vue add @vue / eslint # \u5b89\u88c5\u63d2\u4ef6 $ vue add router $ vue add vuex $ cd hello - world $ npm run serve # \u542f\u52a8\u9879\u76ee $ npm run build # \u6253\u5305\u538b\u7f29 # - s \u53c2\u6570\u7684\u610f\u601d\u662f\u5c06\u5176\u67b6\u8bbe\u5728 Single - Page Application \u6a21\u5f0f\u4e0b # \u8fd9\u4e2a\u6a21\u5f0f\u4f1a\u5904\u7406\u5373\u5c06\u63d0\u5230\u7684\u8def\u7531\u95ee\u9898 serve - s dist \u5b89\u88c5axios npm install axios 3\u3001\u8def\u7531\u5f15\u5165 // \u65b9\u5f0f\u4e00 // \u4e0d\u7ba1\u6709\u6ca1\u6709\u8bbf\u95ee\u90fd\u52a0\u8f7d import Home from './views/Home.vue' component : Home // \u65b9\u5f0f\u4e8c // \u8bbf\u95ee\u65f6\u624d\u52a0\u8f7d\uff0c\u5f02\u6b65\u52a0\u8f7d\uff0c\u61d2\u52a0\u8f7d component : () => import ( './views/Home.vue' ) 4\u3001axios\u5728vue\u9879\u76ee\u4e2d\u4f7f\u7528\u5b9e\u4f8b import Axios from \"axios\" ; export default { name : \"mydata\" , created () { let data = { name : \"Tom\" }; /** * GET * /getData.json?name=Tom */ Axios . get ( \"/getData.json\" , { params : data }). then ( response => { console . log ( response ); }); /** * POST */ // Content-Type: application/json Axios . post ( \"/PostJsonData.json\" , data ). then ( response => { console . log ( response ); }); // Content-Type: multipart/form-data let formData = new FormData (); for ( let key in data ) { formData . append ( key , data [ key ]); } Axios . post ( \"/PostFormData.json\" , formData ). then ( response => { console . log ( response ); }); /** * PUT * Content-Type: application/json */ Axios . put ( \"/PutData.json\" , data ). then ( response => { console . log ( response ); }); /** * PATCH * Content-Type: application/json */ Axios . patch ( \"/PatchData.json\" , data ). then ( response => { console . log ( response ); }); /** * DELETE */ // /DeleteData.json?name=Tom Axios . delete ( \"/DeleteData.json\" , { params : data }). then ( response => { console . log ( response ); }); // Content-Type: application/json Axios . delete ( \"/DeleteData.json\" , { data : data }). then ( response => { console . log ( response ); }); /** * Axios */ Axios ({ url : \"/url\" , method : \"GET\" , params : data , // url \u53c2\u6570 data : data // \u8bf7\u6c42\u4f53\u53c2\u6570 }). then ( response => { console . log ( response ); }); } }; 5\u3001\u5e76\u53d1\u8bf7\u6c42 \u540c\u65f6\u8fdb\u884c\u591a\u4e2a\u8bf7\u6c42\uff0c\u5e76\u7edf\u4e00\u5904\u7406\u8fd4\u56de\u503c /** * \u5e76\u53d1\u8bf7\u6c42 */ Axios . all ([ Axios . get ( \"/data.json\" ), Axios . get ( \"/city.json\" ) ]). then ( Axios . spread (( dataRes , cityRes ) => { console . log ( dataRes , cityRes ); }) ); axios\u8fdb\u9636\u7528\u6cd5 1\u3001axios\u5b9e\u4f8b \u540e\u7aef\u63a5\u53e3\u5730\u5740\u6709\u591a\u4e2a\uff0c\u5e76\u4e14\u8d85\u65f6\u65f6\u957f\u4e0d\u4e00\u6837 \u4ee3\u7801\u5b9e\u4f8b import axios from \"axios\" ; export default { name : \"axiosDemo\" , created () { let instance = axios . create ({ baseURL : \"http://localhost:8080\" , timeout : 1000 // 1s }); instance . get ( \"/data.json\" ). then ( response => { console . log ( response ); }); } }; 2\u3001axios\u914d\u7f6e\u53c2\u6570 \u53c2\u6570 \u8bf4\u660e \u793a\u4f8b baseURL \u8bf7\u6c42\u7684\u57df\u540d\uff0c\u57fa\u672c\u5730\u5740 \"http://localhost:8080\" timeout \u8bf7\u6c42\u8d85\u65f6\u65f6\u957f\uff0c\u6beb\u79d2 1000 url \u8bf7\u6c42\u8def\u5f84 \"/data.json\" method \u8bf7\u6c42\u65b9\u6cd5 \"get/post/put/patch/delete\" headers \u8bf7\u6c42\u5934 {\"token\": \"\"} params url\u53c2\u6570 {} data body\u53c2\u6570 {} (1) axios\u5168\u5c40\u914d\u7f6e axios . defaults . baseURL = \"http://localhost:8080\" ; axios . defaults . timeout = 1000 ; (2) axios\u5b9e\u4f8b\u914d\u7f6e let instance = axios . create (); instance . defaults . timeout = 2000 ; (3) axios\u8bf7\u6c42\u914d\u7f6e instance . get ( \"data.json\" , { timeout : 3000 }); 3\u3001\u5b9e\u9645\u5f00\u53d1\u793a\u4f8b \u6709\u4e24\u4e2a\u8bf7\u6c42\u63a5\u53e3 http://localhost:8081 http://localhost:8082 let instance1 = axios . create ({ baseURL : \"http://localhost:8081\" , timeout : 1000 }); let instance2 = axios . create ({ baseURL : \"http://localhost:8082\" , timeout : 2000 }); /** \u7528\u5230\u7684\u53c2\u6570 * baseURL\u3001timeout\u3001method\u3001params */ instance1 . get ( \"/data.json\" , { params : { \"name\" : \"Tom\" } }). then ( response => {} ); /** \u7528\u5230\u7684\u53c2\u6570 * baseURL\u3001timeout\u3001method */ instance2 . get ( \"/data.json\" , { timeout : 5000 // \u91cd\u65b0\u8d4b\u503c }). then ( response => {} ); 4\u3001axios\u62e6\u622a\u5668 \u62e6\u622a\u5668\uff1a\u5728\u8bf7\u4f60\u53bb\u6216\u54cd\u5e94\u88ab\u5904\u7406\u524d\u62e6\u622a\u5b83\u4eec \uff081\uff09\u8bf7\u6c42\u62e6\u622a\u5668 axios . interceptors . request . use ( config => { // \u5728\u8bf7\u6c42\u53d1\u9001\u524d\u5904\u7406 return config ; }, err => { // \u5728\u8bf7\u6c42\u9519\u8bef\u65f6\u5019\u5904\u7406 return Promise . reject ( err ); }); \uff082\uff09\u54cd\u5e94\u62e6\u622a\u5668 axios . interceptors . response . use ( res => { // \u5728\u8bf7\u6c42\u6210\u529f\u5bf9\u54cd\u5e94\u6570\u636e\u5904\u7406 return config ; }, err => { // \u5728\u54cd\u5e94\u9519\u8bef\u65f6\u5019\u5904\u7406 return Promise . reject ( err ); }); (3)\u53d6\u6d88\u62e6\u622a\u5668 let interceptors = axios . interceptors . request . use ( config => { config . headers = { auth : true }; return config ; }); axios . interceptors . request . eject ( interceptors ); \u4ee3\u7801\u5b9e\u4f8b /** * \u4e0d\u9700\u8981\u767b\u5f55\u7684\u63a5\u53e3 */ let newInstance = axios . create ({}); /** * \u767b\u5f55\u72b6\u6001 token */ let instance = axios . create ({}); instance . interceptors . request . use ( config => { config . headers . token = \"token\" ; return config ; }); /** * \u79fb\u52a8\u5f00\u53d1 */ let phoneInstance = axios . create ({}); // \u8bf7\u6c42\u524d\u663e\u793a\u5f39\u6846 phoneInstance . interceptors . request . use ({ config => { $ ( \"#model\" ). show (); return config ; } }); // \u8bf7\u6c42\u540e\u9690\u85cf\u5f39\u6846 phoneInstance . interceptors . response . use ({ res => { $ ( \"#model\" ). hide (); return res ; } }) 5\u3001axios\u9519\u8bef\u5904\u7406 axios . interceptors . request . use ( config => { return config ; }, err => { return Promise . reject ( err ); }); axios . interceptors . response . use ( res => { return config ; }, err => { return Promise . reject ( err ); }); axios . get ( \"/data.json\" ). then ( res => { // \u8bf7\u6c42\u6210\u529f } ). catch ( err => { // \u8bf7\u6c42\u9519\u8bef }) // \u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6dfb\u52a0\u7edf\u4e00\u7684\u9519\u8bef\u5904\u7406 let instance = axios . create ({}); instance . interceptors . request . use ( config => { return config ; }, err => { // \u8bf7\u6c42\u9519\u8bef\uff0c\u4e00\u822chttp\u72b6\u6001\u7801\u4ee54\u5f00\u5934\uff0c401\u8d85\u65f6\uff0c404 not find $ ( \"#model\" ). show (); setTimeout (() = { $ ( \"#model\" ). hide (); }, 2000 ); return Promise . reject ( err ); }); instance . interceptors . response . use ( res => { return res ; }, err => { // \u54cd\u5e94\u9519\u8bef\uff0c\u4e00\u822chttp\u72b6\u6001\u7801\u4ee55\u5f00\u5934\uff0c500\u7cfb\u7edf\u9519\u8bef\uff0c502\u7cfb\u7edf\u91cd\u542f $ ( \"#model\" ). show (); setTimeout (() = { $ ( \"#model\" ). hide (); }, 2000 ); return Promise . reject ( err ); }); instance . get ( \"/data.json\" ). then ( res =>{ }). catch ( err =>{ }) 6\u3001axios\u53d6\u6d88\u8bf7\u6c42 \u53d6\u6d88\u6b63\u5728\u8fdb\u884c\u7684http\u8bf7\u6c42 \u4f7f\u7528\u60c5\u51b5\uff1a\u5546\u57ce 3-5\u79d2 let source = axios . CancelToken . source (); axios . get ( \"/data.json\" , { CancelToken : source . token }). then ( res =>{ }). catch ( err =>{ }); // \u53d6\u6d88\u8bf7\u6c42 message\u53ef\u9009 source . cancel ( \"cancel http\" );","title":"Aixos"},{"location":"JavaScript/Aixos/#aixos","text":"1\u3001Aixos\u7279\u6027 \uff081\uff09\u652f\u6301Promise API \uff082\uff09\u62e6\u622a\u8bf7\u6c42\u548c\u54cd\u5e94 \uff083\uff09\u88c5\u6362\u8bf7\u6c42\u6570\u636e\u548c\u54cd\u5e94\u6570\u636e \uff084\uff09\u53d6\u6d88\u8bf7\u6c42 \uff085\uff09\u81ea\u52a8\u8f6c\u6362JSON\u6570\u636e \uff086\uff09\u5ba2\u6237\u7aef\u652f\u6301\u9632\u5fa1XSRF 2\u3001Axios\u57fa\u7840\u7528\u6cd5 get post put\u7b49\u8bf7\u6c42\u65b9\u6cd5 3\u3001Axios\u8fdb\u9636\u7528\u6cd5 \u5b9e\u4f8b \u914d\u7f6e \u62e6\u622a\u5668 \u53d6\u6d88\u8bf7\u6c42 4\u3001Axios\u8fdb\u4e00\u6b65\u5c01\u88c5","title":"Aixos"},{"location":"JavaScript/Aixos/#axios","text":"\u6587\u6863\uff1ahttps://www.npmjs.com/package/axios 1\u3001axios\u8bf7\u6c42\u65b9\u6cd5 get \u83b7\u53d6\u6570\u636e post \u63d0\u4ea4\u6570\u636e\uff08\u8868\u5355\u63d0\u4ea4 + \u6587\u4ef6\u4e0a\u4f20\uff09 put \u66f4\u65b0\u6570\u636e\uff08\u6240\u6709\u6570\u636e\u63a8\u9001\u5230\u540e\u7aef\uff09 patch \u66f4\u65b0\u6570\u636e\uff08\u53ea\u5c06\u4fee\u6539\u7684\u6570\u636e\u63a8\u9001\u5230\u540e\u7aef\uff09 delete \u5220\u9664\u6570\u636e 2\u3001\u9879\u76ee\u73af\u5883\u642d\u5efa # \u5b89\u88c5vue $ npm install - g @vue / cli --registry=https://registry.npm.taobao.org $ npm install - g serve $ vue --version # 3.9.3 $ npm uninstall - g @vue / cli # \u5378\u8f7d $ vue create hello - world # \u521b\u5efa\u9879\u76ee \uff08 1 \uff09 \u9009\u62e9\u81ea\u5b9a\u4e49 \uff0c \u589e\u52a0\u4ee5\u4e0b\u4e24\u4e2a\u9009\u9879 router css processer \uff08 2 \uff09 \u9009\u62e9\u9ed8\u8ba4\u914d\u7f6e\u540e \uff0c \u53ef\u4ee5\u81ea\u5b9a\u4e49\u6dfb\u52a0\u4ee5\u4e0b3\u4e2a\u63d2\u4ef6 $ vue add @vue / eslint # \u5b89\u88c5\u63d2\u4ef6 $ vue add router $ vue add vuex $ cd hello - world $ npm run serve # \u542f\u52a8\u9879\u76ee $ npm run build # \u6253\u5305\u538b\u7f29 # - s \u53c2\u6570\u7684\u610f\u601d\u662f\u5c06\u5176\u67b6\u8bbe\u5728 Single - Page Application \u6a21\u5f0f\u4e0b # \u8fd9\u4e2a\u6a21\u5f0f\u4f1a\u5904\u7406\u5373\u5c06\u63d0\u5230\u7684\u8def\u7531\u95ee\u9898 serve - s dist \u5b89\u88c5axios npm install axios 3\u3001\u8def\u7531\u5f15\u5165 // \u65b9\u5f0f\u4e00 // \u4e0d\u7ba1\u6709\u6ca1\u6709\u8bbf\u95ee\u90fd\u52a0\u8f7d import Home from './views/Home.vue' component : Home // \u65b9\u5f0f\u4e8c // \u8bbf\u95ee\u65f6\u624d\u52a0\u8f7d\uff0c\u5f02\u6b65\u52a0\u8f7d\uff0c\u61d2\u52a0\u8f7d component : () => import ( './views/Home.vue' ) 4\u3001axios\u5728vue\u9879\u76ee\u4e2d\u4f7f\u7528\u5b9e\u4f8b import Axios from \"axios\" ; export default { name : \"mydata\" , created () { let data = { name : \"Tom\" }; /** * GET * /getData.json?name=Tom */ Axios . get ( \"/getData.json\" , { params : data }). then ( response => { console . log ( response ); }); /** * POST */ // Content-Type: application/json Axios . post ( \"/PostJsonData.json\" , data ). then ( response => { console . log ( response ); }); // Content-Type: multipart/form-data let formData = new FormData (); for ( let key in data ) { formData . append ( key , data [ key ]); } Axios . post ( \"/PostFormData.json\" , formData ). then ( response => { console . log ( response ); }); /** * PUT * Content-Type: application/json */ Axios . put ( \"/PutData.json\" , data ). then ( response => { console . log ( response ); }); /** * PATCH * Content-Type: application/json */ Axios . patch ( \"/PatchData.json\" , data ). then ( response => { console . log ( response ); }); /** * DELETE */ // /DeleteData.json?name=Tom Axios . delete ( \"/DeleteData.json\" , { params : data }). then ( response => { console . log ( response ); }); // Content-Type: application/json Axios . delete ( \"/DeleteData.json\" , { data : data }). then ( response => { console . log ( response ); }); /** * Axios */ Axios ({ url : \"/url\" , method : \"GET\" , params : data , // url \u53c2\u6570 data : data // \u8bf7\u6c42\u4f53\u53c2\u6570 }). then ( response => { console . log ( response ); }); } }; 5\u3001\u5e76\u53d1\u8bf7\u6c42 \u540c\u65f6\u8fdb\u884c\u591a\u4e2a\u8bf7\u6c42\uff0c\u5e76\u7edf\u4e00\u5904\u7406\u8fd4\u56de\u503c /** * \u5e76\u53d1\u8bf7\u6c42 */ Axios . all ([ Axios . get ( \"/data.json\" ), Axios . get ( \"/city.json\" ) ]). then ( Axios . spread (( dataRes , cityRes ) => { console . log ( dataRes , cityRes ); }) );","title":"Axios\u57fa\u7840\u7528\u6cd5"},{"location":"JavaScript/Aixos/#axios_1","text":"1\u3001axios\u5b9e\u4f8b \u540e\u7aef\u63a5\u53e3\u5730\u5740\u6709\u591a\u4e2a\uff0c\u5e76\u4e14\u8d85\u65f6\u65f6\u957f\u4e0d\u4e00\u6837 \u4ee3\u7801\u5b9e\u4f8b import axios from \"axios\" ; export default { name : \"axiosDemo\" , created () { let instance = axios . create ({ baseURL : \"http://localhost:8080\" , timeout : 1000 // 1s }); instance . get ( \"/data.json\" ). then ( response => { console . log ( response ); }); } }; 2\u3001axios\u914d\u7f6e\u53c2\u6570 \u53c2\u6570 \u8bf4\u660e \u793a\u4f8b baseURL \u8bf7\u6c42\u7684\u57df\u540d\uff0c\u57fa\u672c\u5730\u5740 \"http://localhost:8080\" timeout \u8bf7\u6c42\u8d85\u65f6\u65f6\u957f\uff0c\u6beb\u79d2 1000 url \u8bf7\u6c42\u8def\u5f84 \"/data.json\" method \u8bf7\u6c42\u65b9\u6cd5 \"get/post/put/patch/delete\" headers \u8bf7\u6c42\u5934 {\"token\": \"\"} params url\u53c2\u6570 {} data body\u53c2\u6570 {} (1) axios\u5168\u5c40\u914d\u7f6e axios . defaults . baseURL = \"http://localhost:8080\" ; axios . defaults . timeout = 1000 ; (2) axios\u5b9e\u4f8b\u914d\u7f6e let instance = axios . create (); instance . defaults . timeout = 2000 ; (3) axios\u8bf7\u6c42\u914d\u7f6e instance . get ( \"data.json\" , { timeout : 3000 }); 3\u3001\u5b9e\u9645\u5f00\u53d1\u793a\u4f8b \u6709\u4e24\u4e2a\u8bf7\u6c42\u63a5\u53e3 http://localhost:8081 http://localhost:8082 let instance1 = axios . create ({ baseURL : \"http://localhost:8081\" , timeout : 1000 }); let instance2 = axios . create ({ baseURL : \"http://localhost:8082\" , timeout : 2000 }); /** \u7528\u5230\u7684\u53c2\u6570 * baseURL\u3001timeout\u3001method\u3001params */ instance1 . get ( \"/data.json\" , { params : { \"name\" : \"Tom\" } }). then ( response => {} ); /** \u7528\u5230\u7684\u53c2\u6570 * baseURL\u3001timeout\u3001method */ instance2 . get ( \"/data.json\" , { timeout : 5000 // \u91cd\u65b0\u8d4b\u503c }). then ( response => {} ); 4\u3001axios\u62e6\u622a\u5668 \u62e6\u622a\u5668\uff1a\u5728\u8bf7\u4f60\u53bb\u6216\u54cd\u5e94\u88ab\u5904\u7406\u524d\u62e6\u622a\u5b83\u4eec \uff081\uff09\u8bf7\u6c42\u62e6\u622a\u5668 axios . interceptors . request . use ( config => { // \u5728\u8bf7\u6c42\u53d1\u9001\u524d\u5904\u7406 return config ; }, err => { // \u5728\u8bf7\u6c42\u9519\u8bef\u65f6\u5019\u5904\u7406 return Promise . reject ( err ); }); \uff082\uff09\u54cd\u5e94\u62e6\u622a\u5668 axios . interceptors . response . use ( res => { // \u5728\u8bf7\u6c42\u6210\u529f\u5bf9\u54cd\u5e94\u6570\u636e\u5904\u7406 return config ; }, err => { // \u5728\u54cd\u5e94\u9519\u8bef\u65f6\u5019\u5904\u7406 return Promise . reject ( err ); }); (3)\u53d6\u6d88\u62e6\u622a\u5668 let interceptors = axios . interceptors . request . use ( config => { config . headers = { auth : true }; return config ; }); axios . interceptors . request . eject ( interceptors ); \u4ee3\u7801\u5b9e\u4f8b /** * \u4e0d\u9700\u8981\u767b\u5f55\u7684\u63a5\u53e3 */ let newInstance = axios . create ({}); /** * \u767b\u5f55\u72b6\u6001 token */ let instance = axios . create ({}); instance . interceptors . request . use ( config => { config . headers . token = \"token\" ; return config ; }); /** * \u79fb\u52a8\u5f00\u53d1 */ let phoneInstance = axios . create ({}); // \u8bf7\u6c42\u524d\u663e\u793a\u5f39\u6846 phoneInstance . interceptors . request . use ({ config => { $ ( \"#model\" ). show (); return config ; } }); // \u8bf7\u6c42\u540e\u9690\u85cf\u5f39\u6846 phoneInstance . interceptors . response . use ({ res => { $ ( \"#model\" ). hide (); return res ; } }) 5\u3001axios\u9519\u8bef\u5904\u7406 axios . interceptors . request . use ( config => { return config ; }, err => { return Promise . reject ( err ); }); axios . interceptors . response . use ( res => { return config ; }, err => { return Promise . reject ( err ); }); axios . get ( \"/data.json\" ). then ( res => { // \u8bf7\u6c42\u6210\u529f } ). catch ( err => { // \u8bf7\u6c42\u9519\u8bef }) // \u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6dfb\u52a0\u7edf\u4e00\u7684\u9519\u8bef\u5904\u7406 let instance = axios . create ({}); instance . interceptors . request . use ( config => { return config ; }, err => { // \u8bf7\u6c42\u9519\u8bef\uff0c\u4e00\u822chttp\u72b6\u6001\u7801\u4ee54\u5f00\u5934\uff0c401\u8d85\u65f6\uff0c404 not find $ ( \"#model\" ). show (); setTimeout (() = { $ ( \"#model\" ). hide (); }, 2000 ); return Promise . reject ( err ); }); instance . interceptors . response . use ( res => { return res ; }, err => { // \u54cd\u5e94\u9519\u8bef\uff0c\u4e00\u822chttp\u72b6\u6001\u7801\u4ee55\u5f00\u5934\uff0c500\u7cfb\u7edf\u9519\u8bef\uff0c502\u7cfb\u7edf\u91cd\u542f $ ( \"#model\" ). show (); setTimeout (() = { $ ( \"#model\" ). hide (); }, 2000 ); return Promise . reject ( err ); }); instance . get ( \"/data.json\" ). then ( res =>{ }). catch ( err =>{ }) 6\u3001axios\u53d6\u6d88\u8bf7\u6c42 \u53d6\u6d88\u6b63\u5728\u8fdb\u884c\u7684http\u8bf7\u6c42 \u4f7f\u7528\u60c5\u51b5\uff1a\u5546\u57ce 3-5\u79d2 let source = axios . CancelToken . source (); axios . get ( \"/data.json\" , { CancelToken : source . token }). then ( res =>{ }). catch ( err =>{ }); // \u53d6\u6d88\u8bf7\u6c42 message\u53ef\u9009 source . cancel ( \"cancel http\" );","title":"axios\u8fdb\u9636\u7528\u6cd5"},{"location":"JavaScript/Bootstrap\u6a21\u6001\u6846/","text":"< html lang = \"en\" > < head > < title > Document </ title > <!-- 1\u3001\u5f15\u5165\u5fc5\u8981\u7684\u6587\u4ef6 --> < link rel = \"stylesheet\" href = \"https://cdn.bootcss.com/twitter-bootstrap/3.3.7/css/bootstrap.min.css\" > < script src = \"https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js\" ></ script > < script src = \"https://cdn.bootcss.com/twitter-bootstrap/3.3.7/js/bootstrap.min.js\" ></ script > </ head > < body > < h2 > \u521b\u5efa\u6a21\u6001\u6846\uff08Modal\uff09 </ h2 > <!-- 2\u3001\u6309\u94ae\u89e6\u53d1\u6a21\u6001\u6846 --> < button class = \"btn btn-primary btn-lg\" data-toggle = \"modal\" data-target = \"#myModal\" > \u70b9\u51fb\u5f39\u51fa\u6a21\u6001\u6846 </ button > <!-- 3\u3001\u6a21\u6001\u6846\uff08Modal\uff09 --> < div class = \"modal fade\" id = \"myModal\" tabindex = \"-1\" role = \"dialog\" aria-labelledby = \"myModalLabel\" aria-hidden = \"true\" > < div class = \"modal-dialog\" > < div class = \"modal-content\" > < div class = \"modal-header\" > < button type = \"button\" class = \"close\" data-dismiss = \"modal\" aria-hidden = \"true\" > &times; </ button > < h4 class = \"modal-title\" id = \"myModalTitle\" > \u6a21\u6001\u6846\uff08Modal\uff09\u6807\u9898 </ h4 > </ div > < div class = \"modal-body\" id = \"myModalBody\" > \u5728\u8fd9\u91cc\u6dfb\u52a0\u4e00\u4e9b\u6587\u672c </ div > < div class = \"modal-footer\" > < button type = \"button\" class = \"btn btn-default\" data-dismiss = \"modal\" > \u53d6\u6d88 </ button > < a type = \"button\" href = \"https://www.baidu.com/\" class = \"btn btn-primary\" id = \"myModalAction\" > \u786e\u5b9a </ a > </ div > </ div > </ div > </ div > </ body > </ html >","title":"Bootstrap\u6a21\u6001\u6846"},{"location":"JavaScript/CSS\u9884\u5904\u7406\u5668-Sass:SCSS/","text":"CSS \u9884\u5904\u7406\u5668-Sass\uff08SCSS\uff09 Sass \u548c SCSS \u4e0d\u540c\u4e4b\u5904\uff1a 1\u3001\u6587\u4ef6\u6269\u5c55\u540d\u4e0d\u540c 2\u3001\u8bed\u6cd5\u4e66\u5199\u65b9\u5f0f\u4e0d\u540c \uff081\uff09Sass \u7f29\u8fdb\u5f0f \uff082\uff09SCSS \u7c7b\u4f3c CSS \u8bed\u6cd5 Sass \u8bed\u6cd5 $ font - stack : Helvetica , sans - serif // \u5b9a\u4e49\u53d8\u91cf $ primary - color : # 333 // \u5b9a\u4e49\u53d8\u91cf body font : 100 % $ font - stack color : $ primary - color SCSS \u8bed\u6cd5 $ font-stack : Helvetica , sans-serif ; $ primary-color : # 333 ; body { font : 100 % $ font - stack ; color : $ primary-color ; }","title":"CSS\u9884\u5904\u7406\u5668 Sass:SCSS"},{"location":"JavaScript/CSS\u9884\u5904\u7406\u5668-Sass:SCSS/#sass-scss","text":"\u4e0d\u540c\u4e4b\u5904\uff1a 1\u3001\u6587\u4ef6\u6269\u5c55\u540d\u4e0d\u540c 2\u3001\u8bed\u6cd5\u4e66\u5199\u65b9\u5f0f\u4e0d\u540c \uff081\uff09Sass \u7f29\u8fdb\u5f0f \uff082\uff09SCSS \u7c7b\u4f3c CSS \u8bed\u6cd5 Sass \u8bed\u6cd5 $ font - stack : Helvetica , sans - serif // \u5b9a\u4e49\u53d8\u91cf $ primary - color : # 333 // \u5b9a\u4e49\u53d8\u91cf body font : 100 % $ font - stack color : $ primary - color SCSS \u8bed\u6cd5 $ font-stack : Helvetica , sans-serif ; $ primary-color : # 333 ; body { font : 100 % $ font - stack ; color : $ primary-color ; }","title":"Sass \u548c SCSS"},{"location":"JavaScript/Chrome \u6d4f\u89c8\u5668/","text":"JavaScript \u6559\u7a0b https://wangdoc.com/javascript/index.html Chrome \u6d4f\u89c8\u5668 \u63a7\u5236\u53f0\uff1a Option + Command + J \u5f00\u53d1\u8005\u5de5\u5177\uff1a Option + Command + I \u6267\u884c\u4ee3\u7801\uff1aEnter \u4ee3\u7801\u6362\u884c\uff1aShift + Enter \u53d1\u5c55\u5386\u7a0b XMLHttpRequest \u5141\u8bb8 JavaScript \u53d1\u51fa HTTP \u8bf7\u6c42 JSON\u53d6\u4ee3XML Dojo \u6846\u67b6\u4e3a\u4e0d\u540c\u6d4f\u89c8\u5668\u63d0\u4f9b\u4e86\u540c\u4e00\u63a5\u53e3 Ajax \u65b9\u6cd5\uff08Asynchronous JavaScript and XML\uff09 jQuery \u64cd\u4f5c\u7f51\u9875 DOM V8 \u7f16\u8bd1\u5668 Node.js \u670d\u52a1\u5668\u7aef\u7f16\u7a0b CoffeeScript \u8bed\u6cd5\u8981\u6bd4 JavaScript \u7b80\u6d01 PhoneGap \u7528\u4e8e\u8de8\u5e73\u53f0\u7684\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1 Chrome OS \u4ee5\u6d4f\u89c8\u5668\u4e3a\u57fa\u7840\u53d1\u5c55\u6210\u7684\u64cd\u4f5c\u7cfb\u7edf NPM\u3001BackboneJS \u548c RequireJS \u8fdb\u5165\u6a21\u5757\u5316\u5f00\u53d1\u7684\u65f6\u4ee3 Google Dart\u8bed\u8a00 \u5355\u9875\u9762\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\uff08single-page app framework\uff09AngularJS\u3001Ember \u5fae\u8f6fTypeScript asm.js WinJS JavaScript \u7684 Windows \u5e93 Facebook React Native Angular \u53ef\u4ee5\u7528\u6765\u5f00\u53d1\u624b\u673a App Google Polymer ECMAScript 6 WebAssembly \u4e2d\u95f4\u7801\u683c\u5f0f ECMAScript \u548c JavaScript \u7684\u5173\u7cfb \u524d\u8005\u662f\u540e\u8005\u7684\u89c4\u683c\uff0c\u540e\u8005\u662f\u524d\u8005\u7684\u4e00\u79cd\u5b9e\u73b0 \u53d8\u91cf \u8bed\u53e5\u548c\u8868\u8fbe\u5f0f\u7684\u533a\u522b \u8bed\u53e5\u4e3b\u8981\u4e3a\u4e86\u8fdb\u884c\u67d0\u79cd\u64cd\u4f5c\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u4e0d\u9700\u8981\u8fd4\u56de\u503c\uff1b \u8868\u8fbe\u5f0f\u5219\u662f\u4e3a\u4e86\u5f97\u5230\u8fd4\u56de\u503c \u53d8\u91cf\u662f\u5bf9\u201c\u503c\u201d\u7684\u5177\u540d\u5f15\u7528 \u53d8\u91cf\u63d0\u5347\uff08hoisting\uff09 JavaScript \u5f15\u64ce\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f\uff0c\u5148\u89e3\u6790\u4ee3\u7801\uff0c\u83b7\u53d6\u6240\u6709\u88ab\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u7136\u540e\u518d\u4e00\u884c\u4e00\u884c\u5730\u8fd0\u884c\u3002 \u8fd9\u9020\u6210\u7684\u7ed3\u679c\uff0c\u5c31\u662f\u6240\u6709\u7684\u53d8\u91cf\u7684\u58f0\u660e\u8bed\u53e5\uff0c\u90fd\u4f1a\u88ab\u63d0\u5347\u5230\u4ee3\u7801\u7684\u5934\u90e8 console . log ( a ); // undefined var a = 1 ; \u5bf9\u4e8evar\u547d\u4ee4\u6765\u8bf4\uff0cJavaScript \u7684\u533a\u5757\u4e0d\u6784\u6210\u5355\u72ec\u7684\u4f5c\u7528\u57df\uff08scope\uff09 { var a = 1 ; } console . log ( a ); // 1 \u8d4b\u503c\u8868\u8fbe\u5f0f\uff08=\uff09 \u4e25\u683c\u76f8\u7b49\u8fd0\u7b97\u7b26\uff08===\uff09 \u76f8\u7b49\u8fd0\u7b97\u7b26\uff08==\uff09 \u57fa\u672c\u6570\u636e\u7c7b\u578b 6\u79cd \u6570\u503c\uff08number\uff09 \u5b57\u7b26\u4e32\uff08string\uff09 \u5e03\u5c14\u503c\uff08boolean\uff09 \u5bf9\u8c61\uff08object\uff09: \u72ed\u4e49\u7684\u5bf9\u8c61\uff08object\uff09\u3001\u6570\u7ec4\uff08array\uff09\u3001\u51fd\u6570\uff08function\uff09 \u672a\u5b9a\u4e49\uff08undefined\uff09 \u7a7a\u503c\uff08null\uff09 \u67e5\u770b\u503c\u7c7b\u578b typeof instanceof Object.prototype.toString \u5e03\u5c14\u503c \u5e03\u5c14\u503cfalse: undefined null false 0 NaN \"\"\u6216''\uff08\u7a7a\u5b57\u7b26\u4e32\uff09 \u5e03\u5c14\u503ctrue\uff1a \u7a7a\u6570\u7ec4\uff08[]\uff09\u548c\u7a7a\u5bf9\u8c61\uff08{}\uff09 \u6570\u503c JavaScript \u5185\u90e8\uff0c\u6240\u6709\u6570\u5b57\u90fd\u662f\u4ee564\u4f4d\u6d6e\u70b9\u6570\u5f62\u5f0f\u50a8\u5b58\uff0c\u5373\u4f7f\u6574\u6570\u4e5f\u662f\u5982\u6b64 JavaScript \u5bf915\u4f4d\u7684\u5341\u8fdb\u5236\u6570\u90fd\u53ef\u4ee5\u7cbe\u786e\u5904\u7406\u3002 NaN \u201c\u975e\u6570\u5b57\u201d\uff08Not a Number\uff09\u552f\u4e00\u4e0d\u7b49\u4e8e\u81ea\u8eab\u7684\u503c Infinity \u201c\u65e0\u7a77\u201d \u7c7b\u578b\u8f6c\u6362\uff0c\u8fdb\u5236\u8f6c\u6362 parseInt() parseFloat() isNaN() isFinite() \u5b57\u7b26\u4e32 \u7ea6\u5b9a JavaScript \u8bed\u8a00\u7684\u5b57\u7b26\u4e32\u53ea\u4f7f\u7528\u5355\u5f15\u53f7 \u5b57\u7b26\u4e32\u53ef\u4ee5\u88ab\u89c6\u4e3a\u5b57\u7b26\u6570\u7ec4 base64 atob() //ASCII to Base64 btoa() //Base64 to ASCII \u4e0d\u9002\u5408\u975e ASCII \u7801\u7684\u5b57\u7b26 function b64Encode ( str ) { return btoa ( encodeURIComponent ( str )); } function b64Decode ( str ) { return decodeURIComponent ( atob ( str )); } \u5bf9\u8c61 \u5224\u65ad\u4e00\u4e0b\uff0c\u67d0\u4e2a\u5c5e\u6027\u662f\u5426\u4e3a\u5bf9\u8c61\u81ea\u8eab\u7684\u5c5e\u6027 var person = { name : '\u8001\u5f20' }; for ( var key in person ) { if ( person . hasOwnProperty ( key )) { console . log ( key ); } } \u51fd\u6570 \u51fd\u6570\u7684\u8868\u8fbe\u5f0f\u9700\u8981\u5728\u8bed\u53e5\u7684\u7ed3\u5c3e\u52a0\u4e0a\u5206\u53f7\uff0c\u8868\u793a\u8bed\u53e5\u7ed3\u675f\u3002 \u800c\u51fd\u6570\u7684\u58f0\u660e\u5728\u7ed3\u5c3e\u7684\u5927\u62ec\u53f7\u540e\u9762\u4e0d\u7528\u52a0\u5206\u53f7 var add = new Function ( 'x' , 'y' , 'return x + y' ); // \u7b49\u540c\u4e8e function add ( x , y ) { return x + y ; } \u7b2c\u4e00\u7b49\u516c\u6c11 JavaScript \u8bed\u8a00\u5c06\u51fd\u6570\u770b\u4f5c\u4e00\u79cd\u503c\uff0c\u4e0e\u5176\u5b83\u503c\uff08\u6570\u503c\u3001\u5b57\u7b26\u4e32\u3001\u5e03\u5c14\u503c\u7b49\u7b49\uff09\u5730\u4f4d\u76f8\u540c \u591a\u884c\u5b57\u7b26\u4e32 var multiline = function ( fn ) { var arr = fn . toString (). split ( '\\n' ); return arr . slice ( 1 , arr . length - 1 ). join ( '\\n' ); }; function f () { /* \u8fd9\u662f\u4e00\u4e2a \u591a\u884c\u6ce8\u91ca */ } multiline ( f ); // \" \u8fd9\u662f\u4e00\u4e2a // \u591a\u884c\u6ce8\u91ca\" \u4f5c\u7528\u57df\uff08scope\uff09 \u5168\u5c40\u4f5c\u7528\u57df \u51fd\u6570\u4f5c\u7528\u57df \u51fd\u6570\u6267\u884c\u65f6\u6240\u5728\u7684\u4f5c\u7528\u57df\uff0c\u662f\u5b9a\u4e49\u65f6\u7684\u4f5c\u7528\u57df\uff0c\u800c\u4e0d\u662f\u8c03\u7528\u65f6\u6240\u5728\u7684\u4f5c\u7528\u57df\u3002 \u4f20\u9012\u65b9\u5f0f \u4f20\u503c\u4f20\u9012\uff08passes by value\uff09 \u4f20\u5740\u4f20\u9012\uff08pass by reference\uff09 arguments\u5bf9\u8c61\u5305\u542b\u4e86\u51fd\u6570\u8fd0\u884c\u65f6\u7684\u6240\u6709\u53c2\u6570 \u8f6c\u4e3a\u6570\u7ec4 var args = Array . prototype . slice . call ( arguments ); // \u6216\u8005 var args = []; for ( var i = 0 ; i < arguments . length ; i ++ ) { args . push ( arguments [ i ]); } \u95ed\u5305\uff08closure\uff09 \"\u94fe\u5f0f\u4f5c\u7528\u57df\"\u7ed3\u6784\uff08chain scope\uff09 \u5b50\u5bf9\u8c61\u4f1a\u4e00\u7ea7\u4e00\u7ea7\u5730\u5411\u4e0a\u5bfb\u627e\u6240\u6709\u7236\u5bf9\u8c61\u7684\u53d8\u91cf \u95ed\u5305\u7b80\u5355\u7406\u89e3\u6210\u201c\u5b9a\u4e49\u5728\u4e00\u4e2a\u51fd\u6570\u5185\u90e8\u7684\u51fd\u6570\u201d \u95ed\u5305\u5c31\u662f\u5c06\u51fd\u6570\u5185\u90e8\u548c\u51fd\u6570\u5916\u90e8\u8fde\u63a5\u8d77\u6765\u7684\u4e00\u5ea7\u6865\u6881\u3002 \u7acb\u5373\u8c03\u7528\u7684\u51fd\u6570\u8868\u8fbe\u5f0f\u201d\uff08Immediately-Invoked Function Expression\uff09\uff0c\u7b80\u79f0 IIFE ( function (){ /* code */ }()); // \u6216\u8005 ( function (){ /* code */ })(); \u533f\u540d\u51fd\u6570 \u4e00\u662f\u4e0d\u5fc5\u4e3a\u51fd\u6570\u547d\u540d\uff0c\u907f\u514d\u4e86\u6c61\u67d3\u5168\u5c40\u53d8\u91cf\uff1b \u4e8c\u662f IIFE \u5185\u90e8\u5f62\u6210\u4e86\u4e00\u4e2a\u5355\u72ec\u7684\u4f5c\u7528\u57df\uff0c\u53ef\u4ee5\u5c01\u88c5\u4e00\u4e9b\u5916\u90e8\u65e0\u6cd5\u8bfb\u53d6\u7684\u79c1\u6709\u53d8\u91cf\u3002 \u6570\u7ec4 \u672c\u8d28\u4e0a\uff0c\u6570\u7ec4\u5c5e\u4e8e\u4e00\u79cd\u7279\u6b8a\u7684\u5bf9\u8c61 \u6570\u7ec4\u7684\u6570\u5b57\u952e\u4e0d\u9700\u8981\u8fde\u7eed\uff0clength\u5c5e\u6027\u7684\u503c\u603b\u662f\u6bd4\u6700\u5927\u7684\u90a3\u4e2a\u6574\u6570\u952e\u59271 \u4e0d\u63a8\u8350\u4f7f\u7528for...in\u904d\u5386\u6570\u7ec4 for...in\u4e0d\u4ec5\u4f1a\u904d\u5386\u6570\u7ec4\u6240\u6709\u7684\u6570\u5b57\u952e\uff0c\u8fd8\u4f1a\u904d\u5386\u975e\u6570\u5b57\u952e var a = [ 1 , 2 , 3 ]; // for\u5faa\u73af for ( var i = 0 ; i < a . length ; i ++ ) { console . log ( a [ i ]); } \u7a7a\u4f4d\u5c31\u662f\u6570\u7ec4\u6ca1\u6709\u8fd9\u4e2a\u5143\u7d20\uff0c\u6240\u4ee5\u4e0d\u4f1a\u88ab\u904d\u5386\u5230\uff0c \u800cundefined\u5219\u8868\u793a\u6570\u7ec4\u6709\u8fd9\u4e2a\u5143\u7d20\uff0c\u503c\u662fundefined\uff0c\u6240\u4ee5\u904d\u5386\u4e0d\u4f1a\u8df3\u8fc7 // var a = [, , ,]; var a = [ undefined , undefined , undefined ]; a . forEach ( function ( x , i ) { console . log ( i + '. ' + x ); }); // 0. undefined // 1. undefined // 2. undefined for ( var i in a ) { console . log ( i ); } // 0 // 1 // 2 Object . keys ( a ) // [ '0' , '1' , '2' ] \u7c7b\u4f3c\u6570\u7ec4\u7684\u5bf9\u8c61\uff08array-like object\uff09 \u5c06\u201c\u7c7b\u4f3c\u6570\u7ec4\u7684\u5bf9\u8c61\u201d\u53d8\u6210\u771f\u6b63\u7684\u6570\u7ec4\u3002 var arr = Array . prototype . slice . call ( arrayLike ); \u8fd0\u7b97\u7b26 \u76f8\u52a0\u201c\u91cd\u8f7d\u201d\uff08overload\uff09\uff1a\u4e00\u4e2a\u8fd0\u7b97\u5b50\u662f\u5b57\u7b26\u4e32\uff0c\u53e6\u4e00\u4e2a\u8fd0\u7b97\u5b50\u662f\u975e\u5b57\u7b26\u4e32\uff0c\u8fd9\u65f6\u975e\u5b57\u7b26\u4e32\u4f1a\u8f6c\u6210\u5b57\u7b26\u4e32\uff0c\u518d\u8fde\u63a5\u5728\u4e00\u8d77 \u9664\u4e86\u52a0\u6cd5\u8fd0\u7b97\u7b26\uff0c\u5176\u4ed6\u7b97\u672f\u8fd0\u7b97\u7b26\uff08\u6bd4\u5982\u51cf\u6cd5\u3001\u9664\u6cd5\u548c\u4e58\u6cd5\uff09\u90fd\u4e0d\u4f1a\u53d1\u751f\u91cd\u8f7d\u3002 \u5b83\u4eec\u7684\u89c4\u5219\u662f\uff1a\u6240\u6709\u8fd0\u7b97\u5b50\u4e00\u5f8b\u8f6c\u4e3a\u6570\u503c\uff0c\u518d\u8fdb\u884c\u76f8\u5e94\u7684\u6570\u5b66\u8fd0\u7b97 \u5bf9\u8c61\u7684\u76f8\u52a0 \u9996\u5148\uff0c\u81ea\u52a8\u8c03\u7528\u5bf9\u8c61\u7684valueOf\u65b9\u6cd5 \u5982\u679c\u8fd0\u7b97\u5b50\u662f\u4e00\u4e2aDate\u5bf9\u8c61\u7684\u5b9e\u4f8b\uff0c\u90a3\u4e48\u4f1a\u4f18\u5148\u6267\u884ctoString\u65b9\u6cd5 \u8fd0\u7b97\u4e4b\u540e\uff0c\u53d8\u91cf\u7684\u503c\u53d1\u751f\u53d8\u5316\uff0c\u8fd9\u79cd\u6548\u5e94\u53eb\u505a\u8fd0\u7b97\u7684\u526f\u4f5c\u7528\uff08side effect\uff09 \u4e25\u683c\u76f8\u7b49\u8fd0\u7b97\u7b26\u6bd4\u8f83\u7684\u662f\u5730\u5740 \u53ea\u901a\u8fc7\u7b2c\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u63a7\u5236\u662f\u5426\u8fd0\u884c\u7b2c\u4e8c\u4e2a\u8868\u8fbe\u5f0f\u7684\u673a\u5236\uff0c\u5c31\u79f0\u4e3a\u201c\u77ed\u8def\u201d\uff08short-cut\uff09 void(0) \u4e3b\u8981\u7528\u9014\u662f\u6d4f\u89c8\u5668\u7684\u4e66\u7b7e\u5de5\u5177\uff08Bookmarklet\uff09\uff0c\u4ee5\u53ca\u5728\u8d85\u7ea7\u94fe\u63a5\u4e2d\u63d2\u5165\u4ee3\u7801\u9632\u6b62\u7f51\u9875\u8df3\u8f6c\u3002 < a href = \"javascript: void(0);\" > \u6587\u5b57 </ a > \u5efa\u8bae\u603b\u662f\u4f7f\u7528\u5706\u62ec\u53f7\uff0c\u4fdd\u8bc1\u8fd0\u7b97\u987a\u5e8f\u6e05\u6670\u53ef\u8bfb \u7c7b\u578b\u8f6c\u6362 parseInt\u9010\u4e2a\u89e3\u6790\u5b57\u7b26\uff0c \u800cNumber\u51fd\u6570\u6574\u4f53\u8f6c\u6362\u5b57\u7b26\u4e32\u7684\u7c7b\u578b String Boolean \u7531\u4e8e\u81ea\u52a8\u8f6c\u6362\u5177\u6709\u4e0d\u786e\u5b9a\u6027\uff0c\u800c\u4e14\u4e0d\u6613\u9664\u9519\uff0c \u5efa\u8bae\u5728\u9884\u671f\u4e3a\u5e03\u5c14\u503c\u3001\u6570\u503c\u3001\u5b57\u7b26\u4e32\u7684\u5730\u65b9\uff0c\u5168\u90e8\u4f7f\u7528Boolean\u3001Number\u548cString\u51fd\u6570\u8fdb\u884c\u663e\u5f0f\u8f6c\u6362 \u81ea\u5b9a\u4e49\u9519\u8bef function UserError ( message ) { this . message = message || '\u9ed8\u8ba4\u4fe1\u606f' ; this . name = 'UserError' ; } UserError . prototype = new Error (); UserError . prototype . constructor = UserError ; new UserError ( '\u8fd9\u662f\u81ea\u5b9a\u4e49\u7684\u9519\u8bef\uff01' ); throw\u8bed\u53e5\u7684\u4f5c\u7528\u662f\u624b\u52a8\u4e2d\u65ad\u7a0b\u5e8f\u6267\u884c\uff0c\u629b\u51fa\u4e00\u4e2a\u9519\u8bef \u5206\u53f7\u7684\u81ea\u52a8\u6dfb\u52a0\u201d\uff08Automatic Semicolon Insertion\uff0c\u7b80\u79f0 ASI\uff09 Object \u5bf9\u8c61 \u5b9e\u4f8b\u65b9\u6cd5\u5c31\u662f\u5b9a\u4e49\u5728Object\u539f\u578b\u5bf9\u8c61Object.prototype\u4e0a\u7684\u65b9\u6cd5 \u83b7\u53d6\u5c5e\u6027 Object.keys()\uff0c Object.getOwnPropertyNames() \u5224\u65ad\u8fd9\u4e2a\u503c\u7684\u7c7b\u578b Object.prototype.toString.call(value) var type = function ( o ){ var s = Object . prototype . toString . call ( o ); return s . match ( /\\[object (. *? ) \\ ] / )[ 1 ]. toLowerCase (); }; [ 'Null' , 'Undefined' , 'Object' , 'Array' , 'String' , 'Number' , 'Boolean' , 'Function' , 'RegExp' ]. forEach ( function ( t ) { type [ 'is' + t ] = function ( o ) { return type ( o ) === t . toLowerCase (); }; }); type . isObject ({}) // true type . isNumber ( NaN ) // true type . isRegExp ( /abc/ ) // true Object.getOwnPropertyDescriptor()\u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u5c5e\u6027\u63cf\u8ff0\u5bf9\u8c61 Object.keys\u53ea\u8fd4\u56de\u5bf9\u8c61\u81ea\u8eab\u7684\u53ef\u904d\u5386\u5c5e\u6027\u7684\u5168\u90e8\u5c5e\u6027\u540d Object.getOwnPropertyNames\u4f1a\u5c06\u5b83\u4eec\u90fd\u8fd4\u56de Object.defineProperty()\u65b9\u6cd5\u5141\u8bb8\u901a\u8fc7\u5c5e\u6027\u63cf\u8ff0\u5bf9\u8c61\uff0c\u5b9a\u4e49\u6216\u4fee\u6539\u4e00\u4e2a\u5c5e\u6027\uff0c\u7136\u540e\u8fd4\u56de\u4fee\u6539\u540e\u7684\u5bf9\u8c61 Object.prototype.valueOf() Object.prototype.toString() \u5305\u88c5\u5bf9\u8c61 \u539f\u59cb\u7c7b\u578b\uff1a\u6570\u503c\u3001\u5b57\u7b26\u4e32\u3001\u5e03\u5c14\u503c \u5305\u88c5\u5bf9\u8c61\uff1aNumber\u3001String\u3001Boolean Math\u6570\u5b66\u529f\u80fd \u968f\u673a\u6574\u6570 function getRandomInt ( min , max ) { return Math . floor ( Math . random () * ( max - min + 1 )) + min ; } getRandomInt ( 1 , 6 ) // 5 RegExp RegExp.prototype.test() RegExp.prototype.exec() JSON JSON.stringify() JSON.parse() this \u6307\u4ee3\u51fd\u6570\u5f53\u524d\u7684\u8fd0\u884c\u73af\u5883 'use strict'\u58f0\u660e\u91c7\u7528\u4e25\u683c\u6a21\u5f0f\uff0c \u8fd9\u65f6\u5185\u90e8\u7684this\u4e00\u65e6\u6307\u5411\u9876\u5c42\u5bf9\u8c61\uff0c\u5c31\u4f1a\u62a5\u9519\u3002 call\u65b9\u6cd5\u53ef\u4ee5\u6539\u53d8this\u7684\u6307\u5411 Function.prototype.call() \u63a5\u53d7\u591a\u4e2a\u53c2\u6570 Function.prototype.apply() \u63a5\u6536\u4e00\u4e2a\u6570\u7ec4 \u5c06\u51fd\u6570\u4f53\u5185\u7684this\u7ed1\u5b9a\u5230\u67d0\u4e2a\u5bf9\u8c61\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u65b0\u51fd\u6570 Function.prototype.bind() \u7ee7\u627f // \u7236\u7c7b function Shape () { this . x = 0 ; this . y = 0 ; } // \u7236\u7c7b\u65b9\u6cd5 Shape . prototype . move = function ( x , y ) { this . x += x ; this . y += y ; console . info ( 'Shape moved.' ); }; // \u5b50\u7c7b // \u7b2c\u4e00\u6b65 \uff0c \u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u7684\u5b9e\u4f8b function Rectangle () { Shape . call ( this ); // \u8c03\u7528\u7236\u7c7b\u6784\u9020\u51fd\u6570 } // \u7b2c\u4e8c\u6b65 \uff0c \u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u7684\u539f\u578b Rectangle . prototype = Object . create ( Shape . prototype ); Rectangle . prototype . constructor = Rectangle ; var rect = new Rectangle (); console . log ( rect instanceof Rectangle ); console . log ( rect instanceof Shape ); // true // true Object.getPrototypeOf() \u83b7\u53d6\u539f\u578b\u5bf9\u8c61 Object.setPrototypeOf() Object.create() Object.getOwnPropertyNames \u4e0d\u5305\u542b\u7ee7\u627f\u7684\u5c5e\u6027\u952e\u540d Object.prototype.hasOwnProperty() \u5224\u65ad\u67d0\u4e2a\u5c5e\u6027\u5b9a\u4e49\u5728\u5bf9\u8c61\u81ea\u8eab \u53d6\u6d88\u5f53\u524d\u6240\u6709\u7684setTimeout\u5b9a\u65f6\u5668 var gid = setInterval ( clearAllTimeouts , 0 ); function clearAllTimeouts () { var id = setTimeout ( function () {}, 0 ); while ( id > 0 ) { if ( id !== gid ) { clearTimeout ( id ); } id -- ; } } debounce\uff08\u9632\u6296\u52a8\uff09 $ ( 'textarea' ). on ( 'keydown' , debounce ( ajaxAction , 2500 )); function debounce ( fn , delay ){ var timer = null ; // \u58f0\u660e\u8ba1\u65f6\u5668 return function () { var context = this ; var args = arguments ; clearTimeout ( timer ); timer = setTimeout ( function () { fn . apply ( context , args ); }, delay ); }; } \u201c\u6587\u6863\u5bf9\u8c61\u6a21\u578b\u201d\uff08Document Object Model\uff09 \u4f7f\u7528\u6570\u7ec4\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u5176\u8f6c\u4e3a\u771f\u6b63\u7684\u6570\u7ec4 var children = document . body . childNodes ; var nodeArr = Array . prototype . slice . call ( children );","title":"Chrome \u6d4f\u89c8\u5668"},{"location":"JavaScript/ES6/","text":"\u5e38\u91cf // ES5 \u4e2d\u5e38\u91cf\u7684\u5199\u6cd5 Object . defineProperty ( window , \"PI2\" , { value : 3.1415926 , writable : false , }) console . log ( window . PI2 ) // ES6 \u7684\u5e38\u91cf\u5199\u6cd5 const PI = 3.1415926 console . log ( PI ) // PI = 4 \u4f5c\u7528\u57df // ES5 \u4e2d\u4f5c\u7528\u57df const callbacks = [] for ( var i = 0 ; i <= 2 ; i ++ ) { callbacks [ i ] = function () { return i * 2 } } console . table ([ callbacks [ 0 ](), callbacks [ 1 ](), callbacks [ 2 ](), ]) // \u8f93\u51fa\u662f6 6 6 const callbacks2 = [] for ( let j = 0 ; j <= 2 ; j ++ ) { callbacks2 [ j ] = function () { return j * 2 } } console . table ([ callbacks2 [ 0 ](), callbacks2 [ 1 ](), callbacks2 [ 2 ](), ]) // \u8f93\u51fa\u662f0 2 4 ;(( function () { const foo = function () { return 1 } console . log ( \"foo()===1\" , foo () === 1 ) ;(( function () { const foo = function () { return 2 } console . log ( \"foo()===2\" , foo () === 2 ) })()) })()) { function foo () { return 1 } console . log ( \"foo()===1\" , foo () === 1 ) { function foo () { return 2 } console . log ( \"foo()===2\" , foo () === 2 ) } console . log ( \"foo()===1\" , foo () === 1 ) } \u7bad\u5934\u51fd\u6570 /* eslint-disable */ { // ES3,ES5 var evens = [ 1 , 2 , 3 , 4 , 5 ]; var odds = evens . map ( function ( v ) { return v + 1 }); console . log ( evens , odds ); }; { // ES6 let evens = [ 1 , 2 , 3 , 4 , 5 ]; let odds = evens . map ( v => v + 1 ); console . log ( evens , odds ); } { // ES3,ES5 var factory = function () { this . a = 'a' ; this . b = 'b' ; this . c = { a : 'a+' , b : function () { return this . a } } } // \u8c01\u8c03\u7528this\u6307\u5411\u8c01 console . log ( new factory (). c . b ()); // 'a+' }; { // ES6 var factory = function () { this . a = 'a' ; this . b = 'b' ; this . c = { a : 'a+' , b : () => { return this . a } } } // \u5b9a\u4e49\u65f6\u6307\u5411\u8c01\u5c31\u662f\u8c01 console . log ( new factory (). c . b ()); // 'a' } \u51fd\u6570\u53c2\u6570 /* eslint-disable */ { // ES5\\ES3 \u9ed8\u8ba4\u53c2\u6570\u7684\u5199\u6cd5 function f ( x , y , z ) { if ( y === undefined ) { y = 7 ; } if ( z === undefined ) { z = 42 } return x + y + z } console . log ( f ( 1 , 3 )); } { // ES6 \u9ed8\u8ba4\u53c2\u6570 function f ( x , y = 7 , z = 42 ) { return x + y + z } console . log ( f ( 1 , 3 )); } { // \u5fc5\u9009\u53c2\u6570\u68c0\u67e5 function checkParameter () { throw new Error ( 'can\\'t be empty' ) } function f ( x = checkParameter (), y = 7 , z = 42 ) { return x + y + z } console . log ( f ( 1 )); try { f () } catch ( e ) { console . log ( e ); } finally {} } { // ES3,ES5 \u53ef\u53d8\u53c2\u6570 function f () { var a = Array . prototype . slice . call ( arguments ); var sum = 0 ; a . forEach ( function ( item ) { sum += item * 1 ; }) return sum } console . log ( f ( 1 , 2 , 3 , 6 )); } { // ES6 \u53ef\u53d8\u53c2\u6570 function f (... a ) { var sum = 0 ; a . forEach ( item => { sum += item * 1 }); return sum } console . log ( f ( 1 , 2 , 3 , 6 )); } { // ES5 \u5408\u5e76\u6570\u7ec4 var params = [ 'hello' , true , 7 ]; var other = [ 1 , 2 ]. concat ( params ); console . log ( other ); } { // ES6 \u5229\u7528\u6269\u5c55\u8fd0\u7b97\u7b26\u5408\u5e76\u6570\u7ec4 var params = [ 'hello' , true , 7 ]; var other = [ 1 , 2 , ... params ]; console . log ( other ); } \u6570\u636e\u4fdd\u62a4 /* eslint-disable */ { // ES3,ES5 \u6570\u636e\u4fdd\u62a4 var Person = function () { var data = { name : 'es3' , sex : 'male' , age : 15 } this . get = function ( key ) { return data [ key ] } this . set = function ( key , value ) { if ( key !== 'sex' ) { data [ key ] = value } } } // \u58f0\u660e\u4e00\u4e2a\u5b9e\u4f8b var person = new Person (); // \u8bfb\u53d6 console . table ({ name : person . get ( 'name' ), sex : person . get ( 'sex' ), age : person . get ( 'age' )}); // \u4fee\u6539 person . set ( 'name' , 'es3-cname' ); console . table ({ name : person . get ( 'name' ), sex : person . get ( 'sex' ), age : person . get ( 'age' )}); person . set ( 'sex' , 'female' ); console . table ({ name : person . get ( 'name' ), sex : person . get ( 'sex' ), age : person . get ( 'age' )}); } { // ES5 var Person = { name : 'es5' , age : 15 }; Object . defineProperty ( Person , 'sex' , { writable : false , value : 'male' }); console . table ({ name : Person . name , age : Person . age , sex : Person . sex }); Person . name = 'es5-cname' ; console . table ({ name : Person . name , age : Person . age , sex : Person . sex }); try { Person . sex = 'female' ; console . table ({ name : Person . name , age : Person . age , sex : Person . sex }); } catch ( e ) { console . log ( e ); } } { // ES6 let Person = { name : 'es6' , sex : 'male' , age : 15 }; let person = new Proxy ( Person , { get ( target , key ) { return target [ key ] }, set ( target , key , value ){ if ( key !== 'sex' ){ target [ key ] = value ; } } }); console . table ({ name : person . name , sex : person . sex , age : person . age }); try { person . sex = 'female' ; } catch ( e ) { console . log ( e ); } finally { } }","title":"ES6"},{"location":"JavaScript/ES6/#_1","text":"// ES5 \u4e2d\u5e38\u91cf\u7684\u5199\u6cd5 Object . defineProperty ( window , \"PI2\" , { value : 3.1415926 , writable : false , }) console . log ( window . PI2 ) // ES6 \u7684\u5e38\u91cf\u5199\u6cd5 const PI = 3.1415926 console . log ( PI ) // PI = 4","title":"\u5e38\u91cf"},{"location":"JavaScript/ES6/#_2","text":"// ES5 \u4e2d\u4f5c\u7528\u57df const callbacks = [] for ( var i = 0 ; i <= 2 ; i ++ ) { callbacks [ i ] = function () { return i * 2 } } console . table ([ callbacks [ 0 ](), callbacks [ 1 ](), callbacks [ 2 ](), ]) // \u8f93\u51fa\u662f6 6 6 const callbacks2 = [] for ( let j = 0 ; j <= 2 ; j ++ ) { callbacks2 [ j ] = function () { return j * 2 } } console . table ([ callbacks2 [ 0 ](), callbacks2 [ 1 ](), callbacks2 [ 2 ](), ]) // \u8f93\u51fa\u662f0 2 4 ;(( function () { const foo = function () { return 1 } console . log ( \"foo()===1\" , foo () === 1 ) ;(( function () { const foo = function () { return 2 } console . log ( \"foo()===2\" , foo () === 2 ) })()) })()) { function foo () { return 1 } console . log ( \"foo()===1\" , foo () === 1 ) { function foo () { return 2 } console . log ( \"foo()===2\" , foo () === 2 ) } console . log ( \"foo()===1\" , foo () === 1 ) }","title":"\u4f5c\u7528\u57df"},{"location":"JavaScript/ES6/#_3","text":"/* eslint-disable */ { // ES3,ES5 var evens = [ 1 , 2 , 3 , 4 , 5 ]; var odds = evens . map ( function ( v ) { return v + 1 }); console . log ( evens , odds ); }; { // ES6 let evens = [ 1 , 2 , 3 , 4 , 5 ]; let odds = evens . map ( v => v + 1 ); console . log ( evens , odds ); } { // ES3,ES5 var factory = function () { this . a = 'a' ; this . b = 'b' ; this . c = { a : 'a+' , b : function () { return this . a } } } // \u8c01\u8c03\u7528this\u6307\u5411\u8c01 console . log ( new factory (). c . b ()); // 'a+' }; { // ES6 var factory = function () { this . a = 'a' ; this . b = 'b' ; this . c = { a : 'a+' , b : () => { return this . a } } } // \u5b9a\u4e49\u65f6\u6307\u5411\u8c01\u5c31\u662f\u8c01 console . log ( new factory (). c . b ()); // 'a' }","title":"\u7bad\u5934\u51fd\u6570"},{"location":"JavaScript/ES6/#_4","text":"/* eslint-disable */ { // ES5\\ES3 \u9ed8\u8ba4\u53c2\u6570\u7684\u5199\u6cd5 function f ( x , y , z ) { if ( y === undefined ) { y = 7 ; } if ( z === undefined ) { z = 42 } return x + y + z } console . log ( f ( 1 , 3 )); } { // ES6 \u9ed8\u8ba4\u53c2\u6570 function f ( x , y = 7 , z = 42 ) { return x + y + z } console . log ( f ( 1 , 3 )); } { // \u5fc5\u9009\u53c2\u6570\u68c0\u67e5 function checkParameter () { throw new Error ( 'can\\'t be empty' ) } function f ( x = checkParameter (), y = 7 , z = 42 ) { return x + y + z } console . log ( f ( 1 )); try { f () } catch ( e ) { console . log ( e ); } finally {} } { // ES3,ES5 \u53ef\u53d8\u53c2\u6570 function f () { var a = Array . prototype . slice . call ( arguments ); var sum = 0 ; a . forEach ( function ( item ) { sum += item * 1 ; }) return sum } console . log ( f ( 1 , 2 , 3 , 6 )); } { // ES6 \u53ef\u53d8\u53c2\u6570 function f (... a ) { var sum = 0 ; a . forEach ( item => { sum += item * 1 }); return sum } console . log ( f ( 1 , 2 , 3 , 6 )); } { // ES5 \u5408\u5e76\u6570\u7ec4 var params = [ 'hello' , true , 7 ]; var other = [ 1 , 2 ]. concat ( params ); console . log ( other ); } { // ES6 \u5229\u7528\u6269\u5c55\u8fd0\u7b97\u7b26\u5408\u5e76\u6570\u7ec4 var params = [ 'hello' , true , 7 ]; var other = [ 1 , 2 , ... params ]; console . log ( other ); }","title":"\u51fd\u6570\u53c2\u6570"},{"location":"JavaScript/ES6/#_5","text":"/* eslint-disable */ { // ES3,ES5 \u6570\u636e\u4fdd\u62a4 var Person = function () { var data = { name : 'es3' , sex : 'male' , age : 15 } this . get = function ( key ) { return data [ key ] } this . set = function ( key , value ) { if ( key !== 'sex' ) { data [ key ] = value } } } // \u58f0\u660e\u4e00\u4e2a\u5b9e\u4f8b var person = new Person (); // \u8bfb\u53d6 console . table ({ name : person . get ( 'name' ), sex : person . get ( 'sex' ), age : person . get ( 'age' )}); // \u4fee\u6539 person . set ( 'name' , 'es3-cname' ); console . table ({ name : person . get ( 'name' ), sex : person . get ( 'sex' ), age : person . get ( 'age' )}); person . set ( 'sex' , 'female' ); console . table ({ name : person . get ( 'name' ), sex : person . get ( 'sex' ), age : person . get ( 'age' )}); } { // ES5 var Person = { name : 'es5' , age : 15 }; Object . defineProperty ( Person , 'sex' , { writable : false , value : 'male' }); console . table ({ name : Person . name , age : Person . age , sex : Person . sex }); Person . name = 'es5-cname' ; console . table ({ name : Person . name , age : Person . age , sex : Person . sex }); try { Person . sex = 'female' ; console . table ({ name : Person . name , age : Person . age , sex : Person . sex }); } catch ( e ) { console . log ( e ); } } { // ES6 let Person = { name : 'es6' , sex : 'male' , age : 15 }; let person = new Proxy ( Person , { get ( target , key ) { return target [ key ] }, set ( target , key , value ){ if ( key !== 'sex' ){ target [ key ] = value ; } } }); console . table ({ name : person . name , sex : person . sex , age : person . age }); try { person . sex = 'female' ; } catch ( e ) { console . log ( e ); } finally { } }","title":"\u6570\u636e\u4fdd\u62a4"},{"location":"JavaScript/Egg-js/","text":"Egg.js \u57fa\u4e8eNode.js\u548cKoa\u4f01\u4e1a\u7ea7\u5e94\u7528\u5f00\u53d1\u6846\u67b6 \u7279\u6027 \u63d0\u4f9b\u57fa\u4e8eEgg\u7684\u5b9a\u5236\u4e0a\u5c42\u6846\u67b6\u7684\u80fd\u529b \u9ad8\u5ea6\u53ef\u6269\u5c55\u7684\u63d2\u4ef6\u673a\u5236 \u5185\u7f6e\u591a\u8fdb\u7a0b\u7ba1\u7406 \u57fa\u4e8eKoa\u5f00\u53d1\u6027\u80fd\u4f18\u5f02 \u6846\u67b6\u7a33\u5b9a\uff0c\u6d4b\u8bd5\u8986\u76d6\u7387\u641e \u6e10\u8fdb\u5f0f\u5f00\u53d1 \u6d89\u53ca\u5185\u5bb9 vant ui vue-cli3 moment.js Egg.js mysql \u524d\u540e\u7aef\u8054\u8c03 \u5f00\u53d1\u73af\u5883 Egg.js https://eggjs.org/zh-cn/intro/quickstart.html $ node -v v10.16.0 $ mkdir egg-demo && cd egg-demo $ npm init egg --type = simple $ cnpm i $ npm run dev http://127.0.0.1:7001/ \u8def\u7531 app/router.js 'use strict' ; /** * @param {Egg.Application} app - egg application */ module . exports = app => { const { router , controller } = app ; router . get ( '/' , controller . home . index ); }; GET\u4f20\u53c2 1\u3001\u65b9\u5f0f\u4e00 /product/detail?id=110 // \u8def\u7531 router . get ( '/product/detail' , controller . product . detail ); // \u63a7\u5236\u5668 async detail () { const { ctx } = this ; console . log ( ctx . query ); // { id: '110' } ctx . body = `id= ${ ctx . query . id } ` ; } 2\u3001\u65b9\u5f0f\u4e8c /product/detail2/110 // \u8def\u7531 router . get ( '/product/detail2/:id' , controller . product . detail2 ); // \u63a7\u5236\u5668 async detail2 () { const { ctx } = this ; console . log ( ctx . params ); // { id: '110' } ctx . body = `id= ${ ctx . params . id } ` ; } POST\u8bf7\u6c42 // \u914d\u7f6e\u6587\u4ef6\u5173\u95edcsrf config . security = { csrf : { enable : false , }, }; // \u8def\u7531 router . post ( '/product/create' , controller . product . create ); // \u63a7\u5236\u5668 async create () { const { ctx } = this ; console . log ( ctx . request . body ); // { name: 'Tom' } const { name , age } = ctx . request . body ; ctx . body = { name , age }; } POST\u8bf7\u6c42 /product/create Content-Type application/x-www-form-urlencoded Content-Type application/json name: \"Tom\" \u8fd4\u56de { \"name\" : \"Tom\" } PUT\u8bf7\u6c42 /product/update/110 // \u8def\u7531 router . put ( '/product/update/:id' , controller . product . update ); // \u63a7\u5236\u5668 async update () { const { ctx } = this ; console . log ( ctx . params ); // { id: '110' } ctx . body = { id : ctx . params . id }; } DELETE\u8bf7\u6c42 /product/delete/110 // \u8def\u7531 router . delete ( '/product/delete/:id' , controller . product . delete ); // \u63a7\u5236\u5668 async delete () { const { ctx } = this ; console . log ( ctx . params ); // { id: '110' } ctx . body = { id : ctx . params . id }; } Service app/service/product.js 'use strict' ; const Service = require ( 'egg' ). Service ; class productService extends Service { async index () { return { name : \"Tom\" , age : 18 }; } } module . exports = productService ; // \u8def\u7531 router . get ( '/product' , controller . product . index ); // \u4fee\u6539\u63a7\u5236\u5668\u4f7f\u7528service async index () { const { ctx } = this ; const res = await ctx . service . product . index (); ctx . body = res ; } \u8bbf\u95ee\u540e\u8fd4\u56de\uff1a /product/ { \"name\" : \"Tom\" , \"age\" : 18 } \u6a21\u677f\u5f15\u64ce ejs https://github.com/eggjs/egg-view-ejs $ npm i egg-view-ejs \u8bed\u6cd5\u53c2\u8003 https://ejs.bootcss.com/ \u4fee\u6539\u914d\u7f6e // {app_root}/config/plugin.js exports . ejs = { enable : true , package : 'egg-view-ejs' , }; // {app_root}/config/config.default.js config . view = { mapping : { '.html' : 'ejs' , }, }; \u65b0\u5efa\u6587\u4ef6 app/view/index.html < %# \u53d8\u91cf #%> < %=res.name%> < %=res.age%> < %# for\u5faa\u73af #%> < % for(var i=0; i < list.length ; i ++){ % > < p > < %=list[i]%> </ p > < % } %> \u63a7\u5236\u5668\u4e2d\u6e32\u67d3 async index () { const { ctx } = this ; const res = await ctx . service . product . index (); // ctx.body = res; await ctx . render ( 'index.html' , { res , list : [ 'red' , 'green' , 'blue' ] }) } \u9759\u6001\u8d44\u6e90 app/public\u76ee\u5f55\u6811 app \u251c\u2500\u2500 public \u251c\u2500\u2500 css \u2502 \u2514\u2500\u2500 main . css \u251c\u2500\u2500 img \u2502 \u2514\u2500\u2500 demo . png \u2514\u2500\u2500 js \u2514\u2500\u2500 main . js <!-- \u5f15\u5165css\u6587\u4ef6 --> < link rel = \"stylesheet\" href = \"/public/css/main.css\" > <!-- \u5f15\u5165\u56fe\u7247\u8d44\u6e90 --> < img src = \"/public/img/demo.png\" alt = \"\" > <!-- \u5f15\u5165js\u6587\u4ef6 --> < script src = \"/public/js/main.js\" ></ script > mysql\u63d2\u4ef6\u5b89\u88c5 npm i --save egg-mysql \u4fee\u6539\u914d\u7f6e // config/plugin.js exports . mysql = { enable : true , package : 'egg-mysql' , }; // config/config.default.js config . mysql = { // \u5355\u6570\u636e\u5e93\u4fe1\u606f\u914d\u7f6e client : { // host host : '127.0.0.1' , // \u7aef\u53e3\u53f7 port : '3306' , // \u7528\u6237\u540d user : 'root' , // \u5bc6\u7801 password : '123456' , // \u6570\u636e\u5e93\u540d database : 'data' , }, // \u662f\u5426\u52a0\u8f7d\u5230 app \u4e0a\uff0c\u9ed8\u8ba4\u5f00\u542f app : true , // \u662f\u5426\u52a0\u8f7d\u5230 agent \u4e0a\uff0c\u9ed8\u8ba4\u5173\u95ed agent : false , }; \u524d\u7aef\u5f00\u53d1 1\u3001\u811a\u624b\u67b6 @vue/cli https://cli.vuejs.org/zh/guide/installation.html $ cnpm install -g @vue/cli $ vue -V 3 .12.0 $ vue --help $ vue create client $ cd client $ npm run serve http://localhost:8080/ 2\u3001\u524d\u7aef\u7ec4\u4ef6\u5e93 vant https://youzan.github.io/vant/#/zh-CN/quickstart $ npm i vant - S $ npm i babel - plugin - import - D \u5728 .babelrc \u4e2d\u6dfb\u52a0\u914d\u7f6e { \"plugins\" : [ [ \"import\" , { \"libraryName\" : \"vant\" , \"libraryDirectory\" : \"es\" , \"style\" : true }] ] } App.vue\u5f15\u5165vant\u7ec4\u4ef6 < template > < div id = \"app\" > < van-button type = \"primary\" > \u6309\u94ae\u7ec4\u4ef6 </ van-button > </ div > </ template > < script > import { Button } from 'vant' ; export default { name : 'app' , components : { [ Button . name ] : Button } } </ script > 3\u3001\u8def\u7531vue-router cnpm i vue - router --save \u67e5\u8be2 async index () { const { ctx , app } = this ; const res = await app . mysql . select ( \"article\" ); console . log ( res ); } 4\u3001\u5904\u7406\u65f6\u95f4 cnpm i moment --save // \u540e\u7aef\u4fdd\u5b58\u4e4b\u524d const moment = require ( 'moment' ); const create_time = moment (). format ( 'YYYY-MM-DD HH:mm:ss' ); // 2019-10-13 22:29:23 //\u524d\u7aef\u5c55\u793a\u4e4b\u524d import momemt from 'moment' ; this . list = res . data . map ( item =>{ if ( item . create_time ){ item . create_time = moment ( item . create_time ). format ( 'YYYY-MM-DD HH:mm:ss' ); } return item ; }); 5\u3001\u5ba2\u6237\u7aef\u8de8\u57df\u8bf7\u6c42 vue.config.js module . exports = { // \u5904\u7406\u8de8\u57df\u8bf7\u6c42 devServer : { proxy : { '/article' : { target : \"http://127.0.0.1:7001/\" , ws : true , // \u5141\u8bb8websockt\u670d\u52a1 changeOrigin : true // \u5f00\u542f\u865a\u62df\u670d\u52a1\u5668\uff0c\u8bf7\u6c42\u4ee3\u7406\u670d\u52a1\u5668 } } } }","title":"Egg js"},{"location":"JavaScript/Egg-js/#eggjs","text":"\u57fa\u4e8eNode.js\u548cKoa\u4f01\u4e1a\u7ea7\u5e94\u7528\u5f00\u53d1\u6846\u67b6","title":"Egg.js"},{"location":"JavaScript/Egg-js/#_1","text":"\u63d0\u4f9b\u57fa\u4e8eEgg\u7684\u5b9a\u5236\u4e0a\u5c42\u6846\u67b6\u7684\u80fd\u529b \u9ad8\u5ea6\u53ef\u6269\u5c55\u7684\u63d2\u4ef6\u673a\u5236 \u5185\u7f6e\u591a\u8fdb\u7a0b\u7ba1\u7406 \u57fa\u4e8eKoa\u5f00\u53d1\u6027\u80fd\u4f18\u5f02 \u6846\u67b6\u7a33\u5b9a\uff0c\u6d4b\u8bd5\u8986\u76d6\u7387\u641e \u6e10\u8fdb\u5f0f\u5f00\u53d1","title":"\u7279\u6027"},{"location":"JavaScript/Egg-js/#_2","text":"vant ui vue-cli3 moment.js Egg.js mysql \u524d\u540e\u7aef\u8054\u8c03","title":"\u6d89\u53ca\u5185\u5bb9"},{"location":"JavaScript/Egg-js/#_3","text":"Egg.js https://eggjs.org/zh-cn/intro/quickstart.html $ node -v v10.16.0 $ mkdir egg-demo && cd egg-demo $ npm init egg --type = simple $ cnpm i $ npm run dev http://127.0.0.1:7001/","title":"\u5f00\u53d1\u73af\u5883"},{"location":"JavaScript/Egg-js/#_4","text":"app/router.js 'use strict' ; /** * @param {Egg.Application} app - egg application */ module . exports = app => { const { router , controller } = app ; router . get ( '/' , controller . home . index ); };","title":"\u8def\u7531"},{"location":"JavaScript/Egg-js/#get","text":"1\u3001\u65b9\u5f0f\u4e00 /product/detail?id=110 // \u8def\u7531 router . get ( '/product/detail' , controller . product . detail ); // \u63a7\u5236\u5668 async detail () { const { ctx } = this ; console . log ( ctx . query ); // { id: '110' } ctx . body = `id= ${ ctx . query . id } ` ; } 2\u3001\u65b9\u5f0f\u4e8c /product/detail2/110 // \u8def\u7531 router . get ( '/product/detail2/:id' , controller . product . detail2 ); // \u63a7\u5236\u5668 async detail2 () { const { ctx } = this ; console . log ( ctx . params ); // { id: '110' } ctx . body = `id= ${ ctx . params . id } ` ; }","title":"GET\u4f20\u53c2"},{"location":"JavaScript/Egg-js/#post","text":"// \u914d\u7f6e\u6587\u4ef6\u5173\u95edcsrf config . security = { csrf : { enable : false , }, }; // \u8def\u7531 router . post ( '/product/create' , controller . product . create ); // \u63a7\u5236\u5668 async create () { const { ctx } = this ; console . log ( ctx . request . body ); // { name: 'Tom' } const { name , age } = ctx . request . body ; ctx . body = { name , age }; } POST\u8bf7\u6c42 /product/create Content-Type application/x-www-form-urlencoded Content-Type application/json name: \"Tom\" \u8fd4\u56de { \"name\" : \"Tom\" }","title":"POST\u8bf7\u6c42"},{"location":"JavaScript/Egg-js/#put","text":"/product/update/110 // \u8def\u7531 router . put ( '/product/update/:id' , controller . product . update ); // \u63a7\u5236\u5668 async update () { const { ctx } = this ; console . log ( ctx . params ); // { id: '110' } ctx . body = { id : ctx . params . id }; }","title":"PUT\u8bf7\u6c42"},{"location":"JavaScript/Egg-js/#delete","text":"/product/delete/110 // \u8def\u7531 router . delete ( '/product/delete/:id' , controller . product . delete ); // \u63a7\u5236\u5668 async delete () { const { ctx } = this ; console . log ( ctx . params ); // { id: '110' } ctx . body = { id : ctx . params . id }; }","title":"DELETE\u8bf7\u6c42"},{"location":"JavaScript/Egg-js/#service","text":"app/service/product.js 'use strict' ; const Service = require ( 'egg' ). Service ; class productService extends Service { async index () { return { name : \"Tom\" , age : 18 }; } } module . exports = productService ; // \u8def\u7531 router . get ( '/product' , controller . product . index ); // \u4fee\u6539\u63a7\u5236\u5668\u4f7f\u7528service async index () { const { ctx } = this ; const res = await ctx . service . product . index (); ctx . body = res ; } \u8bbf\u95ee\u540e\u8fd4\u56de\uff1a /product/ { \"name\" : \"Tom\" , \"age\" : 18 }","title":"Service"},{"location":"JavaScript/Egg-js/#_5","text":"ejs https://github.com/eggjs/egg-view-ejs $ npm i egg-view-ejs \u8bed\u6cd5\u53c2\u8003 https://ejs.bootcss.com/ \u4fee\u6539\u914d\u7f6e // {app_root}/config/plugin.js exports . ejs = { enable : true , package : 'egg-view-ejs' , }; // {app_root}/config/config.default.js config . view = { mapping : { '.html' : 'ejs' , }, }; \u65b0\u5efa\u6587\u4ef6 app/view/index.html < %# \u53d8\u91cf #%> < %=res.name%> < %=res.age%> < %# for\u5faa\u73af #%> < % for(var i=0; i < list.length ; i ++){ % > < p > < %=list[i]%> </ p > < % } %> \u63a7\u5236\u5668\u4e2d\u6e32\u67d3 async index () { const { ctx } = this ; const res = await ctx . service . product . index (); // ctx.body = res; await ctx . render ( 'index.html' , { res , list : [ 'red' , 'green' , 'blue' ] }) }","title":"\u6a21\u677f\u5f15\u64ce"},{"location":"JavaScript/Egg-js/#_6","text":"app/public\u76ee\u5f55\u6811 app \u251c\u2500\u2500 public \u251c\u2500\u2500 css \u2502 \u2514\u2500\u2500 main . css \u251c\u2500\u2500 img \u2502 \u2514\u2500\u2500 demo . png \u2514\u2500\u2500 js \u2514\u2500\u2500 main . js <!-- \u5f15\u5165css\u6587\u4ef6 --> < link rel = \"stylesheet\" href = \"/public/css/main.css\" > <!-- \u5f15\u5165\u56fe\u7247\u8d44\u6e90 --> < img src = \"/public/img/demo.png\" alt = \"\" > <!-- \u5f15\u5165js\u6587\u4ef6 --> < script src = \"/public/js/main.js\" ></ script >","title":"\u9759\u6001\u8d44\u6e90"},{"location":"JavaScript/Egg-js/#mysql","text":"npm i --save egg-mysql \u4fee\u6539\u914d\u7f6e // config/plugin.js exports . mysql = { enable : true , package : 'egg-mysql' , }; // config/config.default.js config . mysql = { // \u5355\u6570\u636e\u5e93\u4fe1\u606f\u914d\u7f6e client : { // host host : '127.0.0.1' , // \u7aef\u53e3\u53f7 port : '3306' , // \u7528\u6237\u540d user : 'root' , // \u5bc6\u7801 password : '123456' , // \u6570\u636e\u5e93\u540d database : 'data' , }, // \u662f\u5426\u52a0\u8f7d\u5230 app \u4e0a\uff0c\u9ed8\u8ba4\u5f00\u542f app : true , // \u662f\u5426\u52a0\u8f7d\u5230 agent \u4e0a\uff0c\u9ed8\u8ba4\u5173\u95ed agent : false , };","title":"mysql\u63d2\u4ef6\u5b89\u88c5"},{"location":"JavaScript/Egg-js/#_7","text":"1\u3001\u811a\u624b\u67b6 @vue/cli https://cli.vuejs.org/zh/guide/installation.html $ cnpm install -g @vue/cli $ vue -V 3 .12.0 $ vue --help $ vue create client $ cd client $ npm run serve http://localhost:8080/ 2\u3001\u524d\u7aef\u7ec4\u4ef6\u5e93 vant https://youzan.github.io/vant/#/zh-CN/quickstart $ npm i vant - S $ npm i babel - plugin - import - D \u5728 .babelrc \u4e2d\u6dfb\u52a0\u914d\u7f6e { \"plugins\" : [ [ \"import\" , { \"libraryName\" : \"vant\" , \"libraryDirectory\" : \"es\" , \"style\" : true }] ] } App.vue\u5f15\u5165vant\u7ec4\u4ef6 < template > < div id = \"app\" > < van-button type = \"primary\" > \u6309\u94ae\u7ec4\u4ef6 </ van-button > </ div > </ template > < script > import { Button } from 'vant' ; export default { name : 'app' , components : { [ Button . name ] : Button } } </ script > 3\u3001\u8def\u7531vue-router cnpm i vue - router --save \u67e5\u8be2 async index () { const { ctx , app } = this ; const res = await app . mysql . select ( \"article\" ); console . log ( res ); } 4\u3001\u5904\u7406\u65f6\u95f4 cnpm i moment --save // \u540e\u7aef\u4fdd\u5b58\u4e4b\u524d const moment = require ( 'moment' ); const create_time = moment (). format ( 'YYYY-MM-DD HH:mm:ss' ); // 2019-10-13 22:29:23 //\u524d\u7aef\u5c55\u793a\u4e4b\u524d import momemt from 'moment' ; this . list = res . data . map ( item =>{ if ( item . create_time ){ item . create_time = moment ( item . create_time ). format ( 'YYYY-MM-DD HH:mm:ss' ); } return item ; }); 5\u3001\u5ba2\u6237\u7aef\u8de8\u57df\u8bf7\u6c42 vue.config.js module . exports = { // \u5904\u7406\u8de8\u57df\u8bf7\u6c42 devServer : { proxy : { '/article' : { target : \"http://127.0.0.1:7001/\" , ws : true , // \u5141\u8bb8websockt\u670d\u52a1 changeOrigin : true // \u5f00\u542f\u865a\u62df\u670d\u52a1\u5668\uff0c\u8bf7\u6c42\u4ee3\u7406\u670d\u52a1\u5668 } } } }","title":"\u524d\u7aef\u5f00\u53d1"},{"location":"JavaScript/Egg-js\u5b9e\u4f8b/","text":"\u524d\u540e\u7aef\u73af\u5883 $ node -v v10.16.0 \u524d\u7aef\u90e8\u5206 1\u3001\u9879\u76ee\u73af\u5883 # \u521b\u5efa\u9879\u76ee cnpm install -g @vue/cli vue create client && cd client # \u5b89\u88c5\u4f9d\u8d56 cnpm i vant -S # vant cnpm i babel-plugin-import -D cnpm i vue-router --save # \u8def\u7531 cnpm i moment --save # \u65f6\u95f4\u5904\u7406 # \u542f\u52a8\u670d\u52a1 npm run serve 2\u3001\u9879\u76ee\u76ee\u5f55 \u251c\u2500\u2500 . babelrc // \u65b0\u5efa \u251c\u2500\u2500 . gitignore \u251c\u2500\u2500 README . md \u251c\u2500\u2500 babel . config . js \u251c\u2500\u2500 package - lock . json \u251c\u2500\u2500 package . json \u251c\u2500\u2500 public \u2502 \u251c\u2500\u2500 favicon . ico \u2502 \u2514\u2500\u2500 index . html \u251c\u2500\u2500 src \u2502 \u251c\u2500\u2500 App . vue \u2502 \u251c\u2500\u2500 assets \u2502 \u2502 \u2514\u2500\u2500 logo . png \u2502 \u251c\u2500\u2500 main . js \u2502 \u251c\u2500\u2500 router // \u65b0\u5efa \u2502 \u2502 \u2514\u2500\u2500 index . js \u2502 \u2514\u2500\u2500 view // \u65b0\u5efa \u2502 \u251c\u2500\u2500 Add . vue \u2502 \u251c\u2500\u2500 Detail . vue \u2502 \u2514\u2500\u2500 Home . vue \u2514\u2500\u2500 vue . config . js // \u65b0\u5efa 3\u3001\u6587\u4ef6\u5185\u5bb9 .babelrc { \"plugins\" : [ [ \"import\" , { \"libraryName\" : \"vant\" , \"libraryDirectory\" : \"es\" , \"style\" : true } ] ] } vue.config.js module . exports = { // \u5904\u7406\u8de8\u57df\u8bf7\u6c42 devServer : { proxy : { '/article' : { target : \"http://127.0.0.1:7001/\" , ws : true , // \u5141\u8bb8websockt\u670d\u52a1 changeOrigin : true // \u5f00\u542f\u865a\u62df\u670d\u52a1\u5668\uff0c\u8bf7\u6c42\u4ee3\u7406\u670d\u52a1\u5668 } } } } /src/router/index.js import Vue from 'vue' import VueRouter from 'vue-router' Vue . use ( VueRouter ); const router = new VueRouter ({ mode : 'hash' , routes : [ { path : '/' , component : () => import ( '../view/Home.vue' ) }, { path : '/detail' , component : () => import ( '../view/Detail.vue' ) }, { path : '/add' , component : () => import ( '../view/Add.vue' ) } ] }) export default router /src/main.js import Vue from 'vue' import App from './App.vue' import router from './router' Vue . config . productionTip = false new Vue ({ router , render : h => h ( App ), }). $mount ( '#app' ) /src/App.vue < template > < div id = \"app\" > < router-view ></ router-view > < van-tabbar route > < van-tabbar-item replace to = \"/\" icon = \"home-o\" > \u4e3b\u9875 </ van-tabbar-item > < van-tabbar-item replace to = \"/add\" icon = \"plus\" > \u53d1\u5e03 </ van-tabbar-item > </ van-tabbar > </ div > </ template > < script > import { Tabbar , TabbarItem } from \"vant\" ; export default { name : \"app\" , components : { [ Tabbar . name ] : Tabbar , [ TabbarItem . name ] : TabbarItem , } }; </ script > < style > </ style > /src/view/Home.vue < template > < div > < van-list v-model = \"loading\" :finished = \"finished\" finished-text = \"\u6ca1\u6709\u66f4\u591a\u4e86\" @ load = \"onLoad\" > < van-cell v-for = \"item in list\" :key = \"item.id\" @ click = \"handleItemClick(item.id)\" > < div class = \"item\" > < div class = \"left\" > < img :src = \"item.image\" /> </ div > < div class = \"right\" > < div class = \"title\" > {{item.title}} </ div > < div class = \"create_time\" > {{item.create_time}} </ div > </ div > </ div > </ van-cell > </ van-list > </ div > </ template > < script > import { List , Cell , Toast } from \"vant\" ; import moment from \"moment\" ; export default { components : { [ List . name ] : List , [ Cell . name ] : Cell }, data () { return { list : [], loading : false , finished : false }; }, methods : { handleItemClick ( uid ) { console . log ( uid ); this . $router . push ({ path : \"/detail\" , query : { id : uid } }); }, onLoad () { fetch ( \"/article/list\" ) . then ( res => res . json ()) . then ( res => { if ( res . status === 200 ) { this . loading = false ; this . finished = true ; // \u5904\u7406\u8fd4\u56de\u7684\u65f6\u95f4\u683c\u5f0f this . list = res . data . map ( item => { if ( item . create_time ) { item . create_time = moment ( item . create_time ). format ( \"YYYY-MM-DD HH:mm:ss\" ); } return item ; }); } else { Toast . fails ( res . msg ); } }); } } }; </ script > < style scoped > . item { display : flex ; flex-direction : row ; } . item . left , . item img { height : 100 px ; width : 150 px ; border-radius : 10 px ; } . item . right { display : flex ; flex-direction : column ; justify-content : space-between ; margin-left : 15 px ; } . item . right . title { font-size : 18 px ; } . item . right . create_time { font-size : 12 px ; color : #9e9e9e ; } </ style > /src/view/Detail.vue < template > < div class = \"detail\" > < div class = \"title\" > {{detail.title}} </ div > < div class = \"create-time\" > {{detail.create_time}} </ div > < div class = \"summary\" > {{detail.summary}} </ div > < div class = \"content\" > {{detail.content}} </ div > </ div > </ template > < script > import moment from \"moment\" ; import { Toast } from 'vant' ; export default { data () { return { detail : {} }; }, created () { fetch ( \"/article/detail/\" + this . $route . query . id ) . then ( res => res . json ()) . then ( res => { if ( res . status === 200 ) { this . detail = res . data ; this . detail . create_time = this . detail . create_time ? moment ( this . detail . create_time ). format ( \"YYYY-MM-DD HH:mm:ss\" ) : undefined ; } else { Toast . fail ( res . msg ); } }); } }; </ script > < style scoped > . detail { padding : 20 px ; text-align : left ; } . detail . title { font-size : 25 px ; margin-bottom : 20 px ; } . detail . create-time { text-align : right ; color : #9e9e9e ; margin-bottom : 20 px ; } . detail . summary { padding : 20 px ; background : #dcdcdc ; margin-bottom : 20 px ; } . detail . content { text-indent : 2 em ; line-height : 200 % ; } </ style > /src/view/Add.vue < template > < div > < van-uploader v-model = \"fileList\" :after-read = \"afterRead\" :max-count = \"1\" /> < van-cell-group > < van-field v-model = \"title\" label = \"\u6587\u7ae0\u6807\u9898\" placeholder = \"\u6587\u7ae0\u6807\u9898\" /> < van-field v-model = \"summary\" label = \"\u6587\u7ae0\u6458\u8981\" placeholder = \"\u6587\u7ae0\u6458\u8981\" /> < van-field v-model = \"content\" label = \"\u6587\u7ae0\u5185\u5bb9\" type = 'textarea' autosize placeholder = \"\u6587\u7ae0\u5185\u5bb9\" /> </ van-cell-group > < van-button type = \"primary\" @ click = \"handleAdd\" class = \"add-button\" > \u63d0\u4ea4 </ van-button > </ div > </ template > < script > import { Field , Button , CellGroup , Uploader , Toast } from 'vant' ; export default { components : { [ Field . name ] : Field , [ Button . name ] : Button , [ CellGroup . name ] : CellGroup , [ Uploader . name ] : Uploader , }, data () { return { fileList : [], title : \"\" , summary : \"\" , content : \"\" , image : \"\" }; }, methods : { afterRead ( file ) { console . log ( file ); // this.image = file.content }, handleAdd (){ const data = { title : this . title , summary : this . summary , content : this . content , image : this . image , } fetch ( '/article/create' , { method : 'post' , headers : { 'Content-type' : 'application/json' }, body : JSON . stringify ( data ) }) . then ( res => res . json ()) . then ( res =>{ if ( res . status === 200 ){ Toast . success ( \"\u6587\u7ae0\u53d1\u5e03\u6210\u529f\" ); this . $router . push ( '/' ); } else { Toast . fail ( res . msg ); } }) console . log ( data ); } } }; </ script > < style scoped > . add-button { position : absolute ; left : 0 ; bottom : 80 px ; width : 100 % } </ style > \u540e\u7aef\u90e8\u5206 1\u3001\u9879\u76ee\u73af\u5883 # \u9879\u76ee\u73af\u5883 mkdir server && cd server cnpm init egg --type = simple cnpm i cnpm i egg-view-ejs # \u6a21\u677f cnpm i --save egg-mysql # \u6570\u636e\u5e93 cnpm i moment --save # \u65f6\u95f4\u5904\u7406 # \u542f\u52a8\u670d\u52a1 cnpm run dev 2\u3001\u9879\u76ee\u76ee\u5f55 . \u251c\u2500\u2500 README . md \u251c\u2500\u2500 app \u2502 \u251c\u2500\u2500 router . js \u2502 \u251c\u2500\u2500 controller \u2502 \u2502 \u251c\u2500\u2500 article . js \u2502 \u251c\u2500\u2500 service \u2502 \u2502 \u251c\u2500\u2500 article . js \u251c\u2500\u2500 config \u2502 \u251c\u2500\u2500 config . default . js \u2502 \u2514\u2500\u2500 plugin . js \u2514\u2500\u2500 package . json 3\u3001\u6587\u4ef6\u5185\u5bb9 config/plugin.js 'use strict' ; // \u6a21\u677f\u5f15\u64ce exports . ejs = { enable : true , package : 'egg-view-ejs' , }; // mysql exports . mysql = { enable : true , package : 'egg-mysql' , }; config/config.default.js /* eslint valid-jsdoc: \"off\" */ 'use strict' ; /** * @param {Egg.EggAppInfo} appInfo app info */ module . exports = appInfo => { /** * built-in config * @type {Egg.EggAppConfig} **/ const config = exports = {}; // \u5173\u95edscrf config . security = { csrf : { enable : false , }, }; // \u914d\u7f6e\u6a21\u677f\u5f15\u64ce config . view = { mapping : { '.html' : 'ejs' , }, }; // \u914d\u7f6e\u6570\u636e\u5e93 config . mysql = { // \u5355\u6570\u636e\u5e93\u4fe1\u606f\u914d\u7f6e client : { // host host : '127.0.0.1' , // \u7aef\u53e3\u53f7 port : '3306' , // \u7528\u6237\u540d user : 'root' , // \u5bc6\u7801 password : 'aBc@123456' , // \u6570\u636e\u5e93\u540d database : 'data' , }, // \u662f\u5426\u52a0\u8f7d\u5230 app \u4e0a\uff0c\u9ed8\u8ba4\u5f00\u542f app : true , // \u662f\u5426\u52a0\u8f7d\u5230 agent \u4e0a\uff0c\u9ed8\u8ba4\u5173\u95ed agent : false , }; // use for cookie sign key, should change to your own and keep security config . keys = appInfo . name + '_1570720226826_6549' ; // add your middleware config here config . middleware = []; // add your user config here const userConfig = { // myAppName: 'egg', }; return { ... config , ... userConfig , }; }; app/router.js 'use strict' ; /** * @param {Egg.Application} app - egg application */ module . exports = app => { const { router , controller } = app ; router . post ( '/article/create' , controller . article . create ); router . get ( '/article/list' , controller . article . list ); router . get ( '/article/detail/:id' , controller . article . detail ); }; app/service/article.js 'use strict' ; const Service = require ( 'egg' ). Service ; class ArticleService extends Service { async create ( params ) { const { app } = this ; try { const result = await app . mysql . insert ( 'article' , params ); return result ; } catch ( err ) { console . log ( err ); return null ; } } async list () { const { app } = this ; try { // \u67e5\u8be2\u6240\u6709\u6570\u636e const result = await app . mysql . select ( 'article' ); return result ; } catch ( err ) { console . log ( err ); return null ; } } async detail ( id ) { const { app } = this ; if ( ! id ){ console . log ( \"id\u4e0d\u80fd\u4e3a\u7a7a\" ); return null ; } try { // \u67e5\u8be2\u6570\u636e const result = await app . mysql . get ( 'article' , { id }); return result ; } catch ( err ) { console . log ( err ); return null ; } } } module . exports = ArticleService ; app/controller/article.js 'use strict' ; const Controller = require ( 'egg' ). Controller ; const moment = require ( 'moment' ); class ArticleController extends Controller { async create () { const { ctx } = this ; const data = { ... ctx . request . body , create_time : moment (). format ( 'YYYY-MM-DD HH:mm:ss' ) } const res = await ctx . service . article . create ( data ); if ( res ) { ctx . body = { status : 200 , data : res , } } else { ctx . body = { status : 500 , data : null , msg : '\u53d1\u5e03\u5931\u8d25' } } } async list () { const { ctx } = this ; const res = await ctx . service . article . list (); if ( res ) { ctx . body = { status : 200 , data : res , } } else { ctx . body = { status : 500 , data : null , msg : '\u6587\u7ae0\u5217\u8868\u83b7\u53d6\u5931\u8d25' } } } async detail () { const { ctx } = this ; const res = await ctx . service . article . detail ( ctx . params . id ); if ( res ) { ctx . body = { status : 200 , data : res , } } else { ctx . body = { status : 500 , data : null , msg : '\u6587\u7ae0\u5217\u8868\u83b7\u53d6\u5931\u8d25' } } } } module . exports = ArticleController ; 4\u3001mysql\u5efa\u8868\u8bed\u53e5 create table article ( id int ( 11 ) primary key not null auto_increment , title varchar ( 255 ) not null default '' comment '\u6587\u7ae0\u6807\u9898' , create_time timestamp default null comment '\u53d1\u5e03\u65f6\u95f4' , summary varchar ( 255 ) not null default '' comment '\u6587\u7ae0\u7b80\u4ecb' , content text default null comment '\u6587\u7ae0\u5185\u5bb9' , image text default null comment '\u6587\u7ae0\u56fe\u7247' ) engine = InnoDB comment \"\u6587\u7ae0\u8868\"","title":"Egg js\u5b9e\u4f8b"},{"location":"JavaScript/Egg-js\u5b9e\u4f8b/#_1","text":"1\u3001\u9879\u76ee\u73af\u5883 # \u521b\u5efa\u9879\u76ee cnpm install -g @vue/cli vue create client && cd client # \u5b89\u88c5\u4f9d\u8d56 cnpm i vant -S # vant cnpm i babel-plugin-import -D cnpm i vue-router --save # \u8def\u7531 cnpm i moment --save # \u65f6\u95f4\u5904\u7406 # \u542f\u52a8\u670d\u52a1 npm run serve 2\u3001\u9879\u76ee\u76ee\u5f55 \u251c\u2500\u2500 . babelrc // \u65b0\u5efa \u251c\u2500\u2500 . gitignore \u251c\u2500\u2500 README . md \u251c\u2500\u2500 babel . config . js \u251c\u2500\u2500 package - lock . json \u251c\u2500\u2500 package . json \u251c\u2500\u2500 public \u2502 \u251c\u2500\u2500 favicon . ico \u2502 \u2514\u2500\u2500 index . html \u251c\u2500\u2500 src \u2502 \u251c\u2500\u2500 App . vue \u2502 \u251c\u2500\u2500 assets \u2502 \u2502 \u2514\u2500\u2500 logo . png \u2502 \u251c\u2500\u2500 main . js \u2502 \u251c\u2500\u2500 router // \u65b0\u5efa \u2502 \u2502 \u2514\u2500\u2500 index . js \u2502 \u2514\u2500\u2500 view // \u65b0\u5efa \u2502 \u251c\u2500\u2500 Add . vue \u2502 \u251c\u2500\u2500 Detail . vue \u2502 \u2514\u2500\u2500 Home . vue \u2514\u2500\u2500 vue . config . js // \u65b0\u5efa 3\u3001\u6587\u4ef6\u5185\u5bb9 .babelrc { \"plugins\" : [ [ \"import\" , { \"libraryName\" : \"vant\" , \"libraryDirectory\" : \"es\" , \"style\" : true } ] ] } vue.config.js module . exports = { // \u5904\u7406\u8de8\u57df\u8bf7\u6c42 devServer : { proxy : { '/article' : { target : \"http://127.0.0.1:7001/\" , ws : true , // \u5141\u8bb8websockt\u670d\u52a1 changeOrigin : true // \u5f00\u542f\u865a\u62df\u670d\u52a1\u5668\uff0c\u8bf7\u6c42\u4ee3\u7406\u670d\u52a1\u5668 } } } } /src/router/index.js import Vue from 'vue' import VueRouter from 'vue-router' Vue . use ( VueRouter ); const router = new VueRouter ({ mode : 'hash' , routes : [ { path : '/' , component : () => import ( '../view/Home.vue' ) }, { path : '/detail' , component : () => import ( '../view/Detail.vue' ) }, { path : '/add' , component : () => import ( '../view/Add.vue' ) } ] }) export default router /src/main.js import Vue from 'vue' import App from './App.vue' import router from './router' Vue . config . productionTip = false new Vue ({ router , render : h => h ( App ), }). $mount ( '#app' ) /src/App.vue < template > < div id = \"app\" > < router-view ></ router-view > < van-tabbar route > < van-tabbar-item replace to = \"/\" icon = \"home-o\" > \u4e3b\u9875 </ van-tabbar-item > < van-tabbar-item replace to = \"/add\" icon = \"plus\" > \u53d1\u5e03 </ van-tabbar-item > </ van-tabbar > </ div > </ template > < script > import { Tabbar , TabbarItem } from \"vant\" ; export default { name : \"app\" , components : { [ Tabbar . name ] : Tabbar , [ TabbarItem . name ] : TabbarItem , } }; </ script > < style > </ style > /src/view/Home.vue < template > < div > < van-list v-model = \"loading\" :finished = \"finished\" finished-text = \"\u6ca1\u6709\u66f4\u591a\u4e86\" @ load = \"onLoad\" > < van-cell v-for = \"item in list\" :key = \"item.id\" @ click = \"handleItemClick(item.id)\" > < div class = \"item\" > < div class = \"left\" > < img :src = \"item.image\" /> </ div > < div class = \"right\" > < div class = \"title\" > {{item.title}} </ div > < div class = \"create_time\" > {{item.create_time}} </ div > </ div > </ div > </ van-cell > </ van-list > </ div > </ template > < script > import { List , Cell , Toast } from \"vant\" ; import moment from \"moment\" ; export default { components : { [ List . name ] : List , [ Cell . name ] : Cell }, data () { return { list : [], loading : false , finished : false }; }, methods : { handleItemClick ( uid ) { console . log ( uid ); this . $router . push ({ path : \"/detail\" , query : { id : uid } }); }, onLoad () { fetch ( \"/article/list\" ) . then ( res => res . json ()) . then ( res => { if ( res . status === 200 ) { this . loading = false ; this . finished = true ; // \u5904\u7406\u8fd4\u56de\u7684\u65f6\u95f4\u683c\u5f0f this . list = res . data . map ( item => { if ( item . create_time ) { item . create_time = moment ( item . create_time ). format ( \"YYYY-MM-DD HH:mm:ss\" ); } return item ; }); } else { Toast . fails ( res . msg ); } }); } } }; </ script > < style scoped > . item { display : flex ; flex-direction : row ; } . item . left , . item img { height : 100 px ; width : 150 px ; border-radius : 10 px ; } . item . right { display : flex ; flex-direction : column ; justify-content : space-between ; margin-left : 15 px ; } . item . right . title { font-size : 18 px ; } . item . right . create_time { font-size : 12 px ; color : #9e9e9e ; } </ style > /src/view/Detail.vue < template > < div class = \"detail\" > < div class = \"title\" > {{detail.title}} </ div > < div class = \"create-time\" > {{detail.create_time}} </ div > < div class = \"summary\" > {{detail.summary}} </ div > < div class = \"content\" > {{detail.content}} </ div > </ div > </ template > < script > import moment from \"moment\" ; import { Toast } from 'vant' ; export default { data () { return { detail : {} }; }, created () { fetch ( \"/article/detail/\" + this . $route . query . id ) . then ( res => res . json ()) . then ( res => { if ( res . status === 200 ) { this . detail = res . data ; this . detail . create_time = this . detail . create_time ? moment ( this . detail . create_time ). format ( \"YYYY-MM-DD HH:mm:ss\" ) : undefined ; } else { Toast . fail ( res . msg ); } }); } }; </ script > < style scoped > . detail { padding : 20 px ; text-align : left ; } . detail . title { font-size : 25 px ; margin-bottom : 20 px ; } . detail . create-time { text-align : right ; color : #9e9e9e ; margin-bottom : 20 px ; } . detail . summary { padding : 20 px ; background : #dcdcdc ; margin-bottom : 20 px ; } . detail . content { text-indent : 2 em ; line-height : 200 % ; } </ style > /src/view/Add.vue < template > < div > < van-uploader v-model = \"fileList\" :after-read = \"afterRead\" :max-count = \"1\" /> < van-cell-group > < van-field v-model = \"title\" label = \"\u6587\u7ae0\u6807\u9898\" placeholder = \"\u6587\u7ae0\u6807\u9898\" /> < van-field v-model = \"summary\" label = \"\u6587\u7ae0\u6458\u8981\" placeholder = \"\u6587\u7ae0\u6458\u8981\" /> < van-field v-model = \"content\" label = \"\u6587\u7ae0\u5185\u5bb9\" type = 'textarea' autosize placeholder = \"\u6587\u7ae0\u5185\u5bb9\" /> </ van-cell-group > < van-button type = \"primary\" @ click = \"handleAdd\" class = \"add-button\" > \u63d0\u4ea4 </ van-button > </ div > </ template > < script > import { Field , Button , CellGroup , Uploader , Toast } from 'vant' ; export default { components : { [ Field . name ] : Field , [ Button . name ] : Button , [ CellGroup . name ] : CellGroup , [ Uploader . name ] : Uploader , }, data () { return { fileList : [], title : \"\" , summary : \"\" , content : \"\" , image : \"\" }; }, methods : { afterRead ( file ) { console . log ( file ); // this.image = file.content }, handleAdd (){ const data = { title : this . title , summary : this . summary , content : this . content , image : this . image , } fetch ( '/article/create' , { method : 'post' , headers : { 'Content-type' : 'application/json' }, body : JSON . stringify ( data ) }) . then ( res => res . json ()) . then ( res =>{ if ( res . status === 200 ){ Toast . success ( \"\u6587\u7ae0\u53d1\u5e03\u6210\u529f\" ); this . $router . push ( '/' ); } else { Toast . fail ( res . msg ); } }) console . log ( data ); } } }; </ script > < style scoped > . add-button { position : absolute ; left : 0 ; bottom : 80 px ; width : 100 % } </ style >","title":"\u524d\u7aef\u90e8\u5206"},{"location":"JavaScript/Egg-js\u5b9e\u4f8b/#_2","text":"1\u3001\u9879\u76ee\u73af\u5883 # \u9879\u76ee\u73af\u5883 mkdir server && cd server cnpm init egg --type = simple cnpm i cnpm i egg-view-ejs # \u6a21\u677f cnpm i --save egg-mysql # \u6570\u636e\u5e93 cnpm i moment --save # \u65f6\u95f4\u5904\u7406 # \u542f\u52a8\u670d\u52a1 cnpm run dev 2\u3001\u9879\u76ee\u76ee\u5f55 . \u251c\u2500\u2500 README . md \u251c\u2500\u2500 app \u2502 \u251c\u2500\u2500 router . js \u2502 \u251c\u2500\u2500 controller \u2502 \u2502 \u251c\u2500\u2500 article . js \u2502 \u251c\u2500\u2500 service \u2502 \u2502 \u251c\u2500\u2500 article . js \u251c\u2500\u2500 config \u2502 \u251c\u2500\u2500 config . default . js \u2502 \u2514\u2500\u2500 plugin . js \u2514\u2500\u2500 package . json 3\u3001\u6587\u4ef6\u5185\u5bb9 config/plugin.js 'use strict' ; // \u6a21\u677f\u5f15\u64ce exports . ejs = { enable : true , package : 'egg-view-ejs' , }; // mysql exports . mysql = { enable : true , package : 'egg-mysql' , }; config/config.default.js /* eslint valid-jsdoc: \"off\" */ 'use strict' ; /** * @param {Egg.EggAppInfo} appInfo app info */ module . exports = appInfo => { /** * built-in config * @type {Egg.EggAppConfig} **/ const config = exports = {}; // \u5173\u95edscrf config . security = { csrf : { enable : false , }, }; // \u914d\u7f6e\u6a21\u677f\u5f15\u64ce config . view = { mapping : { '.html' : 'ejs' , }, }; // \u914d\u7f6e\u6570\u636e\u5e93 config . mysql = { // \u5355\u6570\u636e\u5e93\u4fe1\u606f\u914d\u7f6e client : { // host host : '127.0.0.1' , // \u7aef\u53e3\u53f7 port : '3306' , // \u7528\u6237\u540d user : 'root' , // \u5bc6\u7801 password : 'aBc@123456' , // \u6570\u636e\u5e93\u540d database : 'data' , }, // \u662f\u5426\u52a0\u8f7d\u5230 app \u4e0a\uff0c\u9ed8\u8ba4\u5f00\u542f app : true , // \u662f\u5426\u52a0\u8f7d\u5230 agent \u4e0a\uff0c\u9ed8\u8ba4\u5173\u95ed agent : false , }; // use for cookie sign key, should change to your own and keep security config . keys = appInfo . name + '_1570720226826_6549' ; // add your middleware config here config . middleware = []; // add your user config here const userConfig = { // myAppName: 'egg', }; return { ... config , ... userConfig , }; }; app/router.js 'use strict' ; /** * @param {Egg.Application} app - egg application */ module . exports = app => { const { router , controller } = app ; router . post ( '/article/create' , controller . article . create ); router . get ( '/article/list' , controller . article . list ); router . get ( '/article/detail/:id' , controller . article . detail ); }; app/service/article.js 'use strict' ; const Service = require ( 'egg' ). Service ; class ArticleService extends Service { async create ( params ) { const { app } = this ; try { const result = await app . mysql . insert ( 'article' , params ); return result ; } catch ( err ) { console . log ( err ); return null ; } } async list () { const { app } = this ; try { // \u67e5\u8be2\u6240\u6709\u6570\u636e const result = await app . mysql . select ( 'article' ); return result ; } catch ( err ) { console . log ( err ); return null ; } } async detail ( id ) { const { app } = this ; if ( ! id ){ console . log ( \"id\u4e0d\u80fd\u4e3a\u7a7a\" ); return null ; } try { // \u67e5\u8be2\u6570\u636e const result = await app . mysql . get ( 'article' , { id }); return result ; } catch ( err ) { console . log ( err ); return null ; } } } module . exports = ArticleService ; app/controller/article.js 'use strict' ; const Controller = require ( 'egg' ). Controller ; const moment = require ( 'moment' ); class ArticleController extends Controller { async create () { const { ctx } = this ; const data = { ... ctx . request . body , create_time : moment (). format ( 'YYYY-MM-DD HH:mm:ss' ) } const res = await ctx . service . article . create ( data ); if ( res ) { ctx . body = { status : 200 , data : res , } } else { ctx . body = { status : 500 , data : null , msg : '\u53d1\u5e03\u5931\u8d25' } } } async list () { const { ctx } = this ; const res = await ctx . service . article . list (); if ( res ) { ctx . body = { status : 200 , data : res , } } else { ctx . body = { status : 500 , data : null , msg : '\u6587\u7ae0\u5217\u8868\u83b7\u53d6\u5931\u8d25' } } } async detail () { const { ctx } = this ; const res = await ctx . service . article . detail ( ctx . params . id ); if ( res ) { ctx . body = { status : 200 , data : res , } } else { ctx . body = { status : 500 , data : null , msg : '\u6587\u7ae0\u5217\u8868\u83b7\u53d6\u5931\u8d25' } } } } module . exports = ArticleController ; 4\u3001mysql\u5efa\u8868\u8bed\u53e5 create table article ( id int ( 11 ) primary key not null auto_increment , title varchar ( 255 ) not null default '' comment '\u6587\u7ae0\u6807\u9898' , create_time timestamp default null comment '\u53d1\u5e03\u65f6\u95f4' , summary varchar ( 255 ) not null default '' comment '\u6587\u7ae0\u7b80\u4ecb' , content text default null comment '\u6587\u7ae0\u5185\u5bb9' , image text default null comment '\u6587\u7ae0\u56fe\u7247' ) engine = InnoDB comment \"\u6587\u7ae0\u8868\"","title":"\u540e\u7aef\u90e8\u5206"},{"location":"JavaScript/JavaScript\u5feb\u901f\u5165\u95e8/","text":"JavaScript https://www.liaoxuefeng.com/wiki/1022910821149312 \u57fa\u672c\u8bed\u6cd5 alert ( \"hello word!\" ) console . log ( \"hello word!\" ); // \u907f\u514d\u5f39\u51fa\u70e6\u4eba\u7684\u5bf9\u8bdd\u6846 // JavaScript\u4e25\u683c\u533a\u5206\u5927\u5c0f\u5199 // \u5355\u884c\u6ce8\u91ca /*\u591a\u884c\u6ce8\u91ca*/ // \u8d4b\u503c\u8bed\u53e5, \u6bcf\u4e2a\u8bed\u53e5\u7528;\u8868\u793a\u8bed\u53e5\u7ed3\u675f var x = 1 ; // \u8bed\u53e5\u5757\u662f\u4e00\u7ec4\u8bed\u53e5\u7684\u96c6\u5408, \u53ef\u4ee5\u5d4c\u5957 if ( 2 > 1 ) { // do something } \u6570\u636e\u7c7b\u578b\u548c\u53d8\u91cf 1\u3001Number JavaScript\u4e0d\u533a\u5206\u6574\u6570\u548c\u6d6e\u70b9\u6570 123 ; // \u6574\u6570123 0.456 ; // \u6d6e\u70b9\u65700.456 1.2345e3 ; // \u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a1.2345x1000\uff0c\u7b49\u540c\u4e8e1234.5 - 99 ; // \u8d1f\u6570 NaN ; // NaN\u8868\u793aNot a Number Infinity ; // Infinity\u8868\u793a\u65e0\u9650\u5927 // \u5341\u516d\u8fdb\u5236\u75280x\u524d\u7f00\u548c0-9\uff0ca-f\u8868\u793a eg: 0xff00 \u652f\u6301\u56db\u5219\u8fd0\u7b97\uff0c%\u662f\u6c42\u4f59\u8fd0\u7b97 2\u3001\u5b57\u7b26\u4e32 \u5355\u5f15\u53f7'\u6216\u53cc\u5f15\u53f7\" 3\u3001\u5e03\u5c14\u503c true\u3001false && \u4e0e\u8fd0\u7b97 || \u6216\u8fd0\u7b97 ! \u975e\u8fd0\u7b97 \u76f8\u7b49\u8fd0\u7b97\u7b26 == // \u81ea\u52a8\u8f6c\u6362\u6570\u636e\u7c7b\u578b\u518d\u6bd4\u8f83 === // \u4e0d\u4f1a\u81ea\u52a8\u8f6c\u6362\u6570\u636e\u7c7b\u578b(\u63a8\u8350) \u552f\u4e00\u80fd\u5224\u65adNaN\u7684\u65b9\u6cd5\u662f\uff1a isNaN ( NaN ) \u6d6e\u70b9\u6570\u5728\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\u4f1a\u4ea7\u751f\u8bef\u5dee\uff0c\u56e0\u4e3a\u8ba1\u7b97\u673a\u65e0\u6cd5\u7cbe\u786e\u8868\u793a\u65e0\u9650\u5faa\u73af\u5c0f\u6570 null // \u8868\u793a\u4e00\u4e2a\u201c\u7a7a\u201d \u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4f7f\u7528 0 // \u4e00\u4e2a\u6570\u503c '' // \u8868\u793a\u957f\u5ea6\u4e3a0\u7684\u5b57\u7b26\u4e32 undefined // \u8868\u793a\u201c\u672a\u5b9a\u4e49\u201d 4\u3001\u6570\u7ec4 \u6570\u7ec4\u662f\u4e00\u7ec4\u6309\u987a\u5e8f\u6392\u5217\u7684\u96c6\u5408\uff0c\u96c6\u5408\u7684\u6bcf\u4e2a\u503c\u79f0\u4e3a\u5143\u7d20\u3002 JavaScript\u7684\u6570\u7ec4\u53ef\u4ee5\u5305\u62ec\u4efb\u610f\u6570\u636e\u7c7b\u578b\u3002\u4f8b\u5982\uff1a [ 1 , 2 , 3.14 , 'Hello' , null , true ]; // \u63a8\u8350 new Array ( 1 , 2 , 3 ); \u7d22\u5f15\u7684\u8d77\u59cb\u503c\u4e3a0 5\u3001\u5bf9\u8c61 JavaScript\u7684\u5bf9\u8c61\u662f\u4e00\u7ec4\u7531\u952e-\u503c\u7ec4\u6210\u7684\u65e0\u5e8f\u96c6\u5408\uff0c\u4f8b\u5982\uff1a var person = { name : 'Bob' , age : 20 , tags : [ 'js' , 'web' , 'mobile' ], city : \"Beijing\" , hasCar : true , zipcode : null } ; JavaScript\u5bf9\u8c61\u7684\u952e\u90fd\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u503c\u53ef\u4ee5\u662f\u4efb\u610f\u6570\u636e\u7c7b\u578b \u6bcf\u4e2a\u952e\u53c8\u79f0\u4e3a\u5bf9\u8c61\u7684\u5c5e\u6027 \u83b7\u53d6\u4e00\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027 // \u5bf9\u8c61\u53d8\u91cf.\u5c5e\u6027\u540d person . name ; // 'Bob' person . zipcode ; // null \u53d8\u91cf \u7533\u660e\u4e00\u4e2a\u53d8\u91cf\u7528var\u8bed\u53e5, \u53ea\u80fd\u7533\u660e\u4e00\u6b21 var a ; // \u7533\u660e\u4e86\u53d8\u91cf a \uff0c\u6b64\u65f6 a\u7684\u503c\u4e3aundefined var $ b = 1 ; // \u7533\u660e\u4e86\u53d8\u91cf$ b \uff0c\u540c\u65f6\u7ed9$ b\u8d4b\u503c \uff0c\u6b64\u65f6$ b\u7684\u503c\u4e3a1 \u53ef\u4ee5\u628a\u4efb\u610f\u6570\u636e\u7c7b\u578b\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u540c\u4e00\u4e2a\u53d8\u91cf\u53ef\u4ee5\u53cd\u590d\u8d4b\u503c\uff0c\u800c\u4e14\u53ef\u4ee5\u662f\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf var a = 123 ; // a\u7684\u503c\u662f\u6574\u6570123 a = 'ABC' ; // a\u53d8\u4e3a\u5b57\u7b26\u4e32 \u52a8\u6001\u8bed\u8a00: \u53d8\u91cf\u672c\u8eab\u7c7b\u578b\u4e0d\u56fa\u5b9a\u7684\u8bed\u8a00 \u9759\u6001\u8bed\u8a00: \u5728\u5b9a\u4e49\u53d8\u91cf\u65f6\u5fc5\u987b\u6307\u5b9a\u53d8\u91cf\u7c7b\u578b\uff0c\u5982\u679c\u8d4b\u503c\u7684\u65f6\u5019\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u5c31\u4f1a\u62a5\u9519\uff0c\u5982Java strict\u6a21\u5f0f \u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u6ca1\u6709\u901a\u8fc7var\u7533\u660e\u5c31\u88ab\u4f7f\u7528\uff0c\u90a3\u4e48\u8be5\u53d8\u91cf\u5c31\u81ea\u52a8\u88ab\u7533\u660e\u4e3a\u5168\u5c40\u53d8\u91cf strict\u6a21\u5f0f: \u5f3a\u5236\u901a\u8fc7var\u7533\u660e\u53d8\u91cf\uff0c\u672a\u4f7f\u7528var\u7533\u660e\u53d8\u91cf\u5c31\u4f7f\u7528\u7684\uff0c\u5c06\u5bfc\u81f4\u8fd0\u884c\u9519\u8bef \u542f\u7528strict\u6a21\u5f0f 'use strict' ; \u5b57\u7b26\u4e32 JavaScript\u5b57\u7b26\u4e32\u5c31\u662f\u7528''\u6216\"\"\u62ec\u8d77\u6765\u7684\u5b57\u7b26\u8868\u793a \u8f6c\u4e49\u5b57\u7b26 \\ n \u8868\u793a\u6362\u884c \\ t \u8868\u793a\u5236\u8868\u7b26 \\\\ \u8868\u793a\u7684\u5b57\u7b26\u5c31\u662f\\ ASCII\u5b57\u7b26\u53ef\u4ee5\u4ee5\\x##\u5f62\u5f0f\u7684\u5341\u516d\u8fdb\u5236\u8868\u793a\uff1a '\\x41' ; // \u5b8c\u5168\u7b49\u540c\u4e8e 'A' \u8fd8\u53ef\u4ee5\u7528\\u####\u8868\u793a\u4e00\u4e2aUnicode\u5b57\u7b26\uff1a '\\u4e2d\\u6587' ; // \u5b8c\u5168\u7b49\u540c\u4e8e '\u4e2d\u6587' \u591a\u884c\u5b57\u7b26\u4e32 \u6700\u65b0\u7684ES6\u6807\u51c6 ` \u8fd9\u662f\u4e00\u4e2a \u591a\u884c \u5b57\u7b26\u4e32 ` ; \u6a21\u677f\u5b57\u7b26\u4e32 var name = '\u5c0f\u660e'; var age = 20; // + \u62fc\u63a5 var message = '\u4f60\u597d, ' + name + ', \u4f60\u4eca\u5e74' + age + '\u5c81\u4e86!'; // \u6a21\u677f\u5b57\u7b26\u4e32 ES6\u65b0\u589e var message = `\u4f60\u597d, ${ name } , \u4f60\u4eca\u5e74 ${ age } \u5c81\u4e86!`; \u64cd\u4f5c\u5b57\u7b26\u4e32 var s = 'Hello, world!' ; s . length ; // 13 s [ 0 ]; // 'H' \u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7684 \u8c03\u7528\u65b9\u6cd5\uff0c\u672c\u8eab\u4e0d\u4f1a\u6539\u53d8\u539f\u6709\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\uff0c\u800c\u662f\u8fd4\u56de\u4e00\u4e2a\u65b0\u5b57\u7b26\u4e32 toUpperCase () // \u53d8\u4e3a\u5927\u5199 toLowerCase () // \u53d8\u4e3a\u5c0f\u5199 indexOf () // \u641c\u7d22\u6307\u5b9a\u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u4f4d\u7f6e substring () // \u8fd4\u56de\u6307\u5b9a\u7d22\u5f15\u533a\u95f4\u7684\u5b50\u4e32 eg: var s = 'Hello' ; s . toUpperCase (); // \u8fd4\u56de 'HELLO' var lower = s . toLowerCase (); // \u8fd4\u56de 'hello' \u5e76\u8d4b\u503c\u7ed9\u53d8\u91cf lower eg: var s = 'hello, world' ; s . indexOf ( 'world' ); // \u8fd4\u56de 7 s . indexOf ( 'World' ); // \u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684\u5b50\u4e32\uff0c\u8fd4\u56de - 1 s . substring ( 0 , 5 ); // \u4ece\u7d22\u5f15 0 \u5f00\u59cb\u5230 5 \uff08\u4e0d\u5305\u62ec 5 \uff09\uff0c\u8fd4\u56de 'hello' s . substring ( 7 ); // \u4ece\u7d22\u5f15 7 \u5f00\u59cb\u5230\u7ed3\u675f\uff0c\u8fd4\u56de 'world' \u6570\u7ec4 JavaScript\u7684Array\u53ef\u4ee5\u5305\u542b\u4efb\u610f\u6570\u636e\u7c7b\u578b\uff0c\u5e76\u901a\u8fc7\u7d22\u5f15\u6765\u8bbf\u95ee\u6bcf\u4e2a\u5143\u7d20 var arr = [ 1 , 2 , 3 . 14 , 'Hello' , null , true ]; arr . length ; // \u957f\u5ea6 6 arr [ 1 ] = 99 ; // \u4fee\u6539 \u53ef\u4ee5\u4fee\u6539length, \u4e0d\u5efa\u8bae \u7d22\u5f15\u8d85\u8fc7\u4e86\u8303\u56f4\uff0carr\u957f\u5ea6\u4f1a\u53d8\u5316, \u5efa\u8bae\uff1a\u7d22\u5f15\u4e0d\u8981\u8d8a\u754c \u5e38\u7528\u65b9\u6cd5 indexOf () // \u641c\u7d22\u4e00\u4e2a\u6307\u5b9a\u7684\u5143\u7d20\u7684\u4f4d\u7f6e slice () // \u5207\u7247 push () // \u672b\u5c3e\u6dfb\u52a0\u82e5\u5e72\u5143\u7d20 pop () // \u628a Array\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5220\u9664\u6389 unshift () // \u5f80 Array\u7684\u5934\u90e8\u6dfb\u52a0\u82e5\u5e72\u5143\u7d20 shift () // \u628a Array\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5220\u6389 sort () // \u5bf9\u5f53\u524d Array\u8fdb\u884c\u6392\u5e8f reverse () // \u628a\u6574\u4e2a Array\u7684\u5143\u7d20\u53cd\u8f6c splice () // \u66ff\u6362\u5143\u7d20 concat () // \u62fc\u63a5\u6570\u7ec4 , \u8fd4\u56de\u4e86\u4e00\u4e2a\u65b0\u7684 Array join () // \u628a\u5f53\u524d Array\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u7528\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u8fde\u63a5\u8d77\u6765 \uff0c\u7136\u540e\u8fd4\u56de\u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32 var arr = [ 10 , 20 , '30' , 'xyz' ]; arr . indexOf ( 10 ); // \u5143\u7d20 10 \u7684\u7d22\u5f15\u4e3a 0 var arr = [ 'A' , 'B' , 'C' , 'D' , 'E' , 'F' , 'G' ]; arr . slice ( 0 , 3 ); // \u4ece\u7d22\u5f15 0 \u5f00\u59cb\uff0c\u5230\u7d22\u5f15 3 \u7ed3\u675f\uff0c\u4f46\u4e0d\u5305\u62ec\u7d22\u5f15 3 : [ 'A' , 'B' , 'C' ] arr . slice ( 3 ); // \u4ece\u7d22\u5f15 3 \u5f00\u59cb\u5230\u7ed3\u675f : [ 'D' , 'E' , 'F' , 'G' ] // \u6ce8\u610f\u5230 slice () \u7684\u8d77\u6b62\u53c2\u6570\u5305\u62ec\u5f00\u59cb\u7d22\u5f15\uff0c\u4e0d\u5305\u62ec\u7ed3\u675f\u7d22\u5f15\u3002 // \u5982\u679c\u4e0d\u7ed9 slice () \u4f20\u9012\u4efb\u4f55\u53c2\u6570\uff0c\u5b83\u5c31\u4f1a\u4ece\u5934\u5230\u5c3e\u622a\u53d6\u6240\u6709\u5143\u7d20\u3002 // \u5229\u7528\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u590d\u5236\u4e00\u4e2a Array var arr = [ 1 , 2 ]; arr . push ( 'A' , 'B' ); // \u8fd4\u56de Array\u65b0\u7684\u957f\u5ea6 : 4 arr ; // [ 1 , 2 , 'A' , 'B' ] arr . pop (); // pop () \u8fd4\u56de 'B' arr ; // [ 1 , 2 , 'A' ] arr . pop (); arr . pop (); arr . pop (); // \u8fde\u7eed pop 3 \u6b21 arr ; // [] arr . pop (); // \u7a7a\u6570\u7ec4\u7ee7\u7eed pop\u4e0d\u4f1a\u62a5\u9519 \uff0c\u800c\u662f\u8fd4\u56de undefined arr ; // [] var arr = [ 1 , 2 ]; arr . unshift ( 'A' , 'B' ); // \u8fd4\u56de Array\u65b0\u7684\u957f\u5ea6 : 4 arr ; // [ 'A' , 'B' , 1 , 2 ] arr . shift (); // 'A' arr ; // [ 'B' , 1 , 2 ] arr . shift (); arr . shift (); arr . shift (); // \u8fde\u7eed shift 3 \u6b21 arr ; // [] arr . shift (); // \u7a7a\u6570\u7ec4\u7ee7\u7eed shift\u4e0d\u4f1a\u62a5\u9519 \uff0c\u800c\u662f\u8fd4\u56de undefined arr ; // [] var arr = [ 'B' , 'C' , 'A' ]; arr . sort (); arr ; // [ 'A' , 'B' , 'C' ] var arr = [ 'one' , 'two' , 'three' ]; arr . reverse (); arr ; // [ 'three' , 'two' , 'one' ] var arr = [ 'Microsoft' , 'Apple' , 'Yahoo' , 'AOL' , 'Excite' , 'Oracle' ]; // \u4ece\u7d22\u5f15 2 \u5f00\u59cb\u5220\u9664 3 \u4e2a\u5143\u7d20 , \u7136\u540e\u518d\u6dfb\u52a0\u4e24\u4e2a\u5143\u7d20 : arr . splice ( 2 , 3 , 'Google' , 'Facebook' ); // \u8fd4\u56de\u5220\u9664\u7684\u5143\u7d20 [ 'Yahoo' , 'AOL' , 'Excite' ] arr ; // [ 'Microsoft' , 'Apple' , 'Google' , 'Facebook' , 'Oracle' ] // \u53ea\u5220\u9664 , \u4e0d\u6dfb\u52a0 : arr . splice ( 2 , 2 ); // [ 'Google' , 'Facebook' ] arr ; // [ 'Microsoft' , 'Apple' , 'Oracle' ] // \u53ea\u6dfb\u52a0 , \u4e0d\u5220\u9664 : arr . splice ( 2 , 0 , 'Google' , 'Facebook' ); // \u8fd4\u56de [], \u56e0\u4e3a\u6ca1\u6709\u5220\u9664\u4efb\u4f55\u5143\u7d20 arr ; // [ 'Microsoft' , 'Apple' , 'Google' , 'Facebook' , 'Oracle' ] var arr = [ 'A' , 'B' , 'C' ]; var added = arr . concat ([ 1 , 2 , 3 ]); added ; // [ 'A' , 'B' , 'C' , 1 , 2 , 3 ] arr ; // [ 'A' , 'B' , 'C' ] // \u5b9e\u9645\u4e0a\uff0c concat () \u65b9\u6cd5\u53ef\u4ee5\u63a5\u6536\u4efb\u610f\u4e2a\u5143\u7d20\u548c Array \uff0c\u5e76\u4e14\u81ea\u52a8\u628a Array\u62c6\u5f00 \uff0c\u7136\u540e\u5168\u90e8\u6dfb\u52a0\u5230\u65b0\u7684 Array\u91cc \uff1a var arr = [ 'A' , 'B' , 'C' ]; arr . concat ( 1 , 2 , [ 3 , 4 ]); // [ 'A' , 'B' , 'C' , 1 , 2 , 3 , 4 ] var arr = [ 'A' , 'B' , 'C' , 1 , 2 , 3 ]; arr . join ( '-' ); // 'A-B-C-1-2-3' // \u5982\u679c Array\u7684\u5143\u7d20\u4e0d\u662f\u5b57\u7b26\u4e32 \uff0c\u5c06\u81ea\u52a8\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u540e\u518d\u8fde\u63a5 \u591a\u7ef4\u6570\u7ec4 var arr = [[ 1 , 2 , 3 ], [ 400 , 500 , 600 ], '-' ]; \u5bf9\u8c61 JavaScript\u7684\u5bf9\u8c61\u662f\u4e00\u79cd\u65e0\u5e8f\u7684\u96c6\u5408\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u7531\u82e5\u5e72\u952e\u503c\u5bf9\u7ec4\u6210 var xiaohong = { name : '\u5c0f\u7ea2' , 'middle-school' : 'No.1 Middle School' // \u5305\u542b\u7279\u6b8a\u5b57\u7b26 } ; // \u8bbf\u95ee\u5c5e\u6027 object . prop xiaohong [ 'middle-school' ]; // 'No.1 Middle School' xiaohong . name ; // '\u5c0f\u7ea2' // \u68c0\u67e5\u5c5e\u6027 'name' in xiaoming ; // true // \u68c0\u67e5\u81ea\u8eab\u5c5e\u6027 xiaoming . hasOwnProperty ( 'name' ); JavaScript\u89c4\u5b9a\uff0c\u8bbf\u95ee\u4e0d\u5b58\u5728\u7684\u5c5e\u6027\u4e0d\u62a5\u9519\uff0c\u800c\u662f\u8fd4\u56deundefined \u53ef\u4ee5\u81ea\u7531\u5730\u7ed9\u4e00\u4e2a\u5bf9\u8c61\u6dfb\u52a0\u6216\u5220\u9664\u5c5e\u6027 var xiaoming = { name : '\u5c0f\u660e' } ; xiaoming . age ; // undefined xiaoming . age = 18 ; // \u65b0\u589e\u4e00\u4e2a age\u5c5e\u6027 xiaoming . age ; // 18 delete xiaoming . age ; // \u5220\u9664 age\u5c5e\u6027 xiaoming . age ; // undefined delete xiaoming [ 'name' ]; // \u5220\u9664 name\u5c5e\u6027 xiaoming . name ; // undefined delete xiaoming . school ; // \u5220\u9664\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684 school\u5c5e\u6027\u4e5f\u4e0d\u4f1a\u62a5\u9519 \u6240\u6709\u5bf9\u8c61\u6700\u7ec8\u90fd\u4f1a\u5728\u539f\u578b\u94fe\u4e0a\u6307\u5411object \u6761\u4ef6\u5224\u65ad if () { ... } else { ... } \u5982\u679c\u8bed\u53e5\u5757\u53ea\u5305\u542b\u4e00\u6761\u8bed\u53e5\uff0c\u90a3\u4e48\u53ef\u4ee5\u7701\u7565{}, \u4e0d\u63a8\u8350 \u591a\u884c\u6761\u4ef6\u5224\u65ad if () { ... } else if () { ... } else { ... } JavaScript\u628anull\u3001undefined\u30010\u3001NaN\u548c\u7a7a\u5b57\u7b26\u4e32''\u89c6\u4e3afalse\uff0c\u5176\u4ed6\u503c\u4e00\u6982\u89c6\u4e3atrue \u5faa\u73af for ( \u521d\u59cb\u6761\u4ef6 ; \u9012\u589e\u6761\u4ef6; \u7ed3\u675f\u6761\u4ef6){ } for ( ;;) {} // \u65e0\u9650\u5faa\u73af \uff0cbreak\u8bed\u53e5\u9000\u51fa\u5faa\u73af \u904d\u5386\u6570\u7ec4 var arr = [ ' Apple ' , ' Google ' , ' Microsoft ' ] ; var i , x ; for ( i = 0 ; i<arr.length; i++) { x = arr [ i ] ; console . log ( x ) ; } for\u5faa\u73af // \u5bf9\u8c61 var o = { name : ' Jack ' , age : 20 , city : ' Beijing ' } ; for ( var key in o ) { console . log ( key ) ; // 'name', 'age', 'city' } // \u6570\u7ec4 var a = [ ' A ' , ' B ' , ' C ' ] ; for ( var index in a ) { console . log ( index ) ; // '0', '1', '2' \u5f97\u5230\u7684\u662fString\u800c\u4e0d\u662fNumber console . log ( a [ index ] ) ; // 'A', 'B', 'C' } for\u548cwhile\u5faa\u73af\u5219\u53ef\u80fd\u4e00\u6b21\u90fd\u4e0d\u6267\u884c do ... while \u81f3\u5c11\u6267\u884c1\u6b21 Map\u548cSet ES6\u6807\u51c6\u65b0\u589e Map JavaScript\u7684\u5bf9\u8c61\u952e\u5fc5\u987b\u662f\u5b57\u7b26\u4e32 Map \u662f\u4e00\u7ec4\u952e\u503c\u5bf9\u7684\u7ed3\u6784\uff0c\u5177\u6709\u6781\u5feb\u7684\u67e5\u627e\u901f\u5ea6 var m = new Map ([[ 'Michael' , 95 ], [ 'Bob' , 75 ], [ 'Tracy' , 85 ]]); m . get ( 'Michael' ); // 95 m . set ( 'Adam' , 67 ); // \u6dfb\u52a0\u65b0\u7684 key - value m . has ( 'Adam' ); // \u662f\u5426\u5b58\u5728 key 'Adam' : true m . get ( 'Adam' ); // 67 m . delete ( 'Adam' ); // \u5220\u9664 key 'Adam' m . get ( 'Adam' ); // undefined Set \u4e00\u7ec4key\u7684\u96c6\u5408 var s = new Set ([ 1 , 2 , 3 ]); // \u542b 1 , 2 , 3 s . add ( 4 ); // Set { 1 , 2 , 3 , 4 } s . delete ( 3 ); s . has ( 1 ) // true iterable \u904d\u5386Map\u548cSet\u5c31\u65e0\u6cd5\u4f7f\u7528\u4e0b\u6807 ES6\u6807\u51c6\u65b0\u589e Array\u3001Map\u548cSet\u90fd\u5c5e\u4e8eiterable\u7c7b\u578b \u5177\u6709iterable\u7c7b\u578b\u7684\u96c6\u5408\u53ef\u4ee5\u901a\u8fc7\u65b0\u7684for ... of\u5faa\u73af\u6765\u904d\u5386 var a = [ ' A ' , ' B ' , ' C ' ] ; var s = new Set ( [ ' A ' , ' B ' , ' C ' ] ) ; var m = new Map ( [[ 1 , ' x ' ], [ 2 , ' y ' ], [ 3 , ' z ' ]] ) ; for ( var x of a ) { // \u904d\u5386 Array console . log ( x ) ; } for ( var x of s ) { // \u904d\u5386 Set console . log ( x ) ; } for ( var x of m ) { // \u904d\u5386 Map console . log ( x [ 0 ] + ' = ' + x [ 1 ] ) ; } for ... in \u904d\u5386\u5bf9\u8c61\u7684\u5c5e\u6027\u540d\u79f0, \u4e00\u4e2aArray\u6570\u7ec4\u5b9e\u9645\u4e0a\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5b83\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u88ab\u89c6\u4e3a\u4e00\u4e2a\u5c5e\u6027 for ... of \u53ea\u5faa\u73af\u96c6\u5408\u672c\u8eab\u7684\u5143\u7d20 iterable\u5185\u7f6e\u7684forEach\u65b9\u6cd5(ES5.1\u6807\u51c6\u5f15\u5165) a . forEach ( function ( element , index , array ) { // element : \u6307\u5411\u5f53\u524d\u5143\u7d20\u7684\u503c // index : \u6307\u5411\u5f53\u524d\u7d22\u5f15 // array : \u6307\u5411 Array\u5bf9\u8c61\u672c\u8eab console . log ( element + ', index = ' + index ); } ); Set\u4e0eArray\u7c7b\u4f3c\uff0c\u4f46Set\u6ca1\u6709\u7d22\u5f15: element, sameElement, set Map\u7684\u56de\u8c03\u51fd\u6570\u53c2\u6570\u4f9d\u6b21\u4e3a: value\u3001key\u548cmap\u672c\u8eab JavaScript\u7684\u51fd\u6570\u8c03\u7528\u4e0d\u8981\u6c42\u53c2\u6570\u5fc5\u987b\u4e00\u81f4\uff0c\u56e0\u6b64\u53ef\u4ee5\u5ffd\u7565\u5b83\u4eec var a = [ 'A' , 'B' , 'C' ]; a . forEach ( function ( element ) { console . log ( element ); } );","title":"JavaScript\u5feb\u901f\u5165\u95e8"},{"location":"JavaScript/JavaScript\u5feb\u901f\u5165\u95e8/#_1","text":"alert ( \"hello word!\" ) console . log ( \"hello word!\" ); // \u907f\u514d\u5f39\u51fa\u70e6\u4eba\u7684\u5bf9\u8bdd\u6846 // JavaScript\u4e25\u683c\u533a\u5206\u5927\u5c0f\u5199 // \u5355\u884c\u6ce8\u91ca /*\u591a\u884c\u6ce8\u91ca*/ // \u8d4b\u503c\u8bed\u53e5, \u6bcf\u4e2a\u8bed\u53e5\u7528;\u8868\u793a\u8bed\u53e5\u7ed3\u675f var x = 1 ; // \u8bed\u53e5\u5757\u662f\u4e00\u7ec4\u8bed\u53e5\u7684\u96c6\u5408, \u53ef\u4ee5\u5d4c\u5957 if ( 2 > 1 ) { // do something }","title":"\u57fa\u672c\u8bed\u6cd5"},{"location":"JavaScript/JavaScript\u5feb\u901f\u5165\u95e8/#_2","text":"1\u3001Number JavaScript\u4e0d\u533a\u5206\u6574\u6570\u548c\u6d6e\u70b9\u6570 123 ; // \u6574\u6570123 0.456 ; // \u6d6e\u70b9\u65700.456 1.2345e3 ; // \u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a1.2345x1000\uff0c\u7b49\u540c\u4e8e1234.5 - 99 ; // \u8d1f\u6570 NaN ; // NaN\u8868\u793aNot a Number Infinity ; // Infinity\u8868\u793a\u65e0\u9650\u5927 // \u5341\u516d\u8fdb\u5236\u75280x\u524d\u7f00\u548c0-9\uff0ca-f\u8868\u793a eg: 0xff00 \u652f\u6301\u56db\u5219\u8fd0\u7b97\uff0c%\u662f\u6c42\u4f59\u8fd0\u7b97 2\u3001\u5b57\u7b26\u4e32 \u5355\u5f15\u53f7'\u6216\u53cc\u5f15\u53f7\" 3\u3001\u5e03\u5c14\u503c true\u3001false && \u4e0e\u8fd0\u7b97 || \u6216\u8fd0\u7b97 ! \u975e\u8fd0\u7b97 \u76f8\u7b49\u8fd0\u7b97\u7b26 == // \u81ea\u52a8\u8f6c\u6362\u6570\u636e\u7c7b\u578b\u518d\u6bd4\u8f83 === // \u4e0d\u4f1a\u81ea\u52a8\u8f6c\u6362\u6570\u636e\u7c7b\u578b(\u63a8\u8350) \u552f\u4e00\u80fd\u5224\u65adNaN\u7684\u65b9\u6cd5\u662f\uff1a isNaN ( NaN ) \u6d6e\u70b9\u6570\u5728\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\u4f1a\u4ea7\u751f\u8bef\u5dee\uff0c\u56e0\u4e3a\u8ba1\u7b97\u673a\u65e0\u6cd5\u7cbe\u786e\u8868\u793a\u65e0\u9650\u5faa\u73af\u5c0f\u6570 null // \u8868\u793a\u4e00\u4e2a\u201c\u7a7a\u201d \u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4f7f\u7528 0 // \u4e00\u4e2a\u6570\u503c '' // \u8868\u793a\u957f\u5ea6\u4e3a0\u7684\u5b57\u7b26\u4e32 undefined // \u8868\u793a\u201c\u672a\u5b9a\u4e49\u201d 4\u3001\u6570\u7ec4 \u6570\u7ec4\u662f\u4e00\u7ec4\u6309\u987a\u5e8f\u6392\u5217\u7684\u96c6\u5408\uff0c\u96c6\u5408\u7684\u6bcf\u4e2a\u503c\u79f0\u4e3a\u5143\u7d20\u3002 JavaScript\u7684\u6570\u7ec4\u53ef\u4ee5\u5305\u62ec\u4efb\u610f\u6570\u636e\u7c7b\u578b\u3002\u4f8b\u5982\uff1a [ 1 , 2 , 3.14 , 'Hello' , null , true ]; // \u63a8\u8350 new Array ( 1 , 2 , 3 ); \u7d22\u5f15\u7684\u8d77\u59cb\u503c\u4e3a0 5\u3001\u5bf9\u8c61 JavaScript\u7684\u5bf9\u8c61\u662f\u4e00\u7ec4\u7531\u952e-\u503c\u7ec4\u6210\u7684\u65e0\u5e8f\u96c6\u5408\uff0c\u4f8b\u5982\uff1a var person = { name : 'Bob' , age : 20 , tags : [ 'js' , 'web' , 'mobile' ], city : \"Beijing\" , hasCar : true , zipcode : null } ; JavaScript\u5bf9\u8c61\u7684\u952e\u90fd\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u503c\u53ef\u4ee5\u662f\u4efb\u610f\u6570\u636e\u7c7b\u578b \u6bcf\u4e2a\u952e\u53c8\u79f0\u4e3a\u5bf9\u8c61\u7684\u5c5e\u6027 \u83b7\u53d6\u4e00\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027 // \u5bf9\u8c61\u53d8\u91cf.\u5c5e\u6027\u540d person . name ; // 'Bob' person . zipcode ; // null \u53d8\u91cf \u7533\u660e\u4e00\u4e2a\u53d8\u91cf\u7528var\u8bed\u53e5, \u53ea\u80fd\u7533\u660e\u4e00\u6b21 var a ; // \u7533\u660e\u4e86\u53d8\u91cf a \uff0c\u6b64\u65f6 a\u7684\u503c\u4e3aundefined var $ b = 1 ; // \u7533\u660e\u4e86\u53d8\u91cf$ b \uff0c\u540c\u65f6\u7ed9$ b\u8d4b\u503c \uff0c\u6b64\u65f6$ b\u7684\u503c\u4e3a1 \u53ef\u4ee5\u628a\u4efb\u610f\u6570\u636e\u7c7b\u578b\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u540c\u4e00\u4e2a\u53d8\u91cf\u53ef\u4ee5\u53cd\u590d\u8d4b\u503c\uff0c\u800c\u4e14\u53ef\u4ee5\u662f\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf var a = 123 ; // a\u7684\u503c\u662f\u6574\u6570123 a = 'ABC' ; // a\u53d8\u4e3a\u5b57\u7b26\u4e32 \u52a8\u6001\u8bed\u8a00: \u53d8\u91cf\u672c\u8eab\u7c7b\u578b\u4e0d\u56fa\u5b9a\u7684\u8bed\u8a00 \u9759\u6001\u8bed\u8a00: \u5728\u5b9a\u4e49\u53d8\u91cf\u65f6\u5fc5\u987b\u6307\u5b9a\u53d8\u91cf\u7c7b\u578b\uff0c\u5982\u679c\u8d4b\u503c\u7684\u65f6\u5019\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u5c31\u4f1a\u62a5\u9519\uff0c\u5982Java strict\u6a21\u5f0f \u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u6ca1\u6709\u901a\u8fc7var\u7533\u660e\u5c31\u88ab\u4f7f\u7528\uff0c\u90a3\u4e48\u8be5\u53d8\u91cf\u5c31\u81ea\u52a8\u88ab\u7533\u660e\u4e3a\u5168\u5c40\u53d8\u91cf strict\u6a21\u5f0f: \u5f3a\u5236\u901a\u8fc7var\u7533\u660e\u53d8\u91cf\uff0c\u672a\u4f7f\u7528var\u7533\u660e\u53d8\u91cf\u5c31\u4f7f\u7528\u7684\uff0c\u5c06\u5bfc\u81f4\u8fd0\u884c\u9519\u8bef \u542f\u7528strict\u6a21\u5f0f 'use strict' ;","title":"\u6570\u636e\u7c7b\u578b\u548c\u53d8\u91cf"},{"location":"JavaScript/JavaScript\u5feb\u901f\u5165\u95e8/#_3","text":"JavaScript\u5b57\u7b26\u4e32\u5c31\u662f\u7528''\u6216\"\"\u62ec\u8d77\u6765\u7684\u5b57\u7b26\u8868\u793a \u8f6c\u4e49\u5b57\u7b26 \\ n \u8868\u793a\u6362\u884c \\ t \u8868\u793a\u5236\u8868\u7b26 \\\\ \u8868\u793a\u7684\u5b57\u7b26\u5c31\u662f\\ ASCII\u5b57\u7b26\u53ef\u4ee5\u4ee5\\x##\u5f62\u5f0f\u7684\u5341\u516d\u8fdb\u5236\u8868\u793a\uff1a '\\x41' ; // \u5b8c\u5168\u7b49\u540c\u4e8e 'A' \u8fd8\u53ef\u4ee5\u7528\\u####\u8868\u793a\u4e00\u4e2aUnicode\u5b57\u7b26\uff1a '\\u4e2d\\u6587' ; // \u5b8c\u5168\u7b49\u540c\u4e8e '\u4e2d\u6587' \u591a\u884c\u5b57\u7b26\u4e32 \u6700\u65b0\u7684ES6\u6807\u51c6 ` \u8fd9\u662f\u4e00\u4e2a \u591a\u884c \u5b57\u7b26\u4e32 ` ; \u6a21\u677f\u5b57\u7b26\u4e32 var name = '\u5c0f\u660e'; var age = 20; // + \u62fc\u63a5 var message = '\u4f60\u597d, ' + name + ', \u4f60\u4eca\u5e74' + age + '\u5c81\u4e86!'; // \u6a21\u677f\u5b57\u7b26\u4e32 ES6\u65b0\u589e var message = `\u4f60\u597d, ${ name } , \u4f60\u4eca\u5e74 ${ age } \u5c81\u4e86!`; \u64cd\u4f5c\u5b57\u7b26\u4e32 var s = 'Hello, world!' ; s . length ; // 13 s [ 0 ]; // 'H' \u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7684 \u8c03\u7528\u65b9\u6cd5\uff0c\u672c\u8eab\u4e0d\u4f1a\u6539\u53d8\u539f\u6709\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\uff0c\u800c\u662f\u8fd4\u56de\u4e00\u4e2a\u65b0\u5b57\u7b26\u4e32 toUpperCase () // \u53d8\u4e3a\u5927\u5199 toLowerCase () // \u53d8\u4e3a\u5c0f\u5199 indexOf () // \u641c\u7d22\u6307\u5b9a\u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u4f4d\u7f6e substring () // \u8fd4\u56de\u6307\u5b9a\u7d22\u5f15\u533a\u95f4\u7684\u5b50\u4e32 eg: var s = 'Hello' ; s . toUpperCase (); // \u8fd4\u56de 'HELLO' var lower = s . toLowerCase (); // \u8fd4\u56de 'hello' \u5e76\u8d4b\u503c\u7ed9\u53d8\u91cf lower eg: var s = 'hello, world' ; s . indexOf ( 'world' ); // \u8fd4\u56de 7 s . indexOf ( 'World' ); // \u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684\u5b50\u4e32\uff0c\u8fd4\u56de - 1 s . substring ( 0 , 5 ); // \u4ece\u7d22\u5f15 0 \u5f00\u59cb\u5230 5 \uff08\u4e0d\u5305\u62ec 5 \uff09\uff0c\u8fd4\u56de 'hello' s . substring ( 7 ); // \u4ece\u7d22\u5f15 7 \u5f00\u59cb\u5230\u7ed3\u675f\uff0c\u8fd4\u56de 'world'","title":"\u5b57\u7b26\u4e32"},{"location":"JavaScript/JavaScript\u5feb\u901f\u5165\u95e8/#_4","text":"JavaScript\u7684Array\u53ef\u4ee5\u5305\u542b\u4efb\u610f\u6570\u636e\u7c7b\u578b\uff0c\u5e76\u901a\u8fc7\u7d22\u5f15\u6765\u8bbf\u95ee\u6bcf\u4e2a\u5143\u7d20 var arr = [ 1 , 2 , 3 . 14 , 'Hello' , null , true ]; arr . length ; // \u957f\u5ea6 6 arr [ 1 ] = 99 ; // \u4fee\u6539 \u53ef\u4ee5\u4fee\u6539length, \u4e0d\u5efa\u8bae \u7d22\u5f15\u8d85\u8fc7\u4e86\u8303\u56f4\uff0carr\u957f\u5ea6\u4f1a\u53d8\u5316, \u5efa\u8bae\uff1a\u7d22\u5f15\u4e0d\u8981\u8d8a\u754c \u5e38\u7528\u65b9\u6cd5 indexOf () // \u641c\u7d22\u4e00\u4e2a\u6307\u5b9a\u7684\u5143\u7d20\u7684\u4f4d\u7f6e slice () // \u5207\u7247 push () // \u672b\u5c3e\u6dfb\u52a0\u82e5\u5e72\u5143\u7d20 pop () // \u628a Array\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5220\u9664\u6389 unshift () // \u5f80 Array\u7684\u5934\u90e8\u6dfb\u52a0\u82e5\u5e72\u5143\u7d20 shift () // \u628a Array\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5220\u6389 sort () // \u5bf9\u5f53\u524d Array\u8fdb\u884c\u6392\u5e8f reverse () // \u628a\u6574\u4e2a Array\u7684\u5143\u7d20\u53cd\u8f6c splice () // \u66ff\u6362\u5143\u7d20 concat () // \u62fc\u63a5\u6570\u7ec4 , \u8fd4\u56de\u4e86\u4e00\u4e2a\u65b0\u7684 Array join () // \u628a\u5f53\u524d Array\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u7528\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u8fde\u63a5\u8d77\u6765 \uff0c\u7136\u540e\u8fd4\u56de\u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32 var arr = [ 10 , 20 , '30' , 'xyz' ]; arr . indexOf ( 10 ); // \u5143\u7d20 10 \u7684\u7d22\u5f15\u4e3a 0 var arr = [ 'A' , 'B' , 'C' , 'D' , 'E' , 'F' , 'G' ]; arr . slice ( 0 , 3 ); // \u4ece\u7d22\u5f15 0 \u5f00\u59cb\uff0c\u5230\u7d22\u5f15 3 \u7ed3\u675f\uff0c\u4f46\u4e0d\u5305\u62ec\u7d22\u5f15 3 : [ 'A' , 'B' , 'C' ] arr . slice ( 3 ); // \u4ece\u7d22\u5f15 3 \u5f00\u59cb\u5230\u7ed3\u675f : [ 'D' , 'E' , 'F' , 'G' ] // \u6ce8\u610f\u5230 slice () \u7684\u8d77\u6b62\u53c2\u6570\u5305\u62ec\u5f00\u59cb\u7d22\u5f15\uff0c\u4e0d\u5305\u62ec\u7ed3\u675f\u7d22\u5f15\u3002 // \u5982\u679c\u4e0d\u7ed9 slice () \u4f20\u9012\u4efb\u4f55\u53c2\u6570\uff0c\u5b83\u5c31\u4f1a\u4ece\u5934\u5230\u5c3e\u622a\u53d6\u6240\u6709\u5143\u7d20\u3002 // \u5229\u7528\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u590d\u5236\u4e00\u4e2a Array var arr = [ 1 , 2 ]; arr . push ( 'A' , 'B' ); // \u8fd4\u56de Array\u65b0\u7684\u957f\u5ea6 : 4 arr ; // [ 1 , 2 , 'A' , 'B' ] arr . pop (); // pop () \u8fd4\u56de 'B' arr ; // [ 1 , 2 , 'A' ] arr . pop (); arr . pop (); arr . pop (); // \u8fde\u7eed pop 3 \u6b21 arr ; // [] arr . pop (); // \u7a7a\u6570\u7ec4\u7ee7\u7eed pop\u4e0d\u4f1a\u62a5\u9519 \uff0c\u800c\u662f\u8fd4\u56de undefined arr ; // [] var arr = [ 1 , 2 ]; arr . unshift ( 'A' , 'B' ); // \u8fd4\u56de Array\u65b0\u7684\u957f\u5ea6 : 4 arr ; // [ 'A' , 'B' , 1 , 2 ] arr . shift (); // 'A' arr ; // [ 'B' , 1 , 2 ] arr . shift (); arr . shift (); arr . shift (); // \u8fde\u7eed shift 3 \u6b21 arr ; // [] arr . shift (); // \u7a7a\u6570\u7ec4\u7ee7\u7eed shift\u4e0d\u4f1a\u62a5\u9519 \uff0c\u800c\u662f\u8fd4\u56de undefined arr ; // [] var arr = [ 'B' , 'C' , 'A' ]; arr . sort (); arr ; // [ 'A' , 'B' , 'C' ] var arr = [ 'one' , 'two' , 'three' ]; arr . reverse (); arr ; // [ 'three' , 'two' , 'one' ] var arr = [ 'Microsoft' , 'Apple' , 'Yahoo' , 'AOL' , 'Excite' , 'Oracle' ]; // \u4ece\u7d22\u5f15 2 \u5f00\u59cb\u5220\u9664 3 \u4e2a\u5143\u7d20 , \u7136\u540e\u518d\u6dfb\u52a0\u4e24\u4e2a\u5143\u7d20 : arr . splice ( 2 , 3 , 'Google' , 'Facebook' ); // \u8fd4\u56de\u5220\u9664\u7684\u5143\u7d20 [ 'Yahoo' , 'AOL' , 'Excite' ] arr ; // [ 'Microsoft' , 'Apple' , 'Google' , 'Facebook' , 'Oracle' ] // \u53ea\u5220\u9664 , \u4e0d\u6dfb\u52a0 : arr . splice ( 2 , 2 ); // [ 'Google' , 'Facebook' ] arr ; // [ 'Microsoft' , 'Apple' , 'Oracle' ] // \u53ea\u6dfb\u52a0 , \u4e0d\u5220\u9664 : arr . splice ( 2 , 0 , 'Google' , 'Facebook' ); // \u8fd4\u56de [], \u56e0\u4e3a\u6ca1\u6709\u5220\u9664\u4efb\u4f55\u5143\u7d20 arr ; // [ 'Microsoft' , 'Apple' , 'Google' , 'Facebook' , 'Oracle' ] var arr = [ 'A' , 'B' , 'C' ]; var added = arr . concat ([ 1 , 2 , 3 ]); added ; // [ 'A' , 'B' , 'C' , 1 , 2 , 3 ] arr ; // [ 'A' , 'B' , 'C' ] // \u5b9e\u9645\u4e0a\uff0c concat () \u65b9\u6cd5\u53ef\u4ee5\u63a5\u6536\u4efb\u610f\u4e2a\u5143\u7d20\u548c Array \uff0c\u5e76\u4e14\u81ea\u52a8\u628a Array\u62c6\u5f00 \uff0c\u7136\u540e\u5168\u90e8\u6dfb\u52a0\u5230\u65b0\u7684 Array\u91cc \uff1a var arr = [ 'A' , 'B' , 'C' ]; arr . concat ( 1 , 2 , [ 3 , 4 ]); // [ 'A' , 'B' , 'C' , 1 , 2 , 3 , 4 ] var arr = [ 'A' , 'B' , 'C' , 1 , 2 , 3 ]; arr . join ( '-' ); // 'A-B-C-1-2-3' // \u5982\u679c Array\u7684\u5143\u7d20\u4e0d\u662f\u5b57\u7b26\u4e32 \uff0c\u5c06\u81ea\u52a8\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u540e\u518d\u8fde\u63a5 \u591a\u7ef4\u6570\u7ec4 var arr = [[ 1 , 2 , 3 ], [ 400 , 500 , 600 ], '-' ];","title":"\u6570\u7ec4"},{"location":"JavaScript/JavaScript\u5feb\u901f\u5165\u95e8/#_5","text":"JavaScript\u7684\u5bf9\u8c61\u662f\u4e00\u79cd\u65e0\u5e8f\u7684\u96c6\u5408\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u7531\u82e5\u5e72\u952e\u503c\u5bf9\u7ec4\u6210 var xiaohong = { name : '\u5c0f\u7ea2' , 'middle-school' : 'No.1 Middle School' // \u5305\u542b\u7279\u6b8a\u5b57\u7b26 } ; // \u8bbf\u95ee\u5c5e\u6027 object . prop xiaohong [ 'middle-school' ]; // 'No.1 Middle School' xiaohong . name ; // '\u5c0f\u7ea2' // \u68c0\u67e5\u5c5e\u6027 'name' in xiaoming ; // true // \u68c0\u67e5\u81ea\u8eab\u5c5e\u6027 xiaoming . hasOwnProperty ( 'name' ); JavaScript\u89c4\u5b9a\uff0c\u8bbf\u95ee\u4e0d\u5b58\u5728\u7684\u5c5e\u6027\u4e0d\u62a5\u9519\uff0c\u800c\u662f\u8fd4\u56deundefined \u53ef\u4ee5\u81ea\u7531\u5730\u7ed9\u4e00\u4e2a\u5bf9\u8c61\u6dfb\u52a0\u6216\u5220\u9664\u5c5e\u6027 var xiaoming = { name : '\u5c0f\u660e' } ; xiaoming . age ; // undefined xiaoming . age = 18 ; // \u65b0\u589e\u4e00\u4e2a age\u5c5e\u6027 xiaoming . age ; // 18 delete xiaoming . age ; // \u5220\u9664 age\u5c5e\u6027 xiaoming . age ; // undefined delete xiaoming [ 'name' ]; // \u5220\u9664 name\u5c5e\u6027 xiaoming . name ; // undefined delete xiaoming . school ; // \u5220\u9664\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684 school\u5c5e\u6027\u4e5f\u4e0d\u4f1a\u62a5\u9519 \u6240\u6709\u5bf9\u8c61\u6700\u7ec8\u90fd\u4f1a\u5728\u539f\u578b\u94fe\u4e0a\u6307\u5411object","title":"\u5bf9\u8c61"},{"location":"JavaScript/JavaScript\u5feb\u901f\u5165\u95e8/#_6","text":"if () { ... } else { ... } \u5982\u679c\u8bed\u53e5\u5757\u53ea\u5305\u542b\u4e00\u6761\u8bed\u53e5\uff0c\u90a3\u4e48\u53ef\u4ee5\u7701\u7565{}, \u4e0d\u63a8\u8350 \u591a\u884c\u6761\u4ef6\u5224\u65ad if () { ... } else if () { ... } else { ... } JavaScript\u628anull\u3001undefined\u30010\u3001NaN\u548c\u7a7a\u5b57\u7b26\u4e32''\u89c6\u4e3afalse\uff0c\u5176\u4ed6\u503c\u4e00\u6982\u89c6\u4e3atrue","title":"\u6761\u4ef6\u5224\u65ad"},{"location":"JavaScript/JavaScript\u5feb\u901f\u5165\u95e8/#_7","text":"for ( \u521d\u59cb\u6761\u4ef6 ; \u9012\u589e\u6761\u4ef6; \u7ed3\u675f\u6761\u4ef6){ } for ( ;;) {} // \u65e0\u9650\u5faa\u73af \uff0cbreak\u8bed\u53e5\u9000\u51fa\u5faa\u73af \u904d\u5386\u6570\u7ec4 var arr = [ ' Apple ' , ' Google ' , ' Microsoft ' ] ; var i , x ; for ( i = 0 ; i<arr.length; i++) { x = arr [ i ] ; console . log ( x ) ; } for\u5faa\u73af // \u5bf9\u8c61 var o = { name : ' Jack ' , age : 20 , city : ' Beijing ' } ; for ( var key in o ) { console . log ( key ) ; // 'name', 'age', 'city' } // \u6570\u7ec4 var a = [ ' A ' , ' B ' , ' C ' ] ; for ( var index in a ) { console . log ( index ) ; // '0', '1', '2' \u5f97\u5230\u7684\u662fString\u800c\u4e0d\u662fNumber console . log ( a [ index ] ) ; // 'A', 'B', 'C' } for\u548cwhile\u5faa\u73af\u5219\u53ef\u80fd\u4e00\u6b21\u90fd\u4e0d\u6267\u884c do ... while \u81f3\u5c11\u6267\u884c1\u6b21","title":"\u5faa\u73af"},{"location":"JavaScript/JavaScript\u5feb\u901f\u5165\u95e8/#mapset","text":"ES6\u6807\u51c6\u65b0\u589e Map JavaScript\u7684\u5bf9\u8c61\u952e\u5fc5\u987b\u662f\u5b57\u7b26\u4e32 Map \u662f\u4e00\u7ec4\u952e\u503c\u5bf9\u7684\u7ed3\u6784\uff0c\u5177\u6709\u6781\u5feb\u7684\u67e5\u627e\u901f\u5ea6 var m = new Map ([[ 'Michael' , 95 ], [ 'Bob' , 75 ], [ 'Tracy' , 85 ]]); m . get ( 'Michael' ); // 95 m . set ( 'Adam' , 67 ); // \u6dfb\u52a0\u65b0\u7684 key - value m . has ( 'Adam' ); // \u662f\u5426\u5b58\u5728 key 'Adam' : true m . get ( 'Adam' ); // 67 m . delete ( 'Adam' ); // \u5220\u9664 key 'Adam' m . get ( 'Adam' ); // undefined Set \u4e00\u7ec4key\u7684\u96c6\u5408 var s = new Set ([ 1 , 2 , 3 ]); // \u542b 1 , 2 , 3 s . add ( 4 ); // Set { 1 , 2 , 3 , 4 } s . delete ( 3 ); s . has ( 1 ) // true","title":"Map\u548cSet"},{"location":"JavaScript/JavaScript\u5feb\u901f\u5165\u95e8/#iterable","text":"\u904d\u5386Map\u548cSet\u5c31\u65e0\u6cd5\u4f7f\u7528\u4e0b\u6807 ES6\u6807\u51c6\u65b0\u589e Array\u3001Map\u548cSet\u90fd\u5c5e\u4e8eiterable\u7c7b\u578b \u5177\u6709iterable\u7c7b\u578b\u7684\u96c6\u5408\u53ef\u4ee5\u901a\u8fc7\u65b0\u7684for ... of\u5faa\u73af\u6765\u904d\u5386 var a = [ ' A ' , ' B ' , ' C ' ] ; var s = new Set ( [ ' A ' , ' B ' , ' C ' ] ) ; var m = new Map ( [[ 1 , ' x ' ], [ 2 , ' y ' ], [ 3 , ' z ' ]] ) ; for ( var x of a ) { // \u904d\u5386 Array console . log ( x ) ; } for ( var x of s ) { // \u904d\u5386 Set console . log ( x ) ; } for ( var x of m ) { // \u904d\u5386 Map console . log ( x [ 0 ] + ' = ' + x [ 1 ] ) ; } for ... in \u904d\u5386\u5bf9\u8c61\u7684\u5c5e\u6027\u540d\u79f0, \u4e00\u4e2aArray\u6570\u7ec4\u5b9e\u9645\u4e0a\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5b83\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u88ab\u89c6\u4e3a\u4e00\u4e2a\u5c5e\u6027 for ... of \u53ea\u5faa\u73af\u96c6\u5408\u672c\u8eab\u7684\u5143\u7d20 iterable\u5185\u7f6e\u7684forEach\u65b9\u6cd5(ES5.1\u6807\u51c6\u5f15\u5165) a . forEach ( function ( element , index , array ) { // element : \u6307\u5411\u5f53\u524d\u5143\u7d20\u7684\u503c // index : \u6307\u5411\u5f53\u524d\u7d22\u5f15 // array : \u6307\u5411 Array\u5bf9\u8c61\u672c\u8eab console . log ( element + ', index = ' + index ); } ); Set\u4e0eArray\u7c7b\u4f3c\uff0c\u4f46Set\u6ca1\u6709\u7d22\u5f15: element, sameElement, set Map\u7684\u56de\u8c03\u51fd\u6570\u53c2\u6570\u4f9d\u6b21\u4e3a: value\u3001key\u548cmap\u672c\u8eab JavaScript\u7684\u51fd\u6570\u8c03\u7528\u4e0d\u8981\u6c42\u53c2\u6570\u5fc5\u987b\u4e00\u81f4\uff0c\u56e0\u6b64\u53ef\u4ee5\u5ffd\u7565\u5b83\u4eec var a = [ 'A' , 'B' , 'C' ]; a . forEach ( function ( element ) { console . log ( element ); } );","title":"iterable"},{"location":"JavaScript/JavaScript\u6807\u51c6\u5bf9\u8c61/","text":"\u6807\u51c6\u5bf9\u8c61 \u5728JavaScript\u7684\u4e16\u754c\u91cc\uff0c\u4e00\u5207\u90fd\u662f\u5bf9\u8c61\u3002 typeof\u64cd\u4f5c\u7b26\u83b7\u53d6\u5bf9\u8c61\u7684\u7c7b\u578b number\u3001string\u3001boolean\u3001function\u548cundefined\u3001object typeof 123 ; // 'number' typeof NaN ; // 'number' \u5305\u88c5\u5bf9\u8c61 var n = new Number ( 123 ); // 123 , \u751f\u6210\u4e86\u65b0\u7684\u5305\u88c5\u7c7b\u578b\uff0c \u4e0d\u63a8\u8350 // \u4e0d\u4f7f\u7528 new var n = Number ( '123' ); // 123 \uff0c\u4e0d\u63a8\u8350\uff1b \u76f8\u5f53\u4e8e parseInt () \u6216 parseFloat () \u63a8\u8350 \u89c4\u5219\uff1a \u4e0d\u8981\u4f7f\u7528 new Number () \u3001 new Boolean () \u3001 new String () \u521b\u5efa\u5305\u88c5\u5bf9\u8c61\uff1b \u7528 parseInt () \u6216 parseFloat () \u6765\u8f6c\u6362\u4efb\u610f\u7c7b\u578b\u5230 number \uff1b \u7528 String () \u6765\u8f6c\u6362\u4efb\u610f\u7c7b\u578b\u5230 string \uff0c\u6216\u8005\u76f4\u63a5\u8c03\u7528\u67d0\u4e2a\u5bf9\u8c61\u7684 toString () \u65b9\u6cd5\uff1b \u901a\u5e38\u4e0d\u5fc5\u628a\u4efb\u610f\u7c7b\u578b\u8f6c\u6362\u4e3a boolean\u518d\u5224\u65ad \uff0c\u56e0\u4e3a\u53ef\u4ee5\u76f4\u63a5\u5199 if ( myVar ) { ... }\uff1b typeof\u64cd\u4f5c\u7b26\u53ef\u4ee5\u5224\u65ad\u51fanumber \u3001 boolean \u3001 string \u3001 function\u548cundefined \uff1b \u5224\u65ad Array\u8981\u4f7f\u7528Array . isArray ( arr ) \uff1b \u5224\u65ad null\u8bf7\u4f7f\u7528myVar === null \uff1b \u5224\u65ad\u67d0\u4e2a\u5168\u5c40\u53d8\u91cf\u662f\u5426\u5b58\u5728\u7528 typeof window . myVar === 'undefined' \uff1b \u51fd\u6570\u5185\u90e8\u5224\u65ad\u67d0\u4e2a\u53d8\u91cf\u662f\u5426\u5b58\u5728\u7528 typeof myVar === 'undefined' \u3002 123 . toString (); // SyntaxError 123 .. toString (); // '123' , \u6ce8\u610f\u662f\u4e24\u4e2a\u70b9\uff01 ( 123 ). toString (); // '123' Date // \u83b7\u53d6\u65f6\u95f4 var now = new Date () ; now ; // Wed Jun 24 2015 19:49:22 GMT+0800 (CST) now . getFullYear () ; // 2015, \u5e74\u4efd now . getMonth () ; // 5, \u6708\u4efd\uff0c\u6ce8\u610f\u6708\u4efd\u8303\u56f4\u662f0~11\uff0c5\u8868\u793a\u516d\u6708 now . getDate () ; // 24, \u8868\u793a24\u53f7 now . getDay () ; // 3, \u8868\u793a\u661f\u671f\u4e09 now . getHours () ; // 19, 24\u5c0f\u65f6\u5236 now . getMinutes () ; // 49, \u5206\u949f now . getSeconds () ; // 22, \u79d2 now . getMilliseconds () ; // 875, \u6beb\u79d2\u6570 now . getTime () ; // 1435146562875, \u4ee5number\u5f62\u5f0f\u8868\u793a\u7684\u65f6\u95f4\u6233 // \u521b\u5efa\u65f6\u95f4 var d = new Date ( 2015 , 5 , 19 , 20 , 15 , 30 , 123 ) ; var d = new Date ( 1435146562875 ) ; // \u89e3\u6790\u65f6\u95f4 var d = Date . parse ( ' 2015-06-24T19:49:22.875+08:00 ' ) ; d ; // 1435146562875 JavaScript\u7684Date\u5bf9\u8c61\u6708\u4efd\u503c\u4ece0\u5f00\u59cb\uff0c\u7262\u8bb00=1\u6708\uff0c1=2\u6708\uff0c2=3\u6708\uff0c\u2026\u2026\uff0c11=12\u6708\u3002 RegExp \\ d \u5339\u914d\u4e00\u4e2a\u6570\u5b57 \\ w \u5339\u914d\u4e00\u4e2a\u5b57\u6bcd\u6216\u6570\u5b57 [] \u8868\u793a\u8303\u56f4 A | B \u53ef\u4ee5\u5339\u914d A\u6216B ^ \u884c\u7684\u5f00\u5934 $ \u884c\u7684\u7ed3\u675f * \u4efb\u610f\u4e2a\u5b57\u7b26\uff08\u5305\u62ec 0 \u4e2a\uff09 + \u81f3\u5c11\u4e00\u4e2a\u5b57\u7b26 ? 0 \u4e2a\u6216 1 \u4e2a\u5b57\u7b26 { n } n\u4e2a\u5b57\u7b26 { n , m } n - m\u4e2a\u5b57\u7b26 \u793a\u4f8b var re1 = / ABC \\ - 001 / ; var re2 = new RegExp ( 'ABC\\\\-001' ); re1 ; // / ABC \\ - 001 / re2 ; // / ABC \\ - 001 / var re = /^ \\ d { 3 }\\ - \\ d { 3 , 8 }$ / ; re . test ( '010-12345' ); // true \u5207\u5206\u5b57\u7b26\u4e32 'a b c' . split ( ' ' ); // [ 'a' , 'b' , '' , '' , 'c' ] // \u6b63\u5219\u8868\u8fbe\u5f0f\u8bd5\u8bd5 'a b c' . split ( / \\ s +/ ); // [ 'a' , 'b' , 'c' ] \u5206\u7ec4\uff08Group\uff09 var re = /^ ( \\ d { 3 } ) - ( \\ d { 3 , 8 } ) $ / ; re . exec ( ' 010-12345 ' ) ; // ['010-12345', '010', '12345'] \u6b63\u5219\u5339\u914d\u9ed8\u8ba4\u662f\u8d2a\u5a6a\u5339\u914d \u975e\u8d2a\u5a6a\u5339\u914d var re = /^ ( \\ d + ? )( 0 * ) $ / ; re . exec ( ' 102300 ' ) ; // ['102300', '1023', '00'] \u5168\u5c40\u641c\u7d22 var r1 = / test / g ; // \u7b49\u4ef7\u4e8e: var r2 = new RegExp ( ' test ' , ' g ' ) ; var s = ' JavaScript, VBScript, JScript and ECMAScript ' ; var re =/ [ a - zA - Z ] + Script / g ; // \u4f7f\u7528\u5168\u5c40\u5339\u914d: re . exec ( s ) ; // ['JavaScript'] re . lastIndex ; // 10 re . exec ( s ) ; // ['VBScript'] re . lastIndex ; // 20 i\u6807\u5fd7\uff0c\u8868\u793a\u5ffd\u7565\u5927\u5c0f\u5199 m\u6807\u5fd7\uff0c\u8868\u793a\u6267\u884c\u591a\u884c\u5339\u914d JSON JavaScript Object Notation number \uff1a\u548c JavaScript\u7684number\u5b8c\u5168\u4e00\u81f4 \uff1b boolean \uff1a\u5c31\u662f JavaScript\u7684true\u6216false \uff1b string \uff1a\u5c31\u662f JavaScript\u7684string \uff1b null \uff1a\u5c31\u662f JavaScript\u7684null \uff1b array \uff1a\u5c31\u662f JavaScript\u7684Array\u8868\u793a\u65b9\u5f0f \u2014\u2014 [] \uff1b object \uff1a\u5c31\u662f JavaScript\u7684 { ... }\u8868\u793a\u65b9\u5f0f\u3002 JSON\u8fd8\u5b9a\u6b7b\u4e86\u5b57\u7b26\u96c6\u5fc5\u987b\u662fUTF-8\uff0c\u8868\u793a\u591a\u8bed\u8a00\u5c31\u6ca1\u6709\u95ee\u9898\u4e86\u3002 \u4e3a\u4e86\u7edf\u4e00\u89e3\u6790\uff0cJSON\u7684\u5b57\u7b26\u4e32\u89c4\u5b9a\u5fc5\u987b\u7528\u53cc\u5f15\u53f7\"\"\uff0c Object\u7684\u952e\u4e5f\u5fc5\u987b\u7528\u53cc\u5f15\u53f7\"\" \u5e8f\u5217\u5316 var xiaoming = { name : ' \u5c0f\u660e ' , age : 14 , gender : true , height : 1 . 65 , grade : null , ' middle-school ' : ' \\\"W3C\\\" Middle School ' , skills : [ ' JavaScript ' , ' Java ' , ' Python ' , ' Lisp ' ] } ; var s = JSON . stringify ( xiaoming ) ; // \u6309\u7f29\u8fdb\u8f93\u51fa\uff1a JSON . stringify ( xiaoming , null , ' ' ) ; // \u8f93\u51fa\u6307\u5b9a\u7684\u5c5e\u6027 JSON . stringify ( xiaoming , [ ' name ' , ' skills ' ], ' ' ) ; // \u6bcf\u4e2a\u952e\u503c\u5bf9\u90fd\u4f1a\u88ab\u51fd\u6570\u5148\u5904\u7406 function convert ( key , value ) { if ( typeof value === ' string ' ) { return value . toUpperCase () ; } return value ; } JSON . stringify ( xiaoming , convert , ' ' ) ; // \u7cbe\u786e\u63a7\u5236\u5982\u4f55\u5e8f\u5217\u5316 var xiaoming = { name : ' \u5c0f\u660e ' , age : 14 , gender : true , height : 1 . 65 , grade : null , ' middle-school ' : ' \\\"W3C\\\" Middle School ' , skills : [ ' JavaScript ' , ' Java ' , ' Python ' , ' Lisp ' ], toJSON : function () { return { // \u53ea\u8f93\u51fa name \u548c age \uff0c\u5e76\u4e14\u6539\u53d8\u4e86 key \uff1a ' Name ' : this . name , ' Age ' : this . age } ; } } ; JSON . stringify ( xiaoming ) ; // '{\"Name\":\"\u5c0f\u660e\",\"Age\":14}' \u53cd\u5e8f\u5217\u5316 JSON . parse ( ' [1,2,3,true] ' ) ; // [1, 2, 3, true] // \u8f6c\u6362\u89e3\u6790\u51fa\u7684\u5c5e\u6027 var obj = JSON . parse ( ' {\"name\":\"\u5c0f\u660e\",\"age\":14} ' , function ( key , value ) { if ( key === ' name ' ) { return value + ' \u540c\u5b66 ' ; } return value ; } ) ; console . log ( JSON . stringify ( obj )) ; // {name: '\u5c0f\u660e\u540c\u5b66', age: 14}","title":"\u6807\u51c6\u5bf9\u8c61"},{"location":"JavaScript/JavaScript\u6807\u51c6\u5bf9\u8c61/#_1","text":"\u5728JavaScript\u7684\u4e16\u754c\u91cc\uff0c\u4e00\u5207\u90fd\u662f\u5bf9\u8c61\u3002 typeof\u64cd\u4f5c\u7b26\u83b7\u53d6\u5bf9\u8c61\u7684\u7c7b\u578b number\u3001string\u3001boolean\u3001function\u548cundefined\u3001object typeof 123 ; // 'number' typeof NaN ; // 'number' \u5305\u88c5\u5bf9\u8c61 var n = new Number ( 123 ); // 123 , \u751f\u6210\u4e86\u65b0\u7684\u5305\u88c5\u7c7b\u578b\uff0c \u4e0d\u63a8\u8350 // \u4e0d\u4f7f\u7528 new var n = Number ( '123' ); // 123 \uff0c\u4e0d\u63a8\u8350\uff1b \u76f8\u5f53\u4e8e parseInt () \u6216 parseFloat () \u63a8\u8350 \u89c4\u5219\uff1a \u4e0d\u8981\u4f7f\u7528 new Number () \u3001 new Boolean () \u3001 new String () \u521b\u5efa\u5305\u88c5\u5bf9\u8c61\uff1b \u7528 parseInt () \u6216 parseFloat () \u6765\u8f6c\u6362\u4efb\u610f\u7c7b\u578b\u5230 number \uff1b \u7528 String () \u6765\u8f6c\u6362\u4efb\u610f\u7c7b\u578b\u5230 string \uff0c\u6216\u8005\u76f4\u63a5\u8c03\u7528\u67d0\u4e2a\u5bf9\u8c61\u7684 toString () \u65b9\u6cd5\uff1b \u901a\u5e38\u4e0d\u5fc5\u628a\u4efb\u610f\u7c7b\u578b\u8f6c\u6362\u4e3a boolean\u518d\u5224\u65ad \uff0c\u56e0\u4e3a\u53ef\u4ee5\u76f4\u63a5\u5199 if ( myVar ) { ... }\uff1b typeof\u64cd\u4f5c\u7b26\u53ef\u4ee5\u5224\u65ad\u51fanumber \u3001 boolean \u3001 string \u3001 function\u548cundefined \uff1b \u5224\u65ad Array\u8981\u4f7f\u7528Array . isArray ( arr ) \uff1b \u5224\u65ad null\u8bf7\u4f7f\u7528myVar === null \uff1b \u5224\u65ad\u67d0\u4e2a\u5168\u5c40\u53d8\u91cf\u662f\u5426\u5b58\u5728\u7528 typeof window . myVar === 'undefined' \uff1b \u51fd\u6570\u5185\u90e8\u5224\u65ad\u67d0\u4e2a\u53d8\u91cf\u662f\u5426\u5b58\u5728\u7528 typeof myVar === 'undefined' \u3002 123 . toString (); // SyntaxError 123 .. toString (); // '123' , \u6ce8\u610f\u662f\u4e24\u4e2a\u70b9\uff01 ( 123 ). toString (); // '123'","title":"\u6807\u51c6\u5bf9\u8c61"},{"location":"JavaScript/JavaScript\u6807\u51c6\u5bf9\u8c61/#date","text":"// \u83b7\u53d6\u65f6\u95f4 var now = new Date () ; now ; // Wed Jun 24 2015 19:49:22 GMT+0800 (CST) now . getFullYear () ; // 2015, \u5e74\u4efd now . getMonth () ; // 5, \u6708\u4efd\uff0c\u6ce8\u610f\u6708\u4efd\u8303\u56f4\u662f0~11\uff0c5\u8868\u793a\u516d\u6708 now . getDate () ; // 24, \u8868\u793a24\u53f7 now . getDay () ; // 3, \u8868\u793a\u661f\u671f\u4e09 now . getHours () ; // 19, 24\u5c0f\u65f6\u5236 now . getMinutes () ; // 49, \u5206\u949f now . getSeconds () ; // 22, \u79d2 now . getMilliseconds () ; // 875, \u6beb\u79d2\u6570 now . getTime () ; // 1435146562875, \u4ee5number\u5f62\u5f0f\u8868\u793a\u7684\u65f6\u95f4\u6233 // \u521b\u5efa\u65f6\u95f4 var d = new Date ( 2015 , 5 , 19 , 20 , 15 , 30 , 123 ) ; var d = new Date ( 1435146562875 ) ; // \u89e3\u6790\u65f6\u95f4 var d = Date . parse ( ' 2015-06-24T19:49:22.875+08:00 ' ) ; d ; // 1435146562875 JavaScript\u7684Date\u5bf9\u8c61\u6708\u4efd\u503c\u4ece0\u5f00\u59cb\uff0c\u7262\u8bb00=1\u6708\uff0c1=2\u6708\uff0c2=3\u6708\uff0c\u2026\u2026\uff0c11=12\u6708\u3002","title":"Date"},{"location":"JavaScript/JavaScript\u6807\u51c6\u5bf9\u8c61/#regexp","text":"\\ d \u5339\u914d\u4e00\u4e2a\u6570\u5b57 \\ w \u5339\u914d\u4e00\u4e2a\u5b57\u6bcd\u6216\u6570\u5b57 [] \u8868\u793a\u8303\u56f4 A | B \u53ef\u4ee5\u5339\u914d A\u6216B ^ \u884c\u7684\u5f00\u5934 $ \u884c\u7684\u7ed3\u675f * \u4efb\u610f\u4e2a\u5b57\u7b26\uff08\u5305\u62ec 0 \u4e2a\uff09 + \u81f3\u5c11\u4e00\u4e2a\u5b57\u7b26 ? 0 \u4e2a\u6216 1 \u4e2a\u5b57\u7b26 { n } n\u4e2a\u5b57\u7b26 { n , m } n - m\u4e2a\u5b57\u7b26 \u793a\u4f8b var re1 = / ABC \\ - 001 / ; var re2 = new RegExp ( 'ABC\\\\-001' ); re1 ; // / ABC \\ - 001 / re2 ; // / ABC \\ - 001 / var re = /^ \\ d { 3 }\\ - \\ d { 3 , 8 }$ / ; re . test ( '010-12345' ); // true \u5207\u5206\u5b57\u7b26\u4e32 'a b c' . split ( ' ' ); // [ 'a' , 'b' , '' , '' , 'c' ] // \u6b63\u5219\u8868\u8fbe\u5f0f\u8bd5\u8bd5 'a b c' . split ( / \\ s +/ ); // [ 'a' , 'b' , 'c' ] \u5206\u7ec4\uff08Group\uff09 var re = /^ ( \\ d { 3 } ) - ( \\ d { 3 , 8 } ) $ / ; re . exec ( ' 010-12345 ' ) ; // ['010-12345', '010', '12345'] \u6b63\u5219\u5339\u914d\u9ed8\u8ba4\u662f\u8d2a\u5a6a\u5339\u914d \u975e\u8d2a\u5a6a\u5339\u914d var re = /^ ( \\ d + ? )( 0 * ) $ / ; re . exec ( ' 102300 ' ) ; // ['102300', '1023', '00'] \u5168\u5c40\u641c\u7d22 var r1 = / test / g ; // \u7b49\u4ef7\u4e8e: var r2 = new RegExp ( ' test ' , ' g ' ) ; var s = ' JavaScript, VBScript, JScript and ECMAScript ' ; var re =/ [ a - zA - Z ] + Script / g ; // \u4f7f\u7528\u5168\u5c40\u5339\u914d: re . exec ( s ) ; // ['JavaScript'] re . lastIndex ; // 10 re . exec ( s ) ; // ['VBScript'] re . lastIndex ; // 20 i\u6807\u5fd7\uff0c\u8868\u793a\u5ffd\u7565\u5927\u5c0f\u5199 m\u6807\u5fd7\uff0c\u8868\u793a\u6267\u884c\u591a\u884c\u5339\u914d","title":"RegExp"},{"location":"JavaScript/JavaScript\u6807\u51c6\u5bf9\u8c61/#json","text":"JavaScript Object Notation number \uff1a\u548c JavaScript\u7684number\u5b8c\u5168\u4e00\u81f4 \uff1b boolean \uff1a\u5c31\u662f JavaScript\u7684true\u6216false \uff1b string \uff1a\u5c31\u662f JavaScript\u7684string \uff1b null \uff1a\u5c31\u662f JavaScript\u7684null \uff1b array \uff1a\u5c31\u662f JavaScript\u7684Array\u8868\u793a\u65b9\u5f0f \u2014\u2014 [] \uff1b object \uff1a\u5c31\u662f JavaScript\u7684 { ... }\u8868\u793a\u65b9\u5f0f\u3002 JSON\u8fd8\u5b9a\u6b7b\u4e86\u5b57\u7b26\u96c6\u5fc5\u987b\u662fUTF-8\uff0c\u8868\u793a\u591a\u8bed\u8a00\u5c31\u6ca1\u6709\u95ee\u9898\u4e86\u3002 \u4e3a\u4e86\u7edf\u4e00\u89e3\u6790\uff0cJSON\u7684\u5b57\u7b26\u4e32\u89c4\u5b9a\u5fc5\u987b\u7528\u53cc\u5f15\u53f7\"\"\uff0c Object\u7684\u952e\u4e5f\u5fc5\u987b\u7528\u53cc\u5f15\u53f7\"\" \u5e8f\u5217\u5316 var xiaoming = { name : ' \u5c0f\u660e ' , age : 14 , gender : true , height : 1 . 65 , grade : null , ' middle-school ' : ' \\\"W3C\\\" Middle School ' , skills : [ ' JavaScript ' , ' Java ' , ' Python ' , ' Lisp ' ] } ; var s = JSON . stringify ( xiaoming ) ; // \u6309\u7f29\u8fdb\u8f93\u51fa\uff1a JSON . stringify ( xiaoming , null , ' ' ) ; // \u8f93\u51fa\u6307\u5b9a\u7684\u5c5e\u6027 JSON . stringify ( xiaoming , [ ' name ' , ' skills ' ], ' ' ) ; // \u6bcf\u4e2a\u952e\u503c\u5bf9\u90fd\u4f1a\u88ab\u51fd\u6570\u5148\u5904\u7406 function convert ( key , value ) { if ( typeof value === ' string ' ) { return value . toUpperCase () ; } return value ; } JSON . stringify ( xiaoming , convert , ' ' ) ; // \u7cbe\u786e\u63a7\u5236\u5982\u4f55\u5e8f\u5217\u5316 var xiaoming = { name : ' \u5c0f\u660e ' , age : 14 , gender : true , height : 1 . 65 , grade : null , ' middle-school ' : ' \\\"W3C\\\" Middle School ' , skills : [ ' JavaScript ' , ' Java ' , ' Python ' , ' Lisp ' ], toJSON : function () { return { // \u53ea\u8f93\u51fa name \u548c age \uff0c\u5e76\u4e14\u6539\u53d8\u4e86 key \uff1a ' Name ' : this . name , ' Age ' : this . age } ; } } ; JSON . stringify ( xiaoming ) ; // '{\"Name\":\"\u5c0f\u660e\",\"Age\":14}' \u53cd\u5e8f\u5217\u5316 JSON . parse ( ' [1,2,3,true] ' ) ; // [1, 2, 3, true] // \u8f6c\u6362\u89e3\u6790\u51fa\u7684\u5c5e\u6027 var obj = JSON . parse ( ' {\"name\":\"\u5c0f\u660e\",\"age\":14} ' , function ( key , value ) { if ( key === ' name ' ) { return value + ' \u540c\u5b66 ' ; } return value ; } ) ; console . log ( JSON . stringify ( obj )) ; // {name: '\u5c0f\u660e\u540c\u5b66', age: 14}","title":"JSON"},{"location":"JavaScript/JavaScript\u6d4f\u89c8\u5668/","text":"\u6d4f\u89c8\u5668 \u6d4f\u89c8\u5668\u5bf9\u8c61 window\u5bf9\u8c61\u4e0d\u4f46\u5145\u5f53\u5168\u5c40\u4f5c\u7528\u57df\uff0c\u800c\u4e14\u8868\u793a\u6d4f\u89c8\u5668\u7a97\u53e3\u3002 outerWidth\u548couterHeight\u5c5e\u6027\uff0c\u53ef\u4ee5\u83b7\u53d6\u6d4f\u89c8\u5668\u7a97\u53e3\u7684\u6574\u4e2a\u5bbd\u9ad8 innerWidth\u548cinnerHeight\u5c5e\u6027\uff0c\u53ef\u4ee5\u83b7\u53d6\u6d4f\u89c8\u5668\u7a97\u53e3\u7684\u5185\u90e8\u5bbd\u5ea6\u548c\u9ad8\u5ea6 navigator navigator\u5bf9\u8c61\u8868\u793a\u6d4f\u89c8\u5668\u7684\u4fe1\u606f\uff0c\u6700\u5e38\u7528\u7684\u5c5e\u6027\u5305\u62ec\uff1a navigator.appName\uff1a\u6d4f\u89c8\u5668\u540d\u79f0\uff1b navigator.appVersion\uff1a\u6d4f\u89c8\u5668\u7248\u672c\uff1b navigator.language\uff1a\u6d4f\u89c8\u5668\u8bbe\u7f6e\u7684\u8bed\u8a00\uff1b navigator.platform\uff1a\u64cd\u4f5c\u7cfb\u7edf\u7c7b\u578b\uff1b navigator.userAgent\uff1a\u6d4f\u89c8\u5668\u8bbe\u5b9a\u7684User-Agent\u5b57\u7b26\u4e32 screen \u5bf9\u8c61\u8868\u793a\u5c4f\u5e55\u7684\u4fe1\u606f\uff0c\u5e38\u7528\u7684\u5c5e\u6027\u6709\uff1a screen.width\uff1a\u5c4f\u5e55\u5bbd\u5ea6\uff0c\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff1b screen.height\uff1a\u5c4f\u5e55\u9ad8\u5ea6\uff0c\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff1b screen.colorDepth\uff1a\u8fd4\u56de\u989c\u8272\u4f4d\u6570\uff0c\u59828\u300116\u300124\u3002 location \u5bf9\u8c61\u8868\u793a\u5f53\u524d\u9875\u9762\u7684URL\u4fe1\u606f location.href // http://www.example.com:8080/path/index.html?a=1&b=2#TOP location.protocol; // 'http' location.host; // 'www.example.com' location.port; // '8080' location.pathname; // '/path/index.html' location.search; // '?a=1&b=2' location.hash; // 'TOP' location.assign() \u52a0\u8f7d\u4e00\u4e2a\u65b0\u9875\u9762 location.reload() \u91cd\u65b0\u52a0\u8f7d\u5f53\u524d\u9875\u9762 document \u5bf9\u8c61\u8868\u793a\u5f53\u524d\u9875\u9762 document\u5bf9\u8c61\u5c31\u662f\u6574\u4e2aDOM\u6811\u7684\u6839\u8282\u70b9 document . getElementById () document . getElementsByTagName () Cookie \u662f\u7531\u670d\u52a1\u5668\u53d1\u9001\u7684key-value\u6807\u793a\u7b26 // \u8bfb\u53d6\u5230\u5f53\u524d\u9875\u9762\u7684 Cookie document . cookie ; // 'v=123; remember=true; prefer=zh' \u670d\u52a1\u5668\u5728\u8bbe\u7f6e httpOnly\u7684Cookie\u5c06\u4e0d\u80fd\u88abJavaScript\u8bfb\u53d6 history \u5bf9\u8c61\u4fdd\u5b58\u4e86\u6d4f\u89c8\u5668\u7684\u5386\u53f2\u8bb0\u5f55 history . back () // \u540e\u9000 history . forward () // \u524d\u8fdb \u4efb\u4f55\u60c5\u51b5\uff0c\u4f60\u90fd\u4e0d\u5e94\u8be5\u4f7f\u7528history\u8fd9\u4e2a\u5bf9\u8c61\u4e86 \u64cd\u4f5cDOM document.getElementById() document.getElementsByTagName() document.getElementsByClassName() querySelector() querySelectorAll() \u66f4\u65b0DOM innerHTML innerText\u6216textContent \u4fee\u6539css var p = document . getElementById ( 'p-id' ); // \u8bbe\u7f6e CSS : p . style . color = '#ff0000' ; p . style . fontSize = '20px' ; // font - size\u6539\u5199\u4e3a\u9a7c\u5cf0\u5f0f\u547d\u540d \u63d2\u5165DOM document.createElement() parentElement.appendChild(newElement) node.setAttribute(key, value) parentElement.insertBefore(newElement, referenceElement) node.children() \u5220\u9664DOM removeChild parent.children \u64cd\u4f5c\u8868\u5355 \u6587\u672c\u6846\uff0c\u5bf9\u5e94\u7684 < input type = \"text\" > \uff0c\u7528\u4e8e\u8f93\u5165\u6587\u672c\uff1b \u53e3\u4ee4\u6846\uff0c\u5bf9\u5e94\u7684 < input type = \"password\" > \uff0c\u7528\u4e8e\u8f93\u5165\u53e3\u4ee4\uff1b \u5355\u9009\u6846\uff0c\u5bf9\u5e94\u7684 < input type = \"radio\" > \uff0c\u7528\u4e8e\u9009\u62e9\u4e00\u9879\uff1b \u590d\u9009\u6846\uff0c\u5bf9\u5e94\u7684 < input type = \"checkbox\" > \uff0c\u7528\u4e8e\u9009\u62e9\u591a\u9879\uff1b \u4e0b\u62c9\u6846\uff0c\u5bf9\u5e94\u7684 < select > \uff0c\u7528\u4e8e\u9009\u62e9\u4e00\u9879\uff1b \u9690\u85cf\u6587\u672c\uff0c\u5bf9\u5e94\u7684 < input type = \"hidden\" > \uff0c\u7528\u6237\u4e0d\u53ef\u89c1\uff0c\u4f46\u8868\u5355\u63d0\u4ea4\u65f6\u4f1a\u628a\u9690\u85cf\u6587\u672c\u53d1\u9001\u5230\u670d\u52a1\u5668\u3002 \u83b7\u53d6\u8bbe\u7f6e\u503c value : text\u3001password\u3001hidden\u4ee5\u53caselect checked : \u5355\u9009\u6846\u548c\u590d\u9009\u6846 \u6ca1\u6709name\u5c5e\u6027\u7684 \u7684\u6570\u636e\u4e0d\u4f1a\u88ab\u63d0\u4ea4 \u64cd\u4f5c\u6587\u4ef6 < input type = \"file\" > \u8868\u5355\u7684enctype\u5fc5\u987b\u6307\u5b9a\u4e3amultipart/form-data\uff0cmethod\u5fc5\u987b\u6307\u5b9a\u4e3apost AJAX AJAX\u4e0d\u662fJavaScript\u7684\u89c4\u8303\uff0c Asynchronous JavaScript and XML\uff0c\u610f\u601d\u5c31\u662f\u7528JavaScript\u6267\u884c\u5f02\u6b65\u7f51\u7edc\u8bf7\u6c42 var request = new XMLHttpRequest () ; // \u65b0\u5efaXMLHttpRequest\u5bf9\u8c61 request . onreadystatechange = function () { // \u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u51fd\u6570\u88ab\u56de\u8c03 if ( request . readyState === 4 ) { // \u6210\u529f\u5b8c\u6210 // \u5224\u65ad\u54cd\u5e94\u7ed3\u679c: if ( request . status === 200 ) { // \u6210\u529f\uff0c\u901a\u8fc7 responseText \u62ff\u5230\u54cd\u5e94\u7684\u6587\u672c: return success ( request . responseText ) ; } else { // \u5931\u8d25\uff0c\u6839\u636e\u54cd\u5e94\u7801\u5224\u65ad\u5931\u8d25\u539f\u56e0: return fail ( request . status ) ; } } else { // HTTP \u8bf7\u6c42\u8fd8\u5728\u7ee7\u7eed... } } // \u53d1\u9001\u8bf7\u6c42: request . open ( ' GET ' , ' /api/categories ' ) ; request . send () ; \u5b89\u5168\u9650\u5236 \u6d4f\u89c8\u5668\u7684\u540c\u6e90\u7b56\u7565 JavaScript\u5728\u53d1\u9001AJAX\u8bf7\u6c42\u65f6\uff0cURL\u7684\u57df\u540d\u5fc5\u987b\u548c\u5f53\u524d\u9875\u9762\u5b8c\u5168\u4e00\u81f4\u3002 \u6d4f\u89c8\u5668\u5141\u8bb8\u8de8\u57df\u5f15\u7528JavaScript\u8d44\u6e90 <script src= \"http://example.com/abc.js\" ></script> CORS\u5168\u79f0Cross-Origin Resource Sharing \u8de8\u57df\u8bbf\u95ee\u8d44\u6e90 Access-Control-Allow-Origin Promise\u5bf9\u8c61 Promise().then().then....catch() \u591a\u4efb\u52a1\u4e32\u884c\u6267\u884c. Promise.all([p1,p2,...]) \u591a\u4efb\u52a1\u5e76\u884c\u6267\u884c Promise.race([p1,p2,...]) \u591a\u4efb\u52a1\u8d5b\u8dd1. Canvas jquery $ . fn . jquery // \u67e5\u770b\u7248\u672c \u4f7f\u7528JSONP\uff0c\u53ef\u4ee5\u5728ajax()\u4e2d\u8bbe\u7f6ejsonp: 'callback'\uff0c\u8ba9jQuery\u5b9e\u73b0JSONP\u8de8\u57df\u52a0\u8f7d\u6570\u636e\u3002 JSON\u662f\u4e00\u79cd\u6570\u636e\u4ea4\u6362\u683c\u5f0f\uff0c JSONP\u662f\u4e00\u79cd\u4f9d\u9760\u5f00\u53d1\u4eba\u5458\u7684\u806a\u660e\u624d\u667a\u521b\u9020\u51fa\u7684\u4e00\u79cd\u975e\u5b98\u65b9\u8de8\u57df\u6570\u636e\u4ea4\u4e92\u534f\u8bae ajax\u7684\u6838\u5fc3\u662f\u901a\u8fc7XmlHttpRequest\u83b7\u53d6\u975e\u672c\u9875\u5185\u5bb9\uff0c jsonp\u7684\u6838\u5fc3\u5219\u662f\u52a8\u6001\u6dfb\u52a0 script \u6807\u7b7e\u6765\u8c03\u7528\u670d\u52a1\u5668\u63d0\u4f9b\u7684js\u811a\u672c \u5f02\u5e38\u5904\u7406 try { ... } catch ( e ) { ... } finally { ... } \u629b\u51fa\u9519\u8bef\u4f7f\u7528throw\u8bed\u53e5 JavaScript\u5f15\u64ce\u662f\u4e00\u4e2a\u4e8b\u4ef6\u9a71\u52a8\u7684\u6267\u884c\u5f15\u64ce\uff0c\u4ee3\u7801\u603b\u662f\u4ee5\u5355\u7ebf\u7a0b\u6267\u884c \u800c\u56de\u8c03\u51fd\u6570\u7684\u6267\u884c\u9700\u8981\u7b49\u5230\u4e0b\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u4e8b\u4ef6\u51fa\u73b0\u540e\uff0c\u624d\u4f1a\u88ab\u6267\u884c\u3002 underscore\u5e93\uff0c\u9ad8\u9636\u51fd\u6570\u517c\u5bb9IE6\uff5e8","title":"JavaScript\u6d4f\u89c8\u5668"},{"location":"JavaScript/JavaScript\u6d4f\u89c8\u5668/#dom","text":"innerHTML innerText\u6216textContent \u4fee\u6539css var p = document . getElementById ( 'p-id' ); // \u8bbe\u7f6e CSS : p . style . color = '#ff0000' ; p . style . fontSize = '20px' ; // font - size\u6539\u5199\u4e3a\u9a7c\u5cf0\u5f0f\u547d\u540d","title":"\u66f4\u65b0DOM"},{"location":"JavaScript/JavaScript\u6d4f\u89c8\u5668/#dom_1","text":"document.createElement() parentElement.appendChild(newElement) node.setAttribute(key, value) parentElement.insertBefore(newElement, referenceElement) node.children()","title":"\u63d2\u5165DOM"},{"location":"JavaScript/JavaScript\u6d4f\u89c8\u5668/#dom_2","text":"removeChild parent.children","title":"\u5220\u9664DOM"},{"location":"JavaScript/JavaScript\u6d4f\u89c8\u5668/#_1","text":"\u6587\u672c\u6846\uff0c\u5bf9\u5e94\u7684 < input type = \"text\" > \uff0c\u7528\u4e8e\u8f93\u5165\u6587\u672c\uff1b \u53e3\u4ee4\u6846\uff0c\u5bf9\u5e94\u7684 < input type = \"password\" > \uff0c\u7528\u4e8e\u8f93\u5165\u53e3\u4ee4\uff1b \u5355\u9009\u6846\uff0c\u5bf9\u5e94\u7684 < input type = \"radio\" > \uff0c\u7528\u4e8e\u9009\u62e9\u4e00\u9879\uff1b \u590d\u9009\u6846\uff0c\u5bf9\u5e94\u7684 < input type = \"checkbox\" > \uff0c\u7528\u4e8e\u9009\u62e9\u591a\u9879\uff1b \u4e0b\u62c9\u6846\uff0c\u5bf9\u5e94\u7684 < select > \uff0c\u7528\u4e8e\u9009\u62e9\u4e00\u9879\uff1b \u9690\u85cf\u6587\u672c\uff0c\u5bf9\u5e94\u7684 < input type = \"hidden\" > \uff0c\u7528\u6237\u4e0d\u53ef\u89c1\uff0c\u4f46\u8868\u5355\u63d0\u4ea4\u65f6\u4f1a\u628a\u9690\u85cf\u6587\u672c\u53d1\u9001\u5230\u670d\u52a1\u5668\u3002 \u83b7\u53d6\u8bbe\u7f6e\u503c value : text\u3001password\u3001hidden\u4ee5\u53caselect checked : \u5355\u9009\u6846\u548c\u590d\u9009\u6846 \u6ca1\u6709name\u5c5e\u6027\u7684 \u7684\u6570\u636e\u4e0d\u4f1a\u88ab\u63d0\u4ea4 \u64cd\u4f5c\u6587\u4ef6 < input type = \"file\" > \u8868\u5355\u7684enctype\u5fc5\u987b\u6307\u5b9a\u4e3amultipart/form-data\uff0cmethod\u5fc5\u987b\u6307\u5b9a\u4e3apost AJAX AJAX\u4e0d\u662fJavaScript\u7684\u89c4\u8303\uff0c Asynchronous JavaScript and XML\uff0c\u610f\u601d\u5c31\u662f\u7528JavaScript\u6267\u884c\u5f02\u6b65\u7f51\u7edc\u8bf7\u6c42 var request = new XMLHttpRequest () ; // \u65b0\u5efaXMLHttpRequest\u5bf9\u8c61 request . onreadystatechange = function () { // \u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u51fd\u6570\u88ab\u56de\u8c03 if ( request . readyState === 4 ) { // \u6210\u529f\u5b8c\u6210 // \u5224\u65ad\u54cd\u5e94\u7ed3\u679c: if ( request . status === 200 ) { // \u6210\u529f\uff0c\u901a\u8fc7 responseText \u62ff\u5230\u54cd\u5e94\u7684\u6587\u672c: return success ( request . responseText ) ; } else { // \u5931\u8d25\uff0c\u6839\u636e\u54cd\u5e94\u7801\u5224\u65ad\u5931\u8d25\u539f\u56e0: return fail ( request . status ) ; } } else { // HTTP \u8bf7\u6c42\u8fd8\u5728\u7ee7\u7eed... } } // \u53d1\u9001\u8bf7\u6c42: request . open ( ' GET ' , ' /api/categories ' ) ; request . send () ; \u5b89\u5168\u9650\u5236 \u6d4f\u89c8\u5668\u7684\u540c\u6e90\u7b56\u7565 JavaScript\u5728\u53d1\u9001AJAX\u8bf7\u6c42\u65f6\uff0cURL\u7684\u57df\u540d\u5fc5\u987b\u548c\u5f53\u524d\u9875\u9762\u5b8c\u5168\u4e00\u81f4\u3002 \u6d4f\u89c8\u5668\u5141\u8bb8\u8de8\u57df\u5f15\u7528JavaScript\u8d44\u6e90 <script src= \"http://example.com/abc.js\" ></script> CORS\u5168\u79f0Cross-Origin Resource Sharing \u8de8\u57df\u8bbf\u95ee\u8d44\u6e90 Access-Control-Allow-Origin Promise\u5bf9\u8c61 Promise().then().then....catch() \u591a\u4efb\u52a1\u4e32\u884c\u6267\u884c. Promise.all([p1,p2,...]) \u591a\u4efb\u52a1\u5e76\u884c\u6267\u884c Promise.race([p1,p2,...]) \u591a\u4efb\u52a1\u8d5b\u8dd1. Canvas","title":"\u64cd\u4f5c\u8868\u5355"},{"location":"JavaScript/JavaScript\u6d4f\u89c8\u5668/#jquery","text":"$ . fn . jquery // \u67e5\u770b\u7248\u672c \u4f7f\u7528JSONP\uff0c\u53ef\u4ee5\u5728ajax()\u4e2d\u8bbe\u7f6ejsonp: 'callback'\uff0c\u8ba9jQuery\u5b9e\u73b0JSONP\u8de8\u57df\u52a0\u8f7d\u6570\u636e\u3002 JSON\u662f\u4e00\u79cd\u6570\u636e\u4ea4\u6362\u683c\u5f0f\uff0c JSONP\u662f\u4e00\u79cd\u4f9d\u9760\u5f00\u53d1\u4eba\u5458\u7684\u806a\u660e\u624d\u667a\u521b\u9020\u51fa\u7684\u4e00\u79cd\u975e\u5b98\u65b9\u8de8\u57df\u6570\u636e\u4ea4\u4e92\u534f\u8bae ajax\u7684\u6838\u5fc3\u662f\u901a\u8fc7XmlHttpRequest\u83b7\u53d6\u975e\u672c\u9875\u5185\u5bb9\uff0c jsonp\u7684\u6838\u5fc3\u5219\u662f\u52a8\u6001\u6dfb\u52a0 script \u6807\u7b7e\u6765\u8c03\u7528\u670d\u52a1\u5668\u63d0\u4f9b\u7684js\u811a\u672c \u5f02\u5e38\u5904\u7406 try { ... } catch ( e ) { ... } finally { ... } \u629b\u51fa\u9519\u8bef\u4f7f\u7528throw\u8bed\u53e5 JavaScript\u5f15\u64ce\u662f\u4e00\u4e2a\u4e8b\u4ef6\u9a71\u52a8\u7684\u6267\u884c\u5f15\u64ce\uff0c\u4ee3\u7801\u603b\u662f\u4ee5\u5355\u7ebf\u7a0b\u6267\u884c \u800c\u56de\u8c03\u51fd\u6570\u7684\u6267\u884c\u9700\u8981\u7b49\u5230\u4e0b\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u4e8b\u4ef6\u51fa\u73b0\u540e\uff0c\u624d\u4f1a\u88ab\u6267\u884c\u3002 underscore\u5e93\uff0c\u9ad8\u9636\u51fd\u6570\u517c\u5bb9IE6\uff5e8","title":"jquery"},{"location":"JavaScript/JavaScript\u7684\u51fd\u6570/","text":"JavaScript\u7684\u51fd\u6570 \u51fd\u6570\u4e0d\u4f46\u662f\u201c\u5934\u7b49\u516c\u6c11\u201d\uff0c\u800c\u4e14\u53ef\u4ee5\u50cf\u53d8\u91cf\u4e00\u6837\u4f7f\u7528\uff0c\u5177\u6709\u975e\u5e38\u5f3a\u5927\u7684\u62bd\u8c61\u80fd\u529b \u501f\u52a9\u62bd\u8c61\uff0c\u6211\u4eec\u624d\u80fd\u4e0d\u5173\u5fc3\u5e95\u5c42\u7684\u5177\u4f53\u8ba1\u7b97\u8fc7\u7a0b\uff0c\u800c\u76f4\u63a5\u5728\u66f4\u9ad8\u7684\u5c42\u6b21\u4e0a\u601d\u8003\u95ee\u9898\u3002 \u5b9a\u4e49\u51fd\u6570 function abs ( x ) { if ( x >= 0 ) { return x ; } else { return - x ; } } // \u533f\u540d\u51fd\u6570 var abs = function ( x ) { if ( x >= 0 ) { return x ; } else { return - x ; } } ; // \u672b\u5c3e\u52a0\u4e00\u4e2a;\uff0c\u8868\u793a\u8d4b\u503c\u8bed\u53e5\u7ed3\u675f \u5982\u679c\u6ca1\u6709return\u8bed\u53e5\uff0c\u8fd4\u56de\u7ed3\u679c\u4e3aundefined JavaScript\u7684\u51fd\u6570\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u800c\u51fd\u6570\u540d\u53ef\u4ee5\u89c6\u4e3a\u6307\u5411\u8be5\u51fd\u6570\u7684\u53d8\u91cf JavaScript\u5141\u8bb8\u4f20\u5165\u4efb\u610f\u4e2a\u53c2\u6570\u800c\u4e0d\u5f71\u54cd\u8c03\u7528\uff0c\u56e0\u6b64\u4f20\u5165\u7684\u53c2\u6570\u6bd4\u5b9a\u4e49\u7684\u53c2\u6570\u591a\u4e5f\u6ca1\u6709\u95ee\u9898\uff0c\u867d\u7136\u51fd\u6570\u5185\u90e8\u5e76\u4e0d\u9700\u8981\u8fd9\u4e9b\u53c2\u6570 abs ( 10 , 'blablabla' ); // \u8fd4\u56de 10 abs (); // \u8fd4\u56de NaN \u53c2\u6570\u8fdb\u884c\u68c0\u67e5 function abs ( x ) { if ( typeof x !== ' number ' ) { throw ' Not a number ' ; } if ( x >= 0 ) { return x ; } else { return - x ; } } arguments\uff1a\u83b7\u5f97\u8c03\u7528\u8005\u4f20\u5165\u7684\u6240\u6709\u53c2\u6570\uff0c\u7c7b\u4f3cArray\u4f46\u5b83\u4e0d\u662f\u4e00\u4e2aArray function foo ( x ) { console . log ( ' x = ' + x ) ; // 10 for ( var i = 0 ; i<arguments.length; i++) { console . log ( ' arg ' + i + ' = ' + arguments [ i ] ) ; // 10, 20, 30 } } foo ( 10 , 20 , 30 ) ; ES6\u6807\u51c6\u5f15\u5165\u4e86rest\u53c2\u6570 function foo ( a , b , ... rest ) { console . log ( 'a = ' + a ); console . log ( 'b = ' + b ); console . log ( rest ); } foo ( 1 , 2 , 3 , 4 , 5 ); // \u7ed3\u679c : // a = 1 // b = 2 // Array [ 3 , 4 , 5 ] \u5c0f\u5fc3\u4f60\u7684return\u8bed\u53e5 function foo () { return { name : ' foo ' } ; } foo () ; // undefined // \u4e0a\u9762\u7684\u4ee3\u7801\u5b9e\u9645\u4e0a\u53d8\u6210\u4e86 function foo () { return ; // \u81ea\u52a8\u6dfb\u52a0\u4e86\u5206\u53f7\uff0c\u76f8\u5f53\u4e8ereturn undefined; { name : ' foo ' } ; // \u8fd9\u884c\u8bed\u53e5\u5df2\u7ecf\u6ca1\u6cd5\u6267\u884c\u5230\u4e86 } // \u6240\u4ee5\u6b63\u786e\u7684\u591a\u884c\u5199\u6cd5\u662f function foo () { return { // \u8fd9\u91cc\u4e0d\u4f1a\u81ea\u52a8\u52a0\u5206\u53f7\uff0c\u56e0\u4e3a{\u8868\u793a\u8bed\u53e5\u5c1a\u672a\u7ed3\u675f name : ' foo ' } ; } \u53d8\u91cf\u4f5c\u7528\u57df\u4e0e\u89e3\u6784\u8d4b\u503c \u5728JavaScript\u4e2d\uff0c\u7528var\u7533\u660e\u7684\u53d8\u91cf\u5b9e\u9645\u4e0a\u662f\u6709\u4f5c\u7528\u57df\u7684 \u5728\u51fd\u6570\u4f53\u5185\u90e8\u7533\u660e\u7684\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u51fd\u6570\u4f53 function foo () { var x = 1 ; x = x + 1 ; } x = x + 2 ; // ReferenceError ! \u65e0\u6cd5\u5728\u51fd\u6570\u4f53\u5916\u5f15\u7528\u53d8\u91cf x \u7531\u4e8eJavaScript\u7684\u51fd\u6570\u53ef\u4ee5\u5d4c\u5957\uff0c\u5185\u90e8\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u5916\u90e8\u51fd\u6570\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u53cd\u8fc7\u6765\u5219\u4e0d\u884c function foo () { var x = 1 ; function bar () { var y = x + 1 ; // bar\u53ef\u4ee5\u8bbf\u95eefoo\u7684\u53d8\u91cfx ! } var z = y + 1 ; // ReferenceError ! foo\u4e0d\u53ef\u4ee5\u8bbf\u95eebar\u7684\u53d8\u91cfy ! } JavaScript\u7684\u51fd\u6570\u5728\u67e5\u627e\u53d8\u91cf\u65f6\u4ece\u81ea\u8eab\u51fd\u6570\u5b9a\u4e49\u5f00\u59cb\uff0c\u4ece\u201c\u5185\u201d\u5411\u201c\u5916\u201d\u67e5\u627e\u3002 \u5982\u679c\u5185\u90e8\u51fd\u6570\u5b9a\u4e49\u4e86\u4e0e\u5916\u90e8\u51fd\u6570\u91cd\u540d\u7684\u53d8\u91cf\uff0c\u5219\u5185\u90e8\u51fd\u6570\u7684\u53d8\u91cf\u5c06\u201c\u5c4f\u853d\u201d\u5916\u90e8\u51fd\u6570\u7684\u53d8\u91cf\u3002 \u53d8\u91cf\u63d0\u5347 JavaScript\u7684\u51fd\u6570\u5b9a\u4e49\u6709\u4e2a\u7279\u70b9\uff0c\u5b83\u4f1a\u5148\u626b\u63cf\u6574\u4e2a\u51fd\u6570\u4f53\u7684\u8bed\u53e5\uff0c\u628a\u6240\u6709\u7533\u660e\u7684\u53d8\u91cf\u201c\u63d0\u5347\u201d\u5230\u51fd\u6570\u9876\u90e8 function foo () { var x = 'Hello, ' + y ; console . log ( x ); var y = 'Bob' ; } foo (); // \u76f8\u5f53\u4e8e function foo () { var y ; // \u63d0\u5347\u53d8\u91cf y\u7684\u7533\u660e \uff0c\u6b64\u65f6 y\u4e3aundefined var x = 'Hello, ' + y ; console . log ( x ); y = 'Bob' ; } \u201c\u5728\u51fd\u6570\u5185\u90e8\u9996\u5148\u7533\u660e\u6240\u6709\u53d8\u91cf\u201d\u8fd9\u4e00\u89c4\u5219\u3002 \u6700\u5e38\u89c1\u7684\u505a\u6cd5\u662f\u7528\u4e00\u4e2avar\u7533\u660e\u51fd\u6570\u5185\u90e8\u7528\u5230\u7684\u6240\u6709\u53d8\u91cf function foo () { var x = 1 , // x \u521d\u59cb\u5316\u4e3a 1 y = x + 1 , // y \u521d\u59cb\u5316\u4e3a 2 z , i ; // z\u548ci\u4e3aundefined // \u5176\u4ed6\u8bed\u53e5: for ( i = 0 ; i<100; i++) { ... } } \u5168\u5c40\u4f5c\u7528\u57df \u4e0d\u5728\u4efb\u4f55\u51fd\u6570\u5185\u5b9a\u4e49\u7684\u53d8\u91cf\u5c31\u5177\u6709\u5168\u5c40\u4f5c\u7528\u57df\u3002 \u5b9e\u9645\u4e0a\uff0cJavaScript\u9ed8\u8ba4\u6709\u4e00\u4e2a\u5168\u5c40\u5bf9\u8c61window\uff0c\u5168\u5c40\u4f5c\u7528\u57df\u7684\u53d8\u91cf\u5b9e\u9645\u4e0a\u88ab\u7ed1\u5b9a\u5230window\u7684\u4e00\u4e2a\u5c5e\u6027 var course = 'Learn JavaScript' ; alert ( course ); // 'Learn JavaScript' alert ( window . course ); // 'Learn JavaScript' \u540d\u5b57\u7a7a\u95f4 \u51cf\u5c11\u51b2\u7a81\u7684\u4e00\u4e2a\u65b9\u6cd5\u662f\u628a\u81ea\u5df1\u7684\u6240\u6709\u53d8\u91cf\u548c\u51fd\u6570\u5168\u90e8\u7ed1\u5b9a\u5230\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u4e2d\u3002\u4f8b\u5982\uff1a // \u552f\u4e00\u7684\u5168\u5c40\u53d8\u91cf MYAPP : var MYAPP = {} ; // \u5176\u4ed6\u53d8\u91cf: MYAPP . name = ' myapp ' ; MYAPP . version = 1 . 0 ; // \u5176\u4ed6\u51fd\u6570: MYAPP . foo = function () { return ' foo ' ; } ; \u5c40\u90e8\u4f5c\u7528\u57df JavaScript\u7684\u53d8\u91cf\u4f5c\u7528\u57df\u5b9e\u9645\u4e0a\u662f\u51fd\u6570\u5185\u90e8\uff0c \u6211\u4eec\u5728for\u5faa\u73af\u7b49\u8bed\u53e5\u5757\u4e2d\u662f\u65e0\u6cd5\u5b9a\u4e49\u5177\u6709\u5c40\u90e8\u4f5c\u7528\u57df\u7684\u53d8\u91cf\u7684\uff1a function foo () { for ( var i = 0 ; i<100; i++) { // } i += 100 ; // \u4ecd\u7136\u53ef\u4ee5\u5f15\u7528\u53d8\u91cfi } \u5757\u7ea7\u4f5c\u7528\u57df ES6\u5f15\u5165\u4e86\u65b0\u7684\u5173\u952e\u5b57let\uff0c\u7528let\u66ff\u4ee3var\u53ef\u4ee5\u7533\u660e\u4e00\u4e2a\u5757\u7ea7\u4f5c\u7528\u57df\u7684\u53d8\u91cf function foo () { var sum = 0 ; for ( let i = 0 ; i<100; i++) { sum += i ; } // SyntaxError : i += 1 ; } \u5e38\u91cf // \u5927\u5199\u7684\u53d8\u91cf\u8868\u793a var PI = 3 . 14 ; // ES6\u6807\u51c6\u5f15\u5165\u4e86\u65b0\u7684\u5173\u952e\u5b57const\u6765\u5b9a\u4e49\u5e38\u91cf \uff0c const\u4e0elet\u90fd\u5177\u6709\u5757\u7ea7\u4f5c\u7528\u57df const PI = 3 . 14 ; \u89e3\u6784\u8d4b\u503c \u4eceES6\u5f00\u59cb\uff0cJavaScript\u5f15\u5165\u4e86\u89e3\u6784\u8d4b\u503c\uff0c\u53ef\u4ee5\u540c\u65f6\u5bf9\u4e00\u7ec4\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c\u3002 // \u628a\u4e00\u4e2a\u6570\u7ec4\u7684\u5143\u7d20\u5206\u522b\u8d4b\u503c\u7ed9\u51e0\u4e2a\u53d8\u91cf \uff1a var array = [ 'hello' , 'JavaScript' , 'ES6' ] ; var x = array [ 0 ] ; var y = array [ 1 ] ; var z = array [ 2 ] ; // ES6\u4e2d \uff0c \u53ef\u4ee5\u4f7f\u7528\u89e3\u6784\u8d4b\u503c \uff0c \u76f4\u63a5\u5bf9\u591a\u4e2a\u53d8\u91cf\u540c\u65f6\u8d4b\u503c var [ x , y , z ] = [ 'hello' , 'JavaScript' , 'ES6' ] ; // \u5ffd\u7565\u524d\u4e24\u4e2a\u5143\u7d20 \uff0c \u53ea\u5bf9z\u8d4b\u503c\u7b2c\u4e09\u4e2a\u5143\u7d20 let [ , , z ] = [ 'hello' , 'JavaScript' , 'ES6' ] ; // \u5bf9\u8c61\u89e3\u6784\u8d4b\u503c var person = { name : '\u5c0f\u660e' , age : 20 , gender : 'male' , passport : 'G-12345678' , school : 'No.4 middle school' } ; var { name, age, passport } = person ; // \u628apassport\u5c5e\u6027\u8d4b\u503c\u7ed9\u53d8\u91cfid : let { name, passport : id } = person ; // \u5982\u679cperson\u5bf9\u8c61\u6ca1\u6709single\u5c5e\u6027 \uff0c \u9ed8\u8ba4\u8d4b\u503c\u4e3atrue : var { name, single=true } = person ; // \u5148\u58f0\u660e\u53d8\u91cf\u518d\u8d4b\u503c var x , y ; // JavaScript\u5f15\u64ce\u628a { \u5f00\u5934\u7684\u8bed\u53e5\u5f53\u4f5c\u4e86\u5757\u5904\u7406\uff0c\u4e8e\u662f=\u4e0d\u518d\u5408\u6cd5\uff0c\u7528\u5c0f\u62ec\u53f7\u62ec\u8d77\u6765 ({x, y } = { name : '\u5c0f\u660e' , x : 100 , y : 200 } ); \u4f7f\u7528\u573a\u666f // \u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf x \u548c y \u7684\u503c var x = 1 , y = 2 ; [ x , y ] = [ y , x ] ; // \u5feb\u901f\u83b7\u53d6\u5f53\u524d\u9875\u9762\u7684\u57df\u540d\u548c\u8def\u5f84 var { hostname : domain , pathname : path } = location ; // \u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570 function buildDate ( { year , month , day , hour = 0 , minute = 0 , second = 0 } ) { return new Date ( year + ' - ' + month + ' - ' + day + ' ' + hour + ' : ' + minute + ' : ' + second ) ; } \u65b9\u6cd5 \u5bf9\u8c61\u7684\u65b9\u6cd5: \u5728\u5bf9\u8c61\u4e2d\u7ed1\u5b9a\u51fd\u6570 var xiaoming = { name : ' \u5c0f\u660e ' , birth : 1990 , age : function () { var y = new Date () . getFullYear () ; return y - this . birth ; } } ; xiaoming . age ; // function xiaoming.age() xiaoming . age () ; // \u4eca\u5e74\u8c03\u7528\u662f25,\u660e\u5e74\u8c03\u7528\u5c31\u53d8\u621026\u4e86 // \u62c6\u5f00\u5199 function getAge () { var y = new Date () . getFullYear () ; return y - this . birth ; } var xiaoming = { name : ' \u5c0f\u660e ' , birth : 1990 , age : getAge } ; xiaoming . age () ; // 25, \u6b63\u5e38\u7ed3\u679c getAge () ; // NaN \u5728\u4e00\u4e2a\u65b9\u6cd5\u5185\u90e8\uff0cthis\u662f\u4e00\u4e2a\u7279\u6b8a\u53d8\u91cf\uff0c\u5b83\u59cb\u7ec8\u6307\u5411\u5f53\u524d\u5bf9\u8c61 \u4ee5\u5bf9\u8c61.\u65b9\u6cd5\u5f62\u5f0f\u8c03\u7528\uff0c\u6bd4\u5982xiaoming.age()\uff0c\u8be5\u51fd\u6570\u7684this\u6307\u5411\u88ab\u8c03\u7528\u7684\u5bf9\u8c61 \u5355\u72ec\u8c03\u7528\u51fd\u6570\uff0c\u6bd4\u5982getAge()\uff0c\u6b64\u65f6\uff0c\u8be5\u51fd\u6570\u7684this\u6307\u5411\u5168\u5c40\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662fwindow\u3002 \u5728strict\u6a21\u5f0f, \u51fd\u6570\u7684this\u6307\u5411undefined \u5185\u90e8\u5d4c\u5957\u4f7f\u7528this var xiaoming = { name : ' \u5c0f\u660e ' , birth : 1990 , age : function () { var that = this ; // \u5728\u65b9\u6cd5\u5185\u90e8\u4e00\u5f00\u59cb\u5c31\u6355\u83b7this function getAgeFromBirth () { var y = new Date () . getFullYear () ; return y - that . birth ; // \u7528that\u800c\u4e0d\u662fthis } return getAgeFromBirth () ; } } ; xiaoming . age () ; // 25 apply\u6307\u5b9athis\u6307\u5411\u5bf9\u8c61 \u6307\u5b9a\u51fd\u6570\u7684this\u6307\u5411\u54ea\u4e2a\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7528\u51fd\u6570\u672c\u8eab\u7684apply\u65b9\u6cd5 \u7b2c\u4e00\u4e2a\u53c2\u6570\u5c31\u662f\u9700\u8981\u7ed1\u5b9a\u7684this\u53d8\u91cf\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662fArray\uff0c\u8868\u793a\u51fd\u6570\u672c\u8eab\u7684\u53c2\u6570 function getAge () { var y = new Date () . getFullYear () ; return y - this . birth ; } var xiaoming = { name : ' \u5c0f\u660e ' , birth : 1990 , age : getAge } ; xiaoming . age () ; // 25 getAge . apply ( xiaoming , [] ) ; // 25, this\u6307\u5411xiaoming, \u53c2\u6570\u4e3a\u7a7a apply()\u628a\u53c2\u6570\u6253\u5305\u6210Array\u518d\u4f20\u5165\uff1b call()\u628a\u53c2\u6570\u6309\u987a\u5e8f\u4f20\u5165\u3002 Math . max . apply ( null , [ 3 , 5 , 4 ]); // 5 Math . max . call ( null , 3 , 5 , 4 ); // 5 \u666e\u901a\u51fd\u6570\u8c03\u7528\uff0c\u6211\u4eec\u901a\u5e38\u628athis\u7ed1\u5b9a\u4e3anull \u88c5\u9970\u5668 \u5229\u7528apply()\uff0c \u8fd8\u53ef\u4ee5\u52a8\u6001\u6539\u53d8\u51fd\u6570\u7684\u884c\u4e3a eg: // \u7edf\u8ba1\u4e00\u4e0b\u4ee3\u7801\u4e00\u5171\u8c03\u7528\u4e86\u591a\u5c11\u6b21 parseInt () var count = 0 ; var oldParseInt = parseInt ; // \u4fdd\u5b58\u539f\u51fd\u6570 window . parseInt = function () { count += 1 ; return oldParseInt . apply ( null , arguments ) ; // \u8c03\u7528\u539f\u51fd\u6570 } ; \u975e\u4e25\u683c\u6a21\u5f0f\u4e2d\uff1a 1.\u5728\u5168\u5c40\u73af\u5883\u4e2dthis\u59cb\u7ec8\u6307\u5411window console . log ( this ); // window 2.\u5728\u666e\u901a\u65b9\u6cd5\u5185\u90e8\uff0cthis\u6307\u5411\u4ed6\u7684\u8c03\u7528\u8005 \u4f5c\u4e3a\u666e\u901a\u51fd\u6570\u8c03\u7528\uff1a function f () { return this ; } console . log ( f ()) ; // window \u4f5c\u4e3a\u5bf9\u8c61\u65b9\u6cd5\u8c03\u7528\uff1a var obj = { prop : 37 , f : function () { return this . prop ; } } console . log ( obj . f ()) ; //37 3.\u5728\u7bad\u5934\u51fd\u6570\u5185\u90e8\uff0cthis\u88ab\u8bbe\u7f6e\u4e3a\u51fd\u6570\u521b\u5efa\u65f6\uff0c\u5c06\u51fd\u6570\u7528\u2018{ }\u2019\u5c01\u95ed\u7684\u8bcd\u6cd5\u4f5c\u7528\u57df\u4e2d\u7684this var obj = { prop : 37 , f : function () { return () => { return this . prop ; } } } console . log ( obj . f ()()) ; //37 \u5728\u7bad\u5934\u51fd\u6570\u521b\u5efa\u65f6\uff0c\u88abf\u51fd\u6570\u7684\u2018{ }\u2019\u5c01\u95ed\uff0c\u6240\u4ee5\u7bad\u5934\u51fd\u6570\u7684this\u6307\u5411f\u51fd\u6570\u7684this\uff0c \u800c\u4f5c\u4e3a\u5bf9\u8c61\u65b9\u6cd5\u88ab\u8c03\u7528\u7684f\u51fd\u6570\u7684this\u5c31\u662fobj,\u56e0\u6b64\u7bad\u5934\u51fd\u6570\u7684this\u4e5f\u662fobj \u9ad8\u9636\u51fd\u6570Higher-order function JavaScript\u7684\u51fd\u6570\u5176\u5b9e\u90fd\u6307\u5411\u67d0\u4e2a\u53d8\u91cf\u3002 \u65e2\u7136\u53d8\u91cf\u53ef\u4ee5\u6307\u5411\u51fd\u6570\uff0c\u51fd\u6570\u7684\u53c2\u6570\u80fd\u63a5\u6536\u53d8\u91cf\uff0c\u90a3\u4e48\u4e00\u4e2a\u51fd\u6570\u5c31\u53ef\u4ee5\u63a5\u6536\u53e6\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570 function add ( x , y , f ) { return f ( x ) + f ( y ) ; } map\u6620\u5c04 var arr = [ 1 , 2 , 3 ]; arr . map ( String ); // [ '1' , '2' , '3' ] reduce\u5f52\u7ea6 var arr = [ 1 , 3 , 5 , 7 , 9 ] ; arr . reduce ( function ( x , y ) { return x + y ; } ) ; // 25 filter\u8fc7\u6ee4 // \u5728\u4e00\u4e2a Array \u4e2d\uff0c\u5220\u6389\u5076\u6570\uff0c\u53ea\u4fdd\u7559\u5947\u6570\uff0c\u53ef\u4ee5\u8fd9\u4e48\u5199 var arr = [ 1 , 2 , 4 , 5 , 6 , 9 , 10 , 15 ] ; var r = arr . filter ( function ( x ) { return x % 2 !== 0 ; } ) ; r ; // [1, 5, 9, 15] // \u56de\u8c03\u51fd\u6570\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\u53c2\u6570 var arr = [ ' A ' , ' B ' , ' C ' ] ; var r = arr . filter ( function ( element , index , self ) { console . log ( element ) ; // \u4f9d\u6b21\u6253\u5370'A', 'B', 'C' console . log ( index ) ; // \u4f9d\u6b21\u6253\u53700, 1, 2 console . log ( self ) ; // self\u5c31\u662f\u53d8\u91cfarr return true ; } ) ; sort\u6392\u5e8f var arr = [ 10 , 20 , 1 , 2 ] ; arr . sort ( function ( x , y ) { if ( x < y ) { return - 1 ; } if ( x > y ) { return 1 ; } return 0 ; } ) ; console . log ( arr ) ; // [1, 2, 10, 20] every \u5224\u65ad\u6570\u7ec4\u7684\u6240\u6709\u5143\u7d20\u662f\u5426\u6ee1\u8db3\u6d4b\u8bd5\u6761\u4ef6 var arr = [ ' Apple ' , ' pear ' , ' orange ' ] ; console . log ( arr . every ( function ( s ) { return s . length > 0 ; } )) ; // true, \u56e0\u4e3a\u6bcf\u4e2a\u5143\u7d20\u90fd\u6ee1\u8db3s.length>0 find \u7528\u4e8e\u67e5\u627e\u7b26\u5408\u6761\u4ef6\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u627e\u5230\u4e86\uff0c\u8fd4\u56de\u8fd9\u4e2a\u5143\u7d20\uff0c\u5426\u5219\uff0c\u8fd4\u56deundefined var arr = [ ' Apple ' , ' pear ' , ' orange ' ] ; console . log ( arr . find ( function ( s ) { return s . toLowerCase () === s ; } )) ; // 'pear', \u56e0\u4e3apear\u5168\u90e8\u662f\u5c0f\u5199 findIndex \u67e5\u627e\u7b26\u5408\u6761\u4ef6\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u8fd4\u56de\u8fd9\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u8fd4\u56de-1 var arr = [ ' Apple ' , ' pear ' , ' orange ' ] ; console . log ( arr . findIndex ( function ( s ) { return s . toLowerCase () === s ; } )) ; // 1, \u56e0\u4e3a'pear'\u7684\u7d22\u5f15\u662f1 forEach \u5b83\u4e5f\u628a\u6bcf\u4e2a\u5143\u7d20\u4f9d\u6b21\u4f5c\u7528\u4e8e\u4f20\u5165\u7684\u51fd\u6570\uff0c\u4f46\u4e0d\u4f1a\u8fd4\u56de\u65b0\u7684\u6570\u7ec4\u3002 forEach()\u5e38\u7528\u4e8e\u904d\u5386\u6570\u7ec4\uff0c\u56e0\u6b64\uff0c\u4f20\u5165\u7684\u51fd\u6570\u4e0d\u9700\u8981\u8fd4\u56de\u503c var arr = [ 'Apple' , 'pear' , 'orange' ]; arr . forEach ( console . log ); // \u4f9d\u6b21\u6253\u5370\u6bcf\u4e2a\u5143\u7d20 \u95ed\u5305 \u51fd\u6570\u4f5c\u4e3a\u8fd4\u56de\u503c \u9ad8\u9636\u51fd\u6570\u9664\u4e86\u53ef\u4ee5\u63a5\u53d7\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u5916\uff0c\u8fd8\u53ef\u4ee5\u628a\u51fd\u6570\u4f5c\u4e3a\u7ed3\u679c\u503c\u8fd4\u56de \u95ed\u5305\uff08Closure\uff09\u5185\u90e8\u51fd\u6570\u5f15\u7528\u5916\u90e8\u51fd\u6570\u7684\u53c2\u6570\u548c\u5c40\u90e8\u53d8\u91cf\uff0c \u5f53\u8fd4\u56de\u51fd\u6570\u65f6\uff0c\u76f8\u5173\u53c2\u6570\u548c\u53d8\u91cf\u90fd\u4fdd\u5b58\u5728\u8fd4\u56de\u7684\u51fd\u6570\u4e2d(\u5939\u5e26\u79c1\u8d27) \u8fd4\u56de\u95ed\u5305\u65f6\u7262\u8bb0\u7684\u4e00\u70b9: \u8fd4\u56de\u51fd\u6570\u4e0d\u8981\u5f15\u7528\u4efb\u4f55\u5faa\u73af\u53d8\u91cf\uff0c\u6216\u8005\u540e\u7eed\u4f1a\u53d1\u751f\u53d8\u5316\u7684\u53d8\u91cf \u5229\u7528\u95ed\u5305\u521b\u5efa\u65b0\u7684\u51fd\u6570 function make_pow ( n ) { return function ( x ) { return Math . pow ( x , n ) ; } } // \u521b\u5efa\u4e24\u4e2a\u65b0\u51fd\u6570: var pow2 = make_pow ( 2 ) ; var pow3 = make_pow ( 3 ) ; console . log ( pow2 ( 5 )) ; // 25 console . log ( pow3 ( 7 )) ; // 343 \u7bad\u5934\u51fd\u6570 ES6\u6807\u51c6\u65b0\u589e Arrow Function \u533f\u540d\u51fd\u6570 x => x * x // \u4e0a\u9762\u7684\u7bad\u5934\u51fd\u6570\u76f8\u5f53\u4e8e function ( x ) { return x * x ; } \u53ea\u5305\u542b\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u8fde{ ... }\u548creturn\u90fd\u7701\u7565\u6389\u4e86 \u5305\u542b\u591a\u6761\u8bed\u53e5\uff0c\u8fd9\u65f6\u5019\u5c31\u4e0d\u80fd\u7701\u7565{ ... }\u548creturn x => { if ( x > 0 ) { return x * x ; } else { return - x * x ; } } // \u4e24\u4e2a\u53c2\u6570: ( x , y ) => x * x + y * y // \u65e0\u53c2\u6570: () => 3 . 14 // \u53ef\u53d8\u53c2\u6570: ( x , y , ... rest ) => { var i , sum = x + y ; for ( i = 0 ; i<rest.length; i++) { sum += rest [ i ] ; } return sum ; } // \u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61 x => ( { foo : x } ) \u7bad\u5934\u51fd\u6570\u5b8c\u5168\u4fee\u590d\u4e86this\u7684\u6307\u5411\uff0cthis\u603b\u662f\u6307\u5411\u8bcd\u6cd5\u4f5c\u7528\u57df,\u4e5f\u5c31\u662f\u5916\u5c42\u8c03\u7528\u8005obj var obj = { birth : 1990 , getAge : function () { var b = this . birth ; // 1990 var fn = () => new Date () . getFullYear () - this . birth ; // this\u6307\u5411obj\u5bf9\u8c61 return fn () ; } } ; obj . getAge () ; // 25 \u7bad\u5934\u51fd\u6570\u548c\u533f\u540d\u51fd\u6570\u6709\u4e2a\u660e\u663e\u7684\u533a\u522b\uff1a \u7bad\u5934\u51fd\u6570\u5185\u90e8\u7684this\u662f\u8bcd\u6cd5\u4f5c\u7528\u57df\uff0c\u7531\u4e0a\u4e0b\u6587\u786e\u5b9a\u3002 generator\uff08\u751f\u6210\u5668\uff09 \u662fES6\u6807\u51c6\u5f15\u5165,\u501f\u9274\u4e86Python\u7684generator\u7684\u6982\u5ff5\u548c\u8bed\u6cd5 function fib ( max ) { var t , a = 0 , b = 1 , n = 0 ; while ( n < max ) { yield a ; [ a , b ] = [ b , a + b ] ; n ++ ; } return ; } var f = fib ( 5 ) ; f . next () ; // {value: 0, done: false} f . next () ; // {value: 1, done: false} f . next () ; // {value: 1, done: false} f . next () ; // {value: 2, done: false} f . next () ; // {value: 3, done: false} f . next () ; // {value: undefined, done: true} // for ... of \u5faa\u73af\u8fed\u4ee3 generator \u5bf9\u8c61 for ( var x of fib ( 10 )) { console . log ( x ) ; // \u4f9d\u6b21\u8f93\u51fa0, 1, 1, 2, 3, ... } AJAX\u793a\u4f8b ajax ( ' http://url-1 ' , data1 , function ( err , result ) { if ( err ) { return handle ( err ) ; } ajax ( ' http://url-2 ' , data2 , function ( err , result ) { if ( err ) { return handle ( err ) ; } ajax ( ' http://url-3 ' , data3 , function ( err , result ) { if ( err ) { return handle ( err ) ; } return success ( result ) ; } ) ; } ) ; } ) ; \u56de\u8c03\u8d8a\u591a\uff0c\u4ee3\u7801\u8d8a\u96be\u770b\u3002 // \u6709\u4e86 generator \u7684\u7f8e\u597d\u65f6\u4ee3\uff0c\u7528 AJAX \u65f6\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a try { r1 = yield ajax ( ' http://url-1 ' , data1 ) ; r2 = yield ajax ( ' http://url-2 ' , data2 ) ; r3 = yield ajax ( ' http://url-3 ' , data3 ) ; success ( r3 ) ; } catch ( err ) { handle ( err ) ; } \u770b\u4e0a\u53bb\u662f\u540c\u6b65\u7684\u4ee3\u7801\uff0c\u5b9e\u9645\u6267\u884c\u662f\u5f02\u6b65\u7684\u3002","title":"JavaScript\u7684\u51fd\u6570"},{"location":"JavaScript/JavaScript\u7684\u51fd\u6570/#javascript","text":"\u51fd\u6570\u4e0d\u4f46\u662f\u201c\u5934\u7b49\u516c\u6c11\u201d\uff0c\u800c\u4e14\u53ef\u4ee5\u50cf\u53d8\u91cf\u4e00\u6837\u4f7f\u7528\uff0c\u5177\u6709\u975e\u5e38\u5f3a\u5927\u7684\u62bd\u8c61\u80fd\u529b \u501f\u52a9\u62bd\u8c61\uff0c\u6211\u4eec\u624d\u80fd\u4e0d\u5173\u5fc3\u5e95\u5c42\u7684\u5177\u4f53\u8ba1\u7b97\u8fc7\u7a0b\uff0c\u800c\u76f4\u63a5\u5728\u66f4\u9ad8\u7684\u5c42\u6b21\u4e0a\u601d\u8003\u95ee\u9898\u3002 \u5b9a\u4e49\u51fd\u6570 function abs ( x ) { if ( x >= 0 ) { return x ; } else { return - x ; } } // \u533f\u540d\u51fd\u6570 var abs = function ( x ) { if ( x >= 0 ) { return x ; } else { return - x ; } } ; // \u672b\u5c3e\u52a0\u4e00\u4e2a;\uff0c\u8868\u793a\u8d4b\u503c\u8bed\u53e5\u7ed3\u675f \u5982\u679c\u6ca1\u6709return\u8bed\u53e5\uff0c\u8fd4\u56de\u7ed3\u679c\u4e3aundefined JavaScript\u7684\u51fd\u6570\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u800c\u51fd\u6570\u540d\u53ef\u4ee5\u89c6\u4e3a\u6307\u5411\u8be5\u51fd\u6570\u7684\u53d8\u91cf JavaScript\u5141\u8bb8\u4f20\u5165\u4efb\u610f\u4e2a\u53c2\u6570\u800c\u4e0d\u5f71\u54cd\u8c03\u7528\uff0c\u56e0\u6b64\u4f20\u5165\u7684\u53c2\u6570\u6bd4\u5b9a\u4e49\u7684\u53c2\u6570\u591a\u4e5f\u6ca1\u6709\u95ee\u9898\uff0c\u867d\u7136\u51fd\u6570\u5185\u90e8\u5e76\u4e0d\u9700\u8981\u8fd9\u4e9b\u53c2\u6570 abs ( 10 , 'blablabla' ); // \u8fd4\u56de 10 abs (); // \u8fd4\u56de NaN \u53c2\u6570\u8fdb\u884c\u68c0\u67e5 function abs ( x ) { if ( typeof x !== ' number ' ) { throw ' Not a number ' ; } if ( x >= 0 ) { return x ; } else { return - x ; } } arguments\uff1a\u83b7\u5f97\u8c03\u7528\u8005\u4f20\u5165\u7684\u6240\u6709\u53c2\u6570\uff0c\u7c7b\u4f3cArray\u4f46\u5b83\u4e0d\u662f\u4e00\u4e2aArray function foo ( x ) { console . log ( ' x = ' + x ) ; // 10 for ( var i = 0 ; i<arguments.length; i++) { console . log ( ' arg ' + i + ' = ' + arguments [ i ] ) ; // 10, 20, 30 } } foo ( 10 , 20 , 30 ) ; ES6\u6807\u51c6\u5f15\u5165\u4e86rest\u53c2\u6570 function foo ( a , b , ... rest ) { console . log ( 'a = ' + a ); console . log ( 'b = ' + b ); console . log ( rest ); } foo ( 1 , 2 , 3 , 4 , 5 ); // \u7ed3\u679c : // a = 1 // b = 2 // Array [ 3 , 4 , 5 ] \u5c0f\u5fc3\u4f60\u7684return\u8bed\u53e5 function foo () { return { name : ' foo ' } ; } foo () ; // undefined // \u4e0a\u9762\u7684\u4ee3\u7801\u5b9e\u9645\u4e0a\u53d8\u6210\u4e86 function foo () { return ; // \u81ea\u52a8\u6dfb\u52a0\u4e86\u5206\u53f7\uff0c\u76f8\u5f53\u4e8ereturn undefined; { name : ' foo ' } ; // \u8fd9\u884c\u8bed\u53e5\u5df2\u7ecf\u6ca1\u6cd5\u6267\u884c\u5230\u4e86 } // \u6240\u4ee5\u6b63\u786e\u7684\u591a\u884c\u5199\u6cd5\u662f function foo () { return { // \u8fd9\u91cc\u4e0d\u4f1a\u81ea\u52a8\u52a0\u5206\u53f7\uff0c\u56e0\u4e3a{\u8868\u793a\u8bed\u53e5\u5c1a\u672a\u7ed3\u675f name : ' foo ' } ; }","title":"JavaScript\u7684\u51fd\u6570"},{"location":"JavaScript/JavaScript\u7684\u51fd\u6570/#_1","text":"\u5728JavaScript\u4e2d\uff0c\u7528var\u7533\u660e\u7684\u53d8\u91cf\u5b9e\u9645\u4e0a\u662f\u6709\u4f5c\u7528\u57df\u7684 \u5728\u51fd\u6570\u4f53\u5185\u90e8\u7533\u660e\u7684\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u51fd\u6570\u4f53 function foo () { var x = 1 ; x = x + 1 ; } x = x + 2 ; // ReferenceError ! \u65e0\u6cd5\u5728\u51fd\u6570\u4f53\u5916\u5f15\u7528\u53d8\u91cf x \u7531\u4e8eJavaScript\u7684\u51fd\u6570\u53ef\u4ee5\u5d4c\u5957\uff0c\u5185\u90e8\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u5916\u90e8\u51fd\u6570\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u53cd\u8fc7\u6765\u5219\u4e0d\u884c function foo () { var x = 1 ; function bar () { var y = x + 1 ; // bar\u53ef\u4ee5\u8bbf\u95eefoo\u7684\u53d8\u91cfx ! } var z = y + 1 ; // ReferenceError ! foo\u4e0d\u53ef\u4ee5\u8bbf\u95eebar\u7684\u53d8\u91cfy ! } JavaScript\u7684\u51fd\u6570\u5728\u67e5\u627e\u53d8\u91cf\u65f6\u4ece\u81ea\u8eab\u51fd\u6570\u5b9a\u4e49\u5f00\u59cb\uff0c\u4ece\u201c\u5185\u201d\u5411\u201c\u5916\u201d\u67e5\u627e\u3002 \u5982\u679c\u5185\u90e8\u51fd\u6570\u5b9a\u4e49\u4e86\u4e0e\u5916\u90e8\u51fd\u6570\u91cd\u540d\u7684\u53d8\u91cf\uff0c\u5219\u5185\u90e8\u51fd\u6570\u7684\u53d8\u91cf\u5c06\u201c\u5c4f\u853d\u201d\u5916\u90e8\u51fd\u6570\u7684\u53d8\u91cf\u3002 \u53d8\u91cf\u63d0\u5347 JavaScript\u7684\u51fd\u6570\u5b9a\u4e49\u6709\u4e2a\u7279\u70b9\uff0c\u5b83\u4f1a\u5148\u626b\u63cf\u6574\u4e2a\u51fd\u6570\u4f53\u7684\u8bed\u53e5\uff0c\u628a\u6240\u6709\u7533\u660e\u7684\u53d8\u91cf\u201c\u63d0\u5347\u201d\u5230\u51fd\u6570\u9876\u90e8 function foo () { var x = 'Hello, ' + y ; console . log ( x ); var y = 'Bob' ; } foo (); // \u76f8\u5f53\u4e8e function foo () { var y ; // \u63d0\u5347\u53d8\u91cf y\u7684\u7533\u660e \uff0c\u6b64\u65f6 y\u4e3aundefined var x = 'Hello, ' + y ; console . log ( x ); y = 'Bob' ; } \u201c\u5728\u51fd\u6570\u5185\u90e8\u9996\u5148\u7533\u660e\u6240\u6709\u53d8\u91cf\u201d\u8fd9\u4e00\u89c4\u5219\u3002 \u6700\u5e38\u89c1\u7684\u505a\u6cd5\u662f\u7528\u4e00\u4e2avar\u7533\u660e\u51fd\u6570\u5185\u90e8\u7528\u5230\u7684\u6240\u6709\u53d8\u91cf function foo () { var x = 1 , // x \u521d\u59cb\u5316\u4e3a 1 y = x + 1 , // y \u521d\u59cb\u5316\u4e3a 2 z , i ; // z\u548ci\u4e3aundefined // \u5176\u4ed6\u8bed\u53e5: for ( i = 0 ; i<100; i++) { ... } } \u5168\u5c40\u4f5c\u7528\u57df \u4e0d\u5728\u4efb\u4f55\u51fd\u6570\u5185\u5b9a\u4e49\u7684\u53d8\u91cf\u5c31\u5177\u6709\u5168\u5c40\u4f5c\u7528\u57df\u3002 \u5b9e\u9645\u4e0a\uff0cJavaScript\u9ed8\u8ba4\u6709\u4e00\u4e2a\u5168\u5c40\u5bf9\u8c61window\uff0c\u5168\u5c40\u4f5c\u7528\u57df\u7684\u53d8\u91cf\u5b9e\u9645\u4e0a\u88ab\u7ed1\u5b9a\u5230window\u7684\u4e00\u4e2a\u5c5e\u6027 var course = 'Learn JavaScript' ; alert ( course ); // 'Learn JavaScript' alert ( window . course ); // 'Learn JavaScript' \u540d\u5b57\u7a7a\u95f4 \u51cf\u5c11\u51b2\u7a81\u7684\u4e00\u4e2a\u65b9\u6cd5\u662f\u628a\u81ea\u5df1\u7684\u6240\u6709\u53d8\u91cf\u548c\u51fd\u6570\u5168\u90e8\u7ed1\u5b9a\u5230\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u4e2d\u3002\u4f8b\u5982\uff1a // \u552f\u4e00\u7684\u5168\u5c40\u53d8\u91cf MYAPP : var MYAPP = {} ; // \u5176\u4ed6\u53d8\u91cf: MYAPP . name = ' myapp ' ; MYAPP . version = 1 . 0 ; // \u5176\u4ed6\u51fd\u6570: MYAPP . foo = function () { return ' foo ' ; } ; \u5c40\u90e8\u4f5c\u7528\u57df JavaScript\u7684\u53d8\u91cf\u4f5c\u7528\u57df\u5b9e\u9645\u4e0a\u662f\u51fd\u6570\u5185\u90e8\uff0c \u6211\u4eec\u5728for\u5faa\u73af\u7b49\u8bed\u53e5\u5757\u4e2d\u662f\u65e0\u6cd5\u5b9a\u4e49\u5177\u6709\u5c40\u90e8\u4f5c\u7528\u57df\u7684\u53d8\u91cf\u7684\uff1a function foo () { for ( var i = 0 ; i<100; i++) { // } i += 100 ; // \u4ecd\u7136\u53ef\u4ee5\u5f15\u7528\u53d8\u91cfi } \u5757\u7ea7\u4f5c\u7528\u57df ES6\u5f15\u5165\u4e86\u65b0\u7684\u5173\u952e\u5b57let\uff0c\u7528let\u66ff\u4ee3var\u53ef\u4ee5\u7533\u660e\u4e00\u4e2a\u5757\u7ea7\u4f5c\u7528\u57df\u7684\u53d8\u91cf function foo () { var sum = 0 ; for ( let i = 0 ; i<100; i++) { sum += i ; } // SyntaxError : i += 1 ; } \u5e38\u91cf // \u5927\u5199\u7684\u53d8\u91cf\u8868\u793a var PI = 3 . 14 ; // ES6\u6807\u51c6\u5f15\u5165\u4e86\u65b0\u7684\u5173\u952e\u5b57const\u6765\u5b9a\u4e49\u5e38\u91cf \uff0c const\u4e0elet\u90fd\u5177\u6709\u5757\u7ea7\u4f5c\u7528\u57df const PI = 3 . 14 ; \u89e3\u6784\u8d4b\u503c \u4eceES6\u5f00\u59cb\uff0cJavaScript\u5f15\u5165\u4e86\u89e3\u6784\u8d4b\u503c\uff0c\u53ef\u4ee5\u540c\u65f6\u5bf9\u4e00\u7ec4\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c\u3002 // \u628a\u4e00\u4e2a\u6570\u7ec4\u7684\u5143\u7d20\u5206\u522b\u8d4b\u503c\u7ed9\u51e0\u4e2a\u53d8\u91cf \uff1a var array = [ 'hello' , 'JavaScript' , 'ES6' ] ; var x = array [ 0 ] ; var y = array [ 1 ] ; var z = array [ 2 ] ; // ES6\u4e2d \uff0c \u53ef\u4ee5\u4f7f\u7528\u89e3\u6784\u8d4b\u503c \uff0c \u76f4\u63a5\u5bf9\u591a\u4e2a\u53d8\u91cf\u540c\u65f6\u8d4b\u503c var [ x , y , z ] = [ 'hello' , 'JavaScript' , 'ES6' ] ; // \u5ffd\u7565\u524d\u4e24\u4e2a\u5143\u7d20 \uff0c \u53ea\u5bf9z\u8d4b\u503c\u7b2c\u4e09\u4e2a\u5143\u7d20 let [ , , z ] = [ 'hello' , 'JavaScript' , 'ES6' ] ; // \u5bf9\u8c61\u89e3\u6784\u8d4b\u503c var person = { name : '\u5c0f\u660e' , age : 20 , gender : 'male' , passport : 'G-12345678' , school : 'No.4 middle school' } ; var { name, age, passport } = person ; // \u628apassport\u5c5e\u6027\u8d4b\u503c\u7ed9\u53d8\u91cfid : let { name, passport : id } = person ; // \u5982\u679cperson\u5bf9\u8c61\u6ca1\u6709single\u5c5e\u6027 \uff0c \u9ed8\u8ba4\u8d4b\u503c\u4e3atrue : var { name, single=true } = person ; // \u5148\u58f0\u660e\u53d8\u91cf\u518d\u8d4b\u503c var x , y ; // JavaScript\u5f15\u64ce\u628a { \u5f00\u5934\u7684\u8bed\u53e5\u5f53\u4f5c\u4e86\u5757\u5904\u7406\uff0c\u4e8e\u662f=\u4e0d\u518d\u5408\u6cd5\uff0c\u7528\u5c0f\u62ec\u53f7\u62ec\u8d77\u6765 ({x, y } = { name : '\u5c0f\u660e' , x : 100 , y : 200 } ); \u4f7f\u7528\u573a\u666f // \u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf x \u548c y \u7684\u503c var x = 1 , y = 2 ; [ x , y ] = [ y , x ] ; // \u5feb\u901f\u83b7\u53d6\u5f53\u524d\u9875\u9762\u7684\u57df\u540d\u548c\u8def\u5f84 var { hostname : domain , pathname : path } = location ; // \u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570 function buildDate ( { year , month , day , hour = 0 , minute = 0 , second = 0 } ) { return new Date ( year + ' - ' + month + ' - ' + day + ' ' + hour + ' : ' + minute + ' : ' + second ) ; }","title":"\u53d8\u91cf\u4f5c\u7528\u57df\u4e0e\u89e3\u6784\u8d4b\u503c"},{"location":"JavaScript/JavaScript\u7684\u51fd\u6570/#_2","text":"\u5bf9\u8c61\u7684\u65b9\u6cd5: \u5728\u5bf9\u8c61\u4e2d\u7ed1\u5b9a\u51fd\u6570 var xiaoming = { name : ' \u5c0f\u660e ' , birth : 1990 , age : function () { var y = new Date () . getFullYear () ; return y - this . birth ; } } ; xiaoming . age ; // function xiaoming.age() xiaoming . age () ; // \u4eca\u5e74\u8c03\u7528\u662f25,\u660e\u5e74\u8c03\u7528\u5c31\u53d8\u621026\u4e86 // \u62c6\u5f00\u5199 function getAge () { var y = new Date () . getFullYear () ; return y - this . birth ; } var xiaoming = { name : ' \u5c0f\u660e ' , birth : 1990 , age : getAge } ; xiaoming . age () ; // 25, \u6b63\u5e38\u7ed3\u679c getAge () ; // NaN \u5728\u4e00\u4e2a\u65b9\u6cd5\u5185\u90e8\uff0cthis\u662f\u4e00\u4e2a\u7279\u6b8a\u53d8\u91cf\uff0c\u5b83\u59cb\u7ec8\u6307\u5411\u5f53\u524d\u5bf9\u8c61 \u4ee5\u5bf9\u8c61.\u65b9\u6cd5\u5f62\u5f0f\u8c03\u7528\uff0c\u6bd4\u5982xiaoming.age()\uff0c\u8be5\u51fd\u6570\u7684this\u6307\u5411\u88ab\u8c03\u7528\u7684\u5bf9\u8c61 \u5355\u72ec\u8c03\u7528\u51fd\u6570\uff0c\u6bd4\u5982getAge()\uff0c\u6b64\u65f6\uff0c\u8be5\u51fd\u6570\u7684this\u6307\u5411\u5168\u5c40\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662fwindow\u3002 \u5728strict\u6a21\u5f0f, \u51fd\u6570\u7684this\u6307\u5411undefined \u5185\u90e8\u5d4c\u5957\u4f7f\u7528this var xiaoming = { name : ' \u5c0f\u660e ' , birth : 1990 , age : function () { var that = this ; // \u5728\u65b9\u6cd5\u5185\u90e8\u4e00\u5f00\u59cb\u5c31\u6355\u83b7this function getAgeFromBirth () { var y = new Date () . getFullYear () ; return y - that . birth ; // \u7528that\u800c\u4e0d\u662fthis } return getAgeFromBirth () ; } } ; xiaoming . age () ; // 25 apply\u6307\u5b9athis\u6307\u5411\u5bf9\u8c61 \u6307\u5b9a\u51fd\u6570\u7684this\u6307\u5411\u54ea\u4e2a\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7528\u51fd\u6570\u672c\u8eab\u7684apply\u65b9\u6cd5 \u7b2c\u4e00\u4e2a\u53c2\u6570\u5c31\u662f\u9700\u8981\u7ed1\u5b9a\u7684this\u53d8\u91cf\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662fArray\uff0c\u8868\u793a\u51fd\u6570\u672c\u8eab\u7684\u53c2\u6570 function getAge () { var y = new Date () . getFullYear () ; return y - this . birth ; } var xiaoming = { name : ' \u5c0f\u660e ' , birth : 1990 , age : getAge } ; xiaoming . age () ; // 25 getAge . apply ( xiaoming , [] ) ; // 25, this\u6307\u5411xiaoming, \u53c2\u6570\u4e3a\u7a7a apply()\u628a\u53c2\u6570\u6253\u5305\u6210Array\u518d\u4f20\u5165\uff1b call()\u628a\u53c2\u6570\u6309\u987a\u5e8f\u4f20\u5165\u3002 Math . max . apply ( null , [ 3 , 5 , 4 ]); // 5 Math . max . call ( null , 3 , 5 , 4 ); // 5 \u666e\u901a\u51fd\u6570\u8c03\u7528\uff0c\u6211\u4eec\u901a\u5e38\u628athis\u7ed1\u5b9a\u4e3anull \u88c5\u9970\u5668 \u5229\u7528apply()\uff0c \u8fd8\u53ef\u4ee5\u52a8\u6001\u6539\u53d8\u51fd\u6570\u7684\u884c\u4e3a eg: // \u7edf\u8ba1\u4e00\u4e0b\u4ee3\u7801\u4e00\u5171\u8c03\u7528\u4e86\u591a\u5c11\u6b21 parseInt () var count = 0 ; var oldParseInt = parseInt ; // \u4fdd\u5b58\u539f\u51fd\u6570 window . parseInt = function () { count += 1 ; return oldParseInt . apply ( null , arguments ) ; // \u8c03\u7528\u539f\u51fd\u6570 } ; \u975e\u4e25\u683c\u6a21\u5f0f\u4e2d\uff1a 1.\u5728\u5168\u5c40\u73af\u5883\u4e2dthis\u59cb\u7ec8\u6307\u5411window console . log ( this ); // window 2.\u5728\u666e\u901a\u65b9\u6cd5\u5185\u90e8\uff0cthis\u6307\u5411\u4ed6\u7684\u8c03\u7528\u8005 \u4f5c\u4e3a\u666e\u901a\u51fd\u6570\u8c03\u7528\uff1a function f () { return this ; } console . log ( f ()) ; // window \u4f5c\u4e3a\u5bf9\u8c61\u65b9\u6cd5\u8c03\u7528\uff1a var obj = { prop : 37 , f : function () { return this . prop ; } } console . log ( obj . f ()) ; //37 3.\u5728\u7bad\u5934\u51fd\u6570\u5185\u90e8\uff0cthis\u88ab\u8bbe\u7f6e\u4e3a\u51fd\u6570\u521b\u5efa\u65f6\uff0c\u5c06\u51fd\u6570\u7528\u2018{ }\u2019\u5c01\u95ed\u7684\u8bcd\u6cd5\u4f5c\u7528\u57df\u4e2d\u7684this var obj = { prop : 37 , f : function () { return () => { return this . prop ; } } } console . log ( obj . f ()()) ; //37 \u5728\u7bad\u5934\u51fd\u6570\u521b\u5efa\u65f6\uff0c\u88abf\u51fd\u6570\u7684\u2018{ }\u2019\u5c01\u95ed\uff0c\u6240\u4ee5\u7bad\u5934\u51fd\u6570\u7684this\u6307\u5411f\u51fd\u6570\u7684this\uff0c \u800c\u4f5c\u4e3a\u5bf9\u8c61\u65b9\u6cd5\u88ab\u8c03\u7528\u7684f\u51fd\u6570\u7684this\u5c31\u662fobj,\u56e0\u6b64\u7bad\u5934\u51fd\u6570\u7684this\u4e5f\u662fobj","title":"\u65b9\u6cd5"},{"location":"JavaScript/JavaScript\u7684\u51fd\u6570/#higher-order-function","text":"JavaScript\u7684\u51fd\u6570\u5176\u5b9e\u90fd\u6307\u5411\u67d0\u4e2a\u53d8\u91cf\u3002 \u65e2\u7136\u53d8\u91cf\u53ef\u4ee5\u6307\u5411\u51fd\u6570\uff0c\u51fd\u6570\u7684\u53c2\u6570\u80fd\u63a5\u6536\u53d8\u91cf\uff0c\u90a3\u4e48\u4e00\u4e2a\u51fd\u6570\u5c31\u53ef\u4ee5\u63a5\u6536\u53e6\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570 function add ( x , y , f ) { return f ( x ) + f ( y ) ; } map\u6620\u5c04 var arr = [ 1 , 2 , 3 ]; arr . map ( String ); // [ '1' , '2' , '3' ] reduce\u5f52\u7ea6 var arr = [ 1 , 3 , 5 , 7 , 9 ] ; arr . reduce ( function ( x , y ) { return x + y ; } ) ; // 25 filter\u8fc7\u6ee4 // \u5728\u4e00\u4e2a Array \u4e2d\uff0c\u5220\u6389\u5076\u6570\uff0c\u53ea\u4fdd\u7559\u5947\u6570\uff0c\u53ef\u4ee5\u8fd9\u4e48\u5199 var arr = [ 1 , 2 , 4 , 5 , 6 , 9 , 10 , 15 ] ; var r = arr . filter ( function ( x ) { return x % 2 !== 0 ; } ) ; r ; // [1, 5, 9, 15] // \u56de\u8c03\u51fd\u6570\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\u53c2\u6570 var arr = [ ' A ' , ' B ' , ' C ' ] ; var r = arr . filter ( function ( element , index , self ) { console . log ( element ) ; // \u4f9d\u6b21\u6253\u5370'A', 'B', 'C' console . log ( index ) ; // \u4f9d\u6b21\u6253\u53700, 1, 2 console . log ( self ) ; // self\u5c31\u662f\u53d8\u91cfarr return true ; } ) ; sort\u6392\u5e8f var arr = [ 10 , 20 , 1 , 2 ] ; arr . sort ( function ( x , y ) { if ( x < y ) { return - 1 ; } if ( x > y ) { return 1 ; } return 0 ; } ) ; console . log ( arr ) ; // [1, 2, 10, 20] every \u5224\u65ad\u6570\u7ec4\u7684\u6240\u6709\u5143\u7d20\u662f\u5426\u6ee1\u8db3\u6d4b\u8bd5\u6761\u4ef6 var arr = [ ' Apple ' , ' pear ' , ' orange ' ] ; console . log ( arr . every ( function ( s ) { return s . length > 0 ; } )) ; // true, \u56e0\u4e3a\u6bcf\u4e2a\u5143\u7d20\u90fd\u6ee1\u8db3s.length>0 find \u7528\u4e8e\u67e5\u627e\u7b26\u5408\u6761\u4ef6\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u627e\u5230\u4e86\uff0c\u8fd4\u56de\u8fd9\u4e2a\u5143\u7d20\uff0c\u5426\u5219\uff0c\u8fd4\u56deundefined var arr = [ ' Apple ' , ' pear ' , ' orange ' ] ; console . log ( arr . find ( function ( s ) { return s . toLowerCase () === s ; } )) ; // 'pear', \u56e0\u4e3apear\u5168\u90e8\u662f\u5c0f\u5199 findIndex \u67e5\u627e\u7b26\u5408\u6761\u4ef6\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u8fd4\u56de\u8fd9\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u8fd4\u56de-1 var arr = [ ' Apple ' , ' pear ' , ' orange ' ] ; console . log ( arr . findIndex ( function ( s ) { return s . toLowerCase () === s ; } )) ; // 1, \u56e0\u4e3a'pear'\u7684\u7d22\u5f15\u662f1 forEach \u5b83\u4e5f\u628a\u6bcf\u4e2a\u5143\u7d20\u4f9d\u6b21\u4f5c\u7528\u4e8e\u4f20\u5165\u7684\u51fd\u6570\uff0c\u4f46\u4e0d\u4f1a\u8fd4\u56de\u65b0\u7684\u6570\u7ec4\u3002 forEach()\u5e38\u7528\u4e8e\u904d\u5386\u6570\u7ec4\uff0c\u56e0\u6b64\uff0c\u4f20\u5165\u7684\u51fd\u6570\u4e0d\u9700\u8981\u8fd4\u56de\u503c var arr = [ 'Apple' , 'pear' , 'orange' ]; arr . forEach ( console . log ); // \u4f9d\u6b21\u6253\u5370\u6bcf\u4e2a\u5143\u7d20","title":"\u9ad8\u9636\u51fd\u6570Higher-order function"},{"location":"JavaScript/JavaScript\u7684\u51fd\u6570/#_3","text":"\u51fd\u6570\u4f5c\u4e3a\u8fd4\u56de\u503c \u9ad8\u9636\u51fd\u6570\u9664\u4e86\u53ef\u4ee5\u63a5\u53d7\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u5916\uff0c\u8fd8\u53ef\u4ee5\u628a\u51fd\u6570\u4f5c\u4e3a\u7ed3\u679c\u503c\u8fd4\u56de \u95ed\u5305\uff08Closure\uff09\u5185\u90e8\u51fd\u6570\u5f15\u7528\u5916\u90e8\u51fd\u6570\u7684\u53c2\u6570\u548c\u5c40\u90e8\u53d8\u91cf\uff0c \u5f53\u8fd4\u56de\u51fd\u6570\u65f6\uff0c\u76f8\u5173\u53c2\u6570\u548c\u53d8\u91cf\u90fd\u4fdd\u5b58\u5728\u8fd4\u56de\u7684\u51fd\u6570\u4e2d(\u5939\u5e26\u79c1\u8d27) \u8fd4\u56de\u95ed\u5305\u65f6\u7262\u8bb0\u7684\u4e00\u70b9: \u8fd4\u56de\u51fd\u6570\u4e0d\u8981\u5f15\u7528\u4efb\u4f55\u5faa\u73af\u53d8\u91cf\uff0c\u6216\u8005\u540e\u7eed\u4f1a\u53d1\u751f\u53d8\u5316\u7684\u53d8\u91cf \u5229\u7528\u95ed\u5305\u521b\u5efa\u65b0\u7684\u51fd\u6570 function make_pow ( n ) { return function ( x ) { return Math . pow ( x , n ) ; } } // \u521b\u5efa\u4e24\u4e2a\u65b0\u51fd\u6570: var pow2 = make_pow ( 2 ) ; var pow3 = make_pow ( 3 ) ; console . log ( pow2 ( 5 )) ; // 25 console . log ( pow3 ( 7 )) ; // 343 \u7bad\u5934\u51fd\u6570 ES6\u6807\u51c6\u65b0\u589e Arrow Function \u533f\u540d\u51fd\u6570 x => x * x // \u4e0a\u9762\u7684\u7bad\u5934\u51fd\u6570\u76f8\u5f53\u4e8e function ( x ) { return x * x ; } \u53ea\u5305\u542b\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u8fde{ ... }\u548creturn\u90fd\u7701\u7565\u6389\u4e86 \u5305\u542b\u591a\u6761\u8bed\u53e5\uff0c\u8fd9\u65f6\u5019\u5c31\u4e0d\u80fd\u7701\u7565{ ... }\u548creturn x => { if ( x > 0 ) { return x * x ; } else { return - x * x ; } } // \u4e24\u4e2a\u53c2\u6570: ( x , y ) => x * x + y * y // \u65e0\u53c2\u6570: () => 3 . 14 // \u53ef\u53d8\u53c2\u6570: ( x , y , ... rest ) => { var i , sum = x + y ; for ( i = 0 ; i<rest.length; i++) { sum += rest [ i ] ; } return sum ; } // \u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61 x => ( { foo : x } ) \u7bad\u5934\u51fd\u6570\u5b8c\u5168\u4fee\u590d\u4e86this\u7684\u6307\u5411\uff0cthis\u603b\u662f\u6307\u5411\u8bcd\u6cd5\u4f5c\u7528\u57df,\u4e5f\u5c31\u662f\u5916\u5c42\u8c03\u7528\u8005obj var obj = { birth : 1990 , getAge : function () { var b = this . birth ; // 1990 var fn = () => new Date () . getFullYear () - this . birth ; // this\u6307\u5411obj\u5bf9\u8c61 return fn () ; } } ; obj . getAge () ; // 25 \u7bad\u5934\u51fd\u6570\u548c\u533f\u540d\u51fd\u6570\u6709\u4e2a\u660e\u663e\u7684\u533a\u522b\uff1a \u7bad\u5934\u51fd\u6570\u5185\u90e8\u7684this\u662f\u8bcd\u6cd5\u4f5c\u7528\u57df\uff0c\u7531\u4e0a\u4e0b\u6587\u786e\u5b9a\u3002 generator\uff08\u751f\u6210\u5668\uff09 \u662fES6\u6807\u51c6\u5f15\u5165,\u501f\u9274\u4e86Python\u7684generator\u7684\u6982\u5ff5\u548c\u8bed\u6cd5 function fib ( max ) { var t , a = 0 , b = 1 , n = 0 ; while ( n < max ) { yield a ; [ a , b ] = [ b , a + b ] ; n ++ ; } return ; } var f = fib ( 5 ) ; f . next () ; // {value: 0, done: false} f . next () ; // {value: 1, done: false} f . next () ; // {value: 1, done: false} f . next () ; // {value: 2, done: false} f . next () ; // {value: 3, done: false} f . next () ; // {value: undefined, done: true} // for ... of \u5faa\u73af\u8fed\u4ee3 generator \u5bf9\u8c61 for ( var x of fib ( 10 )) { console . log ( x ) ; // \u4f9d\u6b21\u8f93\u51fa0, 1, 1, 2, 3, ... } AJAX\u793a\u4f8b ajax ( ' http://url-1 ' , data1 , function ( err , result ) { if ( err ) { return handle ( err ) ; } ajax ( ' http://url-2 ' , data2 , function ( err , result ) { if ( err ) { return handle ( err ) ; } ajax ( ' http://url-3 ' , data3 , function ( err , result ) { if ( err ) { return handle ( err ) ; } return success ( result ) ; } ) ; } ) ; } ) ; \u56de\u8c03\u8d8a\u591a\uff0c\u4ee3\u7801\u8d8a\u96be\u770b\u3002 // \u6709\u4e86 generator \u7684\u7f8e\u597d\u65f6\u4ee3\uff0c\u7528 AJAX \u65f6\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a try { r1 = yield ajax ( ' http://url-1 ' , data1 ) ; r2 = yield ajax ( ' http://url-2 ' , data2 ) ; r3 = yield ajax ( ' http://url-3 ' , data3 ) ; success ( r3 ) ; } catch ( err ) { handle ( err ) ; } \u770b\u4e0a\u53bb\u662f\u540c\u6b65\u7684\u4ee3\u7801\uff0c\u5b9e\u9645\u6267\u884c\u662f\u5f02\u6b65\u7684\u3002","title":"\u95ed\u5305"},{"location":"JavaScript/JavaScript\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/","text":"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b \u7c7b\uff1a\u7c7b\u662f\u5bf9\u8c61\u7684\u7c7b\u578b\u6a21\u677f \u5b9e\u4f8b\uff1a\u5b9e\u4f8b\u662f\u6839\u636e\u7c7b\u521b\u5efa\u7684\u5bf9\u8c61 JavaScript\u4e0d\u533a\u5206\u7c7b\u548c\u5b9e\u4f8b\u7684\u6982\u5ff5\uff0c\u800c\u662f\u901a\u8fc7\u539f\u578b\uff08prototype\uff09\u6765\u5b9e\u73b0\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b JavaScript\u7684\u539f\u578b\u94fe\u548cJava\u7684Class\u533a\u522b\u5c31\u5728\uff0c\u5b83\u6ca1\u6709\u201cClass\u201d\u7684\u6982\u5ff5\uff0c\u6240\u6709\u5bf9\u8c61\u90fd\u662f\u5b9e\u4f8b\uff0c \u6240\u8c13\u7ee7\u627f\u5173\u7cfb\u4e0d\u8fc7\u662f\u628a\u4e00\u4e2a\u5bf9\u8c61\u7684\u539f\u578b\u6307\u5411\u53e6\u4e00\u4e2a\u5bf9\u8c61\u800c\u5df2\u3002 // \u4ee3\u7801\u4ec5\u7528\u4e8e\u6f14\u793a\u76ee\u7684 var Student = { name : 'Robot' , height : 1 . 2 , run : function () { console . log ( this . name + ' is running...' ); } } ; var xiaoming = { name : '\u5c0f\u660e' } ; xiaoming . __proto__ = Student ; xiaoming . name ; // '\u5c0f\u660e' xiaoming . run (); // \u5c0f\u660e is running ... // \u539f\u578b\u5bf9\u8c61: var Student = { name : ' Robot ' , height : 1 . 2 , run : function () { console . log ( this . name + ' is running... ' ) ; } } ; function createStudent ( name ) { // \u57fa\u4e8e Student \u539f\u578b\u521b\u5efa\u4e00\u4e2a\u65b0\u5bf9\u8c61: var s = Object . create ( Student ) ; // \u521d\u59cb\u5316\u65b0\u5bf9\u8c61: s . name = name ; return s ; } var xiaoming = createStudent ( ' \u5c0f\u660e ' ) ; xiaoming . run () ; // \u5c0f\u660e is running... xiaoming . __proto__ === Student ; // true \u521b\u5efa\u5bf9\u8c61 obj.xxx\u8bbf\u95ee\u4e00\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027\u65f6\uff0c\u5148\u5728\u5f53\u524d\u5bf9\u8c61\u4e0a\u67e5\u627e\u8be5\u5c5e\u6027\uff0c \u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5c31\u5230\u5176\u539f\u578b\u5bf9\u8c61\u4e0a\u627e\uff0c \u5982\u679c\u8fd8\u6ca1\u6709\u627e\u5230\uff0c\u5c31\u4e00\u76f4\u4e0a\u6eaf\u5230Object.prototype\u5bf9\u8c61\uff0c \u6700\u540e\uff0c\u5982\u679c\u8fd8\u6ca1\u6709\u627e\u5230\uff0c\u5c31\u53ea\u80fd\u8fd4\u56deundefined\u3002 array \u539f\u578b\u94fe\u662f arr ----> Array.prototype ----> Object.prototype ----> null \u6784\u9020\u51fd\u6570 function Student ( name ) { this . name = name ; this . hello = function () { alert ( 'Hello, ' + this . name + '!' ); } } var xiaoming = new Student ( '\u5c0f\u660e' ); xiaoming . name ; // '\u5c0f\u660e' xiaoming . hello (); // Hello , \u5c0f\u660e ! \u5982\u679c\u4e0d\u5199new\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u666e\u901a\u51fd\u6570\uff0c\u5b83\u8fd4\u56deundefined\u3002 \u4f46\u662f\uff0c\u5982\u679c\u5199\u4e86new\uff0c\u5b83\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u5b83\u7ed1\u5b9a\u7684this\u6307\u5411\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u5e76\u9ed8\u8ba4\u8fd4\u56dethis\uff0c \u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u9700\u8981\u5728\u6700\u540e\u5199return this; \u7528new Student()\u521b\u5efa\u7684\u5bf9\u8c61\u8fd8\u4ece\u539f\u578b\u4e0a, \u83b7\u5f97\u4e86\u4e00\u4e2aconstructor\u5c5e\u6027\uff0c\u5b83\u6307\u5411\u51fd\u6570Student\u672c\u8eab xiaoming . constructor === Student . prototype . constructor ; // true Student . prototype . constructor === Student ; // true Object . getPrototypeOf ( xiaoming ) === Student . prototype ; // true xiaoming instanceof Student ; // true \u6309\u7167\u7ea6\u5b9a\uff0c\u6784\u9020\u51fd\u6570\u9996\u5b57\u6bcd\u5e94\u5f53\u5927\u5199\uff0c\u800c\u666e\u901a\u51fd\u6570\u9996\u5b57\u6bcd\u5e94\u5f53\u5c0f\u5199 function Student ( name ) { this . name = name ; } Student . prototype . hello = function () { alert ( ' Hello, ' + this . name + ' ! ' ) ; } ; function Student ( props ) { this . name = props . name || ' \u533f\u540d ' ; // \u9ed8\u8ba4\u503c\u4e3a'\u533f\u540d' this . grade = props . grade || 1 ; // \u9ed8\u8ba4\u503c\u4e3a1 } Student . prototype . hello = function () { alert ( ' Hello, ' + this . name + ' ! ' ) ; } ; function createStudent ( props ) { return new Student ( props || {} ) } // \u8c03\u7528 var xiaoming = createStudent ( { name : ' \u5c0f\u660e ' } ) ; xiaoming . grade ; // 1 \u539f\u578b\u7ee7\u627f \u592a\u96be\u7406\u89e3\uff0c\u7565\u8fc7 class\u7ee7\u627f \u5173\u952e\u5b57class\u4eceES6\u5f00\u59cb\u6b63\u5f0f\u88ab\u5f15\u5165 function Student ( name ) { this . name = name ; } Student . prototype . hello = function () { alert ( 'Hello, ' + this . name + '!' ); } // \u5982\u679c\u7528\u65b0\u7684 class\u5173\u952e\u5b57\u6765\u7f16\u5199Student \uff0c\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a class Student { constructor ( name ) { this . name = name ; } hello () { alert ( 'Hello, ' + this . name + '!' ); } } // class\u7ee7\u627f class PrimaryStudent extends Student { constructor ( name , grade ) { super ( name ); // \u8bb0\u5f97\u7528 super\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u65b9\u6cd5 ! this . grade = grade ; } myGrade () { alert ( 'I am at grade ' + this . grade ); } }","title":"JavaScript\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b"},{"location":"JavaScript/JavaScript\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#_1","text":"obj.xxx\u8bbf\u95ee\u4e00\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027\u65f6\uff0c\u5148\u5728\u5f53\u524d\u5bf9\u8c61\u4e0a\u67e5\u627e\u8be5\u5c5e\u6027\uff0c \u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5c31\u5230\u5176\u539f\u578b\u5bf9\u8c61\u4e0a\u627e\uff0c \u5982\u679c\u8fd8\u6ca1\u6709\u627e\u5230\uff0c\u5c31\u4e00\u76f4\u4e0a\u6eaf\u5230Object.prototype\u5bf9\u8c61\uff0c \u6700\u540e\uff0c\u5982\u679c\u8fd8\u6ca1\u6709\u627e\u5230\uff0c\u5c31\u53ea\u80fd\u8fd4\u56deundefined\u3002 array \u539f\u578b\u94fe\u662f arr ----> Array.prototype ----> Object.prototype ----> null \u6784\u9020\u51fd\u6570 function Student ( name ) { this . name = name ; this . hello = function () { alert ( 'Hello, ' + this . name + '!' ); } } var xiaoming = new Student ( '\u5c0f\u660e' ); xiaoming . name ; // '\u5c0f\u660e' xiaoming . hello (); // Hello , \u5c0f\u660e ! \u5982\u679c\u4e0d\u5199new\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u666e\u901a\u51fd\u6570\uff0c\u5b83\u8fd4\u56deundefined\u3002 \u4f46\u662f\uff0c\u5982\u679c\u5199\u4e86new\uff0c\u5b83\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u5b83\u7ed1\u5b9a\u7684this\u6307\u5411\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u5e76\u9ed8\u8ba4\u8fd4\u56dethis\uff0c \u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u9700\u8981\u5728\u6700\u540e\u5199return this; \u7528new Student()\u521b\u5efa\u7684\u5bf9\u8c61\u8fd8\u4ece\u539f\u578b\u4e0a, \u83b7\u5f97\u4e86\u4e00\u4e2aconstructor\u5c5e\u6027\uff0c\u5b83\u6307\u5411\u51fd\u6570Student\u672c\u8eab xiaoming . constructor === Student . prototype . constructor ; // true Student . prototype . constructor === Student ; // true Object . getPrototypeOf ( xiaoming ) === Student . prototype ; // true xiaoming instanceof Student ; // true \u6309\u7167\u7ea6\u5b9a\uff0c\u6784\u9020\u51fd\u6570\u9996\u5b57\u6bcd\u5e94\u5f53\u5927\u5199\uff0c\u800c\u666e\u901a\u51fd\u6570\u9996\u5b57\u6bcd\u5e94\u5f53\u5c0f\u5199 function Student ( name ) { this . name = name ; } Student . prototype . hello = function () { alert ( ' Hello, ' + this . name + ' ! ' ) ; } ; function Student ( props ) { this . name = props . name || ' \u533f\u540d ' ; // \u9ed8\u8ba4\u503c\u4e3a'\u533f\u540d' this . grade = props . grade || 1 ; // \u9ed8\u8ba4\u503c\u4e3a1 } Student . prototype . hello = function () { alert ( ' Hello, ' + this . name + ' ! ' ) ; } ; function createStudent ( props ) { return new Student ( props || {} ) } // \u8c03\u7528 var xiaoming = createStudent ( { name : ' \u5c0f\u660e ' } ) ; xiaoming . grade ; // 1","title":"\u521b\u5efa\u5bf9\u8c61"},{"location":"JavaScript/JavaScript\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#_2","text":"\u592a\u96be\u7406\u89e3\uff0c\u7565\u8fc7","title":"\u539f\u578b\u7ee7\u627f"},{"location":"JavaScript/JavaScript\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b/#class","text":"\u5173\u952e\u5b57class\u4eceES6\u5f00\u59cb\u6b63\u5f0f\u88ab\u5f15\u5165 function Student ( name ) { this . name = name ; } Student . prototype . hello = function () { alert ( 'Hello, ' + this . name + '!' ); } // \u5982\u679c\u7528\u65b0\u7684 class\u5173\u952e\u5b57\u6765\u7f16\u5199Student \uff0c\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a class Student { constructor ( name ) { this . name = name ; } hello () { alert ( 'Hello, ' + this . name + '!' ); } } // class\u7ee7\u627f class PrimaryStudent extends Student { constructor ( name , grade ) { super ( name ); // \u8bb0\u5f97\u7528 super\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u65b9\u6cd5 ! this . grade = grade ; } myGrade () { alert ( 'I am at grade ' + this . grade ); } }","title":"class\u7ee7\u627f"},{"location":"JavaScript/Node\u57fa\u7840\u5b66\u4e60\u7b14\u8bb0/","text":"Node\u57fa\u7840\u5b66\u4e60\u7b14\u8bb0 Node\u7b80\u4ecb 1\u3001Node\u7684\u4f5c\u7528\u548c\u5e94\u7528 1. \u8131\u79bb\u6d4f\u89c8\u5668\u8fd0\u884cJS 2. \u540e\u7aefAPI\u7f16\u5199 3. webpack gulp npm\u7b49 2\u3001\u4e2d\u95f4\u5c42\uff1a\u670d\u52a1\u5668\u4e2d\u8d1f\u8d23IO\u8bfb\u5199\u7684\u4e2d\u95f4\u5c42\u670d\u52a1\u5668 \u6027\u80fd \u5f02\u6b65IO \u5904\u7406\u6570\u636e \u5b89\u5168\u6027 3\u3001\u5b66\u4e60\u76ee\u6807 \u767b\u5f55\u3001\u6ce8\u518c 4\u3001\u524d\u7f6e\u77e5\u8bc6 HTML CSS JS 5\u3001Node\u4f18\u52bf \u4fbf\u4e8e\u524d\u7aef\u5f00\u53d1\u5165\u95e8 \u6027\u80fd\u9ad8 \u5229\u4e8e\u524d\u7aef\u4ee3\u7801\u6574\u5408 6\u3001\u7f3a\u70b9 \u5e74\u8f7b \u73af\u5883\u642d\u5efa # \u67e5\u770b\u7248\u672c $ node -v # \u8fdb\u5165\u4ea4\u4e92\u547d\u4ee4\u884c $ node 1\u3001Hello world demo.js console . log ( \"hello world!\" ); \u8fd0\u884c $ node demo hello world! $ node demo.js hello world! npm\u5305\u7ba1\u7406 \u5e38\u7528\u547d\u4ee4 # \u521d\u59cb\u5316\u9879\u76ee\uff0c\u751f\u6210package.json $ npm init # \u5b89\u88c5package.json\u4e2d\u6240\u6709\u4f9d\u8d56 $ npm install # \u5b89\u88c5 \u7b80\u5199 i $ npm install jquery # \u5220\u9664 \u7b80\u5199 un $ npm uninstall jquery # \u66f4\u65b0 $ npm update jquery # \u5168\u5c40\u5b89\u88c5cnpm \u6307\u5b9a\u6dd8\u5b9d\u6e90 $ npm install cnpm -g --registry = https://registry.npm.taobao.org Node\u6a21\u5757 \u4e09\u79cd\u6a21\u5757\uff1a 1. \u5168\u5c40\u6a21\u5757 2. \u7cfb\u7edf\u6a21\u5757 3. \u81ea\u5b9a\u4e49\u6a21\u5757 1\u3001\u5168\u5c40\u6a21\u5757 \u5168\u5c40\u4f7f\u7528\uff0c\u4e0d\u9700\u8981\u5f15\u7528 process . env \u73af\u5883\u53d8\u91cf process . argv \u6267\u884c\u53c2\u6570 \u793a\u4f8b\uff1a\u8bfb\u53d6\u73af\u5883\u53d8\u91cf console . log ( process . env ); if ( process . env . dev ){ console . log ( \"\u5f00\u53d1\u73af\u5883\" ); } else { console . log ( \"\u751f\u4ea7\u73af\u5883\" ); } // \u751f\u4ea7\u73af\u5883 \u793a\u4f8b\uff1a\u7b80\u6613\u8ba1\u7b97\u5668\u547d\u4ee4\u884c\u63a5\u6536\u53c2\u6570 let num1 = parseInt ( process . argv [ 2 ]) let num2 = parseInt ( process . argv [ 3 ]) console . log ( num1 + num2 ); \u6267\u884c $ node demo 1 1 2 2\u3001\u7cfb\u7edf\u6a21\u5757 \u9700\u8981require\u5f15\u5165\uff0c\u4e0d\u9700\u8981\u5355\u72ec\u4e0b\u8f7d path: \u7528\u4e8e\u5904\u7406\u6587\u4ef6\u8def\u5f84\u548c\u76ee\u5f55\u8def\u5f84\u7684\u5b9e\u7528\u5de5\u5177 \u793a\u4f8b const path = require ( \"path\" ) let filename = \"/root/demo/index.jpg\" console . log ( path . dirname ( filename )); // /root/demo console . log ( path . basename ( filename )); // index.jpg console . log ( path . extname ( filename )); // .jpg /* \u8def\u5f84\u62fc\u63a5 */ console . log ( path . resolve ( __dirname , \"index.js\" )); // /Users/demo/Desktop/index.js fs \u7528\u4e8e\u6587\u4ef6\u8bfb\u5199\u64cd\u4f5c const fs = require ( \"fs\" ) /* \u5f02\u6b65\u64cd\u4f5c */ // \u8bfb\u53d6\u6587\u4ef6 fs . readFile ( \"./demo.txt\" , ( err , data )=>{ if ( err ){ console . log ( err ); } else { console . log ( data . toString ()); // hello } }) // \u5199\u5165\u6587\u4ef6 flag \u53ef\u9009 a\u662fappend fs . writeFile ( \"./demo.txt\" , \"hello\" , { flag : \"a\" }, ( err )=>{ if ( err ){ throw err } }) /* \u540c\u6b65\u64cd\u4f5c */ // \u8bfb\u53d6\u6587\u4ef6 let data = fs . readFileSync ( \"./demo.txt\" ); console . log ( data . toString ()); // \u5199\u5165\u6587\u4ef6 fs . writeFileSync ( \"./demo.txt\" , \"hello\" ) 3\u3001\u81ea\u5b9a\u4e49\u6a21\u5757 export module require\u67e5\u627e\u89c4\u5219\uff1a 1. \u5982\u679c\u6709\u8def\u5f84\u5c31\u53bb\u8def\u5f84\u4e2d\u67e5\u627e 2. \u5982\u679c\u6ca1\u6709\u8def\u5f84\u5c31\u53bbnode_modules\u6587\u4ef6\u5939\u4e2d\u67e5\u627e 3. \u6700\u540e\u53bbnode\u5b89\u88c5\u76ee\u5f55\u4e2d\u67e5\u627e demo.js // \u5bfc\u51fa a\u548c b exports . a = \"hello\" exports . b = \"world\" // \u4e0d\u5bf9\u5916\u5bfc\u51fa let c = \"private\" // \u6279\u91cf\u5bfc\u51fa module . exports = { a : 'hello' , b : 'world' } index.js // \u5982\u679crequire(\"demo\") \u662f\u53bb\u7279\u6b8a\u6587\u4ef6\u5939node_modules \u4e2d\u67e5\u627e const demo = require ( \"./demo\" ) console . log ( demo . a ); // hello \u5bfc\u51fa\u4e00\u4e2a\u7c7b // person.js module . exports = class { constructor ( name ){ this . name = name ; } showName (){ console . log ( this . name ); } } // index.js const Person = require ( \"person\" ) let person = new Person ( \"Tom\" ) person . showName (); // Tom \u6838\u5fc3Http\u6a21\u5757 \u670d\u52a1\u5668\u5bf9\u8c61 http . createSerser () 1\u3001\u5f00\u542f\u670d\u52a1 let http = require ( \"http\" ) http . createServer (( request , response )=>{ response . end ( \"hello\" ) }). listen ( 8080 ); \u8bbf\u95ee http://localhost:8080/ 2\u3001\u7b80\u5355\u7684http\u670d\u52a1\u5668 index.js let http = require ( \"http\" ) let fs = require ( \"fs\" ) http . createServer (( request , response )=>{ console . log ( request . url ); fs . readFile ( `./ ${ request . url } ` , ( err , data )=>{ if ( err ){ response . writeHead ( 404 ) response . end ( \"404 not found\" ) } else { response . end ( data ) } }) }). listen ( 8080 ); demo.html < h1 > demo </ h1 > \u8bbf\u95ee\u5730\u5740\uff1ahttp://localhost:8080/demo.html GET\u8bf7\u6c42\u548cPOST\u8bf7\u6c42 \u8bf7\u6c42\u62a5\u6587 \u5934 \u4fe1\u606f <= 32 K \u4f53 \u6570\u636e < 2 G GET \u4e3b\u8981\u83b7\u53d6\u6570\u636e\uff0c\u6570\u636e\u653e\u5728url\u91cc\u4f20\u8f93 // url?username=Tom&age=23 // url\u6a21\u5757\u5904\u7406 url . parse ( request . url , true ) POST \u6570\u636e\u653e\u5728body // querystring\u6a21\u5757\u5904\u7406 querystring . parse ( data ) \u4ee3\u7801\u5b9e\u4f8b let http = require ( \"http\" ) let fs = require ( \"fs\" ) let url = require ( \"url\" ) let querystring = require ( \"querystring\" ) http . createServer (( request , response ) => { if ( request . method === 'GET' ) { // \u89e3\u6790GET\u53c2\u6570 let { query } = url . parse ( request . url , true ); // \u8fd4\u56dejson response . end ( JSON . stringify ( query )) } else if ( request . method === 'POST' ) { let result = [] // \u63a5\u6536\u6570\u636e request . on ( 'data' , buffer => { result . push ( buffer ) }) // \u5c06\u63a5\u6536\u5230\u7684\u6570\u636e\u8fd4\u56de request . on ( 'end' , () => { let data = Buffer . concat ( result ). toString () // \u89e3\u6790\u67e5\u8be2\u53c2\u6570 response . end ( JSON . stringify ( querystring . parse ( data ))) }) } else { response . end ( 'not allow' ) } }). listen ( 8080 ); \u63d0\u4ea4\u8868\u5355\u4ee3\u7801 demo.html < form action = \"http://localhost:8080/\" method = \"POST\" > < input type = \"text\" name = \"username\" > < input type = \"submit\" > </ form > \u6848\u4f8b: \u767b\u5f55\u6ce8\u518c\u63a5\u53e3\u8bbe\u8ba1 \u63a5\u53e3API\uff1a\u4e0d\u540c\u529f\u80fd\u5c42\u4e4b\u95f4\u7684\u901a\u4fe1\u89c4\u5219 \u8bf7\u6c42\u65b9\u5f0f \u8fd4\u56de\u503c \u63a5\u53e3\u540d \u53c2\u6570 \u9879\u76ee\u7ed3\u6784 . \u251c\u2500\u2500 index . js \u2514\u2500\u2500 template \u251c\u2500\u2500 jquery . min . js \u251c\u2500\u2500 admin . html \u2514\u2500\u2500 login . html index.js const http = require ( \"http\" ) const fs = require ( \"fs\" ) const url = require ( \"url\" ) const querystring = require ( \"querystring\" ) // \u7528\u6237\u5217\u8868 let users = { admin : '123456' } http . createServer (( request , response ) => { // \u5148\u5b9a\u4e49\u597d\u5904\u7406\u51fd\u6570 function handleLogin () { let { username , password } = post let msg let code = 0 if ( ! users [ username ]) { msg = \"\u7528\u6237\u540d\u4e0d\u5b58\u5728\" code = - 1 } else if ( users [ username ] !== password ) { code = - 1 msg = \"\u5bc6\u7801\u4e0d\u6b63\u786e\" } else { msg = \"\u767b\u5f55\u6210\u529f\" } response . end ( JSON . stringify ({ code , msg })) } function handleRegister () { let msg = '' let code = 0 let { username , password } = post if ( users [ username ]) { msg = \"\u7528\u6237\u5df2\u5b58\u5728\" code = - 1 } else { users [ username ] = password code = 0 msg = \"\u6ce8\u518c\u6210\u529f\" } response . end ( JSON . stringify ({ code , msg })) } function sendFile () { fs . readFile ( `./template/ ${ path } ` , ( err , data ) => { if ( err ) { response . end ( \"404\" ) } else { response . end ( data ) } }) } // \u8def\u7531\u6620\u5c04 const routes = { '/login' : handleLogin , '/register' : handleRegister } // \u83b7\u53d6\u6570\u636e let path , get , post ; if ( request . method === 'GET' ) { // \u89e3\u6790GET\u53c2\u6570 let { pathname , query } = url . parse ( request . url , true ); path = pathname get = query complete () } else if ( request . method === 'POST' ) { let result = [] // \u63a5\u6536\u6570\u636e request . on ( 'data' , buffer => { result . push ( buffer ) }) // \u5c06\u63a5\u6536\u5230\u7684\u6570\u636e\u8fd4\u56de request . on ( 'end' , () => { let data = Buffer . concat ( result ). toString () path = request . url post = querystring . parse ( data ) complete () }) } function complete () { console . log ( path ); if ( routes [ path ]) { response . writeHead ( 200 , { 'Content-Type' : 'application/json; charset=utf-8' }) routes [ path ]() } else { response . writeHead ( 200 , { 'Content-Type' : 'text/html; charset=UTF-8' }) sendFile () } } }). listen ( 8080 ); template/login.html < input type = \"text\" name = \"username\" id = \"username\" > < br /> < input type = \"text\" name = \"password\" id = \"password\" > < br /> < input type = \"submit\" value = \"\u6ce8\u518c\" id = \"register\" > < input type = \"submit\" value = \"\u767b\u5f55\" id = \"login\" > < script src = \"./jquery.min.js\" ></ script > < script > function getFormData () { return { username : $ ( \"#username\" ). val (), password : $ ( \"#password\" ). val () } } $ ( \"#login\" ). click ( function () { $ . post ( \"/login\" , getFormData (), function ( data ) { if ( data . code != 0 ) { alert ( data . msg ) } else { alert ( data . msg ) window . location . href = \"admin.html\" } }) }) $ ( \"#register\" ). click ( function () { $ . post ( \"/register\" , getFormData (), function ( data ) { if ( data . code != 0 ) { alert ( data . msg ) } else { alert ( data . msg ) } } ) }) </ script > template/admin.html <h1> admin </h1> \u603b\u7ed3\u56de\u987e 1\u3001Node\u4f5c\u7528 webAPI \u4e2d\u95f4\u5c42 \u524d\u7aef\u5de5\u7a0b\u5316 webpack 2\u3001\u4f18\u52bf \u6027\u80fd\u9ad8 \u4fbf\u4e8e\u524d\u7aef\u5165\u624b 3\u3001npm \u7ba1\u7406\u4f18\u52bf npm i jquery npm un jquery package.json 4\u3001\u4e09\u5927\u6a21\u5757 \u5168\u5c40\u6a21\u5757 \u7cfb\u7edf\u6a21\u5757 require \u81ea\u5b9a\u4e49\u6a21\u5757 module.exports 5\u3001http \u6570\u636e\u901a\u4fe1 get url\u6a21\u5757 post request.on('data', buffer=>{ }) request.on('end', ()=>{ Buffer.concat(arr).toString() }) querystring\u6a21\u5757 6\u3001\u8bbe\u8ba1API \u65b9\u5f0f GET, POST \u540d\u79f0 /login \u53c2\u6570 username, password \u8fd4\u56de\u503c { code: 0, msg: '' } 7\u3001\u6df1\u5165 express/koa2 MongoDB","title":"Node\u57fa\u7840\u5b66\u4e60\u7b14\u8bb0"},{"location":"JavaScript/Node\u57fa\u7840\u5b66\u4e60\u7b14\u8bb0/#node","text":"","title":"Node\u57fa\u7840\u5b66\u4e60\u7b14\u8bb0"},{"location":"JavaScript/Node\u57fa\u7840\u5b66\u4e60\u7b14\u8bb0/#node_1","text":"1\u3001Node\u7684\u4f5c\u7528\u548c\u5e94\u7528 1. \u8131\u79bb\u6d4f\u89c8\u5668\u8fd0\u884cJS 2. \u540e\u7aefAPI\u7f16\u5199 3. webpack gulp npm\u7b49 2\u3001\u4e2d\u95f4\u5c42\uff1a\u670d\u52a1\u5668\u4e2d\u8d1f\u8d23IO\u8bfb\u5199\u7684\u4e2d\u95f4\u5c42\u670d\u52a1\u5668 \u6027\u80fd \u5f02\u6b65IO \u5904\u7406\u6570\u636e \u5b89\u5168\u6027 3\u3001\u5b66\u4e60\u76ee\u6807 \u767b\u5f55\u3001\u6ce8\u518c 4\u3001\u524d\u7f6e\u77e5\u8bc6 HTML CSS JS 5\u3001Node\u4f18\u52bf \u4fbf\u4e8e\u524d\u7aef\u5f00\u53d1\u5165\u95e8 \u6027\u80fd\u9ad8 \u5229\u4e8e\u524d\u7aef\u4ee3\u7801\u6574\u5408 6\u3001\u7f3a\u70b9 \u5e74\u8f7b","title":"Node\u7b80\u4ecb"},{"location":"JavaScript/Node\u57fa\u7840\u5b66\u4e60\u7b14\u8bb0/#_1","text":"# \u67e5\u770b\u7248\u672c $ node -v # \u8fdb\u5165\u4ea4\u4e92\u547d\u4ee4\u884c $ node 1\u3001Hello world demo.js console . log ( \"hello world!\" ); \u8fd0\u884c $ node demo hello world! $ node demo.js hello world!","title":"\u73af\u5883\u642d\u5efa"},{"location":"JavaScript/Node\u57fa\u7840\u5b66\u4e60\u7b14\u8bb0/#npm","text":"\u5e38\u7528\u547d\u4ee4 # \u521d\u59cb\u5316\u9879\u76ee\uff0c\u751f\u6210package.json $ npm init # \u5b89\u88c5package.json\u4e2d\u6240\u6709\u4f9d\u8d56 $ npm install # \u5b89\u88c5 \u7b80\u5199 i $ npm install jquery # \u5220\u9664 \u7b80\u5199 un $ npm uninstall jquery # \u66f4\u65b0 $ npm update jquery # \u5168\u5c40\u5b89\u88c5cnpm \u6307\u5b9a\u6dd8\u5b9d\u6e90 $ npm install cnpm -g --registry = https://registry.npm.taobao.org","title":"npm\u5305\u7ba1\u7406"},{"location":"JavaScript/Node\u57fa\u7840\u5b66\u4e60\u7b14\u8bb0/#node_2","text":"\u4e09\u79cd\u6a21\u5757\uff1a 1. \u5168\u5c40\u6a21\u5757 2. \u7cfb\u7edf\u6a21\u5757 3. \u81ea\u5b9a\u4e49\u6a21\u5757 1\u3001\u5168\u5c40\u6a21\u5757 \u5168\u5c40\u4f7f\u7528\uff0c\u4e0d\u9700\u8981\u5f15\u7528 process . env \u73af\u5883\u53d8\u91cf process . argv \u6267\u884c\u53c2\u6570 \u793a\u4f8b\uff1a\u8bfb\u53d6\u73af\u5883\u53d8\u91cf console . log ( process . env ); if ( process . env . dev ){ console . log ( \"\u5f00\u53d1\u73af\u5883\" ); } else { console . log ( \"\u751f\u4ea7\u73af\u5883\" ); } // \u751f\u4ea7\u73af\u5883 \u793a\u4f8b\uff1a\u7b80\u6613\u8ba1\u7b97\u5668\u547d\u4ee4\u884c\u63a5\u6536\u53c2\u6570 let num1 = parseInt ( process . argv [ 2 ]) let num2 = parseInt ( process . argv [ 3 ]) console . log ( num1 + num2 ); \u6267\u884c $ node demo 1 1 2 2\u3001\u7cfb\u7edf\u6a21\u5757 \u9700\u8981require\u5f15\u5165\uff0c\u4e0d\u9700\u8981\u5355\u72ec\u4e0b\u8f7d path: \u7528\u4e8e\u5904\u7406\u6587\u4ef6\u8def\u5f84\u548c\u76ee\u5f55\u8def\u5f84\u7684\u5b9e\u7528\u5de5\u5177 \u793a\u4f8b const path = require ( \"path\" ) let filename = \"/root/demo/index.jpg\" console . log ( path . dirname ( filename )); // /root/demo console . log ( path . basename ( filename )); // index.jpg console . log ( path . extname ( filename )); // .jpg /* \u8def\u5f84\u62fc\u63a5 */ console . log ( path . resolve ( __dirname , \"index.js\" )); // /Users/demo/Desktop/index.js fs \u7528\u4e8e\u6587\u4ef6\u8bfb\u5199\u64cd\u4f5c const fs = require ( \"fs\" ) /* \u5f02\u6b65\u64cd\u4f5c */ // \u8bfb\u53d6\u6587\u4ef6 fs . readFile ( \"./demo.txt\" , ( err , data )=>{ if ( err ){ console . log ( err ); } else { console . log ( data . toString ()); // hello } }) // \u5199\u5165\u6587\u4ef6 flag \u53ef\u9009 a\u662fappend fs . writeFile ( \"./demo.txt\" , \"hello\" , { flag : \"a\" }, ( err )=>{ if ( err ){ throw err } }) /* \u540c\u6b65\u64cd\u4f5c */ // \u8bfb\u53d6\u6587\u4ef6 let data = fs . readFileSync ( \"./demo.txt\" ); console . log ( data . toString ()); // \u5199\u5165\u6587\u4ef6 fs . writeFileSync ( \"./demo.txt\" , \"hello\" ) 3\u3001\u81ea\u5b9a\u4e49\u6a21\u5757 export module require\u67e5\u627e\u89c4\u5219\uff1a 1. \u5982\u679c\u6709\u8def\u5f84\u5c31\u53bb\u8def\u5f84\u4e2d\u67e5\u627e 2. \u5982\u679c\u6ca1\u6709\u8def\u5f84\u5c31\u53bbnode_modules\u6587\u4ef6\u5939\u4e2d\u67e5\u627e 3. \u6700\u540e\u53bbnode\u5b89\u88c5\u76ee\u5f55\u4e2d\u67e5\u627e demo.js // \u5bfc\u51fa a\u548c b exports . a = \"hello\" exports . b = \"world\" // \u4e0d\u5bf9\u5916\u5bfc\u51fa let c = \"private\" // \u6279\u91cf\u5bfc\u51fa module . exports = { a : 'hello' , b : 'world' } index.js // \u5982\u679crequire(\"demo\") \u662f\u53bb\u7279\u6b8a\u6587\u4ef6\u5939node_modules \u4e2d\u67e5\u627e const demo = require ( \"./demo\" ) console . log ( demo . a ); // hello \u5bfc\u51fa\u4e00\u4e2a\u7c7b // person.js module . exports = class { constructor ( name ){ this . name = name ; } showName (){ console . log ( this . name ); } } // index.js const Person = require ( \"person\" ) let person = new Person ( \"Tom\" ) person . showName (); // Tom","title":"Node\u6a21\u5757"},{"location":"JavaScript/Node\u57fa\u7840\u5b66\u4e60\u7b14\u8bb0/#http","text":"\u670d\u52a1\u5668\u5bf9\u8c61 http . createSerser () 1\u3001\u5f00\u542f\u670d\u52a1 let http = require ( \"http\" ) http . createServer (( request , response )=>{ response . end ( \"hello\" ) }). listen ( 8080 ); \u8bbf\u95ee http://localhost:8080/ 2\u3001\u7b80\u5355\u7684http\u670d\u52a1\u5668 index.js let http = require ( \"http\" ) let fs = require ( \"fs\" ) http . createServer (( request , response )=>{ console . log ( request . url ); fs . readFile ( `./ ${ request . url } ` , ( err , data )=>{ if ( err ){ response . writeHead ( 404 ) response . end ( \"404 not found\" ) } else { response . end ( data ) } }) }). listen ( 8080 ); demo.html < h1 > demo </ h1 > \u8bbf\u95ee\u5730\u5740\uff1ahttp://localhost:8080/demo.html","title":"\u6838\u5fc3Http\u6a21\u5757"},{"location":"JavaScript/Node\u57fa\u7840\u5b66\u4e60\u7b14\u8bb0/#getpost","text":"\u8bf7\u6c42\u62a5\u6587 \u5934 \u4fe1\u606f <= 32 K \u4f53 \u6570\u636e < 2 G GET \u4e3b\u8981\u83b7\u53d6\u6570\u636e\uff0c\u6570\u636e\u653e\u5728url\u91cc\u4f20\u8f93 // url?username=Tom&age=23 // url\u6a21\u5757\u5904\u7406 url . parse ( request . url , true ) POST \u6570\u636e\u653e\u5728body // querystring\u6a21\u5757\u5904\u7406 querystring . parse ( data ) \u4ee3\u7801\u5b9e\u4f8b let http = require ( \"http\" ) let fs = require ( \"fs\" ) let url = require ( \"url\" ) let querystring = require ( \"querystring\" ) http . createServer (( request , response ) => { if ( request . method === 'GET' ) { // \u89e3\u6790GET\u53c2\u6570 let { query } = url . parse ( request . url , true ); // \u8fd4\u56dejson response . end ( JSON . stringify ( query )) } else if ( request . method === 'POST' ) { let result = [] // \u63a5\u6536\u6570\u636e request . on ( 'data' , buffer => { result . push ( buffer ) }) // \u5c06\u63a5\u6536\u5230\u7684\u6570\u636e\u8fd4\u56de request . on ( 'end' , () => { let data = Buffer . concat ( result ). toString () // \u89e3\u6790\u67e5\u8be2\u53c2\u6570 response . end ( JSON . stringify ( querystring . parse ( data ))) }) } else { response . end ( 'not allow' ) } }). listen ( 8080 ); \u63d0\u4ea4\u8868\u5355\u4ee3\u7801 demo.html < form action = \"http://localhost:8080/\" method = \"POST\" > < input type = \"text\" name = \"username\" > < input type = \"submit\" > </ form >","title":"GET\u8bf7\u6c42\u548cPOST\u8bf7\u6c42"},{"location":"JavaScript/Node\u57fa\u7840\u5b66\u4e60\u7b14\u8bb0/#_2","text":"\u63a5\u53e3API\uff1a\u4e0d\u540c\u529f\u80fd\u5c42\u4e4b\u95f4\u7684\u901a\u4fe1\u89c4\u5219 \u8bf7\u6c42\u65b9\u5f0f \u8fd4\u56de\u503c \u63a5\u53e3\u540d \u53c2\u6570 \u9879\u76ee\u7ed3\u6784 . \u251c\u2500\u2500 index . js \u2514\u2500\u2500 template \u251c\u2500\u2500 jquery . min . js \u251c\u2500\u2500 admin . html \u2514\u2500\u2500 login . html index.js const http = require ( \"http\" ) const fs = require ( \"fs\" ) const url = require ( \"url\" ) const querystring = require ( \"querystring\" ) // \u7528\u6237\u5217\u8868 let users = { admin : '123456' } http . createServer (( request , response ) => { // \u5148\u5b9a\u4e49\u597d\u5904\u7406\u51fd\u6570 function handleLogin () { let { username , password } = post let msg let code = 0 if ( ! users [ username ]) { msg = \"\u7528\u6237\u540d\u4e0d\u5b58\u5728\" code = - 1 } else if ( users [ username ] !== password ) { code = - 1 msg = \"\u5bc6\u7801\u4e0d\u6b63\u786e\" } else { msg = \"\u767b\u5f55\u6210\u529f\" } response . end ( JSON . stringify ({ code , msg })) } function handleRegister () { let msg = '' let code = 0 let { username , password } = post if ( users [ username ]) { msg = \"\u7528\u6237\u5df2\u5b58\u5728\" code = - 1 } else { users [ username ] = password code = 0 msg = \"\u6ce8\u518c\u6210\u529f\" } response . end ( JSON . stringify ({ code , msg })) } function sendFile () { fs . readFile ( `./template/ ${ path } ` , ( err , data ) => { if ( err ) { response . end ( \"404\" ) } else { response . end ( data ) } }) } // \u8def\u7531\u6620\u5c04 const routes = { '/login' : handleLogin , '/register' : handleRegister } // \u83b7\u53d6\u6570\u636e let path , get , post ; if ( request . method === 'GET' ) { // \u89e3\u6790GET\u53c2\u6570 let { pathname , query } = url . parse ( request . url , true ); path = pathname get = query complete () } else if ( request . method === 'POST' ) { let result = [] // \u63a5\u6536\u6570\u636e request . on ( 'data' , buffer => { result . push ( buffer ) }) // \u5c06\u63a5\u6536\u5230\u7684\u6570\u636e\u8fd4\u56de request . on ( 'end' , () => { let data = Buffer . concat ( result ). toString () path = request . url post = querystring . parse ( data ) complete () }) } function complete () { console . log ( path ); if ( routes [ path ]) { response . writeHead ( 200 , { 'Content-Type' : 'application/json; charset=utf-8' }) routes [ path ]() } else { response . writeHead ( 200 , { 'Content-Type' : 'text/html; charset=UTF-8' }) sendFile () } } }). listen ( 8080 ); template/login.html < input type = \"text\" name = \"username\" id = \"username\" > < br /> < input type = \"text\" name = \"password\" id = \"password\" > < br /> < input type = \"submit\" value = \"\u6ce8\u518c\" id = \"register\" > < input type = \"submit\" value = \"\u767b\u5f55\" id = \"login\" > < script src = \"./jquery.min.js\" ></ script > < script > function getFormData () { return { username : $ ( \"#username\" ). val (), password : $ ( \"#password\" ). val () } } $ ( \"#login\" ). click ( function () { $ . post ( \"/login\" , getFormData (), function ( data ) { if ( data . code != 0 ) { alert ( data . msg ) } else { alert ( data . msg ) window . location . href = \"admin.html\" } }) }) $ ( \"#register\" ). click ( function () { $ . post ( \"/register\" , getFormData (), function ( data ) { if ( data . code != 0 ) { alert ( data . msg ) } else { alert ( data . msg ) } } ) }) </ script > template/admin.html <h1> admin </h1>","title":"\u6848\u4f8b: \u767b\u5f55\u6ce8\u518c\u63a5\u53e3\u8bbe\u8ba1"},{"location":"JavaScript/Node\u57fa\u7840\u5b66\u4e60\u7b14\u8bb0/#_3","text":"1\u3001Node\u4f5c\u7528 webAPI \u4e2d\u95f4\u5c42 \u524d\u7aef\u5de5\u7a0b\u5316 webpack 2\u3001\u4f18\u52bf \u6027\u80fd\u9ad8 \u4fbf\u4e8e\u524d\u7aef\u5165\u624b 3\u3001npm \u7ba1\u7406\u4f18\u52bf npm i jquery npm un jquery package.json 4\u3001\u4e09\u5927\u6a21\u5757 \u5168\u5c40\u6a21\u5757 \u7cfb\u7edf\u6a21\u5757 require \u81ea\u5b9a\u4e49\u6a21\u5757 module.exports 5\u3001http \u6570\u636e\u901a\u4fe1 get url\u6a21\u5757 post request.on('data', buffer=>{ }) request.on('end', ()=>{ Buffer.concat(arr).toString() }) querystring\u6a21\u5757 6\u3001\u8bbe\u8ba1API \u65b9\u5f0f GET, POST \u540d\u79f0 /login \u53c2\u6570 username, password \u8fd4\u56de\u503c { code: 0, msg: '' } 7\u3001\u6df1\u5165 express/koa2 MongoDB","title":"\u603b\u7ed3\u56de\u987e"},{"location":"JavaScript/Promise/","text":"Promise\u7528\u9014 1\u3001\u5f02\u6b65\u8ba1\u7b97 2\u3001\u5f02\u6b65\u64cd\u4f5c\u961f\u5217\u5316 3\u3001\u5bf9\u8c61\u4e4b\u95f4\u4f20\u9012\u548c\u64cd\u4f5cPromise \u5f02\u6b65\u4ea7\u751f\u7684\u539f\u56e0 1\u3001JavaScript\u4e3a\u68c0\u67e5\u8868\u5355\u800c\u751f 2\u3001\u9996\u8981\u76ee\u6807\u6570\u662f\u64cd\u4f5cDOM 3\u3001JavaScript\u64cd\u4f5c\u5927\u591a\u662f\u5f02\u6b65\u7684 \u5f02\u6b65\u64cd\u4f5c\u5e38\u89c1\u8bed\u6cd5 1\u3001\u4e8b\u4ef6\u4fa6\u542c\u4e0e\u54cd\u5e94 // 1\u3001\u539f\u751f\u4e8b\u4ef6\u7ed1\u5b9a document . getElementById ( \"start\" ). addEventListener ( 'click' , start , false ); function start (){ // \u54cd\u5e94\u4e8b\u4ef6\u5904\u7406\u64cd\u4f5c } // 2\u3001jQuery\u4e8b\u4ef6\u7ed1\u5b9a $ ( '#start' ). on ( 'click' , start ); 2\u3001\u56de\u8c03 // 1\u3001ajax\u8bf7\u6c42 $ . ajax ( 'http://www.baidu.com' , { success : function ( res ){ // \u56de\u8c03\u51fd\u6570 } }) // 2\u3001\u9875\u9762\u52a0\u8f7d\u5b8c\u6210\u4e4b\u540e $ ( function (){ // \u56de\u8c03\u51fd\u6570 }); \u6d4f\u89c8\u5668\u4e2d\u7684JavaScript 1\u3001\u5f02\u6b65\u64cd\u4f5c\u4ee5\u4e8b\u4ef6\u4e3a\u4e3b 2\u3001\u56de\u8c03\u4e3b\u8981\u51fa\u73b0\u5728Ajax\u548cFile API \u5f02\u6b65\u56de\u8c03\u95ee\u9898 1\u3001\u5d4c\u5957\u5c42\u6b21\u8f83\u6df1\uff0c\u56de\u8c03\u5730\u72f1 2\u3001\u65e0\u6cd5\u5904\u7406\u5f02\u5e38\uff0c\u4e0d\u80fd\u6b63\u5e38return\u548cthrow 3\u3001\u65e0\u6cd5\u6b63\u5e38\u68c0\u7d22\u5806\u6808\u4fe1\u606f, \u95ed\u5305\u53d8\u91cf\u53ef\u80fd\u88ab\u4fee\u6539 4\u3001\u591a\u4e2a\u56de\u8c03\u4e4b\u95f4\u96be\u4ee5\u5efa\u7acb\u8054\u7cfb Promise Promise\u662f\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u548c\u539f\u5148\u8981\u8fdb\u884c\u7684\u64cd\u4f5c\u65e0\u5173\u7cfb \u901a\u8fc7\u5f15\u5165\u4e00\u4e2a\u56de\u8c03\uff0c\u907f\u514d\u66f4\u591a\u7684\u56de\u8c03 new Promise ( // \u6267\u884c\u5668 executor function ( resolve , reject ){ // \u8017\u65f6\u64cd\u4f5c resolve (); // \u6570\u636e\u5904\u7406\u5b8c\u6210 reject (); // \u6570\u636e\u5904\u7406\u51fa\u9519 }). then ( function A (){ // \u6210\u529f\uff0c\u4e0b\u4e00\u6b65 }, function B (){ // \u5931\u8d25\uff0c\u505a\u76f8\u5e94\u5904\u7406 }) Promise3\u4e2a\u72b6\u6001 1\u3001pendding \u5f85\u5b9a\uff0c\u521d\u59cb\u72b6\u6001 2\u3001fulfilled \u5b9e\u73b0\uff0c\u64cd\u4f5c\u6210\u529f 3\u3001rejected \u88ab\u5426\u51b3\uff0c\u64cd\u4f5c\u5931\u8d25 Promise\u72b6\u6001\u53d1\u751f\u6539\u53d8\uff0c\u5c31\u4f1a\u89e6\u53d1.then()\u91cc\u7684\u54cd\u5e94\u51fd\u6570 Promise\u72b6\u6001\u53ea\u4f1a\u6539\u53d8\u4e00\u6b21 Promise\u5b9e\u4f8b\u4e00\u7ecf\u521b\u5efa\uff0c\u6267\u884c\u5668\u7acb\u5373\u6267\u884c \u4ee3\u7801\u5b9e\u4f8b // \u5b9a\u65f6\u6267\u884c console . log ( \"hi\" ) new Promise ( resolve => { setTimeout (()=>{ resolve ( \"hello\" ); }, 1000 ); }). then ( value =>{ console . log ( value + \" world\" ); }) /* hi hello world */ // \u4e24\u6b65\u6267\u884c console . log ( \"hi\" ) new Promise ( resolve => { setTimeout (()=>{ resolve ( \"hello\" ); }, 1000 ); }). then ( value =>{ console . log ( value ); return new Promise ( resolve =>{ setTimeout (()=>{ resolve ( \"world\" ); }, 1000 ); }) }). then ( value =>{ console . log ( value + \" world\" ); }) /* hi hello world world */ // \u961f\u5217 console . log ( \"hi\" ) let promise = new Promise ( resolve =>{ setTimeout (()=>{ console . log ( 'promise' ) resolve ( 'hello world' ); }, 1000 ) }); setTimeout (()=>{ promise . then ( value =>{ console . log ( value ) }) }, 1000 ); /* hi promise hello world */ then() 1\u3001.then() \u63a5\u53d7\u4e24\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u5206\u522b\u4ee3\u8868fulfilled\u548crejected 2\u3001.then() \u8fd4\u56de\u65b0\u7684Promise\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u94fe\u5f0f\u8c03\u7528 3\u3001\u5f53\u524d\u9762\u7684Promise\u72b6\u6001\u6539\u53d8\u65f6\uff0c.then()\u6839\u636e\u5176\u6700\u7ec8\u72b6\u6001\uff0c\u9009\u62e9\u7279\u5b9a\u7684\u72b6\u6001\u54cd\u5e94\u51fd\u6570\u6267\u884c 4\u3001\u72b6\u6001\u54cd\u5e94\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u65b0\u7684Promise\uff0c\u6216\u5176\u4ed6\u503c 5\u3001\u5982\u679c\u8fd4\u56de\u65b0\u7684Promise\uff0c\u90a3\u4e48\u4e0b\u4e00\u7ea7.then()\u4f1a\u5728\u65b0\u7684Promise\u72b6\u6001\u6539\u53d8\u4e4b\u540e\u6267\u884c 6\u3001\u5982\u679c\u8fd4\u56de\u5176\u4ed6\u4efb\u4f55\u503c\uff0c\u5219\u4f1a\u7acb\u523b\u6267\u884c\u4e0b\u4e00\u7ea7.then()","title":"Promise"},{"location":"JavaScript/Promise/#promise","text":"1\u3001\u5f02\u6b65\u8ba1\u7b97 2\u3001\u5f02\u6b65\u64cd\u4f5c\u961f\u5217\u5316 3\u3001\u5bf9\u8c61\u4e4b\u95f4\u4f20\u9012\u548c\u64cd\u4f5cPromise","title":"Promise\u7528\u9014"},{"location":"JavaScript/Promise/#_1","text":"1\u3001JavaScript\u4e3a\u68c0\u67e5\u8868\u5355\u800c\u751f 2\u3001\u9996\u8981\u76ee\u6807\u6570\u662f\u64cd\u4f5cDOM 3\u3001JavaScript\u64cd\u4f5c\u5927\u591a\u662f\u5f02\u6b65\u7684","title":"\u5f02\u6b65\u4ea7\u751f\u7684\u539f\u56e0"},{"location":"JavaScript/Promise/#_2","text":"1\u3001\u4e8b\u4ef6\u4fa6\u542c\u4e0e\u54cd\u5e94 // 1\u3001\u539f\u751f\u4e8b\u4ef6\u7ed1\u5b9a document . getElementById ( \"start\" ). addEventListener ( 'click' , start , false ); function start (){ // \u54cd\u5e94\u4e8b\u4ef6\u5904\u7406\u64cd\u4f5c } // 2\u3001jQuery\u4e8b\u4ef6\u7ed1\u5b9a $ ( '#start' ). on ( 'click' , start ); 2\u3001\u56de\u8c03 // 1\u3001ajax\u8bf7\u6c42 $ . ajax ( 'http://www.baidu.com' , { success : function ( res ){ // \u56de\u8c03\u51fd\u6570 } }) // 2\u3001\u9875\u9762\u52a0\u8f7d\u5b8c\u6210\u4e4b\u540e $ ( function (){ // \u56de\u8c03\u51fd\u6570 });","title":"\u5f02\u6b65\u64cd\u4f5c\u5e38\u89c1\u8bed\u6cd5"},{"location":"JavaScript/Promise/#javascript","text":"1\u3001\u5f02\u6b65\u64cd\u4f5c\u4ee5\u4e8b\u4ef6\u4e3a\u4e3b 2\u3001\u56de\u8c03\u4e3b\u8981\u51fa\u73b0\u5728Ajax\u548cFile API","title":"\u6d4f\u89c8\u5668\u4e2d\u7684JavaScript"},{"location":"JavaScript/Promise/#_3","text":"1\u3001\u5d4c\u5957\u5c42\u6b21\u8f83\u6df1\uff0c\u56de\u8c03\u5730\u72f1 2\u3001\u65e0\u6cd5\u5904\u7406\u5f02\u5e38\uff0c\u4e0d\u80fd\u6b63\u5e38return\u548cthrow 3\u3001\u65e0\u6cd5\u6b63\u5e38\u68c0\u7d22\u5806\u6808\u4fe1\u606f, \u95ed\u5305\u53d8\u91cf\u53ef\u80fd\u88ab\u4fee\u6539 4\u3001\u591a\u4e2a\u56de\u8c03\u4e4b\u95f4\u96be\u4ee5\u5efa\u7acb\u8054\u7cfb","title":"\u5f02\u6b65\u56de\u8c03\u95ee\u9898"},{"location":"JavaScript/Promise/#promise_1","text":"Promise\u662f\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u548c\u539f\u5148\u8981\u8fdb\u884c\u7684\u64cd\u4f5c\u65e0\u5173\u7cfb \u901a\u8fc7\u5f15\u5165\u4e00\u4e2a\u56de\u8c03\uff0c\u907f\u514d\u66f4\u591a\u7684\u56de\u8c03 new Promise ( // \u6267\u884c\u5668 executor function ( resolve , reject ){ // \u8017\u65f6\u64cd\u4f5c resolve (); // \u6570\u636e\u5904\u7406\u5b8c\u6210 reject (); // \u6570\u636e\u5904\u7406\u51fa\u9519 }). then ( function A (){ // \u6210\u529f\uff0c\u4e0b\u4e00\u6b65 }, function B (){ // \u5931\u8d25\uff0c\u505a\u76f8\u5e94\u5904\u7406 })","title":"Promise"},{"location":"JavaScript/Promise/#promise3","text":"1\u3001pendding \u5f85\u5b9a\uff0c\u521d\u59cb\u72b6\u6001 2\u3001fulfilled \u5b9e\u73b0\uff0c\u64cd\u4f5c\u6210\u529f 3\u3001rejected \u88ab\u5426\u51b3\uff0c\u64cd\u4f5c\u5931\u8d25 Promise\u72b6\u6001\u53d1\u751f\u6539\u53d8\uff0c\u5c31\u4f1a\u89e6\u53d1.then()\u91cc\u7684\u54cd\u5e94\u51fd\u6570 Promise\u72b6\u6001\u53ea\u4f1a\u6539\u53d8\u4e00\u6b21 Promise\u5b9e\u4f8b\u4e00\u7ecf\u521b\u5efa\uff0c\u6267\u884c\u5668\u7acb\u5373\u6267\u884c","title":"Promise3\u4e2a\u72b6\u6001"},{"location":"JavaScript/Promise/#_4","text":"// \u5b9a\u65f6\u6267\u884c console . log ( \"hi\" ) new Promise ( resolve => { setTimeout (()=>{ resolve ( \"hello\" ); }, 1000 ); }). then ( value =>{ console . log ( value + \" world\" ); }) /* hi hello world */ // \u4e24\u6b65\u6267\u884c console . log ( \"hi\" ) new Promise ( resolve => { setTimeout (()=>{ resolve ( \"hello\" ); }, 1000 ); }). then ( value =>{ console . log ( value ); return new Promise ( resolve =>{ setTimeout (()=>{ resolve ( \"world\" ); }, 1000 ); }) }). then ( value =>{ console . log ( value + \" world\" ); }) /* hi hello world world */ // \u961f\u5217 console . log ( \"hi\" ) let promise = new Promise ( resolve =>{ setTimeout (()=>{ console . log ( 'promise' ) resolve ( 'hello world' ); }, 1000 ) }); setTimeout (()=>{ promise . then ( value =>{ console . log ( value ) }) }, 1000 ); /* hi promise hello world */","title":"\u4ee3\u7801\u5b9e\u4f8b"},{"location":"JavaScript/Promise/#then","text":"1\u3001.then() \u63a5\u53d7\u4e24\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u5206\u522b\u4ee3\u8868fulfilled\u548crejected 2\u3001.then() \u8fd4\u56de\u65b0\u7684Promise\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u94fe\u5f0f\u8c03\u7528 3\u3001\u5f53\u524d\u9762\u7684Promise\u72b6\u6001\u6539\u53d8\u65f6\uff0c.then()\u6839\u636e\u5176\u6700\u7ec8\u72b6\u6001\uff0c\u9009\u62e9\u7279\u5b9a\u7684\u72b6\u6001\u54cd\u5e94\u51fd\u6570\u6267\u884c 4\u3001\u72b6\u6001\u54cd\u5e94\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u65b0\u7684Promise\uff0c\u6216\u5176\u4ed6\u503c 5\u3001\u5982\u679c\u8fd4\u56de\u65b0\u7684Promise\uff0c\u90a3\u4e48\u4e0b\u4e00\u7ea7.then()\u4f1a\u5728\u65b0\u7684Promise\u72b6\u6001\u6539\u53d8\u4e4b\u540e\u6267\u884c 6\u3001\u5982\u679c\u8fd4\u56de\u5176\u4ed6\u4efb\u4f55\u503c\uff0c\u5219\u4f1a\u7acb\u523b\u6267\u884c\u4e0b\u4e00\u7ea7.then()","title":"then()"},{"location":"JavaScript/React+Nodejs+MySQL\u5168\u6808\u5f00\u53d1\u5165\u95e8/","text":"React+Nodejs+MySQL\u5168\u6808\u5f00\u53d1\u5165\u95e8 \u5185\u5bb9\u4ecb\u7ecd 1\u3001\u5f00\u53d1\u73af\u5883\u51c6\u5907 1. \u5b89\u88c5Nodejs 2. \u7b2c\u4e00\u4e2aNodejs\u7a0b\u5e8f 3. Nodejs\u548cnpm 4. nodemon\u5b9e\u73b0\u70ed\u542f\u52a8 5. \u4f7f\u7528nrm\u89e3\u51b3npm\u6e90\u7684 6. \u4f7f\u7528nvm\u7ba1\u7406Nodejs\u7248\u672c 2\u3001Web\u5e94\u7528\u57fa\u7840 1. Web\u5e94\u7528\u4ee5\u53caExpress 2. \u4f7f\u7528Express\u642d\u5efa\u7b2c\u4e00\u4e2aWeb\u670d\u52a1 3. \u8def\u7531\uff08Routing\uff09\u7684\u4ecb\u7ecd\u548c\u4f7f\u7528 4. \u4e2d\u95f4\u4ef6\uff08Middleware\uff09\u4ecb\u7ecd\u548c\u4f7f\u7528 5. \u81ea\u5b9a\u4e49\u7f16\u5199\u4e2d\u95f4\u4ef6 6. \u5f02\u5e38\u5904\u7406 7. MySQL\u7684\u5b89\u88c5\u548c\u57fa\u672c\u547d\u4ee4\u4f7f\u7528 8. ORM\u6846\u67b6Sequelize\u4ecb\u7ecd\u548c\u4f7f\u7528 3\u3001\u9879\u76ee\u5b9e\u6218TODO 4\u3001\u68b3\u7406\u603b\u7ed3 1\u3001\u5f00\u53d1\u73af\u5883\u51c6\u5907 1\u3001\u5b89\u88c5Nodejs 1. \u76f4\u63a5\u4e0b\u8f7d\u5b98\u65b9\u5b89\u88c5\u5305 2. MacOS \u4f7f\u7528Homebrew\u5b89\u88c5 3. \u4f7f\u7528nvm\u7248\u672c\u7ba1\u7406\u5668\u5b89\u88c5(\u63a8\u8350) 2\u3001\u7b2c\u4e00\u4e2aNodejs\u7a0b\u5e8f \u521b\u5efa\u9879\u76ee\u914d\u7f6e\u6587\u4ef6 npm init - y \u793a\u4f8b\uff1a\u8bfb\u53d6CPU\u4fe1\u606f // \u8bfb\u53d6\u7cfb\u7edf\u4fe1\u606f const os = require ( 'os' ) // \u8bfb\u53d6cup\u6570\u91cf let cpus = os . cpus (). length ; console . log ( cpus ); // 8 // \u83b7\u53d6\u5185\u5b58\u4fe1\u606f let tatol = os . totalmem (); // bytes console . log ( tatol / 1024 / 1024 / 1024 ); // GB // \u5269\u4f59\u5185\u5b58 let free = os . freemem (); // bytes console . log ( free / 1024 / 1024 / 1024 ); // GB \u793a\u4f8b\uff1aweb\u670d\u52a1 const http = require ( 'http' ); const server = http . createServer (( req , res )=>{ res . end ( 'hello' ) }) server . listen ( 8080 , ()=>{ console . log ( \"\u670d\u52a1\u542f\u52a8\" ); }) // http://localhost:8080/ 3\u3001Nodejs\u548cnpm JavaScript\u4ee3\u7801 -> NodejsAPI \u5168\u5c40 \u5185\u7f6e\u6a21\u5757 \u7b2c\u4e09\u65b9\u6a21\u5757 ( npm ) V8 libuv -> \u7cfb\u7edf\u73af\u5883\uff08 windows / macOS / linux \uff09 4\u3001nodemon\u5b9e\u73b0\u70ed\u542f\u52a8 \u9879\u76ee\u7ed3\u6784 package . json src / app . js \uff081\uff09\u5b89\u88c5nodemon npm install nodemon - D \uff082\uff09\u4fee\u6539package.json\u542f\u52a8\u547d\u4ee4 \"scripts\" : { \"start\" : \"DEBUG=* nodemon src/app.js\" , \"start:node\" : \"node src/app.js\" } DEBUG=* \u53ef\u9009\uff0c\u6253\u5370debug\u4fe1\u606f \uff083\uff09\u6307\u5b9a\u76d1\u542c\u6587\u4ef6nodemon.json { \"watch\" : [ \"./src/**/*.js\" ] } 5\u3001\u4f7f\u7528nrm\u7ba1\u7406npm\u6e90 \u5b89\u88c5 npm install nrm - g # \u4f7f\u7528 nrm ls nrm - h 6\u3001\u4f7f\u7528nvm\u7ba1\u7406Nodejs\u7248\u672c nvm ls \u5c0f\u7ed3 nvm \u7ba1\u7406Nodejs\u7248\u672c npm \u7ba1\u7406\u7b2c\u4e09\u65b9\u5305 nrm npm\u6e90\u7ba1\u7406 nodemon \u76d1\u542c\u6587\u4ef6\uff0c\u81ea\u52a8\u91cd\u542f\u670d\u52a1 2\u3001Web\u5e94\u7528\u57fa\u7840 1\u3001Web\u5e94\u7528\u4ee5\u53caExpress \u524d\u7aef -> ajax , ws -> \u670d\u52a1\u5668 ( web\u5e94\u7528 ) -> \u7f13\u5b58 / \u6570\u636e\u5e93 express \u63a5\u6536 request\uff0c \u5904\u7406response \u4e00\u79cdweb\u6846\u67b6 https://expressjs.com/ 2\u3001\u4f7f\u7528Express\u642d\u5efa\u7b2c\u4e00\u4e2aWeb\u670d\u52a1 mkdir demo cd demo npm init - y git init echo node_modules > . gitignore npm install express - S npm install nodemon - D \u9879\u76ee\u7ed3\u6784 package . json src / app . js . gitignore node_modules / \u4fee\u6539package.json \"scripts\" : { \"start\" : \"nodemon ./src/app.js\" } , app.js const express = require ( 'express' ) // \u5b9e\u4f8b\u5316 const app = express () app . get ( '/' , ( request , response ) => { response . json ({ name : \"Tom\" , age : 21 }) }) app . listen ( 8080 , () => { console . log ( `server start http://localhost:8080` ); }) \u542f\u52a8\u670d\u52a1 npm start http://localhost:8080 3\u3001\u8def\u7531\uff08Routing\uff09\u7684\u4ecb\u7ecd\u548c\u4f7f\u7528 url -> \u7f51\u7edc -> dns\u89e3\u6790 -> \u76ee\u6807\u670d\u52a1\u5668 \u8def\u7531\u89c4\u5219 \u8bf7\u6c42\u65b9\u6cd5 get/post -> \u54cd\u5e94 uri -> \u8def\u5f84 get/post/put/delete // callback = (req, res)=>{} app . get ( path , callback ) app . post ( path , callback ) // \u54cd\u5e94\u6240\u6709\u8bf7\u6c42\u65b9\u5f0f app . all ( path , callback ) // \u54cd\u5e94\u6240\u6709\u8bf7\u6c42uri app . all ( \"*\" , callback ) // \u4efb\u4f55\u8bf7\u6c42\u6765\u4e86\u90fd\u4f1a\u7ecf\u8fc7 app . use ( path , callback ) // \u8def\u7531\u62c6\u5206 \u8def\u7531\u62c6\u5206 app.js const express = require ( 'express' ) const dogRouter = require ( './dog.router' ) const catRouter = require ( './cat.router' ) // \u5b9e\u4f8b\u5316 const app = express () // \u6ce8\u518c\u8def\u7531 app . use ( '/dog' , dogRouter ) app . use ( '/cat' , catRouter ) app . listen ( 8080 , () => { console . log ( `server start http://localhost:8080` ); }) cat.router.js const express = require ( 'express' ); const router = express . Router (); router . get ( \"/\" , ( req , res )=>{ res . end ( \"cat\" ) }) module . exports = router ; dog.router.js const express = require ( 'express' ); const router = express . Router (); router . get ( \"/\" , ( req , res )=>{ res . end ( \"dog\" ) }) module . exports = router ; 4\u3001\u4e2d\u95f4\u4ef6\uff08Middleware\uff09\u4ecb\u7ecd\u548c\u4f7f\u7528 function ( err , req , res , next ) // err \u5f02\u5e38 // next \u8f6c\u4ea4\u63a7\u5236\u6743 // \u54cd\u5e94\u8bf7\u6c42 \u7ed3\u675f\u54cd\u5e94 \u4f7f\u7528\uff1a \uff081\uff09app\u7ea7\u522b \u6700\u9876\u5c42\u6ce8\u518c app.use() // \u5b9e\u4f8b\u5316 const app = express () // \u5b9a\u4e49\u4e2d\u95f4\u4ef6 function logMiddleware ( req , res , next ){ console . log ( \"\u8bf7\u6c42\u6765\u4e86\" ); next () } // \u4f7f\u7528\u4e2d\u95f4\u4ef6 app . use ( logMiddleware ) // \u4f7f\u7528\u9759\u6001\u6587\u4ef6\u4e2d\u95f4\u4ef6 app . use ( express . static ( 'static' )) \uff082\uff09router\u5185\u90e8\u4f7f\u7528 app . get ( \"/\" , [ Middleware ], ( req , res )=>{ }) \uff083\uff09\u5f02\u5e38\u5904\u7406 \u5f02\u5e38\u6355\u83b7,\u653e\u5728\u6700\u540e\u5904\u7406 \u5185\u7f6e\u5f02\u5e38\u5904\u7406 // \u5b9e\u4f8b\u5316 const app = express () app . get ( \"/\" , ( req , res )=>{ res . end ( message ) }) // \u5f02\u5e38\u5904\u7406\u4e2d\u95f4\u4ef6\u653e\u5728\u6700\u540e function errHandlerMiddleware ( err , req , res , next ){ if ( err ){ res . json ({ msg : err . message }) } } app . use ( errHandlerMiddleware ) 404\u5f02\u5e38 function notFoundHandler ( err , req , res , next ) { res . json ({ msg : '\u63a5\u53e3\u4e0d\u5b58\u5728' }) } app . use ( notFoundHandler ) 7\u3001MySQL\u7684\u5b89\u88c5\u548c\u57fa\u672c\u547d\u4ee4\u4f7f\u7528 \u67e5\u770b\u672c\u673abrew\u670d\u52a1 brew services list brew services start / stop mysql mysql \u7ed3\u6784\u5316\u6570\u636e\u5e93 \u63d0\u4f9b\u6570\u636e\u5b58\u653e\u7684\u670d\u52a1 \u6570\u636e\u5e93 \u5212\u5206\u5b58\u50a8\u533a\u57df \u8868 \u5bf9\u8c61\u6570\u7ec4 app -> orm -> mysql\u9a71\u52a8 -> mysql 8\u3001ORM\u6846\u67b6Sequelize\u4ecb\u7ecd\u548c\u4f7f\u7528 https://sequelize.org/v5/manual/getting-started.html npm install sequelize - S npm install sequelize - cli - D npx sequelize - cli init \u9879\u76ee\u5b9e\u6218 1\u3001\u9700\u6c42\u8bf4\u660e 1. \u67e5\u8be2\u5168\u90e8\u6570\u636e\uff1a\u540d\u79f0\u72b6\u6001\uff0c\u5206\u9875 2. \u65b0\u589e\u4efb\u52a1\uff1a\u540d\u79f0\uff0c\u622a\u6b62\u65e5\u671f\uff0c\u5185\u5bb9 3. \u7f16\u8f91 4. \u5220\u9664 5. \u4fee\u6539\u72b6\u6001\uff1a\u4ee3\u529e\uff0c\u5b8c\u6210 2\u3001\u4ee3\u7801\u5b9e\u73b0 \u6240\u6709\u5f02\u5e38 status=500 body-parse 3\u3001\u6570\u636e\u5e93\u521d\u59cb\u5316 \uff081\uff09\u521d\u59cb\u5316\u9879\u76ee\u6570\u5e93\u914d\u7f6e sequelize cli npx sequelize init \uff082\uff09\u751f\u6210\u6a21\u578b\u6587\u4ef6 migrate/model npx sequelize model:generate --name Todo --attributes name:string,deadline:date,content:string \uff083\uff09\u6301\u4e45\u5316\uff0c\u5728\u6570\u636e\u5e93\u4e2d\u751f\u6210\u6a21\u578b\u5bf9\u5e94\u7684\u6570\u636e\u8868 npx sequelize db:migrate \u9879\u76ee\u53d1\u5e03\u548c\u8fd0\u7ef4\u4ecb\u7ecd pm2 \u91cd\u70b9\u56de\u987e 1\u3001\u6280\u672f\u6808 node http\uff0c \u5f02\u5e38 web\u6846\u67b6 express hapi koa egg \u53c2\u6570\u6821\u9a8c mysql ORM sequelize 2\u3001\u6280\u672f\u5173\u952e\u70b9 api\uff1a web webserver router handler orm db 3\u3001\u6ce8\u610f\u4e8b\u9879 \u6a21\u578b\u8bbe\u8ba1 \u6a21\u578b\u4e4b\u95f4\u5173\u7cfb api\u6587\u6863 \u6d4b\u8bd5","title":"React+Nodejs+MySQL\u5168\u6808\u5f00\u53d1\u5165\u95e8"},{"location":"JavaScript/React+Nodejs+MySQL\u5168\u6808\u5f00\u53d1\u5165\u95e8/#reactnodejsmysql","text":"","title":"React+Nodejs+MySQL\u5168\u6808\u5f00\u53d1\u5165\u95e8"},{"location":"JavaScript/React+Nodejs+MySQL\u5168\u6808\u5f00\u53d1\u5165\u95e8/#_1","text":"1\u3001\u5f00\u53d1\u73af\u5883\u51c6\u5907 1. \u5b89\u88c5Nodejs 2. \u7b2c\u4e00\u4e2aNodejs\u7a0b\u5e8f 3. Nodejs\u548cnpm 4. nodemon\u5b9e\u73b0\u70ed\u542f\u52a8 5. \u4f7f\u7528nrm\u89e3\u51b3npm\u6e90\u7684 6. \u4f7f\u7528nvm\u7ba1\u7406Nodejs\u7248\u672c 2\u3001Web\u5e94\u7528\u57fa\u7840 1. Web\u5e94\u7528\u4ee5\u53caExpress 2. \u4f7f\u7528Express\u642d\u5efa\u7b2c\u4e00\u4e2aWeb\u670d\u52a1 3. \u8def\u7531\uff08Routing\uff09\u7684\u4ecb\u7ecd\u548c\u4f7f\u7528 4. \u4e2d\u95f4\u4ef6\uff08Middleware\uff09\u4ecb\u7ecd\u548c\u4f7f\u7528 5. \u81ea\u5b9a\u4e49\u7f16\u5199\u4e2d\u95f4\u4ef6 6. \u5f02\u5e38\u5904\u7406 7. MySQL\u7684\u5b89\u88c5\u548c\u57fa\u672c\u547d\u4ee4\u4f7f\u7528 8. ORM\u6846\u67b6Sequelize\u4ecb\u7ecd\u548c\u4f7f\u7528 3\u3001\u9879\u76ee\u5b9e\u6218TODO 4\u3001\u68b3\u7406\u603b\u7ed3","title":"\u5185\u5bb9\u4ecb\u7ecd"},{"location":"JavaScript/React+Nodejs+MySQL\u5168\u6808\u5f00\u53d1\u5165\u95e8/#1","text":"1\u3001\u5b89\u88c5Nodejs 1. \u76f4\u63a5\u4e0b\u8f7d\u5b98\u65b9\u5b89\u88c5\u5305 2. MacOS \u4f7f\u7528Homebrew\u5b89\u88c5 3. \u4f7f\u7528nvm\u7248\u672c\u7ba1\u7406\u5668\u5b89\u88c5(\u63a8\u8350) 2\u3001\u7b2c\u4e00\u4e2aNodejs\u7a0b\u5e8f \u521b\u5efa\u9879\u76ee\u914d\u7f6e\u6587\u4ef6 npm init - y \u793a\u4f8b\uff1a\u8bfb\u53d6CPU\u4fe1\u606f // \u8bfb\u53d6\u7cfb\u7edf\u4fe1\u606f const os = require ( 'os' ) // \u8bfb\u53d6cup\u6570\u91cf let cpus = os . cpus (). length ; console . log ( cpus ); // 8 // \u83b7\u53d6\u5185\u5b58\u4fe1\u606f let tatol = os . totalmem (); // bytes console . log ( tatol / 1024 / 1024 / 1024 ); // GB // \u5269\u4f59\u5185\u5b58 let free = os . freemem (); // bytes console . log ( free / 1024 / 1024 / 1024 ); // GB \u793a\u4f8b\uff1aweb\u670d\u52a1 const http = require ( 'http' ); const server = http . createServer (( req , res )=>{ res . end ( 'hello' ) }) server . listen ( 8080 , ()=>{ console . log ( \"\u670d\u52a1\u542f\u52a8\" ); }) // http://localhost:8080/ 3\u3001Nodejs\u548cnpm JavaScript\u4ee3\u7801 -> NodejsAPI \u5168\u5c40 \u5185\u7f6e\u6a21\u5757 \u7b2c\u4e09\u65b9\u6a21\u5757 ( npm ) V8 libuv -> \u7cfb\u7edf\u73af\u5883\uff08 windows / macOS / linux \uff09 4\u3001nodemon\u5b9e\u73b0\u70ed\u542f\u52a8 \u9879\u76ee\u7ed3\u6784 package . json src / app . js \uff081\uff09\u5b89\u88c5nodemon npm install nodemon - D \uff082\uff09\u4fee\u6539package.json\u542f\u52a8\u547d\u4ee4 \"scripts\" : { \"start\" : \"DEBUG=* nodemon src/app.js\" , \"start:node\" : \"node src/app.js\" } DEBUG=* \u53ef\u9009\uff0c\u6253\u5370debug\u4fe1\u606f \uff083\uff09\u6307\u5b9a\u76d1\u542c\u6587\u4ef6nodemon.json { \"watch\" : [ \"./src/**/*.js\" ] } 5\u3001\u4f7f\u7528nrm\u7ba1\u7406npm\u6e90 \u5b89\u88c5 npm install nrm - g # \u4f7f\u7528 nrm ls nrm - h 6\u3001\u4f7f\u7528nvm\u7ba1\u7406Nodejs\u7248\u672c nvm ls \u5c0f\u7ed3 nvm \u7ba1\u7406Nodejs\u7248\u672c npm \u7ba1\u7406\u7b2c\u4e09\u65b9\u5305 nrm npm\u6e90\u7ba1\u7406 nodemon \u76d1\u542c\u6587\u4ef6\uff0c\u81ea\u52a8\u91cd\u542f\u670d\u52a1","title":"1\u3001\u5f00\u53d1\u73af\u5883\u51c6\u5907"},{"location":"JavaScript/React+Nodejs+MySQL\u5168\u6808\u5f00\u53d1\u5165\u95e8/#2web","text":"1\u3001Web\u5e94\u7528\u4ee5\u53caExpress \u524d\u7aef -> ajax , ws -> \u670d\u52a1\u5668 ( web\u5e94\u7528 ) -> \u7f13\u5b58 / \u6570\u636e\u5e93 express \u63a5\u6536 request\uff0c \u5904\u7406response \u4e00\u79cdweb\u6846\u67b6 https://expressjs.com/ 2\u3001\u4f7f\u7528Express\u642d\u5efa\u7b2c\u4e00\u4e2aWeb\u670d\u52a1 mkdir demo cd demo npm init - y git init echo node_modules > . gitignore npm install express - S npm install nodemon - D \u9879\u76ee\u7ed3\u6784 package . json src / app . js . gitignore node_modules / \u4fee\u6539package.json \"scripts\" : { \"start\" : \"nodemon ./src/app.js\" } , app.js const express = require ( 'express' ) // \u5b9e\u4f8b\u5316 const app = express () app . get ( '/' , ( request , response ) => { response . json ({ name : \"Tom\" , age : 21 }) }) app . listen ( 8080 , () => { console . log ( `server start http://localhost:8080` ); }) \u542f\u52a8\u670d\u52a1 npm start http://localhost:8080 3\u3001\u8def\u7531\uff08Routing\uff09\u7684\u4ecb\u7ecd\u548c\u4f7f\u7528 url -> \u7f51\u7edc -> dns\u89e3\u6790 -> \u76ee\u6807\u670d\u52a1\u5668 \u8def\u7531\u89c4\u5219 \u8bf7\u6c42\u65b9\u6cd5 get/post -> \u54cd\u5e94 uri -> \u8def\u5f84 get/post/put/delete // callback = (req, res)=>{} app . get ( path , callback ) app . post ( path , callback ) // \u54cd\u5e94\u6240\u6709\u8bf7\u6c42\u65b9\u5f0f app . all ( path , callback ) // \u54cd\u5e94\u6240\u6709\u8bf7\u6c42uri app . all ( \"*\" , callback ) // \u4efb\u4f55\u8bf7\u6c42\u6765\u4e86\u90fd\u4f1a\u7ecf\u8fc7 app . use ( path , callback ) // \u8def\u7531\u62c6\u5206 \u8def\u7531\u62c6\u5206 app.js const express = require ( 'express' ) const dogRouter = require ( './dog.router' ) const catRouter = require ( './cat.router' ) // \u5b9e\u4f8b\u5316 const app = express () // \u6ce8\u518c\u8def\u7531 app . use ( '/dog' , dogRouter ) app . use ( '/cat' , catRouter ) app . listen ( 8080 , () => { console . log ( `server start http://localhost:8080` ); }) cat.router.js const express = require ( 'express' ); const router = express . Router (); router . get ( \"/\" , ( req , res )=>{ res . end ( \"cat\" ) }) module . exports = router ; dog.router.js const express = require ( 'express' ); const router = express . Router (); router . get ( \"/\" , ( req , res )=>{ res . end ( \"dog\" ) }) module . exports = router ; 4\u3001\u4e2d\u95f4\u4ef6\uff08Middleware\uff09\u4ecb\u7ecd\u548c\u4f7f\u7528 function ( err , req , res , next ) // err \u5f02\u5e38 // next \u8f6c\u4ea4\u63a7\u5236\u6743 // \u54cd\u5e94\u8bf7\u6c42 \u7ed3\u675f\u54cd\u5e94 \u4f7f\u7528\uff1a \uff081\uff09app\u7ea7\u522b \u6700\u9876\u5c42\u6ce8\u518c app.use() // \u5b9e\u4f8b\u5316 const app = express () // \u5b9a\u4e49\u4e2d\u95f4\u4ef6 function logMiddleware ( req , res , next ){ console . log ( \"\u8bf7\u6c42\u6765\u4e86\" ); next () } // \u4f7f\u7528\u4e2d\u95f4\u4ef6 app . use ( logMiddleware ) // \u4f7f\u7528\u9759\u6001\u6587\u4ef6\u4e2d\u95f4\u4ef6 app . use ( express . static ( 'static' )) \uff082\uff09router\u5185\u90e8\u4f7f\u7528 app . get ( \"/\" , [ Middleware ], ( req , res )=>{ }) \uff083\uff09\u5f02\u5e38\u5904\u7406 \u5f02\u5e38\u6355\u83b7,\u653e\u5728\u6700\u540e\u5904\u7406 \u5185\u7f6e\u5f02\u5e38\u5904\u7406 // \u5b9e\u4f8b\u5316 const app = express () app . get ( \"/\" , ( req , res )=>{ res . end ( message ) }) // \u5f02\u5e38\u5904\u7406\u4e2d\u95f4\u4ef6\u653e\u5728\u6700\u540e function errHandlerMiddleware ( err , req , res , next ){ if ( err ){ res . json ({ msg : err . message }) } } app . use ( errHandlerMiddleware ) 404\u5f02\u5e38 function notFoundHandler ( err , req , res , next ) { res . json ({ msg : '\u63a5\u53e3\u4e0d\u5b58\u5728' }) } app . use ( notFoundHandler ) 7\u3001MySQL\u7684\u5b89\u88c5\u548c\u57fa\u672c\u547d\u4ee4\u4f7f\u7528 \u67e5\u770b\u672c\u673abrew\u670d\u52a1 brew services list brew services start / stop mysql mysql \u7ed3\u6784\u5316\u6570\u636e\u5e93 \u63d0\u4f9b\u6570\u636e\u5b58\u653e\u7684\u670d\u52a1 \u6570\u636e\u5e93 \u5212\u5206\u5b58\u50a8\u533a\u57df \u8868 \u5bf9\u8c61\u6570\u7ec4 app -> orm -> mysql\u9a71\u52a8 -> mysql 8\u3001ORM\u6846\u67b6Sequelize\u4ecb\u7ecd\u548c\u4f7f\u7528 https://sequelize.org/v5/manual/getting-started.html npm install sequelize - S npm install sequelize - cli - D npx sequelize - cli init","title":"2\u3001Web\u5e94\u7528\u57fa\u7840"},{"location":"JavaScript/React+Nodejs+MySQL\u5168\u6808\u5f00\u53d1\u5165\u95e8/#_2","text":"1\u3001\u9700\u6c42\u8bf4\u660e 1. \u67e5\u8be2\u5168\u90e8\u6570\u636e\uff1a\u540d\u79f0\u72b6\u6001\uff0c\u5206\u9875 2. \u65b0\u589e\u4efb\u52a1\uff1a\u540d\u79f0\uff0c\u622a\u6b62\u65e5\u671f\uff0c\u5185\u5bb9 3. \u7f16\u8f91 4. \u5220\u9664 5. \u4fee\u6539\u72b6\u6001\uff1a\u4ee3\u529e\uff0c\u5b8c\u6210 2\u3001\u4ee3\u7801\u5b9e\u73b0 \u6240\u6709\u5f02\u5e38 status=500 body-parse 3\u3001\u6570\u636e\u5e93\u521d\u59cb\u5316 \uff081\uff09\u521d\u59cb\u5316\u9879\u76ee\u6570\u5e93\u914d\u7f6e sequelize cli npx sequelize init \uff082\uff09\u751f\u6210\u6a21\u578b\u6587\u4ef6 migrate/model npx sequelize model:generate --name Todo --attributes name:string,deadline:date,content:string \uff083\uff09\u6301\u4e45\u5316\uff0c\u5728\u6570\u636e\u5e93\u4e2d\u751f\u6210\u6a21\u578b\u5bf9\u5e94\u7684\u6570\u636e\u8868 npx sequelize db:migrate \u9879\u76ee\u53d1\u5e03\u548c\u8fd0\u7ef4\u4ecb\u7ecd pm2","title":"\u9879\u76ee\u5b9e\u6218"},{"location":"JavaScript/React+Nodejs+MySQL\u5168\u6808\u5f00\u53d1\u5165\u95e8/#_3","text":"1\u3001\u6280\u672f\u6808 node http\uff0c \u5f02\u5e38 web\u6846\u67b6 express hapi koa egg \u53c2\u6570\u6821\u9a8c mysql ORM sequelize 2\u3001\u6280\u672f\u5173\u952e\u70b9 api\uff1a web webserver router handler orm db 3\u3001\u6ce8\u610f\u4e8b\u9879 \u6a21\u578b\u8bbe\u8ba1 \u6a21\u578b\u4e4b\u95f4\u5173\u7cfb api\u6587\u6863 \u6d4b\u8bd5","title":"\u91cd\u70b9\u56de\u987e"},{"location":"JavaScript/Requirejs\u548c\u81ea\u52a8\u6253\u5305/","text":"Requirejs\u548c\u81ea\u52a8\u6253\u5305 \u5f00\u53d1\u9636\u6bb5 \u4e0d\u6253\u5305\uff0c\u4e0d\u538b\u7f29\uff0c\u6a21\u5757\u5316\u5f00\u53d1 \u90e8\u7f72\u9636\u6bb5 \u81ea\u52a8\u6253\u5305\uff0c\u538b\u7f29 require.js\u57fa\u672c\u4f7f\u7528 https://requirejs.org/ 1\u3001require.js 1. \u5f02\u6b65\u52a0\u8f7d 2. \u6a21\u5757\u5316\u5f00\u53d1 - \u4e00\u4e2a\u6587\u4ef6\u4e00\u4e2a\u6a21\u5757 - \u51cf\u5c11\u5168\u5c40\u53d8\u91cf 2\u3001define \u5b9a\u4e49\u6a21\u5757 // helper.js // \u6a21\u5757\u540d\uff0c\u6a21\u5757\u4f9d\u8d56\uff0c\u6a21\u5757\u7684\u5b9e\u73b0function define ( \"helper\" , [ \"jquery\" ], function ( $ ) { return { trim : function ( str ) { return $ . trim ( str ); } } }); 3\u3001require \u52a0\u8f7d\u6a21\u5757 // app.js // \u6a21\u5757\u540d\uff0c\u6a21\u5757\u7684\u5b9e\u73b0function require ([ \"helper\" ], function ( helper ) { var str = \" adm \" ; console . log ( helper . trim ( str )); }); 4\u3001\u52a0\u8f7d\u6587\u4ef6 1. html 2. data-main <!-- index.html --> <script data-main= \"/static/js/app.js\" src= \"/static/js/require.js\" ></script> baseUrl // app.js requirejs . config ({ baseUrl : \"/static/js\" }); <!-- index.html --> < script src = \"/static/js/require.js\" ></ script > < script src = \"/static/js/app.js\" ></ script > 5\u3001\u52a0\u8f7d\u673a\u5236 // RequireJS\u5c06\u4f9d\u8d56\u52a0\u8f7d\u4e3ascript\u6807\u7b7e head . appendChild () \u52a0\u8f7d\u5373\u6267\u884c \u914d\u7f6e\u6a21\u5757\u8def\u5f84 paths \u6620\u5c04\u4e0d\u653e\u4e0ebashUrl\u4e0b\u7684\u6a21\u5757\u540d // app.js requirejs . config ({ baseUrl : \"/static/js\" , // \u6a21\u5757\u8def\u5f84\u6620\u5c04 paths : { // \u52a0\u8f7d\u6a21\u5757\u4f7f\u7528\u7684\u540d\u79f0 \"jquery\" : [ // \u9996\u5148\u52a0\u8f7d\u7684\u6587\u4ef6,\u4e0d\u9700\u8981 .js \"//cdn.bootcss.com/jquery/3.4.1/jquery.min\" , // \u5907\u7528\u6587\u4ef6 \"./lib/jquery\" ] } }); \u5b9a\u4e49\u6a21\u5757 \u51fd\u6570\u5f0f\u5b9a\u4e49 // \u6700\u4f73\u5b9e\u8df5\uff1a\u4e0d\u5199\u6b7b\u6a21\u5757\u540d\uff0c\u4f9d\u8d56\u7684\u6a21\u5757\u53ef\u6709\u53ef\u65e0 define ( 'helper' , [ 'jquery' ], function ( $ ) { return { trim : function ( str ) { return $ . trim ( str ); } } }); \u5b9a\u4e49\u7b80\u5355\u7684\u5bf9\u8c61 define ({ username : 'Tom' , age : 23 }); \u4ee3\u7801\u793a\u4f8b app.js requirejs . config ({ baseUrl : \"/static/js\" , // \u6a21\u5757\u8def\u5f84\u6620\u5c04 paths : { \"jquery\" : [ // \u9996\u5148\u52a0\u8f7d\u7684\u6587\u4ef6,\u4e0d\u9700\u8981 .js \"//cdn.bootcss.com/jquery/3.4.1/jquery.min\" , // \u5907\u7528\u6587\u4ef6 \"./lib/jquery\" ] } }); require ([ \"jquery\" , \"./app/api\" ], function ( $ , api ) { $ ( \"#user\" ). click ( function (){ console . log ( \"user\" ); api . getUser (). then ( function ( user ) { console . log ( user ); } ); }); }); app/api.js define ([ \"jquery\" ], function ( $ ) { return { getUser : function () { // jquery\u7684\u5f02\u6b65\u5904\u7406 var def = $ . Deferred (); require ([ \"./app/user\" ], function ( user ) { def . resolve ( user ); }); return def ; } } }); app/user.js // \u7528\u6237\u4fe1\u606f define ({ name : \"Tom\" , age : 23 }); index.html < button id = \"user\" > \u663e\u793a\u7528\u6237\u4fe1\u606f </ button > < script src = \"/static/js/lib/require.js\" ></ script > < script src = \"/static/js/app.js\" ></ script > \u914d\u7f6e\u4e0d\u652f\u6301amd shim : { \"model\" : { // \u4e0d\u652f\u6301AMD\u7684\u6a21\u5757 \"deps\" : [ \"jquery\" ], // \u4f9d\u8d56\u6a21\u5757 \"exports\" : \"Model\" , // \u5168\u5c40\u53d8\u91cf\u4f5c\u4e3a\u6a21\u5757\u5bf9\u8c61 init : function ( $ ) { // \u521d\u59cb\u5316\u51fd\u6570\uff0c\u8fd4\u56de\u5bf9\u8c61\u4ee3\u66ffexports\u4f5c\u4e3a\u6a21\u5757\u5bf9\u8c61 return $ ; } } } \u5176\u4ed6\u5e38\u7528\u914d\u7f6e 1\u3001map // \u52a0\u8f7d\u4e0d\u540c\u7684\u7248\u672c map : { // \u5f53app/api\u6a21\u5757\u52a0\u8f7djquery\u65f6\u751f\u6548 \"app/api\" : { \"jquery\" : \"./lib/jquery\" }, // \u5f53app/api2\u6a21\u5757\u52a0\u8f7djquery\u65f6\u751f\u6548 \"app/api2\" : { \"jquery\" : \"./lib/jquery2\" } } 2\u3001waitSeconds \u4e0b\u8f7djs\u7b49\u5f85\u65f6\u95f4\uff0c\u9ed8\u8ba47\u79d2 \u5982\u679c\u8bbe\u4e3a0\uff0c\u5219\u7981\u7528\u7b49\u5f85\u8d85\u65f6 3\u3001urlArgs \u4e0b\u8f7d\u6587\u4ef6\u65f6\uff0c\u5728url\u540e\u9762\u589e\u52a0\u989d\u5916\u7684\u67e5\u8be2query\u53c2\u6570 urlArgs : \"_=\" + ( new Date ()). getTime () jsonp\u670d\u52a1 jsonp\u7684\u4e00\u79cd\u4f7f\u7528\u6a21\u5f0f\uff0c\u53ef\u4ee5\u8de8\u57df\u83b7\u53d6\u6570\u636e\uff0c\u5982json \u540c\u6e90\u7b56\u7565\uff1a www.baidu.com \u901a\u8fc7ajax\u4e0d\u80fd\u83b7\u53d6www.qq.com\u7684\u6570\u636e 1\u3001jsonp\u5b9e\u73b0 \u901a\u8fc7script\u8de8\u57df\u8bf7\u6c42\u83b7\u53d6\u6570\u636e < script src = \"http://www.baidu.com/user.js?callback=onloaded\" ></ script > \u540e\u7aef\u901a\u8fc7callback\u83b7\u53d6\u53c2\u6570\u503conloaded onloaded ({ name : \"Tom\" , age : 23 }) 2\u3001ajax\u8bf7\u6c42 $ . ajax ( { url : \"http://127.0.0.1:5000/static/js/app/user.js\" , dataType : \"jsonp\" , // \u6ce8\u610f\u53c2\u6570\u662fjsonp success : function ( data ) { console . log ( data ); } } ); 3\u3001require.js\u5b9e\u73b0jsonp require ([ \"http://www.baidu.com/user.js\" ], function ( user ){ }) user.js define ({ name : \"Tom\" , age : 23 }) text.js\u63d2\u4ef6 https://github.com/requirejs/text \u7528\u4e8e\u52a0\u8f7d\u6587\u672c // \u6ce8\u610f\u524d\u7f00 strip\u53ea\u8981body\u90e8\u5206\u7684\u5185\u5bb9 require ([ \"text!/user.html!strip\" ], function ( template ) { $ ( # userinfo ). html ( template ); }) text.js\u914d\u7f6e requirejs . config ({ config : { // \u4e0d\u8981\u5c11\u4e86\u8fd9\u4e2a text : { onXhr : function ( xhr , url ){ // \u8bf7\u6c42\u4e4b\u524d\u8bbe\u7f6e // \u8bbe\u7f6e\u8bf7\u6c42\u5934 xhr . setRequestHeader ( \"X-Requested-With\" , \"XMLHttpRequest\" ); }, createXhr : function (){ // \u8bf7\u6c42\u65f6\u8bbe\u7f6e }, onXhrComplete : function ( xhr , url ){ // \u8bf7\u6c42\u5b8c\u6210\u540e\u8bbe\u7f6e } } } }) css.js\u63d2\u4ef6 \u52a0\u8f7d\u6837\u5f0f\u6587\u4ef6 https://github.com/guybedford/require-css paths : { \"css\" : \"./lib/require/css\" } \u6216\u8005 map : { \"*\" : { \"css\" : \"./lib/require/css\" } } // \u52a0\u8f7d require ([ \"css!/static/css/bootstrap.css\" ], function () { } \u52a0\u8f7djs\u4f9d\u8d56\u7684\u65f6\u5019\u540c\u65f6\u52a0\u8f7dcss\u6587\u4ef6 paths : { \"jquery\" : \"./lib/jquery\" , \"css\" : \"./lib/require/css\" , \"bootstrap\" : \"./lib/bootstrap\" }, shim : { \"bootstrap\" : [ \"jquery\" , \"css!/static/css/bootstrap.css\" , \"css!/static/css/bootstrap-theme.css\" ] }, // \u52a0\u8f7d require ([ \"bootstrap\" ], function () { } i18n\u63d2\u4ef6 \u652f\u6301\u56fd\u9645\u5316\u591a\u8bed\u8a00 https://github.com/requirejs/i18n \u8c03\u7528\u65b9\u5f0f require ([ \"i18n!./nls/message\" ], function ( i18n ){ $ ( \"#user\" ). after ( \"<button class='btn btn-primary'>\" + i18n . edit + \"</button>\" ); }) \u76ee\u5f55\u7ed3\u6784 \u6587\u4ef6\u5939\u540d\u79f0\u56fa\u5b9a\u4e3anls nls - en - message . js define ({ \"edit\" : \"Edit\" }) - zh - message . js define ({ \"edit\" : \"\u7f16\u8f91\" }) - message . js define ({ \"zh\" : true , \"en\" : true }) \u4ece\u6d4f\u89c8\u5668\u4e2d\u83b7\u53d6\u8bed\u8a00 navigator . language navigator . userLanguage \u914d\u7f6e\u9ed8\u8ba4\u8bed\u8a00 config : { i18n : { locale : \"zh\" } } \u4ececookie\u4e2d\u83b7\u53d6\u8bed\u8a00 \u8bbe\u7f6e\u6d4f\u89c8\u5668cookie $ document.cookie = 'language=zh_CN' # \u4e2d\u6587 $ document.cookie = 'language=en_US' # \u82f1\u6587 // \u4ece\u6d4f\u89c8\u5668cookie\u4e2d\u83b7\u53d6\u8bed\u8a00 var language = document . cookie . match ( /language=([^;]+)/ ); var locale = \"zh\" ; if ( language ){ locale = language [ 1 ]. split ( \"_\" )[ 0 ]; console . log ( locale ); } // \u4fee\u6539\u914d\u7f6e config : { i18n : { locale : locale } } r.js\u6253\u5305\u5de5\u5177 \u4e0b\u8f7d\u6267\u884c https://github.com/requirejs/r.js $ node r.js -o bashUrl = js name = app out = built.js \u5b89\u88c5\u6267\u884c $ npm install -g requirejs $ r.js -o bashUrl = js name = app out = built.js \u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u6253\u5305 r . js - o app . build . js app.build.js ( { appDir : \"./src\" , // \u8981\u6253\u5305\u7684\u6839\u76ee\u5f55 bashUrl : \"./js\" , // js\u6587\u4ef6\u5728\u8fd9\u4e2abaseUrl\u4e0b dir : \"./build\" , // \u6253\u5305\u540e\u7684\u8f93\u51fa\u76ee\u5f55 mainConfigFile : \"src/js/require.config.js\" , // requirejs\u7684\u914d\u7f6e\u6587\u4ef6 name : \"app\" } ) \u591a\u6a21\u5757\u6253\u5305 app.build.js ( { appDir : \" ./src \" , // \u8981\u6253\u5305\u7684\u6839\u76ee\u5f55 bashUrl : \" ./js \" , // js \u6587\u4ef6\u5728\u8fd9\u4e2a baseUrl \u4e0b dir : \" ./build \" , // \u6253\u5305\u540e\u7684\u8f93\u51fa\u76ee\u5f55 mainConfigFile : \" src/js/require.config.js \" , // requirejs \u7684\u914d\u7f6e\u6587\u4ef6 models : [ { name : \" app \" , // optimize : ' uglify ' // \u538b\u7f29\u65b9\u5f0f \" none \" include : [ \" foo/bar/bee \" ] // \u6dfb\u52a0\u4e00\u8d77\u6253\u5305 }, { name : \" user \" , exclude : [ \" foo/bar/bop \" ] // \u79fb\u9664\u4e0d\u6253\u5305 } ] } ) \u63d2\u4ef6\u6253\u5305 text css npm\u6253\u5305 $ npm init $ npm run-script <command> $ npm run # \u7b80\u5199 \"script\" : { \"package\" : \"node r.js -o app.build.js\" } maven+ npm\u81ea\u52a8\u6253\u5305 frontend-maven-plugin","title":"Requirejs\u548c\u81ea\u52a8\u6253\u5305"},{"location":"JavaScript/Requirejs\u548c\u81ea\u52a8\u6253\u5305/#requirejs","text":"\u5f00\u53d1\u9636\u6bb5 \u4e0d\u6253\u5305\uff0c\u4e0d\u538b\u7f29\uff0c\u6a21\u5757\u5316\u5f00\u53d1 \u90e8\u7f72\u9636\u6bb5 \u81ea\u52a8\u6253\u5305\uff0c\u538b\u7f29","title":"Requirejs\u548c\u81ea\u52a8\u6253\u5305"},{"location":"JavaScript/Requirejs\u548c\u81ea\u52a8\u6253\u5305/#requirejs_1","text":"https://requirejs.org/ 1\u3001require.js 1. \u5f02\u6b65\u52a0\u8f7d 2. \u6a21\u5757\u5316\u5f00\u53d1 - \u4e00\u4e2a\u6587\u4ef6\u4e00\u4e2a\u6a21\u5757 - \u51cf\u5c11\u5168\u5c40\u53d8\u91cf 2\u3001define \u5b9a\u4e49\u6a21\u5757 // helper.js // \u6a21\u5757\u540d\uff0c\u6a21\u5757\u4f9d\u8d56\uff0c\u6a21\u5757\u7684\u5b9e\u73b0function define ( \"helper\" , [ \"jquery\" ], function ( $ ) { return { trim : function ( str ) { return $ . trim ( str ); } } }); 3\u3001require \u52a0\u8f7d\u6a21\u5757 // app.js // \u6a21\u5757\u540d\uff0c\u6a21\u5757\u7684\u5b9e\u73b0function require ([ \"helper\" ], function ( helper ) { var str = \" adm \" ; console . log ( helper . trim ( str )); }); 4\u3001\u52a0\u8f7d\u6587\u4ef6 1. html 2. data-main <!-- index.html --> <script data-main= \"/static/js/app.js\" src= \"/static/js/require.js\" ></script> baseUrl // app.js requirejs . config ({ baseUrl : \"/static/js\" }); <!-- index.html --> < script src = \"/static/js/require.js\" ></ script > < script src = \"/static/js/app.js\" ></ script > 5\u3001\u52a0\u8f7d\u673a\u5236 // RequireJS\u5c06\u4f9d\u8d56\u52a0\u8f7d\u4e3ascript\u6807\u7b7e head . appendChild () \u52a0\u8f7d\u5373\u6267\u884c","title":"require.js\u57fa\u672c\u4f7f\u7528"},{"location":"JavaScript/Requirejs\u548c\u81ea\u52a8\u6253\u5305/#_1","text":"paths \u6620\u5c04\u4e0d\u653e\u4e0ebashUrl\u4e0b\u7684\u6a21\u5757\u540d // app.js requirejs . config ({ baseUrl : \"/static/js\" , // \u6a21\u5757\u8def\u5f84\u6620\u5c04 paths : { // \u52a0\u8f7d\u6a21\u5757\u4f7f\u7528\u7684\u540d\u79f0 \"jquery\" : [ // \u9996\u5148\u52a0\u8f7d\u7684\u6587\u4ef6,\u4e0d\u9700\u8981 .js \"//cdn.bootcss.com/jquery/3.4.1/jquery.min\" , // \u5907\u7528\u6587\u4ef6 \"./lib/jquery\" ] } });","title":"\u914d\u7f6e\u6a21\u5757\u8def\u5f84"},{"location":"JavaScript/Requirejs\u548c\u81ea\u52a8\u6253\u5305/#_2","text":"\u51fd\u6570\u5f0f\u5b9a\u4e49 // \u6700\u4f73\u5b9e\u8df5\uff1a\u4e0d\u5199\u6b7b\u6a21\u5757\u540d\uff0c\u4f9d\u8d56\u7684\u6a21\u5757\u53ef\u6709\u53ef\u65e0 define ( 'helper' , [ 'jquery' ], function ( $ ) { return { trim : function ( str ) { return $ . trim ( str ); } } }); \u5b9a\u4e49\u7b80\u5355\u7684\u5bf9\u8c61 define ({ username : 'Tom' , age : 23 }); \u4ee3\u7801\u793a\u4f8b app.js requirejs . config ({ baseUrl : \"/static/js\" , // \u6a21\u5757\u8def\u5f84\u6620\u5c04 paths : { \"jquery\" : [ // \u9996\u5148\u52a0\u8f7d\u7684\u6587\u4ef6,\u4e0d\u9700\u8981 .js \"//cdn.bootcss.com/jquery/3.4.1/jquery.min\" , // \u5907\u7528\u6587\u4ef6 \"./lib/jquery\" ] } }); require ([ \"jquery\" , \"./app/api\" ], function ( $ , api ) { $ ( \"#user\" ). click ( function (){ console . log ( \"user\" ); api . getUser (). then ( function ( user ) { console . log ( user ); } ); }); }); app/api.js define ([ \"jquery\" ], function ( $ ) { return { getUser : function () { // jquery\u7684\u5f02\u6b65\u5904\u7406 var def = $ . Deferred (); require ([ \"./app/user\" ], function ( user ) { def . resolve ( user ); }); return def ; } } }); app/user.js // \u7528\u6237\u4fe1\u606f define ({ name : \"Tom\" , age : 23 }); index.html < button id = \"user\" > \u663e\u793a\u7528\u6237\u4fe1\u606f </ button > < script src = \"/static/js/lib/require.js\" ></ script > < script src = \"/static/js/app.js\" ></ script >","title":"\u5b9a\u4e49\u6a21\u5757"},{"location":"JavaScript/Requirejs\u548c\u81ea\u52a8\u6253\u5305/#amd","text":"shim : { \"model\" : { // \u4e0d\u652f\u6301AMD\u7684\u6a21\u5757 \"deps\" : [ \"jquery\" ], // \u4f9d\u8d56\u6a21\u5757 \"exports\" : \"Model\" , // \u5168\u5c40\u53d8\u91cf\u4f5c\u4e3a\u6a21\u5757\u5bf9\u8c61 init : function ( $ ) { // \u521d\u59cb\u5316\u51fd\u6570\uff0c\u8fd4\u56de\u5bf9\u8c61\u4ee3\u66ffexports\u4f5c\u4e3a\u6a21\u5757\u5bf9\u8c61 return $ ; } } }","title":"\u914d\u7f6e\u4e0d\u652f\u6301amd"},{"location":"JavaScript/Requirejs\u548c\u81ea\u52a8\u6253\u5305/#_3","text":"1\u3001map // \u52a0\u8f7d\u4e0d\u540c\u7684\u7248\u672c map : { // \u5f53app/api\u6a21\u5757\u52a0\u8f7djquery\u65f6\u751f\u6548 \"app/api\" : { \"jquery\" : \"./lib/jquery\" }, // \u5f53app/api2\u6a21\u5757\u52a0\u8f7djquery\u65f6\u751f\u6548 \"app/api2\" : { \"jquery\" : \"./lib/jquery2\" } } 2\u3001waitSeconds \u4e0b\u8f7djs\u7b49\u5f85\u65f6\u95f4\uff0c\u9ed8\u8ba47\u79d2 \u5982\u679c\u8bbe\u4e3a0\uff0c\u5219\u7981\u7528\u7b49\u5f85\u8d85\u65f6 3\u3001urlArgs \u4e0b\u8f7d\u6587\u4ef6\u65f6\uff0c\u5728url\u540e\u9762\u589e\u52a0\u989d\u5916\u7684\u67e5\u8be2query\u53c2\u6570 urlArgs : \"_=\" + ( new Date ()). getTime ()","title":"\u5176\u4ed6\u5e38\u7528\u914d\u7f6e"},{"location":"JavaScript/Requirejs\u548c\u81ea\u52a8\u6253\u5305/#jsonp","text":"jsonp\u7684\u4e00\u79cd\u4f7f\u7528\u6a21\u5f0f\uff0c\u53ef\u4ee5\u8de8\u57df\u83b7\u53d6\u6570\u636e\uff0c\u5982json \u540c\u6e90\u7b56\u7565\uff1a www.baidu.com \u901a\u8fc7ajax\u4e0d\u80fd\u83b7\u53d6www.qq.com\u7684\u6570\u636e 1\u3001jsonp\u5b9e\u73b0 \u901a\u8fc7script\u8de8\u57df\u8bf7\u6c42\u83b7\u53d6\u6570\u636e < script src = \"http://www.baidu.com/user.js?callback=onloaded\" ></ script > \u540e\u7aef\u901a\u8fc7callback\u83b7\u53d6\u53c2\u6570\u503conloaded onloaded ({ name : \"Tom\" , age : 23 }) 2\u3001ajax\u8bf7\u6c42 $ . ajax ( { url : \"http://127.0.0.1:5000/static/js/app/user.js\" , dataType : \"jsonp\" , // \u6ce8\u610f\u53c2\u6570\u662fjsonp success : function ( data ) { console . log ( data ); } } ); 3\u3001require.js\u5b9e\u73b0jsonp require ([ \"http://www.baidu.com/user.js\" ], function ( user ){ }) user.js define ({ name : \"Tom\" , age : 23 })","title":"jsonp\u670d\u52a1"},{"location":"JavaScript/Requirejs\u548c\u81ea\u52a8\u6253\u5305/#textjs","text":"https://github.com/requirejs/text \u7528\u4e8e\u52a0\u8f7d\u6587\u672c // \u6ce8\u610f\u524d\u7f00 strip\u53ea\u8981body\u90e8\u5206\u7684\u5185\u5bb9 require ([ \"text!/user.html!strip\" ], function ( template ) { $ ( # userinfo ). html ( template ); }) text.js\u914d\u7f6e requirejs . config ({ config : { // \u4e0d\u8981\u5c11\u4e86\u8fd9\u4e2a text : { onXhr : function ( xhr , url ){ // \u8bf7\u6c42\u4e4b\u524d\u8bbe\u7f6e // \u8bbe\u7f6e\u8bf7\u6c42\u5934 xhr . setRequestHeader ( \"X-Requested-With\" , \"XMLHttpRequest\" ); }, createXhr : function (){ // \u8bf7\u6c42\u65f6\u8bbe\u7f6e }, onXhrComplete : function ( xhr , url ){ // \u8bf7\u6c42\u5b8c\u6210\u540e\u8bbe\u7f6e } } } })","title":"text.js\u63d2\u4ef6"},{"location":"JavaScript/Requirejs\u548c\u81ea\u52a8\u6253\u5305/#cssjs","text":"\u52a0\u8f7d\u6837\u5f0f\u6587\u4ef6 https://github.com/guybedford/require-css paths : { \"css\" : \"./lib/require/css\" } \u6216\u8005 map : { \"*\" : { \"css\" : \"./lib/require/css\" } } // \u52a0\u8f7d require ([ \"css!/static/css/bootstrap.css\" ], function () { } \u52a0\u8f7djs\u4f9d\u8d56\u7684\u65f6\u5019\u540c\u65f6\u52a0\u8f7dcss\u6587\u4ef6 paths : { \"jquery\" : \"./lib/jquery\" , \"css\" : \"./lib/require/css\" , \"bootstrap\" : \"./lib/bootstrap\" }, shim : { \"bootstrap\" : [ \"jquery\" , \"css!/static/css/bootstrap.css\" , \"css!/static/css/bootstrap-theme.css\" ] }, // \u52a0\u8f7d require ([ \"bootstrap\" ], function () { }","title":"css.js\u63d2\u4ef6"},{"location":"JavaScript/Requirejs\u548c\u81ea\u52a8\u6253\u5305/#i18n","text":"\u652f\u6301\u56fd\u9645\u5316\u591a\u8bed\u8a00 https://github.com/requirejs/i18n \u8c03\u7528\u65b9\u5f0f require ([ \"i18n!./nls/message\" ], function ( i18n ){ $ ( \"#user\" ). after ( \"<button class='btn btn-primary'>\" + i18n . edit + \"</button>\" ); }) \u76ee\u5f55\u7ed3\u6784 \u6587\u4ef6\u5939\u540d\u79f0\u56fa\u5b9a\u4e3anls nls - en - message . js define ({ \"edit\" : \"Edit\" }) - zh - message . js define ({ \"edit\" : \"\u7f16\u8f91\" }) - message . js define ({ \"zh\" : true , \"en\" : true }) \u4ece\u6d4f\u89c8\u5668\u4e2d\u83b7\u53d6\u8bed\u8a00 navigator . language navigator . userLanguage \u914d\u7f6e\u9ed8\u8ba4\u8bed\u8a00 config : { i18n : { locale : \"zh\" } } \u4ececookie\u4e2d\u83b7\u53d6\u8bed\u8a00 \u8bbe\u7f6e\u6d4f\u89c8\u5668cookie $ document.cookie = 'language=zh_CN' # \u4e2d\u6587 $ document.cookie = 'language=en_US' # \u82f1\u6587 // \u4ece\u6d4f\u89c8\u5668cookie\u4e2d\u83b7\u53d6\u8bed\u8a00 var language = document . cookie . match ( /language=([^;]+)/ ); var locale = \"zh\" ; if ( language ){ locale = language [ 1 ]. split ( \"_\" )[ 0 ]; console . log ( locale ); } // \u4fee\u6539\u914d\u7f6e config : { i18n : { locale : locale } }","title":"i18n\u63d2\u4ef6"},{"location":"JavaScript/Requirejs\u548c\u81ea\u52a8\u6253\u5305/#rjs","text":"\u4e0b\u8f7d\u6267\u884c https://github.com/requirejs/r.js $ node r.js -o bashUrl = js name = app out = built.js \u5b89\u88c5\u6267\u884c $ npm install -g requirejs $ r.js -o bashUrl = js name = app out = built.js \u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u6253\u5305 r . js - o app . build . js app.build.js ( { appDir : \"./src\" , // \u8981\u6253\u5305\u7684\u6839\u76ee\u5f55 bashUrl : \"./js\" , // js\u6587\u4ef6\u5728\u8fd9\u4e2abaseUrl\u4e0b dir : \"./build\" , // \u6253\u5305\u540e\u7684\u8f93\u51fa\u76ee\u5f55 mainConfigFile : \"src/js/require.config.js\" , // requirejs\u7684\u914d\u7f6e\u6587\u4ef6 name : \"app\" } )","title":"r.js\u6253\u5305\u5de5\u5177"},{"location":"JavaScript/Requirejs\u548c\u81ea\u52a8\u6253\u5305/#_4","text":"app.build.js ( { appDir : \" ./src \" , // \u8981\u6253\u5305\u7684\u6839\u76ee\u5f55 bashUrl : \" ./js \" , // js \u6587\u4ef6\u5728\u8fd9\u4e2a baseUrl \u4e0b dir : \" ./build \" , // \u6253\u5305\u540e\u7684\u8f93\u51fa\u76ee\u5f55 mainConfigFile : \" src/js/require.config.js \" , // requirejs \u7684\u914d\u7f6e\u6587\u4ef6 models : [ { name : \" app \" , // optimize : ' uglify ' // \u538b\u7f29\u65b9\u5f0f \" none \" include : [ \" foo/bar/bee \" ] // \u6dfb\u52a0\u4e00\u8d77\u6253\u5305 }, { name : \" user \" , exclude : [ \" foo/bar/bop \" ] // \u79fb\u9664\u4e0d\u6253\u5305 } ] } )","title":"\u591a\u6a21\u5757\u6253\u5305"},{"location":"JavaScript/Requirejs\u548c\u81ea\u52a8\u6253\u5305/#_5","text":"text css","title":"\u63d2\u4ef6\u6253\u5305"},{"location":"JavaScript/Requirejs\u548c\u81ea\u52a8\u6253\u5305/#npm","text":"$ npm init $ npm run-script <command> $ npm run # \u7b80\u5199 \"script\" : { \"package\" : \"node r.js -o app.build.js\" }","title":"npm\u6253\u5305"},{"location":"JavaScript/Requirejs\u548c\u81ea\u52a8\u6253\u5305/#maven-npm","text":"frontend-maven-plugin","title":"maven+ npm\u81ea\u52a8\u6253\u5305"},{"location":"JavaScript/Tampermonkey/","text":"Tampermonkey \u4e0b\u8f7d\u5b89\u88c5 https://www.tampermonkey.net/ \u5b9e\u7528\u811a\u672c https://greasyfork.org/zh-CN/scripts \u63a5\u53e3\u6587\u6863 https://www.tampermonkey.net/documentation.php \u4e0b\u9762\u7b80\u5355\u4ecb\u7ecd\u4e0b UserScript Header \u7684\u4e00\u4e9b\u53c2\u6570\u5b9a\u4e49\u3002 \u2022@name\uff1a\u811a\u672c\u7684\u540d\u79f0\uff0c\u5c31\u662f\u5728\u63a7\u5236\u9762\u677f\u663e\u793a\u7684\u811a\u672c\u540d\u79f0\u3002 \u2022@namespace\uff1a\u811a\u672c\u7684\u547d\u540d\u7a7a\u95f4\u3002 \u2022@version\uff1a\u811a\u672c\u7684\u7248\u672c\uff0c\u4e3b\u8981\u662f\u505a\u7248\u672c\u66f4\u65b0\u65f6\u7528\u3002 \u2022@author\uff1a\u4f5c\u8005\u3002 \u2022@description\uff1a\u811a\u672c\u63cf\u8ff0\u3002 \u2022@homepage, @homepageURL, @website\uff0c@source\uff1a\u4f5c\u8005\u4e3b\u9875\uff0c\u7528\u4e8e\u5728Tampermonkey\u9009\u9879\u9875\u9762\u4e0a\u4ece\u811a\u672c\u540d\u79f0\u70b9\u51fb\u8df3\u8f6c\u3002\u8bf7\u6ce8\u610f\uff0c\u5982\u679c @namespace \u6807\u8bb0\u4ee5 http://\u5f00\u5934\uff0c\u6b64\u5904\u4e5f\u8981\u4e00\u6837\u3002 \u2022@icon, @iconURL and @defaulticon\uff1a\u4f4e\u5206\u8fa8\u7387\u56fe\u6807\u3002 \u2022@icon64 and @icon64URL\uff1a64x64 \u9ad8\u5206\u8fa8\u7387\u56fe\u6807\u3002 \u2022@updateURL\uff1a\u68c0\u67e5\u66f4\u65b0\u7684\u7f51\u5740\uff0c\u9700\u8981\u5b9a\u4e49 @version\u3002 \u2022@downloadURL\uff1a\u66f4\u65b0\u4e0b\u8f7d\u811a\u672c\u7684\u7f51\u5740\uff0c\u5982\u679c\u5b9a\u4e49\u6210 none \u5c31\u4e0d\u4f1a\u68c0\u67e5\u66f4\u65b0\u3002 \u2022@supportURL\uff1a\u62a5\u544a\u95ee\u9898\u7684\u7f51\u5740\u3002 \u2022@include\uff1a\u751f\u6548\u9875\u9762\uff0c\u53ef\u4ee5\u914d\u7f6e\u591a\u4e2a\uff0c\u4f46\u6ce8\u610f\u8fd9\u91cc\u5e76\u4e0d\u652f\u6301 URL Hash\u3002\u4f8b\u5982\uff1a // @ include http : // www . tampermonkey . net /* // @include http://* // @include https://* // @include * \u2022@match\uff1a\u7ea6\u7b49\u4e8e @include \u6807\u7b7e\uff0c\u53ef\u4ee5\u914d\u7f6e\u591a\u4e2a\u3002 \u2022@exclude\uff1a\u4e0d\u751f\u6548\u9875\u9762\uff0c\u53ef\u914d\u7f6e\u591a\u4e2a\uff0c\u4f18\u5148\u7ea7\u9ad8\u4e8e @include \u548c @match\u3002 \u2022@require\uff1a\u9644\u52a0\u811a\u672c\u7f51\u5740\uff0c\u76f8\u5f53\u4e8e\u5f15\u5165\u5916\u90e8\u7684\u811a\u672c\uff0c\u8fd9\u4e9b\u811a\u672c\u4f1a\u5728\u81ea\u5b9a\u4e49\u811a\u672c\u6267\u884c\u4e4b\u524d\u6267\u884c\uff0c\u6bd4\u5982\u5f15\u5165\u4e00\u4e9b\u5fc5\u987b\u7684\u5e93\uff0c\u5982 jQuery \u7b49\uff0c\u8fd9\u91cc\u53ef\u4ee5\u652f\u6301\u914d\u7f6e\u591a\u4e2a @require \u53c2\u6570\u3002\u4f8b\u5982\uff1a // @require https://code.jquery.com/jquery-2.1.4.min.js // @require https://code.jquery.com/jquery-2.1.3.min.js#sha256=23456... // @require https://code.jquery.com/jquery-2.1.2.min.js#md5=34567...,sha256=6789... \u2022@resource\uff1a\u9884\u52a0\u8f7d\u8d44\u6e90\uff0c\u53ef\u901a\u8fc7 GM_getResourceURL \u548c GM_getResourceText \u8bfb\u53d6\u3002 \u2022@connect\uff1a\u5141\u8bb8\u88ab GM_xmlhttpRequest \u8bbf\u95ee\u7684\u57df\u540d\uff0c\u6bcf\u884c\u4e00\u4e2a\u3002 \u2022@run-at\uff1a\u811a\u672c\u6ce8\u5165\u7684\u65f6\u523b\uff0c\u5982\u9875\u9762\u521a\u52a0\u8f7d\u65f6\uff0c\u67d0\u4e2a\u4e8b\u4ef6\u53d1\u751f\u540e\u7b49\u7b49\u3002\u4f8b\u5982\uff1a \u2022document-start\uff1a\u5c3d\u53ef\u80fd\u5730\u65e9\u6267\u884c\u6b64\u811a\u672c\u3002 \u2022document-body\uff1aDOM \u7684 body \u51fa\u73b0\u65f6\u6267\u884c\u3002 \u2022document-end\uff1aDOMContentLoaded \u4e8b\u4ef6\u53d1\u751f\u65f6\u6216\u53d1\u751f\u540e\u540e\u6267\u884c\u3002 \u2022document-idle\uff1aDOMContentLoaded \u4e8b\u4ef6\u53d1\u751f\u540e\u6267\u884c\uff0c\u5373 DOM \u52a0\u8f7d\u5b8c\u6210\u4e4b\u540e\u6267\u884c\uff0c\u8fd9\u662f\u9ed8\u8ba4\u7684\u9009\u9879\u3002 \u2022context-menu\uff1a\u5982\u679c\u5728\u6d4f\u89c8\u5668\u4e0a\u4e0b\u6587\u83dc\u5355\uff08\u4ec5\u9650\u684c\u9762 Chrome \u6d4f\u89c8\u5668\uff09\u4e2d\u70b9\u51fb\u8be5\u811a\u672c\uff0c\u5219\u4f1a\u6ce8\u5165\u8be5\u811a\u672c\u3002\u6ce8\u610f\uff1a\u5982\u679c\u4f7f\u7528\u6b64\u503c\uff0c\u5219\u5c06\u5ffd\u7565\u6240\u6709 @include \u548c @exclude \u8bed\u53e5\u3002 \u2022@grant\uff1a\u7528\u4e8e\u6dfb\u52a0 GM \u51fd\u6570\u5230\u767d\u540d\u5355\uff0c\u76f8\u5f53\u4e8e\u6388\u6743\u67d0\u4e9b GM \u51fd\u6570\u7684\u4f7f\u7528\u6743\u9650\u3002\u4f8b\u5982\uff1a // @grant GM_setValue // @grant GM_getValue // @grant GM_setClipboard // @grant unsafeWindow // @grant window.close // @grant window.focus \u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u8fc7 @grant \u9009\u9879\uff0cTampermonkey \u4f1a\u731c\u6d4b\u6240\u9700\u8981\u7684\u51fd\u6570\u4f7f\u7528\u60c5\u51b5\u3002 \u2022@noframes\uff1a\u6b64\u6807\u8bb0\u4f7f\u811a\u672c\u5728\u4e3b\u9875\u9762\u4e0a\u8fd0\u884c\uff0c\u4f46\u4e0d\u4f1a\u5728 iframe \u4e0a\u8fd0\u884c\u3002 \u2022@nocompat\uff1a\u7531\u4e8e\u90e8\u5206\u4ee3\u7801\u53ef\u80fd\u662f\u4e13\u95e8\u4e3a\u4e13\u95e8\u7684\u6d4f\u89c8\u5668\u6240\u5199\uff0c\u901a\u8fc7\u6b64\u6807\u8bb0\uff0cTampermonkey \u4f1a\u77e5\u9053\u811a\u672c\u53ef\u4ee5\u8fd0\u884c\u7684\u6d4f\u89c8\u5668\u3002\u4f8b\u5982\uff1a // @nocompat Chrome \u8fd9\u6837\u5c31\u6307\u5b9a\u4e86\u811a\u672c\u53ea\u5728 Chrome \u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u3002 \u9664\u6b64\u4e4b\u5916\uff0cTampermonkey \u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e9b API\uff0c\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u65b9\u4fbf\u5730\u5b8c\u6210\u67d0\u4e2a\u64cd\u4f5c\uff0c\u5982\uff1a \u2022GM_log\uff1a\u5c06\u65e5\u5fd7\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u3002 \u2022GM_setValue\uff1a\u5c06\u53c2\u6570\u5185\u5bb9\u4fdd\u5b58\u5230 Storage \u4e2d\u3002 \u2022GM_addValueChangeListener\uff1a\u4e3a\u67d0\u4e2a\u53d8\u91cf\u6dfb\u52a0\u76d1\u542c\uff0c\u5f53\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\u6539\u53d8\u65f6\uff0c\u5c31\u4f1a\u89e6\u53d1\u56de\u8c03\u3002 \u2022GM_xmlhttpRequest\uff1a\u53d1\u8d77 Ajax \u8bf7\u6c42\u3002 \u2022GM_download\uff1a\u4e0b\u8f7d\u67d0\u4e2a\u6587\u4ef6\u5230\u78c1\u76d8\u3002 \u2022GM_setClipboard\uff1a\u5c06\u67d0\u4e2a\u5185\u5bb9\u4fdd\u5b58\u5230\u7c98\u8d34\u677f\u3002 \u53c2\u8003\uff1a https://mp.weixin.qq.com/s/r3MUVEPos2Rm5uKno8HysQ","title":"Tampermonkey"},{"location":"JavaScript/TypeScript/","text":"\u5b89\u88c5\u73af\u5883 npm install - g typescript $ tsc - v Version 3 . 7 . 4 Hello World demo.ts const hello : string = \"hello world\" console . log ( hello ); ts -> js $ tsc demo.ts \u8f6c\u6362\u7ed3\u679c var hello = \"hello world\" ; console . log ( hello ); \u6267\u884cjs $ node demo.js","title":"TypeScript"},{"location":"JavaScript/TypeScript\u5165\u95e8/","text":"TypeScript\u5165\u95e8 \u7b80\u4ecb \u5fae\u8f6f\u5f00\u53d1 Javascript\u8d85\u96c6 \u9075\u5faaES6 Google \u4f7f\u7528 TypeScript \u5f00\u53d1\u4e86 Angular2\u6846\u67b6 \u8fd0\u884c\u73af\u5883 \u6982\u5ff5\uff0c\u8bed\u6cd5\uff0c\u7279\u6027 ES5\u3001ES6 \u662fTypeScript\u89c4\u8303 TypeScript \u662fJavaScript \u8d85\u96c6 TypeScript - compiler -> JavaScript \u5728\u7ebfcompiler http://www.typescriptlang.org/index.html \u5b89\u88c5\u5f00\u53d1\u73af\u5883 # \u786e\u4fddnpm\u5df2\u5b89\u88c5 npm --version 6 .9.0 # \u5b89\u88c5 npm install -g typescript # \u67e5\u770b\u7248\u672c tsc --version Version 3 .7.4 # \u7f16\u8bd1 tsc demo.ts demo.ts exports class Demo {} \u8f6c\u6362\u540e\u7684\u4ee3\u7801 \"use strict\" ; exports . __esModule = true ; var Demo = /** @class */ ( function () { function Demo () { } return Demo ; }()); exports . Demo = Demo ; \u4f7f\u7528IDE WebStrom \u914d\u7f6e\u4fdd\u5b58\u7f16\u8bd1 1\u3001\u6253\u5f00 WebStrom -> Preferences -> Languages & Frameworks -> TypeScript 2\u3001\u8bbe\u7f6e Node interpreter \u548c TypeScript 3\u3001\u52fe\u9009 Recompile on changes \u5b57\u7b26\u4e32\u7279\u6027 1\u3001\u591a\u884c\u5b57\u7b26\u4e32 var name = ` first line second line ` 2\u3001\u5b57\u7b26\u4e32\u6a21\u677f var name = `hello ${ name } ${ getName () } ` 3\u3001\u81ea\u52a8\u62c6\u5206\u5b57\u7b26\u4e32 function test ( template , name , age ){ } var name = 'Tom' , var getAge = function (){ return 18 } test `my name is ${ name } i'm ${ age } ` //\u76f8\u5f53\u4e8e test([\"my name is \", \" i'm \", \"\"], name, age) 4\u3001\u6307\u5b9a\u7c7b\u578b // \u6307\u5b9a\u53d8\u91cf\u7c7b\u578b var woname : string = \"Tom\" ; var alias : any = '12' ; var age : number = 12 ; var man : boolean = true ; // \u5b9a\u4e49\u7c7b\u4e2d\u5143\u7d20\u7c7b\u578b class Person { name : string ; age : number ; } var person = new Person (); person . name = \"Jack\" ; person . age = 23 ; console . log ( person ); 5\u3001\u51fd\u6570\u53c2\u6570 // \u6307\u5b9a\u51fd\u6570\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7c7b\u578b function test ( name : string ) : void { } // \u8bbe\u7f6e\u9ed8\u8ba4\u53c2\u6570, \u8981\u58f0\u660e\u5230\u6700\u540e function test2 ( name : string = 'default' ) : void { } // \u8bbe\u7f6e\u53ef\u9009\u53c2\u6570,\u8981\u58f0\u660e\u660e\u5230\u5fc5\u9009\u53c2\u6570\u4e4b\u540e function test3 ( age ?: number , name : string = 'default' ) : void { } test2 ( 'demo' ) test3 () // \u4efb\u610f\u6570\u91cf\u53c2\u6570 function test4 (... args ) { args . forEach ( arg => { console . log ( arg ); }) } test4 ( 1 , 2 , 3 ) // \u89e3\u5305\u6570\u7ec4ts\u4e0d\u652f\u6301 function test5 ( a , b , c ) { } var args = [ 1 , 2 , 3 ] test5 (... args ) 6\u3001generator\u51fd\u6570 // generator\u51fd\u6570\uff0c\u624b\u5de5\u63a7\u5236\u7a0b\u5e8f\u6267\u884c ts\u4e0d\u652f\u6301 // babeljs: https://www.babeljs.cn/repl function * test6 () { yield ; console . log ( \"log\" ); } test6 (). next () function * getStock ( num : number ) { let count = 0 while ( true ) { yield Math . random () if ( count > num ) { break } } } console . log ( getStock (). next (). value ) 7\u3001\u6790\u6784\u8868\u8fbe\u5f0f // \u5bf9\u8c61\u6790\u6784\u8868\u8fbe\u5f0f, \u53ef\u4ee5\u53d6\u522b\u540d, \u83b7\u53d6\u5d4c\u5957\u8868\u8fbe\u5f0f\u5185\u5bb9,\u53ef\u4ee5\u6709\u591a\u4f59\u7684\u503c const { name1 : name2 , age1 : { age2 } } = { name1 : \"Tom\" , age1 : { age2 : 23 }, } console . log ( name2 , age2 ); // \u6570\u7ec4\u6790\u6784\u8868\u8fbe\u5f0f\uff0c\u4f4d\u7f6e\u53d6 var [ a , b , ... others ] = [ 1 , 2 , 3 , 4 ]; console . log ( a , b , others ); // 1 2 [ 3, 4 ] 8\u3001\u7bad\u5934\u51fd\u6570 // \u7bad\u5934\u51fd\u6570\u533f\u540d\u8868\u8fbe\u5f0f, \u6d88\u9664this\u5e26\u6765\u7684\u95ee\u9898 var sum = ( arg1 , arg2 ) => { arg1 + arg2 }; console . log ([ 1 , 2 , 3 , 4 ]. filter ( value => value % 2 == 0 )); // [ 2, 4 ] 9\u3001\u5faa\u73af // forEach \u5faa\u73af var list = [ 1 , 2 , 3 ]; list . forEach ( value => { console . log ( value ); }); // for-in\u5faa\u73af\u6253\u5370\u4e0b\u6807 for ( let index in list ) { console . log ( index ); } // for-of\u5faa\u73af\u6253\u5370\u503c for ( let value of list ) { console . log ( value ); } // \u6253\u5370\u5b57\u7b26\u4e32 // for (let s of 'munber') { // console.log(s); // } 10\u3001\u9762\u5411\u5bf9\u8c61 // class\u662fTS\u548c\u6838\u5fc3 class Student { // \u8bbf\u95ee\u63a7\u5236\u7b26\uff0c\u9ed8\u8ba4 public name ; // \u5916\u90e8\u4e0d\u80fd\u8bbf\u95ee\uff0c\u53ea\u80fd\u5728\u5185\u90e8\u8bbf\u95ee private age ; // \u5185\u90e8\u548c\u5b50\u7c7b\u8bbf\u95ee\uff0c\u5916\u90e8\u4e0d\u80fd\u8bbf\u95ee protected sex ; // \u6784\u9020\u51fd\u6570\uff0c\u5b9e\u4f8b\u5316\u65f6\u5019\u88ab\u8c03\u7528, \u53ef\u4ee5\u7533\u660e\u5c5e\u6027 constructor ( public school : string ) { console . log ( \"constructor\" ); } eat () { console . log ( \"eat\" ); } } // \u5b9e\u4f8b\u5316 let s1 = new Student ( 'school' ); s1 . name = 'Tom' ; console . log ( s1 . school ); s1 . eat (); 11\u3001\u7c7b\u7684\u7ee7\u627f class LittleStudent extends Student { // \u5b50\u7c7b\u81ea\u5df1\u7684\u6570\u636e code : string ; constructor ( code : string ) { // \u5fc5\u987b\u8981\u8c03\u7528\u7236\u7c7b\u6784\u9020\u51fd\u6570 super ( 'school' ); this . code = code ; console . log ( \"LittleStudent\" ); } work () { // \u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5 super . eat (); this . eat (); } } let ls1 = new LittleStudent ( 'LittleStudent' ); ls1 . eat (); ls1 . work (); 12\u3001\u6cdb\u578b // \u6cdb\u578b \u53ea\u80fd\u653e\u67d0\u4e2a\u7c7b\u578b\u5143\u7d20 let intList : Array < number > = []; intList . push ( 1 ); // intList.push('2'); \u62a5\u9519 13\u3001\u63a5\u53e3 // \u63a5\u53e3 \u4ee3\u7801\u7ea6\u5b9a interface IHuman { name : string ; age : number ; } class HumanImpl implements IHuman { // \u5b9e\u73b0\u63a5\u53e3\u7684\u5185\u5bb9 name : string ; age : number ; constructor ( public config : IHuman ) { } } new HumanImpl ({ name : 't' , age : 12 }); 14\u3001\u6a21\u5757\uff0c\u91cd\u7528\u5355\u5143 a.ts // \u4e0d\u5bf9\u5916\u66b4\u9732 var var0 ; function func0 () { } class Clazz0 { } // \u5bf9\u5916\u66b4\u9732 export var var1 ; export function func1 () { } export class Clazz1 { } b.ts // \u5bfc\u5165\u5176\u4ed6\u6a21\u5757\u5bf9\u5916\u66b4\u9732\u7684\u5185\u5bb9 import { var1 , func1 , Clazz1 } from './a' ; console . log ( var1 ); func1 () new Clazz1 () 15\u3001\u6ce8\u89e3 \u8bf4\u660e\u4fe1\u606f\uff0c\u4e0e\u4e1a\u52a1\u903b\u8f91\u65e0\u5173 16\u3001\u7c7b\u578b\u5b9a\u4e49\u6587\u4ef6 \u7c7b\u578b\u5b9a\u4e49\u6587\u4ef6 *.d.ts \u4f7f\u7528\u5df2\u6709\u7684\u5de5\u5177\u5305\uff0c\u5982JQuery github \u5de5\u5177 typings 17\u3001\u603b\u7ed3 \u57fa\u672c\u6982\u5ff5\u548c\u4f18\u52bf \u5f00\u53d1\u73af\u5883 \u8bed\u6cd5\u7279\u6027","title":"TypeScript\u5165\u95e8"},{"location":"JavaScript/TypeScript\u5165\u95e8/#typescript","text":"","title":"TypeScript\u5165\u95e8"},{"location":"JavaScript/TypeScript\u5165\u95e8/#_1","text":"\u5fae\u8f6f\u5f00\u53d1 Javascript\u8d85\u96c6 \u9075\u5faaES6 Google \u4f7f\u7528 TypeScript \u5f00\u53d1\u4e86 Angular2\u6846\u67b6 \u8fd0\u884c\u73af\u5883 \u6982\u5ff5\uff0c\u8bed\u6cd5\uff0c\u7279\u6027 ES5\u3001ES6 \u662fTypeScript\u89c4\u8303 TypeScript \u662fJavaScript \u8d85\u96c6 TypeScript - compiler -> JavaScript \u5728\u7ebfcompiler http://www.typescriptlang.org/index.html \u5b89\u88c5\u5f00\u53d1\u73af\u5883 # \u786e\u4fddnpm\u5df2\u5b89\u88c5 npm --version 6 .9.0 # \u5b89\u88c5 npm install -g typescript # \u67e5\u770b\u7248\u672c tsc --version Version 3 .7.4 # \u7f16\u8bd1 tsc demo.ts demo.ts exports class Demo {} \u8f6c\u6362\u540e\u7684\u4ee3\u7801 \"use strict\" ; exports . __esModule = true ; var Demo = /** @class */ ( function () { function Demo () { } return Demo ; }()); exports . Demo = Demo ; \u4f7f\u7528IDE WebStrom \u914d\u7f6e\u4fdd\u5b58\u7f16\u8bd1 1\u3001\u6253\u5f00 WebStrom -> Preferences -> Languages & Frameworks -> TypeScript 2\u3001\u8bbe\u7f6e Node interpreter \u548c TypeScript 3\u3001\u52fe\u9009 Recompile on changes \u5b57\u7b26\u4e32\u7279\u6027 1\u3001\u591a\u884c\u5b57\u7b26\u4e32 var name = ` first line second line ` 2\u3001\u5b57\u7b26\u4e32\u6a21\u677f var name = `hello ${ name } ${ getName () } ` 3\u3001\u81ea\u52a8\u62c6\u5206\u5b57\u7b26\u4e32 function test ( template , name , age ){ } var name = 'Tom' , var getAge = function (){ return 18 } test `my name is ${ name } i'm ${ age } ` //\u76f8\u5f53\u4e8e test([\"my name is \", \" i'm \", \"\"], name, age) 4\u3001\u6307\u5b9a\u7c7b\u578b // \u6307\u5b9a\u53d8\u91cf\u7c7b\u578b var woname : string = \"Tom\" ; var alias : any = '12' ; var age : number = 12 ; var man : boolean = true ; // \u5b9a\u4e49\u7c7b\u4e2d\u5143\u7d20\u7c7b\u578b class Person { name : string ; age : number ; } var person = new Person (); person . name = \"Jack\" ; person . age = 23 ; console . log ( person ); 5\u3001\u51fd\u6570\u53c2\u6570 // \u6307\u5b9a\u51fd\u6570\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7c7b\u578b function test ( name : string ) : void { } // \u8bbe\u7f6e\u9ed8\u8ba4\u53c2\u6570, \u8981\u58f0\u660e\u5230\u6700\u540e function test2 ( name : string = 'default' ) : void { } // \u8bbe\u7f6e\u53ef\u9009\u53c2\u6570,\u8981\u58f0\u660e\u660e\u5230\u5fc5\u9009\u53c2\u6570\u4e4b\u540e function test3 ( age ?: number , name : string = 'default' ) : void { } test2 ( 'demo' ) test3 () // \u4efb\u610f\u6570\u91cf\u53c2\u6570 function test4 (... args ) { args . forEach ( arg => { console . log ( arg ); }) } test4 ( 1 , 2 , 3 ) // \u89e3\u5305\u6570\u7ec4ts\u4e0d\u652f\u6301 function test5 ( a , b , c ) { } var args = [ 1 , 2 , 3 ] test5 (... args ) 6\u3001generator\u51fd\u6570 // generator\u51fd\u6570\uff0c\u624b\u5de5\u63a7\u5236\u7a0b\u5e8f\u6267\u884c ts\u4e0d\u652f\u6301 // babeljs: https://www.babeljs.cn/repl function * test6 () { yield ; console . log ( \"log\" ); } test6 (). next () function * getStock ( num : number ) { let count = 0 while ( true ) { yield Math . random () if ( count > num ) { break } } } console . log ( getStock (). next (). value ) 7\u3001\u6790\u6784\u8868\u8fbe\u5f0f // \u5bf9\u8c61\u6790\u6784\u8868\u8fbe\u5f0f, \u53ef\u4ee5\u53d6\u522b\u540d, \u83b7\u53d6\u5d4c\u5957\u8868\u8fbe\u5f0f\u5185\u5bb9,\u53ef\u4ee5\u6709\u591a\u4f59\u7684\u503c const { name1 : name2 , age1 : { age2 } } = { name1 : \"Tom\" , age1 : { age2 : 23 }, } console . log ( name2 , age2 ); // \u6570\u7ec4\u6790\u6784\u8868\u8fbe\u5f0f\uff0c\u4f4d\u7f6e\u53d6 var [ a , b , ... others ] = [ 1 , 2 , 3 , 4 ]; console . log ( a , b , others ); // 1 2 [ 3, 4 ] 8\u3001\u7bad\u5934\u51fd\u6570 // \u7bad\u5934\u51fd\u6570\u533f\u540d\u8868\u8fbe\u5f0f, \u6d88\u9664this\u5e26\u6765\u7684\u95ee\u9898 var sum = ( arg1 , arg2 ) => { arg1 + arg2 }; console . log ([ 1 , 2 , 3 , 4 ]. filter ( value => value % 2 == 0 )); // [ 2, 4 ] 9\u3001\u5faa\u73af // forEach \u5faa\u73af var list = [ 1 , 2 , 3 ]; list . forEach ( value => { console . log ( value ); }); // for-in\u5faa\u73af\u6253\u5370\u4e0b\u6807 for ( let index in list ) { console . log ( index ); } // for-of\u5faa\u73af\u6253\u5370\u503c for ( let value of list ) { console . log ( value ); } // \u6253\u5370\u5b57\u7b26\u4e32 // for (let s of 'munber') { // console.log(s); // } 10\u3001\u9762\u5411\u5bf9\u8c61 // class\u662fTS\u548c\u6838\u5fc3 class Student { // \u8bbf\u95ee\u63a7\u5236\u7b26\uff0c\u9ed8\u8ba4 public name ; // \u5916\u90e8\u4e0d\u80fd\u8bbf\u95ee\uff0c\u53ea\u80fd\u5728\u5185\u90e8\u8bbf\u95ee private age ; // \u5185\u90e8\u548c\u5b50\u7c7b\u8bbf\u95ee\uff0c\u5916\u90e8\u4e0d\u80fd\u8bbf\u95ee protected sex ; // \u6784\u9020\u51fd\u6570\uff0c\u5b9e\u4f8b\u5316\u65f6\u5019\u88ab\u8c03\u7528, \u53ef\u4ee5\u7533\u660e\u5c5e\u6027 constructor ( public school : string ) { console . log ( \"constructor\" ); } eat () { console . log ( \"eat\" ); } } // \u5b9e\u4f8b\u5316 let s1 = new Student ( 'school' ); s1 . name = 'Tom' ; console . log ( s1 . school ); s1 . eat (); 11\u3001\u7c7b\u7684\u7ee7\u627f class LittleStudent extends Student { // \u5b50\u7c7b\u81ea\u5df1\u7684\u6570\u636e code : string ; constructor ( code : string ) { // \u5fc5\u987b\u8981\u8c03\u7528\u7236\u7c7b\u6784\u9020\u51fd\u6570 super ( 'school' ); this . code = code ; console . log ( \"LittleStudent\" ); } work () { // \u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5 super . eat (); this . eat (); } } let ls1 = new LittleStudent ( 'LittleStudent' ); ls1 . eat (); ls1 . work (); 12\u3001\u6cdb\u578b // \u6cdb\u578b \u53ea\u80fd\u653e\u67d0\u4e2a\u7c7b\u578b\u5143\u7d20 let intList : Array < number > = []; intList . push ( 1 ); // intList.push('2'); \u62a5\u9519 13\u3001\u63a5\u53e3 // \u63a5\u53e3 \u4ee3\u7801\u7ea6\u5b9a interface IHuman { name : string ; age : number ; } class HumanImpl implements IHuman { // \u5b9e\u73b0\u63a5\u53e3\u7684\u5185\u5bb9 name : string ; age : number ; constructor ( public config : IHuman ) { } } new HumanImpl ({ name : 't' , age : 12 }); 14\u3001\u6a21\u5757\uff0c\u91cd\u7528\u5355\u5143 a.ts // \u4e0d\u5bf9\u5916\u66b4\u9732 var var0 ; function func0 () { } class Clazz0 { } // \u5bf9\u5916\u66b4\u9732 export var var1 ; export function func1 () { } export class Clazz1 { } b.ts // \u5bfc\u5165\u5176\u4ed6\u6a21\u5757\u5bf9\u5916\u66b4\u9732\u7684\u5185\u5bb9 import { var1 , func1 , Clazz1 } from './a' ; console . log ( var1 ); func1 () new Clazz1 () 15\u3001\u6ce8\u89e3 \u8bf4\u660e\u4fe1\u606f\uff0c\u4e0e\u4e1a\u52a1\u903b\u8f91\u65e0\u5173 16\u3001\u7c7b\u578b\u5b9a\u4e49\u6587\u4ef6 \u7c7b\u578b\u5b9a\u4e49\u6587\u4ef6 *.d.ts \u4f7f\u7528\u5df2\u6709\u7684\u5de5\u5177\u5305\uff0c\u5982JQuery github \u5de5\u5177 typings 17\u3001\u603b\u7ed3 \u57fa\u672c\u6982\u5ff5\u548c\u4f18\u52bf \u5f00\u53d1\u73af\u5883 \u8bed\u6cd5\u7279\u6027","title":"\u7b80\u4ecb"},{"location":"JavaScript/VUE\u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT/","text":"VUE \u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT \u670d\u52a1\u5668\u7aef\u6e32\u67d3 \u5229\u4e8e SEO \u5ba2\u6237\u7aef\u6e32\u67d3 vue-server-renderer https://ssr.vuejs.org/zh/guide/ \u5b89\u88c5\u73af\u5883 npm install vue vue - server - renderer --save 1\u3001\u6e32\u67d3\u793a\u4f8b const Vue = require ( \"vue\" ); const VueServerRenderer = require ( \"vue-server-renderer\" ); // \u7b2c 1 \u6b65\uff1a\u521b\u5efa\u4e00\u4e2a Vue \u5b9e\u4f8b const app = new Vue ({ template : `<div>Hello {{name}}</div>` , data () { return { name : \"Tom\" , }; }, }); // \u7b2c 2 \u6b65\uff1a\u521b\u5efa\u4e00\u4e2a renderer const renderer = VueServerRenderer . createRenderer (); // \u7b2c 3 \u6b65\uff1a\u5c06 Vue \u5b9e\u4f8b\u6e32\u67d3\u4e3a HTML renderer . renderToString ( app ). then (( html ) => { console . log ( html ); }); // <div data-server-rendered=\"true\">Hello Tom</div> 2\u3001\u4e0e\u670d\u52a1\u7aef\u7ed3\u5408 npm install express --save const Vue = require ( \"vue\" ); const VueServerRenderer = require ( \"vue-server-renderer\" ); const express = require ( \"express\" ); // vue\u5b9e\u4f8b const app = new Vue ({ template : `<div>Hello {{name}}</div>` , data () { return { name : \"Tom\" , }; }, }); // \u6e32\u67d3\u5668 const renderer = VueServerRenderer . createRenderer (); // \u670d\u52a1 const server = express (); server . get ( \"*\" , async ( request , response ) => { const html = await renderer . renderToString ( app ); response . end ( html ); }); server . listen ( 8080 ); \u5b98\u65b9 Demo https://github.com/vuejs/vue-hackernews-2.0/ Nuxt 1\u3001\u4f7f\u7528 npx \u521b\u5efa\u9879\u76ee npx create-nuxt-app my-app # \u7b49\u4ef7\u4e8e npm install -g create-nuxt-app create-nuxt-app my-app \u5982\u679c\u901f\u5ea6\u6162\uff0c\u53ef\u4ee5\u914d\u7f6e\u56fd\u5185\u6e90 vim ~/.bash_profile alias cnpx = 'NPM_CONFIG_REGISTRY=https://registry.npm.taobao.org/ npx' 2\u3001\u76ee\u5f55\u7ed3\u6784 \u9759\u6001\u8d44\u6e90 assets \u4f1a\u88ab\u7f16\u8bd1 scss\u7b49 \u7ec4\u4ef6 components \u5e03\u5c40\u7ec4\u4ef6 layouts \u4e2d\u95f4\u4ef6 middleware \u9875\u9762\u8def\u7531 pages \u63d2\u4ef6\u76ee\u5f55 plugins \u6839 vue . js\u5e94\u7528 \u5b9e\u4f8b\u5316\u4e4b\u524d\u8fd0\u884c \u9759\u6001\u6587\u4ef6 static \u4e0d\u4f1a\u88ab\u7f16\u8bd1\u5904\u7406 \u5e94\u7528\u7684 Vuex \u72b6\u6001\u6811 store \u4e2a\u6027\u5316\u914d\u7f6e nuxt . config . js \u811a\u672c\u63a5\u53e3 package . json \u522b\u540d ~ \u6216 @ srcDir ~~ \u6216 @@ rootDir assets \u6216\u8005 static \u4f7f\u7528 ~ 3\u3001\u914d\u7f6e css npm install node - sass sass - loader --save-dev 4\u3001\u8def\u7531 < nuxt-link to = \"/\" ></ nuxt-link > pages \u76ee\u5f55\u4e0b\u4f1a\u81ea\u52a8\u751f\u6210 (1)\u57fa\u7840\u8def\u7531 pages / detail => / detail (2)\u52a8\u6001\u8def\u7531 pages / detail / _id . vue => / detail / 007 $ route . params . id == 007 (3)\u5d4c\u5957\u8def\u7531 pages / users . vue pages / users / index . vue (4)\u8fc7\u6e21\u52a8\u6548 assets/css/main.scss .page-enter-active , .page-leave-active { transition : opacity 0 .5s ; } .page-enter , .page-leave-active { opacity : 0 ; } nuxt.config.js\uff1a module . exports = { css : [ \"assets/css/main.scss\" ], }; 5\u3001\u4e2d\u95f4\u4ef6 middleware 6\u3001\u6a21\u677f app.html \u4e0d\u5efa\u8bae\u76f4\u63a5\u4fee\u6539 \u5e03\u5c40 layouts 7\u3001\u5f02\u6b65\u6570\u636e asyncData \u9875\u9762\u52a0\u8f7d\u4e4b\u524d static/data/user.json { \"name\" : \"Tom\" , \"age\" : 23 } pages/index.vue < template > < div class = \"container\" > {{ initData.name }} </ div > </ template > < script > import axios from \"axios\" ; export default { async asyncData ( context ) { const res = await axios . get ( \"http://localhost:3000/data/user.json\" ); console . log ( res ); return { initData : res . data , }; }, }; </ script > 8\u3001\u8d44\u6e90\u6587\u4ef6 assets \u4f1a\u88ab\u6253\u5305 static \u4e0d\u4f1a\u88ab\u6253\u5305 <!-- \u5f15\u7528 static \u76ee\u5f55\u4e0b\u7684\u56fe\u7247 --> < img src = \"/my-image.png\" /> <!-- \u5f15\u7528 assets \u76ee\u5f55\u4e0b\u7ecf\u8fc7 webpack \u6784\u5efa\u5904\u7406\u540e\u7684\u56fe\u7247 --> < img src = \"~/assets/my-image-2.png\" /> 9\u3001\u63d2\u4ef6 plugins/vue-notifications.js\uff1a import Vue from \"vue\" ; import VueNotifications from \"vue-notifications\" ; Vue . use ( VueNotifications ); \u914d\u7f6e plugins \u5982\u4e0b\uff1a module . exports = { plugins : [ \"@/plugins/vue-notifications\" ], }; 10\u3001\u6ce8\u5165 (1)\u6ce8\u5165 Vue \u5b9e\u4f8b plugins/vue-inject.js: import Vue from \"vue\" ; Vue . prototype . $debug = ( msg ) => console . log ( msg ); nuxt.config.js: export default { plugins : [ \"~/plugins/vue-inject.js\" ], }; (2)\u6ce8\u5165 context plugins/ctx-inject.js: export default ({ app }, inject ) => { // Set the function directly on the context.app object app . debug = ( msg ) => console . log ( msg ); }; nuxt.config.js: export default { plugins : [ \"~/plugins/ctx-inject.js\" ], }; (3)\u540c\u65f6\u6ce8\u5165 \u4f1a\u81ea\u52a8\u6dfb\u52a0\u524d\u7f00 $ export default ({ app }, inject ) => { inject ( \"debug\" , ( msg ) => console . log ( msg )); ); }; nuxt.config.js: export default { plugins : [ \"~/plugins/combined-inject.js\" ], }; 11\u3001\u72b6\u6001\u6811 fetch \u65b9\u6cd5\u4f1a\u5728\u6e32\u67d3\u9875\u9762\u524d\u88ab\u8c03\u7528\uff0c\u4f5c\u7528\u662f\u586b\u5145\u72b6\u6001\u6811 (store) \u6570\u636e \u4e0e asyncData \u65b9\u6cd5\u7c7b\u4f3c\uff0c\u4e0d\u540c\u7684\u662f\u5b83\u4e0d\u4f1a\u8bbe\u7f6e\u7ec4\u4ef6\u7684\u6570\u636e\u3002 nuxtServerInit\uff1a\u670d\u52a1\u7aef\u6570\u636e\u4f20\u7ed9\u5ba2\u6237\u7aef\u7684\u72b6\u6001\u6811 store/index.js export const state = () => ({ counter : 0 , }); export const mutations = { increment ( state ) { state . counter ++ ; }, }; pages/index.vue < p > {{$store.state.counter}} </ p > < button @ click = \"$store.commit('increment')\" > \u70b9\u51fb </ button > 12\u3001\u90e8\u7f72 \u5f00\u53d1 npm dev \u4e0a\u7ebf npm start \u5b66\u4e60\u89c6\u9891: VUE \u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT \u5b9e\u6218\u89c6\u9891","title":"VUE \u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT"},{"location":"JavaScript/VUE\u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT/#vue-nuxt","text":"\u670d\u52a1\u5668\u7aef\u6e32\u67d3 \u5229\u4e8e SEO \u5ba2\u6237\u7aef\u6e32\u67d3","title":"VUE \u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT"},{"location":"JavaScript/VUE\u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT/#vue-server-renderer","text":"https://ssr.vuejs.org/zh/guide/ \u5b89\u88c5\u73af\u5883 npm install vue vue - server - renderer --save 1\u3001\u6e32\u67d3\u793a\u4f8b const Vue = require ( \"vue\" ); const VueServerRenderer = require ( \"vue-server-renderer\" ); // \u7b2c 1 \u6b65\uff1a\u521b\u5efa\u4e00\u4e2a Vue \u5b9e\u4f8b const app = new Vue ({ template : `<div>Hello {{name}}</div>` , data () { return { name : \"Tom\" , }; }, }); // \u7b2c 2 \u6b65\uff1a\u521b\u5efa\u4e00\u4e2a renderer const renderer = VueServerRenderer . createRenderer (); // \u7b2c 3 \u6b65\uff1a\u5c06 Vue \u5b9e\u4f8b\u6e32\u67d3\u4e3a HTML renderer . renderToString ( app ). then (( html ) => { console . log ( html ); }); // <div data-server-rendered=\"true\">Hello Tom</div> 2\u3001\u4e0e\u670d\u52a1\u7aef\u7ed3\u5408 npm install express --save const Vue = require ( \"vue\" ); const VueServerRenderer = require ( \"vue-server-renderer\" ); const express = require ( \"express\" ); // vue\u5b9e\u4f8b const app = new Vue ({ template : `<div>Hello {{name}}</div>` , data () { return { name : \"Tom\" , }; }, }); // \u6e32\u67d3\u5668 const renderer = VueServerRenderer . createRenderer (); // \u670d\u52a1 const server = express (); server . get ( \"*\" , async ( request , response ) => { const html = await renderer . renderToString ( app ); response . end ( html ); }); server . listen ( 8080 ); \u5b98\u65b9 Demo https://github.com/vuejs/vue-hackernews-2.0/","title":"vue-server-renderer"},{"location":"JavaScript/VUE\u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT/#nuxt","text":"","title":"Nuxt"},{"location":"JavaScript/VUE\u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT/#1-npx","text":"npx create-nuxt-app my-app # \u7b49\u4ef7\u4e8e npm install -g create-nuxt-app create-nuxt-app my-app \u5982\u679c\u901f\u5ea6\u6162\uff0c\u53ef\u4ee5\u914d\u7f6e\u56fd\u5185\u6e90 vim ~/.bash_profile alias cnpx = 'NPM_CONFIG_REGISTRY=https://registry.npm.taobao.org/ npx'","title":"1\u3001\u4f7f\u7528 npx \u521b\u5efa\u9879\u76ee"},{"location":"JavaScript/VUE\u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT/#2","text":"\u9759\u6001\u8d44\u6e90 assets \u4f1a\u88ab\u7f16\u8bd1 scss\u7b49 \u7ec4\u4ef6 components \u5e03\u5c40\u7ec4\u4ef6 layouts \u4e2d\u95f4\u4ef6 middleware \u9875\u9762\u8def\u7531 pages \u63d2\u4ef6\u76ee\u5f55 plugins \u6839 vue . js\u5e94\u7528 \u5b9e\u4f8b\u5316\u4e4b\u524d\u8fd0\u884c \u9759\u6001\u6587\u4ef6 static \u4e0d\u4f1a\u88ab\u7f16\u8bd1\u5904\u7406 \u5e94\u7528\u7684 Vuex \u72b6\u6001\u6811 store \u4e2a\u6027\u5316\u914d\u7f6e nuxt . config . js \u811a\u672c\u63a5\u53e3 package . json \u522b\u540d ~ \u6216 @ srcDir ~~ \u6216 @@ rootDir assets \u6216\u8005 static \u4f7f\u7528 ~","title":"2\u3001\u76ee\u5f55\u7ed3\u6784"},{"location":"JavaScript/VUE\u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT/#3","text":"css npm install node - sass sass - loader --save-dev","title":"3\u3001\u914d\u7f6e"},{"location":"JavaScript/VUE\u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT/#4","text":"< nuxt-link to = \"/\" ></ nuxt-link > pages \u76ee\u5f55\u4e0b\u4f1a\u81ea\u52a8\u751f\u6210 (1)\u57fa\u7840\u8def\u7531 pages / detail => / detail (2)\u52a8\u6001\u8def\u7531 pages / detail / _id . vue => / detail / 007 $ route . params . id == 007 (3)\u5d4c\u5957\u8def\u7531 pages / users . vue pages / users / index . vue (4)\u8fc7\u6e21\u52a8\u6548 assets/css/main.scss .page-enter-active , .page-leave-active { transition : opacity 0 .5s ; } .page-enter , .page-leave-active { opacity : 0 ; } nuxt.config.js\uff1a module . exports = { css : [ \"assets/css/main.scss\" ], };","title":"4\u3001\u8def\u7531"},{"location":"JavaScript/VUE\u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT/#5-middleware","text":"","title":"5\u3001\u4e2d\u95f4\u4ef6 middleware"},{"location":"JavaScript/VUE\u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT/#6","text":"app.html \u4e0d\u5efa\u8bae\u76f4\u63a5\u4fee\u6539 \u5e03\u5c40 layouts","title":"6\u3001\u6a21\u677f"},{"location":"JavaScript/VUE\u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT/#7","text":"asyncData \u9875\u9762\u52a0\u8f7d\u4e4b\u524d static/data/user.json { \"name\" : \"Tom\" , \"age\" : 23 } pages/index.vue < template > < div class = \"container\" > {{ initData.name }} </ div > </ template > < script > import axios from \"axios\" ; export default { async asyncData ( context ) { const res = await axios . get ( \"http://localhost:3000/data/user.json\" ); console . log ( res ); return { initData : res . data , }; }, }; </ script >","title":"7\u3001\u5f02\u6b65\u6570\u636e"},{"location":"JavaScript/VUE\u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT/#8","text":"assets \u4f1a\u88ab\u6253\u5305 static \u4e0d\u4f1a\u88ab\u6253\u5305 <!-- \u5f15\u7528 static \u76ee\u5f55\u4e0b\u7684\u56fe\u7247 --> < img src = \"/my-image.png\" /> <!-- \u5f15\u7528 assets \u76ee\u5f55\u4e0b\u7ecf\u8fc7 webpack \u6784\u5efa\u5904\u7406\u540e\u7684\u56fe\u7247 --> < img src = \"~/assets/my-image-2.png\" />","title":"8\u3001\u8d44\u6e90\u6587\u4ef6"},{"location":"JavaScript/VUE\u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT/#9","text":"plugins/vue-notifications.js\uff1a import Vue from \"vue\" ; import VueNotifications from \"vue-notifications\" ; Vue . use ( VueNotifications ); \u914d\u7f6e plugins \u5982\u4e0b\uff1a module . exports = { plugins : [ \"@/plugins/vue-notifications\" ], };","title":"9\u3001\u63d2\u4ef6"},{"location":"JavaScript/VUE\u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT/#10","text":"(1)\u6ce8\u5165 Vue \u5b9e\u4f8b plugins/vue-inject.js: import Vue from \"vue\" ; Vue . prototype . $debug = ( msg ) => console . log ( msg ); nuxt.config.js: export default { plugins : [ \"~/plugins/vue-inject.js\" ], }; (2)\u6ce8\u5165 context plugins/ctx-inject.js: export default ({ app }, inject ) => { // Set the function directly on the context.app object app . debug = ( msg ) => console . log ( msg ); }; nuxt.config.js: export default { plugins : [ \"~/plugins/ctx-inject.js\" ], }; (3)\u540c\u65f6\u6ce8\u5165 \u4f1a\u81ea\u52a8\u6dfb\u52a0\u524d\u7f00 $ export default ({ app }, inject ) => { inject ( \"debug\" , ( msg ) => console . log ( msg )); ); }; nuxt.config.js: export default { plugins : [ \"~/plugins/combined-inject.js\" ], };","title":"10\u3001\u6ce8\u5165"},{"location":"JavaScript/VUE\u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT/#11","text":"fetch \u65b9\u6cd5\u4f1a\u5728\u6e32\u67d3\u9875\u9762\u524d\u88ab\u8c03\u7528\uff0c\u4f5c\u7528\u662f\u586b\u5145\u72b6\u6001\u6811 (store) \u6570\u636e \u4e0e asyncData \u65b9\u6cd5\u7c7b\u4f3c\uff0c\u4e0d\u540c\u7684\u662f\u5b83\u4e0d\u4f1a\u8bbe\u7f6e\u7ec4\u4ef6\u7684\u6570\u636e\u3002 nuxtServerInit\uff1a\u670d\u52a1\u7aef\u6570\u636e\u4f20\u7ed9\u5ba2\u6237\u7aef\u7684\u72b6\u6001\u6811 store/index.js export const state = () => ({ counter : 0 , }); export const mutations = { increment ( state ) { state . counter ++ ; }, }; pages/index.vue < p > {{$store.state.counter}} </ p > < button @ click = \"$store.commit('increment')\" > \u70b9\u51fb </ button >","title":"11\u3001\u72b6\u6001\u6811"},{"location":"JavaScript/VUE\u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT/#12","text":"\u5f00\u53d1 npm dev \u4e0a\u7ebf npm start \u5b66\u4e60\u89c6\u9891: VUE \u670d\u52a1\u5668\u7aef\u6e32\u67d3-NUXT \u5b9e\u6218\u89c6\u9891","title":"12\u3001\u90e8\u7f72"},{"location":"JavaScript/Vant/","text":"vant 1\u3001\u5b89\u88c5 # \u5b89\u88c5 Vue Cli npm install -g @vue/cli # \u521b\u5efa\u4e00\u4e2a\u9879\u76ee vue create hello-world # \u5b89\u88c5vant npm i vant -S # \u5b8c\u6574\u5199\u6cd5\uff1anpm install vant --save # \u5b89\u88c5\u63d2\u4ef6 npm i babel-plugin-import -D # \u5b8c\u6574\u5199\u6cd5\uff1a npm install babel-plugin-import --save-dev # \u66f4\u6362\u5b89\u88c5\u6e90\uff1a # npm install vant --save --registry=https://registry.npm.taobao.org 2\u3001babel.config.js \u4e2d\u914d\u7f6e module . exports = { plugins : [ [ 'import' , { libraryName : 'vant' , libraryDirectory : 'es' , style : true }, 'vant' ] ] }; 3\u3001\u65b0\u5efa\u89c6\u56fe views/Web.vue < template > < div > < van-button type = \"primary\" > \u4e3b\u8981\u6309\u94ae </ van-button > </ div > </ template > < script > // \u5f15\u5165\u7ec4\u4ef6 import { Button } from \"vant\" ; export default { name : \"web\" , // \u6ce8\u518c\u7ec4\u4ef6 components : { [ Button . name ] : Button } }; </ script > 4\u3001\u914d\u7f6e\u8def\u7531router.js { path : '/web' , name : 'web' , component : () => import ( './views/Web.vue' ) } 5\u3001\u8bbf\u95ee\u6d4b\u8bd5 http://localhost:8080/web","title":"Vant"},{"location":"JavaScript/Vue/","text":"Vue \u6a21\u677f\u8bed\u6cd5\uff0c\u6761\u4ef6\u6e32\u67d3\uff0c\u5217\u8868\u6e32\u67d3 vue-router vuex vue-cli \u5f00\u53d1\u73af\u5883 1\u3001IDE - webstorm http://www.jetbrains.com/webstorm - vscode https://code.visualstudio.com/ 2\u3001node\u73af\u5883 \uff081\uff09nvm Node Version Manager node \u591a\u7248\u672c\u7ba1\u7406\u5de5\u5177 [1] \u5b89\u88c5 https://github.com/nvm-sh/nvm curl - o - https : // raw . githubusercontent . com / nvm - sh / nvm / v0 . 34 . 0 / install . sh | bash vim ~/.bash_profile # nvm\u914d\u7f6e export NVM_DIR = \"$HOME/.nvm\" [ - s \"$NVM_DIR/nvm.sh\" ] && \\ . \"$NVM_DIR/nvm.sh\" # This loads nvm [ - s \"$NVM_DIR/bash_completion\" ] && \\ . \"$NVM_DIR/bash_completion\" # This loads nvm bash_completion [2]\u4f7f\u7528 $ nvm --version # 0.34.0 nvm --help nvm ls nvm ls-remote nvm install 8 .0.0 nvm deactivate # \u5378\u8f7d\u65f6\u4f7f\u7528 $ node --version v8.0.0 (2) cnpm\u6dd8\u5b9d\u955c\u50cf http://npm.taobao.org/ $ npm install -g cnpm --registry = https://registry.npm.taobao.org (3)chrome\u63d2\u4ef6 vue.js devtools chrome vue\u63d2\u4ef6\u4e0b\u8f7d\u5730\u5740 https://chrome-extension-downloader.com/ (4)vue-cli $ npm install -g @vue/cli # \u5168\u5c40\u5b89\u88c5 $ vue --version \u73af\u5883\u68c0\u67e5 $ nvm --version 0 .34.0 $ node --version v8.16.0 $ npm --version 5 .0.0 $ vue --version 2 .9.6 $ npm ls -g --depth = 0 \u6a21\u677f\u8bed\u6cd5 1\u3001\u6587\u4ef6\u7ed3\u6784 -template -script -css 2\u3001\u63d2\u503c\u8bed\u6cd5\uff0c\u6570\u636e\uff0cjs\u8868\u8fbe\u5f0f 3\u3001\u6307\u4ee4\uff08\u6307\u4ee4\u7f29\u5199\uff09 @click\uff0cv-if, :href vueCDN: https://www.bootcdn.cn/ \u4ee3\u7801\u793a\u4f8b < html > < head > <!-- \u53ef\u4ee5\u5728head\u6807\u7b7e\u4e2d \u901a\u8fc7CND\u5f15\u5165--> < script src = \"https://cdn.bootcss.com/vue/2.6.10/vue.min.js\" ></ script > </ head > < body > <!-- \u6a21\u677f\u90e8\u5206--> < div id = \"app\" > < div > {{message}} </ div > <!--\u53d8\u91cf\u66ff\u6362 hello world! --> < div > {{ count + 1 }} </ div > <!--\u6570\u503c\u8fd0\u7b97 2 --> < div > {{template}} </ div > <!--\u539f\u6837\u663e\u793a <div>hello div</div> --> < div v-html = \"template\" ></ div > <!--\u6807\u7b7e\u89e3\u6790 hello div --> <!--\u5c5e\u6027\u7ed1\u5b9a 3\u8005\u7b49\u6548--> < div >< a href = \"https://www.baidu.com\" > \u767e\u5ea6 </ a ></ div > < div >< a v-bind:href = \"url\" > \u767e\u5ea6 </ a ></ div > < div >< a :href = \"url\" > \u767e\u5ea6 </ a ></ div > <!--\u4e8b\u4ef6\u7ed1\u5b9a 2\u8005\u7b49\u6548--> < div >< button v-on:click = \"add()\" > count+1 </ button ></ div > < div >< button @ click = \"add()\" > count+1 </ button ></ div > </ div > <!--js\u90e8\u5206--> < script > new Vue ({ el : \"#app\" , // \u7ed1\u5b9a\u7684\u5bf9\u8c61 // \u6570\u636e data : { message : \"hello world!\" , count : 1 , template : \"<div>hello div</div>\" , url : \"https://www.baidu.com\" }, // \u65b9\u6cd5 methods : { add : function () { this . count += 1 ; } } }); </ script > </ body > </ html > \u8ba1\u7b97\u5c5e\u6027\u548c\u4fa6\u542c\u5c5e\u6027 \u8f6f\u56de\u8f66\uff08\u6362\u884c\u4e0d\u5220\u9664\uff09\uff1ashift+enter \u8ba1\u7b97\u5c5e\u6027 computed \u6570\u636e\u8054\u52a8 \u76d1\u542c\u591a\u4e2a\u5c5e\u6027 \u4fa6\u542c\u5668 watch \u5f02\u6b65\u573a\u666f \u76d1\u542c\u4e00\u4e2a\u5c5e\u6027 \u4ee3\u7801\u793a\u4f8b < div id = \"app\" > < div > {{message}} </ div > < div > {{fullMessage }} </ div > </ div > < script > var app = new Vue ({ el : \"#app\" , data : { message : \"hello\" }, // \u4fa6\u542c\u5c5e\u6027 watch : { message : function ( newVal , oldVal ) { console . log ( oldVal + \" => \" + newVal ); } }, // \u8ba1\u7b97\u5c5e\u6027 computed : { fullMessage : function (){ return `\u6570\u636e\uff1a ${ this . message } ` ; } } }); </ script > \u6e32\u67d3 \u6761\u4ef6\u6e32\u67d3: v-if, v-else, v-else-if; v-show \u5217\u8868\u6e32\u67d3: v-for Class\u4e0eStyle\u7ed1\u5b9a \u4ee3\u7801\u793a\u4f8b < div id = \"app\" > <!-- if \u6761\u4ef6\u5224\u65ad --> < div v-if = \"count===0\" > count\u7684\u503c===0 </ div > < div v-else-if = \"count > 0\" > count\u7684\u503c > 0 </ div > < div v-else > count\u7684\u503c < 0 </ div > <!-- show \u6761\u4ef6\u5224\u65ad --> < div v-show = \"count==5\" > count\u7684\u503c == 5 </ div > <!-- \u5faa\u73af\u6e32\u67d3 --> < div v-for = \"item in students\" > {{item.name}} | {{item.age}} </ div > <!-- \u5faa\u73af\u6e32\u67d3\u548c\u6761\u4ef6\u6e32\u67d3\u7ed3\u5408 --> < div v-for = \"item in students\" > < div v-if = \"item.age > 23\" > {{item.name}}: age>23 </ div > < div v-else > {{item.name}} </ div > </ div > <!-- \u6837\u5f0f\u6e32\u67d3 --> < div v-for = \"item in students\" > < div v-show = \"item.age > 23\" :class = \"['red', 'gree', {'red': item.age<23}]\" :style = \"itemStyle\" > {{item.name}} </ div > </ div > </ div > < script > var app = new Vue ({ el : \"#app\" , data : { count : 0 , students : [ { name : \"\u5c0f\u4ed3\" , age : 23 }, { name : \"\u5c0f\u9f99\" , age : 24 } ], // style\u5c5e\u6027 itemStyle : { color : \"red\" } } }); </ script > vue-cli $ vue create hello-world # \u521b\u5efa\u9879\u76ee $ npm run server # \u542f\u52a8\u9879\u76ee 1\u3001\u7ec4\u4ef6\u5316\u601d\u60f3 \u5b9e\u73b0\u529f\u80fd\u6a21\u5757\u590d\u7528 \u5f00\u53d1\u590d\u6742\u5e94\u7528 \u539f\u5219\uff1a 300\u884c\u539f\u5219 \u590d\u7528\u539f\u5219 \u4e1a\u52a1\u590d\u6742\u6027\u539f\u5219 2\u3001\u98ce\u683c\u6307\u5357 https://cn.vuejs.org/v2/style-guide/ 3\u3001Vue-router \u914d\u7f6erouter.js 4\u3001Vuex state \u72b6\u6001 mutations \u65b9\u6cd5\u96c6 actions vuex\u7ba1\u7406\u4e0d\u540c\u7ec4\u4ef6\u5171\u7528\u53d8\u91cf\uff0c\u4e00\u4e2a\u7ec4\u4ef6\u6539\u53d8\u53d8\u91cf\uff0c\u53e6\u4e00\u4e2a\u8ddf\u7740\u6539\u53d8\u3002 store.js \u5b9a\u4e49\u5168\u5c40\u6570\u636e\u548c\u65b9\u6cd5 export default new Vuex . Store ({ // \u5b9a\u4e49\u516c\u5171\u7684\u6570\u636e state : { count : 0 }, // \u516c\u5171\u7684\u65b9\u6cd5 mutations : { increase () { this . state . count ++ ; } }, actions : { }, }); info.vue \u4fee\u6539\u5168\u5c40\u53d8\u91cf < template > < div > info < button @ click = \"add()\" > \u52a0\u4e00 </ button > </ div > </ template > < script > // \u5bfc\u5165\u6587\u4ef6 @\u76f8\u5f53\u4e8esrc\u76ee\u5f55 import store from \"@/store\" export default { name : \"Info\" , store , // \u6574\u4e2a\u751f\u547d\u5468\u671f\u7ed1\u5b9a mounted (){ window . app = this ; }, methods : { add : function () { console . error ( \"\u52a0\u4e00\" ); debugger ; // \u8c03\u7528store\u4e2d\u7684increase\u65b9\u6cd5 store . commit ( \"increase\" ); }, output : function (){ console . log ( \"out put\" ); } } } </ script > about.vue\u8c03\u7528\u5168\u5c40\u6570\u636e < template > < div class = \"about\" > < h1 > This is an about page </ h1 > < div > {{msg}} </ div > </ div > </ template > < script > import store from \"@/store\" export default { name : \"About\" , store , data (){ return { msg : store . state . count } } } </ script > 5\u3001\u8c03\u8bd5 console.log() console.error() alert() \u963b\u585e debugger \u65ad\u70b9 window\u5bf9\u8c61\u7ed1\u5b9a 6\u3001\u96c6\u6210vue Git\u5de5\u4f5c\u6d41 # \u62c9\u53d6\u4ed3\u5e93 git clone git@hello.git cd hello git status git branch -a # \u672c\u5730\u8fdc\u7a0b\u5206\u652f git branch # \u6dfb\u52a0\u65b0\u6587\u4ef6 touch text.txt git status git add . git commit -m \"\u521d\u6b21\u63d0\u4ea4\" git remote -v # origin \u8fdc\u7a0b\u4ed3\u5e93 git push origin master # \u63a8\u9001\u5230\u8fdc\u7a0b\u4e3b\u5e72\u5206\u652f # \u65b0\u9700\u6c42\u5206\u652f git checkout -b dev touch test1.txt git add test1.txt git commit -m \"dev\u529f\u80fd\u5f00\u53d1\" git push origin dev # \u63a8\u9001\u5230dev\u5206\u652f # \u5408\u5e76\u5206\u652f\u5230master\u4e0a git checkout master git merge dev git push origin master # \u63d0\u4ea4\u5230\u8fdc\u7a0bmaster\u5206\u652f git branch -d dev # \u5220\u9664\u672c\u5730dev\u5206\u652f git push origin :dev # \u5220\u9664\u8fdc\u7a0bdev\u5206\u652f # \u56de\u9000\u7248\u672c git reset --hard head^ # \u56de\u9000\u5230\u4e0a\u4e00\u7248\u672c git log git reflog git reset --hard HEAD@ { 1 } \u5feb\u901f\u539f\u578b\u5f00\u53d1 npm install - g @vue / cli - service - global vue serve demo . vue demo.vue < template > < div > < ul > < li v-for = \"(item, index) in list\" :class = \"{'active': index===currentIndex}\" :key = \"index\" @ click = \"selectItem(index)\" > {{item}} </ li > </ ul > < button type = \"button\" @ click = \"add()\" > \u6dfb\u52a0 </ button > < ul > < li v-for = \"(item, index) in target\" :key = \"index\" > {{item}} </ li > </ ul > </ div > </ template > < script > export default { name : \"demo1\" , data () { return { currentIndex : - 1 , list : [ 1 , 2 , 3 , 4 ], target : [] } }, methods : { add (){ if ( this . currentIndex < 0 ){ return } this . target . push ( this . list [ this . currentIndex ]); this . currentIndex = - 1 ; }, // \u9009\u4e2d\u7684\u65f6\u5019 selectItem ( index ) { this . currentIndex = index ; } } } </ script > < style > . active { background-color : green ; color : white } </ style > app\u5e94\u7528 vue ui localStorage scss\u65b9\u5f0f\u4e66\u5199css \u6253\u5305\u90e8\u7f72 npm run build \u603b\u7ed3 \u6a21\u677f\u8bed\u6cd5 \u98ce\u683c\u6307\u5357 vue-router\u3001vuex\u3001\u8c03\u8bd5 vue-cli vue\u96c6\u6210 \u5f00\u53d1\u5de5\u4f5c\u6d41","title":"Vue"},{"location":"JavaScript/Vue/#_1","text":"1\u3001IDE - webstorm http://www.jetbrains.com/webstorm - vscode https://code.visualstudio.com/ 2\u3001node\u73af\u5883 \uff081\uff09nvm Node Version Manager node \u591a\u7248\u672c\u7ba1\u7406\u5de5\u5177 [1] \u5b89\u88c5 https://github.com/nvm-sh/nvm curl - o - https : // raw . githubusercontent . com / nvm - sh / nvm / v0 . 34 . 0 / install . sh | bash vim ~/.bash_profile # nvm\u914d\u7f6e export NVM_DIR = \"$HOME/.nvm\" [ - s \"$NVM_DIR/nvm.sh\" ] && \\ . \"$NVM_DIR/nvm.sh\" # This loads nvm [ - s \"$NVM_DIR/bash_completion\" ] && \\ . \"$NVM_DIR/bash_completion\" # This loads nvm bash_completion [2]\u4f7f\u7528 $ nvm --version # 0.34.0 nvm --help nvm ls nvm ls-remote nvm install 8 .0.0 nvm deactivate # \u5378\u8f7d\u65f6\u4f7f\u7528 $ node --version v8.0.0 (2) cnpm\u6dd8\u5b9d\u955c\u50cf http://npm.taobao.org/ $ npm install -g cnpm --registry = https://registry.npm.taobao.org (3)chrome\u63d2\u4ef6 vue.js devtools chrome vue\u63d2\u4ef6\u4e0b\u8f7d\u5730\u5740 https://chrome-extension-downloader.com/ (4)vue-cli $ npm install -g @vue/cli # \u5168\u5c40\u5b89\u88c5 $ vue --version \u73af\u5883\u68c0\u67e5 $ nvm --version 0 .34.0 $ node --version v8.16.0 $ npm --version 5 .0.0 $ vue --version 2 .9.6 $ npm ls -g --depth = 0","title":"\u5f00\u53d1\u73af\u5883"},{"location":"JavaScript/Vue/#_2","text":"1\u3001\u6587\u4ef6\u7ed3\u6784 -template -script -css 2\u3001\u63d2\u503c\u8bed\u6cd5\uff0c\u6570\u636e\uff0cjs\u8868\u8fbe\u5f0f 3\u3001\u6307\u4ee4\uff08\u6307\u4ee4\u7f29\u5199\uff09 @click\uff0cv-if, :href vueCDN: https://www.bootcdn.cn/ \u4ee3\u7801\u793a\u4f8b < html > < head > <!-- \u53ef\u4ee5\u5728head\u6807\u7b7e\u4e2d \u901a\u8fc7CND\u5f15\u5165--> < script src = \"https://cdn.bootcss.com/vue/2.6.10/vue.min.js\" ></ script > </ head > < body > <!-- \u6a21\u677f\u90e8\u5206--> < div id = \"app\" > < div > {{message}} </ div > <!--\u53d8\u91cf\u66ff\u6362 hello world! --> < div > {{ count + 1 }} </ div > <!--\u6570\u503c\u8fd0\u7b97 2 --> < div > {{template}} </ div > <!--\u539f\u6837\u663e\u793a <div>hello div</div> --> < div v-html = \"template\" ></ div > <!--\u6807\u7b7e\u89e3\u6790 hello div --> <!--\u5c5e\u6027\u7ed1\u5b9a 3\u8005\u7b49\u6548--> < div >< a href = \"https://www.baidu.com\" > \u767e\u5ea6 </ a ></ div > < div >< a v-bind:href = \"url\" > \u767e\u5ea6 </ a ></ div > < div >< a :href = \"url\" > \u767e\u5ea6 </ a ></ div > <!--\u4e8b\u4ef6\u7ed1\u5b9a 2\u8005\u7b49\u6548--> < div >< button v-on:click = \"add()\" > count+1 </ button ></ div > < div >< button @ click = \"add()\" > count+1 </ button ></ div > </ div > <!--js\u90e8\u5206--> < script > new Vue ({ el : \"#app\" , // \u7ed1\u5b9a\u7684\u5bf9\u8c61 // \u6570\u636e data : { message : \"hello world!\" , count : 1 , template : \"<div>hello div</div>\" , url : \"https://www.baidu.com\" }, // \u65b9\u6cd5 methods : { add : function () { this . count += 1 ; } } }); </ script > </ body > </ html >","title":"\u6a21\u677f\u8bed\u6cd5"},{"location":"JavaScript/Vue/#_3","text":"\u8f6f\u56de\u8f66\uff08\u6362\u884c\u4e0d\u5220\u9664\uff09\uff1ashift+enter \u8ba1\u7b97\u5c5e\u6027 computed \u6570\u636e\u8054\u52a8 \u76d1\u542c\u591a\u4e2a\u5c5e\u6027 \u4fa6\u542c\u5668 watch \u5f02\u6b65\u573a\u666f \u76d1\u542c\u4e00\u4e2a\u5c5e\u6027 \u4ee3\u7801\u793a\u4f8b < div id = \"app\" > < div > {{message}} </ div > < div > {{fullMessage }} </ div > </ div > < script > var app = new Vue ({ el : \"#app\" , data : { message : \"hello\" }, // \u4fa6\u542c\u5c5e\u6027 watch : { message : function ( newVal , oldVal ) { console . log ( oldVal + \" => \" + newVal ); } }, // \u8ba1\u7b97\u5c5e\u6027 computed : { fullMessage : function (){ return `\u6570\u636e\uff1a ${ this . message } ` ; } } }); </ script >","title":"\u8ba1\u7b97\u5c5e\u6027\u548c\u4fa6\u542c\u5c5e\u6027"},{"location":"JavaScript/Vue/#_4","text":"\u6761\u4ef6\u6e32\u67d3: v-if, v-else, v-else-if; v-show \u5217\u8868\u6e32\u67d3: v-for Class\u4e0eStyle\u7ed1\u5b9a \u4ee3\u7801\u793a\u4f8b < div id = \"app\" > <!-- if \u6761\u4ef6\u5224\u65ad --> < div v-if = \"count===0\" > count\u7684\u503c===0 </ div > < div v-else-if = \"count > 0\" > count\u7684\u503c > 0 </ div > < div v-else > count\u7684\u503c < 0 </ div > <!-- show \u6761\u4ef6\u5224\u65ad --> < div v-show = \"count==5\" > count\u7684\u503c == 5 </ div > <!-- \u5faa\u73af\u6e32\u67d3 --> < div v-for = \"item in students\" > {{item.name}} | {{item.age}} </ div > <!-- \u5faa\u73af\u6e32\u67d3\u548c\u6761\u4ef6\u6e32\u67d3\u7ed3\u5408 --> < div v-for = \"item in students\" > < div v-if = \"item.age > 23\" > {{item.name}}: age>23 </ div > < div v-else > {{item.name}} </ div > </ div > <!-- \u6837\u5f0f\u6e32\u67d3 --> < div v-for = \"item in students\" > < div v-show = \"item.age > 23\" :class = \"['red', 'gree', {'red': item.age<23}]\" :style = \"itemStyle\" > {{item.name}} </ div > </ div > </ div > < script > var app = new Vue ({ el : \"#app\" , data : { count : 0 , students : [ { name : \"\u5c0f\u4ed3\" , age : 23 }, { name : \"\u5c0f\u9f99\" , age : 24 } ], // style\u5c5e\u6027 itemStyle : { color : \"red\" } } }); </ script >","title":"\u6e32\u67d3"},{"location":"JavaScript/Vue/#vue-cli","text":"$ vue create hello-world # \u521b\u5efa\u9879\u76ee $ npm run server # \u542f\u52a8\u9879\u76ee 1\u3001\u7ec4\u4ef6\u5316\u601d\u60f3 \u5b9e\u73b0\u529f\u80fd\u6a21\u5757\u590d\u7528 \u5f00\u53d1\u590d\u6742\u5e94\u7528 \u539f\u5219\uff1a 300\u884c\u539f\u5219 \u590d\u7528\u539f\u5219 \u4e1a\u52a1\u590d\u6742\u6027\u539f\u5219 2\u3001\u98ce\u683c\u6307\u5357 https://cn.vuejs.org/v2/style-guide/ 3\u3001Vue-router \u914d\u7f6erouter.js 4\u3001Vuex state \u72b6\u6001 mutations \u65b9\u6cd5\u96c6 actions vuex\u7ba1\u7406\u4e0d\u540c\u7ec4\u4ef6\u5171\u7528\u53d8\u91cf\uff0c\u4e00\u4e2a\u7ec4\u4ef6\u6539\u53d8\u53d8\u91cf\uff0c\u53e6\u4e00\u4e2a\u8ddf\u7740\u6539\u53d8\u3002 store.js \u5b9a\u4e49\u5168\u5c40\u6570\u636e\u548c\u65b9\u6cd5 export default new Vuex . Store ({ // \u5b9a\u4e49\u516c\u5171\u7684\u6570\u636e state : { count : 0 }, // \u516c\u5171\u7684\u65b9\u6cd5 mutations : { increase () { this . state . count ++ ; } }, actions : { }, }); info.vue \u4fee\u6539\u5168\u5c40\u53d8\u91cf < template > < div > info < button @ click = \"add()\" > \u52a0\u4e00 </ button > </ div > </ template > < script > // \u5bfc\u5165\u6587\u4ef6 @\u76f8\u5f53\u4e8esrc\u76ee\u5f55 import store from \"@/store\" export default { name : \"Info\" , store , // \u6574\u4e2a\u751f\u547d\u5468\u671f\u7ed1\u5b9a mounted (){ window . app = this ; }, methods : { add : function () { console . error ( \"\u52a0\u4e00\" ); debugger ; // \u8c03\u7528store\u4e2d\u7684increase\u65b9\u6cd5 store . commit ( \"increase\" ); }, output : function (){ console . log ( \"out put\" ); } } } </ script > about.vue\u8c03\u7528\u5168\u5c40\u6570\u636e < template > < div class = \"about\" > < h1 > This is an about page </ h1 > < div > {{msg}} </ div > </ div > </ template > < script > import store from \"@/store\" export default { name : \"About\" , store , data (){ return { msg : store . state . count } } } </ script > 5\u3001\u8c03\u8bd5 console.log() console.error() alert() \u963b\u585e debugger \u65ad\u70b9 window\u5bf9\u8c61\u7ed1\u5b9a 6\u3001\u96c6\u6210vue","title":"vue-cli"},{"location":"JavaScript/Vue/#git","text":"# \u62c9\u53d6\u4ed3\u5e93 git clone git@hello.git cd hello git status git branch -a # \u672c\u5730\u8fdc\u7a0b\u5206\u652f git branch # \u6dfb\u52a0\u65b0\u6587\u4ef6 touch text.txt git status git add . git commit -m \"\u521d\u6b21\u63d0\u4ea4\" git remote -v # origin \u8fdc\u7a0b\u4ed3\u5e93 git push origin master # \u63a8\u9001\u5230\u8fdc\u7a0b\u4e3b\u5e72\u5206\u652f # \u65b0\u9700\u6c42\u5206\u652f git checkout -b dev touch test1.txt git add test1.txt git commit -m \"dev\u529f\u80fd\u5f00\u53d1\" git push origin dev # \u63a8\u9001\u5230dev\u5206\u652f # \u5408\u5e76\u5206\u652f\u5230master\u4e0a git checkout master git merge dev git push origin master # \u63d0\u4ea4\u5230\u8fdc\u7a0bmaster\u5206\u652f git branch -d dev # \u5220\u9664\u672c\u5730dev\u5206\u652f git push origin :dev # \u5220\u9664\u8fdc\u7a0bdev\u5206\u652f # \u56de\u9000\u7248\u672c git reset --hard head^ # \u56de\u9000\u5230\u4e0a\u4e00\u7248\u672c git log git reflog git reset --hard HEAD@ { 1 }","title":"Git\u5de5\u4f5c\u6d41"},{"location":"JavaScript/Vue/#_5","text":"npm install - g @vue / cli - service - global vue serve demo . vue demo.vue < template > < div > < ul > < li v-for = \"(item, index) in list\" :class = \"{'active': index===currentIndex}\" :key = \"index\" @ click = \"selectItem(index)\" > {{item}} </ li > </ ul > < button type = \"button\" @ click = \"add()\" > \u6dfb\u52a0 </ button > < ul > < li v-for = \"(item, index) in target\" :key = \"index\" > {{item}} </ li > </ ul > </ div > </ template > < script > export default { name : \"demo1\" , data () { return { currentIndex : - 1 , list : [ 1 , 2 , 3 , 4 ], target : [] } }, methods : { add (){ if ( this . currentIndex < 0 ){ return } this . target . push ( this . list [ this . currentIndex ]); this . currentIndex = - 1 ; }, // \u9009\u4e2d\u7684\u65f6\u5019 selectItem ( index ) { this . currentIndex = index ; } } } </ script > < style > . active { background-color : green ; color : white } </ style > app\u5e94\u7528 vue ui localStorage scss\u65b9\u5f0f\u4e66\u5199css \u6253\u5305\u90e8\u7f72 npm run build","title":"\u5feb\u901f\u539f\u578b\u5f00\u53d1"},{"location":"JavaScript/Vue/#_6","text":"\u6a21\u677f\u8bed\u6cd5 \u98ce\u683c\u6307\u5357 vue-router\u3001vuex\u3001\u8c03\u8bd5 vue-cli vue\u96c6\u6210 \u5f00\u53d1\u5de5\u4f5c\u6d41","title":"\u603b\u7ed3"},{"location":"JavaScript/VueCli3 \u5168\u6808\u9879\u76ee/","text":"\u4e3b\u8981\u5185\u5bb9 \u63a5\u53e3 Node + express + jwt \u524d\u7aef VueCli3.0 + Element-UI \u8bf7\u6c42\u6570\u636e Axios + Mlab + MongoDB \u529f\u80fd 1. \u5206\u9875 2. \u7b5b\u9009 3. \u7528\u6237\u6ce8\u518c 4. \u767b\u5f55 5. jwt\u7528\u6237\u9a8c\u8bc1 1\u3001\u65b0\u5efa\u9879\u76ee mkdir node - app && cd node - app npm init touch server . js cnpm install express - S server.js const express = require ( \"express\" ); const app = express (); app . get ( \"/\" , ( req , res ) => { res . send ( \"hello world!\" ); }) const port = process . env . PORT || 5000 ; app . listen ( port , () => { console . log ( `Server runing on http://127.0.0.1: ${ port } ` ); }) \u542f\u52a8\u670d\u52a1 node server.js # \u5168\u5c40\u5b89\u88c5 cnpm install nodemon --save-dev # \u6587\u4ef6\u53d8\u5316\u81ea\u52a8\u91cd\u542f nodemon server.js package.json \"script\" : { \"start\" : \"node server.js\" , \"server\" : \"nodemon server.js\" } \u7ebf\u4e0a\u8fd0\u884c npm run start \u672c\u5730\u6d4b\u8bd5 npm run server 2\u3001MongoBD\u6570\u636e\u5e93 https://mlab.com/ cnpm install mongoose -S const mongoose = require ( \"mongoose\" ); // \u914d\u7f6e // SANDBOX Cluster-app let mongoURL = \"mongodb://127.0.0.1:27017/data\" ; mongoose . connect ( mongoURL ). then (() => { console . log ( \"mongodb connect\" ); }). catch (( err ) => { console . log ( err ); }) 3\u3001\u5efa\u7acb\u6a21\u578b const mongoose = require ( \"mongoose\" ); const Schema = mongoose . Schema ; // \u914d\u7f6e\u6570\u636e\u6a21\u578b const UserSchema = new Schema ({ name : { type : String , required : true , }, email : { type : String , required : true , }, password : { type : String , required : true , }, avatar : { type : String }, date : { type : Date , default : Date . now , }, }) module . exports = User = mongoose . model ( \"User\" , UserSchema ); 4\u3001\u6ce8\u518c\u63a5\u53e3 cnpm install body-parser --save cnpm install bcrypt --save /** * \u7528\u6237\u6ce8\u518c */ router . post ( \"/register\" , async ( req , res ) => { console . log ( req . body ); // \u67e5\u8be2\u6570\u636e\u5e93\u4e2d\u662f\u5426\u6709\u8fd9\u4e2a\u90ae\u7bb1 const user = await User . findOne ({ 'email' : req . body . email }) if ( user ) { res . status ( 400 ). json ({ \"msg\" : \"\u90ae\u7bb1\u5df2\u88ab\u6ce8\u518c\" }) } else { // \u5bc6\u7801\u52a0\u5bc6 // https://www.npmjs.com/package/bcrypt const salt = bcrypt . genSaltSync ( 10 ); const newUser = new User ({ name : req . body . user , email : req . body . email , // avatar, password : bcrypt . hashSync ( req . body . email , salt ) }) const result = await newUser . save () res . json ( result ); } }) 5\u3001\u4f7f\u7528\u5168\u7403\u516c\u8ba4\u5934\u50cf https://en.gravatar.com/ cnpm install gravatar -- save 6\u3001\u7528\u6237\u767b\u5f55 /** * \u7528\u6237\u767b\u5f55 */ router . post ( \"/login\" , async ( req , res ) => { console . log ( req . body ); // \u67e5\u8be2\u6570\u636e\u5e93\u4e2d\u662f\u5426\u6709\u8fd9\u4e2a\u90ae\u7bb1 const user = await User . findOne ({ 'email' : req . body . email }) // \u7528\u6237\u6821\u9a8c if ( ! user ) { res . status ( 404 ). json ({ \"msg\" : \"\u7528\u6237\u4e0d\u5b58\u5728\" }) } else { // \u5bc6\u7801\u6821\u9a8c if ( bcrypt . compareSync ( req . body . password , user . password )) { res . json ({ \"msg\" : \"success\" }) } else { res . status ( 400 ). json ({ \"msg\" : \"\u5bc6\u7801\u9519\u8bef\" }) } } }) 7\u3001jwt\u5b9e\u73b0token cnpm install jsonwebtoken --save const jwt = require ( 'jsonwebtoken' ); let token = jwt . sign ( data , keys . secretKey , { expiresIn : 60 * 60 }); 8\u3001\u9a8c\u8bc1jwt npm i passport passport-jwt --save package.json \u4e0d\u663e\u793a\u4f9d\u8d56 npm install - S jquery \u6216\u8005 npm install --save jquery \u53c2\u8003 package.json \u4e0d\u663e\u793a\u4f9d\u8d56 9\u3001\u6dfb\u52a0\u6570\u636e /** * \u6dfb\u52a0\u6570\u636e */ router . post ( \"/add\" , passport . authenticate ( 'jwt' , { session : false }), async ( req , res ) => { const data = { type : req . body . type || '' , describe : req . body . describe || '' , income : req . body . income || '' , expend : req . body . expend || '' , remark : req . body . remark || '' , cash : req . body . cash || '' , } const profile = await new Profile ( data ). save (); res . json ( profile ) }) 10\u3001\u83b7\u53d6\u6570\u636e /** * \u83b7\u53d6\u5217\u8868\u6570\u636e */ router . get ( \"/list\" , passport . authenticate ( 'jwt' , { session : false }), async ( req , res ) => { const list = await Profile . find () res . json ( list ) }) /** * \u83b7\u53d6\u5355\u6761\u6570\u636e */ router . get ( \"/:id\" , passport . authenticate ( 'jwt' , { session : false }), async ( req , res ) => { const row = await Profile . findOne ({ _id : req . params . id }) res . json ( row ) }) 11\u3001\u524d\u7aef\u9875\u9762 \u521b\u5efa\u524d\u7aef\u9879\u76ee $ vue -V 3 .12.0 $ vue create client 1 \u3001Manually 2 \u3001Babel Router Vuex 3 \u3001package.json 4 \u3001preset N \u64cd\u4f5c a \u5168\u9009 i \u53cd\u9009 \u7a7a\u683c \u9009\u4e2d \u56de\u8f66\u5b89\u88c5 \u524d\u540e\u7aef\u8fde\u8f7d cnpm install concurrently --save-dev client/package.json \"scripts\" : { \"start\" : \"npm run serve\" } package.json \"scripts\" : { // \u5b89\u88c5\u524d\u7aef\u4f9d\u8d56 \"client-install\" : \"npm install --prefix client\" , // \u542f\u52a8\u524d\u7aef\u9879\u76ee \"client\" : \"npm start --prefix client\" , // \u542f\u52a8\u524d\u540e\u7aef\u9879\u76ee \"dev\" : \"concurrently \\\"npm run server\\\" \\\"npm run client\\\"\" } reset.css https://meyerweb.com/eric/tools/css/reset/ \u5b89\u88c5element-ui cd client cnpm i element-ui -S 404 \u8868\u5355 \u8868\u5355\u9a8c\u8bc1 cd client cnpm i axios -S Proxy error: Could not proxy request /api2/users/login from localhost:8080 to localhost:3000 (ENOTFO https://blog.csdn.net/reagan_/article/details/97498160 \u89e3\u6790jwt cnpm i jwt-decode -S","title":"VueCli3 \u5168\u6808\u9879\u76ee"},{"location":"JavaScript/VueCli3 \u5168\u6808\u9879\u76ee/#1","text":"mkdir node - app && cd node - app npm init touch server . js cnpm install express - S server.js const express = require ( \"express\" ); const app = express (); app . get ( \"/\" , ( req , res ) => { res . send ( \"hello world!\" ); }) const port = process . env . PORT || 5000 ; app . listen ( port , () => { console . log ( `Server runing on http://127.0.0.1: ${ port } ` ); }) \u542f\u52a8\u670d\u52a1 node server.js # \u5168\u5c40\u5b89\u88c5 cnpm install nodemon --save-dev # \u6587\u4ef6\u53d8\u5316\u81ea\u52a8\u91cd\u542f nodemon server.js package.json \"script\" : { \"start\" : \"node server.js\" , \"server\" : \"nodemon server.js\" } \u7ebf\u4e0a\u8fd0\u884c npm run start \u672c\u5730\u6d4b\u8bd5 npm run server","title":"1\u3001\u65b0\u5efa\u9879\u76ee"},{"location":"JavaScript/VueCli3 \u5168\u6808\u9879\u76ee/#2mongobd","text":"https://mlab.com/ cnpm install mongoose -S const mongoose = require ( \"mongoose\" ); // \u914d\u7f6e // SANDBOX Cluster-app let mongoURL = \"mongodb://127.0.0.1:27017/data\" ; mongoose . connect ( mongoURL ). then (() => { console . log ( \"mongodb connect\" ); }). catch (( err ) => { console . log ( err ); })","title":"2\u3001MongoBD\u6570\u636e\u5e93"},{"location":"JavaScript/VueCli3 \u5168\u6808\u9879\u76ee/#3","text":"const mongoose = require ( \"mongoose\" ); const Schema = mongoose . Schema ; // \u914d\u7f6e\u6570\u636e\u6a21\u578b const UserSchema = new Schema ({ name : { type : String , required : true , }, email : { type : String , required : true , }, password : { type : String , required : true , }, avatar : { type : String }, date : { type : Date , default : Date . now , }, }) module . exports = User = mongoose . model ( \"User\" , UserSchema );","title":"3\u3001\u5efa\u7acb\u6a21\u578b"},{"location":"JavaScript/VueCli3 \u5168\u6808\u9879\u76ee/#4","text":"cnpm install body-parser --save cnpm install bcrypt --save /** * \u7528\u6237\u6ce8\u518c */ router . post ( \"/register\" , async ( req , res ) => { console . log ( req . body ); // \u67e5\u8be2\u6570\u636e\u5e93\u4e2d\u662f\u5426\u6709\u8fd9\u4e2a\u90ae\u7bb1 const user = await User . findOne ({ 'email' : req . body . email }) if ( user ) { res . status ( 400 ). json ({ \"msg\" : \"\u90ae\u7bb1\u5df2\u88ab\u6ce8\u518c\" }) } else { // \u5bc6\u7801\u52a0\u5bc6 // https://www.npmjs.com/package/bcrypt const salt = bcrypt . genSaltSync ( 10 ); const newUser = new User ({ name : req . body . user , email : req . body . email , // avatar, password : bcrypt . hashSync ( req . body . email , salt ) }) const result = await newUser . save () res . json ( result ); } })","title":"4\u3001\u6ce8\u518c\u63a5\u53e3"},{"location":"JavaScript/VueCli3 \u5168\u6808\u9879\u76ee/#5","text":"https://en.gravatar.com/ cnpm install gravatar -- save","title":"5\u3001\u4f7f\u7528\u5168\u7403\u516c\u8ba4\u5934\u50cf"},{"location":"JavaScript/VueCli3 \u5168\u6808\u9879\u76ee/#6","text":"/** * \u7528\u6237\u767b\u5f55 */ router . post ( \"/login\" , async ( req , res ) => { console . log ( req . body ); // \u67e5\u8be2\u6570\u636e\u5e93\u4e2d\u662f\u5426\u6709\u8fd9\u4e2a\u90ae\u7bb1 const user = await User . findOne ({ 'email' : req . body . email }) // \u7528\u6237\u6821\u9a8c if ( ! user ) { res . status ( 404 ). json ({ \"msg\" : \"\u7528\u6237\u4e0d\u5b58\u5728\" }) } else { // \u5bc6\u7801\u6821\u9a8c if ( bcrypt . compareSync ( req . body . password , user . password )) { res . json ({ \"msg\" : \"success\" }) } else { res . status ( 400 ). json ({ \"msg\" : \"\u5bc6\u7801\u9519\u8bef\" }) } } })","title":"6\u3001\u7528\u6237\u767b\u5f55"},{"location":"JavaScript/VueCli3 \u5168\u6808\u9879\u76ee/#7jwttoken","text":"cnpm install jsonwebtoken --save const jwt = require ( 'jsonwebtoken' ); let token = jwt . sign ( data , keys . secretKey , { expiresIn : 60 * 60 });","title":"7\u3001jwt\u5b9e\u73b0token"},{"location":"JavaScript/VueCli3 \u5168\u6808\u9879\u76ee/#8jwt","text":"npm i passport passport-jwt --save","title":"8\u3001\u9a8c\u8bc1jwt"},{"location":"JavaScript/VueCli3 \u5168\u6808\u9879\u76ee/#9","text":"/** * \u6dfb\u52a0\u6570\u636e */ router . post ( \"/add\" , passport . authenticate ( 'jwt' , { session : false }), async ( req , res ) => { const data = { type : req . body . type || '' , describe : req . body . describe || '' , income : req . body . income || '' , expend : req . body . expend || '' , remark : req . body . remark || '' , cash : req . body . cash || '' , } const profile = await new Profile ( data ). save (); res . json ( profile ) })","title":"9\u3001\u6dfb\u52a0\u6570\u636e"},{"location":"JavaScript/VueCli3 \u5168\u6808\u9879\u76ee/#10","text":"/** * \u83b7\u53d6\u5217\u8868\u6570\u636e */ router . get ( \"/list\" , passport . authenticate ( 'jwt' , { session : false }), async ( req , res ) => { const list = await Profile . find () res . json ( list ) }) /** * \u83b7\u53d6\u5355\u6761\u6570\u636e */ router . get ( \"/:id\" , passport . authenticate ( 'jwt' , { session : false }), async ( req , res ) => { const row = await Profile . findOne ({ _id : req . params . id }) res . json ( row ) })","title":"10\u3001\u83b7\u53d6\u6570\u636e"},{"location":"JavaScript/VueCli3 \u5168\u6808\u9879\u76ee/#11","text":"\u521b\u5efa\u524d\u7aef\u9879\u76ee $ vue -V 3 .12.0 $ vue create client 1 \u3001Manually 2 \u3001Babel Router Vuex 3 \u3001package.json 4 \u3001preset N \u64cd\u4f5c a \u5168\u9009 i \u53cd\u9009 \u7a7a\u683c \u9009\u4e2d \u56de\u8f66\u5b89\u88c5 \u524d\u540e\u7aef\u8fde\u8f7d cnpm install concurrently --save-dev client/package.json \"scripts\" : { \"start\" : \"npm run serve\" } package.json \"scripts\" : { // \u5b89\u88c5\u524d\u7aef\u4f9d\u8d56 \"client-install\" : \"npm install --prefix client\" , // \u542f\u52a8\u524d\u7aef\u9879\u76ee \"client\" : \"npm start --prefix client\" , // \u542f\u52a8\u524d\u540e\u7aef\u9879\u76ee \"dev\" : \"concurrently \\\"npm run server\\\" \\\"npm run client\\\"\" } reset.css https://meyerweb.com/eric/tools/css/reset/ \u5b89\u88c5element-ui cd client cnpm i element-ui -S 404 \u8868\u5355 \u8868\u5355\u9a8c\u8bc1 cd client cnpm i axios -S Proxy error: Could not proxy request /api2/users/login from localhost:8080 to localhost:3000 (ENOTFO https://blog.csdn.net/reagan_/article/details/97498160 \u89e3\u6790jwt cnpm i jwt-decode -S","title":"11\u3001\u524d\u7aef\u9875\u9762"},{"location":"JavaScript/Vue\u4e2d\u7236\u7ec4\u4ef6\u4e0e\u5b50\u7ec4\u4ef6\u4e4b\u95f4\u7684\u901a\u4fe1/","text":"Vue\u4e2d\u7236\u7ec4\u4ef6\u4e0e\u5b50\u7ec4\u4ef6\u4e4b\u95f4\u7684\u901a\u4fe1 prop \u7236\u7ec4\u4ef6\u5411\u5b50\u7ec4\u4ef6\u4f20\u9012\u6570\u636e, \u5355\u5411\u7ed1\u5b9a $ref \u7236\u7ec4\u4ef6\u8c03\u7528\u5b50\u7ec4\u4ef6\u91cc\u7684\u5c5e\u6027\u548c\u65b9\u6cd5 $emit \u5b50\u7ec4\u4ef6\u5411\u7236\u7ec4\u4ef6\u4f20\u9012\u6d88\u606f \u65b0\u5efa\u9879\u76ee $ vue create demo $ cd demo $ npm run serve \u7236\u7ec4\u4ef6\u5f15\u7528\u5b50\u7ec4\u4ef6 components/Child.vue <template> <h2> \u5b50\u7ec4\u4ef6 </h2> </template> App.vue < template > < div id = \"app\" > < h2 > \u7236\u7ec4\u4ef6 </ h2 > < ! -- 3 \u3001\u4f7f\u7528\u5b50\u7ec4\u4ef6 --> < Child ></ Child > </ div > </ template > < script > // 1 \u3001\u5bfc\u5165\u5b50\u7ec4\u4ef6 import Child from \"@/components/Child.vue\" ; export default { name : \"app\" , // 2 \u3001\u6ce8\u518c\u7ec4\u4ef6 components : { Child // \u952e\u540d\u4e0e\u53d8\u91cf\u540d\u76f8\u540c\uff0c \u7b49\u4ef7\u4e8e Child : Child } }; </ script > \u7236\u7ec4\u4ef6\u7ed9\u5b50\u7ec4\u4ef6\u4f20\u503c components/Child.vue <template> <div> <h2> \u5b50\u7ec4\u4ef6 </h2> <p> {{ message }} </p> </div> </template> <script> export default { name: \"child\", // \u5b50\u7ec4\u4ef6\u5c5e\u6027\uff0c\u7528\u4e8e\u63a5\u6536\u7236\u7ec4\u4ef6\u6570\u636e, props\u662f\u5355\u5411\u7ed1\u5b9a props:[ \"message\" ] } </script> App.vue < template > < div id = \"app\" > < h2 > \u7236\u7ec4\u4ef6 </ h2 > < ! -- \u7236\u7ec4\u4ef6\u901a\u8fc7\u5c5e\u6027\u7ed9\u5b50\u7ec4\u4ef6\u4f20\u503c --> < ! -- \u9759\u6001\u7ed1\u5b9a --> < Child message = \"hello\" ></ Child > < ! -- \u52a8\u6001\u7ed1\u5b9a --> < Child v - bind : message = \"message\" ></ Child > </ div > </ template > < script > import Child from \"@/components/Child.vue\" ; export default { name : \"app\" , data () { return { message : \"hello child\" }; }, components : { Child } }; </ script > \u7236\u7ec4\u4ef6\u64cd\u4f5c\u5b50\u7ec4\u4ef6\u6570\u636e\uff0c\u65b9\u6cd5 components/Child.vue < template > < div > < h2 > \u5b50\u7ec4\u4ef6 </ h2 > < p > {{ message }} </ p > </ div > </ template > < script > export default { name : \" child \" , // \u5b50\u7ec4\u4ef6\u5c5e\u6027 data () { return { message : \"\" , } }, // \u5b50\u7ec4\u4ef6\u65b9\u6cd5 methods :{ setMessage ( msg ) { this . message = msg ; } } } </ script > App.vue < template > < div id = \"app\" > < h2 > \u7236\u7ec4\u4ef6 </ h2 > < ! -- \u6ce8\u518c\u5b50\u7ec4\u4ef6\u5f15\u7528\u4fe1\u606f --> < Child ref = \"child\" ></ Child > < button @click = \"setChildMessage\" > \u4fee\u6539\u5b50\u7ec4\u4ef6\u6570\u636e </ button > < button @click = \"callChildMessage\" > \u8c03\u7528\u5b50\u7ec4\u4ef6\u65b9\u6cd5 </ button > </ div > </ template > < script > import Child from \"@/components/Child.vue\" ; export default { name : \"app\" , components : { Child }, methods : { setChildMessage () { this . $ refs . child . message = \"\u8bbe\u7f6e\u5b50\u7ec4\u4ef6\u5c5e\u6027\" }, callChildMessage (){ this . $ refs . child . setMessage ( \"\u8c03\u7528\u5b50\u7ec4\u4ef6\u65b9\u6cd5\" ); } } }; </ script > \u5b50\u7ec4\u4ef6\u7ed9\u7236\u7ec4\u4ef6\u4f20\u503c components/Child.vue <template> <div> <h2> \u5b50\u7ec4\u4ef6 </h2> <!-- \u70b9\u51fb\u6309\u94ae\u5c06\u4f1a\u7ed9\u7236\u7ec4\u4ef6\u4f20\u503c --> <button @ click= \"clickButton\" > \u5b50\u7ec4\u4ef6\u6309\u94ae </button> </div> </template> <script> export default { name: \"child\", methods: { clickButton() { // \u5411\u7236\u7ec4\u4ef6\u53d1\u9001\u4fe1\u53f7 vm.$emit(event, args) this.$emit(\"clickButton\", \"\u5b50\u7ec4\u4ef6\u7684\u6309\u94ae\u88ab\u70b9\u51fb\"); } } }; </script> App.vue < template > < div id = \"app\" > < h2 > \u7236\u7ec4\u4ef6 </ h2 > < ! -- \u5904\u7406\u5b50\u7ec4\u4ef6\u7684\u6309\u94ae\u70b9\u51fb\u4e8b\u4ef6 --> < Child @clickButton = \"childClickButton\" ></ Child > </ div > </ template > < script > import Child from \"@/components/Child.vue\" ; export default { name : \"app\" , components : { Child }, methods : { // \u63a5\u6536\u5904\u7406\u5b50\u7ec4\u4ef6\u4f20\u9012\u8fc7\u6765\u7684\u6570\u636e childClickButton ( message ) { console . log ( message ); } } }; </ script >","title":"Vue\u4e2d\u7236\u7ec4\u4ef6\u4e0e\u5b50\u7ec4\u4ef6\u4e4b\u95f4\u7684\u901a\u4fe1"},{"location":"JavaScript/Vue\u4e2d\u7236\u7ec4\u4ef6\u4e0e\u5b50\u7ec4\u4ef6\u4e4b\u95f4\u7684\u901a\u4fe1/#_1","text":"components/Child.vue <template> <h2> \u5b50\u7ec4\u4ef6 </h2> </template> App.vue < template > < div id = \"app\" > < h2 > \u7236\u7ec4\u4ef6 </ h2 > < ! -- 3 \u3001\u4f7f\u7528\u5b50\u7ec4\u4ef6 --> < Child ></ Child > </ div > </ template > < script > // 1 \u3001\u5bfc\u5165\u5b50\u7ec4\u4ef6 import Child from \"@/components/Child.vue\" ; export default { name : \"app\" , // 2 \u3001\u6ce8\u518c\u7ec4\u4ef6 components : { Child // \u952e\u540d\u4e0e\u53d8\u91cf\u540d\u76f8\u540c\uff0c \u7b49\u4ef7\u4e8e Child : Child } }; </ script >","title":"\u7236\u7ec4\u4ef6\u5f15\u7528\u5b50\u7ec4\u4ef6"},{"location":"JavaScript/Vue\u4e2d\u7236\u7ec4\u4ef6\u4e0e\u5b50\u7ec4\u4ef6\u4e4b\u95f4\u7684\u901a\u4fe1/#_2","text":"components/Child.vue <template> <div> <h2> \u5b50\u7ec4\u4ef6 </h2> <p> {{ message }} </p> </div> </template> <script> export default { name: \"child\", // \u5b50\u7ec4\u4ef6\u5c5e\u6027\uff0c\u7528\u4e8e\u63a5\u6536\u7236\u7ec4\u4ef6\u6570\u636e, props\u662f\u5355\u5411\u7ed1\u5b9a props:[ \"message\" ] } </script> App.vue < template > < div id = \"app\" > < h2 > \u7236\u7ec4\u4ef6 </ h2 > < ! -- \u7236\u7ec4\u4ef6\u901a\u8fc7\u5c5e\u6027\u7ed9\u5b50\u7ec4\u4ef6\u4f20\u503c --> < ! -- \u9759\u6001\u7ed1\u5b9a --> < Child message = \"hello\" ></ Child > < ! -- \u52a8\u6001\u7ed1\u5b9a --> < Child v - bind : message = \"message\" ></ Child > </ div > </ template > < script > import Child from \"@/components/Child.vue\" ; export default { name : \"app\" , data () { return { message : \"hello child\" }; }, components : { Child } }; </ script >","title":"\u7236\u7ec4\u4ef6\u7ed9\u5b50\u7ec4\u4ef6\u4f20\u503c"},{"location":"JavaScript/Vue\u4e2d\u7236\u7ec4\u4ef6\u4e0e\u5b50\u7ec4\u4ef6\u4e4b\u95f4\u7684\u901a\u4fe1/#_3","text":"components/Child.vue < template > < div > < h2 > \u5b50\u7ec4\u4ef6 </ h2 > < p > {{ message }} </ p > </ div > </ template > < script > export default { name : \" child \" , // \u5b50\u7ec4\u4ef6\u5c5e\u6027 data () { return { message : \"\" , } }, // \u5b50\u7ec4\u4ef6\u65b9\u6cd5 methods :{ setMessage ( msg ) { this . message = msg ; } } } </ script > App.vue < template > < div id = \"app\" > < h2 > \u7236\u7ec4\u4ef6 </ h2 > < ! -- \u6ce8\u518c\u5b50\u7ec4\u4ef6\u5f15\u7528\u4fe1\u606f --> < Child ref = \"child\" ></ Child > < button @click = \"setChildMessage\" > \u4fee\u6539\u5b50\u7ec4\u4ef6\u6570\u636e </ button > < button @click = \"callChildMessage\" > \u8c03\u7528\u5b50\u7ec4\u4ef6\u65b9\u6cd5 </ button > </ div > </ template > < script > import Child from \"@/components/Child.vue\" ; export default { name : \"app\" , components : { Child }, methods : { setChildMessage () { this . $ refs . child . message = \"\u8bbe\u7f6e\u5b50\u7ec4\u4ef6\u5c5e\u6027\" }, callChildMessage (){ this . $ refs . child . setMessage ( \"\u8c03\u7528\u5b50\u7ec4\u4ef6\u65b9\u6cd5\" ); } } }; </ script >","title":"\u7236\u7ec4\u4ef6\u64cd\u4f5c\u5b50\u7ec4\u4ef6\u6570\u636e\uff0c\u65b9\u6cd5"},{"location":"JavaScript/Vue\u4e2d\u7236\u7ec4\u4ef6\u4e0e\u5b50\u7ec4\u4ef6\u4e4b\u95f4\u7684\u901a\u4fe1/#_4","text":"components/Child.vue <template> <div> <h2> \u5b50\u7ec4\u4ef6 </h2> <!-- \u70b9\u51fb\u6309\u94ae\u5c06\u4f1a\u7ed9\u7236\u7ec4\u4ef6\u4f20\u503c --> <button @ click= \"clickButton\" > \u5b50\u7ec4\u4ef6\u6309\u94ae </button> </div> </template> <script> export default { name: \"child\", methods: { clickButton() { // \u5411\u7236\u7ec4\u4ef6\u53d1\u9001\u4fe1\u53f7 vm.$emit(event, args) this.$emit(\"clickButton\", \"\u5b50\u7ec4\u4ef6\u7684\u6309\u94ae\u88ab\u70b9\u51fb\"); } } }; </script> App.vue < template > < div id = \"app\" > < h2 > \u7236\u7ec4\u4ef6 </ h2 > < ! -- \u5904\u7406\u5b50\u7ec4\u4ef6\u7684\u6309\u94ae\u70b9\u51fb\u4e8b\u4ef6 --> < Child @clickButton = \"childClickButton\" ></ Child > </ div > </ template > < script > import Child from \"@/components/Child.vue\" ; export default { name : \"app\" , components : { Child }, methods : { // \u63a5\u6536\u5904\u7406\u5b50\u7ec4\u4ef6\u4f20\u9012\u8fc7\u6765\u7684\u6570\u636e childClickButton ( message ) { console . log ( message ); } } }; </ script >","title":"\u5b50\u7ec4\u4ef6\u7ed9\u7236\u7ec4\u4ef6\u4f20\u503c"},{"location":"JavaScript/Vue\u9879\u76ee\u98ce\u683c\u6307\u5357/","text":"Vue\u9879\u76ee\u98ce\u683c\u6307\u5357 \u4e00\u3001\u5fc5\u8981 1\u3001\u7ec4\u4ef6\u540d\u5e94\u8be5\u59cb\u7ec8\u662f\u591a\u4e2a\u5355\u8bcd Vue . component ( 'todo-item' , { // ... }) export default { name : 'TodoItem' , // ... } 2\u3001\u7ec4\u4ef6\u7684 data \u5fc5\u987b\u662f\u4e00\u4e2a\u51fd\u6570 Vue . component ( 'some-comp' , { data : function () { return { foo : 'bar' } } }) export default { data () { return { foo : 'bar' } } } 3\u3001Prop \u5b9a\u4e49\u5e94\u8be5\u5c3d\u91cf\u8be6\u7ec6\uff0c\u81f3\u5c11\u9700\u8981\u6307\u5b9a\u5176\u7c7b\u578b props : { status : String } 4\u3001\u603b\u662f\u7528 key \u914d\u5408 v-for < ul > < li v-for = \"todo in todos\" :key = \"todo.id\" > {{ todo.text }} </ li > </ ul > 5\u3001\u6c38\u8fdc\u4e0d\u8981\u628a v-if \u548c v-for \u540c\u65f6\u7528\u5728\u540c\u4e00\u4e2a\u5143\u7d20\u4e0a < ul v-if = \"shouldShowUsers\" > < li v-for = \"user in users\" :key = \"user.id\" > {{ user.name }} </ li > </ ul > 6\u3001\u4e3a\u7ec4\u4ef6\u6837\u5f0f\u8bbe\u7f6e\u4f5c\u7528\u57df < template > < button class = \"button button-close\" > X </ button > </ template > <!-- \u4f7f\u7528 `scoped` \u7279\u6027 --> < style scoped > . button { border : none ; border-radius : 2 px ; } . button-close { background-color : red ; } </ style > 7\u3001\u79c1\u6709\u5c5e\u6027\u540d\u4f7f\u7528 $_ \u524d\u7f00 var myGreatMixin = { // ... methods : { $_myGreatMixin_update : function () { // ... } } } \u4e8c\u3001\u5f3a\u70c8\u63a8\u8350\uff08\u589e\u5f3a\u53ef\u8bfb\u6027\uff09 1\u3001\u53ea\u8981\u6709\u80fd\u591f\u62fc\u63a5\u6587\u4ef6\u7684\u6784\u5efa\u7cfb\u7edf\uff0c\u5c31\u628a\u6bcf\u4e2a\u7ec4\u4ef6\u5355\u72ec\u5206\u6210\u6587\u4ef6 components / |- TodoList . vue |- TodoItem . vue 2\u3001\u5355\u6587\u4ef6\u7ec4\u4ef6\u7684\u6587\u4ef6\u540d\u5e94\u8be5\u8981\u4e48\u59cb\u7ec8\u662f\u5355\u8bcd\u5927\u5199\u5f00\u5934 (PascalCase) components / |- MyComponent . vue 3\u3001\u5e94\u7528\u7279\u5b9a\u6837\u5f0f\u548c\u7ea6\u5b9a\u7684\u57fa\u7840\u7ec4\u4ef6\u5e94\u8be5\u5168\u90e8\u4ee5\u4e00\u4e2a\u7279\u5b9a\u7684\u524d\u7f00\u5f00\u5934\uff0c\u6bd4\u5982 Base\u3001App \u6216 V\u3002 components / |- BaseButton . vue |- BaseTable . vue |- BaseIcon . vue 4\u3001\u53ea\u5e94\u8be5\u62e5\u6709\u5355\u4e2a\u6d3b\u8dc3\u5b9e\u4f8b\u7684\u7ec4\u4ef6\u5e94\u8be5\u4ee5 The \u524d\u7f00\u547d\u540d\uff0c\u4ee5\u793a\u5176\u552f\u4e00\u6027\u3002 components / |- TheHeading . vue |- TheSidebar . vue 5\u3001\u548c\u7236\u7ec4\u4ef6\u7d27\u5bc6\u8026\u5408\u7684\u5b50\u7ec4\u4ef6\u5e94\u8be5\u4ee5\u7236\u7ec4\u4ef6\u540d\u4f5c\u4e3a\u524d\u7f00\u547d\u540d components / |- TodoList . vue |- TodoListItem . vue |- TodoListItemButton . vue 6\u3001\u7ec4\u4ef6\u540d\u5e94\u8be5\u4ee5\u9ad8\u7ea7\u522b\u7684 (\u901a\u5e38\u662f\u4e00\u822c\u5316\u63cf\u8ff0\u7684) \u5355\u8bcd\u5f00\u5934\uff0c\u4ee5\u63cf\u8ff0\u6027\u7684\u4fee\u9970\u8bcd\u7ed3\u5c3e\u3002 components / |- SearchButtonClear . vue |- SearchButtonRun . vue |- SearchInputQuery . vue 7\u3001\u5728\u5355\u6587\u4ef6\u7ec4\u4ef6\u3001\u5b57\u7b26\u4e32\u6a21\u677f\u548c JSX \u4e2d\u6ca1\u6709\u5185\u5bb9\u7684\u7ec4\u4ef6\u5e94\u8be5\u662f\u81ea\u95ed\u5408\u7684\u2014\u2014\u4f46\u5728 DOM \u6a21\u677f\u91cc\u6c38\u8fdc\u4e0d\u8981\u8fd9\u6837\u505a\u3002 <!-- \u5728\u5355\u6587\u4ef6\u7ec4\u4ef6\u3001\u5b57\u7b26\u4e32\u6a21\u677f\u548c JSX \u4e2d --> < MyComponent /> <!-- \u5728 DOM \u6a21\u677f\u4e2d --> < my-component ></ my-component > 8\u3001\u5bf9\u4e8e\u7edd\u5927\u591a\u6570\u9879\u76ee\u6765\u8bf4\uff0c\u5728\u5355\u6587\u4ef6\u7ec4\u4ef6\u548c\u5b57\u7b26\u4e32\u6a21\u677f\u4e2d\u7ec4\u4ef6\u540d\u5e94\u8be5\u603b\u662f PascalCase \u7684\u2014\u2014\u4f46\u662f\u5728 DOM \u6a21\u677f\u4e2d\u603b\u662f kebab-case \u7684\u3002 <!-- \u5728\u5355\u6587\u4ef6\u7ec4\u4ef6\u548c\u5b57\u7b26\u4e32\u6a21\u677f\u4e2d --> < MyComponent /> <!-- \u5728 DOM \u6a21\u677f\u4e2d --> < my-component ></ my-component > 9\u3001JS/JSX \u4e2d\u7684\u7ec4\u4ef6\u540d\u5e94\u8be5\u59cb\u7ec8\u662f PascalCase \u7684 Vue . component ( 'MyComponent' , { // ... }) import MyComponent from './MyComponent.vue' export default { name : 'MyComponent' , // ... } 10\u3001\u7ec4\u4ef6\u540d\u5e94\u8be5\u503e\u5411\u4e8e\u5b8c\u6574\u5355\u8bcd\u800c\u4e0d\u662f\u7f29\u5199 components / |- StudentDashboardSettings . vue |- UserProfileOptions . vue 11\u3001\u5728\u58f0\u660e prop \u7684\u65f6\u5019\uff0c\u5176\u547d\u540d\u5e94\u8be5\u59cb\u7ec8\u4f7f\u7528 camelCase\uff0c\u800c\u5728\u6a21\u677f\u548c JSX \u4e2d\u5e94\u8be5\u59cb\u7ec8\u4f7f\u7528 kebab-case props: { greetingText: String } < WelcomeMessage greeting-text = \"hi\" /> 12\u3001\u591a\u4e2a\u7279\u6027\u7684\u5143\u7d20\u5e94\u8be5\u5206\u591a\u884c\u64b0\u5199\uff0c\u6bcf\u4e2a\u7279\u6027\u4e00\u884c\u3002 < img src = \"https://vuejs.org/images/logo.png\" alt = \"Vue Logo\" > < MyComponent foo = \"a\" bar = \"b\" baz = \"c\" /> 13\u3001\u7ec4\u4ef6\u6a21\u677f\u5e94\u8be5\u53ea\u5305\u542b\u7b80\u5355\u7684\u8868\u8fbe\u5f0f\uff0c\u590d\u6742\u7684\u8868\u8fbe\u5f0f\u5219\u5e94\u8be5\u91cd\u6784\u4e3a\u8ba1\u7b97\u5c5e\u6027\u6216\u65b9\u6cd5\u3002 <!-- \u5728\u6a21\u677f\u4e2d --> {{ normalizedFullName }} < script > // \u590d\u6742\u8868\u8fbe\u5f0f\u5df2\u7ecf\u79fb\u5165\u4e00\u4e2a\u8ba1\u7b97\u5c5e\u6027 computed : { normalizedFullName : function () { return this . fullName . split ( ' ' ). map ( function ( word ) { return word [ 0 ]. toUpperCase () + word . slice ( 1 ) }). join ( ' ' ) } } </ script > 14\u3001\u5e94\u8be5\u628a\u590d\u6742\u8ba1\u7b97\u5c5e\u6027\u5206\u5272\u4e3a\u5c3d\u53ef\u80fd\u591a\u7684\u66f4\u7b80\u5355\u7684\u5c5e\u6027\u3002 computed : { basePrice : function () { return this . manufactureCost / ( 1 - this . profitMargin ) }, discount : function () { return this . basePrice * ( this . discountPercent || 0 ) }, finalPrice : function () { return this . basePrice - this . discount } } 15\u3001\u975e\u7a7a HTML \u7279\u6027\u503c\u5e94\u8be5\u59cb\u7ec8\u5e26\u5f15\u53f7 (\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\uff0c\u9009\u4f60 JS \u91cc\u4e0d\u7528\u7684\u90a3\u4e2a)\u3002 < input type = \"text\" > < AppSidebar :style = \"{ width: sidebarWidth + 'px' }\" > 16\u3001\u6307\u4ee4\u7f29\u5199 (\u7528 : \u8868\u793a v-bind: \u3001\u7528 @ \u8868\u793a v-on: \u548c\u7528 # \u8868\u793a v-slot:) \u5e94\u8be5\u8981\u4e48\u90fd\u7528\u8981\u4e48\u90fd\u4e0d\u7528\u3002 < input :value = \"newTodoText\" :placeholder = \"newTodoInstructions\" > < input @ input = \"onInput\" @ focus = \"onFocus\" > < template # header > < h1 > Here might be a page title </ h1 > </ template > \u4e09\u3001\u63a8\u8350\uff08\u5c06\u9009\u62e9\u548c\u8ba4\u77e5\u6210\u672c\u6700\u5c0f\u5316\uff09 1\u3001\u7ec4\u4ef6/\u5b9e\u4f8b\u7684\u9009\u9879\u5e94\u8be5\u6709\u7edf\u4e00\u7684\u987a\u5e8f\u3002 1 \u3001\u526f\u4f5c\u7528 ( \u89e6\u53d1\u7ec4\u4ef6\u5916\u7684\u5f71\u54cd ) el 2 \u3001\u5168\u5c40\u611f\u77e5 ( \u8981\u6c42\u7ec4\u4ef6\u4ee5\u5916\u7684\u77e5\u8bc6 ) name parent 3 \u3001\u7ec4\u4ef6\u7c7b\u578b ( \u66f4\u6539\u7ec4\u4ef6\u7684\u7c7b\u578b ) functional 4 \u3001\u6a21\u677f\u4fee\u6539\u5668 ( \u6539\u53d8\u6a21\u677f\u7684\u7f16\u8bd1\u65b9\u5f0f ) delimiters comments 5 \u3001\u6a21\u677f\u4f9d\u8d56 ( \u6a21\u677f\u5185\u4f7f\u7528\u7684\u8d44\u6e90 ) components directives filters 6 \u3001\u7ec4\u5408 ( \u5411\u9009\u9879\u91cc\u5408\u5e76\u5c5e\u6027 ) extends mixins 7 \u3001\u63a5\u53e3 ( \u7ec4\u4ef6\u7684\u63a5\u53e3 ) inheritAttrs model props / propsData 8 \u3001\u672c\u5730\u72b6\u6001 ( \u672c\u5730\u7684\u54cd\u5e94\u5f0f\u5c5e\u6027 ) data computed 9 \u3001\u4e8b\u4ef6 ( \u901a\u8fc7\u54cd\u5e94\u5f0f\u4e8b\u4ef6\u89e6\u53d1\u7684\u56de\u8c03 ) watch 10 \u3001\u751f\u547d\u5468\u671f\u94a9\u5b50 ( \u6309\u7167\u5b83\u4eec\u88ab\u8c03\u7528\u7684\u987a\u5e8f ) beforeCreate created beforeMount mounted beforeUpdate updated activated deactivated beforeDestroy destroyed 11 \u3001\u975e\u54cd\u5e94\u5f0f\u7684\u5c5e\u6027 ( \u4e0d\u4f9d\u8d56\u54cd\u5e94\u7cfb\u7edf\u7684\u5b9e\u4f8b\u5c5e\u6027 ) methods 12 \u3001\u6e32\u67d3 ( \u7ec4\u4ef6\u8f93\u51fa\u7684\u58f0\u660e\u5f0f\u63cf\u8ff0 ) template / render renderError 2\u3001\u5143\u7d20 (\u5305\u62ec\u7ec4\u4ef6) \u7684\u7279\u6027\u5e94\u8be5\u6709\u7edf\u4e00\u7684\u987a\u5e8f\u3002 1 \u3001\u5b9a\u4e49 ( \u63d0\u4f9b\u7ec4\u4ef6\u7684\u9009\u9879 ) is 2 \u3001\u5217\u8868\u6e32\u67d3 ( \u521b\u5efa\u591a\u4e2a\u53d8\u5316\u7684\u76f8\u540c\u5143\u7d20 ) v - for 3 \u3001\u6761\u4ef6\u6e32\u67d3 ( \u5143\u7d20\u662f\u5426\u6e32\u67d3 / \u663e\u793a ) v - if v - else - if v - else v - show v - cloak 4 \u3001\u6e32\u67d3\u65b9\u5f0f ( \u6539\u53d8\u5143\u7d20\u7684\u6e32\u67d3\u65b9\u5f0f ) v - pre v - once 5 \u3001\u5168\u5c40\u611f\u77e5 ( \u9700\u8981\u8d85\u8d8a\u7ec4\u4ef6\u7684\u77e5\u8bc6 ) id 6 \u3001\u552f\u4e00\u7684\u7279\u6027 ( \u9700\u8981\u552f\u4e00\u503c\u7684\u7279\u6027 ) ref key 7 \u3001\u53cc\u5411\u7ed1\u5b9a ( \u628a\u7ed1\u5b9a\u548c\u4e8b\u4ef6\u7ed3\u5408\u8d77\u6765 ) v - model 8 \u3001\u5176\u5b83\u7279\u6027 ( \u6240\u6709\u666e\u901a\u7684\u7ed1\u5b9a\u6216\u672a\u7ed1\u5b9a\u7684\u7279\u6027 ) 9 \u3001\u4e8b\u4ef6 ( \u7ec4\u4ef6\u4e8b\u4ef6\u76d1\u542c\u5668 ) v - on 10 \u3001\u5185\u5bb9 ( \u8986\u5199\u5143\u7d20\u7684\u5185\u5bb9 ) v - html v - text 3\u3001\u4f60\u53ef\u80fd\u60f3\u5728\u591a\u4e2a\u5c5e\u6027\u4e4b\u95f4\u589e\u52a0\u4e00\u4e2a\u7a7a\u884c\uff0c\u7279\u522b\u662f\u5728\u8fd9\u4e9b\u9009\u9879\u4e00\u5c4f\u653e\u4e0d\u4e0b\uff0c\u9700\u8981\u6eda\u52a8\u624d\u80fd\u90fd\u770b\u5230\u7684\u65f6\u5019\u3002 props : { value : { type : String , required : true }, focused : { type : Boolean , default : false }, label : String , icon : String }, computed : { formattedValue : function () { // ... }, inputClasses : function () { // ... } } 4\u3001\u5355\u6587\u4ef6\u7ec4\u4ef6\u987a\u5e8f\u56e0\u4e3a\u53e6\u5916\u4e24\u4e2a\u6807\u7b7e\u81f3\u5c11\u8981\u6709\u4e00\u4e2a\u3002 <!-- ComponentA.vue --> < template > ... </ template > < script > /* ... */ </ script > < style > /* ... */ </ style > \u56db\u3001\u8c28\u614e\u4f7f\u7528 (\u6709\u6f5c\u5728\u5371\u9669\u7684\u6a21\u5f0f) 1\u3001\u5982\u679c\u4e00\u7ec4 v-if + v-else \u7684\u5143\u7d20\u7c7b\u578b\u76f8\u540c\uff0c\u6700\u597d\u4f7f\u7528 key (\u6bd4\u5982\u4e24\u4e2a div \u5143\u7d20)\u3002 < div v-if = \"error\" key = \"search-status\" > \u9519\u8bef\uff1a{{ error }} </ div > < div v-else key = \"search-results\" > {{ results }} </ div > 2\u3001\u5143\u7d20\u9009\u62e9\u5668\u5e94\u8be5\u907f\u514d\u5728 scoped \u4e2d\u51fa\u73b0\uff0c\u5e94\u8be5\u4f7f\u7528\u7c7b\u9009\u62e9\u5668\u3002 < template > < button class = \"btn btn-close\" > X </ button > </ template > < style scoped > . btn-close { background-color : red ; } </ style > 3\u3001\u5e94\u8be5\u4f18\u5148\u901a\u8fc7 prop \u548c\u4e8b\u4ef6\u8fdb\u884c\u7236\u5b50\u7ec4\u4ef6\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u800c\u4e0d\u662f this.$parent \u6216\u6539\u53d8 prop\u3002 Vue . component ( 'TodoItem' , { props : { todo : { type : Object , required : true } }, template : ` <input :value=\"todo.text\" @input=\"$emit('input', $event.target.value)\" > ` }) 4\u3001\u5e94\u8be5\u4f18\u5148\u901a\u8fc7 Vuex \u7ba1\u7406\u5168\u5c40\u72b6\u6001\uff0c\u800c\u4e0d\u662f\u901a\u8fc7 this.$root \u6216\u4e00\u4e2a\u5168\u5c40\u4e8b\u4ef6\u603b\u7ebf\u3002 // store/modules/todos.js export default { state : { list : [] }, mutations : { REMOVE_TODO ( state , todoId ) { state . list = state . list . filter ( todo => todo . id !== todoId ) } }, actions : { removeTodo ({ commit , state }, todo ) { commit ( 'REMOVE_TODO' , todo . id ) } } } <!-- TodoItem.vue --> < template > < span > {{ todo.text }} < button @ click = \"removeTodo(todo)\" > X </ button > </ span > </ template > < script > import { mapActions } from 'vuex' export default { props : { todo : { type : Object , required : true } }, methods : mapActions ([ 'removeTodo' ]) } </ script > \u539f\u6587\uff1ahttps://cn.vuejs.org/v2/style-guide/","title":"Vue\u9879\u76ee\u98ce\u683c\u6307\u5357"},{"location":"JavaScript/Vue\u9879\u76ee\u98ce\u683c\u6307\u5357/#vue","text":"","title":"Vue\u9879\u76ee\u98ce\u683c\u6307\u5357"},{"location":"JavaScript/Vue\u9879\u76ee\u98ce\u683c\u6307\u5357/#_1","text":"1\u3001\u7ec4\u4ef6\u540d\u5e94\u8be5\u59cb\u7ec8\u662f\u591a\u4e2a\u5355\u8bcd Vue . component ( 'todo-item' , { // ... }) export default { name : 'TodoItem' , // ... } 2\u3001\u7ec4\u4ef6\u7684 data \u5fc5\u987b\u662f\u4e00\u4e2a\u51fd\u6570 Vue . component ( 'some-comp' , { data : function () { return { foo : 'bar' } } }) export default { data () { return { foo : 'bar' } } } 3\u3001Prop \u5b9a\u4e49\u5e94\u8be5\u5c3d\u91cf\u8be6\u7ec6\uff0c\u81f3\u5c11\u9700\u8981\u6307\u5b9a\u5176\u7c7b\u578b props : { status : String } 4\u3001\u603b\u662f\u7528 key \u914d\u5408 v-for < ul > < li v-for = \"todo in todos\" :key = \"todo.id\" > {{ todo.text }} </ li > </ ul > 5\u3001\u6c38\u8fdc\u4e0d\u8981\u628a v-if \u548c v-for \u540c\u65f6\u7528\u5728\u540c\u4e00\u4e2a\u5143\u7d20\u4e0a < ul v-if = \"shouldShowUsers\" > < li v-for = \"user in users\" :key = \"user.id\" > {{ user.name }} </ li > </ ul > 6\u3001\u4e3a\u7ec4\u4ef6\u6837\u5f0f\u8bbe\u7f6e\u4f5c\u7528\u57df < template > < button class = \"button button-close\" > X </ button > </ template > <!-- \u4f7f\u7528 `scoped` \u7279\u6027 --> < style scoped > . button { border : none ; border-radius : 2 px ; } . button-close { background-color : red ; } </ style > 7\u3001\u79c1\u6709\u5c5e\u6027\u540d\u4f7f\u7528 $_ \u524d\u7f00 var myGreatMixin = { // ... methods : { $_myGreatMixin_update : function () { // ... } } }","title":"\u4e00\u3001\u5fc5\u8981"},{"location":"JavaScript/Vue\u9879\u76ee\u98ce\u683c\u6307\u5357/#_2","text":"1\u3001\u53ea\u8981\u6709\u80fd\u591f\u62fc\u63a5\u6587\u4ef6\u7684\u6784\u5efa\u7cfb\u7edf\uff0c\u5c31\u628a\u6bcf\u4e2a\u7ec4\u4ef6\u5355\u72ec\u5206\u6210\u6587\u4ef6 components / |- TodoList . vue |- TodoItem . vue 2\u3001\u5355\u6587\u4ef6\u7ec4\u4ef6\u7684\u6587\u4ef6\u540d\u5e94\u8be5\u8981\u4e48\u59cb\u7ec8\u662f\u5355\u8bcd\u5927\u5199\u5f00\u5934 (PascalCase) components / |- MyComponent . vue 3\u3001\u5e94\u7528\u7279\u5b9a\u6837\u5f0f\u548c\u7ea6\u5b9a\u7684\u57fa\u7840\u7ec4\u4ef6\u5e94\u8be5\u5168\u90e8\u4ee5\u4e00\u4e2a\u7279\u5b9a\u7684\u524d\u7f00\u5f00\u5934\uff0c\u6bd4\u5982 Base\u3001App \u6216 V\u3002 components / |- BaseButton . vue |- BaseTable . vue |- BaseIcon . vue 4\u3001\u53ea\u5e94\u8be5\u62e5\u6709\u5355\u4e2a\u6d3b\u8dc3\u5b9e\u4f8b\u7684\u7ec4\u4ef6\u5e94\u8be5\u4ee5 The \u524d\u7f00\u547d\u540d\uff0c\u4ee5\u793a\u5176\u552f\u4e00\u6027\u3002 components / |- TheHeading . vue |- TheSidebar . vue 5\u3001\u548c\u7236\u7ec4\u4ef6\u7d27\u5bc6\u8026\u5408\u7684\u5b50\u7ec4\u4ef6\u5e94\u8be5\u4ee5\u7236\u7ec4\u4ef6\u540d\u4f5c\u4e3a\u524d\u7f00\u547d\u540d components / |- TodoList . vue |- TodoListItem . vue |- TodoListItemButton . vue 6\u3001\u7ec4\u4ef6\u540d\u5e94\u8be5\u4ee5\u9ad8\u7ea7\u522b\u7684 (\u901a\u5e38\u662f\u4e00\u822c\u5316\u63cf\u8ff0\u7684) \u5355\u8bcd\u5f00\u5934\uff0c\u4ee5\u63cf\u8ff0\u6027\u7684\u4fee\u9970\u8bcd\u7ed3\u5c3e\u3002 components / |- SearchButtonClear . vue |- SearchButtonRun . vue |- SearchInputQuery . vue 7\u3001\u5728\u5355\u6587\u4ef6\u7ec4\u4ef6\u3001\u5b57\u7b26\u4e32\u6a21\u677f\u548c JSX \u4e2d\u6ca1\u6709\u5185\u5bb9\u7684\u7ec4\u4ef6\u5e94\u8be5\u662f\u81ea\u95ed\u5408\u7684\u2014\u2014\u4f46\u5728 DOM \u6a21\u677f\u91cc\u6c38\u8fdc\u4e0d\u8981\u8fd9\u6837\u505a\u3002 <!-- \u5728\u5355\u6587\u4ef6\u7ec4\u4ef6\u3001\u5b57\u7b26\u4e32\u6a21\u677f\u548c JSX \u4e2d --> < MyComponent /> <!-- \u5728 DOM \u6a21\u677f\u4e2d --> < my-component ></ my-component > 8\u3001\u5bf9\u4e8e\u7edd\u5927\u591a\u6570\u9879\u76ee\u6765\u8bf4\uff0c\u5728\u5355\u6587\u4ef6\u7ec4\u4ef6\u548c\u5b57\u7b26\u4e32\u6a21\u677f\u4e2d\u7ec4\u4ef6\u540d\u5e94\u8be5\u603b\u662f PascalCase \u7684\u2014\u2014\u4f46\u662f\u5728 DOM \u6a21\u677f\u4e2d\u603b\u662f kebab-case \u7684\u3002 <!-- \u5728\u5355\u6587\u4ef6\u7ec4\u4ef6\u548c\u5b57\u7b26\u4e32\u6a21\u677f\u4e2d --> < MyComponent /> <!-- \u5728 DOM \u6a21\u677f\u4e2d --> < my-component ></ my-component > 9\u3001JS/JSX \u4e2d\u7684\u7ec4\u4ef6\u540d\u5e94\u8be5\u59cb\u7ec8\u662f PascalCase \u7684 Vue . component ( 'MyComponent' , { // ... }) import MyComponent from './MyComponent.vue' export default { name : 'MyComponent' , // ... } 10\u3001\u7ec4\u4ef6\u540d\u5e94\u8be5\u503e\u5411\u4e8e\u5b8c\u6574\u5355\u8bcd\u800c\u4e0d\u662f\u7f29\u5199 components / |- StudentDashboardSettings . vue |- UserProfileOptions . vue 11\u3001\u5728\u58f0\u660e prop \u7684\u65f6\u5019\uff0c\u5176\u547d\u540d\u5e94\u8be5\u59cb\u7ec8\u4f7f\u7528 camelCase\uff0c\u800c\u5728\u6a21\u677f\u548c JSX \u4e2d\u5e94\u8be5\u59cb\u7ec8\u4f7f\u7528 kebab-case props: { greetingText: String } < WelcomeMessage greeting-text = \"hi\" /> 12\u3001\u591a\u4e2a\u7279\u6027\u7684\u5143\u7d20\u5e94\u8be5\u5206\u591a\u884c\u64b0\u5199\uff0c\u6bcf\u4e2a\u7279\u6027\u4e00\u884c\u3002 < img src = \"https://vuejs.org/images/logo.png\" alt = \"Vue Logo\" > < MyComponent foo = \"a\" bar = \"b\" baz = \"c\" /> 13\u3001\u7ec4\u4ef6\u6a21\u677f\u5e94\u8be5\u53ea\u5305\u542b\u7b80\u5355\u7684\u8868\u8fbe\u5f0f\uff0c\u590d\u6742\u7684\u8868\u8fbe\u5f0f\u5219\u5e94\u8be5\u91cd\u6784\u4e3a\u8ba1\u7b97\u5c5e\u6027\u6216\u65b9\u6cd5\u3002 <!-- \u5728\u6a21\u677f\u4e2d --> {{ normalizedFullName }} < script > // \u590d\u6742\u8868\u8fbe\u5f0f\u5df2\u7ecf\u79fb\u5165\u4e00\u4e2a\u8ba1\u7b97\u5c5e\u6027 computed : { normalizedFullName : function () { return this . fullName . split ( ' ' ). map ( function ( word ) { return word [ 0 ]. toUpperCase () + word . slice ( 1 ) }). join ( ' ' ) } } </ script > 14\u3001\u5e94\u8be5\u628a\u590d\u6742\u8ba1\u7b97\u5c5e\u6027\u5206\u5272\u4e3a\u5c3d\u53ef\u80fd\u591a\u7684\u66f4\u7b80\u5355\u7684\u5c5e\u6027\u3002 computed : { basePrice : function () { return this . manufactureCost / ( 1 - this . profitMargin ) }, discount : function () { return this . basePrice * ( this . discountPercent || 0 ) }, finalPrice : function () { return this . basePrice - this . discount } } 15\u3001\u975e\u7a7a HTML \u7279\u6027\u503c\u5e94\u8be5\u59cb\u7ec8\u5e26\u5f15\u53f7 (\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\uff0c\u9009\u4f60 JS \u91cc\u4e0d\u7528\u7684\u90a3\u4e2a)\u3002 < input type = \"text\" > < AppSidebar :style = \"{ width: sidebarWidth + 'px' }\" > 16\u3001\u6307\u4ee4\u7f29\u5199 (\u7528 : \u8868\u793a v-bind: \u3001\u7528 @ \u8868\u793a v-on: \u548c\u7528 # \u8868\u793a v-slot:) \u5e94\u8be5\u8981\u4e48\u90fd\u7528\u8981\u4e48\u90fd\u4e0d\u7528\u3002 < input :value = \"newTodoText\" :placeholder = \"newTodoInstructions\" > < input @ input = \"onInput\" @ focus = \"onFocus\" > < template # header > < h1 > Here might be a page title </ h1 > </ template >","title":"\u4e8c\u3001\u5f3a\u70c8\u63a8\u8350\uff08\u589e\u5f3a\u53ef\u8bfb\u6027\uff09"},{"location":"JavaScript/Vue\u9879\u76ee\u98ce\u683c\u6307\u5357/#_3","text":"1\u3001\u7ec4\u4ef6/\u5b9e\u4f8b\u7684\u9009\u9879\u5e94\u8be5\u6709\u7edf\u4e00\u7684\u987a\u5e8f\u3002 1 \u3001\u526f\u4f5c\u7528 ( \u89e6\u53d1\u7ec4\u4ef6\u5916\u7684\u5f71\u54cd ) el 2 \u3001\u5168\u5c40\u611f\u77e5 ( \u8981\u6c42\u7ec4\u4ef6\u4ee5\u5916\u7684\u77e5\u8bc6 ) name parent 3 \u3001\u7ec4\u4ef6\u7c7b\u578b ( \u66f4\u6539\u7ec4\u4ef6\u7684\u7c7b\u578b ) functional 4 \u3001\u6a21\u677f\u4fee\u6539\u5668 ( \u6539\u53d8\u6a21\u677f\u7684\u7f16\u8bd1\u65b9\u5f0f ) delimiters comments 5 \u3001\u6a21\u677f\u4f9d\u8d56 ( \u6a21\u677f\u5185\u4f7f\u7528\u7684\u8d44\u6e90 ) components directives filters 6 \u3001\u7ec4\u5408 ( \u5411\u9009\u9879\u91cc\u5408\u5e76\u5c5e\u6027 ) extends mixins 7 \u3001\u63a5\u53e3 ( \u7ec4\u4ef6\u7684\u63a5\u53e3 ) inheritAttrs model props / propsData 8 \u3001\u672c\u5730\u72b6\u6001 ( \u672c\u5730\u7684\u54cd\u5e94\u5f0f\u5c5e\u6027 ) data computed 9 \u3001\u4e8b\u4ef6 ( \u901a\u8fc7\u54cd\u5e94\u5f0f\u4e8b\u4ef6\u89e6\u53d1\u7684\u56de\u8c03 ) watch 10 \u3001\u751f\u547d\u5468\u671f\u94a9\u5b50 ( \u6309\u7167\u5b83\u4eec\u88ab\u8c03\u7528\u7684\u987a\u5e8f ) beforeCreate created beforeMount mounted beforeUpdate updated activated deactivated beforeDestroy destroyed 11 \u3001\u975e\u54cd\u5e94\u5f0f\u7684\u5c5e\u6027 ( \u4e0d\u4f9d\u8d56\u54cd\u5e94\u7cfb\u7edf\u7684\u5b9e\u4f8b\u5c5e\u6027 ) methods 12 \u3001\u6e32\u67d3 ( \u7ec4\u4ef6\u8f93\u51fa\u7684\u58f0\u660e\u5f0f\u63cf\u8ff0 ) template / render renderError 2\u3001\u5143\u7d20 (\u5305\u62ec\u7ec4\u4ef6) \u7684\u7279\u6027\u5e94\u8be5\u6709\u7edf\u4e00\u7684\u987a\u5e8f\u3002 1 \u3001\u5b9a\u4e49 ( \u63d0\u4f9b\u7ec4\u4ef6\u7684\u9009\u9879 ) is 2 \u3001\u5217\u8868\u6e32\u67d3 ( \u521b\u5efa\u591a\u4e2a\u53d8\u5316\u7684\u76f8\u540c\u5143\u7d20 ) v - for 3 \u3001\u6761\u4ef6\u6e32\u67d3 ( \u5143\u7d20\u662f\u5426\u6e32\u67d3 / \u663e\u793a ) v - if v - else - if v - else v - show v - cloak 4 \u3001\u6e32\u67d3\u65b9\u5f0f ( \u6539\u53d8\u5143\u7d20\u7684\u6e32\u67d3\u65b9\u5f0f ) v - pre v - once 5 \u3001\u5168\u5c40\u611f\u77e5 ( \u9700\u8981\u8d85\u8d8a\u7ec4\u4ef6\u7684\u77e5\u8bc6 ) id 6 \u3001\u552f\u4e00\u7684\u7279\u6027 ( \u9700\u8981\u552f\u4e00\u503c\u7684\u7279\u6027 ) ref key 7 \u3001\u53cc\u5411\u7ed1\u5b9a ( \u628a\u7ed1\u5b9a\u548c\u4e8b\u4ef6\u7ed3\u5408\u8d77\u6765 ) v - model 8 \u3001\u5176\u5b83\u7279\u6027 ( \u6240\u6709\u666e\u901a\u7684\u7ed1\u5b9a\u6216\u672a\u7ed1\u5b9a\u7684\u7279\u6027 ) 9 \u3001\u4e8b\u4ef6 ( \u7ec4\u4ef6\u4e8b\u4ef6\u76d1\u542c\u5668 ) v - on 10 \u3001\u5185\u5bb9 ( \u8986\u5199\u5143\u7d20\u7684\u5185\u5bb9 ) v - html v - text 3\u3001\u4f60\u53ef\u80fd\u60f3\u5728\u591a\u4e2a\u5c5e\u6027\u4e4b\u95f4\u589e\u52a0\u4e00\u4e2a\u7a7a\u884c\uff0c\u7279\u522b\u662f\u5728\u8fd9\u4e9b\u9009\u9879\u4e00\u5c4f\u653e\u4e0d\u4e0b\uff0c\u9700\u8981\u6eda\u52a8\u624d\u80fd\u90fd\u770b\u5230\u7684\u65f6\u5019\u3002 props : { value : { type : String , required : true }, focused : { type : Boolean , default : false }, label : String , icon : String }, computed : { formattedValue : function () { // ... }, inputClasses : function () { // ... } } 4\u3001\u5355\u6587\u4ef6\u7ec4\u4ef6\u987a\u5e8f\u56e0\u4e3a\u53e6\u5916\u4e24\u4e2a\u6807\u7b7e\u81f3\u5c11\u8981\u6709\u4e00\u4e2a\u3002 <!-- ComponentA.vue --> < template > ... </ template > < script > /* ... */ </ script > < style > /* ... */ </ style >","title":"\u4e09\u3001\u63a8\u8350\uff08\u5c06\u9009\u62e9\u548c\u8ba4\u77e5\u6210\u672c\u6700\u5c0f\u5316\uff09"},{"location":"JavaScript/Vue\u9879\u76ee\u98ce\u683c\u6307\u5357/#_4","text":"1\u3001\u5982\u679c\u4e00\u7ec4 v-if + v-else \u7684\u5143\u7d20\u7c7b\u578b\u76f8\u540c\uff0c\u6700\u597d\u4f7f\u7528 key (\u6bd4\u5982\u4e24\u4e2a div \u5143\u7d20)\u3002 < div v-if = \"error\" key = \"search-status\" > \u9519\u8bef\uff1a{{ error }} </ div > < div v-else key = \"search-results\" > {{ results }} </ div > 2\u3001\u5143\u7d20\u9009\u62e9\u5668\u5e94\u8be5\u907f\u514d\u5728 scoped \u4e2d\u51fa\u73b0\uff0c\u5e94\u8be5\u4f7f\u7528\u7c7b\u9009\u62e9\u5668\u3002 < template > < button class = \"btn btn-close\" > X </ button > </ template > < style scoped > . btn-close { background-color : red ; } </ style > 3\u3001\u5e94\u8be5\u4f18\u5148\u901a\u8fc7 prop \u548c\u4e8b\u4ef6\u8fdb\u884c\u7236\u5b50\u7ec4\u4ef6\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u800c\u4e0d\u662f this.$parent \u6216\u6539\u53d8 prop\u3002 Vue . component ( 'TodoItem' , { props : { todo : { type : Object , required : true } }, template : ` <input :value=\"todo.text\" @input=\"$emit('input', $event.target.value)\" > ` }) 4\u3001\u5e94\u8be5\u4f18\u5148\u901a\u8fc7 Vuex \u7ba1\u7406\u5168\u5c40\u72b6\u6001\uff0c\u800c\u4e0d\u662f\u901a\u8fc7 this.$root \u6216\u4e00\u4e2a\u5168\u5c40\u4e8b\u4ef6\u603b\u7ebf\u3002 // store/modules/todos.js export default { state : { list : [] }, mutations : { REMOVE_TODO ( state , todoId ) { state . list = state . list . filter ( todo => todo . id !== todoId ) } }, actions : { removeTodo ({ commit , state }, todo ) { commit ( 'REMOVE_TODO' , todo . id ) } } } <!-- TodoItem.vue --> < template > < span > {{ todo.text }} < button @ click = \"removeTodo(todo)\" > X </ button > </ span > </ template > < script > import { mapActions } from 'vuex' export default { props : { todo : { type : Object , required : true } }, methods : mapActions ([ 'removeTodo' ]) } </ script > \u539f\u6587\uff1ahttps://cn.vuejs.org/v2/style-guide/","title":"\u56db\u3001\u8c28\u614e\u4f7f\u7528 (\u6709\u6f5c\u5728\u5371\u9669\u7684\u6a21\u5f0f)"},{"location":"JavaScript/axios\u5728\u9879\u76ee\u4e2d\u7684\u5e94\u7528/","text":"\u7528\u5230\u7684\u6a21\u5757\uff1a Vue Axios vant 1\u3001\u63a5\u53e3\u914d\u7f6e server/contactApi.js // \u7edf\u4e00\u63a5\u53e3\u7ba1\u7406 const CONTACT_API = { // \u83b7\u53d6\u8054\u7cfb\u4eba\u5217\u8868 getContactList : { method : \"get\" , url : \"/contactList.json\" } } export default CONTACT_API 2\u3001\u914d\u7f6e\u5168\u5c40\u7684Http\u8bf7\u6c42\u51fd\u6570 server/http.js import axios from \"axios\" ; import contactApi from \"./contactApi\" import { Toast } from \"vant\" let instance = axios . create ({ baseURL : \"/\" , timeout : 1000 // \u6beb\u79d2 }) // \u5305\u88c5\u8bf7\u6c42\u65b9\u6cd5\u7684\u5bb9\u5668 const Http = {} for ( let key in contactApi ){ let api = contactApi [ key ] let response = {}; // async \u4f5c\u7528\uff0c\u907f\u514d\u8fdb\u5165\u56de\u8c03\u5730\u72f1 Http [ key ] = async function ( data ){ try { response = await instance [ api . method ]( api . url , { params : data }) } catch ( err ){ response = err ; } return response ; } } // \u8bf7\u6c42\u62e6\u622a\u5668 instance . interceptors . request . use ( config => { Toast . loading ({ mask : false , duration : 0 , // \u4e00\u76f4\u5b58\u5728 forbidClick : true , // \u7981\u6b62\u70b9\u51fb message : \"\u52a0\u8f7d\u4e2d...\" }) return config ; },()=>{ Toast . clear () Toast ( \"\u8bf7\u6c42\u51fa\u9519\" ) } ) // \u6dfb\u52a0\u54cd\u5e94\u62e6\u622a\u5668 instance . interceptors . response . use ( res => { Toast . clear () return res . data ; },()=>{ Toast . clear () Toast ( \"\u8bf7\u6c42\u51fa\u9519\" ) } ) export default Http 3\u3001\u5168\u5c40\u6302\u8f7d main.js // \u628aHttp\u6302\u5728\u5230vue\u5b9e\u4f8b\u4e0a\uff0c\u5168\u5c40\u53ef\u7528 Vue . prototype . $Http = Http 4\u3001\u89c6\u56fe\u4e2d\u8c03\u7528http views/VantIndex.vue < template > < div > <!-- \u8054\u7cfb\u4eba\u5217\u8868 --> < van-contact-list :list = \"list\" /> </ div > </ template > < script > // \u5f15\u5165\u7ec4\u4ef6 import { ContactList } from \"vant\" ; export default { name : \"vantIndex\" , data () { return { list : [] }; }, // \u6ce8\u518c\u7ec4\u4ef6 components : { [ ContactList . name ] : ContactList }, methods : { async getContactList () { let res = await this . $Http . getContactList ({ name : \"Tom\" }); this . list = res . data ; } }, created () { this . getContactList (); } }; </ script > 5\u3001\u4fee\u6539\u8def\u7531 router.js routes : [ { path : '/' , name : 'index' , component : () => import ( './views/VantIndex.vue' ) } ] 6\u3001\u6d4b\u8bd5\u6570\u636e public/contactList.json { \"code\" : 200 , \"data\" : [ { \"name\" : \"\u5f20\u4e09\" , \"tel\" : \"13000000000\" , \"id\" : 1 }, { \"name\" : \"\u674e\u56db\" , \"tel\" : \"13000000001\" , \"id\" : 2 }, { \"name\" : \"\u738b\u4e94\" , \"tel\" : \"13000000002\" , \"id\" : 3 } ] } \u542f\u52a8\u670d\u52a1\u8bbf\u95ee\u6d4b\u8bd5 npm run serve http://localhost:8080/ \u73af\u5883\u914d\u7f6e\u53c2\u8003 \u524d\u7aef\u5f00\u53d1\uff1aaxios\u5728vue\u4e2d\u7684\u4f7f\u7528 \u524d\u7aef\u5f00\u53d1\uff1avant\u5728vue\u4e2d\u7684\u4f7f\u7528","title":"Axios\u5728\u9879\u76ee\u4e2d\u7684\u5e94\u7528"},{"location":"JavaScript/axios\u5728\u9879\u76ee\u4e2d\u7684\u5e94\u7528/#1","text":"server/contactApi.js // \u7edf\u4e00\u63a5\u53e3\u7ba1\u7406 const CONTACT_API = { // \u83b7\u53d6\u8054\u7cfb\u4eba\u5217\u8868 getContactList : { method : \"get\" , url : \"/contactList.json\" } } export default CONTACT_API","title":"1\u3001\u63a5\u53e3\u914d\u7f6e"},{"location":"JavaScript/axios\u5728\u9879\u76ee\u4e2d\u7684\u5e94\u7528/#2http","text":"server/http.js import axios from \"axios\" ; import contactApi from \"./contactApi\" import { Toast } from \"vant\" let instance = axios . create ({ baseURL : \"/\" , timeout : 1000 // \u6beb\u79d2 }) // \u5305\u88c5\u8bf7\u6c42\u65b9\u6cd5\u7684\u5bb9\u5668 const Http = {} for ( let key in contactApi ){ let api = contactApi [ key ] let response = {}; // async \u4f5c\u7528\uff0c\u907f\u514d\u8fdb\u5165\u56de\u8c03\u5730\u72f1 Http [ key ] = async function ( data ){ try { response = await instance [ api . method ]( api . url , { params : data }) } catch ( err ){ response = err ; } return response ; } } // \u8bf7\u6c42\u62e6\u622a\u5668 instance . interceptors . request . use ( config => { Toast . loading ({ mask : false , duration : 0 , // \u4e00\u76f4\u5b58\u5728 forbidClick : true , // \u7981\u6b62\u70b9\u51fb message : \"\u52a0\u8f7d\u4e2d...\" }) return config ; },()=>{ Toast . clear () Toast ( \"\u8bf7\u6c42\u51fa\u9519\" ) } ) // \u6dfb\u52a0\u54cd\u5e94\u62e6\u622a\u5668 instance . interceptors . response . use ( res => { Toast . clear () return res . data ; },()=>{ Toast . clear () Toast ( \"\u8bf7\u6c42\u51fa\u9519\" ) } ) export default Http","title":"2\u3001\u914d\u7f6e\u5168\u5c40\u7684Http\u8bf7\u6c42\u51fd\u6570"},{"location":"JavaScript/axios\u5728\u9879\u76ee\u4e2d\u7684\u5e94\u7528/#3","text":"main.js // \u628aHttp\u6302\u5728\u5230vue\u5b9e\u4f8b\u4e0a\uff0c\u5168\u5c40\u53ef\u7528 Vue . prototype . $Http = Http","title":"3\u3001\u5168\u5c40\u6302\u8f7d"},{"location":"JavaScript/axios\u5728\u9879\u76ee\u4e2d\u7684\u5e94\u7528/#4http","text":"views/VantIndex.vue < template > < div > <!-- \u8054\u7cfb\u4eba\u5217\u8868 --> < van-contact-list :list = \"list\" /> </ div > </ template > < script > // \u5f15\u5165\u7ec4\u4ef6 import { ContactList } from \"vant\" ; export default { name : \"vantIndex\" , data () { return { list : [] }; }, // \u6ce8\u518c\u7ec4\u4ef6 components : { [ ContactList . name ] : ContactList }, methods : { async getContactList () { let res = await this . $Http . getContactList ({ name : \"Tom\" }); this . list = res . data ; } }, created () { this . getContactList (); } }; </ script >","title":"4\u3001\u89c6\u56fe\u4e2d\u8c03\u7528http"},{"location":"JavaScript/axios\u5728\u9879\u76ee\u4e2d\u7684\u5e94\u7528/#5","text":"router.js routes : [ { path : '/' , name : 'index' , component : () => import ( './views/VantIndex.vue' ) } ]","title":"5\u3001\u4fee\u6539\u8def\u7531"},{"location":"JavaScript/axios\u5728\u9879\u76ee\u4e2d\u7684\u5e94\u7528/#6-publiccontactlistjson","text":"{ \"code\" : 200 , \"data\" : [ { \"name\" : \"\u5f20\u4e09\" , \"tel\" : \"13000000000\" , \"id\" : 1 }, { \"name\" : \"\u674e\u56db\" , \"tel\" : \"13000000001\" , \"id\" : 2 }, { \"name\" : \"\u738b\u4e94\" , \"tel\" : \"13000000002\" , \"id\" : 3 } ] } \u542f\u52a8\u670d\u52a1\u8bbf\u95ee\u6d4b\u8bd5 npm run serve http://localhost:8080/ \u73af\u5883\u914d\u7f6e\u53c2\u8003 \u524d\u7aef\u5f00\u53d1\uff1aaxios\u5728vue\u4e2d\u7684\u4f7f\u7528 \u524d\u7aef\u5f00\u53d1\uff1avant\u5728vue\u4e2d\u7684\u4f7f\u7528","title":"6\u3001\u6d4b\u8bd5\u6570\u636e public/contactList.json"},{"location":"JavaScript/chrome-mac/","text":"Console\u9762\u677f 1\u3001\u8fd0\u884cJavaScript\u4ee3\u7801\uff0c\u4ea4\u4e92\u5f0f\u7f16\u7a0b 2\u3001\u67e5\u770b\u7a0b\u5e8f\u4e2d\u6253\u5370\u7684Log\u65e5\u5fd7 3\u3001\u65ad\u70b9\u8c03\u8bd5\u4ee3\u7801Debugging // \u67e5\u770bcookie document . cookie // \u9009\u62e9\u5143\u7d20 document . querySelectorAll ( \"img\" ) // shift + enter \u6362\u884c\u4e0d\u6267\u884c // \u6590\u6ce2\u90a3\u5951 var fibo = function ( n ){ return n < 3 ? 1 : fibo ( n - 1 ) + fibo ( n - 2 ); } Console\u6253\u5370Log\u65e5\u5fd7 // 1\u3001\u4fe1\u606f ,\u652f\u6301\u591a\u4e2a\u53c2\u6570 console . log ( \"hello\" , \", \" , \"world\" ) // hello , world // \u53d8\u91cf\u66ff\u6362 var s = \"hi\" ; console . log ( \"%s hello\" , s ); // hi hello // 2\u3001\u8b66\u544a console . warn () // 3\u3001\u9519\u8bef console . error () // 4\u3001\u8868\u683c\u5f62\u5f0f\u6253\u5370json console . table ({ name : \"tom\" }) // 5\u3001group\u4fe1\u606f\u7ec4 console . group ( \"start\" ); console . log ( \"log\" ); console . info ( \"info\" ); console . groupEnd ( \"start\" ); // 6\u3001\u81ea\u5b9a\u4e49\u6837\u5f0f console . log ( \"%c\u8fd9\u662f\u7eff\u8272\u7684\u65e5\u5fd7\" , \"color: green\" ) document . querySelector ( \"#log\" ). addEventListener ( \"click\" ,()=>{ console . log ( \"log\" ); }) // \u65ad\u8a00 console . assert ( 1 === 2 ) // \u8fd0\u884c\u65f6\u95f4 console . time () // do something console . timeEnd () // \u6e05\u5c4f console . clear () \u8c03\u8bd5JavaScrip\u57fa\u672c\u6d41\u7a0b 1\u3001console.log() \u6216\u8005 alert() \u8fd0\u884c\u65f6\u8c03\u8bd5 2\u3001JavaScript\u65ad\u70b9\u8c03\u8bd5 3\u3001\u8fd0\u884c\u65f6\u53d8\u91cf\u8c03\u8bd5\uff0c\u4fee\u6539\u6e90\u4ee3\u7801\u4e34\u65f6\u4fdd\u5b58\u8c03\u8bd5 \uff081\uff09debugger \uff082\uff09\u4e8b\u4ef6\u65ad\u70b9 \uff083\uff09\u6e90\u4ee3\u7801\u65ad\u70b9 < html > < body > <!-- \u8ba1\u7b97\u5668\u5b9e\u4f8b --> < input type = \"text\" > < input type = \"text\" > < button > \u8ba1\u7b97 </ button > < p ></ p > < script > // \u9009\u53d6button\u5143\u7d20 var button = document . querySelector ( \"button\" ); // \u6dfb\u52a0\u6309\u94ae\u70b9\u51fb\u4e8b\u4ef6 button . addEventListener ( \"click\" , () => { var inputs = document . querySelectorAll ( \"input\" ); let a = parseInt ( inputs [ 0 ]. value ); let b = parseInt ( inputs [ 1 ]. value ); document . querySelector ( \"p\" ). textContent = a + b ; }) </ script > </ body > </ html > Snippets // \u6dfb\u52a0jQuery let script = document . createElement ( \"script\" ); script . src = \"https://code.jquery.com/jquery-3.4.1.js\" ; // \u9632\u6b62 CDN \u7be1\u6539 javascript script . integrity = \"sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=\" ; // \u4f1a\u53d1\u8d77\u4e00\u4e2a\u8de8\u57df\u8bf7\u6c42\uff08\u5373\u5305\u542bOrigin: HTTP\u5934\uff09\u3002 // \u4f46\u4e0d\u4f1a\u53d1\u9001\u4efb\u4f55\u8ba4\u8bc1\u4fe1\u606f\uff08\u5373\u4e0d\u53d1\u9001cookie, X.509\u8bc1\u4e66\u548cHTTP\u57fa\u672c\u8ba4\u8bc1\u4fe1\u606f\uff09\u3002 // \u5982\u679c\u670d\u52a1\u5668\u6ca1\u6709\u7ed9\u51fa\u6e90\u7ad9\u51ed\u8bc1\uff08\u4e0d\u8bbe\u7f6eAccess-Control-Allow-Origin: HTTP\u5934\uff09\uff0c\u8fd9\u5f20\u56fe\u7247\u5c31\u4f1a\u88ab\u6c61\u67d3\u5e76\u9650\u5236\u4f7f\u7528\u3002 script . crossOrigin = \"anonymous\" ; document . head . appendChild ( script ); Application\u5ba2\u6237\u7aef\u5b58\u50a8 1\u3001Cookies \u6dfb\u52a0cookie document.cookie=\"a=2\" \u83b7\u53d6cookie document.cookie https://www.runoob.com/js/js-cookies.html 2\u3001LocalStorage \u6c38\u4e45\u5b58\u50a8 LocalStorage.getItem(\"key\") LocalStorage.setItem(\"key\", \"value\") 3\u3001SessionStorage \u4e34\u65f6\u5b58\u50a8 sessionStorage.setItem(\"key\", \"value\") sessionStorage.getItem(\"key\") \u5176\u4ed6 \u7f51\u9875\u622a\u5c4f comamnd + shifit +p \u641c\u7d22 Capture full size screenshot \u79fb\u52a8\u7aef\u5f00\u53d1\u8c03\u8bd5 Sensors NetWork conditions","title":"Chrome mac"},{"location":"JavaScript/chrome-mac/#console","text":"1\u3001\u8fd0\u884cJavaScript\u4ee3\u7801\uff0c\u4ea4\u4e92\u5f0f\u7f16\u7a0b 2\u3001\u67e5\u770b\u7a0b\u5e8f\u4e2d\u6253\u5370\u7684Log\u65e5\u5fd7 3\u3001\u65ad\u70b9\u8c03\u8bd5\u4ee3\u7801Debugging // \u67e5\u770bcookie document . cookie // \u9009\u62e9\u5143\u7d20 document . querySelectorAll ( \"img\" ) // shift + enter \u6362\u884c\u4e0d\u6267\u884c // \u6590\u6ce2\u90a3\u5951 var fibo = function ( n ){ return n < 3 ? 1 : fibo ( n - 1 ) + fibo ( n - 2 ); }","title":"Console\u9762\u677f"},{"location":"JavaScript/chrome-mac/#consolelog","text":"// 1\u3001\u4fe1\u606f ,\u652f\u6301\u591a\u4e2a\u53c2\u6570 console . log ( \"hello\" , \", \" , \"world\" ) // hello , world // \u53d8\u91cf\u66ff\u6362 var s = \"hi\" ; console . log ( \"%s hello\" , s ); // hi hello // 2\u3001\u8b66\u544a console . warn () // 3\u3001\u9519\u8bef console . error () // 4\u3001\u8868\u683c\u5f62\u5f0f\u6253\u5370json console . table ({ name : \"tom\" }) // 5\u3001group\u4fe1\u606f\u7ec4 console . group ( \"start\" ); console . log ( \"log\" ); console . info ( \"info\" ); console . groupEnd ( \"start\" ); // 6\u3001\u81ea\u5b9a\u4e49\u6837\u5f0f console . log ( \"%c\u8fd9\u662f\u7eff\u8272\u7684\u65e5\u5fd7\" , \"color: green\" ) document . querySelector ( \"#log\" ). addEventListener ( \"click\" ,()=>{ console . log ( \"log\" ); }) // \u65ad\u8a00 console . assert ( 1 === 2 ) // \u8fd0\u884c\u65f6\u95f4 console . time () // do something console . timeEnd () // \u6e05\u5c4f console . clear ()","title":"Console\u6253\u5370Log\u65e5\u5fd7"},{"location":"JavaScript/chrome-mac/#javascrip","text":"1\u3001console.log() \u6216\u8005 alert() \u8fd0\u884c\u65f6\u8c03\u8bd5 2\u3001JavaScript\u65ad\u70b9\u8c03\u8bd5 3\u3001\u8fd0\u884c\u65f6\u53d8\u91cf\u8c03\u8bd5\uff0c\u4fee\u6539\u6e90\u4ee3\u7801\u4e34\u65f6\u4fdd\u5b58\u8c03\u8bd5 \uff081\uff09debugger \uff082\uff09\u4e8b\u4ef6\u65ad\u70b9 \uff083\uff09\u6e90\u4ee3\u7801\u65ad\u70b9 < html > < body > <!-- \u8ba1\u7b97\u5668\u5b9e\u4f8b --> < input type = \"text\" > < input type = \"text\" > < button > \u8ba1\u7b97 </ button > < p ></ p > < script > // \u9009\u53d6button\u5143\u7d20 var button = document . querySelector ( \"button\" ); // \u6dfb\u52a0\u6309\u94ae\u70b9\u51fb\u4e8b\u4ef6 button . addEventListener ( \"click\" , () => { var inputs = document . querySelectorAll ( \"input\" ); let a = parseInt ( inputs [ 0 ]. value ); let b = parseInt ( inputs [ 1 ]. value ); document . querySelector ( \"p\" ). textContent = a + b ; }) </ script > </ body > </ html > Snippets // \u6dfb\u52a0jQuery let script = document . createElement ( \"script\" ); script . src = \"https://code.jquery.com/jquery-3.4.1.js\" ; // \u9632\u6b62 CDN \u7be1\u6539 javascript script . integrity = \"sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=\" ; // \u4f1a\u53d1\u8d77\u4e00\u4e2a\u8de8\u57df\u8bf7\u6c42\uff08\u5373\u5305\u542bOrigin: HTTP\u5934\uff09\u3002 // \u4f46\u4e0d\u4f1a\u53d1\u9001\u4efb\u4f55\u8ba4\u8bc1\u4fe1\u606f\uff08\u5373\u4e0d\u53d1\u9001cookie, X.509\u8bc1\u4e66\u548cHTTP\u57fa\u672c\u8ba4\u8bc1\u4fe1\u606f\uff09\u3002 // \u5982\u679c\u670d\u52a1\u5668\u6ca1\u6709\u7ed9\u51fa\u6e90\u7ad9\u51ed\u8bc1\uff08\u4e0d\u8bbe\u7f6eAccess-Control-Allow-Origin: HTTP\u5934\uff09\uff0c\u8fd9\u5f20\u56fe\u7247\u5c31\u4f1a\u88ab\u6c61\u67d3\u5e76\u9650\u5236\u4f7f\u7528\u3002 script . crossOrigin = \"anonymous\" ; document . head . appendChild ( script );","title":"\u8c03\u8bd5JavaScrip\u57fa\u672c\u6d41\u7a0b"},{"location":"JavaScript/chrome-mac/#application","text":"1\u3001Cookies \u6dfb\u52a0cookie document.cookie=\"a=2\" \u83b7\u53d6cookie document.cookie https://www.runoob.com/js/js-cookies.html 2\u3001LocalStorage \u6c38\u4e45\u5b58\u50a8 LocalStorage.getItem(\"key\") LocalStorage.setItem(\"key\", \"value\") 3\u3001SessionStorage \u4e34\u65f6\u5b58\u50a8 sessionStorage.setItem(\"key\", \"value\") sessionStorage.getItem(\"key\")","title":"Application\u5ba2\u6237\u7aef\u5b58\u50a8"},{"location":"JavaScript/chrome-mac/#_1","text":"\u7f51\u9875\u622a\u5c4f comamnd + shifit +p \u641c\u7d22 Capture full size screenshot \u79fb\u52a8\u7aef\u5f00\u53d1\u8c03\u8bd5 Sensors NetWork conditions","title":"\u5176\u4ed6"},{"location":"JavaScript/chrome/","text":"Chrome DevTools\u529f\u80fd\u4ecb\u7ecd 1\u3001Elements \u5143\u7d20\uff1a\u68c0\u67e5\u3001\u8c03\u6574\u9875\u9762\uff0c\u8c03\u8bd5DOM\uff0c\u8c03\u8bd5CSS 2\u3001Network \u7f51\u7edc\uff1a \u8c03\u8bd5\u8bf7\u6c42\uff0c\u4e86\u89e3\u9875\u9762\u9759\u6001\u8d44\u6e90\u5206\u5e03\uff0c\u7f51\u9875\u6027\u80fd\u68c0\u6d4b 3\u3001Console \u63a7\u5236\u53f0\uff1a\u8c03\u8bd5JavaScript\u3001\u67e5\u770blog\u65e5\u5fd7\uff0c\u4ea4\u4e92\u5f0f\u4ee3\u7801\u8c03\u8bd5 4\u3001Sources \u6e90\u4ee3\u7801\u8d44\u6e90\uff1a\u8c03\u8bd5JavaScript\u9875\u9762\u6e90\u4ee3\u7801\uff0c\u65ad\u70b9\u8c03\u8bd5 5\u3001Application \u5e94\u7528\uff1a \u67e5\u770b\u8c03\u8bd5\u5ba2\u6237\u7aef\u5b58\u50a8\uff0cCookie\uff0cLocalStorage\uff0cSessionStorage 6\u3001Performance \u6027\u80fd\uff1a\u67e5\u770b\u9875\u9762\u6027\u80fd\u7ec6\u8282\uff0c\u7ec6\u7c92\u5ea6\u5bf9\u7f51\u9875\u8f7d\u5165\u8fdb\u884c\u6027\u80fd\u4f18\u5316\uff08\u9ad8\u9636\uff09 7\u3001Memory \u5185\u5b58 CPU\u5206\u6790\uff0c\u5185\u5b58\u5806\u6808\u5206\u6790\u5668\uff08\u9ad8\u9636\uff09 8\u3001Security \u5b89\u5168\uff1a\u9875\u9762\u5b89\u5168\uff0c\u8bc1\u4e66 9\u3001Audits \u6027\u80fd\u5206\u6790\uff0c\u4f7f\u7528Google Lighthouse\u8f85\u52a9\u6027\u80fd\u5206\u6790\uff0c\u7ed9\u51fa\u4f18\u5316\u5efa\u8bae\uff08\u9ad8\u9636\uff09 \u6253\u5f00Chrome\u5f00\u53d1\u8005\u5de5\u5177\u65b9\u5f0f 1\u3001\u83dc\u5355 -> \u66f4\u591a\u5de5\u5177 -> \u5f00\u53d1\u8005\u5de5\u5177 2\u3001\u9875\u9762\u53f3\u952e -> \u68c0\u67e5 3\u3001\u5feb\u6377\u952e \uff081\uff09\u6253\u5f00\u6700\u8fd1\u5173\u95ed\u7684\u72b6\u6001 Mac\uff1a Command + Option + I Windows\uff1a Ctrl + Shift + I \uff082\uff09\u5feb\u901f\u8fdb\u5165Elements\u67e5\u770bDOM\u6216\u6837\u5f0f Mac\uff1aCommand + Option + C Windows\uff1a Ctrl + Shift + C \uff083\uff09\u5feb\u901f\u8fdb\u5165Console\u67e5\u770blog\u8fd0\u884cJavaScript Mac\uff1aCommand + Option + J Windows\uff1a Ctrl + Shift + J \uff084\uff09\u5207\u6362\u5f00\u53d1\u8005\u5de5\u5177\u4f4d\u7f6e Mac\uff1aCommand + Option + D Windows\uff1a Ctrl + Shift + D \u5728Console\u4e2d\u8bbf\u95eeDOM\u8282\u70b9 1\u3001document.querySelectAll 2\u3001\u4f7f\u7528$0\u8bbf\u95ee\u9009\u4e2d\u7684\u5143\u7d20 3\u3001\u62f7\u8d1d -> JS Path \u5728DOM\u4e2d\u65ad\u70b9\u8c03\u8bd5 1\u3001\u5c5e\u6027\u4fee\u6539\u65f6\u6253\u65ad\u70b9 break on -> attribute modifications 2\u3001\u8282\u70b9\u5220\u9664\u65f6\u6253\u65ad\u70b9 break on -> node removal 3\u3001\u5b50\u6811\u4fee\u6539\u65f6\u6253\u65ad\u70b9 break on -> subtree modifications CSS\u8c03\u8bd5 1\u3001\u63d0\u5347\u4f18\u5148\u7ea7 !important 2\u3001\u52a8\u753b\u6548\u679c animation.css https://daneden.github.io/animate.css/","title":"Chrome"},{"location":"JavaScript/chrome/#chrome-devtools","text":"1\u3001Elements \u5143\u7d20\uff1a\u68c0\u67e5\u3001\u8c03\u6574\u9875\u9762\uff0c\u8c03\u8bd5DOM\uff0c\u8c03\u8bd5CSS 2\u3001Network \u7f51\u7edc\uff1a \u8c03\u8bd5\u8bf7\u6c42\uff0c\u4e86\u89e3\u9875\u9762\u9759\u6001\u8d44\u6e90\u5206\u5e03\uff0c\u7f51\u9875\u6027\u80fd\u68c0\u6d4b 3\u3001Console \u63a7\u5236\u53f0\uff1a\u8c03\u8bd5JavaScript\u3001\u67e5\u770blog\u65e5\u5fd7\uff0c\u4ea4\u4e92\u5f0f\u4ee3\u7801\u8c03\u8bd5 4\u3001Sources \u6e90\u4ee3\u7801\u8d44\u6e90\uff1a\u8c03\u8bd5JavaScript\u9875\u9762\u6e90\u4ee3\u7801\uff0c\u65ad\u70b9\u8c03\u8bd5 5\u3001Application \u5e94\u7528\uff1a \u67e5\u770b\u8c03\u8bd5\u5ba2\u6237\u7aef\u5b58\u50a8\uff0cCookie\uff0cLocalStorage\uff0cSessionStorage 6\u3001Performance \u6027\u80fd\uff1a\u67e5\u770b\u9875\u9762\u6027\u80fd\u7ec6\u8282\uff0c\u7ec6\u7c92\u5ea6\u5bf9\u7f51\u9875\u8f7d\u5165\u8fdb\u884c\u6027\u80fd\u4f18\u5316\uff08\u9ad8\u9636\uff09 7\u3001Memory \u5185\u5b58 CPU\u5206\u6790\uff0c\u5185\u5b58\u5806\u6808\u5206\u6790\u5668\uff08\u9ad8\u9636\uff09 8\u3001Security \u5b89\u5168\uff1a\u9875\u9762\u5b89\u5168\uff0c\u8bc1\u4e66 9\u3001Audits \u6027\u80fd\u5206\u6790\uff0c\u4f7f\u7528Google Lighthouse\u8f85\u52a9\u6027\u80fd\u5206\u6790\uff0c\u7ed9\u51fa\u4f18\u5316\u5efa\u8bae\uff08\u9ad8\u9636\uff09","title":"Chrome DevTools\u529f\u80fd\u4ecb\u7ecd"},{"location":"JavaScript/chrome/#chrome","text":"1\u3001\u83dc\u5355 -> \u66f4\u591a\u5de5\u5177 -> \u5f00\u53d1\u8005\u5de5\u5177 2\u3001\u9875\u9762\u53f3\u952e -> \u68c0\u67e5 3\u3001\u5feb\u6377\u952e \uff081\uff09\u6253\u5f00\u6700\u8fd1\u5173\u95ed\u7684\u72b6\u6001 Mac\uff1a Command + Option + I Windows\uff1a Ctrl + Shift + I \uff082\uff09\u5feb\u901f\u8fdb\u5165Elements\u67e5\u770bDOM\u6216\u6837\u5f0f Mac\uff1aCommand + Option + C Windows\uff1a Ctrl + Shift + C \uff083\uff09\u5feb\u901f\u8fdb\u5165Console\u67e5\u770blog\u8fd0\u884cJavaScript Mac\uff1aCommand + Option + J Windows\uff1a Ctrl + Shift + J \uff084\uff09\u5207\u6362\u5f00\u53d1\u8005\u5de5\u5177\u4f4d\u7f6e Mac\uff1aCommand + Option + D Windows\uff1a Ctrl + Shift + D","title":"\u6253\u5f00Chrome\u5f00\u53d1\u8005\u5de5\u5177\u65b9\u5f0f"},{"location":"JavaScript/chrome/#consoledom","text":"1\u3001document.querySelectAll 2\u3001\u4f7f\u7528$0\u8bbf\u95ee\u9009\u4e2d\u7684\u5143\u7d20 3\u3001\u62f7\u8d1d -> JS Path","title":"\u5728Console\u4e2d\u8bbf\u95eeDOM\u8282\u70b9"},{"location":"JavaScript/chrome/#dom","text":"1\u3001\u5c5e\u6027\u4fee\u6539\u65f6\u6253\u65ad\u70b9 break on -> attribute modifications 2\u3001\u8282\u70b9\u5220\u9664\u65f6\u6253\u65ad\u70b9 break on -> node removal 3\u3001\u5b50\u6811\u4fee\u6539\u65f6\u6253\u65ad\u70b9 break on -> subtree modifications","title":"\u5728DOM\u4e2d\u65ad\u70b9\u8c03\u8bd5"},{"location":"JavaScript/chrome/#css","text":"1\u3001\u63d0\u5347\u4f18\u5148\u7ea7 !important 2\u3001\u52a8\u753b\u6548\u679c animation.css https://daneden.github.io/animate.css/","title":"CSS\u8c03\u8bd5"},{"location":"JavaScript/es5+es6/","text":"\u793a\u4f8b\u4f7f\u7528\u7684\u6570\u7ec4 var arr = [ 1 , 2 , 3 ]; ES5 \u6570\u7ec4\u65b9\u6cd5 \u4e0d\u6539\u53d8\u539f\u6570\u7ec4 \u51fd\u6570 | \u8bf4\u660e | \u793a\u4f8b -| - | - Array.isArray() | \u5224\u65ad\u4e00\u4e2a\u503c\u662f\u5426\u4e3a\u6570\u7ec4 | Array.isArray(arr); // true valueOf() | \u8fd4\u56de\u6570\u7ec4\u672c\u8eab | arr.valueOf(); // [1, 2, 3] toString() | \u8fd4\u56de\u6570\u7ec4\u7684\u5b57\u7b26\u4e32\u5f62 | arr.toString(); // \"1,2,3\" join() | \u8fd4\u56de\u6570\u7ec4\u6210\u5458\u62fc\u63a5\u540e\u7684\u5b57\u7b26\u4e32\uff0c\u9ed8\u8ba4\u9017\u53f7\u5206\u9694| arr.join(\"-\"); // \"1-2-3\" concat() | \u8fd4\u56de\u4e00\u4e2a\u591a\u4e2a\u6570\u7ec4\u5408\u5e76\u540e\u7684\u65b0\u6570\u7ec4 | arr.concat([4, 5], 6); // [1, 2, 3, 4, 5, 6] slice() | \u8fd4\u56de\u5207\u7247\u540e\u7684\u65b0\u6570\u7ec4 | arr.slice(start, end); forEach() | \u904d\u5386\u6570\u7ec4\u7684\u6240\u6709\u6210\u5458 | arr.forEach((element, index, arr)=> {return element;}); map() | \u6620\u5c04\u65b0\u6570\u7ec4 | arr.map((element, index, arr)=> {return element;}); filter() | \u8fd4\u56de\u8fc7\u6ee4\u540e\u7684\u65b0\u6570\u7ec4 | arr.filter((element)=> {return true;}); some() | \u4e00\u4e2a\u4e3atrue\u5c31\u8fd4\u56detrue | arr.some((element, index, arr)=> {return true;}); every() | \u6240\u6709\u4e3atrue\u624d\u8fd4\u56detrue | arr.every((element, index, arr)=> {return true;}); reduce()| \u4ece\u5de6\u5230\u53f3\u5904\u7406 | arr.reduce((total, element, index, arr)=> {return total + element;}); reduceRight() | \u4ece\u53f3\u5230\u5de6\u5904\u7406 | arr.reduceRight((total, element, index, arr)=> {return total + element;}); indexOf()| \u5f00\u5934\u67e5\u627e\u5143\u7d20\uff0c\u6ca1\u6709\u8fd4\u56de-1 | arr.indexOf(1); // 0 lastIndexOf() | \u5c3e\u90e8\u67e5\u627e\u5143\u7d20\uff0c\u6ca1\u6709\u8fd4\u56de-1 | arr.lastIndexOf(1); //0 \u6539\u53d8\u539f\u6570\u7ec4 \u51fd\u6570 | \u8bf4\u660e | \u793a\u4f8b -| - | - push() | \u6570\u7ec4\u5c3e\u90e8\u6dfb\u52a0\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u6570\u7ec4\u957f\u5ea6 | arr.push(1, 2); // 5 pop() | \u5220\u9664\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u8be5\u5143\u7d20 | arr.pop(); // 3 unshift() | \u6570\u7ec4\u5934\u90e8\u6dfb\u52a0\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u6570\u7ec4\u957f\u5ea6 | arr.unshift('a'); //4 shift() | \u5220\u9664\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u8be5\u5143\u7d20 | arr.shift(); // 1 reverse() | \u8fd4\u56de\u98a0\u5012\u987a\u5e8f\u540e\u7684\u6570\u7ec4 | arr.reverse(); // [3, 2, 1] splice() | \u5220\u9664\u6570\u7ec4\u6210\u5458\uff0c\u5e76\u6dfb\u52a0\u7684\u6570\u7ec4\u6210\u5458\uff0c\u8fd4\u56de\u88ab\u5220\u9664\u7684\u5143\u7d20 | arr.splice(start, deleteCount, ...itmes) sort() | \u6570\u7ec4\u6392\u5e8f| arr.sort(); //[1, 2, 3] ES6 \u6570\u7ec4\u65b9\u6cd5 \u51fd\u6570 \u8bf4\u660e \u793a\u4f8b Array.from() \u7c7b\u6570\u7ec4\u8f6c\u6362\u6210\u6570\u7ec4 Array.from('123'); // [\"1\", \"2\", 3\"] Array.of() \u5c06\u4e00\u7ec4\u503c\uff0c\u8f6c\u6362\u4e3a\u6570\u7ec4 Array.of(1, 2, 3); // [1, 2, 3] copyWithin() \u8fd4\u56de\u66ff\u6362\u540e\u7684\u6570\u7ec4 arr.copyWithin(target, start, end) find() \u67e5\u627e\u5143\u7d20\uff0c\u6ca1\u6709\u8fd4\u56deundefined arr.find((item)=>item===1) findIndex() \u67e5\u627e\u5143\u7d20\u4f4d\u7f6e\uff0c\u6ca1\u6709\u8fd4\u56de-1 arr.findIndex((item)=>item===1) fill() \u586b\u5145\u4e00\u4e2a\u6570\u7ec4 [1, 2, 3].fill(0); // [0, 0, 0] entries() \u8fd4\u56de\u952e\u503c\u5bf9 arr.entries() keys() \u8fd4\u56de\u952e arr.keys() values() \u8fd4\u56de\u503c arr.values() includes() \u662f\u5426\u5305\u542b\u7ed9\u5b9a\u7684\u503c arr.includes(1); // true \u6269\u5c55\u8fd0\u7b97\u7b26 (1)\u51fd\u6570\u8c03\u7528 // ES6 \u7684\u5199\u6cd5 Math . max (...[ 14 , 3 , 77 ]) // \u7b49\u540c\u4e8e Math . max ( 14 , 3 , 77 ); (2)\u590d\u5236\u6570\u7ec4 const a1 = [ 1 , 2 ]; // \u5199\u6cd5\u4e00 const a2 = [... a1 ]; // \u5199\u6cd5\u4e8c const [... a2 ] = a1 ; \uff083\uff09\u5408\u5e76\u6570\u7ec4 // ES5 [ 1 , 2 ]. concat ([ 4 , 5 ]) // ES6 [ 1 , 2 , ...[ 4 , 5 ]] (4)\u89e3\u6784\u8d4b\u503c const [ first , ... rest ] = [ 1 , 2 , 3 , 4 , 5 ]; first // 1 rest // [2, 3, 4, 5] \u53c2\u8003 JS Array\u5bf9\u8c61\u7684\u65b9\u6cd5\u603b\u7ed3\uff08ES5 \u4e0e ES6\uff09 \u4e8c","title":"Es5+es6"},{"location":"JavaScript/es5+es6/#es5","text":"\u4e0d\u6539\u53d8\u539f\u6570\u7ec4 \u51fd\u6570 | \u8bf4\u660e | \u793a\u4f8b -| - | - Array.isArray() | \u5224\u65ad\u4e00\u4e2a\u503c\u662f\u5426\u4e3a\u6570\u7ec4 | Array.isArray(arr); // true valueOf() | \u8fd4\u56de\u6570\u7ec4\u672c\u8eab | arr.valueOf(); // [1, 2, 3] toString() | \u8fd4\u56de\u6570\u7ec4\u7684\u5b57\u7b26\u4e32\u5f62 | arr.toString(); // \"1,2,3\" join() | \u8fd4\u56de\u6570\u7ec4\u6210\u5458\u62fc\u63a5\u540e\u7684\u5b57\u7b26\u4e32\uff0c\u9ed8\u8ba4\u9017\u53f7\u5206\u9694| arr.join(\"-\"); // \"1-2-3\" concat() | \u8fd4\u56de\u4e00\u4e2a\u591a\u4e2a\u6570\u7ec4\u5408\u5e76\u540e\u7684\u65b0\u6570\u7ec4 | arr.concat([4, 5], 6); // [1, 2, 3, 4, 5, 6] slice() | \u8fd4\u56de\u5207\u7247\u540e\u7684\u65b0\u6570\u7ec4 | arr.slice(start, end); forEach() | \u904d\u5386\u6570\u7ec4\u7684\u6240\u6709\u6210\u5458 | arr.forEach((element, index, arr)=> {return element;}); map() | \u6620\u5c04\u65b0\u6570\u7ec4 | arr.map((element, index, arr)=> {return element;}); filter() | \u8fd4\u56de\u8fc7\u6ee4\u540e\u7684\u65b0\u6570\u7ec4 | arr.filter((element)=> {return true;}); some() | \u4e00\u4e2a\u4e3atrue\u5c31\u8fd4\u56detrue | arr.some((element, index, arr)=> {return true;}); every() | \u6240\u6709\u4e3atrue\u624d\u8fd4\u56detrue | arr.every((element, index, arr)=> {return true;}); reduce()| \u4ece\u5de6\u5230\u53f3\u5904\u7406 | arr.reduce((total, element, index, arr)=> {return total + element;}); reduceRight() | \u4ece\u53f3\u5230\u5de6\u5904\u7406 | arr.reduceRight((total, element, index, arr)=> {return total + element;}); indexOf()| \u5f00\u5934\u67e5\u627e\u5143\u7d20\uff0c\u6ca1\u6709\u8fd4\u56de-1 | arr.indexOf(1); // 0 lastIndexOf() | \u5c3e\u90e8\u67e5\u627e\u5143\u7d20\uff0c\u6ca1\u6709\u8fd4\u56de-1 | arr.lastIndexOf(1); //0 \u6539\u53d8\u539f\u6570\u7ec4 \u51fd\u6570 | \u8bf4\u660e | \u793a\u4f8b -| - | - push() | \u6570\u7ec4\u5c3e\u90e8\u6dfb\u52a0\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u6570\u7ec4\u957f\u5ea6 | arr.push(1, 2); // 5 pop() | \u5220\u9664\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u8be5\u5143\u7d20 | arr.pop(); // 3 unshift() | \u6570\u7ec4\u5934\u90e8\u6dfb\u52a0\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u6570\u7ec4\u957f\u5ea6 | arr.unshift('a'); //4 shift() | \u5220\u9664\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u8be5\u5143\u7d20 | arr.shift(); // 1 reverse() | \u8fd4\u56de\u98a0\u5012\u987a\u5e8f\u540e\u7684\u6570\u7ec4 | arr.reverse(); // [3, 2, 1] splice() | \u5220\u9664\u6570\u7ec4\u6210\u5458\uff0c\u5e76\u6dfb\u52a0\u7684\u6570\u7ec4\u6210\u5458\uff0c\u8fd4\u56de\u88ab\u5220\u9664\u7684\u5143\u7d20 | arr.splice(start, deleteCount, ...itmes) sort() | \u6570\u7ec4\u6392\u5e8f| arr.sort(); //[1, 2, 3]","title":"ES5 \u6570\u7ec4\u65b9\u6cd5"},{"location":"JavaScript/es5+es6/#es6","text":"\u51fd\u6570 \u8bf4\u660e \u793a\u4f8b Array.from() \u7c7b\u6570\u7ec4\u8f6c\u6362\u6210\u6570\u7ec4 Array.from('123'); // [\"1\", \"2\", 3\"] Array.of() \u5c06\u4e00\u7ec4\u503c\uff0c\u8f6c\u6362\u4e3a\u6570\u7ec4 Array.of(1, 2, 3); // [1, 2, 3] copyWithin() \u8fd4\u56de\u66ff\u6362\u540e\u7684\u6570\u7ec4 arr.copyWithin(target, start, end) find() \u67e5\u627e\u5143\u7d20\uff0c\u6ca1\u6709\u8fd4\u56deundefined arr.find((item)=>item===1) findIndex() \u67e5\u627e\u5143\u7d20\u4f4d\u7f6e\uff0c\u6ca1\u6709\u8fd4\u56de-1 arr.findIndex((item)=>item===1) fill() \u586b\u5145\u4e00\u4e2a\u6570\u7ec4 [1, 2, 3].fill(0); // [0, 0, 0] entries() \u8fd4\u56de\u952e\u503c\u5bf9 arr.entries() keys() \u8fd4\u56de\u952e arr.keys() values() \u8fd4\u56de\u503c arr.values() includes() \u662f\u5426\u5305\u542b\u7ed9\u5b9a\u7684\u503c arr.includes(1); // true","title":"ES6 \u6570\u7ec4\u65b9\u6cd5"},{"location":"JavaScript/es5+es6/#_1","text":"(1)\u51fd\u6570\u8c03\u7528 // ES6 \u7684\u5199\u6cd5 Math . max (...[ 14 , 3 , 77 ]) // \u7b49\u540c\u4e8e Math . max ( 14 , 3 , 77 ); (2)\u590d\u5236\u6570\u7ec4 const a1 = [ 1 , 2 ]; // \u5199\u6cd5\u4e00 const a2 = [... a1 ]; // \u5199\u6cd5\u4e8c const [... a2 ] = a1 ; \uff083\uff09\u5408\u5e76\u6570\u7ec4 // ES5 [ 1 , 2 ]. concat ([ 4 , 5 ]) // ES6 [ 1 , 2 , ...[ 4 , 5 ]] (4)\u89e3\u6784\u8d4b\u503c const [ first , ... rest ] = [ 1 , 2 , 3 , 4 , 5 ]; first // 1 rest // [2, 3, 4, 5] \u53c2\u8003 JS Array\u5bf9\u8c61\u7684\u65b9\u6cd5\u603b\u7ed3\uff08ES5 \u4e0e ES6\uff09 \u4e8c","title":"\u6269\u5c55\u8fd0\u7b97\u7b26"},{"location":"JavaScript/node-js/","text":"npm\u5176\u5b9e\u662fNode.js\u7684\u5305\u7ba1\u7406\u5de5\u5177\uff08package manager) $ node - v > . exit $ nmp - v # \u4e25\u683c\u6a21\u5f0f\u8fd0\u884c $ node hello . js -- use_strict \u6a21\u5757 demo.js \"use strict\" ; function hello () { console . log ( \"hello world\" ); } module . exports = hello ; main.js \"use strict\" ; var hello = require ( \"./demo.js\" ) hello ();","title":"Node js"},{"location":"JavaScript/vue-cli/","text":"vue-cli \u4e3a\u4ec0\u4e48\u4f7f\u7528vue-cli 1\u3001\u5e73\u53f0\u65e0\u5173 2\u3001\u5360\u5185\u5b58\u5c11\uff0c\u66f4\u9ad8\u6548\u3002\u4ee3\u7801\u90e8\u7f72\uff0c\u70ed\u52a0\u8f7d... 3\u3001\u901a\u7528\u5de5\u5177 cli Command Line Interface \u547d\u4ee4\u884c\u754c\u9762 \u524d\u53f0\u3001\u540e\u53f0 \u524d\u7aef\u3001\u540e\u7aef npm npm node package manager cnpm \u56fd\u5185\u955c\u50cf \u53c2\u6570 -g global \u5168\u5c40\u5b89\u88c5 -S save \u5b89\u88c5\u5305\u4fe1\u606f\u52a0\u5165\u5230dependencies\u751f\u4ea7\u9636\u6bb5\u4f9d\u8d56 -D --save --dev \u5b89\u88c5\u5305\u4fe1\u606f\u52a0\u5165\u5230devDependencies\u751f\u4ea7\u9636\u6bb5+\u5f00\u53d1\u9636\u6bb5\u4f9d\u8d56\uff0c\u5f00\u53d1\u9636\u6bb5\u4e00\u822c\u4f7f\u7528\u5b83 i install \u7f29\u5199\uff0c\u6ca1\u6709'-' \u67e5\u770b\u5168\u5c40\u5b89\u88c5\u7684\u6587\u4ef6\u5939\u4f4d\u7f6e npm root -g \u521d\u59cb\u5316 npm init -f \u53c2\u6570f\u4f7f\u7528\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u5982\u679c\u4e0d\u521d\u59cb\u5316\uff0c\u672c\u5730\u5b89\u88c5\u4f1a\u62a5\u9519 \u6307\u5b9a\u4e0b\u8f7d\u670d\u52a1\u5668 1\u3001\u5b89\u88c5cnpm, \u6307\u5b9a\u4e0b\u8f7d\u4f4d\u7f6e npm install -g cnpm --registry = https://registry.npm.taobao.org 2\u3001\u8bbe\u7f6enpm\u9ed8\u8ba4\u4e0b\u8f7d\u5730\u5740 npm config set registry https://registry.npm.taobao.org npm config get registry # \u67e5\u770b 3\u3001cnpm\u5b89\u88c5vue-cli2 cnpm install -gd vue-cli \u68c0\u67e5\u73af\u5883 $ node -v v10.16.0 $ npm -v 6 .9.0 \u67e5\u770bvue\u7248\u672c\u53f7 $ vue -V 2 .9.6 vue-cli2\u521b\u5efa\u9879\u76ee(\u4e0d\u80fd\u6709\u5927\u5199\u5b57\u6bcd) vue init webpack project-name \u90e8\u5206\u91cd\u8981\u914d\u7f6e \u5b98\u65b9\u8def\u7531 install vue-router? yes \u4ee3\u7801\u98ce\u683c use ESLint to lint your code? yes \u542f\u52a8\u670d\u52a1 cd project - name npm run dev http://localhost:8080 Sublime Vue\u8bed\u6cd5\u9ad8\u4eae https://github.com/vuejs/vue-syntax-highlight \u4e0b\u8f7d\u89e3\u538b -> References -> Browser Packages -> \u65b0\u5efa\u6587\u4ef6\u5939Vue -> \u5c06\u89e3\u538b\u7684\u6587\u4ef6\u653e\u5165\u6587\u4ef6\u5939\u4e2d ->ctrl + shift + p \u641c\u7d22 vue -> \u9009\u62e9 Set Syntax:Vue Component \u8def\u7531\u914d\u7f6e import A from '@/components/A.vue' ; routes : [ { path : '/a' , name : 'A' , component : A } ] \u8def\u7531\u8df3\u8f6c < router-link to = \"/a\" > a\u9875\u9762 </ router-link >","title":"Vue cli"},{"location":"JavaScript/vue-cli/#vue-cli","text":"1\u3001\u5e73\u53f0\u65e0\u5173 2\u3001\u5360\u5185\u5b58\u5c11\uff0c\u66f4\u9ad8\u6548\u3002\u4ee3\u7801\u90e8\u7f72\uff0c\u70ed\u52a0\u8f7d... 3\u3001\u901a\u7528\u5de5\u5177","title":"\u4e3a\u4ec0\u4e48\u4f7f\u7528vue-cli"},{"location":"JavaScript/vue-cli/#cli","text":"Command Line Interface \u547d\u4ee4\u884c\u754c\u9762 \u524d\u53f0\u3001\u540e\u53f0 \u524d\u7aef\u3001\u540e\u7aef","title":"cli"},{"location":"JavaScript/vue-cli/#npm","text":"npm node package manager cnpm \u56fd\u5185\u955c\u50cf \u53c2\u6570 -g global \u5168\u5c40\u5b89\u88c5 -S save \u5b89\u88c5\u5305\u4fe1\u606f\u52a0\u5165\u5230dependencies\u751f\u4ea7\u9636\u6bb5\u4f9d\u8d56 -D --save --dev \u5b89\u88c5\u5305\u4fe1\u606f\u52a0\u5165\u5230devDependencies\u751f\u4ea7\u9636\u6bb5+\u5f00\u53d1\u9636\u6bb5\u4f9d\u8d56\uff0c\u5f00\u53d1\u9636\u6bb5\u4e00\u822c\u4f7f\u7528\u5b83 i install \u7f29\u5199\uff0c\u6ca1\u6709'-' \u67e5\u770b\u5168\u5c40\u5b89\u88c5\u7684\u6587\u4ef6\u5939\u4f4d\u7f6e npm root -g \u521d\u59cb\u5316 npm init -f \u53c2\u6570f\u4f7f\u7528\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u5982\u679c\u4e0d\u521d\u59cb\u5316\uff0c\u672c\u5730\u5b89\u88c5\u4f1a\u62a5\u9519","title":"npm"},{"location":"JavaScript/vue-cli/#_1","text":"1\u3001\u5b89\u88c5cnpm, \u6307\u5b9a\u4e0b\u8f7d\u4f4d\u7f6e npm install -g cnpm --registry = https://registry.npm.taobao.org 2\u3001\u8bbe\u7f6enpm\u9ed8\u8ba4\u4e0b\u8f7d\u5730\u5740 npm config set registry https://registry.npm.taobao.org npm config get registry # \u67e5\u770b 3\u3001cnpm\u5b89\u88c5vue-cli2 cnpm install -gd vue-cli \u68c0\u67e5\u73af\u5883 $ node -v v10.16.0 $ npm -v 6 .9.0 \u67e5\u770bvue\u7248\u672c\u53f7 $ vue -V 2 .9.6 vue-cli2\u521b\u5efa\u9879\u76ee(\u4e0d\u80fd\u6709\u5927\u5199\u5b57\u6bcd) vue init webpack project-name \u90e8\u5206\u91cd\u8981\u914d\u7f6e \u5b98\u65b9\u8def\u7531 install vue-router? yes \u4ee3\u7801\u98ce\u683c use ESLint to lint your code? yes \u542f\u52a8\u670d\u52a1 cd project - name npm run dev http://localhost:8080 Sublime Vue\u8bed\u6cd5\u9ad8\u4eae https://github.com/vuejs/vue-syntax-highlight \u4e0b\u8f7d\u89e3\u538b -> References -> Browser Packages -> \u65b0\u5efa\u6587\u4ef6\u5939Vue -> \u5c06\u89e3\u538b\u7684\u6587\u4ef6\u653e\u5165\u6587\u4ef6\u5939\u4e2d ->ctrl + shift + p \u641c\u7d22 vue -> \u9009\u62e9 Set Syntax:Vue Component \u8def\u7531\u914d\u7f6e import A from '@/components/A.vue' ; routes : [ { path : '/a' , name : 'A' , component : A } ] \u8def\u7531\u8df3\u8f6c < router-link to = \"/a\" > a\u9875\u9762 </ router-link >","title":"\u6307\u5b9a\u4e0b\u8f7d\u670d\u52a1\u5668"},{"location":"JavaScript/vuex/","text":"Vuex \u4e3avue.js\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u7684\u72b6\u6001\u7ba1\u7406\u6a21\u5f0f \u91c7\u7528\u96c6\u4e2d\u5f0f\u5b58\u50a8\u7ba1\u7406\u5e94\u7528\u7684\u6240\u6709\u7ec4\u4ef6\u72b6\u6001 \u4ee5\u76f8\u5e94\u7684\u89c4\u5219\u4fdd\u8bc1\u4ee5\u4e00\u79cd\u53ef\u9884\u6d4b\u7684\u65b9\u5f0f\u53d1\u751f\u53d8\u5316 \u5e94\u7528\u573a\u666f \u8bfb\u53d6\uff0c\u591a\u4e2a\u89c6\u56fe\u4f9d\u8d56\u4e8e\u540c\u4e00\u4e2a\u72b6\u6001 \u4fee\u6539\uff0c\u4e0d\u540c\u89c6\u56fe\u7684\u884c\u4e3a\u9700\u8981\u6539\u53d8\u540c\u4e00\u4e2a\u72b6\u6001 \u7ec4\u6210\u90e8\u5206 State \u6570\u636e\u4ed3\u5e93 getter \u83b7\u53d6\u6570\u636e Mutation \u4fee\u6539\u6570\u636e Action \u63d0\u4ea4mutation \u5b89\u88c5Vuex 1\u3001\u5b89\u88c5vuex\u5305\uff1anpm install vuex 2\u3001\u521b\u5efa\u5b9e\u4f8b\uff1anew Vuex.store() 3\u3001\u5728main.js\u4e2d\u5c06vuex\u5b9e\u4f8b\u6302\u8f7d\u5230vue\u5bf9\u8c61\u4e0a import Vue from 'vue' import App from './App.vue' import Vuex from 'vuex' Vue . config . productionTip = false Vue . use ( Vuex ) const store = new Vuex . Store ({ state : { count : 0 } }) new Vue ({ store , render : h => h ( App ), }). $mount ( '#app' ) count++\u793a\u4f8b \u601d\u8def 1\u3001state\u4e2d\u521b\u5efacount\u5b57\u6bb5 2\u3001mutations\u4e2d\u521b\u5efa\u4e00\u4e2acount++\u7684mutation 3\u3001button\u65b0\u589eclick\u4e8b\u4ef6\u89e6\u53d1mutation\u6539\u53d8count main.js import Vue from 'vue' import App from './App.vue' import Vuex from 'vuex' Vue . config . productionTip = false Vue . use ( Vuex ) const store = new Vuex . Store ({ // \u72b6\u6001\u6570\u636e state : { count : 0 }, // \u72b6\u6001\u6539\u53d8\u65b9\u6cd5 mutations : { // \u7b2c\u4e00\u4e2a\u53c2\u6570\u662fstate\uff0c \u53ef\u4ee5\u63a5\u53d7\u7b2c\u4e8c\u4e2a\u53c2\u6570 increaseCount ( state ) { state . count ++ ; } } }) new Vue ({ store , render : h => h ( App ), }). $mount ( '#app' ) App.vue < template > < div id = \"app\" > < h1 > count : {{ count }} < /h1> < button @ click = \"increaseCount\" > \u70b9\u6211 ++< /button> < /div> < /template> < script > export default { name : \"app\" , computed : { count () { // \u83b7\u53d6\u72b6\u6001\u6570\u636e return this . $store . state . count ; } }, methods : { increaseCount () { // \u4fee\u6539\u72b6\u6001\u6570\u636e this . $store . commit ( \"increaseCount\" ); } r } }; < /script> \u9879\u76ee\u5b9e\u6218 \u4e1a\u52a1\u76ee\u6807 1\u3001\u5236\u4f5c\u4e00\u4e2a\u9700\u8981\u8d26\u53f7\u767b\u5f55\u7684\u8bfe\u7a0b\u5b66\u4e60\u9879\u76ee 2\u3001\u4e0d\u540c\u7684\u8bfe\u7a0b\u9700\u8981\u4e0d\u540c\u7684\u4f1a\u5458\u7b49\u7ea7\uff0c\u5b9e\u73b0\u8d2d\u4e70\u4f1a\u5458\u7684\u529f\u80fd\uff0c\u8bfe\u7a0b\u5206\u4eab \u9879\u76ee\u529f\u80fd 1\u3001\u901a\u8fc7state.userinfo\u63a7\u5236\u7528\u6237\u767b\u5f55\u8def\u7531\u9650\u5236 2\u3001\u591a\u7ec4\u4ef6\u5171\u4eabstate.userStatus \u548c state.vipLevel\u72b6\u6001 3\u3001\u591a\u7ec4\u4ef6\u4fee\u6539state.userstatus \u548c state.vipLevel\u72b6\u6001 \u6587\u4ef6\u76ee\u5f55\u6811 src \u251c\u2500\u2500 App . vue \u251c\u2500\u2500 main . js \u251c\u2500\u2500 router . js \u251c\u2500\u2500 store \u2502 \u251c\u2500\u2500 actions . js \u2502 \u251c\u2500\u2500 getters . js \u2502 \u251c\u2500\u2500 index . js \u2502 \u251c\u2500\u2500 mutations . js \u2502 \u2514\u2500\u2500 state . js \u2514\u2500\u2500 views \u251c\u2500\u2500 Home . vue \u2514\u2500\u2500 Login . vue \u6587\u4ef6\u4ee3\u7801 App.vue < template > < div id = \"app\" > < router-view /> </ div > </ template > main.js import Vue from 'vue' import App from './App.vue' import store from './store' import router from './router' import Vant from 'vant' ; import 'vant/lib/index.css' ; Vue . use ( Vant ); Vue . config . productionTip = false // \u524d\u7f6e\u5b88\u536b\uff0c\u6743\u9650\u6821\u9a8c router . beforeEach (( to , from , next ) => { if ( store . state . username || to . path === \"/login\" ) { next () } else { next ({ path : \"/login\" }) } }) new Vue ({ store , router , render : h => h ( App ) }). $mount ( '#app' ) router.js import Vue from 'vue' import Router from 'vue-router' import Home from './views/Home.vue' Vue . use ( Router ) export default new Router ({ mode : 'history' , base : process . env . BASE_URL , routes : [{ path : '/' , name : 'Home' , component : Home }, { path : '/login' , name : 'Login' , component : () => import ( './views/Login.vue' ) } ] }) store/actions.js export default { buyVip ({ commit }, username ) { return new Promise (( resolve , reject ) => { // \u6a21\u62df\u540e\u7aef\u4ea4\u4e92\u8017\u65f6 setTimeout (() => { commit ( \"setUserInfo\" , username ) resolve ( \"\u8d2d\u4e70\u6210\u529f\" ) }, 1000 ) }) } } store/getters.js export default { getUserLevel ( state ) { switch ( state . username ) { case \"admin\" : return \"\u7ba1\u7406\u5458\" ; case \"user\" : return \"\u4f1a\u5458\" ; default : return \"\u666e\u901a\u7528\u6237\" } } } store/index.js import Vuex from 'vuex' import Vue from 'vue' import state from './state' import mutations from './mutations' import getters from './getters' import actions from './actions' Vue . use ( Vuex ) const store = new Vuex . Store ({ state , getters , actions , // \u5f02\u6b65\u64cd\u4f5c mutations // \u540c\u6b65\u64cd\u4f5c }) export default store store/mutations.js export default { setUserInfo ( state , username ) { state . username = username ; } } store/state.js export default { username : \"\" , password : \"\" } views/Home.vue < template > < div > < h1 > \u8be6\u60c5\u9875 </ h1 > < p > \u6b22\u8fce\u767b\u5f55: </ p > < p > {{this.$store.getters.getUserLevel}} </ p > < p > {{getUserLevel}} </ p > < p > {{this.$store.state.username }} </ p > < p > {{username}} </ p > < van-button type = \"primary\" @ click = \"byVip\" size = \"large\" > \u8d2d\u4e70\u4f1a\u5458 </ van-button > </ div > </ template > < script > import { mapGetters , mapState } from \"vuex\" ; export default { computed : { // \u89e3\u6784 ... mapGetters ([ \"getUserLevel\" ]), ... mapState ([ \"username\" ]) }, methods : { byVip () { this . $store . dispatch ( \"buyVip\" , \"user\" ). then ( res => { this . $dialog . alert ({ message : res }); }); } } }; </ script > views/Login.vue < template > < div style = \"margin: 20px;\" > < div style = \"text-align: center;background-color:#EEEEEE\" > < h1 > \u767b\u5f55 </ h1 > </ div > < van-cell-group > < van-field v-model = \"username\" label = \"\u7528\u6237\u540d\" placeholder = \"\u8bf7\u8f93\u5165\u7528\u6237\u540d\" required /> < van-field v-model = \"password\" @ keyup . enter . native = \"login\" label = \"\u5bc6\u7801\" type = \"password\" placeholder = \"\u8bf7\u8f93\u5165\u5bc6\u7801\" required /> < div style = \"margin-top:30px\" > < van-button type = \"primary\" @ click = \"login\" size = \"large\" > \u767b\u5f55 </ van-button > </ div > </ van-cell-group > </ div > </ template > < script > export default { data () { return { username : \"\" , password : \"\" }; }, methods : { login () { if ( this . username !== \"\" && this . password !== \"\" ) { this . $store . commit ( \"setUserInfo\" , this . username ); this . $router . push ({ path : \"/\" }); } else { this . $dialog . alert ({ message : \"\u767b\u5f55\u5931\u8d25\" }); } } } }; </ script >","title":"Vuex"},{"location":"JavaScript/vuex/#vuex","text":"\u4e3avue.js\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u7684\u72b6\u6001\u7ba1\u7406\u6a21\u5f0f \u91c7\u7528\u96c6\u4e2d\u5f0f\u5b58\u50a8\u7ba1\u7406\u5e94\u7528\u7684\u6240\u6709\u7ec4\u4ef6\u72b6\u6001 \u4ee5\u76f8\u5e94\u7684\u89c4\u5219\u4fdd\u8bc1\u4ee5\u4e00\u79cd\u53ef\u9884\u6d4b\u7684\u65b9\u5f0f\u53d1\u751f\u53d8\u5316","title":"Vuex"},{"location":"JavaScript/vuex/#_1","text":"\u8bfb\u53d6\uff0c\u591a\u4e2a\u89c6\u56fe\u4f9d\u8d56\u4e8e\u540c\u4e00\u4e2a\u72b6\u6001 \u4fee\u6539\uff0c\u4e0d\u540c\u89c6\u56fe\u7684\u884c\u4e3a\u9700\u8981\u6539\u53d8\u540c\u4e00\u4e2a\u72b6\u6001","title":"\u5e94\u7528\u573a\u666f"},{"location":"JavaScript/vuex/#_2","text":"State \u6570\u636e\u4ed3\u5e93 getter \u83b7\u53d6\u6570\u636e Mutation \u4fee\u6539\u6570\u636e Action \u63d0\u4ea4mutation","title":"\u7ec4\u6210\u90e8\u5206"},{"location":"JavaScript/vuex/#vuex_1","text":"1\u3001\u5b89\u88c5vuex\u5305\uff1anpm install vuex 2\u3001\u521b\u5efa\u5b9e\u4f8b\uff1anew Vuex.store() 3\u3001\u5728main.js\u4e2d\u5c06vuex\u5b9e\u4f8b\u6302\u8f7d\u5230vue\u5bf9\u8c61\u4e0a import Vue from 'vue' import App from './App.vue' import Vuex from 'vuex' Vue . config . productionTip = false Vue . use ( Vuex ) const store = new Vuex . Store ({ state : { count : 0 } }) new Vue ({ store , render : h => h ( App ), }). $mount ( '#app' )","title":"\u5b89\u88c5Vuex"},{"location":"JavaScript/vuex/#count","text":"\u601d\u8def 1\u3001state\u4e2d\u521b\u5efacount\u5b57\u6bb5 2\u3001mutations\u4e2d\u521b\u5efa\u4e00\u4e2acount++\u7684mutation 3\u3001button\u65b0\u589eclick\u4e8b\u4ef6\u89e6\u53d1mutation\u6539\u53d8count main.js import Vue from 'vue' import App from './App.vue' import Vuex from 'vuex' Vue . config . productionTip = false Vue . use ( Vuex ) const store = new Vuex . Store ({ // \u72b6\u6001\u6570\u636e state : { count : 0 }, // \u72b6\u6001\u6539\u53d8\u65b9\u6cd5 mutations : { // \u7b2c\u4e00\u4e2a\u53c2\u6570\u662fstate\uff0c \u53ef\u4ee5\u63a5\u53d7\u7b2c\u4e8c\u4e2a\u53c2\u6570 increaseCount ( state ) { state . count ++ ; } } }) new Vue ({ store , render : h => h ( App ), }). $mount ( '#app' ) App.vue < template > < div id = \"app\" > < h1 > count : {{ count }} < /h1> < button @ click = \"increaseCount\" > \u70b9\u6211 ++< /button> < /div> < /template> < script > export default { name : \"app\" , computed : { count () { // \u83b7\u53d6\u72b6\u6001\u6570\u636e return this . $store . state . count ; } }, methods : { increaseCount () { // \u4fee\u6539\u72b6\u6001\u6570\u636e this . $store . commit ( \"increaseCount\" ); } r } }; < /script>","title":"count++\u793a\u4f8b"},{"location":"JavaScript/vuex/#_3","text":"\u4e1a\u52a1\u76ee\u6807 1\u3001\u5236\u4f5c\u4e00\u4e2a\u9700\u8981\u8d26\u53f7\u767b\u5f55\u7684\u8bfe\u7a0b\u5b66\u4e60\u9879\u76ee 2\u3001\u4e0d\u540c\u7684\u8bfe\u7a0b\u9700\u8981\u4e0d\u540c\u7684\u4f1a\u5458\u7b49\u7ea7\uff0c\u5b9e\u73b0\u8d2d\u4e70\u4f1a\u5458\u7684\u529f\u80fd\uff0c\u8bfe\u7a0b\u5206\u4eab \u9879\u76ee\u529f\u80fd 1\u3001\u901a\u8fc7state.userinfo\u63a7\u5236\u7528\u6237\u767b\u5f55\u8def\u7531\u9650\u5236 2\u3001\u591a\u7ec4\u4ef6\u5171\u4eabstate.userStatus \u548c state.vipLevel\u72b6\u6001 3\u3001\u591a\u7ec4\u4ef6\u4fee\u6539state.userstatus \u548c state.vipLevel\u72b6\u6001 \u6587\u4ef6\u76ee\u5f55\u6811 src \u251c\u2500\u2500 App . vue \u251c\u2500\u2500 main . js \u251c\u2500\u2500 router . js \u251c\u2500\u2500 store \u2502 \u251c\u2500\u2500 actions . js \u2502 \u251c\u2500\u2500 getters . js \u2502 \u251c\u2500\u2500 index . js \u2502 \u251c\u2500\u2500 mutations . js \u2502 \u2514\u2500\u2500 state . js \u2514\u2500\u2500 views \u251c\u2500\u2500 Home . vue \u2514\u2500\u2500 Login . vue \u6587\u4ef6\u4ee3\u7801 App.vue < template > < div id = \"app\" > < router-view /> </ div > </ template > main.js import Vue from 'vue' import App from './App.vue' import store from './store' import router from './router' import Vant from 'vant' ; import 'vant/lib/index.css' ; Vue . use ( Vant ); Vue . config . productionTip = false // \u524d\u7f6e\u5b88\u536b\uff0c\u6743\u9650\u6821\u9a8c router . beforeEach (( to , from , next ) => { if ( store . state . username || to . path === \"/login\" ) { next () } else { next ({ path : \"/login\" }) } }) new Vue ({ store , router , render : h => h ( App ) }). $mount ( '#app' ) router.js import Vue from 'vue' import Router from 'vue-router' import Home from './views/Home.vue' Vue . use ( Router ) export default new Router ({ mode : 'history' , base : process . env . BASE_URL , routes : [{ path : '/' , name : 'Home' , component : Home }, { path : '/login' , name : 'Login' , component : () => import ( './views/Login.vue' ) } ] }) store/actions.js export default { buyVip ({ commit }, username ) { return new Promise (( resolve , reject ) => { // \u6a21\u62df\u540e\u7aef\u4ea4\u4e92\u8017\u65f6 setTimeout (() => { commit ( \"setUserInfo\" , username ) resolve ( \"\u8d2d\u4e70\u6210\u529f\" ) }, 1000 ) }) } } store/getters.js export default { getUserLevel ( state ) { switch ( state . username ) { case \"admin\" : return \"\u7ba1\u7406\u5458\" ; case \"user\" : return \"\u4f1a\u5458\" ; default : return \"\u666e\u901a\u7528\u6237\" } } } store/index.js import Vuex from 'vuex' import Vue from 'vue' import state from './state' import mutations from './mutations' import getters from './getters' import actions from './actions' Vue . use ( Vuex ) const store = new Vuex . Store ({ state , getters , actions , // \u5f02\u6b65\u64cd\u4f5c mutations // \u540c\u6b65\u64cd\u4f5c }) export default store store/mutations.js export default { setUserInfo ( state , username ) { state . username = username ; } } store/state.js export default { username : \"\" , password : \"\" } views/Home.vue < template > < div > < h1 > \u8be6\u60c5\u9875 </ h1 > < p > \u6b22\u8fce\u767b\u5f55: </ p > < p > {{this.$store.getters.getUserLevel}} </ p > < p > {{getUserLevel}} </ p > < p > {{this.$store.state.username }} </ p > < p > {{username}} </ p > < van-button type = \"primary\" @ click = \"byVip\" size = \"large\" > \u8d2d\u4e70\u4f1a\u5458 </ van-button > </ div > </ template > < script > import { mapGetters , mapState } from \"vuex\" ; export default { computed : { // \u89e3\u6784 ... mapGetters ([ \"getUserLevel\" ]), ... mapState ([ \"username\" ]) }, methods : { byVip () { this . $store . dispatch ( \"buyVip\" , \"user\" ). then ( res => { this . $dialog . alert ({ message : res }); }); } } }; </ script > views/Login.vue < template > < div style = \"margin: 20px;\" > < div style = \"text-align: center;background-color:#EEEEEE\" > < h1 > \u767b\u5f55 </ h1 > </ div > < van-cell-group > < van-field v-model = \"username\" label = \"\u7528\u6237\u540d\" placeholder = \"\u8bf7\u8f93\u5165\u7528\u6237\u540d\" required /> < van-field v-model = \"password\" @ keyup . enter . native = \"login\" label = \"\u5bc6\u7801\" type = \"password\" placeholder = \"\u8bf7\u8f93\u5165\u5bc6\u7801\" required /> < div style = \"margin-top:30px\" > < van-button type = \"primary\" @ click = \"login\" size = \"large\" > \u767b\u5f55 </ van-button > </ div > </ van-cell-group > </ div > </ template > < script > export default { data () { return { username : \"\" , password : \"\" }; }, methods : { login () { if ( this . username !== \"\" && this . password !== \"\" ) { this . $store . commit ( \"setUserInfo\" , this . username ); this . $router . push ({ path : \"/\" }); } else { this . $dialog . alert ({ message : \"\u767b\u5f55\u5931\u8d25\" }); } } } }; </ script >","title":"\u9879\u76ee\u5b9e\u6218"},{"location":"JavaScript/vue\u9879\u76ee\u4e2d\u4f7f\u7528svg\u5e76\u8bbe\u7f6e\u5927\u5c0f\u989c\u8272\u7b49\u6837\u5f0f/","text":"vue\u9879\u76ee\u4e2d\u4f7f\u7528svg\u5e76\u8bbe\u7f6e\u5927\u5c0f\u989c\u8272\u7b49\u6837\u5f0f 1\u3001\u5b89\u88c5\u4f9d\u8d56 npm install --save-dev svg-sprite-loader # \u6216\u8005 yarn add svg - sprite - loader --dev 2\u3001\u65b0\u5efasvg\u8d44\u6e90\u76ee\u5f55 \u5c06svg\u8d44\u6e90\u653e\u5165\u6b64\u76ee\u5f55\uff0c\u63a5\u4e0b\u6765\u4f1a\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u8be5\u8def\u5f84 mkdir - p src / assets / icons 3\u3001vue-cli 3.x \u914d\u7f6e vue.config.js module . exports = { chainWebpack : config => { // svg rule loader const svgRule = config . module . rule ( 'svg' ) // \u627e\u5230svg-loader svgRule . uses . clear () // \u6e05\u9664\u5df2\u6709\u7684loader, \u5982\u679c\u4e0d\u8fd9\u6837\u505a\u4f1a\u6dfb\u52a0\u5728\u6b64loader\u4e4b\u540e svgRule . exclude . add ( /node_modules/ ) // \u6b63\u5219\u5339\u914d\u6392\u9664node_modules\u76ee\u5f55 svgRule // \u6dfb\u52a0svg\u65b0\u7684loader\u5904\u7406 . test ( /\\.svg$/ ) . use ( 'svg-sprite-loader' ) . loader ( 'svg-sprite-loader' ) . options ({ symbolId : 'icon-[name]' , }) // \u4fee\u6539images loader \u6dfb\u52a0svg\u5904\u7406 const imagesRule = config . module . rule ( 'images' ) imagesRule . exclude . add ( resolve ( 'src/assets/icons' )) config . module . rule ( 'images' ) . test ( /\\.(png|jpe?g|gif|svg)(\\?.*)?$/ ) } } 4\u3001\u521b\u5efaSvgIcon.vue src/compoments/SvgIcon.vue < template > < svg :class = \"svgClass\" aria-hidden = \"true\" > < use :xlink:href = \"iconName\" ></ use > </ svg > </ template > < script > export default { name : 'svg-icon' , props : { iconClass : { type : String , required : true }, className : { type : String } }, computed : { iconName () { return `#icon- ${ this . iconClass } ` }, svgClass () { if ( this . className ) { return 'svg-icon ' + this . className } else { return 'svg-icon' } } } } </ script > < style scoped > . svg-icon { width : 1 em ; height : 1 em ; vertical-align : -0.15 em ; fill : currentColor ; overflow : hidden ; } </ style > 5\u3001\u7ec4\u4ef6\u6ce8\u518c src/assets/icons/index.js import Vue from 'vue' import SvgIcon from '@/components/SvgIcon' // \u5168\u5c40\u6ce8\u518c\u7ec4\u4ef6 Vue . component ( 'svg-icon' , SvgIcon ) // \u5b9a\u4e49\u4e00\u4e2a\u52a0\u8f7d\u76ee\u5f55\u7684\u51fd\u6570 const requireAll = requireContext => requireContext . keys (). map ( requireContext ) const req = require . context ( '@/assets/icons' , false , /\\.svg$/ ) // \u52a0\u8f7d\u76ee\u5f55\u4e0b\u7684\u6240\u6709 svg \u6587\u4ef6 requireAll ( req ) 6\u3001\u5f15\u5165\u7ec4\u4ef6 main.js import './assets/icons' 7\u3001\u4f7f\u7528svg\u7ec4\u4ef6 iconClass: svg\u6587\u4ef6\u7684\u6587\u4ef6\u540d className: svg\u56fe\u6807\u7684\u6837\u5f0f\u7c7b\u540d < template > < svg-icon iconClass = 'svg-name' className = 'icon' ></ svg-icon > </ template > ... < style scoped > . icon { width : 100 px ; height : 100 px ; color : red ; } </ style > \u5907\u6ce8\uff1a \u5982\u679c\u989c\u8272\u6ca1\u6709\u6539\u53d8\uff0c\u6253\u5f00svg\u6587\u4ef6\uff0c\u627e\u5230fill\uff0c\u90fd\u5220\u9664 \u53c2\u8003 \u5728vue\u9879\u76ee\u4e2d\u4f7f\u7528svg\uff0c\u5e76\u80fd\u6839\u636e\u9700\u8981\u4fee\u6539svg\u5927\u5c0f\u989c\u8272\u7b49\u6837\u5f0f","title":"Vue\u9879\u76ee\u4e2d\u4f7f\u7528svg\u5e76\u8bbe\u7f6e\u5927\u5c0f\u989c\u8272\u7b49\u6837\u5f0f"},{"location":"JavaScript/\u524d\u7aef\u6280\u5de7/","text":"\u5173\u4e8ea\u6807\u7b7e\u70b9\u51fb\u53bb\u9664\u9ed8\u8ba4\u6837\u5f0f a { text-decoration : none ; color : #333 ; } \u8bb0\u4f4f\u8fd9\u4e2acolor\u4e00\u5b9a\u8981\u5199","title":"\u524d\u7aef\u6280\u5de7"},{"location":"JavaScript/\u524d\u7aef\u7b14\u8bb0/","text":"1\u3001element\u9ed8\u8ba4\u82f1\u6587\u89e3\u51b3\u65b9\u6848 main.js //import enLocale from 'element-ui/lib/locale/lang/en' import zhLocale from 'element-ui/lib/locale/lang/zh-CN' //import locale from 'element-ui/lib/locale' Vue.use(ElementUI, { zhLocale }) 2\u3001\u6587\u5b57\u5355\u884c\u663e\u793a\uff0c\u8d85\u8fc7\u90e8\u5206\u4f1a\u81ea\u52a8\u9690\u85cf \u591a\u4f59\u7684\u5185\u5bb9\u4f1a\u5728 hover \u65f6\u4ee5 tooltip \u7684\u5f62\u5f0f\u663e\u793a\u51fa\u6765\u3002 3\u3001\u94fe\u63a5\u8df3\u8f6c \u8df3\u8f6cdemo 4\u3001html\u5982\u4f55\u5b9e\u73b0\u9f20\u6807\u60ac\u505c\u663e\u793a\u6587\u5b57 \u6587\u5b57\u5185\u5bb9\u6587\u5b57\u5185\u5bb9 5\u3001vue element UI el-table\u8868\u683c\u8c03\u6574\u884c\u9ad8\uff0c\u53ca\u5355\u5143\u683c\u5185\u5b57\u4f53\u5927\u5c0f 6\u3001\u83b7\u53d6url\u53c2\u6570 let id = this.$route.params.id let id = this.$route.query.id 7\u3001\u767b\u5f55\u6dfb\u52a0\u952e\u76d8\u4e8b\u4ef6,\u6ce8\u610f,\u4e0d\u80fd\u76f4\u63a5\u5728\u7126\u70b9\u4e8b\u4ef6\u4e0a\u6dfb\u52a0\u56de\u8f66 let that = this; document.onkeydown = function (e) { let key = window.event.keyCode; if (key === 13){ that.handleSubmit2();//\u65b9\u6cd5 } } 8\u3001\u56de\u8f66\u641c\u7d22 ```html el-input \u76d1\u542c\u952e\u76d8\u6309\u4e0b\u72b6\u6001 \u5f97\u7528@keyup.enter.native, \u5982\u679c\u662f\u975eel-input \u7ec4\u4ef6\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528@keyup.enter \u5728methods\u65b9\u6cd5\u96c6\u91cc\uff0c\u5199\u4e0a\u76d1\u542c\u7684\u65b9\u6cd5\uff0c\u5f53\u83b7\u53d6\u7684keyCode \u4e3a13\u65f6\uff0c\u8868\u793a\u6309\u4e0b\u4e86\u56de\u8f66\u952e\uff0c\u5982\u679c\u9700\u8981\u76d1\u542c\u7a7a\u683c\u6216\u8005\u5176\u4ed6\u952e\uff0c\u6362\u6210\u522b\u7684\u952e\u503c searchEnterFun:function(e){ var keyCode = window.event? e.keyCode:e.which; // \u6d4f\u89c8\u5668\u517c\u5bb9\u95ee\u9898 // console.log('\u56de\u8f66\u641c\u7d22',keyCode,e); if(keyCode == 13 && this.input){ this.$router.push({path:'/Share?keywords='+this.input}); } } ```` \u8bbe\u7f6e\u9ed8\u8ba4\u53c2\u6570 function example(name,age){ name=name||'\u8c82\u8749'; age=age||21; alert('\u4f60\u597d\uff01\u6211\u662f'+name+'\uff0c\u4eca\u5e74'+age+'\u5c81\u3002'); } Vue.js \u56fe\u7247\u5f15\u7528 1\u3001\u5728data \u91cc\u5199\u5165 logo: require('../assets/images/logo.png') 2\u3001\u5728\u6a21\u677f\u4e2d\u5199\u5165 $route.path \u5f53\u524d\u8def\u7531\u5bf9\u8c61\u7684\u8def\u5f84\uff0c\u5982\u2018/vi $route.query \u8bf7\u6c42\u53c2\u6570\uff0c\u5982/foo?user=1\u83b7\u53d6\u5230query.user = 1 $route.router \u6240\u5c5e\u8def\u7531\u5668\u4ee5\u53ca\u6240\u5c5e\u7ec4\u4ef6\u4fe1\u606f $route.matched \u6570\u7ec4\uff0c\u5305\u542b\u5f53\u524d\u5339\u914d\u7684\u8def\u5f84\u4e2d\u6240\u5305\u542b\u7684\u6240\u6709\u7247\u6bb5\u6240\u5bf9\u5e94\u7684\u914d\u7f6e\u53c2\u6570\u5bf9\u8c61\u3002 $route.name \u5f53\u524d\u8def\u5f84\u540d\u5b57 \u6e05\u7a7a\u6570\u7ec4\u7684\u4e09\u79cd\u65b9\u5f0f var ary = [1,2,3,4]; ary.splice(0, ary.length); console.log(ary); // \u8f93\u51fa []\uff0c\u7a7a\u6570\u7ec4\uff0c\u5373\u88ab\u6e05\u7a7a\u4e86 \u6570\u7ec4\u89e3\u6784\u8d4b\u503c let colors = [ \"red\", \"green\", \"blue\" ]; let [ firstColor, secondColor ] = colors; \u5173\u4e8e\u57fa\u4e8evue\u7684\u6846\u67b6element UI el-input \u89e6\u53d1\u4e0d\u4e86@keyup.enter='\u65b9\u6cd5' \u89e3\u51b3\u65b9\u6848 vue\u7ec4\u4ef6\u91cd\u65b0\u52a0\u8f7d\uff08\u5237\u65b0\uff09 \u7b2c\u4e00\u79cd\u65b9\u6cd5\uff1a \u5229\u7528v-if\u63a7\u5236router-view\uff0c\u5728\u6839\u7ec4\u4ef6APP.vue\u4e2d\u5b9e\u73b0\u4e00\u4e2a\u5237\u65b0\u65b9\u6cd5 \u590d\u5236\u4ee3\u7801 <br /> export default {<br /> data () {<br /> return {<br /> isRouterAlive: true<br /> }<br /> },<br /> methods: {<br /> reload () {<br /> this.isRouterAlive = false<br /> this.$nextTick(() =&gt; (<br /> this.isRouterAlive = true)<br /> )<br /> } <br /> }<br /> }<br /> \u7136\u540e\u5176\u5b83\u4efb\u4f55\u60f3\u5237\u65b0\u81ea\u5df1\u7684\u8def\u7531\u9875\u9762\uff0c\u90fd\u53ef\u4ee5\u8fd9\u6837\uff1a this.reload() cursor:pointer;//\u9f20\u6807\u53d8\u5c0f\u624b \u5355\u884c\u6ea2\u51fa\u7701\u7565\u53f7 overflow:hidden; text-overflow:ellipsis; white-space: nowrap;/ \u52a0\u5bbd\u5ea6width\u5c5e\u6765\u517c\u5bb9\u90e8\u5206\u6d4f\u89c8 / \u591a\u884c\u6587\u672c\u6ea2\u51fa\u663e\u793a\u7701\u7565\u53f7 overflow : hidden; text-overflow: ellipsis; display: -webkit-box; -webkit-line-clamp: 2; / \u9650\u5236\u6587\u672c\u884c\u6570 / -webkit-box-orient: vertical;","title":"\u524d\u7aef\u7b14\u8bb0"},{"location":"JavaScript/\u53d1\u5e03\u4e00\u4e2anpm\u5305\u548c\u547d\u4ee4\u884c\u811a\u672c/","text":"\u53d1\u5e03\u4e00\u4e2anpm\u5305\u548c\u547d\u4ee4\u884c\u811a\u672c 1\u3001\u6ce8\u518c\u8d26\u53f7 https://www.npmjs.com/ 2\u3001\u521d\u59cb\u5316npm\u9879\u76ee npm init \u76ee\u5f55\u7ed3\u6784 \u251c\u2500\u2500 index . js \u2514\u2500\u2500 package . json 3\u3001\u9879\u76ee\u914d\u7f6e package.json { \"name\" : \"2020ooxx\" , \"version\" : \"1.0.5\" , \"description\" : \"a demo package\" , \"main\" : \"index.js\" , \"scripts\" : { \"test\" : \"echo \\\"Error: no test specified\\\" && exit 1\" }, \"author\" : \"mouday\" , \"license\" : \"ISC\" , \"dependencies\" : { } } \u914d\u7f6e\u53c2\u6570 https://docs.npmjs.com/files/package.json \u5e38\u7528\u53c2\u6570 main \uff1a\u7a0b\u5e8f\u7684\u5165\u53e3\u6587\u4ef6\uff0c\u9ed8\u8ba4\u662f index . js devDependencies : \u6240\u4f9d\u8d56\u7684\u5f00\u53d1\u73af\u5883\u4e0b\u7684\u5305 dependencies \uff1a\u6240\u4f9d\u8d56\u7684\u7ebf\u4e0a\u73af\u5883\u4e0b\u7684\u5305 repository : \u4ee3\u7801\u5b58\u653e\u5730\u5740\uff08\u4e00\u822c\u662f git\u5730\u5740 \uff09 keywords \uff1a npm \u5305\u5173\u952e\u8bcd 4\u3001\u6a21\u5757\u5f00\u53d1 index.js function hello () { console . log ( \"hello\" ); } // \u5bfc\u51fa\u6a21\u5757 module . exports . hello = hello 5\u3001\u767b\u5f55\u53d1\u5e03 # \u68c0\u67e5npm\u6e90 npm config get registry # \u5982\u8fc7\u4e0d\u662f\u4e0b\u9762\u7684\u5730\u5740\u9700\u8981\u8bbe\u7f6e npm config set registry https://registry.npmjs.org # \u767b\u5f55 npm adduser # \u53d1\u5305 npm publish 6\u3001\u5b89\u88c5\u6d4b\u8bd5 npm i 2020 ooxx demo.js // \u4f7f\u7528\u793a\u4f8b // var ooxx = require(\"./index\") var ooxx = require ( \"2020ooxx\" ) ooxx . hello (); // hello 7\u3001\u547d\u4ee4\u884c\u5de5\u5177 bin/index.js #!/usr/bin/env node console . log ( \"hi\" ); \u4fee\u6539package.json { \"bin\" : { \"my-cli\" : \"bin/index.js\" } } \u672c\u5730\u8c03\u8bd5 $ npm link $ my-cli # hi \u8c03\u8bd5\u5b8c\u6210\u540e\u53ef\u4ee5\u53d1\u5e03 \u53c2\u8003 npm\u53d1\u5305\u6d41\u7a0b \u624b\u5199\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\u5230npm\u53d1\u5e03\u5305","title":"\u53d1\u5e03\u4e00\u4e2anpm\u5305\u548c\u547d\u4ee4\u884c\u811a\u672c"},{"location":"JavaScript/\u53d1\u5e03\u4e00\u4e2anpm\u5305\u548c\u547d\u4ee4\u884c\u811a\u672c/#npm","text":"1\u3001\u6ce8\u518c\u8d26\u53f7 https://www.npmjs.com/ 2\u3001\u521d\u59cb\u5316npm\u9879\u76ee npm init \u76ee\u5f55\u7ed3\u6784 \u251c\u2500\u2500 index . js \u2514\u2500\u2500 package . json 3\u3001\u9879\u76ee\u914d\u7f6e package.json { \"name\" : \"2020ooxx\" , \"version\" : \"1.0.5\" , \"description\" : \"a demo package\" , \"main\" : \"index.js\" , \"scripts\" : { \"test\" : \"echo \\\"Error: no test specified\\\" && exit 1\" }, \"author\" : \"mouday\" , \"license\" : \"ISC\" , \"dependencies\" : { } } \u914d\u7f6e\u53c2\u6570 https://docs.npmjs.com/files/package.json \u5e38\u7528\u53c2\u6570 main \uff1a\u7a0b\u5e8f\u7684\u5165\u53e3\u6587\u4ef6\uff0c\u9ed8\u8ba4\u662f index . js devDependencies : \u6240\u4f9d\u8d56\u7684\u5f00\u53d1\u73af\u5883\u4e0b\u7684\u5305 dependencies \uff1a\u6240\u4f9d\u8d56\u7684\u7ebf\u4e0a\u73af\u5883\u4e0b\u7684\u5305 repository : \u4ee3\u7801\u5b58\u653e\u5730\u5740\uff08\u4e00\u822c\u662f git\u5730\u5740 \uff09 keywords \uff1a npm \u5305\u5173\u952e\u8bcd 4\u3001\u6a21\u5757\u5f00\u53d1 index.js function hello () { console . log ( \"hello\" ); } // \u5bfc\u51fa\u6a21\u5757 module . exports . hello = hello 5\u3001\u767b\u5f55\u53d1\u5e03 # \u68c0\u67e5npm\u6e90 npm config get registry # \u5982\u8fc7\u4e0d\u662f\u4e0b\u9762\u7684\u5730\u5740\u9700\u8981\u8bbe\u7f6e npm config set registry https://registry.npmjs.org # \u767b\u5f55 npm adduser # \u53d1\u5305 npm publish 6\u3001\u5b89\u88c5\u6d4b\u8bd5 npm i 2020 ooxx demo.js // \u4f7f\u7528\u793a\u4f8b // var ooxx = require(\"./index\") var ooxx = require ( \"2020ooxx\" ) ooxx . hello (); // hello 7\u3001\u547d\u4ee4\u884c\u5de5\u5177 bin/index.js #!/usr/bin/env node console . log ( \"hi\" ); \u4fee\u6539package.json { \"bin\" : { \"my-cli\" : \"bin/index.js\" } } \u672c\u5730\u8c03\u8bd5 $ npm link $ my-cli # hi \u8c03\u8bd5\u5b8c\u6210\u540e\u53ef\u4ee5\u53d1\u5e03 \u53c2\u8003 npm\u53d1\u5305\u6d41\u7a0b \u624b\u5199\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\u5230npm\u53d1\u5e03\u5305","title":"\u53d1\u5e03\u4e00\u4e2anpm\u5305\u548c\u547d\u4ee4\u884c\u811a\u672c"},{"location":"LEK/","text":"LEK ElasticStack LEK hadoop zookeeper","title":"LEK"},{"location":"LEK/#lek","text":"ElasticStack LEK hadoop zookeeper","title":"LEK"},{"location":"LEK/ElasticStack/","text":"ElasticStack https://www.elastic.co/cn/ ElasticSearch \u4e0b\u8f7d\u3001\u89e3\u538b\u3001\u542f\u52a8 http://127.0.0.1:9200 1\u3001\u53c2\u6570\u914d\u7f6e jvm\u914d\u7f6e jmv.options \u5982\u679c\u8fd0\u884c\u6709\u95ee\u9898-> 256M log\u914d\u7f6e log4j2.properties es\u7684\u914d\u7f6e elasticsearch.yml -cluster.name \u96c6\u7fa4\u540d\u79f0 -node.name \u8282\u70b9\u540d\u79f0 -network.host \u7f51\u7edc\u5730\u5740 -http.port \u7aef\u53e3 -path.data \u6570\u636e\u5b58\u50a8\u5730\u5740 -path.log \u65e5\u5fd7\u5b58\u50a8\u5730\u5740 \u542f\u52a8\u65f6\u4fee\u6539\u53c2\u6570\uff1a bin / elasticsearch - Ehttp . port = 19200 2\u3001\u8fd0\u884c\u6a21\u5f0f \u4ee5network.host\u53c2\u6570\u4e3a\u5224\u65ad\u6807\u51c6 Development Production 3\u3001\u672c\u5730\u542f\u52a8\u96c6\u7fa4 elasticsearch elasticsearch - Ehttp . port = 8200 - Epath . data = node2 elasticsearch - Ehttp . port = 7200 - Epath . data = node3 \u67e5\u770b\u96c6\u7fa4 http://127.0.0.1:9200/_cat/nodes?v http://127.0.0.1:9200/_cluster/stats 4\u3001\u5e38\u7528\u672f\u8bed Document \u6587\u6863\u6570\u636e Index \u7d22\u5f15 Type \u7d22\u5f15\u4e2d\u7684\u6570\u636e\u7c7b\u578b Field \u5b57\u6bb5\uff0c\u6587\u6863\u5c5e\u6027 Query DSL \u67e5\u8be2\u8bed\u6cd5 5\u3001CURD Create \u521b\u5efa PUT / index / type / id ( data ) Read \u8bfb\u53d6 GET / index / type / id Update \u66f4\u65b0 POST / index / type / id / _update ( doc ) Delete \u5220\u9664 DELETE / index / type / id 6\u3001\u67e5\u8be2\u8bed\u6cd52\u79cd Query String GET /index/type/_search?q=Tom Query DSL GET /index/type/_search { \"query\": { \"match\": { \"name\": \"Tom\" } } } Kibana http://127.0.0.1:5601 1\u3001\u9ed8\u8ba4\u914d\u7f6e server . host \u5730\u5740 server . port \u7aef\u53e3 elasticsearch . url es\u5730\u5740 2\u3001\u5e38\u7528\u529f\u80fd Discover \u6570\u636e\u641c\u7d22\u67e5\u770b Visualize \u56fe\u8868\u5236\u4f5c Dashboard \u4eea\u8868\u76d8 Timelion \u65f6\u5e8f\u6570\u636e\u7684\u9ad8\u7ea7\u53ef\u89c6\u5316\u5206\u6790 DevTools \u5f00\u53d1\u8005\u5de5\u5177 Management \u914d\u7f6e Beats Filebeat \u65e5\u5fd7\u6587\u4ef6 Metricbeat \u5ea6\u91cf\u6570\u636e packetbeat \u7f51\u7edc\u6570\u636e Winlogbeat Windows\u6570\u636e Heartbeat \u5065\u5eb7\u68c0\u67e5 1\u3001Filebeat Input \u8f93\u5165 - Prospector - log / stdin - Havester Filter \u5904\u7406 - Input - Include_lines - exclude_lines - exclude_files - Output Processors - drop_event - drop_fields - decode_json_fields - include_fields Output \u8f93\u51fa - ElasticSearch - Logstash - Kafka - Redis - Console - File Filebeat Module nginx apach mysql \u6700\u4f73\u5b9e\u8df5\u53c2\u8003 head - n 2 demo . log | filebeat - e - c nginx . yml 2\u3001packetbeat \u5b9e\u65f6\u6293\u53d6\u7f51\u7edc\u5305 \u81ea\u52a8\u89e3\u6790\u5e94\u7528\u5c42\u534f\u8bae ICMP(v4 and v6) DNS HTTP MySQL Redis \u7c7b\u4f3cWireshark sudo packetbeat - e - c es . yml - strict . perms = false Logstash ETL Extract Transform Load \u5904\u7406\u6d41\u7a0b Input -file -redis -beats -kafka Filter -grok \u57fa\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u975e\u7ed3\u6784\u5316\u4f5c\u7ed3\u6784\u5316\u5904\u7406 -mutate \u589e\u5220\u6539\u67e5 -drop -date \u65f6\u95f4\u5b57\u7b26\u4e32\u8f6c\u4e3a\u65f6\u95f4\u6233\u7c7b\u578b Output -stdout -elasticsearch -kafka Grok\u793a\u4f8b 55 . 3 . 244 . 1 GET / index . html 15824 0 . 043 -> { % IP : client } % { WORD : method } % { URIPATHPARAM : requst } % { NUMBER : bytes } % { NUMBER : duration } -> { \"client\" : \"55.3.244.1\" , \"method\" : \"GET\" , \"requst\" : \"/index.html\" , \"bytes\" : \"15824\" , \"duration\" : \"0.043\" } \u6d4b\u8bd5 head - n 2 demo . log | logstash - f conf . yml \u5b9e\u6218 Packetbeat + logstash \u6536\u96c6\u6570\u636e kibana + elasticsearch \u6570\u636e\u5206\u6790 \u65b9\u6848(\u4e0d\u80fd\u662f\u540c\u4e00\u4e2a\u96c6\u7fa4) Production Cluster ElasticSearch http://127.0.0.1:9200 Kibana http://127.0.0.1:5601 Monitoring Cluster ElasticSearch http://127.0.0.1:8200 elasticsearch - Ecluster . name = sniff_search - Ehttp . port = 8200 - Ehttp . data = sniff Kibana http://127.0.0.1:8601 kibana - e http : // 127 . 0 . 0 . 1 : 8200 - p 8601","title":"ElasticStack"},{"location":"LEK/ElasticStack/#elasticsearch","text":"\u4e0b\u8f7d\u3001\u89e3\u538b\u3001\u542f\u52a8 http://127.0.0.1:9200 1\u3001\u53c2\u6570\u914d\u7f6e jvm\u914d\u7f6e jmv.options \u5982\u679c\u8fd0\u884c\u6709\u95ee\u9898-> 256M log\u914d\u7f6e log4j2.properties es\u7684\u914d\u7f6e elasticsearch.yml -cluster.name \u96c6\u7fa4\u540d\u79f0 -node.name \u8282\u70b9\u540d\u79f0 -network.host \u7f51\u7edc\u5730\u5740 -http.port \u7aef\u53e3 -path.data \u6570\u636e\u5b58\u50a8\u5730\u5740 -path.log \u65e5\u5fd7\u5b58\u50a8\u5730\u5740 \u542f\u52a8\u65f6\u4fee\u6539\u53c2\u6570\uff1a bin / elasticsearch - Ehttp . port = 19200 2\u3001\u8fd0\u884c\u6a21\u5f0f \u4ee5network.host\u53c2\u6570\u4e3a\u5224\u65ad\u6807\u51c6 Development Production 3\u3001\u672c\u5730\u542f\u52a8\u96c6\u7fa4 elasticsearch elasticsearch - Ehttp . port = 8200 - Epath . data = node2 elasticsearch - Ehttp . port = 7200 - Epath . data = node3 \u67e5\u770b\u96c6\u7fa4 http://127.0.0.1:9200/_cat/nodes?v http://127.0.0.1:9200/_cluster/stats 4\u3001\u5e38\u7528\u672f\u8bed Document \u6587\u6863\u6570\u636e Index \u7d22\u5f15 Type \u7d22\u5f15\u4e2d\u7684\u6570\u636e\u7c7b\u578b Field \u5b57\u6bb5\uff0c\u6587\u6863\u5c5e\u6027 Query DSL \u67e5\u8be2\u8bed\u6cd5 5\u3001CURD Create \u521b\u5efa PUT / index / type / id ( data ) Read \u8bfb\u53d6 GET / index / type / id Update \u66f4\u65b0 POST / index / type / id / _update ( doc ) Delete \u5220\u9664 DELETE / index / type / id 6\u3001\u67e5\u8be2\u8bed\u6cd52\u79cd Query String GET /index/type/_search?q=Tom Query DSL GET /index/type/_search { \"query\": { \"match\": { \"name\": \"Tom\" } } }","title":"ElasticSearch"},{"location":"LEK/ElasticStack/#kibana","text":"http://127.0.0.1:5601 1\u3001\u9ed8\u8ba4\u914d\u7f6e server . host \u5730\u5740 server . port \u7aef\u53e3 elasticsearch . url es\u5730\u5740 2\u3001\u5e38\u7528\u529f\u80fd Discover \u6570\u636e\u641c\u7d22\u67e5\u770b Visualize \u56fe\u8868\u5236\u4f5c Dashboard \u4eea\u8868\u76d8 Timelion \u65f6\u5e8f\u6570\u636e\u7684\u9ad8\u7ea7\u53ef\u89c6\u5316\u5206\u6790 DevTools \u5f00\u53d1\u8005\u5de5\u5177 Management \u914d\u7f6e","title":"Kibana"},{"location":"LEK/ElasticStack/#beats","text":"Filebeat \u65e5\u5fd7\u6587\u4ef6 Metricbeat \u5ea6\u91cf\u6570\u636e packetbeat \u7f51\u7edc\u6570\u636e Winlogbeat Windows\u6570\u636e Heartbeat \u5065\u5eb7\u68c0\u67e5 1\u3001Filebeat Input \u8f93\u5165 - Prospector - log / stdin - Havester Filter \u5904\u7406 - Input - Include_lines - exclude_lines - exclude_files - Output Processors - drop_event - drop_fields - decode_json_fields - include_fields Output \u8f93\u51fa - ElasticSearch - Logstash - Kafka - Redis - Console - File Filebeat Module nginx apach mysql \u6700\u4f73\u5b9e\u8df5\u53c2\u8003 head - n 2 demo . log | filebeat - e - c nginx . yml 2\u3001packetbeat \u5b9e\u65f6\u6293\u53d6\u7f51\u7edc\u5305 \u81ea\u52a8\u89e3\u6790\u5e94\u7528\u5c42\u534f\u8bae ICMP(v4 and v6) DNS HTTP MySQL Redis \u7c7b\u4f3cWireshark sudo packetbeat - e - c es . yml - strict . perms = false","title":"Beats"},{"location":"LEK/ElasticStack/#logstash","text":"ETL Extract Transform Load \u5904\u7406\u6d41\u7a0b Input -file -redis -beats -kafka Filter -grok \u57fa\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u975e\u7ed3\u6784\u5316\u4f5c\u7ed3\u6784\u5316\u5904\u7406 -mutate \u589e\u5220\u6539\u67e5 -drop -date \u65f6\u95f4\u5b57\u7b26\u4e32\u8f6c\u4e3a\u65f6\u95f4\u6233\u7c7b\u578b Output -stdout -elasticsearch -kafka Grok\u793a\u4f8b 55 . 3 . 244 . 1 GET / index . html 15824 0 . 043 -> { % IP : client } % { WORD : method } % { URIPATHPARAM : requst } % { NUMBER : bytes } % { NUMBER : duration } -> { \"client\" : \"55.3.244.1\" , \"method\" : \"GET\" , \"requst\" : \"/index.html\" , \"bytes\" : \"15824\" , \"duration\" : \"0.043\" } \u6d4b\u8bd5 head - n 2 demo . log | logstash - f conf . yml","title":"Logstash"},{"location":"LEK/ElasticStack/#_1","text":"Packetbeat + logstash \u6536\u96c6\u6570\u636e kibana + elasticsearch \u6570\u636e\u5206\u6790 \u65b9\u6848(\u4e0d\u80fd\u662f\u540c\u4e00\u4e2a\u96c6\u7fa4) Production Cluster ElasticSearch http://127.0.0.1:9200 Kibana http://127.0.0.1:5601 Monitoring Cluster ElasticSearch http://127.0.0.1:8200 elasticsearch - Ecluster . name = sniff_search - Ehttp . port = 8200 - Ehttp . data = sniff Kibana http://127.0.0.1:8601 kibana - e http : // 127 . 0 . 0 . 1 : 8200 - p 8601","title":"\u5b9e\u6218"},{"location":"LEK/LEK/","text":"ElasticStack\uff1a\u4f7f\u7528FileBeat\u3001Logstash\u3001Elasticsearch\u3001Kibana\u6536\u96c6\u6e05\u6d17\u5b58\u50a8\u67e5\u770b\u5206\u6790\u6570\u636e \u73af\u5883\uff1a \u7248\u672c\u5747\u672a5.2.0 https://www.elastic.co/cn/downloads/past-releases 1\u3001filebeat: https://www.elastic.co/cn/downloads/past-releases/filebeat-5-2-0 2\u3001logstash https://www.elastic.co/cn/downloads/past-releases/logstash-5-2-0 3\u3001elasticsearch: https://www.elastic.co/cn/downloads/past-releases/elasticsearch-5-2-0 4\u3001kibana: https://www.elastic.co/cn/downloads/past-releases/kibana-5-2-0 \u65e5\u5fd7\u51c6\u5907 \u4f7f\u7528python\u811a\u672c\u5b9a\u65f6\u751f\u6210\u6a21\u62df\u65e5\u5fd7 generator_log.py # -*- encoding:utf-8 -*- import time from chinesename import ChineseName cn = ChineseName () while True : now = time . strftime ( \"%Y-%m- %d %H:%M:%S\" , time . localtime ()) message = \"{} {} \\n \" . format ( now , cn . getName ()) print ( message ) with open ( \"demo.log\" , \"a\" , encoding = \"utf-8\" ) as f : f . write ( message ) time . sleep ( 3 ) \u65e5\u5fd7\u793a\u4f8b\uff08\u65e5\u671f \u59d3\u540d\uff09\uff1a 2019 - 06 - 13 18 : 01 : 31 \u5bb9\u4f11 filebeat 1\u3001\u914d\u7f6e \u4fee\u6539\u914d\u7f6e\u6587\u4ef6filebeat.yml \u53ef\u4ee5\u9009\u62e9\u76f4\u63a5\u5c06\u6570\u636e\u4f20\u5165Elasticsearch\uff0c\u4e5f\u53ef\u4ee5\u4f20\u5165Logstash\u5904\u7406 filebeat.prospectors : - input_type : log paths : # \u914d\u7f6e\u9700\u8981\u6536\u96c6\u7684\u6587\u4ef6\u5730\u5740 - /var/log/*.log #-------------------------- Elasticsearch output ------------------------------ # output.elasticsearch: # hosts: [\"localhost:9200\"] #----------------------------- Logstash output -------------------------------- output.logstash : hosts : [ \"localhost:5044\" ] 2\u3001\u542f\u52a8\uff1a ./filebeat -e -c filebeat.yml -d \"publish\" \u53c2\u8003: \u5f00\u59cb\u4f7f\u7528Filebeat logstash 1\u3001\u5339\u914d\u8bf4\u660e \uff081\uff09\u5185\u7f6e\u5339\u914d %{SYNTAX:SEMANTIC} \uff082\uff09ruby\u6b63\u5219 ( ?< name > pattern ) \u5173\u4e8eRuby\u7684\u6b63\u5219\uff1a Ruby \u6b63\u5219\u8868\u8fbe\u5f0f\uff1a https://www.runoob.com/ruby/ruby-regular-expressions.html Ruby \u6b63\u5219\u5339\u914d\u6d4b\u8bd5\uff1a https://rubular.com/ 2\u3001\u914d\u7f6e \u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\u5b58\u653e\u81ea\u5b9a\u4e49\u5339\u914d\u6a21\u5f0f $ mkdir ./patterns $ cat ./patterns/datetime.re DATETIME \\d { 4 } - \\d { 2 } - \\d { 2 } \\d { 2 } : \\d { 2 } : \\d { 2 } es-pipeline.conf input { beats { port => \"5044\" } } filter { grok { patterns_dir => [ \"./patterns\" ] match => { \"message\" => \"%{DATETIME:logdate} (?<text>(.*))\" } remove_field => \"message\" } date { match => [ \"logdate\" , \"yyyy-MM-dd HH:mm:ss\" ] } } output { stdout { codec => rubydebug } elasticsearch { hosts => [ \"localhost:9200\" ] } } 3\u3001\u542f\u52a8logstash # \u89e3\u6790\u914d\u7f6e\u6587\u4ef6\u5e76\u62a5\u544a\u4efb\u4f55\u9519\u8bef . / bin / logstash - f es - pipeline . conf --config.test_and_exit # \u542f\u7528\u81ea\u52a8\u914d\u7f6e\u52a0\u8f7d . / bin / logstash - f es - pipeline . conf --config.reload.automatic \u6570\u636e\u7ed3\u679c kibana\u4e2d\u67e5\u8be2\u7ed3\u679c 1\u3001\u542f\u52a8 $ elasticsearch $ kibana 2\u3001\u67e5\u8be2 GET /logstash-2019.06.13/_search { \"sort\": [ { \"@timestamp\": { \"order\": \"desc\" } } ] } # \u67e5\u8be2\u7ed3\u679c { \"_index\": \"logstash-2019.06.13\", \"_type\": \"log\", \"_id\": \"AWtQTwv8vaBpxF8s4wUp\", \"_score\": null, \"_source\": { \"@timestamp\": \"2019-06-13T10:08:02.000Z\", \"offset\": 197738, \"logdate\": \"2019-06-13 18:08:02\", \"@version\": \"1\", \"beat\": { \"hostname\": \"bogon\", \"name\": \"bogon\", \"version\": \"5.2.0\" }, \"input_type\": \"log\", \"host\": \"bogon\", \"source\": \"/Users/qmp/Desktop/log/demo.log\", \"text\": \"\u4f2f\u955f\", \"type\": \"log\", \"tags\": [ \"beats_input_codec_plain_applied\" ] }, \"sort\": [ 1560420482000 ] } \u53c2\u8003 \u4f7f\u7528Logstash filter grok\u8fc7\u6ee4\u65e5\u5fd7\u6587\u4ef6 Logstash\u4f7f\u7528grok\u8fdb\u884c\u65e5\u5fd7\u8fc7\u6ee4 Logstash\u4ecb\u7ecd","title":"LEK"},{"location":"LEK/LEK/#_1","text":"\u7248\u672c\u5747\u672a5.2.0 https://www.elastic.co/cn/downloads/past-releases 1\u3001filebeat: https://www.elastic.co/cn/downloads/past-releases/filebeat-5-2-0 2\u3001logstash https://www.elastic.co/cn/downloads/past-releases/logstash-5-2-0 3\u3001elasticsearch: https://www.elastic.co/cn/downloads/past-releases/elasticsearch-5-2-0 4\u3001kibana: https://www.elastic.co/cn/downloads/past-releases/kibana-5-2-0","title":"\u73af\u5883\uff1a"},{"location":"LEK/LEK/#_2","text":"\u4f7f\u7528python\u811a\u672c\u5b9a\u65f6\u751f\u6210\u6a21\u62df\u65e5\u5fd7 generator_log.py # -*- encoding:utf-8 -*- import time from chinesename import ChineseName cn = ChineseName () while True : now = time . strftime ( \"%Y-%m- %d %H:%M:%S\" , time . localtime ()) message = \"{} {} \\n \" . format ( now , cn . getName ()) print ( message ) with open ( \"demo.log\" , \"a\" , encoding = \"utf-8\" ) as f : f . write ( message ) time . sleep ( 3 ) \u65e5\u5fd7\u793a\u4f8b\uff08\u65e5\u671f \u59d3\u540d\uff09\uff1a 2019 - 06 - 13 18 : 01 : 31 \u5bb9\u4f11","title":"\u65e5\u5fd7\u51c6\u5907"},{"location":"LEK/LEK/#filebeat","text":"1\u3001\u914d\u7f6e \u4fee\u6539\u914d\u7f6e\u6587\u4ef6filebeat.yml \u53ef\u4ee5\u9009\u62e9\u76f4\u63a5\u5c06\u6570\u636e\u4f20\u5165Elasticsearch\uff0c\u4e5f\u53ef\u4ee5\u4f20\u5165Logstash\u5904\u7406 filebeat.prospectors : - input_type : log paths : # \u914d\u7f6e\u9700\u8981\u6536\u96c6\u7684\u6587\u4ef6\u5730\u5740 - /var/log/*.log #-------------------------- Elasticsearch output ------------------------------ # output.elasticsearch: # hosts: [\"localhost:9200\"] #----------------------------- Logstash output -------------------------------- output.logstash : hosts : [ \"localhost:5044\" ] 2\u3001\u542f\u52a8\uff1a ./filebeat -e -c filebeat.yml -d \"publish\" \u53c2\u8003: \u5f00\u59cb\u4f7f\u7528Filebeat","title":"filebeat"},{"location":"LEK/LEK/#logstash","text":"1\u3001\u5339\u914d\u8bf4\u660e \uff081\uff09\u5185\u7f6e\u5339\u914d %{SYNTAX:SEMANTIC} \uff082\uff09ruby\u6b63\u5219 ( ?< name > pattern ) \u5173\u4e8eRuby\u7684\u6b63\u5219\uff1a Ruby \u6b63\u5219\u8868\u8fbe\u5f0f\uff1a https://www.runoob.com/ruby/ruby-regular-expressions.html Ruby \u6b63\u5219\u5339\u914d\u6d4b\u8bd5\uff1a https://rubular.com/ 2\u3001\u914d\u7f6e \u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\u5b58\u653e\u81ea\u5b9a\u4e49\u5339\u914d\u6a21\u5f0f $ mkdir ./patterns $ cat ./patterns/datetime.re DATETIME \\d { 4 } - \\d { 2 } - \\d { 2 } \\d { 2 } : \\d { 2 } : \\d { 2 } es-pipeline.conf input { beats { port => \"5044\" } } filter { grok { patterns_dir => [ \"./patterns\" ] match => { \"message\" => \"%{DATETIME:logdate} (?<text>(.*))\" } remove_field => \"message\" } date { match => [ \"logdate\" , \"yyyy-MM-dd HH:mm:ss\" ] } } output { stdout { codec => rubydebug } elasticsearch { hosts => [ \"localhost:9200\" ] } } 3\u3001\u542f\u52a8logstash # \u89e3\u6790\u914d\u7f6e\u6587\u4ef6\u5e76\u62a5\u544a\u4efb\u4f55\u9519\u8bef . / bin / logstash - f es - pipeline . conf --config.test_and_exit # \u542f\u7528\u81ea\u52a8\u914d\u7f6e\u52a0\u8f7d . / bin / logstash - f es - pipeline . conf --config.reload.automatic","title":"logstash"},{"location":"LEK/LEK/#_3","text":"","title":"\u6570\u636e\u7ed3\u679c"},{"location":"LEK/LEK/#kibana","text":"1\u3001\u542f\u52a8 $ elasticsearch $ kibana 2\u3001\u67e5\u8be2 GET /logstash-2019.06.13/_search { \"sort\": [ { \"@timestamp\": { \"order\": \"desc\" } } ] } # \u67e5\u8be2\u7ed3\u679c { \"_index\": \"logstash-2019.06.13\", \"_type\": \"log\", \"_id\": \"AWtQTwv8vaBpxF8s4wUp\", \"_score\": null, \"_source\": { \"@timestamp\": \"2019-06-13T10:08:02.000Z\", \"offset\": 197738, \"logdate\": \"2019-06-13 18:08:02\", \"@version\": \"1\", \"beat\": { \"hostname\": \"bogon\", \"name\": \"bogon\", \"version\": \"5.2.0\" }, \"input_type\": \"log\", \"host\": \"bogon\", \"source\": \"/Users/qmp/Desktop/log/demo.log\", \"text\": \"\u4f2f\u955f\", \"type\": \"log\", \"tags\": [ \"beats_input_codec_plain_applied\" ] }, \"sort\": [ 1560420482000 ] } \u53c2\u8003 \u4f7f\u7528Logstash filter grok\u8fc7\u6ee4\u65e5\u5fd7\u6587\u4ef6 Logstash\u4f7f\u7528grok\u8fdb\u884c\u65e5\u5fd7\u8fc7\u6ee4 Logstash\u4ecb\u7ecd","title":"kibana\u4e2d\u67e5\u8be2\u7ed3\u679c"},{"location":"LEK/hadoop/","text":"\u6982\u8ff0 DHFS -hadoop\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf -PB\uff0cTB -\u9ad8\u5197\u4f59\uff0c\u9ad8\u5bb9\u9519 Hadoop 1.x -MapReduce -HDSF -NameNode & Secondary NameNode\uff08\u5907\u4efd\u5143\u6570\u636e\uff09 & JobTracker -DataNode \u6bcf\u575764M & TaskTracker Hadoop 2.x -MapReduce Others -YARN ResourceManager + NodeManager (\u51cf\u5c11\u8d44\u6e90\u6d88\u8017\uff0c\u8fd0\u884cSpark\uff0cStorm) -HDFS -NameNode -DataNode MapReduce\u8fc7\u7a0b \u6d77\u91cf\u6570\u636e\uff08TB\uff09 -> MapReduce -> \u76ee\u6807\u6570\u636e \u56db\u4e2a\u9636\u6bb5 -Split -Map\uff08\u7f16\u7801\uff09Combine -Shuffle -partition -> Reduce(\u7f16\u7801) -> \u8f93\u51fa\u6587\u4ef6 \u4e09\u8005\u76f8\u7b49 HDSF\u9002\u5408\u5b58\u653e\u5927\u6587\u4ef6 \u5c0f\u6587\u4ef6\u53ef\u4ee5\u538b\u7f29\u5b58\u50a8 \u4e00\u822c\u60c5\u51b5 \u4e00\u4e2a\u8282\u70b910-100\u4e2a\u4efb\u52a1 mapred.reduce.tasks Hadoop\u5206\u5e03\u5f0f\u7f13\u5b58","title":"\u6982\u8ff0"},{"location":"LEK/hadoop/#_1","text":"DHFS -hadoop\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf -PB\uff0cTB -\u9ad8\u5197\u4f59\uff0c\u9ad8\u5bb9\u9519 Hadoop 1.x -MapReduce -HDSF -NameNode & Secondary NameNode\uff08\u5907\u4efd\u5143\u6570\u636e\uff09 & JobTracker -DataNode \u6bcf\u575764M & TaskTracker Hadoop 2.x -MapReduce Others -YARN ResourceManager + NodeManager (\u51cf\u5c11\u8d44\u6e90\u6d88\u8017\uff0c\u8fd0\u884cSpark\uff0cStorm) -HDFS -NameNode -DataNode","title":"\u6982\u8ff0"},{"location":"LEK/hadoop/#mapreduce","text":"\u6d77\u91cf\u6570\u636e\uff08TB\uff09 -> MapReduce -> \u76ee\u6807\u6570\u636e \u56db\u4e2a\u9636\u6bb5 -Split -Map\uff08\u7f16\u7801\uff09Combine -Shuffle -partition -> Reduce(\u7f16\u7801) -> \u8f93\u51fa\u6587\u4ef6 \u4e09\u8005\u76f8\u7b49 HDSF\u9002\u5408\u5b58\u653e\u5927\u6587\u4ef6 \u5c0f\u6587\u4ef6\u53ef\u4ee5\u538b\u7f29\u5b58\u50a8 \u4e00\u822c\u60c5\u51b5 \u4e00\u4e2a\u8282\u70b910-100\u4e2a\u4efb\u52a1 mapred.reduce.tasks","title":"MapReduce\u8fc7\u7a0b"},{"location":"LEK/hadoop/#hadoop","text":"","title":"Hadoop\u5206\u5e03\u5f0f\u7f13\u5b58"},{"location":"LEK/zookeeper/","text":"Zookeeper\u5355\u673a\u6a21\u5f0f\u5b89\u88c5 1\u3001\u4e0b\u8f7d\u89e3\u538b https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.5.5/ $ wget https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.5.5/apache-zookeeper-3.5.5-bin.tar.gz $ tar -zxvf apache-zookeeper-3.5.5-bin.tar.gz 2\u3001\u4fee\u6539\u914d\u7f6e $ cd apache-zookeeper-3.5.5-bin $ cp conf/zoo_sample.cfg conf/zoo.cfg $ cat conf/zoo.cfg | grep -v \"^#\" tickTime = 2000 initLimit = 10 syncLimit = 5 dataDir = apache-zookeeper-3.5.5/data clientPort = 2181 3\u3001\u914d\u7f6e\u73af\u5883\u53d8\u91cf $ vim ~/.bash_profile export ZOO_HOME = apache-zookeeper-3.5.5-bin export PATH = $PATH : $ZOO_HOME /bin $ source ~/.bash_profile 4\u3001\u542f\u52a8zookeeper\u670d\u52a1 $ zkServer.sh start # \u67e5\u770b\u72b6\u6001/\u505c\u6b62 $ zkServer.sh status/stop 5\u3001zookeeper\u5ba2\u6237\u7aef $ zkCli.sh \u57fa\u672c\u4f7f\u7528 ls / # \u67e5\u770b create /key value # \u521b\u5efa get /key # \u83b7\u53d6 set /key value # \u66f4\u65b0 delete /key # \u5220\u9664 Zookeeper\u96c6\u7fa4\u6a21\u5f0f\u5b89\u88c5 1\u3001\u4e0b\u8f7d\u89e3\u538b\uff08\u540c\u5355\u673a\u6a21\u5f0f\uff09 2\u3001\u914d\u7f6e3\u4efd\u6587\u4ef6 \u53ea\u9700\u4fee\u6539dataDir\u548cclientPort\u4e0d\u540c\u5373\u53ef $ touch conf/zoo- { 1 ..3 } .cfg $ cat conf/zoo-1.cfg | grep -v \"^#\" tickTime = 2000 initLimit = 10 syncLimit = 5 dataDir = data-1 clientPort = 2181 server.1 = 127 .0.0.1:2888:3888 server.2 = 127 .0.0.1:2889:3889 server.3 = 127 .0.0.1:2890:3890 $ cat conf/zoo-2.cfg | grep -v \"^#\" tickTime = 2000 initLimit = 10 syncLimit = 5 dataDir = data-2 clientPort = 2182 server.1 = 127 .0.0.1:2888:3888 server.2 = 127 .0.0.1:2889:3889 server.3 = 127 .0.0.1:2890:3890 $ cat conf/zoo-3.cfg | grep -v \"^#\" tickTime = 2000 initLimit = 10 syncLimit = 5 dataDir = data-3 clientPort = 2183 server.1 = 127 .0.0.1:2888:3888 server.2 = 127 .0.0.1:2889:3889 server.3 = 127 .0.0.1:2890:3890 \u91cd\u8981\u53c2\u6570\u8bf4\u660e dataDir\uff1aZookeeper \u4fdd\u5b58\u6570\u636e\u7684\u76ee\u5f55 clientPort\uff1a\u5ba2\u6237\u7aef\u8fde\u63a5 Zookeeper \u670d\u52a1\u5668\u7684\u7aef\u53e3 server.A=B\uff1aC\uff1aD\uff1a\u5176\u4e2d -A \u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u8fd9\u4e2a\u662f\u7b2c\u51e0\u53f7\u670d\u52a1\u5668\uff1b -B \u662f\u8fd9\u4e2a\u670d\u52a1\u5668\u7684 ip \u5730\u5740\uff1b -C \u8fd9\u4e2a\u670d\u52a1\u5668\u4e0e\u96c6\u7fa4\u4e2d\u7684 Leader \u670d\u52a1\u5668\u4ea4\u6362\u4fe1\u606f\u7684\u7aef\u53e3\uff1b -D Leader\u9009\u4e3e\u65f6\u670d\u52a1\u5668\u76f8\u4e92\u901a\u4fe1\u7684\u7aef\u53e3 3\u3001\u6807\u8bc6Server ID myid\u548c\u670d\u52a1\u5668server.id\u8981\u5339\u914d $ mkdir data- { 1 ..3 } $ echo 1 > data-1/myid $ echo 2 > data-2/myid $ echo 3 > data-3/myid 4\u3001\u542f\u52a8\u670d\u52a1 zkServer . sh start conf / zoo - 1 . cfg zkServer . sh start conf / zoo - 2 . cfg zkServer . sh start conf / zoo - 3 . cfg 5\u3001\u5ba2\u6237\u7aef\u8fde\u63a5\u670d\u52a1\u7aef zkCli . sh - server 127 . 0 . 0 . 1 : 2181 , 127 . 0 . 0 . 1 : 2182 , 127 . 0 . 0 . 1 : 2183 \u62a5\u9519\uff1a Starting zookeeper ... FAILED TO START \u67e5\u770blog\u4e0b\u9762\u7684\u65e5\u5fd7 \u9519\u8bef : \u627e\u4e0d\u5230\u6216\u65e0\u6cd5\u52a0\u8f7d\u4e3b\u7c7b org . apache . zookeeper . server . quorum . QuorumPeerMain \u67e5\u770b\u4e0b\u8f7d\u5305\uff0c\u53d1\u73b0\u6709\u4e24\u4e2a\uff0c\u8981\u4e0b\u8f7d\u5927\u7684\u90a3\u4e2a https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.5.5/ apache - zookeeper - 3 . 5 . 5 - bin . tar . gz 2019 - 05 - 20 18 : 40 10 M # \u4e0b\u8f7d\u8fd9\u4e2a\u5305 apache - zookeeper - 3 . 5 . 5 . tar . gz 2019 - 05 - 20 18 : 40 3 . 1 M \u53c2\u8003 Zookeeper\u5165\u95e8\u770b\u8fd9\u7bc7\u5c31\u591f\u4e86 ZooKeeper\u5165\u95e8\u6559\u7a0b\uff08\u4e00\uff09","title":"Zookeeper\u5355\u673a\u6a21\u5f0f\u5b89\u88c5"},{"location":"LEK/zookeeper/#zookeeper","text":"1\u3001\u4e0b\u8f7d\u89e3\u538b https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.5.5/ $ wget https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.5.5/apache-zookeeper-3.5.5-bin.tar.gz $ tar -zxvf apache-zookeeper-3.5.5-bin.tar.gz 2\u3001\u4fee\u6539\u914d\u7f6e $ cd apache-zookeeper-3.5.5-bin $ cp conf/zoo_sample.cfg conf/zoo.cfg $ cat conf/zoo.cfg | grep -v \"^#\" tickTime = 2000 initLimit = 10 syncLimit = 5 dataDir = apache-zookeeper-3.5.5/data clientPort = 2181 3\u3001\u914d\u7f6e\u73af\u5883\u53d8\u91cf $ vim ~/.bash_profile export ZOO_HOME = apache-zookeeper-3.5.5-bin export PATH = $PATH : $ZOO_HOME /bin $ source ~/.bash_profile 4\u3001\u542f\u52a8zookeeper\u670d\u52a1 $ zkServer.sh start # \u67e5\u770b\u72b6\u6001/\u505c\u6b62 $ zkServer.sh status/stop 5\u3001zookeeper\u5ba2\u6237\u7aef $ zkCli.sh","title":"Zookeeper\u5355\u673a\u6a21\u5f0f\u5b89\u88c5"},{"location":"LEK/zookeeper/#_1","text":"ls / # \u67e5\u770b create /key value # \u521b\u5efa get /key # \u83b7\u53d6 set /key value # \u66f4\u65b0 delete /key # \u5220\u9664","title":"\u57fa\u672c\u4f7f\u7528"},{"location":"LEK/zookeeper/#zookeeper_1","text":"1\u3001\u4e0b\u8f7d\u89e3\u538b\uff08\u540c\u5355\u673a\u6a21\u5f0f\uff09 2\u3001\u914d\u7f6e3\u4efd\u6587\u4ef6 \u53ea\u9700\u4fee\u6539dataDir\u548cclientPort\u4e0d\u540c\u5373\u53ef $ touch conf/zoo- { 1 ..3 } .cfg $ cat conf/zoo-1.cfg | grep -v \"^#\" tickTime = 2000 initLimit = 10 syncLimit = 5 dataDir = data-1 clientPort = 2181 server.1 = 127 .0.0.1:2888:3888 server.2 = 127 .0.0.1:2889:3889 server.3 = 127 .0.0.1:2890:3890 $ cat conf/zoo-2.cfg | grep -v \"^#\" tickTime = 2000 initLimit = 10 syncLimit = 5 dataDir = data-2 clientPort = 2182 server.1 = 127 .0.0.1:2888:3888 server.2 = 127 .0.0.1:2889:3889 server.3 = 127 .0.0.1:2890:3890 $ cat conf/zoo-3.cfg | grep -v \"^#\" tickTime = 2000 initLimit = 10 syncLimit = 5 dataDir = data-3 clientPort = 2183 server.1 = 127 .0.0.1:2888:3888 server.2 = 127 .0.0.1:2889:3889 server.3 = 127 .0.0.1:2890:3890 \u91cd\u8981\u53c2\u6570\u8bf4\u660e dataDir\uff1aZookeeper \u4fdd\u5b58\u6570\u636e\u7684\u76ee\u5f55 clientPort\uff1a\u5ba2\u6237\u7aef\u8fde\u63a5 Zookeeper \u670d\u52a1\u5668\u7684\u7aef\u53e3 server.A=B\uff1aC\uff1aD\uff1a\u5176\u4e2d -A \u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u8fd9\u4e2a\u662f\u7b2c\u51e0\u53f7\u670d\u52a1\u5668\uff1b -B \u662f\u8fd9\u4e2a\u670d\u52a1\u5668\u7684 ip \u5730\u5740\uff1b -C \u8fd9\u4e2a\u670d\u52a1\u5668\u4e0e\u96c6\u7fa4\u4e2d\u7684 Leader \u670d\u52a1\u5668\u4ea4\u6362\u4fe1\u606f\u7684\u7aef\u53e3\uff1b -D Leader\u9009\u4e3e\u65f6\u670d\u52a1\u5668\u76f8\u4e92\u901a\u4fe1\u7684\u7aef\u53e3 3\u3001\u6807\u8bc6Server ID myid\u548c\u670d\u52a1\u5668server.id\u8981\u5339\u914d $ mkdir data- { 1 ..3 } $ echo 1 > data-1/myid $ echo 2 > data-2/myid $ echo 3 > data-3/myid 4\u3001\u542f\u52a8\u670d\u52a1 zkServer . sh start conf / zoo - 1 . cfg zkServer . sh start conf / zoo - 2 . cfg zkServer . sh start conf / zoo - 3 . cfg 5\u3001\u5ba2\u6237\u7aef\u8fde\u63a5\u670d\u52a1\u7aef zkCli . sh - server 127 . 0 . 0 . 1 : 2181 , 127 . 0 . 0 . 1 : 2182 , 127 . 0 . 0 . 1 : 2183","title":"Zookeeper\u96c6\u7fa4\u6a21\u5f0f\u5b89\u88c5"},{"location":"LEK/zookeeper/#_2","text":"Starting zookeeper ... FAILED TO START \u67e5\u770blog\u4e0b\u9762\u7684\u65e5\u5fd7 \u9519\u8bef : \u627e\u4e0d\u5230\u6216\u65e0\u6cd5\u52a0\u8f7d\u4e3b\u7c7b org . apache . zookeeper . server . quorum . QuorumPeerMain \u67e5\u770b\u4e0b\u8f7d\u5305\uff0c\u53d1\u73b0\u6709\u4e24\u4e2a\uff0c\u8981\u4e0b\u8f7d\u5927\u7684\u90a3\u4e2a https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.5.5/ apache - zookeeper - 3 . 5 . 5 - bin . tar . gz 2019 - 05 - 20 18 : 40 10 M # \u4e0b\u8f7d\u8fd9\u4e2a\u5305 apache - zookeeper - 3 . 5 . 5 . tar . gz 2019 - 05 - 20 18 : 40 3 . 1 M \u53c2\u8003 Zookeeper\u5165\u95e8\u770b\u8fd9\u7bc7\u5c31\u591f\u4e86 ZooKeeper\u5165\u95e8\u6559\u7a0b\uff08\u4e00\uff09","title":"\u62a5\u9519\uff1a"},{"location":"Linux/","text":"Linux LAMP Vim\u57fa\u672c\u64cd\u4f5c linux Shell ftp nginx Vim\u63d2\u4ef6 \u6307\u4ee4","title":"Linux"},{"location":"Linux/#linux","text":"LAMP Vim\u57fa\u672c\u64cd\u4f5c linux Shell ftp nginx Vim\u63d2\u4ef6 \u6307\u4ee4","title":"Linux"},{"location":"Linux/LAMP/","text":"LAMP & LNMP LAMP = Linux + Apache + MySQL + PHP LNMP = Linux + Nginx + MySQL + PHP \u6d41\u884c\uff0c\u514d\u8d39\uff0c\u5f00\u6e90\uff0c\u8f7b\u91cf Linux VS Windows: \u5b8c\u5168\u514d\u8d39\uff0c\u7a33\u5b9a\u9ad8\u6548 MySQL: \u5173\u7cfb\u578b\u6570\u636e\u5e93 Apache\uff1aWeb\u670d\u52a1\u5668\u8f6f\u4ef6 \u76d1\u542c\u7aef\u53e3\uff0c\u63a5\u6536\u8bf7\u6c42\uff0c\u89e3\u6790HTTP\u534f\u8bae\uff0c\u8f6c\u53d1\u7ed9PHP Nginx \u670d\u52a1\u5668\u8f6f\u4ef6 Apache & Nginx\uff1a\u524d\u666f\u66f4\u597d\uff0c\u914d\u7f6e\u8f7b\u677e\uff0c\u6027\u80fd\u66f4\u4f18 Apache\uff1a select\u8f6e\u8be2\u673a\u5236 Nginx\uff1a epoll\u4e8b\u4ef6\u76d1\u542c\u673a\u5236 \u7f16\u8bd1\u5b89\u88c5 ./configure # \u7f16\u8bd1\u524d\u51c6\u5907 make # \u7f16\u8bd1 make install # \u5b89\u88c5 \u5b89\u88c5\u4f9d\u8d56\u8f6f\u4ef6 yum install -y vim wget gcc gcc++ libxml2-devel \u7f16\u8bd1\u5b89\u88c5php 1\u3001\u4e0b\u8f7d https://www.php.net/downloads.php wget https : // www . php . net / distributions / php - 7 . 3 . 11 . tar . gz tar - zxvf php - 7 . 3 . 11 . tar . gz cd php - 7 . 3 . 11 2\u3001\u7f16\u8bd1\u5b89\u88c5 \u542f\u7528\u652f\u6301FPM FastCGI https://www.php.net/manual/zh/install.fpm.install.php ./configure --prefix = /usr/local/php7 --enable-fpm make && make install CGI \u516c\u5171\u7f51\u5173\u63a5\u53e3\uff0c\u4e00\u4e2a\u534f\u8bae fork\u5b50\u8fdb\u7a0b\uff0c\u5904\u7406\u5b8c\u91ca\u653e FastCGI \u8bed\u8a00\u65e0\u5173\uff0c\u89e3\u91ca\u5668\u5b50\u8fdb\u7a0b\u5e38\u9a7b\u5728\u5185\u5b58 FPM PHP\u6269\u5c55 $ php -r \"phpinfo();\" MySQL 1\u3001\u4e0b\u8f7d https://dev.mysql.com/downloads/mysql/ source code -> Generic Linux (Architecture Independent), Compressed TAR Archive wget https : // dev . mysql . com / get / Downloads / MySQL - 8 . 0 / mysql - 8 . 0 . 18 . tar . gz 2\u3001\u5b89\u88c5\u4f9d\u8d56 yum install -y cmake gcc-c++ ncurses-devel perl-Data-Dumper boost boost-doc boost-devel 3\u3001\u5b89\u88c5 cmake \\ - DCMAKE_INSTALL_PREFIX =/ usr / local / mysql \\ - DMYSQL_DATADIR =/ data / mysql / data \\ - DSYSCONFDIR =/ etc \\ - DMYSQL_USER = mysql \\ - DWITH_MYISAM_STORAGE_ENGINE = 1 \\ - DWITH_INNOBASE_STORAGE_ENGINE = 1 \\ - DWITH_ARCHIVE_STORAGE_ENGINE = 1 \\ - DWITH_MEMORY_STORAGE_ENGINE = 1 \\ - DWITH_READLINE = 1 \\ - DMYSQL_UNIX_ADDR =/ var / run / mysql / mysql . sock \\ - DMYSQL_TCP_PORT = 3306 \\ - DENABLED_LOCAL_INFILE = 1 \\ - DENABLE_DOWNLOADS = 1 \\ - DWITH_PARTITION_STORAGE_ENGINE = 1 \\ - DEXTRA_CHARSETS = all \\ - DDEFAULT_CHARSET = utf8 \\ - DDEFAULT_COLLATION = utf8_general_ci \\ - DWITH_DEBUG = 0 \\ - DMYSQL_MAINTAINER_MODE = 0 \\ - DWITH_SSL : STRING = bundled \\ - DWITH_ZLIB : STRING = bundled make && make install 4\u3001\u542f\u52a8\u4f7f\u7528 mysqld mysql Apache 1\u3001\u4e0b\u8f7d http://httpd.apache.org/ \u4f9d\u8d56\uff1aapr apr-util pcre wget http : // mirrors . tuna . tsinghua . edu . cn / apache // httpd / httpd - 2 . 4 . 41 . tar . gz tar - zxvf httpd - 2 . 4 . 41 . tar . gz cd httpd - 2 . 4 . 41 2\u3001\u7f16\u8bd1\u5b89\u88c5\uff08\u914d\u7f6e\u5fc5\u8981\u7684\u53c2\u6570\u7565\uff09 . / configure make && make install 3\u3001\u542f\u52a8 apachetcl - k start \u5f00\u653e80\u7aef\u53e3sudo firewall - cmd --zone=public --add-port80/tcp --permanent systemctl restart firewalld . service Nginx 1\u3001\u4e0b\u8f7d http://nginx.org/en/download.html # \u4e0b\u8f7d wget http : // nginx . org / download / nginx - 1 . 16 . 1 . tar . gz tar - zxvf nginx - 1 . 16 . 1 . tar . gz # \u5b89\u88c5 pcre url\u91cd\u5199\u529f\u80fd . / configure --prefix=/usr/local/nginx --with-pcre=/pcre make && make install # \u542f\u52a8 . / nginx \u5de5\u4f5c\u65b9\u5f0f \u8bf7\u6c42 <-> Nginx <-> PHP - FPM \u914d\u7f6e location ~ \\. php { fastcgi_pass 127 . 0 . 0 . 1 : 9000 ; fastcgi_index index . php ; fastcgi_split_path_info ^ ( . + ?\\. php )( / . * ) $ ; fastcgi_param PATH_INFO $fa stcgi_path_info ; fastcgi_param SCRIPT_FILENAME $d ocument_root $fa stcgi_script_name ; include fastcgi_params ; } \u914d\u7f6ephp-fpm php-fpm.conf pm = dynamic \u8bbe\u7f6e\u52a8\u6001\u89e3\u6790 pm . max_children = 5 \u6700\u5927\u53ef\u4ee5\u542f\u52a8\u591a\u5c11\u8fdb\u7a0b pm . start_servers = 2 \u9ed8\u8ba4\u542f\u52a8\u51e0\u4e2a\u8fdb\u7a0b \u914d\u7f6eNginx nginx.conf worker_processes 1 ; ( \u542f\u52a8\u591a\u5c11\u5b50\u8fdb\u7a0b ) \u91cd\u542f nginx - s reload \u67e5\u770b\u8fdb\u7a0b ps aux | grep nginx","title":"LAMP"},{"location":"Linux/LAMP/#lamp-lnmp","text":"LAMP = Linux + Apache + MySQL + PHP LNMP = Linux + Nginx + MySQL + PHP \u6d41\u884c\uff0c\u514d\u8d39\uff0c\u5f00\u6e90\uff0c\u8f7b\u91cf Linux VS Windows: \u5b8c\u5168\u514d\u8d39\uff0c\u7a33\u5b9a\u9ad8\u6548 MySQL: \u5173\u7cfb\u578b\u6570\u636e\u5e93 Apache\uff1aWeb\u670d\u52a1\u5668\u8f6f\u4ef6 \u76d1\u542c\u7aef\u53e3\uff0c\u63a5\u6536\u8bf7\u6c42\uff0c\u89e3\u6790HTTP\u534f\u8bae\uff0c\u8f6c\u53d1\u7ed9PHP Nginx \u670d\u52a1\u5668\u8f6f\u4ef6 Apache & Nginx\uff1a\u524d\u666f\u66f4\u597d\uff0c\u914d\u7f6e\u8f7b\u677e\uff0c\u6027\u80fd\u66f4\u4f18 Apache\uff1a select\u8f6e\u8be2\u673a\u5236 Nginx\uff1a epoll\u4e8b\u4ef6\u76d1\u542c\u673a\u5236 \u7f16\u8bd1\u5b89\u88c5 ./configure # \u7f16\u8bd1\u524d\u51c6\u5907 make # \u7f16\u8bd1 make install # \u5b89\u88c5 \u5b89\u88c5\u4f9d\u8d56\u8f6f\u4ef6 yum install -y vim wget gcc gcc++ libxml2-devel","title":"LAMP &amp; LNMP"},{"location":"Linux/LAMP/#php","text":"1\u3001\u4e0b\u8f7d https://www.php.net/downloads.php wget https : // www . php . net / distributions / php - 7 . 3 . 11 . tar . gz tar - zxvf php - 7 . 3 . 11 . tar . gz cd php - 7 . 3 . 11 2\u3001\u7f16\u8bd1\u5b89\u88c5 \u542f\u7528\u652f\u6301FPM FastCGI https://www.php.net/manual/zh/install.fpm.install.php ./configure --prefix = /usr/local/php7 --enable-fpm make && make install CGI \u516c\u5171\u7f51\u5173\u63a5\u53e3\uff0c\u4e00\u4e2a\u534f\u8bae fork\u5b50\u8fdb\u7a0b\uff0c\u5904\u7406\u5b8c\u91ca\u653e FastCGI \u8bed\u8a00\u65e0\u5173\uff0c\u89e3\u91ca\u5668\u5b50\u8fdb\u7a0b\u5e38\u9a7b\u5728\u5185\u5b58 FPM PHP\u6269\u5c55 $ php -r \"phpinfo();\"","title":"\u7f16\u8bd1\u5b89\u88c5php"},{"location":"Linux/LAMP/#mysql","text":"1\u3001\u4e0b\u8f7d https://dev.mysql.com/downloads/mysql/ source code -> Generic Linux (Architecture Independent), Compressed TAR Archive wget https : // dev . mysql . com / get / Downloads / MySQL - 8 . 0 / mysql - 8 . 0 . 18 . tar . gz 2\u3001\u5b89\u88c5\u4f9d\u8d56 yum install -y cmake gcc-c++ ncurses-devel perl-Data-Dumper boost boost-doc boost-devel 3\u3001\u5b89\u88c5 cmake \\ - DCMAKE_INSTALL_PREFIX =/ usr / local / mysql \\ - DMYSQL_DATADIR =/ data / mysql / data \\ - DSYSCONFDIR =/ etc \\ - DMYSQL_USER = mysql \\ - DWITH_MYISAM_STORAGE_ENGINE = 1 \\ - DWITH_INNOBASE_STORAGE_ENGINE = 1 \\ - DWITH_ARCHIVE_STORAGE_ENGINE = 1 \\ - DWITH_MEMORY_STORAGE_ENGINE = 1 \\ - DWITH_READLINE = 1 \\ - DMYSQL_UNIX_ADDR =/ var / run / mysql / mysql . sock \\ - DMYSQL_TCP_PORT = 3306 \\ - DENABLED_LOCAL_INFILE = 1 \\ - DENABLE_DOWNLOADS = 1 \\ - DWITH_PARTITION_STORAGE_ENGINE = 1 \\ - DEXTRA_CHARSETS = all \\ - DDEFAULT_CHARSET = utf8 \\ - DDEFAULT_COLLATION = utf8_general_ci \\ - DWITH_DEBUG = 0 \\ - DMYSQL_MAINTAINER_MODE = 0 \\ - DWITH_SSL : STRING = bundled \\ - DWITH_ZLIB : STRING = bundled make && make install 4\u3001\u542f\u52a8\u4f7f\u7528 mysqld mysql","title":"MySQL"},{"location":"Linux/LAMP/#apache","text":"1\u3001\u4e0b\u8f7d http://httpd.apache.org/ \u4f9d\u8d56\uff1aapr apr-util pcre wget http : // mirrors . tuna . tsinghua . edu . cn / apache // httpd / httpd - 2 . 4 . 41 . tar . gz tar - zxvf httpd - 2 . 4 . 41 . tar . gz cd httpd - 2 . 4 . 41 2\u3001\u7f16\u8bd1\u5b89\u88c5\uff08\u914d\u7f6e\u5fc5\u8981\u7684\u53c2\u6570\u7565\uff09 . / configure make && make install 3\u3001\u542f\u52a8 apachetcl - k start \u5f00\u653e80\u7aef\u53e3sudo firewall - cmd --zone=public --add-port80/tcp --permanent systemctl restart firewalld . service","title":"Apache"},{"location":"Linux/LAMP/#nginx","text":"1\u3001\u4e0b\u8f7d http://nginx.org/en/download.html # \u4e0b\u8f7d wget http : // nginx . org / download / nginx - 1 . 16 . 1 . tar . gz tar - zxvf nginx - 1 . 16 . 1 . tar . gz # \u5b89\u88c5 pcre url\u91cd\u5199\u529f\u80fd . / configure --prefix=/usr/local/nginx --with-pcre=/pcre make && make install # \u542f\u52a8 . / nginx \u5de5\u4f5c\u65b9\u5f0f \u8bf7\u6c42 <-> Nginx <-> PHP - FPM \u914d\u7f6e location ~ \\. php { fastcgi_pass 127 . 0 . 0 . 1 : 9000 ; fastcgi_index index . php ; fastcgi_split_path_info ^ ( . + ?\\. php )( / . * ) $ ; fastcgi_param PATH_INFO $fa stcgi_path_info ; fastcgi_param SCRIPT_FILENAME $d ocument_root $fa stcgi_script_name ; include fastcgi_params ; }","title":"Nginx"},{"location":"Linux/LAMP/#php-fpm","text":"php-fpm.conf pm = dynamic \u8bbe\u7f6e\u52a8\u6001\u89e3\u6790 pm . max_children = 5 \u6700\u5927\u53ef\u4ee5\u542f\u52a8\u591a\u5c11\u8fdb\u7a0b pm . start_servers = 2 \u9ed8\u8ba4\u542f\u52a8\u51e0\u4e2a\u8fdb\u7a0b","title":"\u914d\u7f6ephp-fpm"},{"location":"Linux/LAMP/#nginx_1","text":"nginx.conf worker_processes 1 ; ( \u542f\u52a8\u591a\u5c11\u5b50\u8fdb\u7a0b ) \u91cd\u542f nginx - s reload \u67e5\u770b\u8fdb\u7a0b ps aux | grep nginx","title":"\u914d\u7f6eNginx"},{"location":"Linux/Nginx\u901a\u8fc7OpenSSL\u914d\u7f6eHttps/","text":"Nginx\u901a\u8fc7OpenSSL\u914d\u7f6eHttps\u53ca\u4e8c\u7ea7\u865a\u62df\u76ee\u5f55 1\u3001\u521b\u5efa\u79c1\u94a5\u79d8\u94a5\u548c\u8bc1\u4e66 mkdir -p /usr/local/nginx/conf/ssl/ cd /usr/local/nginx/conf/ssl/ # \u521b\u5efa\u670d\u52a1\u5668\u79c1\u94a5 openssl genrsa -des3 -out server.key 1024 # \u521b\u5efa\u7b7e\u540d\u8bf7\u6c42\u7684\u8bc1\u4e66\uff08CSR\uff09 openssl req -new -key server.key -out server.csr # \u6807\u8bb0\u8bc1\u4e66\u4f7f\u7528\u4e0a\u8ff0\u79c1\u94a5\u548cCSR openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt 2\u3001\u62a5\u9519\u5904\u7406\uff1a\u5bc6\u7801\u9519\u8bef SSL_CTX_use_PrivateKey_file ( \"/etc/nginx/key/server.key\" ) failed ( SSL : error : 0906406 D : PEM routines : PEM_def_callback : problems getting password error : 0906 A068 : PEM routines : PEM_do_header : bad password read error : 140 B0009 : SSL routines : SSL_CTX_use_PrivateKey_file : PEM lib ) # \u8f93\u5165\u4e00\u6b21\u79c1\u94a5\u7684\u5bc6\u7801 openssl rsa - in server . key - out unserver . key cp unserver . key server . key # \u91cd\u542f nginx 3\u3001\u914d\u7f6eNginx server { listen 443 ssl ; server_name localhost ; ssl on ; ssl_certificate /usr/local/nginx/conf/ssl/server.crt ; ssl_certificate_key /usr/local/nginx/conf/ssl/server.key ; ssl_session_timeout 5m ; ssl_ciphers HIGH : ! aNULL :! MD5 ; ssl_prefer_server_ciphers on ; # \u8fd9\u662f\u9759\u6001\u4e3b\u9875 location / { root /www ; index index.html index.htm ; } } \u4f1a\u51fa\u73b0\u9690\u79c1\u8bbe\u7f6e\u9519\u8bef\uff0c\u7ee7\u7eed\u8bbf\u95ee\u5c31\u53ef\u4ee5 \u53c2\u8003\uff1a nginx\u914d\u7f6ehttps 4\u3001Nginx\u914d\u7f6e\u4e8c\u7ea7\u76ee\u5f55 server { listen 80 ; server_name localhost ; # \u8fd9\u662f\u9759\u6001\u4e3b\u9875 location / { root / www ; index index . html index . htm ; } # \u8fd9\u662f\u4e8c\u7ea7\u865a\u62df\u76ee\u5f55 # \u6ce8\u610f\u659c\u6746 / : # \u8bbf\u95ee https : // localhost / data / # \u4ee3\u7406 http : // 127 . 0 . 0 . 1 : 5003 / location / data / { proxy_pass http : // 127 . 0 . 0 . 1 : 5003 / ; proxy_set_header Host $ host ; proxy_set_header X - Forwarded - For $ proxy_add_x_forwarded_for ; } } 5\u3001\u62a5\u9519\uff1anginx:[emerg]unknown directive \"ssl\" # \u5230\u89e3\u538b\u7684nginx\u76ee\u5f55\u4e0b yum -y install openssl openssl-devel ./configure --with-http_ssl_module # \u5207\u8bb0\u4e0d\u80fdmake install \u4f1a\u8986\u76d6 make # \u5907\u4efd cp /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.bak # \u62f7\u8d1d\u65b0\u7684\u6587\u4ef6 cp objs/nginx /usr/local/nginx/sbin/nginx # \u68c0\u67e5\u91cd\u542f nginx -t nginx -s reload \u53c2\u8003\uff1a nginx:[emerg]unknown directive \"ssl\" \u53c2\u8003\uff1a Nginx \u53cd\u5411\u4ee3\u7406 \u865a\u62df\u4e8c\u7ea7\u76ee\u5f55 6\u3001js\u540e\u52a0?v=\u7248\u672c\u53f7 \u53ef\u4ee5\u8d77\u5230\u5237\u65b0\u7f13\u5b58\u7684\u4f5c\u7528 \u4f8b\u5982\uff1a https : // localhost / static / main . js ? v = 20191227 \u6bcf\u6b21\u66f4\u65b0\u7684\u65f6\u5019\u4fee\u6539\u7248\u672c\u53f7\uff0c\u901a\u77e5\u6d4f\u89c8\u5668\u83b7\u53d6\u65b0\u7684\u6587\u4ef6","title":"Nginx\u901a\u8fc7OpenSSL\u914d\u7f6eHttps"},{"location":"Linux/Shell/","text":"Shell \u8fd0\u884c 1\u3001\u4f5c\u4e3a\u53ef\u6267\u884c\u7a0b\u5e8f #!/bin/bash # \u6307\u5b9a\u89e3\u91ca\u6b64\u811a\u672c\u6587\u4ef6\u7684\u7a0b\u5e8f $ chmod a+x test.sh # \u4f7f\u811a\u672c\u5177\u6709\u6267\u884c\u6743\u9650 $ ./text.sh # \u6267\u884c\u811a\u672c ./test.sh # \u5728\u5f53\u524d\u76ee\u5f55\u627e test.sh # \u53bb PATH \u91cc\u5bfb\u627e 2\u3001\u4f5c\u4e3a\u89e3\u91ca\u5668\u53c2\u6570 $ bash test.sh \u53d8\u91cf key = \"value\" # \u5b9a\u4e49\u53d8\u91cf\uff0c \u53d8\u91cf\u540d\u548c\u7b49\u53f7\u4e4b\u95f4\u4e0d\u80fd\u6709\u7a7a\u683c readonly key # \u53ea\u8bfb\u53d8\u91cf, \u518d\u6b21\u8d4b\u503c\u4f1a\u62a5\u9519 echo $key # \u4f7f\u7528\u53d8\u91cf\uff0c \u4f7f\u7528\u53d8\u91cf\u8981\u5728\u53d8\u91cf\u540d\u524d\u9762\u52a0\u7f8e\u5143\u7b26\u53f7 echo ${ key } # \u8bc6\u522b\u53d8\u91cf\u7684\u8fb9\u754c unset key # \u5220\u9664\u53d8\u91cf \u53d8\u91cf\u7c7b\u578b 1) \u5c40\u90e8\u53d8\u91cf 2) \u73af\u5883\u53d8\u91cf 3) shell\u53d8\u91cf \u5b57\u7b26\u4e32 \u5b57\u7b26\u4e32\u53ef\u4ee5\u7528\u5355\u5f15\u53f7\uff0c\u4e5f\u53ef\u4ee5\u7528\u53cc\u5f15\u53f7\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u7528\u5f15\u53f7 \u5355\u5f15\u53f7\uff1a\u539f\u6837\u5b57\u7b26\u4e32\uff0c\u4e0d\u53ef\u4ee5\u6709\u53d8\u91cf\u548c\u8f6c\u4e49\u5b57\u7b26 \u53cc\u5f15\u53f7\uff1a\u53ef\u4ee5\u6709\u53d8\u91cf\u548c\u8f6c\u4e49\u5b57\u7b26 \u5b57\u7b26\u4e32\u62fc\u63a5 name = \"Tom\" echo \"hi \" $name \"!\" # hi Tom! echo \"hi ${ name } !\" # hi Tom! echo 'hi ${name}!' # hi ${name}! echo ${# name } # \u5b57\u7b26\u957f\u5ea6 3 echo ${ name : 1 : 4 } # \u5b57\u7b26\u4e32\u622a\u53d6 om \u6570\u7ec4 Bash Shell\u53ea\u652f\u6301\u4e00\u7ef4\u6570\u7ec4, \u4e0b\u6807\u75310\u5f00\u59cb # \u5b9a\u4e49\u6570\u7ec4\uff0c \"\u7a7a\u683c\"\u5206\u5272 names =( \"Tom\" \"Jack\" ) ages =( 23 24 ) # \u6570\u7ec4\u5143\u7d20\u8d4b\u503c names [ 2 ]= \"Jimi\" # \u83b7\u53d6\u6570\u7ec4\u5143\u7d20 echo ${ names [2] } # Jimi # \u83b7\u53d6\u6570\u7ec4\u6240\u6709\u5143\u7d20 echo ${ ages [@] } # 23 24 echo ${ ages [*] } # 23 24 # \u83b7\u53d6\u6570\u7ec4\u7684\u957f\u5ea6 echo ${# names [@] } # 3 \u6ce8\u91ca # \u5355\u884c\u6ce8\u91ca : <<EOF \u591a\u884c\u6ce8\u91ca \u518d\u5199\u4e00\u884c EOF \u4f20\u9012\u53c2\u6570 # $ ./1.sh 1 2 3 4 echo $# # \u53c2\u6570\u4e2a\u6570 4 echo $* # \u663e\u793a\u6240\u6709\u53c2\u6570 1 2 3 4 echo $@ # \u663e\u793a\u6240\u6709\u53c2\u6570 1 2 3 4 echo $0 # \u6587\u4ef6\u540d ./1.sh echo $1 # \u7b2c\u4e00\u4e2a\u53c2\u6570 1 echo $2 # \u7b2c\u4e8c\u4e2a\u53c2\u6570 2 \u57fa\u672c\u8fd0\u7b97\u7b26 1\u3001\u7b97\u672f\u8fd0\u7b97\u7b26 \u539f\u751fbash\u4e0d\u652f\u6301\u6570\u5b66\u8fd0\u7b97\uff0c\u4f7f\u7528expr + \u52a0\u6cd5 ` expr $a + $b ` - \u51cf\u6cd5 ` expr $a - $b ` * \u4e58\u6cd5 ` expr $a \\* $b ` / \u9664\u6cd5 ` expr $b / $a ` % \u53d6\u4f59 ` expr $b % $a ` = \u8d4b\u503c a = $b == \u76f8\u7b49 [ $a == $b ] \u6ce8\u610f\u7a7a\u683c ! = \u4e0d\u76f8\u7b49 [ $a ! = $b ] # \u6ce8\u610f\u662f\u53cd\u5f15\u53f7`, \u9700\u8981\u7a7a\u683c # MAC\u8868\u8fbe\u5f0f $(expr 1 + 1) 2\u3001\u5173\u7cfb\u8fd0\u7b97\u7b26 \u5173\u7cfb\u8fd0\u7b97\u7b26\u53ea\u652f\u6301\u6570\u5b57 -eq \u76f8\u7b49equal [ $a -eq $b ] -ne \u4e0d\u76f8\u7b49not equal [ $a -ne $b ] -gt \u5927\u4e8egreater than [ $a -gt $b ] -lt \u5c0f\u4e8elower than [ $a -lt $b ] -ge \u5927\u4e8e\u7b49\u4e8egreater & equal [ $a -ge $b ] -le \u5c0f\u4e8e\u7b49\u4e8elower & equal [ $a -le $b ] 3\u3001\u5e03\u5c14\u8fd0\u7b97\u7b26 ! \u975e [ ! false ] -o \u6216 [ $a -lt 20 -o $b -gt 100 ] -a \u4e0e [ $a -lt 20 -a $b -gt 100 ] 4\u3001\u903b\u8f91\u8fd0\u7b97\u7b26 && AND [[ $a -lt 100 && $b -gt 100 ]] || OR [[ $a -lt 100 || $b -gt 100 ]] # [[ \u9632\u6b62\u811a\u672c\u4e2d\u7684\u903b\u8f91\u9519\u8bef 5\u3001\u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26 = \u76f8\u7b49 [ $a = $b ] ! = \u4e0d\u76f8\u7b49 [ $a ! = $b ] -z \u957f\u5ea6\u4e3a0 [ -z $a ] -n \u957f\u5ea6\u4e3a0 [ -n \" $a \" ] $ \u4e0d\u4e3a\u7a7a [ $a ] 6\u3001\u6587\u4ef6\u6d4b\u8bd5\u8fd0\u7b97\u7b26 -b file \u8bbe\u5907\u6587\u4ef6 [ -b $file ] -c file \u5b57\u7b26\u8bbe\u5907\u6587\u4ef6 [ -c $file ] -d file \u76ee\u5f55 [ -d $file ] -f file \u666e\u901a\u6587\u4ef6 [ -f $file ] -r file \u53ef\u8bfb [ -r $file ] -w file \u53ef\u5199 [ -w $file ] -x file \u53ef\u6267\u884c [ -x $file ] -s file \u6587\u4ef6\u4e0d\u4e3a\u7a7a\uff08\u6587\u4ef6\u5927\u5c0f\u5927\u4e8e0\uff09 [ -s $file ] -e file \u5b58\u5728 [ -e $file ] \u7efc\u5408\u793a\u4f8b #!/bin/bash # \u7b97\u672f\u8ba1\u7b97 echo ` expr 1 + 1 ` # \u6ce8\u610f\u7a7a\u683c 2 # \u6570\u5b57\u6bd4\u8f83 a = 1 ; b = 2 if [ $a == $b ] then echo \"a==b\" else echo \"a!=b\" fi # \u5173\u7cfb\u6bd4\u8f83 if [ $a -eq $b ] then echo \"a==b\" else echo \"a!=b\" fi # \u5e03\u5c14\u8fd0\u7b97 if [ $a -eq $b -o $a -gt $b ] then echo \"a==b or a>b\" else echo \"a!=b and a<b\" fi # \u903b\u8f91\u8fd0\u7b97 if [[ $a -eq $b || $a -gt $b ]] then echo \"a==b or a>b\" else echo \"a!=b and a<b\" fi # \u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26 if [ $a ] then echo \"a\u4e0d\u4e3a\u7a7a\" else echo \"a\u4e3a\u7a7a\" fi # \u6587\u4ef6 if [ -f \"1.sh\" ] then echo \"\u662f\u6587\u4ef6\" else echo \"\u4e0d\u662f\u6587\u4ef6\" fi echo echo \"hello world\" # \u666e\u901a\u5b57\u7b26\u4e32, \u81ea\u52a8\u6dfb\u52a0\u6362\u884c\u7b26 echo hello world # \u53cc\u5f15\u53f7\u53ef\u4ee5\u7701\u7565 echo \"\\\"hello world\\\"\" # \u663e\u793a\u8f6c\u4e49\u5b57\u7b26 \"hello world\" echo -e \"hello\\n world\" # -e\u5f00\u542f\u8f6c\u4e49 \\n\u6362\u884c echo -e \"hello world \\c\" # -e\u5f00\u542f\u8f6c\u4e49 \\c\u4e0d\u6362\u884c echo ` date ` # \u663e\u793a\u547d\u4ee4\u7ed3\u679c Thu Jul 4 12:44:11 CST 2019 name = \"Tom\" echo ${ name } # \u8f93\u51fa\u53d8\u91cf echo \"hi\" > file.txt # \u7ed3\u679c\u91cd\u5b9a\u5411 \u793a\u4f8b\uff1a\u8bfb\u53d6\u8f93\u5165\u5e76\u8f93\u51fa #!/bin/bash read -p \"\u8bf7\u8f93\u51fa\u7528\u6237\u540d\uff1a\" content # -p\u63d0\u793a\u6587\u5b57 read -p \"\u8bf7\u8f93\u51fa\u5bc6\u7801\uff1a\" -s password # -s \u9690\u85cf\u8f93\u5165\u5185\u5bb9 echo -e \"\\n\u7528\u6237\u540d: ${ content } \\n\u5bc6\u7801: ${ password } \" : <<EOF $ ./1.sh \u8bf7\u8f93\u51fa\u7528\u6237\u540d\uff1aTom \u8bf7\u8f93\u51fa\u5bc6\u7801\uff1a \u7528\u6237\u540d: Tom \u5bc6\u7801: 123 EOF printf \u547d\u4ee4 \u793a\u4f8b printf \"%-10s |%10.4f\\n\" \"\u5c0f\u660e\" 2 .3 # \u4e0d\u4f1a\u81ea\u52a8\u6dfb\u52a0\u6362\u884c\u7b26 # -\u8868\u793a\u5de6\u5bf9\u9f50\uff0c\u6ca1\u6709\u5219\u8868\u793a\u53f3\u5bf9\u9f50 # 10\u4e2a\u5b57\u7b26\u5bbd\u7684\u5b57\u7b26\u5185 # \u4fdd\u75594\u4f4d\u5c0f\u6570 \u683c\u5f0f\u5316 d: Decimal \u5341\u8fdb\u5236\u6574\u6570 s: String \u5b57\u7b26\u4e32 c: Char \u5b57\u7b26 f: Float \u6d6e\u70b9 \u8f6c\u4e49\u5b57\u7b26 \\c \u4e0d\u663e\u793a\u6362\u884c\u5b57\u7b26 \\n \u6362\u884c \\r \u56de\u8f66\uff08Carriage return \uff09 \\t \u6c34\u5e73\u5236\u8868\u7b26 \\v \u5782\u76f4\u5236\u8868\u7b26 \\\\ \u4e00\u4e2a\u5b57\u9762\u4e0a\u7684\u53cd\u659c\u6760\u5b57\u7b26 test\u6d4b\u8bd5 # \u7b97\u6570\u8fd0\u7b97 echo $ [ 1 +1 ] # 2 # \u6bd4\u8f83 a = 1 b = 1 if test $a -eq $b then echo \"a==b\" else echo \"a!=b\" fi # a==b \u6d41\u7a0b\u63a7\u5236 if if condition1 then command1 elif condition2 then command2 else commandN fi for for var in item1 item2 ... itemN do command1 command2 ... commandN done while while condition do command done until until condition do command done case case \u503c in \u6a21\u5f0f1 ) # \u53f3\u5706\u62ec\u53f7\u5206\u652f command1 ;; # \u4e24\u4e2a\u5206\u53f7\u8868\u793abreak \u6a21\u5f0f2\uff09 command2 ;; * ) command3 ;; esac \u8df3\u51fa\u5faa\u73af break\u548ccontinue \u7efc\u5408\u793a\u4f8b read -p \"\u8f93\u5165start \u6216\u8005 stop: \" user_command case $user_command in \"start\" ) echo \"start...\" ;; \"stop\" ) echo \"stop...\" ;; * ) echo \"\u8f93\u5165\u4e0d\u5bf9\u554a\" ;; esac \u51fd\u6570 # \u5b9a\u4e49\u51fd\u6570\uff0cfunction\u53ef\u4ee5\u52a0\u4e5f\u53ef\u4ee5\u7701\u7565\uff0c \u4e0d\u5e26\u4efb\u4f55\u53c2\u6570 function func (){ echo \"\u7b2c\u4e00\u4e2a\u53c2\u6570 $1 \" # $1\u83b7\u53d6\u7b2c\u4e00\u4e2a\u53c2\u6570 echo \"\u53c2\u6570\u4e2a\u6570 $# \" # $#\u83b7\u53d6\u53c2\u6570\u4e2a\u6570 echo \"\u6240\u6709\u53c2\u6570 $@ \" # $@\u83b7\u53d6\u6240\u6709\u53c2\u6570 return 0 # \u51fd\u6570\u8fd4\u56de\u503c(0-255) } # \u8c03\u7528\u51fd\u6570\uff0c\u4e0d\u52a0\u62ec\u53f7 func hi \u4f60\u597d # \u7b2c\u4e00\u4e2a\u53c2\u6570 hi # \u53c2\u6570\u4e2a\u6570 2 # \u6240\u6709\u53c2\u6570 hi \u4f60\u597d echo $? # \u663e\u793a\u6700\u540e\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001 # 0 \u8f93\u5165/\u8f93\u51fa\u91cd\u5b9a\u5411 \u6587\u4ef6\u63cf\u8ff0\u7b26 0 \u901a\u5e38\u662f\u6807\u51c6\u8f93\u5165\uff08STDIN\uff09 1 \u662f\u6807\u51c6\u8f93\u51fa\uff08STDOUT\uff09 2 \u662f\u6807\u51c6\u9519\u8bef\u8f93\u51fa\uff08STDERR\uff09 command1 > file1 # \u8f93\u51fa\u91cd\u5b9a\u5411 command1 >> file1 # \u8ffd\u52a0\u8f93\u51fa\u91cd\u5b9a\u5411 command 2 > file # stderr\u91cd\u5b9a\u5411 command > file 2 > & 1 # \u5408\u5e76stdout\u548cstderr command1 < file1 # \u8f93\u5165\u91cd\u5b9a\u5411 command > /dev/null 2 > & 1 # \u5c4f\u853d\u8f93\u51fa \u793a\u4f8b $ echo -e 'hello world\\nhi china' > text.txt $ cat text.txt hello world hi china $ wc -l < text.txt 2 \u6587\u4ef6\u5305\u542b 1.sh #!/bin/bash function func (){ echo \"hi\" return 0 } 2.sh #!/bin/bash # . ./1.sh # \u4f7f\u7528.\u5f15\u5165\u6587\u4ef6\uff0c \u6ce8\u610f\u7a7a\u683c source ./1.sh # \u4f7f\u7528source\u5f15\u5165\u6587\u4ef6 func \u53c2\u8003 Shell \u6559\u7a0b-\u83dc\u9e1f\u6559\u7a0b","title":"Shell"},{"location":"Linux/Shell/#shell","text":"","title":"Shell"},{"location":"Linux/Shell/#_1","text":"1\u3001\u4f5c\u4e3a\u53ef\u6267\u884c\u7a0b\u5e8f #!/bin/bash # \u6307\u5b9a\u89e3\u91ca\u6b64\u811a\u672c\u6587\u4ef6\u7684\u7a0b\u5e8f $ chmod a+x test.sh # \u4f7f\u811a\u672c\u5177\u6709\u6267\u884c\u6743\u9650 $ ./text.sh # \u6267\u884c\u811a\u672c ./test.sh # \u5728\u5f53\u524d\u76ee\u5f55\u627e test.sh # \u53bb PATH \u91cc\u5bfb\u627e 2\u3001\u4f5c\u4e3a\u89e3\u91ca\u5668\u53c2\u6570 $ bash test.sh","title":"\u8fd0\u884c"},{"location":"Linux/Shell/#_2","text":"key = \"value\" # \u5b9a\u4e49\u53d8\u91cf\uff0c \u53d8\u91cf\u540d\u548c\u7b49\u53f7\u4e4b\u95f4\u4e0d\u80fd\u6709\u7a7a\u683c readonly key # \u53ea\u8bfb\u53d8\u91cf, \u518d\u6b21\u8d4b\u503c\u4f1a\u62a5\u9519 echo $key # \u4f7f\u7528\u53d8\u91cf\uff0c \u4f7f\u7528\u53d8\u91cf\u8981\u5728\u53d8\u91cf\u540d\u524d\u9762\u52a0\u7f8e\u5143\u7b26\u53f7 echo ${ key } # \u8bc6\u522b\u53d8\u91cf\u7684\u8fb9\u754c unset key # \u5220\u9664\u53d8\u91cf \u53d8\u91cf\u7c7b\u578b 1) \u5c40\u90e8\u53d8\u91cf 2) \u73af\u5883\u53d8\u91cf 3) shell\u53d8\u91cf","title":"\u53d8\u91cf"},{"location":"Linux/Shell/#_3","text":"\u5b57\u7b26\u4e32\u53ef\u4ee5\u7528\u5355\u5f15\u53f7\uff0c\u4e5f\u53ef\u4ee5\u7528\u53cc\u5f15\u53f7\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u7528\u5f15\u53f7 \u5355\u5f15\u53f7\uff1a\u539f\u6837\u5b57\u7b26\u4e32\uff0c\u4e0d\u53ef\u4ee5\u6709\u53d8\u91cf\u548c\u8f6c\u4e49\u5b57\u7b26 \u53cc\u5f15\u53f7\uff1a\u53ef\u4ee5\u6709\u53d8\u91cf\u548c\u8f6c\u4e49\u5b57\u7b26 \u5b57\u7b26\u4e32\u62fc\u63a5 name = \"Tom\" echo \"hi \" $name \"!\" # hi Tom! echo \"hi ${ name } !\" # hi Tom! echo 'hi ${name}!' # hi ${name}! echo ${# name } # \u5b57\u7b26\u957f\u5ea6 3 echo ${ name : 1 : 4 } # \u5b57\u7b26\u4e32\u622a\u53d6 om","title":"\u5b57\u7b26\u4e32"},{"location":"Linux/Shell/#_4","text":"Bash Shell\u53ea\u652f\u6301\u4e00\u7ef4\u6570\u7ec4, \u4e0b\u6807\u75310\u5f00\u59cb # \u5b9a\u4e49\u6570\u7ec4\uff0c \"\u7a7a\u683c\"\u5206\u5272 names =( \"Tom\" \"Jack\" ) ages =( 23 24 ) # \u6570\u7ec4\u5143\u7d20\u8d4b\u503c names [ 2 ]= \"Jimi\" # \u83b7\u53d6\u6570\u7ec4\u5143\u7d20 echo ${ names [2] } # Jimi # \u83b7\u53d6\u6570\u7ec4\u6240\u6709\u5143\u7d20 echo ${ ages [@] } # 23 24 echo ${ ages [*] } # 23 24 # \u83b7\u53d6\u6570\u7ec4\u7684\u957f\u5ea6 echo ${# names [@] } # 3","title":"\u6570\u7ec4"},{"location":"Linux/Shell/#_5","text":"# \u5355\u884c\u6ce8\u91ca : <<EOF \u591a\u884c\u6ce8\u91ca \u518d\u5199\u4e00\u884c EOF","title":"\u6ce8\u91ca"},{"location":"Linux/Shell/#_6","text":"# $ ./1.sh 1 2 3 4 echo $# # \u53c2\u6570\u4e2a\u6570 4 echo $* # \u663e\u793a\u6240\u6709\u53c2\u6570 1 2 3 4 echo $@ # \u663e\u793a\u6240\u6709\u53c2\u6570 1 2 3 4 echo $0 # \u6587\u4ef6\u540d ./1.sh echo $1 # \u7b2c\u4e00\u4e2a\u53c2\u6570 1 echo $2 # \u7b2c\u4e8c\u4e2a\u53c2\u6570 2","title":"\u4f20\u9012\u53c2\u6570"},{"location":"Linux/Shell/#_7","text":"1\u3001\u7b97\u672f\u8fd0\u7b97\u7b26 \u539f\u751fbash\u4e0d\u652f\u6301\u6570\u5b66\u8fd0\u7b97\uff0c\u4f7f\u7528expr + \u52a0\u6cd5 ` expr $a + $b ` - \u51cf\u6cd5 ` expr $a - $b ` * \u4e58\u6cd5 ` expr $a \\* $b ` / \u9664\u6cd5 ` expr $b / $a ` % \u53d6\u4f59 ` expr $b % $a ` = \u8d4b\u503c a = $b == \u76f8\u7b49 [ $a == $b ] \u6ce8\u610f\u7a7a\u683c ! = \u4e0d\u76f8\u7b49 [ $a ! = $b ] # \u6ce8\u610f\u662f\u53cd\u5f15\u53f7`, \u9700\u8981\u7a7a\u683c # MAC\u8868\u8fbe\u5f0f $(expr 1 + 1) 2\u3001\u5173\u7cfb\u8fd0\u7b97\u7b26 \u5173\u7cfb\u8fd0\u7b97\u7b26\u53ea\u652f\u6301\u6570\u5b57 -eq \u76f8\u7b49equal [ $a -eq $b ] -ne \u4e0d\u76f8\u7b49not equal [ $a -ne $b ] -gt \u5927\u4e8egreater than [ $a -gt $b ] -lt \u5c0f\u4e8elower than [ $a -lt $b ] -ge \u5927\u4e8e\u7b49\u4e8egreater & equal [ $a -ge $b ] -le \u5c0f\u4e8e\u7b49\u4e8elower & equal [ $a -le $b ] 3\u3001\u5e03\u5c14\u8fd0\u7b97\u7b26 ! \u975e [ ! false ] -o \u6216 [ $a -lt 20 -o $b -gt 100 ] -a \u4e0e [ $a -lt 20 -a $b -gt 100 ] 4\u3001\u903b\u8f91\u8fd0\u7b97\u7b26 && AND [[ $a -lt 100 && $b -gt 100 ]] || OR [[ $a -lt 100 || $b -gt 100 ]] # [[ \u9632\u6b62\u811a\u672c\u4e2d\u7684\u903b\u8f91\u9519\u8bef 5\u3001\u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26 = \u76f8\u7b49 [ $a = $b ] ! = \u4e0d\u76f8\u7b49 [ $a ! = $b ] -z \u957f\u5ea6\u4e3a0 [ -z $a ] -n \u957f\u5ea6\u4e3a0 [ -n \" $a \" ] $ \u4e0d\u4e3a\u7a7a [ $a ] 6\u3001\u6587\u4ef6\u6d4b\u8bd5\u8fd0\u7b97\u7b26 -b file \u8bbe\u5907\u6587\u4ef6 [ -b $file ] -c file \u5b57\u7b26\u8bbe\u5907\u6587\u4ef6 [ -c $file ] -d file \u76ee\u5f55 [ -d $file ] -f file \u666e\u901a\u6587\u4ef6 [ -f $file ] -r file \u53ef\u8bfb [ -r $file ] -w file \u53ef\u5199 [ -w $file ] -x file \u53ef\u6267\u884c [ -x $file ] -s file \u6587\u4ef6\u4e0d\u4e3a\u7a7a\uff08\u6587\u4ef6\u5927\u5c0f\u5927\u4e8e0\uff09 [ -s $file ] -e file \u5b58\u5728 [ -e $file ] \u7efc\u5408\u793a\u4f8b #!/bin/bash # \u7b97\u672f\u8ba1\u7b97 echo ` expr 1 + 1 ` # \u6ce8\u610f\u7a7a\u683c 2 # \u6570\u5b57\u6bd4\u8f83 a = 1 ; b = 2 if [ $a == $b ] then echo \"a==b\" else echo \"a!=b\" fi # \u5173\u7cfb\u6bd4\u8f83 if [ $a -eq $b ] then echo \"a==b\" else echo \"a!=b\" fi # \u5e03\u5c14\u8fd0\u7b97 if [ $a -eq $b -o $a -gt $b ] then echo \"a==b or a>b\" else echo \"a!=b and a<b\" fi # \u903b\u8f91\u8fd0\u7b97 if [[ $a -eq $b || $a -gt $b ]] then echo \"a==b or a>b\" else echo \"a!=b and a<b\" fi # \u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26 if [ $a ] then echo \"a\u4e0d\u4e3a\u7a7a\" else echo \"a\u4e3a\u7a7a\" fi # \u6587\u4ef6 if [ -f \"1.sh\" ] then echo \"\u662f\u6587\u4ef6\" else echo \"\u4e0d\u662f\u6587\u4ef6\" fi","title":"\u57fa\u672c\u8fd0\u7b97\u7b26"},{"location":"Linux/Shell/#echo","text":"echo \"hello world\" # \u666e\u901a\u5b57\u7b26\u4e32, \u81ea\u52a8\u6dfb\u52a0\u6362\u884c\u7b26 echo hello world # \u53cc\u5f15\u53f7\u53ef\u4ee5\u7701\u7565 echo \"\\\"hello world\\\"\" # \u663e\u793a\u8f6c\u4e49\u5b57\u7b26 \"hello world\" echo -e \"hello\\n world\" # -e\u5f00\u542f\u8f6c\u4e49 \\n\u6362\u884c echo -e \"hello world \\c\" # -e\u5f00\u542f\u8f6c\u4e49 \\c\u4e0d\u6362\u884c echo ` date ` # \u663e\u793a\u547d\u4ee4\u7ed3\u679c Thu Jul 4 12:44:11 CST 2019 name = \"Tom\" echo ${ name } # \u8f93\u51fa\u53d8\u91cf echo \"hi\" > file.txt # \u7ed3\u679c\u91cd\u5b9a\u5411 \u793a\u4f8b\uff1a\u8bfb\u53d6\u8f93\u5165\u5e76\u8f93\u51fa #!/bin/bash read -p \"\u8bf7\u8f93\u51fa\u7528\u6237\u540d\uff1a\" content # -p\u63d0\u793a\u6587\u5b57 read -p \"\u8bf7\u8f93\u51fa\u5bc6\u7801\uff1a\" -s password # -s \u9690\u85cf\u8f93\u5165\u5185\u5bb9 echo -e \"\\n\u7528\u6237\u540d: ${ content } \\n\u5bc6\u7801: ${ password } \" : <<EOF $ ./1.sh \u8bf7\u8f93\u51fa\u7528\u6237\u540d\uff1aTom \u8bf7\u8f93\u51fa\u5bc6\u7801\uff1a \u7528\u6237\u540d: Tom \u5bc6\u7801: 123 EOF","title":"echo"},{"location":"Linux/Shell/#printf","text":"\u793a\u4f8b printf \"%-10s |%10.4f\\n\" \"\u5c0f\u660e\" 2 .3 # \u4e0d\u4f1a\u81ea\u52a8\u6dfb\u52a0\u6362\u884c\u7b26 # -\u8868\u793a\u5de6\u5bf9\u9f50\uff0c\u6ca1\u6709\u5219\u8868\u793a\u53f3\u5bf9\u9f50 # 10\u4e2a\u5b57\u7b26\u5bbd\u7684\u5b57\u7b26\u5185 # \u4fdd\u75594\u4f4d\u5c0f\u6570 \u683c\u5f0f\u5316 d: Decimal \u5341\u8fdb\u5236\u6574\u6570 s: String \u5b57\u7b26\u4e32 c: Char \u5b57\u7b26 f: Float \u6d6e\u70b9 \u8f6c\u4e49\u5b57\u7b26 \\c \u4e0d\u663e\u793a\u6362\u884c\u5b57\u7b26 \\n \u6362\u884c \\r \u56de\u8f66\uff08Carriage return \uff09 \\t \u6c34\u5e73\u5236\u8868\u7b26 \\v \u5782\u76f4\u5236\u8868\u7b26 \\\\ \u4e00\u4e2a\u5b57\u9762\u4e0a\u7684\u53cd\u659c\u6760\u5b57\u7b26","title":"printf \u547d\u4ee4"},{"location":"Linux/Shell/#test","text":"# \u7b97\u6570\u8fd0\u7b97 echo $ [ 1 +1 ] # 2 # \u6bd4\u8f83 a = 1 b = 1 if test $a -eq $b then echo \"a==b\" else echo \"a!=b\" fi # a==b","title":"test\u6d4b\u8bd5"},{"location":"Linux/Shell/#_8","text":"if if condition1 then command1 elif condition2 then command2 else commandN fi for for var in item1 item2 ... itemN do command1 command2 ... commandN done while while condition do command done until until condition do command done case case \u503c in \u6a21\u5f0f1 ) # \u53f3\u5706\u62ec\u53f7\u5206\u652f command1 ;; # \u4e24\u4e2a\u5206\u53f7\u8868\u793abreak \u6a21\u5f0f2\uff09 command2 ;; * ) command3 ;; esac \u8df3\u51fa\u5faa\u73af break\u548ccontinue \u7efc\u5408\u793a\u4f8b read -p \"\u8f93\u5165start \u6216\u8005 stop: \" user_command case $user_command in \"start\" ) echo \"start...\" ;; \"stop\" ) echo \"stop...\" ;; * ) echo \"\u8f93\u5165\u4e0d\u5bf9\u554a\" ;; esac","title":"\u6d41\u7a0b\u63a7\u5236"},{"location":"Linux/Shell/#_9","text":"# \u5b9a\u4e49\u51fd\u6570\uff0cfunction\u53ef\u4ee5\u52a0\u4e5f\u53ef\u4ee5\u7701\u7565\uff0c \u4e0d\u5e26\u4efb\u4f55\u53c2\u6570 function func (){ echo \"\u7b2c\u4e00\u4e2a\u53c2\u6570 $1 \" # $1\u83b7\u53d6\u7b2c\u4e00\u4e2a\u53c2\u6570 echo \"\u53c2\u6570\u4e2a\u6570 $# \" # $#\u83b7\u53d6\u53c2\u6570\u4e2a\u6570 echo \"\u6240\u6709\u53c2\u6570 $@ \" # $@\u83b7\u53d6\u6240\u6709\u53c2\u6570 return 0 # \u51fd\u6570\u8fd4\u56de\u503c(0-255) } # \u8c03\u7528\u51fd\u6570\uff0c\u4e0d\u52a0\u62ec\u53f7 func hi \u4f60\u597d # \u7b2c\u4e00\u4e2a\u53c2\u6570 hi # \u53c2\u6570\u4e2a\u6570 2 # \u6240\u6709\u53c2\u6570 hi \u4f60\u597d echo $? # \u663e\u793a\u6700\u540e\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001 # 0","title":"\u51fd\u6570"},{"location":"Linux/Shell/#_10","text":"\u6587\u4ef6\u63cf\u8ff0\u7b26 0 \u901a\u5e38\u662f\u6807\u51c6\u8f93\u5165\uff08STDIN\uff09 1 \u662f\u6807\u51c6\u8f93\u51fa\uff08STDOUT\uff09 2 \u662f\u6807\u51c6\u9519\u8bef\u8f93\u51fa\uff08STDERR\uff09 command1 > file1 # \u8f93\u51fa\u91cd\u5b9a\u5411 command1 >> file1 # \u8ffd\u52a0\u8f93\u51fa\u91cd\u5b9a\u5411 command 2 > file # stderr\u91cd\u5b9a\u5411 command > file 2 > & 1 # \u5408\u5e76stdout\u548cstderr command1 < file1 # \u8f93\u5165\u91cd\u5b9a\u5411 command > /dev/null 2 > & 1 # \u5c4f\u853d\u8f93\u51fa \u793a\u4f8b $ echo -e 'hello world\\nhi china' > text.txt $ cat text.txt hello world hi china $ wc -l < text.txt 2","title":"\u8f93\u5165/\u8f93\u51fa\u91cd\u5b9a\u5411"},{"location":"Linux/Shell/#_11","text":"1.sh #!/bin/bash function func (){ echo \"hi\" return 0 } 2.sh #!/bin/bash # . ./1.sh # \u4f7f\u7528.\u5f15\u5165\u6587\u4ef6\uff0c \u6ce8\u610f\u7a7a\u683c source ./1.sh # \u4f7f\u7528source\u5f15\u5165\u6587\u4ef6 func \u53c2\u8003 Shell \u6559\u7a0b-\u83dc\u9e1f\u6559\u7a0b","title":"\u6587\u4ef6\u5305\u542b"},{"location":"Linux/Vim\u57fa\u672c\u64cd\u4f5c/","text":"Vim\u5b66\u4e60\u7b14\u8bb0 vim\u662fvi\u6539\u8fdb\u7248 windows \u4f53\u9a8c\u7248 gvim \u57fa\u672c\u547d\u4ee4 $ vim # normal\u6a21\u5f0f :q ( quit ) # \u9000\u51fa # \u8fdb\u5165\u7f16\u8f91insert\u6a21\u5f0f\uff086\u79cd\uff09 i ( insert ) # \u5149\u6807\u524d\u63d2\u5165 a ( append ) # \u5149\u6807\u540e\u63d2\u5165 o ( open a line below ) # \u884c\u4e0b\u63d2\u5165 I insert before line # \u884c\u9996 A append after line # \u884c\u5c3e O open a line above # \u884c\u4e0a\u63d2\u5165 ESC \u56de\u5230normal\u6a21\u5f0f :wq # \u4fdd\u5b58\u9000\u51fawrite quit vim4\u79cd\u6a21\u5f0f Normal\u666e\u901a\u6a21\u5f0f\uff08\u6d4f\u89c8\uff09 Esc\u63d2\u5165\u6a21\u5f0f\u56de\u5230\u666e\u901a\u6a21\u5f0f \u666e\u901a\u6a21\u5f0f\u4e0b\u8fdb\u884c\u5404\u79cd\u547d\u4ee4\u64cd\u4f5c\u548c\u79fb\u52a8 \u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u7684\u662f\u6d4f\u89c8 Insert\u63d2\u5165\u6a21\u5f0f\uff08\u7f16\u8f91\uff09 a/i/o \u5149\u6807\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f A/I/O \u884c\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f Command\u547d\u4ee4\u6a21\u5f0f\uff08\u64cd\u4f5c\uff09 Normal\u6a21\u5f0f\u4e0b:\u8fdb\u5165\u547d\u4ee4\u6a21\u5f0f :q\u9000\u51fa :w\u4fdd\u5b58 :vs(vertical split)\u5782\u76f4\u5de6\u53f3\u5206\u5c4f :sp(split) \u6c34\u5e73\u4e0a\u4e0b\u5206\u5c4f :set nu \u8bbe\u7f6e\u884c\u53f7 :% s/java/python/g \u5168\u90e8\u66ff\u6362java->python :syntax on \u8bed\u6cd5\u9ad8\u4eae Visual\u53ef\u89c6\u6a21\u5f0f\uff08\u9009\u62e9\uff09 Nomal\u6a21\u5f0f\u4e0b\u8fdb\u5165Visual\u6a21\u5f0f v\u9009\u62e9\u5b57\u7b26 V\u9009\u62e9\u884c ctrl+v\u5757\u72b6\u9009\u62e9 \u63d2\u5165\u6a21\u5f0f\u5c0f\u6280\u5de7 ctrl + h \u5220\u9664\u4e0a\u4e00\u4e2a\u5b57\u7b26 ctrl + w \u5220\u9664\u4e0a\u4e00\u4e2a\u5355\u8bcd ctrl + u \u5220\u9664\u5f53\u524d\u884c \u7ec8\u7aef\uff1a ctrl + a \u79fb\u52a8\u5230\u884c\u9996 ctrl + e \u79fb\u52a8\u5230\u884c\u5c3e \u5207\u6362\u5230Normal\u6a21\u5f0f: Esc\u3001ctrl + c\u3001 ctrl + [ gi \u56de\u5230\u521a\u624d\u63d2\u5165\u4f4d\u7f6e\u5e76\u8fdb\u5165\u63d2\u5165\u72b6\u6001 \u5feb\u901f\u79fb\u52a8 Normal\u6a21\u5f0f\u4e0b 1\u3001\u5b57\u7b26\u79fb\u52a8 h\u5de6 j\u4e0b k\u4e0a l\u53f3 ^ k < h l > j v 2\u3001\u5355\u8bcd\u79fb\u52a8 w/W \u79fb\u52a8\u5230\u4e0b\u4e00\u4e2aword/WORD\u5f00\u5934 e/E \u4e0b\u4e00\u4e2aword/WORD\u5c3e b/B \u56de\u5230\u4e0a\u4e00\u4e2aword/WORD\u5f00\u5934\uff0cbackword word \u975e\u7a7a\u767d\u7b26\u5206\u5272\u7684\u5355\u8bcd WORD \u4ee5\u7a7a\u767d\u7b26\u5206\u5272\u7684\u5355\u8bcd 3\u3001\u884c\u95f4\u641c\u7d22\u79fb\u52a8 f{char} \u79fb\u52a8\u5230char\u5b57\u7b26\u4e0a t{char} \u79fb\u52a8\u5230char\u524d\u4e00\u4e2a\u5b57\u7b26\u4e0a until \u7b2c\u4e00\u6b21\u6ca1\u641c\u5230\uff0c\u53ef\u4ee5\u7ee7\u7eed\u641c\u8be5\u884c \u5206\u53f7; \u4e0b\u4e00\u4e2a \u9017\u53f7, \u4e0a\u4e00\u4e2a F\u53cd\u5411\u641c\u7d22 4\u3001\u6c34\u5e73\u79fb\u52a8 0 \u79fb\u52a8\u5230\u884c\u9996\u7b2c\u4e00\u4e2a\u5b57\u7b26 ^ \u79fb\u52a8\u5230\u7b2c\u4e00\u4e2a\u975e\u7a7a\u767d\u5b57\u7b26 $ \u79fb\u52a8\u5230\u884c\u5c3e g_ \u79fb\u52a8\u5230\u884c\u5c3e\u975e\u7a7a\u767d\u5b57\u7b26 5\u3001\u5782\u76f4\u79fb\u52a8 \u62ec\u53f7() \u53e5\u5b50\u95f4\u79fb\u52a8 \u67e5\u770b\u5e2e\u52a9 :help ( {} \u6bb5\u843d\u4e4b\u95f4\u79fb\u52a8 6\u3001\u5c4f\u5e55\u79fb\u52a8 H head \u5c4f\u5e55\u5f00\u5934 M middle \u4e2d\u95f4 L lower \u7ed3\u5c3e zz \u628a\u5c4f\u5e55\u7f6e\u4e3a\u4e2d\u95f4\uff0c\u5f53\u524d\u884c\u653e\u4e2d\u95f4 7\u3001\u9875\u9762\u79fb\u52a8 gg \u6587\u4ef6\u5f00\u5934 G \u6587\u4ef6\u7ed3\u5c3e ctrl + o \u5feb\u901f\u8fd4\u56de ctrl + u upword \u4e0a\u7ffb\u534a\u9875 ctrl + f forword \u4e0b\u7ffb\u534a\u9875 \u589e\u5220\u6539\u67e5 1\u3001\u589e\u52a0 Normal\u6a21\u5f0f a/i/o A/I/O 2\u3001\u5220\u9664 Normal\u6a21\u5f0f x \u5220\u9664\u4e00\u4e2a\u5b57\u7b26 4x \u5220\u96644\u4e2a\u5b57\u7b26 d(delete) daw \u5220\u9664\u5355\u8bcd\u548c\u5468\u56f4\u7a7a\u683c\uff08delete around word\uff09 diw \u5220\u9664\u5355\u8bcd\uff08dw\uff09 dd \u5220\u9664\u884c dt{char} \u5220\u9664\u76f4\u5230 d$ \u5220\u9664\u5230\u7ed3\u5c3e d0 \u5220\u9664\u5230\u5f00\u5934 2dd \u5220\u9664\u4e24\u884c u undo \u64a4\u9500\u64cd\u4f5c ctrl + r \u6062\u590d\u64a4\u9500 3\u3001\u4fee\u6539 Normal\u6a21\u5f0f\u4e0b r replace \u66ff\u6362\u4e00\u4e2a\u5b57\u7b26 eg: \u5149\u6807\u4e0bg ra g->a c change cw \u5220\u9664\u5355\u8bcd\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f change word ct{char} \u5220\u9664\u5230\u5b57\u7b26\uff0c\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f s substitute \u5220\u9664\u5e76\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f eg: 4s \u5220\u96644\u4e2a\u5b57\u7b26\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f R \u4e0d\u65ad\u66ff\u6362\u591a\u4e2a\u5b57\u7b26 S \u5220\u9664\u6574\u884c\u8fdb\u884c\u63d2\u5165 C \u5220\u9664\u6574\u884c\u8fdb\u884c\u63d2\u5165 4\u3001\u67e5\u8be2 / \u524d\u5411\u641c\u7d22 ? \u53cd\u5411\u641c\u7d22 n/N \u4e0b\u4e00\u4e2a\u6216\u8005\u4e0a\u4e00\u4e2a */# \u5f53\u524d\u5355\u8bcd\u7684\u524d\u5411\u548c\u540e\u5411\u5339\u914d \u641c\u7d22\u7ed3\u679c\u9ad8\u4eae :set hls (high light search) :set incsearch \u641c\u7d22\u66ff\u6362 substitute \u652f\u6301\u6b63\u5219 : [ range ] s [ ubstitute ]/ { pattern } / { string } / flags range \u8303\u56f4 eg: 10,20 \u8868\u793a10-20\u884c % \u8868\u793a\u5168\u90e8 pattern \u66ff\u6362\u6a21\u5f0f string \u66ff\u6362\u540e\u6587\u672c flags \u66ff\u6362\u6807\u5fd7\u4f4d g global \u5168\u5c40\u66ff\u6362 c confirm \u786e\u8ba4 n number \u67e5\u8be2\u5339\u914d\u6b21\u6570\u800c\u4e0d\u66ff\u6362 eg: :% s/self/this/g # \u66ff\u6362 self->this :1,6 s/self//n # \u67e5\u8be2 \u8ba1\u7b97\u67091-6\u884c\u6709\u591a\u5c11\u4e2aself :% s/\\<name>/Name/g # \u7cbe\u786e\u5339\u914d\u5355\u8bcd \u591a\u6587\u4ef6\u64cd\u4f5c Buffer \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u7684\u7f13\u51b2\u533a Window \u53ef\u89c6\u5316\u5206\u5272\u533a\u57df Tab \u7ec4\u7ec7\u7a97\u53e3\u4e3a\u4e00\u4e2a\u5de5\u4f5c\u533a 1\u3001Buffer :ls \u5217\u4e3e\u7f13\u51b2\u533a :b n \u8df3\u8f6c\u5230\u7b2cn\u4e2a\u7f13\u51b2\u533a :bpre :bnext :bfirst :blast :b buffer_name tab\u8865\u5168 :e filename \u6253\u5f00\u6587\u4ef6 2\u3001Window \u4e00\u4e2a\u7f13\u51b2\u533a\u53ef\u4ee5\u5206\u5272\u4e3a\u591a\u4e2a\u7a97\u53e3 \u6bcf\u4e2a\u7a97\u53e3\u4e5f\u53ef\u6253\u5f00\u4e0d\u540c\u7f13\u51b2\u533a \u7a97\u53e3\u53ef\u4ee5\u65e0\u9650\u5206\u5272 \uff081\uff09\u7a97\u53e3\u5206\u5272 + s \u6c34\u5e73\u5206\u5272 + v \u5782\u76f4\u5206\u5272 :sp [filename] \u6c34\u5e73\u5206\u5272\uff08\u6253\u5f00\u6587\u4ef6\uff09 :vs [filename] \u5782\u76f4\u5206\u5272\uff08\u6253\u5f00\u6587\u4ef6\uff09 \uff082\uff09\u7a97\u53e3\u5207\u6362 + w \u5faa\u73af\u5207\u6362 + h \u5207\u6362\u5230\u5de6\u8fb9 + j \u5207\u6362\u5230\u4e0b\u8fb9 + k \u5207\u6362\u5230\u4e0a\u8fb9 + l \u5207\u6362\u5230\u53f3\u8fb9 \uff083\uff09\u7a97\u53e3\u79fb\u52a8 + H \u79fb\u52a8\u5230\u5de6\u8fb9 + J \u79fb\u52a8\u5230\u4e0b\u8fb9 + K \u79fb\u52a8\u5230\u4e0a\u8fb9 + L \u79fb\u52a8\u5230\u53f3\u8fb9 (4)\u91cd\u6392\u7a97\u53e3 :h window-size + = \u6240\u6709\u7a97\u53e3\u7b49\u5bbd\u7b49\u9ad8 + _ \u6700\u5927\u5316\u6d3b\u52a8\u7a97\u53e3\u9ad8\u5ea6 + | \u6700\u5927\u5316\u6d3b\u52a8\u7a97\u53e3\u5bbd\u5ea6 n + + _ \u628a\u6d3b\u52a8\u7a97\u53e3\u7684\u9ad8\u5ea6\u8bbe\u4e3an \u884c n + + | \u628a\u6d3b\u52a8\u7a97\u53e3\u7684\u5bbd\u5ea6\u8bbe\u4e3an \u884c 3\u3001Tab\u6807\u7b7e\u9875 \u4e00\u7cfb\u5217\u7a97\u53e3\u7684\u5bb9\u5668:h tabpage :tabnew {filename} \u65b0\u6807\u7b7e\u4e2d\u6253\u5f00 :tabe[dit] {filename} \u65b0\u6807\u7b7e\u4e2d\u6253\u5f00 + T \u5f53\u524d\u7a97\u53e3\u79fb\u52a8\u5230\u4e00\u4e2a\u65b0\u6807\u7b7e\u9875 :tabc[lose] \u5173\u95ed\u5f53\u524d\u6807\u7b7e\u9875\u53ca\u5176\u4e2d\u7684\u6240\u6709\u7a97\u53e3 :tabo[nly] \u53ea\u4fdd\u7559\u5f53\u524d\u6807\u7b7e\u9875\uff0c\u5173\u95ed\u5176\u4ed6\u6807\u7b7e\u9875 :tabn[ext] {N} {N}gt \u5207\u6362\u5230\u7f16\u53f7N \u7684\u6807\u7b7e\u9875 :tabn[ext] gt \u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u6807\u7b7e\u9875 :tabp[revious] gT \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u6807\u7b7e\u9875 \u63d2\u4ef6\uff1actrlp nerdtree \u6587\u672c\u5bf9\u8c61text object \u547d\u4ee4\u683c\u5f0f\uff1a [number] [text object] number \u6b21\u6570 command \u547d\u4ee4 d(delete), c(change), y(yank), v(visual) text object \u6587\u672c\u5bf9\u8c61 w(\u5355\u8bcdword)\uff0c s(\u53e5\u5b50sentence)\uff0cp(\u6bb5\u843dparagraph) eg: iw \u63d2\u5165\u5355\u8bcd viw \u9009\u62e9\u6a21\u5f0f\u63d2\u5165\u5355\u8bcd vaw around word \u9009\u4e2d\u5f53\u524d\u5355\u8bcd\u548c\u5355\u8bcd\u4e4b\u540e\u7684\u7a7a\u683c vis/vas/vip/vap vi(/)/ /{/}/\"/\"/'/' va(/)/ /{/}/\"/\"/'/' ciw \u5220\u9664\u5355\u8bcd\u5e76\u63d2\u5165 ci{ \u5220\u9664{\u5185\u5bb9 \u63d2\u4ef6 vim-go \u590d\u5236\u7c98\u8d34 Normal\u6a21\u5f0f\uff1a y(yank) p (put) dd \u5220\u9664\u4e00\u884c p\u7c98\u8d34 Visual\u6a21\u5f0f\uff1a\u9009\u4e2d\u4e4b\u540e p\u7c98\u8d34 \u6587\u672c\u5bf9\u8c61\uff1ayiw \u590d\u5236\u4e00\u4e2a\u5355\u8bcd yy\u590d\u5236\u4e00\u884c vimrc :set autoindent \u8bbe\u7f6e\u81ea\u52a8\u7f29\u8fdb \u7c98\u8d34\u4ee3\u7801\u683c\u5f0f\u9519\u4e71\u89e3\u51b3\uff1a :set paste \u8bbe\u7f6e :set nopaste \u53d6\u6d88 Insert\u6a21\u5f0f ctrl + v/ command + v Vim\u5bc4\u5b58\u5668 \u65e0\u540d\u5bc4\u5b58\u5668 dw->p \u526a\u5207\u7c98\u8d34\u5355\u8bcd x->p \u526a\u5207\u7c98\u8d34\u5b57\u7b26 \u6307\u5b9a\u5bc4\u5b58\u5668 \u201d{register} eg: \"ayiw \u590d\u5236\u5355\u8bcd\u5230\u5bc4\u5b58\u5668a\u4e2d \"bdd \u5220\u9664\u5f53\u524d\u884c\u5230\u5bc4\u5b58\u5668b\u4e2d :reg a \u67e5\u770ba\u5bc4\u5b58\u5668\u5185\u5bb9 \"ap \u7c98\u8d34\u5bc4\u5b58\u5668a\u4e2d\u7684\u5185\u5bb9 \"\"\u65e0\u540d\u5bc4\u5b58\u5668\uff0c\u9ed8\u8ba4\u6a21\u5f0f \"0 \u5bc4\u5b58\u56680 \u5bc4\u5b58\u5668a-z \"+\u7cfb\u7edf\u526a\u5207\u677f \"% \u5f53\u524d\u6587\u4ef6\u540d :echo has(\"clipboard\") 1\u5219\u652f\u6301 :set clipboard=unname \u76f4\u63a5\u4f7f\u7528\u7cfb\u7edf\u526a\u5207\u677f \".\u4e0a\u4e00\u6b21\u63d2\u5165\u7684\u6587\u672c ctrl + r + :e! \u91cd\u65b0\u52a0\u8f7d\u4e0d\u4fdd\u5b58\u5f53\u524d\u6587\u4ef6 Vim\u5b8fmacro\u6279\u91cf\u64cd\u4f5c \u5f55\u5236\u64cd\u4f5c\uff0c\u56de\u653e\u64cd\u4f5c q\u5f55\u5236 q\u7ed3\u675f q{register} \u4fdd\u5b58\u5230\u5bc4\u5b58\u5668 @{register} \u56de\u653e\u64cd\u4f5c v \u6a21\u5f0f\u4e0b\u9009\u62e9 :normal @a \u56de\u653e\u5b8f\u64cd\u4f5c eg: \u6bcf\u884c\u524d\u540e\u52a0\" V \u5168\u9009\u884c G \u5168\u9009\u6587\u672c :normal I\" A\" Vim\u4ee3\u7801\u8865\u5168 \u666e\u901a\u5173\u952e\u5b57 \u5f53\u524d\u7f13\u51b2\u533a\u5173\u952e\u5b57 \u5305\u542b\u6587\u4ef6\u540d\u5173\u952e\u5b57 \u6807\u7b7e\u6587\u4ef6\u5173\u952e\u5b57 \u5b57\u6bb5\u67e5\u627e \u6574\u884c\u8865\u5168 \u6587\u4ef6\u540d\u8865\u5168 \u5168\u80fdOmni\u8865\u5168 \u5e38\u7528\uff1a \u8865\u5168\u5355\u8bcd \u6587\u4ef6\u540d\u8865\u5168 \u8865\u5168\u4ee3\u7801\uff0c\u9700\u5f00\u542f\u6587\u4ef6\u7c7b\u578b\u68c0\u67e5\uff0c\u5b89\u88c5\u63d2\u4ef6 syntax on :set nu :set indent :r! echo % \u6587\u4ef6\u540d :r! echo %:p \u6587\u4ef6\u8def\u5f84 \u66f4\u6362\u914d\u8272 :colorscheme \u663e\u793a\u5f53\u524d\u4e3b\u9898\u914d\u8272 \u9ed8\u8ba4default :colorscheme \u663e\u793a\u6240\u6709\u914d\u8272 :colorscheme \u914d\u8272\u540d \u4fee\u6539\u914d\u8272 $ vim duck.go duck.py -O # \u4e24\u4e2a\u7a97\u53e3\u6253\u5f00 \u6301\u4e45\u5316\u914d\u7f6e vim ~/.vimrc \u914d\u8272\u65b9\u6848 hybrid Monokai \u4e0b\u8f7d\u914d\u8272\u65b9\u6848\u62f7\u8d1d\u5230\u6587\u4ef6\u5939 mkdir ~/.vim/colors vim\u63d2\u4ef6\uff1ahttps://github.com/flazz/vim-colorschemes vim\u914d\u7f6e \u6301\u4e45\u5316\u914d\u7f6e Linux/Unix vim ~/.vimrc windows vim $MYVIMRC \u73af\u5883\u53d8\u91cf \u5e38\u7528\u8bbe\u7f6e :set nu # \u8bbe\u7f6e\u884c\u53f7 colorscheme hybrid # \u8bbe\u7f6e\u4e3b\u9898 vim\u6620\u5c04 noremap w :w \u4fdd\u5b58\u6587\u4ef6 \u81ea\u5b9a\u4e49vimscript\u51fd\u6570 \u548c\u63d2\u4ef6\u914d\u7f6e \" \u5e38\u7528\u8bbe\u7f6e\uff0c\u8fd9\u662f\u6ce8\u91ca \" \u8bbe\u7f6e\u884c\u53f7 set number \" \u8bbe\u7f6e\u4e3b\u9898 colorscheme hybrid \" \u6309F2\u8fdb\u5165\u7c98\u8d34\u6a21\u5f0f set pasttoggle =< F2 > \" \u9ad8\u4eae\u641c\u7d22 set hlsearch \" \u8bbe\u7f6e\u6298\u53e0\u65b9\u5f0f set foldmethod = indent \" \u4e00\u4e9b\u65b9\u4fbf\u7684\u6620\u5c04 let mapleader = ',' let g : mapleader = ',' \" \u4f7f\u7528 jj \u8fdb\u5165 normal \u6a21\u5f0f `^\u4e0a\u4e00\u6b21\u63d2\u5165\u70b9 inoremap jj < Esc > ` ^ \" \u4f7f\u7528 leader+w \u76f4\u63a5\u4fdd\u5b58 inoremap < leader > w < Esc >: w < cr > noremap < leader > W : w < cr > \" \u5207\u6362 buffer nnoremap < silent > [ b : bprevious < CR > nnoremap < silent > [ n : bnext < CR > \" \u5207\u6362\u7a97\u53e3 noremap < C - h > < C - w > h noremap < C - j > < C - w > j noremap < C - k > < C - w > k noremap < C - l > < C - w > l \" sudo to write cnoremap W !! w ! sudo tee % >/ dev / null \" json\u683c\u5f0f\u5316 com ! FormatJSON %! python3 - m json . tool \u6620\u5c04 \u8bbe\u7f6eleader let mapleader = \",\" \u91cd\u542fvim\u6216source\u751f\u6548 :source ~/.vimrc \u63d2\u4ef6\u811a\u672c \u811a\u672c\u8bed\u8a00 vimscrip \u67e5\u770b\u914d\u7f6e\u9009\u9879 :h option-list \u81ea\u5b9a\u4e49\u51fd\u6570 func SetTitle () if & filetype == ' python ' call setline ( 1 , \" \\#!/usr/bin/env python \" ) call setline ( 2 , \" \\# -*- coding:utf-8 -*- \" ) normal G normal o normal o call setline ( 5 , \" if __name__ == '__main__': \" ) call setline ( 6 , \" pass \" ) endfunc github: vim-go-tutoria \u5f00\u6e90\u6587\u4ef6\uff1adotfiles vim\u6620\u5c04 :map - x # \u5c06-\u6620\u5c04\u4e3ax :map viw \u7a7a\u683c\u6620\u5c04\u4e3a\u9009\u4e2d\u6574\u4e2a\u5355\u8bcd :map dd \u53ef\u4ee5\u4f7f\u7528ctrl+d\u6267\u884cdd\u64cd\u4f5c :unmap - \u5220\u9664\u6620\u5c04 \u6a21\u5f0f nmap normal vmap visual imap insert v \u9009\u4e2d U/u \u8f6c\u5927\u5c0f\u5199 :imap ddi # insert\u6a21\u5f0f\u4e0b\u5220\u9664\u4e00\u884c nnoremap n no re map normal\u6a21\u5f0f\u4e0b\uff0c\u975e\u9012\u5f52\u6620\u5c04\uff08\u4efb\u4f55\u65f6\u5019\u90fd\u5e94\u8be5\u4f7f\u7528\uff09 \u300a\u7b28\u529e\u6cd5\u5b66vimscript\u300b vim8 Neovim","title":"Vim\u57fa\u672c\u64cd\u4f5c"},{"location":"Linux/Vim\u57fa\u672c\u64cd\u4f5c/#_1","text":"$ vim # normal\u6a21\u5f0f :q ( quit ) # \u9000\u51fa # \u8fdb\u5165\u7f16\u8f91insert\u6a21\u5f0f\uff086\u79cd\uff09 i ( insert ) # \u5149\u6807\u524d\u63d2\u5165 a ( append ) # \u5149\u6807\u540e\u63d2\u5165 o ( open a line below ) # \u884c\u4e0b\u63d2\u5165 I insert before line # \u884c\u9996 A append after line # \u884c\u5c3e O open a line above # \u884c\u4e0a\u63d2\u5165 ESC \u56de\u5230normal\u6a21\u5f0f :wq # \u4fdd\u5b58\u9000\u51fawrite quit","title":"\u57fa\u672c\u547d\u4ee4"},{"location":"Linux/Vim\u57fa\u672c\u64cd\u4f5c/#vim4","text":"Normal\u666e\u901a\u6a21\u5f0f\uff08\u6d4f\u89c8\uff09 Esc\u63d2\u5165\u6a21\u5f0f\u56de\u5230\u666e\u901a\u6a21\u5f0f \u666e\u901a\u6a21\u5f0f\u4e0b\u8fdb\u884c\u5404\u79cd\u547d\u4ee4\u64cd\u4f5c\u548c\u79fb\u52a8 \u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u7684\u662f\u6d4f\u89c8 Insert\u63d2\u5165\u6a21\u5f0f\uff08\u7f16\u8f91\uff09 a/i/o \u5149\u6807\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f A/I/O \u884c\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f Command\u547d\u4ee4\u6a21\u5f0f\uff08\u64cd\u4f5c\uff09 Normal\u6a21\u5f0f\u4e0b:\u8fdb\u5165\u547d\u4ee4\u6a21\u5f0f :q\u9000\u51fa :w\u4fdd\u5b58 :vs(vertical split)\u5782\u76f4\u5de6\u53f3\u5206\u5c4f :sp(split) \u6c34\u5e73\u4e0a\u4e0b\u5206\u5c4f :set nu \u8bbe\u7f6e\u884c\u53f7 :% s/java/python/g \u5168\u90e8\u66ff\u6362java->python :syntax on \u8bed\u6cd5\u9ad8\u4eae Visual\u53ef\u89c6\u6a21\u5f0f\uff08\u9009\u62e9\uff09 Nomal\u6a21\u5f0f\u4e0b\u8fdb\u5165Visual\u6a21\u5f0f v\u9009\u62e9\u5b57\u7b26 V\u9009\u62e9\u884c ctrl+v\u5757\u72b6\u9009\u62e9","title":"vim4\u79cd\u6a21\u5f0f"},{"location":"Linux/Vim\u57fa\u672c\u64cd\u4f5c/#_2","text":"ctrl + h \u5220\u9664\u4e0a\u4e00\u4e2a\u5b57\u7b26 ctrl + w \u5220\u9664\u4e0a\u4e00\u4e2a\u5355\u8bcd ctrl + u \u5220\u9664\u5f53\u524d\u884c \u7ec8\u7aef\uff1a ctrl + a \u79fb\u52a8\u5230\u884c\u9996 ctrl + e \u79fb\u52a8\u5230\u884c\u5c3e \u5207\u6362\u5230Normal\u6a21\u5f0f: Esc\u3001ctrl + c\u3001 ctrl + [ gi \u56de\u5230\u521a\u624d\u63d2\u5165\u4f4d\u7f6e\u5e76\u8fdb\u5165\u63d2\u5165\u72b6\u6001","title":"\u63d2\u5165\u6a21\u5f0f\u5c0f\u6280\u5de7"},{"location":"Linux/Vim\u57fa\u672c\u64cd\u4f5c/#_3","text":"Normal\u6a21\u5f0f\u4e0b 1\u3001\u5b57\u7b26\u79fb\u52a8 h\u5de6 j\u4e0b k\u4e0a l\u53f3 ^ k < h l > j v 2\u3001\u5355\u8bcd\u79fb\u52a8 w/W \u79fb\u52a8\u5230\u4e0b\u4e00\u4e2aword/WORD\u5f00\u5934 e/E \u4e0b\u4e00\u4e2aword/WORD\u5c3e b/B \u56de\u5230\u4e0a\u4e00\u4e2aword/WORD\u5f00\u5934\uff0cbackword word \u975e\u7a7a\u767d\u7b26\u5206\u5272\u7684\u5355\u8bcd WORD \u4ee5\u7a7a\u767d\u7b26\u5206\u5272\u7684\u5355\u8bcd 3\u3001\u884c\u95f4\u641c\u7d22\u79fb\u52a8 f{char} \u79fb\u52a8\u5230char\u5b57\u7b26\u4e0a t{char} \u79fb\u52a8\u5230char\u524d\u4e00\u4e2a\u5b57\u7b26\u4e0a until \u7b2c\u4e00\u6b21\u6ca1\u641c\u5230\uff0c\u53ef\u4ee5\u7ee7\u7eed\u641c\u8be5\u884c \u5206\u53f7; \u4e0b\u4e00\u4e2a \u9017\u53f7, \u4e0a\u4e00\u4e2a F\u53cd\u5411\u641c\u7d22 4\u3001\u6c34\u5e73\u79fb\u52a8 0 \u79fb\u52a8\u5230\u884c\u9996\u7b2c\u4e00\u4e2a\u5b57\u7b26 ^ \u79fb\u52a8\u5230\u7b2c\u4e00\u4e2a\u975e\u7a7a\u767d\u5b57\u7b26 $ \u79fb\u52a8\u5230\u884c\u5c3e g_ \u79fb\u52a8\u5230\u884c\u5c3e\u975e\u7a7a\u767d\u5b57\u7b26 5\u3001\u5782\u76f4\u79fb\u52a8 \u62ec\u53f7() \u53e5\u5b50\u95f4\u79fb\u52a8 \u67e5\u770b\u5e2e\u52a9 :help ( {} \u6bb5\u843d\u4e4b\u95f4\u79fb\u52a8 6\u3001\u5c4f\u5e55\u79fb\u52a8 H head \u5c4f\u5e55\u5f00\u5934 M middle \u4e2d\u95f4 L lower \u7ed3\u5c3e zz \u628a\u5c4f\u5e55\u7f6e\u4e3a\u4e2d\u95f4\uff0c\u5f53\u524d\u884c\u653e\u4e2d\u95f4 7\u3001\u9875\u9762\u79fb\u52a8 gg \u6587\u4ef6\u5f00\u5934 G \u6587\u4ef6\u7ed3\u5c3e ctrl + o \u5feb\u901f\u8fd4\u56de ctrl + u upword \u4e0a\u7ffb\u534a\u9875 ctrl + f forword \u4e0b\u7ffb\u534a\u9875","title":"\u5feb\u901f\u79fb\u52a8"},{"location":"Linux/Vim\u57fa\u672c\u64cd\u4f5c/#_4","text":"1\u3001\u589e\u52a0 Normal\u6a21\u5f0f a/i/o A/I/O 2\u3001\u5220\u9664 Normal\u6a21\u5f0f x \u5220\u9664\u4e00\u4e2a\u5b57\u7b26 4x \u5220\u96644\u4e2a\u5b57\u7b26 d(delete) daw \u5220\u9664\u5355\u8bcd\u548c\u5468\u56f4\u7a7a\u683c\uff08delete around word\uff09 diw \u5220\u9664\u5355\u8bcd\uff08dw\uff09 dd \u5220\u9664\u884c dt{char} \u5220\u9664\u76f4\u5230 d$ \u5220\u9664\u5230\u7ed3\u5c3e d0 \u5220\u9664\u5230\u5f00\u5934 2dd \u5220\u9664\u4e24\u884c u undo \u64a4\u9500\u64cd\u4f5c ctrl + r \u6062\u590d\u64a4\u9500 3\u3001\u4fee\u6539 Normal\u6a21\u5f0f\u4e0b r replace \u66ff\u6362\u4e00\u4e2a\u5b57\u7b26 eg: \u5149\u6807\u4e0bg ra g->a c change cw \u5220\u9664\u5355\u8bcd\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f change word ct{char} \u5220\u9664\u5230\u5b57\u7b26\uff0c\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f s substitute \u5220\u9664\u5e76\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f eg: 4s \u5220\u96644\u4e2a\u5b57\u7b26\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f R \u4e0d\u65ad\u66ff\u6362\u591a\u4e2a\u5b57\u7b26 S \u5220\u9664\u6574\u884c\u8fdb\u884c\u63d2\u5165 C \u5220\u9664\u6574\u884c\u8fdb\u884c\u63d2\u5165 4\u3001\u67e5\u8be2 / \u524d\u5411\u641c\u7d22 ? \u53cd\u5411\u641c\u7d22 n/N \u4e0b\u4e00\u4e2a\u6216\u8005\u4e0a\u4e00\u4e2a */# \u5f53\u524d\u5355\u8bcd\u7684\u524d\u5411\u548c\u540e\u5411\u5339\u914d \u641c\u7d22\u7ed3\u679c\u9ad8\u4eae :set hls (high light search) :set incsearch","title":"\u589e\u5220\u6539\u67e5"},{"location":"Linux/Vim\u57fa\u672c\u64cd\u4f5c/#_5","text":"substitute \u652f\u6301\u6b63\u5219 : [ range ] s [ ubstitute ]/ { pattern } / { string } / flags range \u8303\u56f4 eg: 10,20 \u8868\u793a10-20\u884c % \u8868\u793a\u5168\u90e8 pattern \u66ff\u6362\u6a21\u5f0f string \u66ff\u6362\u540e\u6587\u672c flags \u66ff\u6362\u6807\u5fd7\u4f4d g global \u5168\u5c40\u66ff\u6362 c confirm \u786e\u8ba4 n number \u67e5\u8be2\u5339\u914d\u6b21\u6570\u800c\u4e0d\u66ff\u6362 eg: :% s/self/this/g # \u66ff\u6362 self->this :1,6 s/self//n # \u67e5\u8be2 \u8ba1\u7b97\u67091-6\u884c\u6709\u591a\u5c11\u4e2aself :% s/\\<name>/Name/g # \u7cbe\u786e\u5339\u914d\u5355\u8bcd","title":"\u641c\u7d22\u66ff\u6362"},{"location":"Linux/Vim\u57fa\u672c\u64cd\u4f5c/#_6","text":"Buffer \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u7684\u7f13\u51b2\u533a Window \u53ef\u89c6\u5316\u5206\u5272\u533a\u57df Tab \u7ec4\u7ec7\u7a97\u53e3\u4e3a\u4e00\u4e2a\u5de5\u4f5c\u533a 1\u3001Buffer :ls \u5217\u4e3e\u7f13\u51b2\u533a :b n \u8df3\u8f6c\u5230\u7b2cn\u4e2a\u7f13\u51b2\u533a :bpre :bnext :bfirst :blast :b buffer_name tab\u8865\u5168 :e filename \u6253\u5f00\u6587\u4ef6 2\u3001Window \u4e00\u4e2a\u7f13\u51b2\u533a\u53ef\u4ee5\u5206\u5272\u4e3a\u591a\u4e2a\u7a97\u53e3 \u6bcf\u4e2a\u7a97\u53e3\u4e5f\u53ef\u6253\u5f00\u4e0d\u540c\u7f13\u51b2\u533a \u7a97\u53e3\u53ef\u4ee5\u65e0\u9650\u5206\u5272 \uff081\uff09\u7a97\u53e3\u5206\u5272 + s \u6c34\u5e73\u5206\u5272 + v \u5782\u76f4\u5206\u5272 :sp [filename] \u6c34\u5e73\u5206\u5272\uff08\u6253\u5f00\u6587\u4ef6\uff09 :vs [filename] \u5782\u76f4\u5206\u5272\uff08\u6253\u5f00\u6587\u4ef6\uff09 \uff082\uff09\u7a97\u53e3\u5207\u6362 + w \u5faa\u73af\u5207\u6362 + h \u5207\u6362\u5230\u5de6\u8fb9 + j \u5207\u6362\u5230\u4e0b\u8fb9 + k \u5207\u6362\u5230\u4e0a\u8fb9 + l \u5207\u6362\u5230\u53f3\u8fb9 \uff083\uff09\u7a97\u53e3\u79fb\u52a8 + H \u79fb\u52a8\u5230\u5de6\u8fb9 + J \u79fb\u52a8\u5230\u4e0b\u8fb9 + K \u79fb\u52a8\u5230\u4e0a\u8fb9 + L \u79fb\u52a8\u5230\u53f3\u8fb9 (4)\u91cd\u6392\u7a97\u53e3 :h window-size + = \u6240\u6709\u7a97\u53e3\u7b49\u5bbd\u7b49\u9ad8 + _ \u6700\u5927\u5316\u6d3b\u52a8\u7a97\u53e3\u9ad8\u5ea6 + | \u6700\u5927\u5316\u6d3b\u52a8\u7a97\u53e3\u5bbd\u5ea6 n + + _ \u628a\u6d3b\u52a8\u7a97\u53e3\u7684\u9ad8\u5ea6\u8bbe\u4e3an \u884c n + + | \u628a\u6d3b\u52a8\u7a97\u53e3\u7684\u5bbd\u5ea6\u8bbe\u4e3an \u884c 3\u3001Tab\u6807\u7b7e\u9875 \u4e00\u7cfb\u5217\u7a97\u53e3\u7684\u5bb9\u5668:h tabpage :tabnew {filename} \u65b0\u6807\u7b7e\u4e2d\u6253\u5f00 :tabe[dit] {filename} \u65b0\u6807\u7b7e\u4e2d\u6253\u5f00 + T \u5f53\u524d\u7a97\u53e3\u79fb\u52a8\u5230\u4e00\u4e2a\u65b0\u6807\u7b7e\u9875 :tabc[lose] \u5173\u95ed\u5f53\u524d\u6807\u7b7e\u9875\u53ca\u5176\u4e2d\u7684\u6240\u6709\u7a97\u53e3 :tabo[nly] \u53ea\u4fdd\u7559\u5f53\u524d\u6807\u7b7e\u9875\uff0c\u5173\u95ed\u5176\u4ed6\u6807\u7b7e\u9875 :tabn[ext] {N} {N}gt \u5207\u6362\u5230\u7f16\u53f7N \u7684\u6807\u7b7e\u9875 :tabn[ext] gt \u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u6807\u7b7e\u9875 :tabp[revious] gT \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u6807\u7b7e\u9875 \u63d2\u4ef6\uff1actrlp nerdtree","title":"\u591a\u6587\u4ef6\u64cd\u4f5c"},{"location":"Linux/Vim\u57fa\u672c\u64cd\u4f5c/#text-object","text":"\u547d\u4ee4\u683c\u5f0f\uff1a [number] [text object] number \u6b21\u6570 command \u547d\u4ee4 d(delete), c(change), y(yank), v(visual) text object \u6587\u672c\u5bf9\u8c61 w(\u5355\u8bcdword)\uff0c s(\u53e5\u5b50sentence)\uff0cp(\u6bb5\u843dparagraph) eg: iw \u63d2\u5165\u5355\u8bcd viw \u9009\u62e9\u6a21\u5f0f\u63d2\u5165\u5355\u8bcd vaw around word \u9009\u4e2d\u5f53\u524d\u5355\u8bcd\u548c\u5355\u8bcd\u4e4b\u540e\u7684\u7a7a\u683c vis/vas/vip/vap vi(/)/ /{/}/\"/\"/'/' va(/)/ /{/}/\"/\"/'/' ciw \u5220\u9664\u5355\u8bcd\u5e76\u63d2\u5165 ci{ \u5220\u9664{\u5185\u5bb9 \u63d2\u4ef6 vim-go","title":"\u6587\u672c\u5bf9\u8c61text object"},{"location":"Linux/Vim\u57fa\u672c\u64cd\u4f5c/#_7","text":"Normal\u6a21\u5f0f\uff1a y(yank) p (put) dd \u5220\u9664\u4e00\u884c p\u7c98\u8d34 Visual\u6a21\u5f0f\uff1a\u9009\u4e2d\u4e4b\u540e p\u7c98\u8d34 \u6587\u672c\u5bf9\u8c61\uff1ayiw \u590d\u5236\u4e00\u4e2a\u5355\u8bcd yy\u590d\u5236\u4e00\u884c vimrc :set autoindent \u8bbe\u7f6e\u81ea\u52a8\u7f29\u8fdb \u7c98\u8d34\u4ee3\u7801\u683c\u5f0f\u9519\u4e71\u89e3\u51b3\uff1a :set paste \u8bbe\u7f6e :set nopaste \u53d6\u6d88 Insert\u6a21\u5f0f ctrl + v/ command + v","title":"\u590d\u5236\u7c98\u8d34"},{"location":"Linux/Vim\u57fa\u672c\u64cd\u4f5c/#vim","text":"\u65e0\u540d\u5bc4\u5b58\u5668 dw->p \u526a\u5207\u7c98\u8d34\u5355\u8bcd x->p \u526a\u5207\u7c98\u8d34\u5b57\u7b26 \u6307\u5b9a\u5bc4\u5b58\u5668 \u201d{register} eg: \"ayiw \u590d\u5236\u5355\u8bcd\u5230\u5bc4\u5b58\u5668a\u4e2d \"bdd \u5220\u9664\u5f53\u524d\u884c\u5230\u5bc4\u5b58\u5668b\u4e2d :reg a \u67e5\u770ba\u5bc4\u5b58\u5668\u5185\u5bb9 \"ap \u7c98\u8d34\u5bc4\u5b58\u5668a\u4e2d\u7684\u5185\u5bb9 \"\"\u65e0\u540d\u5bc4\u5b58\u5668\uff0c\u9ed8\u8ba4\u6a21\u5f0f \"0 \u5bc4\u5b58\u56680 \u5bc4\u5b58\u5668a-z \"+\u7cfb\u7edf\u526a\u5207\u677f \"% \u5f53\u524d\u6587\u4ef6\u540d :echo has(\"clipboard\") 1\u5219\u652f\u6301 :set clipboard=unname \u76f4\u63a5\u4f7f\u7528\u7cfb\u7edf\u526a\u5207\u677f \".\u4e0a\u4e00\u6b21\u63d2\u5165\u7684\u6587\u672c ctrl + r + :e! \u91cd\u65b0\u52a0\u8f7d\u4e0d\u4fdd\u5b58\u5f53\u524d\u6587\u4ef6","title":"Vim\u5bc4\u5b58\u5668"},{"location":"Linux/Vim\u57fa\u672c\u64cd\u4f5c/#vimmacro","text":"\u5f55\u5236\u64cd\u4f5c\uff0c\u56de\u653e\u64cd\u4f5c q\u5f55\u5236 q\u7ed3\u675f q{register} \u4fdd\u5b58\u5230\u5bc4\u5b58\u5668 @{register} \u56de\u653e\u64cd\u4f5c v \u6a21\u5f0f\u4e0b\u9009\u62e9 :normal @a \u56de\u653e\u5b8f\u64cd\u4f5c eg: \u6bcf\u884c\u524d\u540e\u52a0\" V \u5168\u9009\u884c G \u5168\u9009\u6587\u672c :normal I\" A\"","title":"Vim\u5b8fmacro\u6279\u91cf\u64cd\u4f5c"},{"location":"Linux/Vim\u57fa\u672c\u64cd\u4f5c/#vim_1","text":"\u666e\u901a\u5173\u952e\u5b57 \u5f53\u524d\u7f13\u51b2\u533a\u5173\u952e\u5b57 \u5305\u542b\u6587\u4ef6\u540d\u5173\u952e\u5b57 \u6807\u7b7e\u6587\u4ef6\u5173\u952e\u5b57 \u5b57\u6bb5\u67e5\u627e \u6574\u884c\u8865\u5168 \u6587\u4ef6\u540d\u8865\u5168 \u5168\u80fdOmni\u8865\u5168 \u5e38\u7528\uff1a \u8865\u5168\u5355\u8bcd \u6587\u4ef6\u540d\u8865\u5168 \u8865\u5168\u4ee3\u7801\uff0c\u9700\u5f00\u542f\u6587\u4ef6\u7c7b\u578b\u68c0\u67e5\uff0c\u5b89\u88c5\u63d2\u4ef6 syntax on :set nu :set indent :r! echo % \u6587\u4ef6\u540d :r! echo %:p \u6587\u4ef6\u8def\u5f84","title":"Vim\u4ee3\u7801\u8865\u5168"},{"location":"Linux/Vim\u57fa\u672c\u64cd\u4f5c/#_8","text":":colorscheme \u663e\u793a\u5f53\u524d\u4e3b\u9898\u914d\u8272 \u9ed8\u8ba4default :colorscheme \u663e\u793a\u6240\u6709\u914d\u8272 :colorscheme \u914d\u8272\u540d \u4fee\u6539\u914d\u8272 $ vim duck.go duck.py -O # \u4e24\u4e2a\u7a97\u53e3\u6253\u5f00 \u6301\u4e45\u5316\u914d\u7f6e vim ~/.vimrc \u914d\u8272\u65b9\u6848 hybrid Monokai \u4e0b\u8f7d\u914d\u8272\u65b9\u6848\u62f7\u8d1d\u5230\u6587\u4ef6\u5939 mkdir ~/.vim/colors vim\u63d2\u4ef6\uff1ahttps://github.com/flazz/vim-colorschemes","title":"\u66f4\u6362\u914d\u8272"},{"location":"Linux/Vim\u57fa\u672c\u64cd\u4f5c/#vim_2","text":"\u6301\u4e45\u5316\u914d\u7f6e Linux/Unix vim ~/.vimrc windows vim $MYVIMRC \u73af\u5883\u53d8\u91cf \u5e38\u7528\u8bbe\u7f6e :set nu # \u8bbe\u7f6e\u884c\u53f7 colorscheme hybrid # \u8bbe\u7f6e\u4e3b\u9898 vim\u6620\u5c04 noremap w :w \u4fdd\u5b58\u6587\u4ef6 \u81ea\u5b9a\u4e49vimscript\u51fd\u6570 \u548c\u63d2\u4ef6\u914d\u7f6e \" \u5e38\u7528\u8bbe\u7f6e\uff0c\u8fd9\u662f\u6ce8\u91ca \" \u8bbe\u7f6e\u884c\u53f7 set number \" \u8bbe\u7f6e\u4e3b\u9898 colorscheme hybrid \" \u6309F2\u8fdb\u5165\u7c98\u8d34\u6a21\u5f0f set pasttoggle =< F2 > \" \u9ad8\u4eae\u641c\u7d22 set hlsearch \" \u8bbe\u7f6e\u6298\u53e0\u65b9\u5f0f set foldmethod = indent \" \u4e00\u4e9b\u65b9\u4fbf\u7684\u6620\u5c04 let mapleader = ',' let g : mapleader = ',' \" \u4f7f\u7528 jj \u8fdb\u5165 normal \u6a21\u5f0f `^\u4e0a\u4e00\u6b21\u63d2\u5165\u70b9 inoremap jj < Esc > ` ^ \" \u4f7f\u7528 leader+w \u76f4\u63a5\u4fdd\u5b58 inoremap < leader > w < Esc >: w < cr > noremap < leader > W : w < cr > \" \u5207\u6362 buffer nnoremap < silent > [ b : bprevious < CR > nnoremap < silent > [ n : bnext < CR > \" \u5207\u6362\u7a97\u53e3 noremap < C - h > < C - w > h noremap < C - j > < C - w > j noremap < C - k > < C - w > k noremap < C - l > < C - w > l \" sudo to write cnoremap W !! w ! sudo tee % >/ dev / null \" json\u683c\u5f0f\u5316 com ! FormatJSON %! python3 - m json . tool","title":"vim\u914d\u7f6e"},{"location":"Linux/Vim\u57fa\u672c\u64cd\u4f5c/#_9","text":"\u8bbe\u7f6eleader let mapleader = \",\" \u91cd\u542fvim\u6216source\u751f\u6548 :source ~/.vimrc","title":"\u6620\u5c04"},{"location":"Linux/Vim\u57fa\u672c\u64cd\u4f5c/#_10","text":"\u811a\u672c\u8bed\u8a00 vimscrip \u67e5\u770b\u914d\u7f6e\u9009\u9879 :h option-list \u81ea\u5b9a\u4e49\u51fd\u6570 func SetTitle () if & filetype == ' python ' call setline ( 1 , \" \\#!/usr/bin/env python \" ) call setline ( 2 , \" \\# -*- coding:utf-8 -*- \" ) normal G normal o normal o call setline ( 5 , \" if __name__ == '__main__': \" ) call setline ( 6 , \" pass \" ) endfunc github: vim-go-tutoria \u5f00\u6e90\u6587\u4ef6\uff1adotfiles","title":"\u63d2\u4ef6\u811a\u672c"},{"location":"Linux/Vim\u57fa\u672c\u64cd\u4f5c/#vim_3","text":":map - x # \u5c06-\u6620\u5c04\u4e3ax :map viw \u7a7a\u683c\u6620\u5c04\u4e3a\u9009\u4e2d\u6574\u4e2a\u5355\u8bcd :map dd \u53ef\u4ee5\u4f7f\u7528ctrl+d\u6267\u884cdd\u64cd\u4f5c :unmap - \u5220\u9664\u6620\u5c04 \u6a21\u5f0f nmap normal vmap visual imap insert v \u9009\u4e2d U/u \u8f6c\u5927\u5c0f\u5199 :imap ddi # insert\u6a21\u5f0f\u4e0b\u5220\u9664\u4e00\u884c nnoremap n no re map normal\u6a21\u5f0f\u4e0b\uff0c\u975e\u9012\u5f52\u6620\u5c04\uff08\u4efb\u4f55\u65f6\u5019\u90fd\u5e94\u8be5\u4f7f\u7528\uff09 \u300a\u7b28\u529e\u6cd5\u5b66vimscript\u300b vim8 Neovim","title":"vim\u6620\u5c04"},{"location":"Linux/Vim\u63d2\u4ef6/","text":"Vim\u63d2\u4ef6 vimscript\u8bed\u8a00\u7f16\u5199\u529f\u80fd\u6269\u5c55 \u63d2\u4ef6\u7ba1\u7406\u5668 vim-plug vundle pathogen dein.vim volt \u63a8\u8350 vim-plug https://github.com/junegunn/vim-plug \u5b89\u88c5\u5f00\u5c4f\u63d2\u4ef6 vim-startify https://github.com/mhinz/vim-startify \u4fee\u6539~/.vimrc call plug # begin ( ' ~/.vim/plugged ' ) Plug ' mhinz/vim-startify ' call plug # end () \u4fdd\u5b58:w \u91cd\u542fvim\u6216\u8005 source ~/.vimrc \u6267\u884c:PlugInstall \u91cd\u65b0\u6253\u5f00vim\u5c31\u53ef\u4ee5\u770b\u5230\u6548\u679c :qa # \u9000\u51fa\u6240\u6709\u7a97\u53e3 \u641c\u7d22vim\u63d2\u4ef6 nerdtree python-mode http://www.vimawesome.com \u7f8e\u5316\u63d2\u4ef6 \u542f\u52a8\u754c\u9762 vim-startify: https://github.com/mhinz/vim-startify \u72b6\u6001\u680f\u7f8e\u5316 vim-airline https://github.com/vim-airline/vim-airline \u589e\u52a0\u4ee3\u7801\u7f29\u8fdb indentline https://github.com/Yggdroot/indentLine \u914d\u8272 vim-hybrid https://github.com/w0ng/vim-hybrid solarized https://github.com/altercation/solarized gruvbox https://github.com/morhetz/gruvbox :set background=dark :colorscheme hybird \u6587\u4ef6\u76ee\u5f55\u548c\u641c\u7d22\u63d2\u4ef6 nerdtree https://github.com/scrooloose/nerdtree autocmd vimenter * NERDTree \u63a8\u8350\uff1a nnoremap :NERDTreeToggle \u5207\u6362 ctrl + w p \u6587\u4ef6\u641c\u7d22 ctrip https://github.com/kien/ctrlp.vim ctrl + p \u6587\u4ef6\u79fb\u52a8 eazymotion https://github.com/easymotion/vim-easymotion nmap ss (easymotion-s2) \u6210\u5bf9\u7f16\u8f91 vim-surround https://github.com/tpope/vim-surround ds delete surround cs change surround ys you surround \u6a21\u7cca\u641c\u7d22\u548c\u66ff\u6362 fzf.vim https://github.com/junegunn/fzf.vim \u641c\u7d22\u5b57\u7b26\u4e32 ag \u641c\u7d22\u6587\u4ef6 files far.vim https://github.com/brooth/far.vim vim-go golang\u63d2\u4ef6 https://github.com/fatih/vim-go ctrl + o Python-mode https://github.com/python-mode/python-mode \u8865\u5168 \u8df3\u8f6c \u91cd\u6784 \u683c\u5f0f\u5316 \u6d4f\u89c8\u4ee3\u7801 vim tagbar \u4ee3\u7801\u5927\u7eb2 https://github.com/majutsushi/tagbar vim-interestingwords \u5355\u8bcd\u9ad8\u4eae https://github.com/lfv89/vim-interestingwords \u4ee3\u7801\u8865\u5168 deoplete.nvim https://github.com/Shougo/deoplete.nvim coc.vim https://github.com/msanders/cocoa.vim \u4ee3\u7801\u683c\u5f0f\u5316\u4e0e\u9759\u6001\u68c0\u67e5 golint\u3001pylint\u3001eslint neoformat https://github.com/sbdchd/neoformat ale https://github.com/w0rp/ale \u5feb\u901f\u6ce8\u91ca vim-commentary https://github.com/tpope/vim-commentary vim+git fugitive https://github.com/tpope/vim-fugitive \u53d8\u66f4\u67e5\u770b vim-gitgutter https://github.com/airblade/vim-gitgutter gv.vim https://github.com/junegunn/gv.vim \u67e5\u627e\u63d2\u4ef6 vimawesome Tmux \u7ec8\u7aef\u590d\u7528\uff0c\u5206\u5c4f ctrl + b + : vim\u5d4c\u5165\u5f00\u53d1\u5de5\u5546\u5c40 neovim \u5f02\u6b65\u652f\u6301 \u5f00\u6e90\u914d\u7f6e Spacevim PegasusWang TODO\uff1a practical vim \u7b28\u65b9\u6cd5\u5b66\u4e60vim vim\u63d2\u4ef6","title":"Vim\u63d2\u4ef6"},{"location":"Linux/Vim\u63d2\u4ef6/#vim","text":"vimscript\u8bed\u8a00\u7f16\u5199\u529f\u80fd\u6269\u5c55 \u63d2\u4ef6\u7ba1\u7406\u5668 vim-plug vundle pathogen dein.vim volt \u63a8\u8350 vim-plug https://github.com/junegunn/vim-plug \u5b89\u88c5\u5f00\u5c4f\u63d2\u4ef6 vim-startify https://github.com/mhinz/vim-startify \u4fee\u6539~/.vimrc call plug # begin ( ' ~/.vim/plugged ' ) Plug ' mhinz/vim-startify ' call plug # end () \u4fdd\u5b58:w \u91cd\u542fvim\u6216\u8005 source ~/.vimrc \u6267\u884c:PlugInstall \u91cd\u65b0\u6253\u5f00vim\u5c31\u53ef\u4ee5\u770b\u5230\u6548\u679c :qa # \u9000\u51fa\u6240\u6709\u7a97\u53e3","title":"Vim\u63d2\u4ef6"},{"location":"Linux/Vim\u63d2\u4ef6/#vim_1","text":"nerdtree python-mode http://www.vimawesome.com","title":"\u641c\u7d22vim\u63d2\u4ef6"},{"location":"Linux/Vim\u63d2\u4ef6/#_1","text":"\u542f\u52a8\u754c\u9762 vim-startify: https://github.com/mhinz/vim-startify \u72b6\u6001\u680f\u7f8e\u5316 vim-airline https://github.com/vim-airline/vim-airline \u589e\u52a0\u4ee3\u7801\u7f29\u8fdb indentline https://github.com/Yggdroot/indentLine \u914d\u8272 vim-hybrid https://github.com/w0ng/vim-hybrid solarized https://github.com/altercation/solarized gruvbox https://github.com/morhetz/gruvbox :set background=dark :colorscheme hybird","title":"\u7f8e\u5316\u63d2\u4ef6"},{"location":"Linux/Vim\u63d2\u4ef6/#_2","text":"nerdtree https://github.com/scrooloose/nerdtree autocmd vimenter * NERDTree \u63a8\u8350\uff1a nnoremap :NERDTreeToggle \u5207\u6362 ctrl + w p \u6587\u4ef6\u641c\u7d22 ctrip https://github.com/kien/ctrlp.vim ctrl + p","title":"\u6587\u4ef6\u76ee\u5f55\u548c\u641c\u7d22\u63d2\u4ef6"},{"location":"Linux/Vim\u63d2\u4ef6/#_3","text":"eazymotion https://github.com/easymotion/vim-easymotion nmap ss (easymotion-s2)","title":"\u6587\u4ef6\u79fb\u52a8"},{"location":"Linux/Vim\u63d2\u4ef6/#_4","text":"vim-surround https://github.com/tpope/vim-surround ds delete surround cs change surround ys you surround","title":"\u6210\u5bf9\u7f16\u8f91"},{"location":"Linux/Vim\u63d2\u4ef6/#_5","text":"fzf.vim https://github.com/junegunn/fzf.vim \u641c\u7d22\u5b57\u7b26\u4e32 ag \u641c\u7d22\u6587\u4ef6 files far.vim https://github.com/brooth/far.vim","title":"\u6a21\u7cca\u641c\u7d22\u548c\u66ff\u6362"},{"location":"Linux/Vim\u63d2\u4ef6/#vim-go","text":"golang\u63d2\u4ef6 https://github.com/fatih/vim-go ctrl + o","title":"vim-go"},{"location":"Linux/Vim\u63d2\u4ef6/#python-mode","text":"https://github.com/python-mode/python-mode \u8865\u5168 \u8df3\u8f6c \u91cd\u6784 \u683c\u5f0f\u5316","title":"Python-mode"},{"location":"Linux/Vim\u63d2\u4ef6/#_6","text":"vim tagbar \u4ee3\u7801\u5927\u7eb2 https://github.com/majutsushi/tagbar vim-interestingwords \u5355\u8bcd\u9ad8\u4eae https://github.com/lfv89/vim-interestingwords","title":"\u6d4f\u89c8\u4ee3\u7801"},{"location":"Linux/Vim\u63d2\u4ef6/#_7","text":"deoplete.nvim https://github.com/Shougo/deoplete.nvim coc.vim https://github.com/msanders/cocoa.vim","title":"\u4ee3\u7801\u8865\u5168"},{"location":"Linux/Vim\u63d2\u4ef6/#_8","text":"golint\u3001pylint\u3001eslint neoformat https://github.com/sbdchd/neoformat ale https://github.com/w0rp/ale","title":"\u4ee3\u7801\u683c\u5f0f\u5316\u4e0e\u9759\u6001\u68c0\u67e5"},{"location":"Linux/Vim\u63d2\u4ef6/#_9","text":"vim-commentary https://github.com/tpope/vim-commentary","title":"\u5feb\u901f\u6ce8\u91ca"},{"location":"Linux/Vim\u63d2\u4ef6/#vimgit","text":"fugitive https://github.com/tpope/vim-fugitive \u53d8\u66f4\u67e5\u770b vim-gitgutter https://github.com/airblade/vim-gitgutter gv.vim https://github.com/junegunn/gv.vim","title":"vim+git"},{"location":"Linux/Vim\u63d2\u4ef6/#_10","text":"vimawesome","title":"\u67e5\u627e\u63d2\u4ef6"},{"location":"Linux/Vim\u63d2\u4ef6/#tmux","text":"\u7ec8\u7aef\u590d\u7528\uff0c\u5206\u5c4f ctrl + b + :","title":"Tmux"},{"location":"Linux/Vim\u63d2\u4ef6/#vim_2","text":"neovim \u5f02\u6b65\u652f\u6301","title":"vim\u5d4c\u5165\u5f00\u53d1\u5de5\u5546\u5c40"},{"location":"Linux/Vim\u63d2\u4ef6/#_11","text":"Spacevim PegasusWang TODO\uff1a practical vim \u7b28\u65b9\u6cd5\u5b66\u4e60vim vim\u63d2\u4ef6","title":"\u5f00\u6e90\u914d\u7f6e"},{"location":"Linux/ftp/","text":"\u5b89\u88c5ftp\u670d\u52a1 # \u68c0\u67e5\u662f\u5426\u5b89\u88c5vsftp rpm -qa | grep vsftpd # \u5b89\u88c5vsftpd yum install vsftpd -y # \u542f\u52a8\u670d\u52a1 service vsftpd start \uff08\u542f\u52a8\uff09 service vsftpd restart \uff08\u91cd\u542f\uff09 service vsftpd stop \uff08\u505c\u6b62\uff09 # \u5b89\u88c5ftp\u5ba2\u6237\u7aef yum -y install ftp # \u767b\u5f55\u6d4b\u8bd5 \u7528\u6237\u540d\uff1aftp \u5bc6\u7801\u968f\u610f\u8f93\u5165\uff0c \u9ed8\u8ba4\u5141\u8bb8\u533f\u540d ftp localhost \u914d\u7f6eftp \u53d6\u6d88\u533f\u540d\u767b\u5f55 vi / etc / vsftpd / vsftpd . conf # anonymous_enable = YES anonymous_enable = NO \u521b\u5efa\u7528\u6237 groupadd ftpgroups useradd - d / home / ftp / ftpweb - g ftpgroups ftpweb passwd ftpweb usermod - s / sbin / nologin ftpweb # \u4e0d\u5141\u8bb8\u7528\u4e8e\u7528\u6237\u767b\u5f55 \u4f7f\u7528ftp\u5de5\u5177\u767b\u5f55, \u5982\u679c\u62a5\u9519 ftp\u8fde\u63a5 : \u8bfb\u53d6\u76ee\u5f55\u5217\u8868\u5931\u8d25 \u4fee\u6539\u914d\u7f6e\uff1a\u4e3b\u52a8\u4f20\u8f93 \u53c2\u8003 Linux\u642d\u5efaFTP\u670d\u52a1\u5668\uff08\u8be6\u60c5\u7248\uff1a\u9650\u5236\u76ee\u5f55\u3001\u9632\u706b\u5899\u8bbe\u7f6e\uff09 \u914d\u7f6e\u53ea\u80fd\u8bbf\u95ee\u81ea\u8eab\u76ee\u5f55 vim / etc / vsftpd / vsftpd . conf chroot_list_enable = YES # ( default follows ) chroot_list_file =/ etc / vsftpd / chroot_list # \uff08\u4e0e conf\u6587\u4ef6\u5728\u540c\u4e00\u76ee\u5f55\u4e0b \uff09 # \u8fd9\u53e5\u53ef\u89e3\u51b3 \"500 OOPS: vsftpd: refusing to run with writable root inside chroot()\" \u95ee\u9898 allow_writeable_chroot = YES # \u6dfb\u52a0\u7528\u6237 vim / etc / vsftpd . chroot_list ftpweb \u53c2\u8003 ftp\u9650\u5236\u8bbf\u95ee\u5176\u4ed6\u76ee\u5f55 \u4fee\u6539\u8bbf\u95ee\u8def\u5f84 local_root =/ home / xxx / xxx","title":"Ftp"},{"location":"Linux/ftp/#ftp","text":"# \u68c0\u67e5\u662f\u5426\u5b89\u88c5vsftp rpm -qa | grep vsftpd # \u5b89\u88c5vsftpd yum install vsftpd -y # \u542f\u52a8\u670d\u52a1 service vsftpd start \uff08\u542f\u52a8\uff09 service vsftpd restart \uff08\u91cd\u542f\uff09 service vsftpd stop \uff08\u505c\u6b62\uff09 # \u5b89\u88c5ftp\u5ba2\u6237\u7aef yum -y install ftp # \u767b\u5f55\u6d4b\u8bd5 \u7528\u6237\u540d\uff1aftp \u5bc6\u7801\u968f\u610f\u8f93\u5165\uff0c \u9ed8\u8ba4\u5141\u8bb8\u533f\u540d ftp localhost","title":"\u5b89\u88c5ftp\u670d\u52a1"},{"location":"Linux/ftp/#ftp_1","text":"\u53d6\u6d88\u533f\u540d\u767b\u5f55 vi / etc / vsftpd / vsftpd . conf # anonymous_enable = YES anonymous_enable = NO \u521b\u5efa\u7528\u6237 groupadd ftpgroups useradd - d / home / ftp / ftpweb - g ftpgroups ftpweb passwd ftpweb usermod - s / sbin / nologin ftpweb # \u4e0d\u5141\u8bb8\u7528\u4e8e\u7528\u6237\u767b\u5f55 \u4f7f\u7528ftp\u5de5\u5177\u767b\u5f55, \u5982\u679c\u62a5\u9519 ftp\u8fde\u63a5 : \u8bfb\u53d6\u76ee\u5f55\u5217\u8868\u5931\u8d25 \u4fee\u6539\u914d\u7f6e\uff1a\u4e3b\u52a8\u4f20\u8f93 \u53c2\u8003 Linux\u642d\u5efaFTP\u670d\u52a1\u5668\uff08\u8be6\u60c5\u7248\uff1a\u9650\u5236\u76ee\u5f55\u3001\u9632\u706b\u5899\u8bbe\u7f6e\uff09 \u914d\u7f6e\u53ea\u80fd\u8bbf\u95ee\u81ea\u8eab\u76ee\u5f55 vim / etc / vsftpd / vsftpd . conf chroot_list_enable = YES # ( default follows ) chroot_list_file =/ etc / vsftpd / chroot_list # \uff08\u4e0e conf\u6587\u4ef6\u5728\u540c\u4e00\u76ee\u5f55\u4e0b \uff09 # \u8fd9\u53e5\u53ef\u89e3\u51b3 \"500 OOPS: vsftpd: refusing to run with writable root inside chroot()\" \u95ee\u9898 allow_writeable_chroot = YES # \u6dfb\u52a0\u7528\u6237 vim / etc / vsftpd . chroot_list ftpweb \u53c2\u8003 ftp\u9650\u5236\u8bbf\u95ee\u5176\u4ed6\u76ee\u5f55 \u4fee\u6539\u8bbf\u95ee\u8def\u5f84 local_root =/ home / xxx / xxx","title":"\u914d\u7f6eftp"},{"location":"Linux/linux/","text":"\u542f\u52a8Linux 5\u4e2a\u9636\u6bb5 - \u5185\u6838\u7684\u5f15\u5bfc - \u8fd0\u884c init - \u7cfb\u7edf\u521d\u59cb\u5316 - \u5efa\u7acb\u7ec8\u7aef - \u7528\u6237\u767b\u5f55\u7cfb\u7edf \u5b9e\u9645\u811a\u672c /etc/rc.d/init.d/\u76ee\u5f55 \uff08rc.d: runlevel control directory\uff09 \u94fe\u63a5\u6587\u4ef6 /etc/rc.d/rc5.d/ S \u5f00\u5934 \u4ee5start\u53c2\u6570\u6765\u8fd0\u884c K \u6253\u5934 \u4ee5stop\u4e3a\u53c2\u6570\u505c\u6b62, \u7136\u540e\u518d\u91cd\u65b0\u8fd0\u884c S\uff08start\uff09\u3001K\uff08kill,stop) \u6216D\uff08disable\uff09 chkconfig shutdown # \u5173\u673a reboot # \u91cd\u542f = shutdown \u2013r now halt # \u5173\u95ed\u7cfb\u7edf = shutdown \u2013h now = poweroff \u7ec8\u7aef\u5229\u7528ssh\u767b\u5f55\u8fdc\u7a0b\u670d\u52a1\u5668 yum install ssh # \u5b89\u88c5ssh service sshd start # \u542f\u52a8ss ssh -p 50022 my@127.0.0.1 # \u767b\u5f55\u8fdc\u7a0b\u670d\u52a1\u5668 p\u7aef\u53e3 \u76ee\u5f55 /etc\uff1a\u7cfb\u7edf\u914d\u7f6e\u6587\u4ef6 /bin\uff1a\u7a0b\u5e8f\u548c\u6307\u4ee4 /tmp\uff1a\u4e34\u65f6\u6587\u4ef6 /opt\uff1a\u5b89\u88c5\u989d\u5916\u8f6f\u4ef6 \u7279\u6b8a\u76ee\u5f55 ~\uff1a # \u5bb6\u76ee\u5f55 -\uff1a # \u4e0a\u4e00\u4e2a\u76ee\u5f55 . or ./\uff1a # \u5f53\u524d\u76ee\u5f55 .. or ../ \uff1a # \u4e0a\u4e00\u5c42\u76ee\u5f55 \u4e00\u4e2a\u70b9 . \u5f00\u59cb: # \u9690\u85cf\u76ee\u5f55\u6216\u6587\u4ef6 \u76ee\u5f55\u7684\u5e38\u7528\u547d\u4ee4 ls : \u5217\u51fa\u76ee\u5f55 - a \uff1a\u5168\u90e8\u7684\u6587\u4ef6 - d \uff1a\u4ec5\u5217\u51fa\u76ee\u5f55\u672c\u8eab - l \uff1a\u957f\u6570\u636e\u4e32\u5217\u51fa cd \uff1a\u5207\u6362\u76ee\u5f55 Change Directory pwd \uff1a\u663e\u793a\u76ee\u524d\u7684\u76ee\u5f55 Print Working Directory - P \uff1a\u663e\u793a\u51fa\u786e\u5b9e\u7684\u8def\u5f84 mkdir \uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u76ee\u5f55 make directory - m \uff1a\u914d\u7f6e\u6587\u4ef6\u7684\u6743\u9650 - p \uff1a\u9012\u5f52\u521b\u5efa rmdir \uff1a\u5220\u9664\u4e00\u4e2a\u7a7a\u7684\u76ee\u5f55 - p \uff1a\u9012\u5f52\u5220\u9664 cp : \u590d\u5236\u6587\u4ef6\u6216\u76ee\u5f55 - r \uff1a\u9012\u5f52\u6301\u7eed\u590d\u5236 - p \uff1a\u8fde\u540c\u6587\u4ef6\u7684\u5c5e\u6027 - i : \u8986\u76d6\u65f6\u5148\u8be2\u95ee ( \u5e38\u7528 ) rm : \u79fb\u9664\u6587\u4ef6\u6216\u76ee\u5f55 - f \uff1a force - i \uff1a\u5220\u9664\u524d\u8be2\u95ee ( \u5e38\u7528 ) - r \uff1a\u9012\u5f52\u5220\u9664 mv : \u79fb\u52a8\u6587\u4ef6\u4e0e\u76ee\u5f55\uff0c\u6216\u4fee\u6539\u6587\u4ef6\u4e0e\u76ee\u5f55\u7684\u540d\u79f0 - f \uff1a force \u5f3a\u5236 - i \uff1a\u8be2\u95ee\u662f\u5426\u8986\u76d6 - u \uff1a source \u6bd4\u8f83\u65b0\u5347\u7ea7 ( update ) \u6587\u4ef6 \u5e38\u89c1\u6587\u4ef6\u7c7b\u578b d \u76ee\u5f55 - \u6587\u4ef6 l \u94fe\u63a5\u6587\u6863 ( link file ) \u4fee\u6539\u6240\u5c5e chown [ \u2013R ] \u5c5e\u4e3b\u540d \u6587\u4ef6\u540d # \u66f4\u6539\u6587\u4ef6\u5c5e\u4e3b chown [ -R ] \u5c5e\u4e3b\u540d\uff1a\u5c5e\u7ec4\u540d \u6587\u4ef6\u540d # \u540c\u65f6\u66f4\u6539\u6587\u4ef6\u5c5e\u7ec4 chgrp [ -R ] \u5c5e\u7ec4\u540d \u6587\u4ef6\u540d # \u66f4\u6539\u6587\u4ef6\u5c5e\u7ec4 -R : \u8fdb\u884c\u9012\u5f52(recursive) \u4fee\u6539\u6587\u4ef6\u5c5e\u6027 chmod [-R] ugo \u6587\u4ef6\u6216\u76ee\u5f55 r:4 + w:2 + x:1 \uff08read/write/execute\uff09 eg: $ chmod 770 1 .txt -rwxrwx--- chmod u=rwx,g=rx,o=r \u6587\u4ef6\u540d \u8eab\u4efd u\u3001g\u3001o\u3001a\uff08user\u3001 group\u3001others\u3001all\uff09 \u64cd\u4f5c +(\u52a0\u5165)\u3001-(\u9664\u53bb)\u3001=(\u8bbe\u5b9a) \u6743\u9650 r\u3001w\u3001x eg: $ chmod u = rw 1 .txt -rw-rwx--- \u6587\u4ef6\u5185\u5bb9\u67e5\u770b cat \u7531\u7b2c\u4e00\u884c\u5f00\u59cb\u663e\u793a\u6587\u4ef6\u5185\u5bb9 - n \uff1a \u5217\u5370\u51fa\u884c\u53f7 tac \u4ece\u6700\u540e\u4e00\u884c\u5f00\u59cb\u663e\u793a nl \u663e\u793a\u7684\u65f6\u5019 \uff0c \u987a\u9053\u8f93\u51fa\u884c\u53f7 \uff01 more \u4e00\u9875\u4e00\u9875\u7684\u663e\u793a\u6587\u4ef6\u5185\u5bb9 \u7a7a\u767d\u952e ( space ) \uff1a \u4ee3\u8868\u5411\u4e0b\u7ffb\u4e00\u9875 \uff1b Enter \uff1a \u4ee3\u8868\u5411\u4e0b\u7ffb \u300e \u4e00\u884c \u300f\uff1b / \u5b57\u4e32 \uff1a \u4ee3\u8868\u5728\u8fd9\u4e2a\u663e\u793a\u7684\u5185\u5bb9\u5f53\u4e2d \uff0c \u5411\u4e0b\u641c\u5bfb \u300e \u5b57\u4e32 \u300f \u8fd9\u4e2a\u5173\u952e\u5b57 \uff1b : f \uff1a \u7acb\u523b\u663e\u793a\u51fa\u6863\u540d\u4ee5\u53ca\u76ee\u524d\u663e\u793a\u7684\u884c\u6570 \uff1b q \uff1a \u4ee3\u8868\u7acb\u523b\u79bb\u5f00 more \uff0c \u4e0d\u518d\u663e\u793a\u8be5\u6587\u4ef6\u5185\u5bb9 \u3002 b \u6216 [ ctrl ]- b \uff1a \u4ee3\u8868\u5f80\u56de\u7ffb\u9875 \uff0c \u4e0d\u8fc7\u8fd9\u52a8\u4f5c\u53ea\u5bf9\u6587\u4ef6\u6709\u7528 \uff0c \u5bf9\u7ba1\u7ebf\u65e0\u7528 \u3002 less \u4e0e more \u7c7b\u4f3c \uff0c \u4f46\u662f\u6bd4 more \u66f4\u597d\u7684\u662f \uff0c \u4ed6\u53ef\u4ee5\u5f80\u524d\u7ffb\u9875 \uff01 \u7a7a\u767d\u952e \uff1a \u5411\u4e0b\u7ffb\u52a8\u4e00\u9875 \uff1b [ pagedown ] \uff1a \u5411\u4e0b\u7ffb\u52a8\u4e00\u9875 \uff1b [ pageup ] \uff1a \u5411\u4e0a\u7ffb\u52a8\u4e00\u9875 \uff1b / \u5b57\u4e32 \uff1a \u5411\u4e0b\u641c\u5bfb \u300e \u5b57\u4e32 \u300f \u7684\u529f\u80fd \uff1b ? \u5b57\u4e32 \uff1a \u5411\u4e0a\u641c\u5bfb \u300e \u5b57\u4e32 \u300f \u7684\u529f\u80fd \uff1b n \uff1a \u91cd\u590d\u524d\u4e00\u4e2a\u641c\u5bfb ( \u4e0e / \u6216 ? \u6709\u5173 \uff01 ) N \uff1a \u53cd\u5411\u7684\u91cd\u590d\u524d\u4e00\u4e2a\u641c\u5bfb ( \u4e0e / \u6216 ? \u6709\u5173 \uff01 ) q \uff1a \u79bb\u5f00 less \u8fd9\u4e2a\u7a0b\u5e8f \uff1b head \u53ea\u770b\u5934\u51e0\u884c - n \uff1a \u540e\u9762\u63a5\u6570\u5b57 \uff0c \u4ee3\u8868\u663e\u793a\u51e0\u884c\u7684\u610f\u601d tail \u53ea\u770b\u5c3e\u5df4\u51e0\u884c - n \uff1a \u540e\u9762\u63a5\u6570\u5b57 \uff0c \u4ee3\u8868\u663e\u793a\u51e0\u884c\u7684\u610f\u601d - f \uff1a \u8868\u793a\u6301\u7eed\u4fa6\u6d4b\u540e\u9762\u6240\u63a5\u7684\u6863\u540d \uff0c \u8981\u7b49\u5230\u6309\u4e0b [ ctrl ]- c\u624d\u4f1a\u7ed3\u675ftail\u7684\u4fa6\u6d4b Linux \u94fe\u63a5 $ ln f1 f2 # \u786c\u94fe\u63a5\uff08Hard Link\uff09f1 \u548cf2\u6307\u5411\u4e86\u540c\u4e00\u4e2a\u6587\u4ef6\u8282\u70b9 $ ln -s f1 f3 # \u7b26\u53f7\u94fe\u63a5\uff08Symbolic Link\uff09 \u8f6f\u94fe\u63a5\u6587\u4ef6\u7c7b\u4f3c\u4e8e Windows \u7684\u5feb\u6377\u65b9\u5f0f # f3 -> f1 -> real file # f2 -> real file \u7528\u6237\u8d26\u53f7\u7684\u7ba1\u7406 useradd \u9009\u9879 \u7528\u6237\u540d # \u6dfb\u52a0\u65b0\u7684\u7528\u6237\u8d26\u53f7 -c comment \u6307\u5b9a\u4e00\u6bb5\u6ce8\u91ca\u6027\u63cf\u8ff0 -g \u7528\u6237\u7ec4 \u6307\u5b9a\u7528\u6237\u6240\u5c5e\u7684\u7528\u6237\u7ec4 -G \u6240\u5c5e\u7684\u9644\u52a0\u7ec4 userdel \u9009\u9879 \u7528\u6237\u540d # \u5220\u9664\u5e10\u53f7 -r\uff0c\u7528\u6237\u7684\u4e3b\u76ee\u5f55\u4e00\u8d77\u5220\u9664 usermod \u9009\u9879 \u7528\u6237\u540d # \u4fee\u6539 cat /etc/passwd # \u67e5\u770b\u7528\u6237 cat /etc/shadow # \u67e5\u770b\u5bc6\u7801 passwd \u9009\u9879 \u7528\u6237\u540d # \u7528\u6237\u53e3\u4ee4\u7684\u7ba1\u7406 -l \u9501\u5b9a\u53e3\u4ee4\uff0c\u5373\u7981\u7528\u8d26\u53f7 -u \u53e3\u4ee4\u89e3\u9501 -d \u4f7f\u8d26\u53f7\u65e0\u53e3\u4ee4 -f \u5f3a\u8feb\u7528\u6237\u4e0b\u6b21\u767b\u5f55\u65f6\u4fee\u6539\u53e3\u4ee4 newgrp \u7528\u6237\u540d # \u5207\u6362\u7528\u6237\u7ec4 \u4f2a\u7528\u6237\u4e0d\u80fd\u767b\u5f55 \u7528\u6237\u7ec4\u7684\u7ba1\u7406 cat /etc/group # \u67e5\u770b\u7528\u6237\u7ec4 groupadd \u9009\u9879 \u7528\u6237\u7ec4 # \u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u7528\u6237\u7ec4 groupdel \u7528\u6237\u7ec4 # \u5220\u9664\u4e00\u4e2a\u5df2\u6709\u7684\u7528\u6237\u7ec4 groupmod \u9009\u9879 \u7528\u6237\u7ec4 # \u4fee\u6539\u7528\u6237\u7ec4 -n\u65b0\u7528\u6237\u7ec4 \u5c06\u7528\u6237\u7ec4\u7684\u540d\u5b57\u6539\u4e3a\u65b0\u540d\u5b57 \u78c1\u76d8\u7ba1\u7406 df -h [ \u76ee\u5f55\u6216\u6587\u4ef6\u540d ] # \u68c0\u67e5\u6587\u4ef6\u7cfb\u7edf\u7684\u78c1\u76d8\u7a7a\u95f4\u5360\u7528\u60c5\u51b5 du -hd 1 # \u6587\u4ef6\u548c\u76ee\u5f55\u78c1\u76d8\u4f7f\u7528\u7684\u7a7a\u95f4 mount /dev/hdc6 /mnt/hdc6 # \u78c1\u76d8\u6302\u8f7d umount /dev/hdc6 # \u78c1\u76d8\u5378\u9664 yum\u5e38\u7528\u547d\u4ee4 yum install <package_name> # \u5b89\u88c5\u8f6f\u4ef6 yum check-update # \u5217\u51fa\u6240\u6709\u53ef\u66f4\u65b0 yum update # \u66f4\u65b0\u6240\u6709\u8f6f\u4ef6 yum update <package_name> # \u66f4\u65b0\u8f6f\u4ef6 yum list # \u53ef\u5b89\u88dd\u7684\u8f6f\u4ef6 yum remove <package_name> # \u5220\u9664\u8f6f\u4ef6\u5305 yum search <keyword> # \u67e5\u627e\u8f6f\u4ef6\u5305 \u53c2\u8003 Linux \u6559\u7a0b-\u83dc\u9e1f\u6559\u7a0b","title":"\u542f\u52a8Linux"},{"location":"Linux/linux/#linux","text":"5\u4e2a\u9636\u6bb5 - \u5185\u6838\u7684\u5f15\u5bfc - \u8fd0\u884c init - \u7cfb\u7edf\u521d\u59cb\u5316 - \u5efa\u7acb\u7ec8\u7aef - \u7528\u6237\u767b\u5f55\u7cfb\u7edf \u5b9e\u9645\u811a\u672c /etc/rc.d/init.d/\u76ee\u5f55 \uff08rc.d: runlevel control directory\uff09 \u94fe\u63a5\u6587\u4ef6 /etc/rc.d/rc5.d/ S \u5f00\u5934 \u4ee5start\u53c2\u6570\u6765\u8fd0\u884c K \u6253\u5934 \u4ee5stop\u4e3a\u53c2\u6570\u505c\u6b62, \u7136\u540e\u518d\u91cd\u65b0\u8fd0\u884c S\uff08start\uff09\u3001K\uff08kill,stop) \u6216D\uff08disable\uff09 chkconfig shutdown # \u5173\u673a reboot # \u91cd\u542f = shutdown \u2013r now halt # \u5173\u95ed\u7cfb\u7edf = shutdown \u2013h now = poweroff","title":"\u542f\u52a8Linux"},{"location":"Linux/linux/#ssh","text":"yum install ssh # \u5b89\u88c5ssh service sshd start # \u542f\u52a8ss ssh -p 50022 my@127.0.0.1 # \u767b\u5f55\u8fdc\u7a0b\u670d\u52a1\u5668 p\u7aef\u53e3","title":"\u7ec8\u7aef\u5229\u7528ssh\u767b\u5f55\u8fdc\u7a0b\u670d\u52a1\u5668"},{"location":"Linux/linux/#_1","text":"/etc\uff1a\u7cfb\u7edf\u914d\u7f6e\u6587\u4ef6 /bin\uff1a\u7a0b\u5e8f\u548c\u6307\u4ee4 /tmp\uff1a\u4e34\u65f6\u6587\u4ef6 /opt\uff1a\u5b89\u88c5\u989d\u5916\u8f6f\u4ef6 \u7279\u6b8a\u76ee\u5f55 ~\uff1a # \u5bb6\u76ee\u5f55 -\uff1a # \u4e0a\u4e00\u4e2a\u76ee\u5f55 . or ./\uff1a # \u5f53\u524d\u76ee\u5f55 .. or ../ \uff1a # \u4e0a\u4e00\u5c42\u76ee\u5f55 \u4e00\u4e2a\u70b9 . \u5f00\u59cb: # \u9690\u85cf\u76ee\u5f55\u6216\u6587\u4ef6 \u76ee\u5f55\u7684\u5e38\u7528\u547d\u4ee4 ls : \u5217\u51fa\u76ee\u5f55 - a \uff1a\u5168\u90e8\u7684\u6587\u4ef6 - d \uff1a\u4ec5\u5217\u51fa\u76ee\u5f55\u672c\u8eab - l \uff1a\u957f\u6570\u636e\u4e32\u5217\u51fa cd \uff1a\u5207\u6362\u76ee\u5f55 Change Directory pwd \uff1a\u663e\u793a\u76ee\u524d\u7684\u76ee\u5f55 Print Working Directory - P \uff1a\u663e\u793a\u51fa\u786e\u5b9e\u7684\u8def\u5f84 mkdir \uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u76ee\u5f55 make directory - m \uff1a\u914d\u7f6e\u6587\u4ef6\u7684\u6743\u9650 - p \uff1a\u9012\u5f52\u521b\u5efa rmdir \uff1a\u5220\u9664\u4e00\u4e2a\u7a7a\u7684\u76ee\u5f55 - p \uff1a\u9012\u5f52\u5220\u9664 cp : \u590d\u5236\u6587\u4ef6\u6216\u76ee\u5f55 - r \uff1a\u9012\u5f52\u6301\u7eed\u590d\u5236 - p \uff1a\u8fde\u540c\u6587\u4ef6\u7684\u5c5e\u6027 - i : \u8986\u76d6\u65f6\u5148\u8be2\u95ee ( \u5e38\u7528 ) rm : \u79fb\u9664\u6587\u4ef6\u6216\u76ee\u5f55 - f \uff1a force - i \uff1a\u5220\u9664\u524d\u8be2\u95ee ( \u5e38\u7528 ) - r \uff1a\u9012\u5f52\u5220\u9664 mv : \u79fb\u52a8\u6587\u4ef6\u4e0e\u76ee\u5f55\uff0c\u6216\u4fee\u6539\u6587\u4ef6\u4e0e\u76ee\u5f55\u7684\u540d\u79f0 - f \uff1a force \u5f3a\u5236 - i \uff1a\u8be2\u95ee\u662f\u5426\u8986\u76d6 - u \uff1a source \u6bd4\u8f83\u65b0\u5347\u7ea7 ( update )","title":"\u76ee\u5f55"},{"location":"Linux/linux/#_2","text":"\u5e38\u89c1\u6587\u4ef6\u7c7b\u578b d \u76ee\u5f55 - \u6587\u4ef6 l \u94fe\u63a5\u6587\u6863 ( link file ) \u4fee\u6539\u6240\u5c5e chown [ \u2013R ] \u5c5e\u4e3b\u540d \u6587\u4ef6\u540d # \u66f4\u6539\u6587\u4ef6\u5c5e\u4e3b chown [ -R ] \u5c5e\u4e3b\u540d\uff1a\u5c5e\u7ec4\u540d \u6587\u4ef6\u540d # \u540c\u65f6\u66f4\u6539\u6587\u4ef6\u5c5e\u7ec4 chgrp [ -R ] \u5c5e\u7ec4\u540d \u6587\u4ef6\u540d # \u66f4\u6539\u6587\u4ef6\u5c5e\u7ec4 -R : \u8fdb\u884c\u9012\u5f52(recursive) \u4fee\u6539\u6587\u4ef6\u5c5e\u6027 chmod [-R] ugo \u6587\u4ef6\u6216\u76ee\u5f55 r:4 + w:2 + x:1 \uff08read/write/execute\uff09 eg: $ chmod 770 1 .txt -rwxrwx--- chmod u=rwx,g=rx,o=r \u6587\u4ef6\u540d \u8eab\u4efd u\u3001g\u3001o\u3001a\uff08user\u3001 group\u3001others\u3001all\uff09 \u64cd\u4f5c +(\u52a0\u5165)\u3001-(\u9664\u53bb)\u3001=(\u8bbe\u5b9a) \u6743\u9650 r\u3001w\u3001x eg: $ chmod u = rw 1 .txt -rw-rwx--- \u6587\u4ef6\u5185\u5bb9\u67e5\u770b cat \u7531\u7b2c\u4e00\u884c\u5f00\u59cb\u663e\u793a\u6587\u4ef6\u5185\u5bb9 - n \uff1a \u5217\u5370\u51fa\u884c\u53f7 tac \u4ece\u6700\u540e\u4e00\u884c\u5f00\u59cb\u663e\u793a nl \u663e\u793a\u7684\u65f6\u5019 \uff0c \u987a\u9053\u8f93\u51fa\u884c\u53f7 \uff01 more \u4e00\u9875\u4e00\u9875\u7684\u663e\u793a\u6587\u4ef6\u5185\u5bb9 \u7a7a\u767d\u952e ( space ) \uff1a \u4ee3\u8868\u5411\u4e0b\u7ffb\u4e00\u9875 \uff1b Enter \uff1a \u4ee3\u8868\u5411\u4e0b\u7ffb \u300e \u4e00\u884c \u300f\uff1b / \u5b57\u4e32 \uff1a \u4ee3\u8868\u5728\u8fd9\u4e2a\u663e\u793a\u7684\u5185\u5bb9\u5f53\u4e2d \uff0c \u5411\u4e0b\u641c\u5bfb \u300e \u5b57\u4e32 \u300f \u8fd9\u4e2a\u5173\u952e\u5b57 \uff1b : f \uff1a \u7acb\u523b\u663e\u793a\u51fa\u6863\u540d\u4ee5\u53ca\u76ee\u524d\u663e\u793a\u7684\u884c\u6570 \uff1b q \uff1a \u4ee3\u8868\u7acb\u523b\u79bb\u5f00 more \uff0c \u4e0d\u518d\u663e\u793a\u8be5\u6587\u4ef6\u5185\u5bb9 \u3002 b \u6216 [ ctrl ]- b \uff1a \u4ee3\u8868\u5f80\u56de\u7ffb\u9875 \uff0c \u4e0d\u8fc7\u8fd9\u52a8\u4f5c\u53ea\u5bf9\u6587\u4ef6\u6709\u7528 \uff0c \u5bf9\u7ba1\u7ebf\u65e0\u7528 \u3002 less \u4e0e more \u7c7b\u4f3c \uff0c \u4f46\u662f\u6bd4 more \u66f4\u597d\u7684\u662f \uff0c \u4ed6\u53ef\u4ee5\u5f80\u524d\u7ffb\u9875 \uff01 \u7a7a\u767d\u952e \uff1a \u5411\u4e0b\u7ffb\u52a8\u4e00\u9875 \uff1b [ pagedown ] \uff1a \u5411\u4e0b\u7ffb\u52a8\u4e00\u9875 \uff1b [ pageup ] \uff1a \u5411\u4e0a\u7ffb\u52a8\u4e00\u9875 \uff1b / \u5b57\u4e32 \uff1a \u5411\u4e0b\u641c\u5bfb \u300e \u5b57\u4e32 \u300f \u7684\u529f\u80fd \uff1b ? \u5b57\u4e32 \uff1a \u5411\u4e0a\u641c\u5bfb \u300e \u5b57\u4e32 \u300f \u7684\u529f\u80fd \uff1b n \uff1a \u91cd\u590d\u524d\u4e00\u4e2a\u641c\u5bfb ( \u4e0e / \u6216 ? \u6709\u5173 \uff01 ) N \uff1a \u53cd\u5411\u7684\u91cd\u590d\u524d\u4e00\u4e2a\u641c\u5bfb ( \u4e0e / \u6216 ? \u6709\u5173 \uff01 ) q \uff1a \u79bb\u5f00 less \u8fd9\u4e2a\u7a0b\u5e8f \uff1b head \u53ea\u770b\u5934\u51e0\u884c - n \uff1a \u540e\u9762\u63a5\u6570\u5b57 \uff0c \u4ee3\u8868\u663e\u793a\u51e0\u884c\u7684\u610f\u601d tail \u53ea\u770b\u5c3e\u5df4\u51e0\u884c - n \uff1a \u540e\u9762\u63a5\u6570\u5b57 \uff0c \u4ee3\u8868\u663e\u793a\u51e0\u884c\u7684\u610f\u601d - f \uff1a \u8868\u793a\u6301\u7eed\u4fa6\u6d4b\u540e\u9762\u6240\u63a5\u7684\u6863\u540d \uff0c \u8981\u7b49\u5230\u6309\u4e0b [ ctrl ]- c\u624d\u4f1a\u7ed3\u675ftail\u7684\u4fa6\u6d4b Linux \u94fe\u63a5 $ ln f1 f2 # \u786c\u94fe\u63a5\uff08Hard Link\uff09f1 \u548cf2\u6307\u5411\u4e86\u540c\u4e00\u4e2a\u6587\u4ef6\u8282\u70b9 $ ln -s f1 f3 # \u7b26\u53f7\u94fe\u63a5\uff08Symbolic Link\uff09 \u8f6f\u94fe\u63a5\u6587\u4ef6\u7c7b\u4f3c\u4e8e Windows \u7684\u5feb\u6377\u65b9\u5f0f # f3 -> f1 -> real file # f2 -> real file","title":"\u6587\u4ef6"},{"location":"Linux/linux/#_3","text":"useradd \u9009\u9879 \u7528\u6237\u540d # \u6dfb\u52a0\u65b0\u7684\u7528\u6237\u8d26\u53f7 -c comment \u6307\u5b9a\u4e00\u6bb5\u6ce8\u91ca\u6027\u63cf\u8ff0 -g \u7528\u6237\u7ec4 \u6307\u5b9a\u7528\u6237\u6240\u5c5e\u7684\u7528\u6237\u7ec4 -G \u6240\u5c5e\u7684\u9644\u52a0\u7ec4 userdel \u9009\u9879 \u7528\u6237\u540d # \u5220\u9664\u5e10\u53f7 -r\uff0c\u7528\u6237\u7684\u4e3b\u76ee\u5f55\u4e00\u8d77\u5220\u9664 usermod \u9009\u9879 \u7528\u6237\u540d # \u4fee\u6539 cat /etc/passwd # \u67e5\u770b\u7528\u6237 cat /etc/shadow # \u67e5\u770b\u5bc6\u7801 passwd \u9009\u9879 \u7528\u6237\u540d # \u7528\u6237\u53e3\u4ee4\u7684\u7ba1\u7406 -l \u9501\u5b9a\u53e3\u4ee4\uff0c\u5373\u7981\u7528\u8d26\u53f7 -u \u53e3\u4ee4\u89e3\u9501 -d \u4f7f\u8d26\u53f7\u65e0\u53e3\u4ee4 -f \u5f3a\u8feb\u7528\u6237\u4e0b\u6b21\u767b\u5f55\u65f6\u4fee\u6539\u53e3\u4ee4 newgrp \u7528\u6237\u540d # \u5207\u6362\u7528\u6237\u7ec4 \u4f2a\u7528\u6237\u4e0d\u80fd\u767b\u5f55","title":"\u7528\u6237\u8d26\u53f7\u7684\u7ba1\u7406"},{"location":"Linux/linux/#_4","text":"cat /etc/group # \u67e5\u770b\u7528\u6237\u7ec4 groupadd \u9009\u9879 \u7528\u6237\u7ec4 # \u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u7528\u6237\u7ec4 groupdel \u7528\u6237\u7ec4 # \u5220\u9664\u4e00\u4e2a\u5df2\u6709\u7684\u7528\u6237\u7ec4 groupmod \u9009\u9879 \u7528\u6237\u7ec4 # \u4fee\u6539\u7528\u6237\u7ec4 -n\u65b0\u7528\u6237\u7ec4 \u5c06\u7528\u6237\u7ec4\u7684\u540d\u5b57\u6539\u4e3a\u65b0\u540d\u5b57","title":"\u7528\u6237\u7ec4\u7684\u7ba1\u7406"},{"location":"Linux/linux/#_5","text":"df -h [ \u76ee\u5f55\u6216\u6587\u4ef6\u540d ] # \u68c0\u67e5\u6587\u4ef6\u7cfb\u7edf\u7684\u78c1\u76d8\u7a7a\u95f4\u5360\u7528\u60c5\u51b5 du -hd 1 # \u6587\u4ef6\u548c\u76ee\u5f55\u78c1\u76d8\u4f7f\u7528\u7684\u7a7a\u95f4 mount /dev/hdc6 /mnt/hdc6 # \u78c1\u76d8\u6302\u8f7d umount /dev/hdc6 # \u78c1\u76d8\u5378\u9664","title":"\u78c1\u76d8\u7ba1\u7406"},{"location":"Linux/linux/#yum","text":"yum install <package_name> # \u5b89\u88c5\u8f6f\u4ef6 yum check-update # \u5217\u51fa\u6240\u6709\u53ef\u66f4\u65b0 yum update # \u66f4\u65b0\u6240\u6709\u8f6f\u4ef6 yum update <package_name> # \u66f4\u65b0\u8f6f\u4ef6 yum list # \u53ef\u5b89\u88dd\u7684\u8f6f\u4ef6 yum remove <package_name> # \u5220\u9664\u8f6f\u4ef6\u5305 yum search <keyword> # \u67e5\u627e\u8f6f\u4ef6\u5305 \u53c2\u8003 Linux \u6559\u7a0b-\u83dc\u9e1f\u6559\u7a0b","title":"yum\u5e38\u7528\u547d\u4ee4"},{"location":"Linux/nginx/","text":"\u5982\u679c\u5b58\u5728\u591a\u4e2a\u5339\u914dlocation\u5757\uff0c\u5219nginx\u9009\u62e9\u5177\u6709\u6700\u957f\u524d\u7f00\u7684\u5757 location ~*^.+$ \u8bf7\u6c42\u7684url\u8fc7\u6ee4\uff0c\u6b63\u5219\u5339\u914d\uff0c~\u4e3a\u533a\u5206\u5927\u5c0f\u5199\uff0c~*\u4e3a\u4e0d\u533a\u5206\u5927\u5c0f\u5199 \u65e5\u5fd7\u6587\u4ef6 /usr/local/var/log/nginx \u914d\u7f6e\u6587\u4ef6 /usr/local/etc/nginx/ \u914d\u7f6enginx+php+php-fpm\u670d\u52a1\u5668 mysite.conf server { listen 8009 ; server_name www . mysite . com ; root / Users / qmp / www ; index index . html index . htm index . php ; location / { # \u5982\u679c\u5e26\u53c2\u6570,$ is_args \u503c\u4e3a \" ? \" \u3002\u5982\u679c\u4e0d\u5e26\u53c2\u6570,\u5219\u662f\u7a7a\u5b57\u7b26\u4e32 try_files $ uri $ uri / $ uri . php $ is_args $a rgs ; } location ~ \\. php $ { try_files $ uri = 404 ; include fastcgi . conf ; fastcgi_pass 127 . 0 . 0 . 1 : 9999 ; } } \u53c2\u8003\uff1a \u5982\u4f55\u6b63\u786e\u914d\u7f6eNginx + PHP","title":"Nginx"},{"location":"Linux/nginx/#url","text":"\u65e5\u5fd7\u6587\u4ef6 /usr/local/var/log/nginx \u914d\u7f6e\u6587\u4ef6 /usr/local/etc/nginx/ \u914d\u7f6enginx+php+php-fpm\u670d\u52a1\u5668 mysite.conf server { listen 8009 ; server_name www . mysite . com ; root / Users / qmp / www ; index index . html index . htm index . php ; location / { # \u5982\u679c\u5e26\u53c2\u6570,$ is_args \u503c\u4e3a \" ? \" \u3002\u5982\u679c\u4e0d\u5e26\u53c2\u6570,\u5219\u662f\u7a7a\u5b57\u7b26\u4e32 try_files $ uri $ uri / $ uri . php $ is_args $a rgs ; } location ~ \\. php $ { try_files $ uri = 404 ; include fastcgi . conf ; fastcgi_pass 127 . 0 . 0 . 1 : 9999 ; } } \u53c2\u8003\uff1a \u5982\u4f55\u6b63\u786e\u914d\u7f6eNginx + PHP","title":"\u8bf7\u6c42\u7684url\u8fc7\u6ee4\uff0c\u6b63\u5219\u5339\u914d\uff0c~\u4e3a\u533a\u5206\u5927\u5c0f\u5199\uff0c~*\u4e3a\u4e0d\u533a\u5206\u5927\u5c0f\u5199"},{"location":"Linux/\u6307\u4ee4/","text":"\u6307\u4ee4 \u8bf4\u660e cat \u8fde\u63a5\u6587\u4ef6\u5e76\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa chgrp \u53d8\u66f4\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u6240\u5c5e\u7fa4\u7ec4 chmod \u6539\u53d8\u6587\u4ef6\u8c03\u7528\u6743\u9650 chown \u6539\u53d8\u6587\u4ef6\u62e5\u6709\u8005 cksum \u68c0\u67e5\u6587\u4ef6\u7684CRC cmp \u6bd4\u8f83\u4e24\u4e2a\u6587\u4ef6\u662f\u5426\u6709\u5dee\u5f02 diff \u6bd4\u8f83\u6587\u4ef6\u7684\u5dee\u5f02 file \u8fa8\u8bc6\u6587\u4ef6\u7c7b\u578b find \u67e5\u627e\u6587\u4ef6 ln \u5efa\u7acb\u4e00\u4e2a\u540c\u6b65\u7684\u94fe\u63a5 less \u6d4f\u89c8\u6587\u4ef6 cp \u590d\u5236\u6587\u4ef6\u6216\u76ee\u5f55 rm \u5220\u9664\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u76ee\u5f55 split \u5c06\u4e00\u4e2a\u6587\u4ef6\u5206\u5272\u6210\u6570\u4e2a touch \u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6 which \u67e5\u627e\u6587\u4ef6 whereis \u67e5\u627e\u6587\u4ef6 read \u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u6570\u503c rcp remote file copy\uff08\u8fdc\u7a0b\u6587\u4ef6\u62f7\u8d1d\uff09 scp secure copy \u8fdc\u7a0b\u62f7\u8d1d\u6587\u4ef6 grep \u66f4\u9002\u5408\u5355\u7eaf\u7684\u67e5\u627e\u6216\u5339\u914d\u6587\u672c sed \u66f4\u9002\u5408\u7f16\u8f91\u5339\u914d\u5230\u7684\u6587\u672c awk \u66f4\u9002\u5408\u683c\u5f0f\u5316\u6587\u672c\uff0c\u5bf9\u6587\u672c\u8fdb\u884c\u8f83\u590d\u6742\u683c\u5f0f\u5904\u7406 $ echo \"1+1\" | bc 2 $ tail -f filename","title":"\u6307\u4ee4"},{"location":"MySQL/","text":"MySQL Brew\u5b89\u88c5\u7684MySQL8.0\u5fd8\u8bb0\u5bc6\u7801\u4fee\u6539\u5bc6\u7801 SQL\u5f00\u53d1\u6280\u5de7 \u7d22\u5f15","title":"MySQL"},{"location":"MySQL/#mysql","text":"Brew\u5b89\u88c5\u7684MySQL8.0\u5fd8\u8bb0\u5bc6\u7801\u4fee\u6539\u5bc6\u7801 SQL\u5f00\u53d1\u6280\u5de7 \u7d22\u5f15","title":"MySQL"},{"location":"MySQL/Brew\u5b89\u88c5\u7684MySQL8\u5fd8\u8bb0\u5bc6\u7801\u4fee\u6539\u5bc6\u7801/","text":"1\u3001\u4fee\u6539my.ini # \u67e5\u770bmy.ini\u4f4d\u7f6e $ mysqld --help --verbose | more # \u627e\u5230\u8fd9\u4e00\u884c\uff0c\u6328\u4e2a\u8bd5\u8bd5\uff0c\u770b\u5b58\u4e0d\u5b58\u5728 # /etc/my.cnf /etc/mysql/my.cnf /usr/local/etc/my.cnf ~/.my.cnf $ ls /etc/my.cnf ls: /etc/my.cnf: No such file or directory $ ls /etc/mysql/my.cnf ls: /etc/mysql/my.cnf: No such file or directory $ ls /usr/local/etc/my.cnf /usr/local/etc/my.cnf # \u6ce8\u610f\u8fd9\u4e2a\u6587\u4ef6\u5b58\u5728\u4e86 # \u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff0c \u6dfb\u52a0 skip-grant-tables $ cat /usr/local/etc/my.cnf # Default Homebrew MySQL server config [ mysqld ] # Only allow connections from localhost bind-address = 127 .0.0.1 skip-grant-tables # \u6dfb\u52a0\u8fd9\u4e00\u884c 2\u3001\u4fee\u6539\u5bc6\u7801 # \u91cd\u542fMySQL $ mysql.server restart # \u8fdb\u5165\uff0c\u9047\u5230\u5bc6\u7801\u76f4\u63a5\u56de\u8f66 $ mysql -u root -p # \u4fee\u6539\u524d\u786e\u8ba4\u7248\u672c\u53f7\uff0c\u5982\u679c\u662f\u5176\u4ed6\u7248\u672c\u53ef\u80fd\u4f1a\u6709\u5dee\u522b mysql> select version () ; 8 .0.16 mysql> flush privileges ; --\u5237\u65b0 mysql> use mysql ; mysql> alter user 'root' @ 'localhost' IDENTIFIED BY 'aBc@123456' ; # \u6ce8\u610f\uff1a mysql8.0\u4ee5\u4e0a\u5bc6\u7801\u7b56\u7565\u9650\u5236\u5fc5\u987b\u8981\u5927\u5c0f\u5199\u52a0\u6570\u5b57\u7279\u6b8a\u7b26\u53f7 3\u3001\u590d\u539fmy.ini \u5c06\u7b2c\u4e00\u6b65\u4e2dmy.ini\u52a0\u5165\u7684skip-grant-tables\u5220\u9664\u6216\u6ce8\u91ca 4\u3001\u91cd\u542fMySQL\u767b\u5f55\u6d4b\u8bd5 $ mysql.server restart # \u6b64\u65f6\u5728\u767b\u5f55\u5c31\u9700\u8981\u5bc6\u7801\u4e86 $ mysql -u root -p \u53c2\u8003 mysql5.7\u5fd8\u8bb0\u5bc6\u7801\u4fee\u6539\u65b9\u6cd5 MYSQL8.0\u4ee5\u4e0a\u7248\u672c\u6b63\u786e\u4fee\u6539ROOT\u5bc6\u7801 brew mysql \u6dfb\u52a0\u4fee\u6539mysql\u914d\u7f6e","title":"Brew\u5b89\u88c5\u7684MySQL8\u5fd8\u8bb0\u5bc6\u7801\u4fee\u6539\u5bc6\u7801"},{"location":"MySQL/Brew\u5b89\u88c5\u7684MySQL8\u5fd8\u8bb0\u5bc6\u7801\u4fee\u6539\u5bc6\u7801/#1myini","text":"# \u67e5\u770bmy.ini\u4f4d\u7f6e $ mysqld --help --verbose | more # \u627e\u5230\u8fd9\u4e00\u884c\uff0c\u6328\u4e2a\u8bd5\u8bd5\uff0c\u770b\u5b58\u4e0d\u5b58\u5728 # /etc/my.cnf /etc/mysql/my.cnf /usr/local/etc/my.cnf ~/.my.cnf $ ls /etc/my.cnf ls: /etc/my.cnf: No such file or directory $ ls /etc/mysql/my.cnf ls: /etc/mysql/my.cnf: No such file or directory $ ls /usr/local/etc/my.cnf /usr/local/etc/my.cnf # \u6ce8\u610f\u8fd9\u4e2a\u6587\u4ef6\u5b58\u5728\u4e86 # \u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff0c \u6dfb\u52a0 skip-grant-tables $ cat /usr/local/etc/my.cnf # Default Homebrew MySQL server config [ mysqld ] # Only allow connections from localhost bind-address = 127 .0.0.1 skip-grant-tables # \u6dfb\u52a0\u8fd9\u4e00\u884c","title":"1\u3001\u4fee\u6539my.ini"},{"location":"MySQL/Brew\u5b89\u88c5\u7684MySQL8\u5fd8\u8bb0\u5bc6\u7801\u4fee\u6539\u5bc6\u7801/#2","text":"# \u91cd\u542fMySQL $ mysql.server restart # \u8fdb\u5165\uff0c\u9047\u5230\u5bc6\u7801\u76f4\u63a5\u56de\u8f66 $ mysql -u root -p # \u4fee\u6539\u524d\u786e\u8ba4\u7248\u672c\u53f7\uff0c\u5982\u679c\u662f\u5176\u4ed6\u7248\u672c\u53ef\u80fd\u4f1a\u6709\u5dee\u522b mysql> select version () ; 8 .0.16 mysql> flush privileges ; --\u5237\u65b0 mysql> use mysql ; mysql> alter user 'root' @ 'localhost' IDENTIFIED BY 'aBc@123456' ; # \u6ce8\u610f\uff1a mysql8.0\u4ee5\u4e0a\u5bc6\u7801\u7b56\u7565\u9650\u5236\u5fc5\u987b\u8981\u5927\u5c0f\u5199\u52a0\u6570\u5b57\u7279\u6b8a\u7b26\u53f7","title":"2\u3001\u4fee\u6539\u5bc6\u7801"},{"location":"MySQL/Brew\u5b89\u88c5\u7684MySQL8\u5fd8\u8bb0\u5bc6\u7801\u4fee\u6539\u5bc6\u7801/#3myini","text":"\u5c06\u7b2c\u4e00\u6b65\u4e2dmy.ini\u52a0\u5165\u7684skip-grant-tables\u5220\u9664\u6216\u6ce8\u91ca","title":"3\u3001\u590d\u539fmy.ini"},{"location":"MySQL/Brew\u5b89\u88c5\u7684MySQL8\u5fd8\u8bb0\u5bc6\u7801\u4fee\u6539\u5bc6\u7801/#4mysql","text":"$ mysql.server restart # \u6b64\u65f6\u5728\u767b\u5f55\u5c31\u9700\u8981\u5bc6\u7801\u4e86 $ mysql -u root -p \u53c2\u8003 mysql5.7\u5fd8\u8bb0\u5bc6\u7801\u4fee\u6539\u65b9\u6cd5 MYSQL8.0\u4ee5\u4e0a\u7248\u672c\u6b63\u786e\u4fee\u6539ROOT\u5bc6\u7801 brew mysql \u6dfb\u52a0\u4fee\u6539mysql\u914d\u7f6e","title":"4\u3001\u91cd\u542fMySQL\u767b\u5f55\u6d4b\u8bd5"},{"location":"MySQL/SQL\u5f00\u53d1\u6280\u5de7/","text":"SQL\u5f00\u53d1\u6280\u5de7 \u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00 Structured Query Language SQL\u5206\u7c7b DDL\uff1a\u6570\u636e\u5b9a\u4e49\u8bed\u8a00 Data Definition Language - CREATE\u3001ALTER\u3001DROP\u3001TRUNCATE TPL\uff1a\u4e8b\u52a1\u5904\u7406\u8bed\u8a00 - COMMIT\u3001ROLLBACK\u3001SAVEPOINT\u3001SET TRANSACTION DCL\uff1a\u6570\u636e\u63a7\u5236\u8bed\u8a00 - GRANT\u3001REVOKE DML\uff1a\u6570\u636e\u64cd\u4f5c\u8bed\u8a00 - SELECT\u3001UPDATE\u3001INSERT\u3001DELETE \u6b63\u786e\u4f7f\u7528SQL\u5f88\u91cd\u8981\u5417\uff1f \u203b \u589e\u52a0\u6570\u636e\u5e93\u5904\u7406\u6548\u7387\uff0c\u51cf\u5c11\u5e94\u7528\u76f8\u5e94\u65f6\u95f4 \u203b \u51cf\u5c11\u6570\u636e\u5e93\u670d\u52a1\u5668\u8d1f\u8f7d\uff0c\u589e\u52a0\u670d\u52a1\u5668\u7a33\u5b9a\u6027 \u203b \u51cf\u5c11\u670d\u52a1\u5668\u95f4\u901a\u8baf\u7684\u7f51\u7edc\u6d41\u91cf join\u7c7b\u578b \u5185\u8fde\u63a5 inner join \u4ea4\u96c6 \u5168\u5916\u8fde\u63a5 full outer join \u5de6\u5916\u8fde\u63a5 left outer join \u53f3\u5916\u8fde\u63a5 right outer join \u4ea4\u53c9\u8fde\u63a5 cross join \u4f18\u5316\u67e5\u8be2 \u66f4\u65b0\u8868\u81ea\u8eab 1\u3001\u66f4\u65b0\u5b57\u6bb5\u7684\u5185\u5bb9 update user1 set over='\u9f50\u5929\u5927\u5723' where user1.username in( select a.username from user1 a inner join user2 b on a.username=b.username); \u62a5\u9519\uff1a\u8981\u66f4\u65b0\u7684\u8868\u4e0d\u80fd\u51fa\u73b0\u5728from\u4ece\u53e5\u4e2d 2\u3001\u89e3\u51b3\u65b9\u6cd5 update user1 a join ( select a.username from user1 a inner join user2 b on a.username=b.username) c on a.username = c.username set a.over ='\u9f50\u5929\u5927\u5723' join\u4f18\u5316\u5b50\u67e5\u8be2\u6280\u5de7\uff1a \u4e00\u822c\u5b50\u67e5\u8be2\u5199\u6cd5\uff1a(\u6570\u636e\u5c0f\u65f6\uff0c\u6ca1\u6709\u591a\u5927\u5f71\u54cd\uff0c\u5982\u679c\u6570\u636e\u91cf\u5927\u65f6\uff0c\u5219\u8981\u6d88\u8017\u5927\u91cf\u7684\u67e5\u8be2) select a.user_name , a.over , (select over from user2 where a.user_name = b,user_name) as over2 from user1 a; \u5982\u679c\u8fd9\u4e24\u5f20\u8868\u7684\u8bb0\u5f55\u76f8\u5f53\u591a \u90a3\u4e48\u8fd9\u4e2a\u5b50\u67e5\u8be2\u76f8\u5f53\u4e8e\u5bf9A\u6807\u7684\u6bcf\u4e00\u6761\u8bb0\u5f55\u90fd\u8981\u8fdb\u884c\u4e00\u6b21\u5b50\u67e5\u8be2\u3002 join\u4f18\u5316\uff08\u5de6\u8fde\u63a5\uff09\u540e\u7684\u5199\u6cd5\uff1a select a.user_name , a.over , b.over from user1 a left join user2 b on a.user_name = b.user_name @MySQL---JOIN\u4f18\u5316\u805a\u5408\u5b50\u67e5\u8be2 1.\u4e00\u822c\u5199\u6cd5\uff0c\u672a\u80fd\u89e3\u51b3 SELECT g.user_name,MAX(k.kills),k.time FROM group AS g JOIN kills AS k ON g.id=k.user_id GROUP BY g.user_name ORDER BY g.user_name; 2.\u4f7f\u7528JOIN\u4f18\u5316\u805a\u5408\u5b50\u67e5\u8be2 SELECT a.user_name,b.timestr,b.kills FROM user1 a JOIN user_kills b ON a.id = b.user_id JOIN user_kills c ON c.user_id = b.user_id GROUP BY a.user_name,b.timestr,b.kills HAVING b.kills = MAX(c.kills); \u5b9e\u73b0\u5206\u7ec4\u9009\u62e9 \u5206\u7c7b\u805a\u5408\u65b9\u5f0f\u67e5\u8be2\u6bcf\u4e00\u4e2a\u7528\u6237\u67d0\u4e00\u4e2a\u5b57\u6bb5\u6570\u636e\u6700\u5927\u7684\u4e24\u6761\u6570\u636e\uff1a SELECT d . user_name , c . ctimestr , kills FROM ( SELECT user_id , timestr , kills ,( SELECT COUNT ( * ) FROM user_kills b WHERE b . user_id = a . user_id AND a . kills <= b . kills ) AS cnt FROM user_kills a GROUP BY user_id , timestr , kills ) AS c JOIN user1 d ON c . user_id = d . id WHERE cnt <= 2 MySQL\u6570\u636e\u6587\u4ef6\u5b58\u50a8\u4f4d\u7f6e\u7684\u67e5\u770b show global variables like \"%datadir%\";","title":"SQL\u5f00\u53d1\u6280\u5de7"},{"location":"MySQL/\u7d22\u5f15/","text":"\u6700\u5de6\u524d\u7f00\u539f\u7406 SHOW INDEX FROM student ; EXPLAIN SELECT * FROM student WHERE emp_no = ' 10001 ' AND title = ' Senior Engineer ' AND from_date = ' 1986-06-26 ' ; \u6536\u96c6\u6267\u884c\u8bed\u53e5\u6240\u4f7f\u7528\u7684\u8d44\u6e90 \u9ed8\u8ba4\u7684\u662f\u5173\u95ed\u7684 SET profiling = 1 ; show PROFILES \\ G show warnings ; \u7d22\u5f15\u9009\u62e9\u6027 \u4e0d\u91cd\u590d\u7684\u7d22\u5f15\u503c\uff08\u4e5f\u53eb\u57fa\u6570\uff0cCardinality\uff09\u4e0e\u8868\u8bb0\u5f55\u6570\uff08#T\uff09\u7684\u6bd4\u503c $$ Index Selectivity = Cardinality / #T $$ \u663e\u7136\u9009\u62e9\u6027\u7684\u53d6\u503c\u8303\u56f4\u4e3a(0, 1]\uff0c\u9009\u62e9\u6027\u8d8a\u9ad8\u7684\u7d22\u5f15\u4ef7\u503c\u8d8a\u5927 \u793a\u4f8b\uff1a SELECT count ( DISTINCT ( name )) / count ( * ) AS Selectivity FROM student SELECT count ( DISTINCT ( concat ( name , age ))) / count ( * ) AS Selectivity FROM student \u524d\u7f00\u7d22\u5f15 SELECT count(DISTINCT(concat(first_name, left(last_name, 3))))/count(*) AS Selectivity FROM student ALTER TABLE employees.employees ADD INDEX first_name_last_name4 (first_name, last_name(4)) \u5efa\u8bae \u5728\u4f7f\u7528InnoDB\u5b58\u50a8\u5f15\u64ce\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u7279\u522b\u7684\u9700\u8981\uff0c\u8bf7\u6c38\u8fdc\u4f7f\u7528\u4e00\u4e2a\u4e0e\u4e1a\u52a1\u65e0\u5173\u7684\u81ea\u589e\u5b57\u6bb5\u4f5c\u4e3a\u4e3b\u952e \u53c2\u8003 1. MySQL\u7d22\u5f15\u80cc\u540e\u7684\u6570\u636e\u7ed3\u6784\u53ca\u7b97\u6cd5\u539f\u7406","title":"\u6700\u5de6\u524d\u7f00\u539f\u7406"},{"location":"MySQL/\u7d22\u5f15/#_1","text":"SHOW INDEX FROM student ; EXPLAIN SELECT * FROM student WHERE emp_no = ' 10001 ' AND title = ' Senior Engineer ' AND from_date = ' 1986-06-26 ' ;","title":"\u6700\u5de6\u524d\u7f00\u539f\u7406"},{"location":"MySQL/\u7d22\u5f15/#_2","text":"\u9ed8\u8ba4\u7684\u662f\u5173\u95ed\u7684 SET profiling = 1 ; show PROFILES \\ G show warnings ;","title":"\u6536\u96c6\u6267\u884c\u8bed\u53e5\u6240\u4f7f\u7528\u7684\u8d44\u6e90"},{"location":"MySQL/\u7d22\u5f15/#_3","text":"\u4e0d\u91cd\u590d\u7684\u7d22\u5f15\u503c\uff08\u4e5f\u53eb\u57fa\u6570\uff0cCardinality\uff09\u4e0e\u8868\u8bb0\u5f55\u6570\uff08#T\uff09\u7684\u6bd4\u503c $$ Index Selectivity = Cardinality / #T $$ \u663e\u7136\u9009\u62e9\u6027\u7684\u53d6\u503c\u8303\u56f4\u4e3a(0, 1]\uff0c\u9009\u62e9\u6027\u8d8a\u9ad8\u7684\u7d22\u5f15\u4ef7\u503c\u8d8a\u5927 \u793a\u4f8b\uff1a SELECT count ( DISTINCT ( name )) / count ( * ) AS Selectivity FROM student SELECT count ( DISTINCT ( concat ( name , age ))) / count ( * ) AS Selectivity FROM student","title":"\u7d22\u5f15\u9009\u62e9\u6027"},{"location":"MySQL/\u7d22\u5f15/#_4","text":"SELECT count(DISTINCT(concat(first_name, left(last_name, 3))))/count(*) AS Selectivity FROM student ALTER TABLE employees.employees ADD INDEX first_name_last_name4 (first_name, last_name(4))","title":"\u524d\u7f00\u7d22\u5f15"},{"location":"MySQL/\u7d22\u5f15/#_5","text":"\u5728\u4f7f\u7528InnoDB\u5b58\u50a8\u5f15\u64ce\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u7279\u522b\u7684\u9700\u8981\uff0c\u8bf7\u6c38\u8fdc\u4f7f\u7528\u4e00\u4e2a\u4e0e\u4e1a\u52a1\u65e0\u5173\u7684\u81ea\u589e\u5b57\u6bb5\u4f5c\u4e3a\u4e3b\u952e \u53c2\u8003 1. MySQL\u7d22\u5f15\u80cc\u540e\u7684\u6570\u636e\u7ed3\u6784\u53ca\u7b97\u6cd5\u539f\u7406","title":"\u5efa\u8bae"},{"location":"Python/","text":"Python \u4e00\u3001ORM \u4e8c\u3001orator","title":"Python"},{"location":"Python/#python","text":"\u4e00\u3001ORM \u4e8c\u3001orator","title":"Python"},{"location":"Python/ORM/","text":"ORM Object-Relational Mapping \u5bf9\u5e94\u5173\u7cfb ORM DB \u7c7b \u6570\u636e\u8868 \u5bf9\u8c61 \u6570\u636e\u884c \u5c5e\u6027 \u5b57\u6bb5 ORM\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\uff0c\u964d\u4f4e\u4e86\u6267\u884c\u6548\u7387 Flask - Sqlalchemy $ python manage.py migrate \u5b57\u6bb5\u7c7b\u578b\u548c\u53c2\u6570 1\u3001\u5b57\u6bb5\u7c7b\u578b # \u81ea\u589e\u957f \u9ed8\u8ba4 int Auto = models . AutoField ( primary_key = True ) BigAuto = models . BigAutoField () # \u4e8c\u8fdb\u5236 Binary = models . BinaryField () # \u5e03\u5c14 Boolean = models . BooleanField () NullBoolean = models . NullBooleanField () # \u6574\u578b PositiveSmallInteger = models . PositiveSmallIntegerField () # 5 \u5b57\u8282 SmallInteger = models . SmallIntegerField () # 6 \u5b57\u8282 PositiveInteger = models . PositiveIntegerField () # 10 \u5b57\u8282 Integer = models . IntegerField () # 11 \u5b57\u8282 BigInteger = models . BigIntegerField () # 20 \u5b57\u8282 # \u5b57\u7b26\u4e32 Char = models . CharField () # varchar Text = models . TextField () # longtext # \u65f6\u95f4\u65e5\u671f Date = models . DateField () DateTime = models . DateTimeField () Duration = models . DurationField () # int python timedelta\u5b9e\u73b0 # \u6d6e\u70b9\u578b Float = models . FloatField () Decimal = models . DecimalField () # \u5176\u4ed6 Email = models . EmailField () # \u90ae\u7bb1 Image = models . ImageField () File = models . FileField () FilePath = models . FilePathField () URL = models . URLField () UUID = models . UUIDField () GenericIPAddress = models . GenericIPAddressField () 2\u3001\u5173\u7cfb\u578b\u5b57\u6bb5 \u4e00\u5bf9\u4e00 OneToOneField \u591a\u5bf9\u4e00 ForeignKey \u591a\u5bf9\u5bf9 ManyToManyField \u9ed8\u8ba4\u6216\u81ea\u5b9a\u4e49\u4e2d\u95f4\u8868 3\u3001\u5b57\u6bb5\u7c7b\u578b\u53c2\u6570 \u9ed8\u8ba4\u8868\u540d \u5e94\u7528_\u6a21\u578b\u7c7b\u540d\u5c0f\u5199 eg: app_student \uff081\uff09\u6240\u6709\u5b57\u6bb5\u90fd\u6709\u7684\u53c2\u6570 db_column=\"name\" \u6307\u5b9a\u6570\u636e\u5e93\u5b57\u6bb5\u540d verbose_name=\"\u522b\u540d\" help_text=\"\u8868\u5355\u8bf4\u660e\" primary_key=True \u8bbe\u7f6e\u4e3b\u952e unique=True \u552f\u4e00\u952e null=True \u6570\u636e\u5e93\u5141\u8bb8\u4e3a\u7a7a\uff0c\u9ed8\u8ba4\u90fd\u662f\u4e0d\u80fd\u4e3anull\u7684 blank=True \u524d\u7aef\u63d0\u4ea4\u8868\u5355\u5141\u8bb8\u4e3a\u7a7a db_index=True \u5efa\u7acb\u7d22\u5f15 editable=False \u4e0d\u5141\u8bb8\u7f16\u8f91\u5b57\u6bb5 \uff082\uff09\u4e2a\u522b\u5b57\u6bb5\u7684\u53c2\u6570 CharField max_length=100 \u6700\u5927\u957f\u5ea6 DateField\u3001DateTime unique_for_date=True \u65e5\u671f\u5fc5\u987b\u552f\u4e00 unique_for_month=True \u6708\u4efd\u552f\u4e00 auto_now=True \u81ea\u52a8\u66f4\u65b0\u8bb0\u5f55\u65f6\u95f4 auto_now_add=True \u81ea\u52a8\u589e\u52a0\u8bb0\u5f55\u65f6\u95f4 DecimalField max_digits=4 \u603b\u4f4d\u6570 decimal_places=2 \u5c0f\u6570\u70b9\u6570 eg: 11.22 16.34 \uff083\uff09\u5173\u7cfb\u578b\u5b57\u6bb5\u53c2\u6570 OneToOneField related_name=\"one\" \u7236\u8868\u67e5\u5b57\u8868\u6570\u636e ForeignKey on_delete=\"\" \u5916\u952e\u6240\u5173\u8054\u7684\u5bf9\u8c61\u88ab\u5220\u9664\u65f6\u8fdb\u884c\u7684\u64cd\u4f5c CASCADE\uff1a \u7ea7\u8054\u5220\u9664\u3002\u5c06\u5b9a\u4e49\u6709\u5916\u952e\u7684\u6a21\u578b\u5bf9\u8c61\u540c\u65f6\u5220\u9664\uff0c \u9ed8\u8ba4\u64cd\u4f5c PROTECT\uff1a \u963b\u6b62\u5220\u9664\u3002\u4f1a\u62a5\u5b8c\u6574\u6027\u9519\u8bef\u3002 DO_NOTHING\uff1a\u4ec0\u4e48\u4e5f\u4e0d\u505a SET_NULL\uff1a\u5916\u952e\u8bbe\u7f6e\u4e3a null\uff0c\u524d\u63d0\u662f null=True, blank=True\u3002 SET_DEFAULT\uff1a\u8bbe\u7f6e\u4e3a\u5916\u952e\u7684\u9ed8\u8ba4\u503c\uff0c\u524d\u63d0\u662f\u8bbe\u7f6e\u4e86default\u53c2\u6570\u3002 SET()\uff1a\u4f1a\u8c03\u7528\u5916\u9762\u7684\u503c\uff0c\u53ef\u4ee5\u662f\u4e00\u4e2a\u51fd\u6570\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\u4f7f\u7528 CASCADE \u5c31\u53ef\u4ee5\u4e86\u3002 eg: class B ( models . Model ): foreign = models . ForeignKey ( A , on_delete = models . CASCADE ) foreign = models . ForeignKey ( A , on_delete = models . PROTECT ) foreign = models . ForeignKey ( A , on_delete = models . DO_NOTHING ) foreign = models . ForeignKey ( A , on_delete = models . SET_NULL , null = True , blank = True ) foreign = models . ForeignKey ( A , on_delete = models . SET_DEFAULT , default = 0 ) foreign = models . ForeignKey ( A , on_delete = models . SET ) 4\u3001\u81ea\u5173\u8054 \u793a\u4f8b\uff1a\u5730\u5740 \u7701-\u5e02-\u53bf \u7ea7\u8054 class AddressInfo ( models . Model ): address = models . CharField ( max_length = 200 , null = True , blank = True , verbose_name = \"\u5730\u5740\" ) pid = models . ForeignKey ( \"self\" , null = True , blank = True , verbose_name = \"\u81ea\u5173\u8054\" , on_delete = models . SET_NULL ) def __str__ ( self ): return self . address \u5143\u6570\u636eMeta \u4fee\u6539\u5e94\u7528\u540d\u79f0 apps.py class OrmdemoConfig ( AppConfig ): name = 'ormdemo' verbose_name = \"\u5e94\u7528\u540d\u79f0\" \u4fee\u6539model\u5143\u6570\u636e class AddressInfo ( models . Model ): address = models . CharField ( max_length = 200 , null = True , blank = True , verbose_name = \"\u5730\u5740\" ) note = models . CharField ( max_length = 200 , null = True , blank = True , verbose_name = \"\u8bf4\u660e\" ) pid = models . ForeignKey ( \"self\" , null = True , blank = True , verbose_name = \"\u81ea\u5173\u8054\" , on_delete = models . SET_NULL ) def __str__ ( self ): return self . address class Meta : db_table = \"address\" # \u81ea\u5b9a\u4e49\u8868\u540d ordering = [ \"pid_id\" ] # \u6307\u5b9a\u6392\u5e8f\u5b57\u6bb5 verbose_name = \"\u5730\u5740\" # \u5355\u6570 verbose_name_plural = verbose_name # \u590d\u6570 abstract = True # \u8bbe\u7f6e\u4e3a\u57fa\u7c7b permissions = (( \"\u5b9a\u4e49\u597d\u7684\u6743\u9650\" , \"\u6743\u9650\u8bf4\u660e\" ),) managed = False # \u6309\u7167Django\u9ed8\u8ba4\u65b9\u5f0f\u7ba1\u7406\u6570\u636e\u8868 unique_together = ( \"address\" , \"note\" ) # \u8054\u5408\u552f\u4e00\u952e\uff0c\u5355\u5143\u7ec4\u6216\u591a\u5143\u7ec4 app_label = \"ormdemo\" # \u5b9a\u4e49\u6a21\u578b\u7c7b\u5c5e\u4e8e\u54ea\u4e2a\u5e94\u7528 db_tablespace = \"\" # \u5b9a\u4e49\u6570\u636e\u5e93\u8868\u7a7a\u95f4 \u6a21\u578b\u7c7b\u5f00\u53d1\u5b9e\u4f8b \"\"\" \u8bb2\u5e08 - \u52a9\u6559 \u4e00\u5bf9\u4e00 \u8bb2\u5e08 - \u8bfe\u7a0b\u8868 \u4e00\u5bf9\u591a \u8bfe\u7a0b\u8868 - \u5b66\u751f \u591a\u5bf9\u591a \"\"\" class Teacher ( models . Model ): \"\"\"\u8bb2\u5e08\u4fe1\u606f\u8868\"\"\" nickname = models . CharField ( max_length = 30 , primary_key = True , db_index = True , verbose_name = \"\u6635\u79f0\" ) introduction = models . TextField ( default = \"\u8fd9\u4f4d\u540c\u5b66\u5f88\u61d2\uff0c\u6728\u6709\u7b7e\u540d\u7684\u8bf4~\" , verbose_name = \"\u7b80\u4ecb\" ) fans = models . PositiveIntegerField ( default = 0 , verbose_name = \"\u7c89\u4e1d\u6570\" ) created_at = models . DateTimeField ( auto_now_add = True , verbose_name = \"\u521b\u5efa\u65f6\u95f4\" ) updated_at = models . DateTimeField ( auto_now = True , verbose_name = \"\u521b\u5efa\u65f6\u95f4\" ) class Meta : verbose_name = \"\u8bb2\u5e08\u4fe1\u606f\u8868\" verbose_name_plural = verbose_name def __str__ ( self ): return self . nickname class Course ( models . Model ): \"\"\"\u8bfe\u7a0b\u4fe1\u606f\u8868\"\"\" title = models . CharField ( max_length = 100 , primary_key = True , db_index = True , verbose_name = \"\u8bfe\u7a0b\u540d\" ) type = models . CharField ( choices = (( 0 , \"\u5176\u4ed6\" ), ( 1 , \"\u5b9e\u6218\u8bfe\" ), ( 2 , \"\u514d\u8d39\u8bfe\" )), max_length = 1 , default = 0 , verbose_name = \"\u8bfe\u7a0b\u7c7b\u578b\" ) price = models . PositiveSmallIntegerField ( verbose_name = \"\u4ef7\u683c\" ) volume = models . BigIntegerField ( verbose_name = \"\u9500\u91cf\" ) online = models . DateField ( verbose_name = \"\u4e0a\u7ebf\u65f6\u95f4\" ) # \u5220\u9664\u7ea7\u8054 teacher = models . ForeignKey ( Teacher , null = True , blank = True , on_delete = models . CASCADE , verbose_name = \"\u8bb2\u5e08\" ) created_at = models . DateTimeField ( auto_now_add = True , verbose_name = \"\u521b\u5efa\u65f6\u95f4\" ) updated_at = models . DateTimeField ( auto_now = True , verbose_name = \"\u521b\u5efa\u65f6\u95f4\" ) class Meta : verbose_name = \"\u8bfe\u7a0b\u4fe1\u606f\u8868\" verbose_name_plural = verbose_name def __str__ ( self ): return f \"{self.get_type_display()}-{self.title}\" class Student ( models . Model ): \"\"\"\u5b66\u751f\u4fe1\u606f\u8868\"\"\" nickname = models . CharField ( max_length = 30 , primary_key = True , db_index = True , verbose_name = \"\u5b66\u751f\u59d3\u540d\" ) age = models . PositiveSmallIntegerField ( verbose_name = \"\u5e74\u9f84\" ) gender = models . CharField ( choices = (( 0 , \"\u4fdd\u5bc6\" ), ( 1 , \"\u7537\" ), ( 2 , \"\u5973\" )), max_length = 1 , default = 0 , verbose_name = \"\u6027\u522b\" ) study_time = models . PositiveIntegerField ( default = 0 , verbose_name = \"\u5b66\u4e60\u65f6\u957f(h)\" ) course = models . ManyToManyField ( Course , verbose_name = \"\u8bfe\u7a0b\" ) created_at = models . DateTimeField ( auto_now_add = True , verbose_name = \"\u521b\u5efa\u65f6\u95f4\" ) updated_at = models . DateTimeField ( auto_now = True , verbose_name = \"\u521b\u5efa\u65f6\u95f4\" ) class Meta : verbose_name = \"\u5b66\u751f\u4fe1\u606f\u8868\" verbose_name_plural = verbose_name def __str__ ( self ): return self . nickname class TeacherAssistant ( models . Model ): \"\"\"\u52a9\u6559\u4fe1\u606f\u8868\"\"\" nickname = models . CharField ( max_length = 30 , primary_key = True , db_index = True , verbose_name = \"\u6635\u79f0\" ) hobby = models . CharField ( max_length = 10 , null = True , blank = True , verbose_name = \"\u7231\u597d\" ) # \u5220\u9664\u7f6e\u7a7a teacher = models . OneToOneField ( Teacher , null = True , blank = True , on_delete = models . SET_NULL , verbose_name = \"\u8bb2\u5e08\" ) created_at = models . DateTimeField ( auto_now_add = True , verbose_name = \"\u521b\u5efa\u65f6\u95f4\" ) updated_at = models . DateTimeField ( auto_now = True , verbose_name = \"\u521b\u5efa\u65f6\u95f4\" ) class Meta : verbose_name = \"\u52a9\u6559\u4fe1\u606f\u8868\" verbose_name_plural = verbose_name def __str__ ( self ): return self . nickname \u751f\u6210\u6570\u636e\u8868 python manage . py makemigrations # \u751f\u6210\u8fc1\u79fb\u6587\u4ef6 python manage . py migrate # \u6267\u884c\u8fc1\u79fb\u6587\u4ef6 \u5220\u9664\u67d0\u4e2a\u6a21\u578b\u7c7b\u7684\u5b8c\u6574\u64cd\u4f5c: \uff081\uff09\u5728\u5df2\u521b\u5efa\u7684app\u4e0b, \u9996\u5148\u5220\u9664models.py\u4e2d\u9700\u8981\u5220\u9664\u7684\u6a21\u578b\u7c7b \uff082\uff09\u5220\u9664\u8be5\u6a21\u578b\u7c7b\u5728\u8fc1\u79fb\u811a\u672cmigrations\u4e2d\u7684\u5bf9\u5e94\u6587\u4ef6 \uff083\uff09\u5220\u9664\u8be5\u9879\u76ee\u5728django_migrations\u4e2d\u7684\u5bf9\u5e94\u8bb0\u5f55 \uff084\uff09\u5220\u9664\u6570\u636e\u5e93\u4e2d\u5bf9\u5e94\u7684\u6570\u636e\u8868 \u5bfc\u5165\u6570\u636e \uff081\uff09django shell $ python manage.py shell from app.models import Mode model = Model () model . name = \"name\" model . save () \uff082\uff09\u811a\u672c\u5bfc\u5165 # -*- coding: utf-8 -*- import os import random from datetime import date import django import sys # \u5bfc\u5165\u9879\u76ee\u914d\u7f6e project_path = os . path . dirname ( os . path . dirname ( os . path . abspath ( __file__ ))) sys . path . append ( project_path ) os . environ [ 'DJANGO_SETTINGS_MODULE' ] = 'mysite.settings' django . setup () from ormdemo.models import Teacher , Course , Student , TeacherAssistant def import_data (): # \u8bb2\u5e08\u6570\u636e create Teacher . objects . create ( nickname = \"Jack\" , introduction = \"Python\u5de5\u7a0b\u5e08\" , fans = 666 ) # \u8bfe\u7a0b\u6570\u636e bulk_create data = [ Course ( title = f \"Python\u7cfb\u5217\u6559\u7a0b{i}\" , teacher = Teacher . objects . get ( nickname = \"Jack\" ), type = random . choice ([ 0 , 1 , 2 ]), price = random . randint ( 200 , 300 ), volume = random . randint ( 100 , 10000 ), online = date ( 2018 , 10 , 1 ) ) for i in range ( 1 , 5 ) ] Course . objects . bulk_create ( data ) # \u5b66\u751f\u6570\u636e update_or_create Student . objects . update_or_create ( nickname = \"A\u540c\u5b66\" , defaults = { \"age\" : random . randint ( 18 , 58 ), \"gender\" : random . choice ([ 0 , 1 , 2 ]), \"study_time\" : random . randint ( 9 , 999 ) } ) # \u6b63\u5411\u6dfb\u52a0 # \u9500\u91cf\u5927\u4e8e\u7b49\u4e8e1000\u7684\u8bfe\u7a0b Student . objects . get ( nickname = \"A\u540c\u5b66\" ) . course . add ( * Course . objects . filter ( volume__gte = 1000 )) # \u53cd\u5411\u6dfb\u52a0 # \u5b66\u4e60\u65f6\u95f4\u5927\u4e8e\u7b49\u4e8e500\u5c0f\u65f6\u7684\u540c\u5b66 Course . objects . get ( title = \"Python\u7cfb\u5217\u6559\u7a0b1\" ) . student_set . add ( * Student . objects . filter ( study_time__gte = 500 )) # \u52a9\u6559\u6570\u636e get_or_create() TeacherAssistant . objects . get_or_create ( nickname = \"\u52a9\u65591\" , defaults = { \"hobby\" : \"\u6155\u8bfe\u7f51\u5b66\u4e60\" , \"teacher\" : Teacher . objects . get ( nickname = \"Jack\" ) } ) if __name__ == '__main__' : import_data () \uff083\uff09fixtures Django serialization -> model\u4fdd\u5b58 python manage.py dumpdata > data.json # \u5bfc\u51fa\u6570\u636e python manage.py loaddata data.json # \u5bfc\u5165\u6570\u636e \uff084\uff09mysqldump MySQL\u6570\u636e\u5e93\u5bfc\u5165\u5bfc\u51fa\u6570\u636e (5)PyCharm PyCharm\u81ea\u5e26\u7684\u5bfc\u5165\u5bfc\u51fa\u5de5\u5177 ModelAPI 1\u3001\u67e5\u8be2\uff0c\u68c0\u7d22\uff0c\u8fc7\u6ee4 Teacher . objects . all () # \u8fd4\u56de\u591a\u4e2a\u7ed3\u679c Teacher . objects . get ( id = 1 ) \u8fd4\u56de\u4e00\u6761\u7ed3\u679c Teacher . objects . filter ( fans__gte = 500 ) # \u8fd4\u56de\u591a\u4e2a\u7ed3\u679c 2\u3001\u6570\u636e\u5339\u914d\u5927\u5c0f\u5199\u654f\u611f # \u53cc\u4e0b\u5212\u7ebf\u5f00\u5934`__` Teacher . objects . filter ( fans__in = [ 500 , 600 ]) # i\u5f00\u5934\u8868\u793a\u5927\u5c0f\u5199\u654f\u611f Teacher . objects . filter ( nickname__icontains = \"A\" ) 3\u3001\u7ed3\u679c\u5207\u7247\u3001\u6392\u5e8f\u3001\u94fe\u5f0f\u67e5\u8be2 Teacher . objects . all ()[: 1 ] Teacher . objects . all () . order_by ( \"-age\" ) # \u8d1f\u53f7\u8868\u793a\u964d\u5e8f Teacher . objects . filter ( fans__gte = 500 ) . order_by ( \"nickname\" ) # \u67e5\u8be2\u96c6\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u6392\u5e8f 4\u3001\u67e5\u770b\u6267\u884c\u7684\u539f\u751fSQL Teacher . objects . all () . order_by ( \"-nickname\" ) . query \"\"\" SELECT `ormdemo_teacher`.`nickname`, FROM `ormdemo_teacher` ORDER BY `ormdemo_teacher`.`nickname` DESC \"\"\" \u8fd4\u56de\u65b0\u7684QuerySet\u7684API \u8bfb\u64cd\u4f5c\u5927\u90e8\u5206\u90fd\u8fd4\u56de 1\u3001\u7b2c\u4e00\u7c7b all \u5168\u90e8 filter \u8fc7\u6ee4 order_by \u6392\u5e8f exclude \u6392\u9664 reverse \u9006\u5e8f \u9700\u8981\u5728\u5143\u6570\u636e\u4e2d\u8bbe\u7f6eordering distinct \u53bb\u91cd Student . objects . all () . exclude ( nickname = \"A\u540c\u5b66\" ) # SELECT `ormdemo_student`.`nickname` # FROM `ormdemo_student` # WHERE NOT (`ormdemo_student`.`nickname` = A\u540c\u5b66) Student . objects . all () . exclude ( nickname = \"A\u540c\u5b66\" ) . reverse () \"\"\" ELECT `ormdemo_student`.`nickname` FROM `ormdemo_student` WHERE NOT (`ormdemo_student`.`nickname` = A\u540c\u5b66) \"\"\" 2\u3001\u7b2c\u4e8c\u7c7b extra \u522b\u540d defer \u6392\u9664\u4e00\u4e9b\u5b57\u6bb5 only \u9009\u62e9\u4e00\u4e9b\u5b57\u6bb5 Student . objects . all () . extra ( select = { \"name\" : \"nickname\" }) \"\"\" SELECT (nickname) AS `name`, `ormdemo_student`.`nickname`, `ormdemo_student`.`age` FROM `ormdemo_student` \"\"\" Student . objects . all () . only ( \"nickname\" , \"age\" ) \"\"\" SELECT `ormdemo_student`.`nickname`, `ormdemo_student`.`age` FROM `ormdemo_student` \"\"\" 3\u3001\u7b2c\u4e09\u7c7b values \u83b7\u53d6\u5b57\u5178\u5f62\u5f0f values_list \u83b7\u53d6\u5143\u7ec4\u5f62\u5f0f Student . objects . values ( \"nickname\" , \"age\" ) # <QuerySet [{'nickname': 'A\u540c\u5b66', 'age': 54}, {'nickname': 'B\u540c\u5b66', 'age': 36}]> Student . objects . values_list ( \"nickname\" , \"age\" ) # <QuerySet [('A\u540c\u5b66', 54), ('B\u540c\u5b66', 36)]> Student . objects . values_list ( \"nickname\" , flat = True ) # \u5355\u4e2a\u5b57\u6bb5\u8fd4\u56de\u5217\u8868 # <QuerySet ['A\u540c\u5b66', 'B\u540c\u5b66']> 4\u3001\u7b2c\u56db\u7c7b dates\u3001datatimes\u6839\u636e\u65f6\u95f4\u65e5\u671f\u83b7\u53d6\u67e5\u8be2\u96c6 Student . objects . dates ( \"created_at\" , \"month\" ) \"\"\" SELECT DISTINCT CAST(DATE_FORMAT(`ormdemo_student`.`created_at`, '%Y-%m-01') AS DATE) AS `datefield` FROM `ormdemo_student` WHERE `ormdemo_student`.`created_at` IS NOT NULL ORDER BY `datefield` ASC \"\"\" 5\u3001\u7b2c\u4e94\u7c7b union \u5e76\u96c6 intersection \u4ea4\u96c6 \u9700\u8981\u6570\u636e\u5e93\u652f\u6301 difference \u5dee\u96c6 \u9700\u8981\u6570\u636e\u5e93\u652f\u6301 ret1 = Student . objects . filter ( nickname = \"\u540c\u5b66A\" ) ret2 = Student . objects . filter ( nickname = \"\u540c\u5b66B\" ) ret1 . union ( ret2 ) \"\"\" (SELECT `ormdemo_student`.`nickname FROM `ormdemo_student` WHERE `ormdemo_student`.`nickname` = '\u540c\u5b66A') UNION (SELECT `ormdemo_student`.`nickname` FROM `ormdemo_student` WHERE `ormdemo_student`.`nickname` = '\u540c\u5b66B') LIMIT 2 6\u3001\u7b2c\u516d\u7c7b select_related \u4e00\u5bf9\u4e00\uff0c\u591a\u5bf9\u4e00\u67e5\u8be2\u4f18\u5316 prefetch_related \u4e00\u5bf9\u591a\uff0c\u591a\u5bf9\u591a\u67e5\u8be2\u4f18\u5316 Course . objects . all () . select_related ( \"teacher\" ) \"\"\" SELECT `ormdemo_course`.`title`, `ormdemo_teacher`.`nickname` FROM `ormdemo_course` LEFT OUTER JOIN `ormdemo_teacher` ON (`ormdemo_course`.`teacher_id` = `ormdemo_teacher`.`nickname`) LIMIT 21; \"\"\" Student . objects . all () . prefetch_related ( \"course\" ) \"\"\" SELECT `ormdemo_student`.`nickname` FROM `ormdemo_student` LIMIT 21; SELECT (`ormdemo_student_course`.`student_id`) AS `_prefetch_related_val_student_id`, `ormdemo_course`.`title` FROM `ormdemo_course` INNER JOIN `ormdemo_student_course` ON (`ormdemo_course`.`title` = `ormdemo_student_course`.`course_id`) WHERE `ormdemo_student_course`.`student_id` IN ('A\u540c\u5b66', 'B\u540c\u5b66', 'C\u540c\u5b66', 'D\u540c\u5b66'); \"\"\" \u53cd\u5411\u67e5\u8be2 Teacher . objects . get ( nickname = \"Jack\" ) . course_set . all () \"\"\" SELECT `ormdemo_teacher`.`nickname` FROM `ormdemo_teacher` WHERE `ormdemo_teacher`.`nickname` = 'Jack' SELECT `ormdemo_course`.`title` FROM `ormdemo_course` WHERE `ormdemo_course`.`teacher_id` = 'Jack' LIMIT 21; \"\"\" 7\u3001\u7b2c\u4e03\u7c7b annotate \u805a\u5408\u8ba1\u6570\uff0c\u6c42\u548c\uff0c\u5e73\u5747\u6570\uff0c\u6267\u884c\u539f\u751fSQL\uff08\u5206\u7ec4\u540e\u7684\u6570\u636e\u8fdb\u884c\u7edf\u8ba1\uff09 from django.db.models import Count , Avg , Max , Min , Sum Course . objects . values ( \"teacher\" ) . annotate ( vol = Sum ( \"volume\" )) \"\"\" SELECT `ormdemo_course`.`teacher_id`, SUM(`ormdemo_course`.`volume`) AS `vol` FROM `ormdemo_course` GROUP BY `ormdemo_course`.`teacher_id` ORDER BY NULL LIMIT 21; \"\"\" Course . objects . values ( \"teacher\" ) . annotate ( pri = Avg ( \"price\" )) \"\"\" SELECT `ormdemo_course`.`teacher_id`, AVG(`ormdemo_course`.`price`) AS `pri` FROM `ormdemo_course` GROUP BY `ormdemo_course`.`teacher_id` ORDER BY NULL LIMIT 21; # order by null\u7528\u9014\u662f\u5f3a\u5236\u5bf9\u67e5\u8be2\u7ed3\u679c\u7981\u7528\u6392\u5e8f \"\"\" \u4e0d\u8fd4\u56deQuerySet\u7684API \u5199\u64cd\u4f5c\u90fd\u4e0d\u8fd4\u56de\u7ed3\u679c\u96c6 1\u3001\u83b7\u53d6\u5bf9\u8c61 get, get_or_create, first, last, in_bulk latest\u6700\u8fd1\u8bb0\u5f55, earliest \u6700\u65e9\u8bb0\u5f55 \u9700\u8981\u8bbe\u7f6e\u5143\u6570\u636eget_latest_by Student . objects . get ( nickname = \"A\u540c\u5b66\" ) # \u8fd4\u56de\u591a\u4e2a\u4f1a\u62a5\u9519 \"\"\" SELECT `ormdemo_student`.`nickname` FROM `ormdemo_student` WHERE `ormdemo_student`.`nickname` = 'A\u540c\u5b66' \"\"\" Student . objects . first () \"\"\" SELECT `ormdemo_student`.`nickname` FROM `ormdemo_student` ORDER BY `ormdemo_student`.`nickname` ASC LIMIT 1 \"\"\" Student . objects . last () \"\"\" SELECT `ormdemo_student`.`nickname` FROM `ormdemo_student` ORDER BY `ormdemo_student`.`nickname` DESC LIMIT 1; \"\"\" Student . objects . in_bulk ([ \"A\u540c\u5b66\" ]) \"\"\" SELECT `ormdemo_student`.`nickname` FROM `ormdemo_student` WHERE `ormdemo_student`.`nickname` IN ('A\u540c\u5b66'); \"\"\" Student . objects . latest () \"\"\" SELECT `ormdemo_student`.`nickname FROM `ormdemo_student` ORDER BY `ormdemo_student`.`created_at` DESC LIMIT 1; \"\"\" Student . objects . earliest () \"\"\" SELECT `ormdemo_student`.`nickname FROM `ormdemo_student` ORDER BY `ormdemo_student`.`created_at` ASC LIMIT 1; 2\u3001\u521b\u5efa\u5bf9\u8c61 create, bulk_create, update_or_create 3\u3001\u66f4\u65b0\u5bf9\u8c61 update, update_or_create Student . objects . filter ( nickname = \"A\u540c\u5b66\" ) . update ( age = 13 ) \"\"\" UPDATE `ormdemo_student` SET `age` = 13 WHERE `ormdemo_student`.`nickname` = 'A\u540c\u5b66'; \"\"\" 4\u3001\u5220\u9664\u5bf9\u8c61 delete \u4f7f\u7528filter\u8fc7\u6ee4 Student . objects . filter ( nickname = \"A\u540c\u5b66\" ) . delete () \"\"\" SELECT `ormdemo_student`.`nickname FROM `ormdemo_student` WHERE `ormdemo_student`.`nickname` = 'A\u540c\u5b66'; DELETE FROM `ormdemo_student_course` WHERE `ormdemo_student_course`.`student_id` IN ('A\u540c\u5b66'); DELETE FROM `ormdemo_student` WHERE `ormdemo_student`.`nickname` IN ('A\u540c\u5b66'); (13, {'ormdemo.Student_course': 12, 'ormdemo.Student': 1}) \"\"\" 5\u3001\u5176\u4ed6\u64cd\u4f5c exists, count, aggregate(\u6574\u4e2a\u6570\u636e\u8868\u7edf\u8ba1) Student . objects . filter ( nickname = \"B\u540c\u5b66\" ) . exists () \"\"\" SELECT (1) AS `a` FROM `ormdemo_student` WHERE `ormdemo_student`.`nickname` = 'B\u540c\u5b66' LIMIT 1 \"\"\" Student . objects . filter ( nickname = \"B\u540c\u5b66\" ) . count () \"\"\" SELECT COUNT(*) AS `__count` FROM `ormdemo_student` WHERE `ormdemo_student`.`nickname` = 'B\u540c\u5b66'; \"\"\" Course . objects . aggregate ( Max ( \"price\" ), Min ( \"price\" ), Avg ( \"price\" ), Sum ( \"volum\" )) \"\"\" SELECT MAX(`ormdemo_course`.`price`) AS `price__max`, MIN(`ormdemo_course`.`price`) AS `price__min`, AVG(`ormdemo_course`.`price`) AS `price__avg`, SUM(`ormdemo_course`.`volume`) AS `volume__sum` FROM `ormdemo_course`; {'price__max': 295, 'price__min': 210, 'price__avg': 250.75, 'volume__sum': 60559} \"\"\" \u81ea\u5b9a\u4e49\u805a\u5408\u67e5\u8be2\uff08\u7565\uff09 group_contact F\u5bf9\u8c61\u548cQ\u5bf9\u8c61 F\u5bf9\u8c61 \u64cd\u4f5c\u5b57\u6bb5\u6570\u636e Q\u5bf9\u8c61 \u7ed3\u5408AND OR NOT | ~ & \u5b9e\u73b0\u590d\u6742\u67e5\u8be2 from django.db.models import F , Q Student . objects . update ( age = F ( \"age\" ) + 3 ) \"\"\" UPDATE `ormdemo_student` SET `age` = (`ormdemo_student`.`age` + 3); \"\"\" Student . objects . filter ( Q ( age__gte = 1 ) & Q ( age__lte = 10 )) \"\"\" SELECT `ormdemo_student`.`nickname` FROM `ormdemo_student` WHERE (`ormdemo_student`.`age` >= 1 AND `ormdemo_student`.`age` <= 10) LIMIT 21; \"\"\"","title":"ORM"},{"location":"Python/ORM/#orm","text":"Object-Relational Mapping \u5bf9\u5e94\u5173\u7cfb ORM DB \u7c7b \u6570\u636e\u8868 \u5bf9\u8c61 \u6570\u636e\u884c \u5c5e\u6027 \u5b57\u6bb5 ORM\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\uff0c\u964d\u4f4e\u4e86\u6267\u884c\u6548\u7387 Flask - Sqlalchemy $ python manage.py migrate","title":"ORM"},{"location":"Python/ORM/#_1","text":"1\u3001\u5b57\u6bb5\u7c7b\u578b # \u81ea\u589e\u957f \u9ed8\u8ba4 int Auto = models . AutoField ( primary_key = True ) BigAuto = models . BigAutoField () # \u4e8c\u8fdb\u5236 Binary = models . BinaryField () # \u5e03\u5c14 Boolean = models . BooleanField () NullBoolean = models . NullBooleanField () # \u6574\u578b PositiveSmallInteger = models . PositiveSmallIntegerField () # 5 \u5b57\u8282 SmallInteger = models . SmallIntegerField () # 6 \u5b57\u8282 PositiveInteger = models . PositiveIntegerField () # 10 \u5b57\u8282 Integer = models . IntegerField () # 11 \u5b57\u8282 BigInteger = models . BigIntegerField () # 20 \u5b57\u8282 # \u5b57\u7b26\u4e32 Char = models . CharField () # varchar Text = models . TextField () # longtext # \u65f6\u95f4\u65e5\u671f Date = models . DateField () DateTime = models . DateTimeField () Duration = models . DurationField () # int python timedelta\u5b9e\u73b0 # \u6d6e\u70b9\u578b Float = models . FloatField () Decimal = models . DecimalField () # \u5176\u4ed6 Email = models . EmailField () # \u90ae\u7bb1 Image = models . ImageField () File = models . FileField () FilePath = models . FilePathField () URL = models . URLField () UUID = models . UUIDField () GenericIPAddress = models . GenericIPAddressField () 2\u3001\u5173\u7cfb\u578b\u5b57\u6bb5 \u4e00\u5bf9\u4e00 OneToOneField \u591a\u5bf9\u4e00 ForeignKey \u591a\u5bf9\u5bf9 ManyToManyField \u9ed8\u8ba4\u6216\u81ea\u5b9a\u4e49\u4e2d\u95f4\u8868 3\u3001\u5b57\u6bb5\u7c7b\u578b\u53c2\u6570 \u9ed8\u8ba4\u8868\u540d \u5e94\u7528_\u6a21\u578b\u7c7b\u540d\u5c0f\u5199 eg: app_student \uff081\uff09\u6240\u6709\u5b57\u6bb5\u90fd\u6709\u7684\u53c2\u6570 db_column=\"name\" \u6307\u5b9a\u6570\u636e\u5e93\u5b57\u6bb5\u540d verbose_name=\"\u522b\u540d\" help_text=\"\u8868\u5355\u8bf4\u660e\" primary_key=True \u8bbe\u7f6e\u4e3b\u952e unique=True \u552f\u4e00\u952e null=True \u6570\u636e\u5e93\u5141\u8bb8\u4e3a\u7a7a\uff0c\u9ed8\u8ba4\u90fd\u662f\u4e0d\u80fd\u4e3anull\u7684 blank=True \u524d\u7aef\u63d0\u4ea4\u8868\u5355\u5141\u8bb8\u4e3a\u7a7a db_index=True \u5efa\u7acb\u7d22\u5f15 editable=False \u4e0d\u5141\u8bb8\u7f16\u8f91\u5b57\u6bb5 \uff082\uff09\u4e2a\u522b\u5b57\u6bb5\u7684\u53c2\u6570 CharField max_length=100 \u6700\u5927\u957f\u5ea6 DateField\u3001DateTime unique_for_date=True \u65e5\u671f\u5fc5\u987b\u552f\u4e00 unique_for_month=True \u6708\u4efd\u552f\u4e00 auto_now=True \u81ea\u52a8\u66f4\u65b0\u8bb0\u5f55\u65f6\u95f4 auto_now_add=True \u81ea\u52a8\u589e\u52a0\u8bb0\u5f55\u65f6\u95f4 DecimalField max_digits=4 \u603b\u4f4d\u6570 decimal_places=2 \u5c0f\u6570\u70b9\u6570 eg: 11.22 16.34 \uff083\uff09\u5173\u7cfb\u578b\u5b57\u6bb5\u53c2\u6570 OneToOneField related_name=\"one\" \u7236\u8868\u67e5\u5b57\u8868\u6570\u636e ForeignKey on_delete=\"\" \u5916\u952e\u6240\u5173\u8054\u7684\u5bf9\u8c61\u88ab\u5220\u9664\u65f6\u8fdb\u884c\u7684\u64cd\u4f5c CASCADE\uff1a \u7ea7\u8054\u5220\u9664\u3002\u5c06\u5b9a\u4e49\u6709\u5916\u952e\u7684\u6a21\u578b\u5bf9\u8c61\u540c\u65f6\u5220\u9664\uff0c \u9ed8\u8ba4\u64cd\u4f5c PROTECT\uff1a \u963b\u6b62\u5220\u9664\u3002\u4f1a\u62a5\u5b8c\u6574\u6027\u9519\u8bef\u3002 DO_NOTHING\uff1a\u4ec0\u4e48\u4e5f\u4e0d\u505a SET_NULL\uff1a\u5916\u952e\u8bbe\u7f6e\u4e3a null\uff0c\u524d\u63d0\u662f null=True, blank=True\u3002 SET_DEFAULT\uff1a\u8bbe\u7f6e\u4e3a\u5916\u952e\u7684\u9ed8\u8ba4\u503c\uff0c\u524d\u63d0\u662f\u8bbe\u7f6e\u4e86default\u53c2\u6570\u3002 SET()\uff1a\u4f1a\u8c03\u7528\u5916\u9762\u7684\u503c\uff0c\u53ef\u4ee5\u662f\u4e00\u4e2a\u51fd\u6570\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\u4f7f\u7528 CASCADE \u5c31\u53ef\u4ee5\u4e86\u3002 eg: class B ( models . Model ): foreign = models . ForeignKey ( A , on_delete = models . CASCADE ) foreign = models . ForeignKey ( A , on_delete = models . PROTECT ) foreign = models . ForeignKey ( A , on_delete = models . DO_NOTHING ) foreign = models . ForeignKey ( A , on_delete = models . SET_NULL , null = True , blank = True ) foreign = models . ForeignKey ( A , on_delete = models . SET_DEFAULT , default = 0 ) foreign = models . ForeignKey ( A , on_delete = models . SET ) 4\u3001\u81ea\u5173\u8054 \u793a\u4f8b\uff1a\u5730\u5740 \u7701-\u5e02-\u53bf \u7ea7\u8054 class AddressInfo ( models . Model ): address = models . CharField ( max_length = 200 , null = True , blank = True , verbose_name = \"\u5730\u5740\" ) pid = models . ForeignKey ( \"self\" , null = True , blank = True , verbose_name = \"\u81ea\u5173\u8054\" , on_delete = models . SET_NULL ) def __str__ ( self ): return self . address","title":"\u5b57\u6bb5\u7c7b\u578b\u548c\u53c2\u6570"},{"location":"Python/ORM/#meta","text":"\u4fee\u6539\u5e94\u7528\u540d\u79f0 apps.py class OrmdemoConfig ( AppConfig ): name = 'ormdemo' verbose_name = \"\u5e94\u7528\u540d\u79f0\" \u4fee\u6539model\u5143\u6570\u636e class AddressInfo ( models . Model ): address = models . CharField ( max_length = 200 , null = True , blank = True , verbose_name = \"\u5730\u5740\" ) note = models . CharField ( max_length = 200 , null = True , blank = True , verbose_name = \"\u8bf4\u660e\" ) pid = models . ForeignKey ( \"self\" , null = True , blank = True , verbose_name = \"\u81ea\u5173\u8054\" , on_delete = models . SET_NULL ) def __str__ ( self ): return self . address class Meta : db_table = \"address\" # \u81ea\u5b9a\u4e49\u8868\u540d ordering = [ \"pid_id\" ] # \u6307\u5b9a\u6392\u5e8f\u5b57\u6bb5 verbose_name = \"\u5730\u5740\" # \u5355\u6570 verbose_name_plural = verbose_name # \u590d\u6570 abstract = True # \u8bbe\u7f6e\u4e3a\u57fa\u7c7b permissions = (( \"\u5b9a\u4e49\u597d\u7684\u6743\u9650\" , \"\u6743\u9650\u8bf4\u660e\" ),) managed = False # \u6309\u7167Django\u9ed8\u8ba4\u65b9\u5f0f\u7ba1\u7406\u6570\u636e\u8868 unique_together = ( \"address\" , \"note\" ) # \u8054\u5408\u552f\u4e00\u952e\uff0c\u5355\u5143\u7ec4\u6216\u591a\u5143\u7ec4 app_label = \"ormdemo\" # \u5b9a\u4e49\u6a21\u578b\u7c7b\u5c5e\u4e8e\u54ea\u4e2a\u5e94\u7528 db_tablespace = \"\" # \u5b9a\u4e49\u6570\u636e\u5e93\u8868\u7a7a\u95f4","title":"\u5143\u6570\u636eMeta"},{"location":"Python/ORM/#_2","text":"\"\"\" \u8bb2\u5e08 - \u52a9\u6559 \u4e00\u5bf9\u4e00 \u8bb2\u5e08 - \u8bfe\u7a0b\u8868 \u4e00\u5bf9\u591a \u8bfe\u7a0b\u8868 - \u5b66\u751f \u591a\u5bf9\u591a \"\"\" class Teacher ( models . Model ): \"\"\"\u8bb2\u5e08\u4fe1\u606f\u8868\"\"\" nickname = models . CharField ( max_length = 30 , primary_key = True , db_index = True , verbose_name = \"\u6635\u79f0\" ) introduction = models . TextField ( default = \"\u8fd9\u4f4d\u540c\u5b66\u5f88\u61d2\uff0c\u6728\u6709\u7b7e\u540d\u7684\u8bf4~\" , verbose_name = \"\u7b80\u4ecb\" ) fans = models . PositiveIntegerField ( default = 0 , verbose_name = \"\u7c89\u4e1d\u6570\" ) created_at = models . DateTimeField ( auto_now_add = True , verbose_name = \"\u521b\u5efa\u65f6\u95f4\" ) updated_at = models . DateTimeField ( auto_now = True , verbose_name = \"\u521b\u5efa\u65f6\u95f4\" ) class Meta : verbose_name = \"\u8bb2\u5e08\u4fe1\u606f\u8868\" verbose_name_plural = verbose_name def __str__ ( self ): return self . nickname class Course ( models . Model ): \"\"\"\u8bfe\u7a0b\u4fe1\u606f\u8868\"\"\" title = models . CharField ( max_length = 100 , primary_key = True , db_index = True , verbose_name = \"\u8bfe\u7a0b\u540d\" ) type = models . CharField ( choices = (( 0 , \"\u5176\u4ed6\" ), ( 1 , \"\u5b9e\u6218\u8bfe\" ), ( 2 , \"\u514d\u8d39\u8bfe\" )), max_length = 1 , default = 0 , verbose_name = \"\u8bfe\u7a0b\u7c7b\u578b\" ) price = models . PositiveSmallIntegerField ( verbose_name = \"\u4ef7\u683c\" ) volume = models . BigIntegerField ( verbose_name = \"\u9500\u91cf\" ) online = models . DateField ( verbose_name = \"\u4e0a\u7ebf\u65f6\u95f4\" ) # \u5220\u9664\u7ea7\u8054 teacher = models . ForeignKey ( Teacher , null = True , blank = True , on_delete = models . CASCADE , verbose_name = \"\u8bb2\u5e08\" ) created_at = models . DateTimeField ( auto_now_add = True , verbose_name = \"\u521b\u5efa\u65f6\u95f4\" ) updated_at = models . DateTimeField ( auto_now = True , verbose_name = \"\u521b\u5efa\u65f6\u95f4\" ) class Meta : verbose_name = \"\u8bfe\u7a0b\u4fe1\u606f\u8868\" verbose_name_plural = verbose_name def __str__ ( self ): return f \"{self.get_type_display()}-{self.title}\" class Student ( models . Model ): \"\"\"\u5b66\u751f\u4fe1\u606f\u8868\"\"\" nickname = models . CharField ( max_length = 30 , primary_key = True , db_index = True , verbose_name = \"\u5b66\u751f\u59d3\u540d\" ) age = models . PositiveSmallIntegerField ( verbose_name = \"\u5e74\u9f84\" ) gender = models . CharField ( choices = (( 0 , \"\u4fdd\u5bc6\" ), ( 1 , \"\u7537\" ), ( 2 , \"\u5973\" )), max_length = 1 , default = 0 , verbose_name = \"\u6027\u522b\" ) study_time = models . PositiveIntegerField ( default = 0 , verbose_name = \"\u5b66\u4e60\u65f6\u957f(h)\" ) course = models . ManyToManyField ( Course , verbose_name = \"\u8bfe\u7a0b\" ) created_at = models . DateTimeField ( auto_now_add = True , verbose_name = \"\u521b\u5efa\u65f6\u95f4\" ) updated_at = models . DateTimeField ( auto_now = True , verbose_name = \"\u521b\u5efa\u65f6\u95f4\" ) class Meta : verbose_name = \"\u5b66\u751f\u4fe1\u606f\u8868\" verbose_name_plural = verbose_name def __str__ ( self ): return self . nickname class TeacherAssistant ( models . Model ): \"\"\"\u52a9\u6559\u4fe1\u606f\u8868\"\"\" nickname = models . CharField ( max_length = 30 , primary_key = True , db_index = True , verbose_name = \"\u6635\u79f0\" ) hobby = models . CharField ( max_length = 10 , null = True , blank = True , verbose_name = \"\u7231\u597d\" ) # \u5220\u9664\u7f6e\u7a7a teacher = models . OneToOneField ( Teacher , null = True , blank = True , on_delete = models . SET_NULL , verbose_name = \"\u8bb2\u5e08\" ) created_at = models . DateTimeField ( auto_now_add = True , verbose_name = \"\u521b\u5efa\u65f6\u95f4\" ) updated_at = models . DateTimeField ( auto_now = True , verbose_name = \"\u521b\u5efa\u65f6\u95f4\" ) class Meta : verbose_name = \"\u52a9\u6559\u4fe1\u606f\u8868\" verbose_name_plural = verbose_name def __str__ ( self ): return self . nickname \u751f\u6210\u6570\u636e\u8868 python manage . py makemigrations # \u751f\u6210\u8fc1\u79fb\u6587\u4ef6 python manage . py migrate # \u6267\u884c\u8fc1\u79fb\u6587\u4ef6 \u5220\u9664\u67d0\u4e2a\u6a21\u578b\u7c7b\u7684\u5b8c\u6574\u64cd\u4f5c: \uff081\uff09\u5728\u5df2\u521b\u5efa\u7684app\u4e0b, \u9996\u5148\u5220\u9664models.py\u4e2d\u9700\u8981\u5220\u9664\u7684\u6a21\u578b\u7c7b \uff082\uff09\u5220\u9664\u8be5\u6a21\u578b\u7c7b\u5728\u8fc1\u79fb\u811a\u672cmigrations\u4e2d\u7684\u5bf9\u5e94\u6587\u4ef6 \uff083\uff09\u5220\u9664\u8be5\u9879\u76ee\u5728django_migrations\u4e2d\u7684\u5bf9\u5e94\u8bb0\u5f55 \uff084\uff09\u5220\u9664\u6570\u636e\u5e93\u4e2d\u5bf9\u5e94\u7684\u6570\u636e\u8868 \u5bfc\u5165\u6570\u636e \uff081\uff09django shell $ python manage.py shell from app.models import Mode model = Model () model . name = \"name\" model . save () \uff082\uff09\u811a\u672c\u5bfc\u5165 # -*- coding: utf-8 -*- import os import random from datetime import date import django import sys # \u5bfc\u5165\u9879\u76ee\u914d\u7f6e project_path = os . path . dirname ( os . path . dirname ( os . path . abspath ( __file__ ))) sys . path . append ( project_path ) os . environ [ 'DJANGO_SETTINGS_MODULE' ] = 'mysite.settings' django . setup () from ormdemo.models import Teacher , Course , Student , TeacherAssistant def import_data (): # \u8bb2\u5e08\u6570\u636e create Teacher . objects . create ( nickname = \"Jack\" , introduction = \"Python\u5de5\u7a0b\u5e08\" , fans = 666 ) # \u8bfe\u7a0b\u6570\u636e bulk_create data = [ Course ( title = f \"Python\u7cfb\u5217\u6559\u7a0b{i}\" , teacher = Teacher . objects . get ( nickname = \"Jack\" ), type = random . choice ([ 0 , 1 , 2 ]), price = random . randint ( 200 , 300 ), volume = random . randint ( 100 , 10000 ), online = date ( 2018 , 10 , 1 ) ) for i in range ( 1 , 5 ) ] Course . objects . bulk_create ( data ) # \u5b66\u751f\u6570\u636e update_or_create Student . objects . update_or_create ( nickname = \"A\u540c\u5b66\" , defaults = { \"age\" : random . randint ( 18 , 58 ), \"gender\" : random . choice ([ 0 , 1 , 2 ]), \"study_time\" : random . randint ( 9 , 999 ) } ) # \u6b63\u5411\u6dfb\u52a0 # \u9500\u91cf\u5927\u4e8e\u7b49\u4e8e1000\u7684\u8bfe\u7a0b Student . objects . get ( nickname = \"A\u540c\u5b66\" ) . course . add ( * Course . objects . filter ( volume__gte = 1000 )) # \u53cd\u5411\u6dfb\u52a0 # \u5b66\u4e60\u65f6\u95f4\u5927\u4e8e\u7b49\u4e8e500\u5c0f\u65f6\u7684\u540c\u5b66 Course . objects . get ( title = \"Python\u7cfb\u5217\u6559\u7a0b1\" ) . student_set . add ( * Student . objects . filter ( study_time__gte = 500 )) # \u52a9\u6559\u6570\u636e get_or_create() TeacherAssistant . objects . get_or_create ( nickname = \"\u52a9\u65591\" , defaults = { \"hobby\" : \"\u6155\u8bfe\u7f51\u5b66\u4e60\" , \"teacher\" : Teacher . objects . get ( nickname = \"Jack\" ) } ) if __name__ == '__main__' : import_data () \uff083\uff09fixtures Django serialization -> model\u4fdd\u5b58 python manage.py dumpdata > data.json # \u5bfc\u51fa\u6570\u636e python manage.py loaddata data.json # \u5bfc\u5165\u6570\u636e \uff084\uff09mysqldump MySQL\u6570\u636e\u5e93\u5bfc\u5165\u5bfc\u51fa\u6570\u636e (5)PyCharm PyCharm\u81ea\u5e26\u7684\u5bfc\u5165\u5bfc\u51fa\u5de5\u5177","title":"\u6a21\u578b\u7c7b\u5f00\u53d1\u5b9e\u4f8b"},{"location":"Python/ORM/#modelapi","text":"1\u3001\u67e5\u8be2\uff0c\u68c0\u7d22\uff0c\u8fc7\u6ee4 Teacher . objects . all () # \u8fd4\u56de\u591a\u4e2a\u7ed3\u679c Teacher . objects . get ( id = 1 ) \u8fd4\u56de\u4e00\u6761\u7ed3\u679c Teacher . objects . filter ( fans__gte = 500 ) # \u8fd4\u56de\u591a\u4e2a\u7ed3\u679c 2\u3001\u6570\u636e\u5339\u914d\u5927\u5c0f\u5199\u654f\u611f # \u53cc\u4e0b\u5212\u7ebf\u5f00\u5934`__` Teacher . objects . filter ( fans__in = [ 500 , 600 ]) # i\u5f00\u5934\u8868\u793a\u5927\u5c0f\u5199\u654f\u611f Teacher . objects . filter ( nickname__icontains = \"A\" ) 3\u3001\u7ed3\u679c\u5207\u7247\u3001\u6392\u5e8f\u3001\u94fe\u5f0f\u67e5\u8be2 Teacher . objects . all ()[: 1 ] Teacher . objects . all () . order_by ( \"-age\" ) # \u8d1f\u53f7\u8868\u793a\u964d\u5e8f Teacher . objects . filter ( fans__gte = 500 ) . order_by ( \"nickname\" ) # \u67e5\u8be2\u96c6\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u6392\u5e8f 4\u3001\u67e5\u770b\u6267\u884c\u7684\u539f\u751fSQL Teacher . objects . all () . order_by ( \"-nickname\" ) . query \"\"\" SELECT `ormdemo_teacher`.`nickname`, FROM `ormdemo_teacher` ORDER BY `ormdemo_teacher`.`nickname` DESC \"\"\"","title":"ModelAPI"},{"location":"Python/ORM/#querysetapi","text":"\u8bfb\u64cd\u4f5c\u5927\u90e8\u5206\u90fd\u8fd4\u56de 1\u3001\u7b2c\u4e00\u7c7b all \u5168\u90e8 filter \u8fc7\u6ee4 order_by \u6392\u5e8f exclude \u6392\u9664 reverse \u9006\u5e8f \u9700\u8981\u5728\u5143\u6570\u636e\u4e2d\u8bbe\u7f6eordering distinct \u53bb\u91cd Student . objects . all () . exclude ( nickname = \"A\u540c\u5b66\" ) # SELECT `ormdemo_student`.`nickname` # FROM `ormdemo_student` # WHERE NOT (`ormdemo_student`.`nickname` = A\u540c\u5b66) Student . objects . all () . exclude ( nickname = \"A\u540c\u5b66\" ) . reverse () \"\"\" ELECT `ormdemo_student`.`nickname` FROM `ormdemo_student` WHERE NOT (`ormdemo_student`.`nickname` = A\u540c\u5b66) \"\"\" 2\u3001\u7b2c\u4e8c\u7c7b extra \u522b\u540d defer \u6392\u9664\u4e00\u4e9b\u5b57\u6bb5 only \u9009\u62e9\u4e00\u4e9b\u5b57\u6bb5 Student . objects . all () . extra ( select = { \"name\" : \"nickname\" }) \"\"\" SELECT (nickname) AS `name`, `ormdemo_student`.`nickname`, `ormdemo_student`.`age` FROM `ormdemo_student` \"\"\" Student . objects . all () . only ( \"nickname\" , \"age\" ) \"\"\" SELECT `ormdemo_student`.`nickname`, `ormdemo_student`.`age` FROM `ormdemo_student` \"\"\" 3\u3001\u7b2c\u4e09\u7c7b values \u83b7\u53d6\u5b57\u5178\u5f62\u5f0f values_list \u83b7\u53d6\u5143\u7ec4\u5f62\u5f0f Student . objects . values ( \"nickname\" , \"age\" ) # <QuerySet [{'nickname': 'A\u540c\u5b66', 'age': 54}, {'nickname': 'B\u540c\u5b66', 'age': 36}]> Student . objects . values_list ( \"nickname\" , \"age\" ) # <QuerySet [('A\u540c\u5b66', 54), ('B\u540c\u5b66', 36)]> Student . objects . values_list ( \"nickname\" , flat = True ) # \u5355\u4e2a\u5b57\u6bb5\u8fd4\u56de\u5217\u8868 # <QuerySet ['A\u540c\u5b66', 'B\u540c\u5b66']> 4\u3001\u7b2c\u56db\u7c7b dates\u3001datatimes\u6839\u636e\u65f6\u95f4\u65e5\u671f\u83b7\u53d6\u67e5\u8be2\u96c6 Student . objects . dates ( \"created_at\" , \"month\" ) \"\"\" SELECT DISTINCT CAST(DATE_FORMAT(`ormdemo_student`.`created_at`, '%Y-%m-01') AS DATE) AS `datefield` FROM `ormdemo_student` WHERE `ormdemo_student`.`created_at` IS NOT NULL ORDER BY `datefield` ASC \"\"\" 5\u3001\u7b2c\u4e94\u7c7b union \u5e76\u96c6 intersection \u4ea4\u96c6 \u9700\u8981\u6570\u636e\u5e93\u652f\u6301 difference \u5dee\u96c6 \u9700\u8981\u6570\u636e\u5e93\u652f\u6301 ret1 = Student . objects . filter ( nickname = \"\u540c\u5b66A\" ) ret2 = Student . objects . filter ( nickname = \"\u540c\u5b66B\" ) ret1 . union ( ret2 ) \"\"\" (SELECT `ormdemo_student`.`nickname FROM `ormdemo_student` WHERE `ormdemo_student`.`nickname` = '\u540c\u5b66A') UNION (SELECT `ormdemo_student`.`nickname` FROM `ormdemo_student` WHERE `ormdemo_student`.`nickname` = '\u540c\u5b66B') LIMIT 2 6\u3001\u7b2c\u516d\u7c7b select_related \u4e00\u5bf9\u4e00\uff0c\u591a\u5bf9\u4e00\u67e5\u8be2\u4f18\u5316 prefetch_related \u4e00\u5bf9\u591a\uff0c\u591a\u5bf9\u591a\u67e5\u8be2\u4f18\u5316 Course . objects . all () . select_related ( \"teacher\" ) \"\"\" SELECT `ormdemo_course`.`title`, `ormdemo_teacher`.`nickname` FROM `ormdemo_course` LEFT OUTER JOIN `ormdemo_teacher` ON (`ormdemo_course`.`teacher_id` = `ormdemo_teacher`.`nickname`) LIMIT 21; \"\"\" Student . objects . all () . prefetch_related ( \"course\" ) \"\"\" SELECT `ormdemo_student`.`nickname` FROM `ormdemo_student` LIMIT 21; SELECT (`ormdemo_student_course`.`student_id`) AS `_prefetch_related_val_student_id`, `ormdemo_course`.`title` FROM `ormdemo_course` INNER JOIN `ormdemo_student_course` ON (`ormdemo_course`.`title` = `ormdemo_student_course`.`course_id`) WHERE `ormdemo_student_course`.`student_id` IN ('A\u540c\u5b66', 'B\u540c\u5b66', 'C\u540c\u5b66', 'D\u540c\u5b66'); \"\"\" \u53cd\u5411\u67e5\u8be2 Teacher . objects . get ( nickname = \"Jack\" ) . course_set . all () \"\"\" SELECT `ormdemo_teacher`.`nickname` FROM `ormdemo_teacher` WHERE `ormdemo_teacher`.`nickname` = 'Jack' SELECT `ormdemo_course`.`title` FROM `ormdemo_course` WHERE `ormdemo_course`.`teacher_id` = 'Jack' LIMIT 21; \"\"\" 7\u3001\u7b2c\u4e03\u7c7b annotate \u805a\u5408\u8ba1\u6570\uff0c\u6c42\u548c\uff0c\u5e73\u5747\u6570\uff0c\u6267\u884c\u539f\u751fSQL\uff08\u5206\u7ec4\u540e\u7684\u6570\u636e\u8fdb\u884c\u7edf\u8ba1\uff09 from django.db.models import Count , Avg , Max , Min , Sum Course . objects . values ( \"teacher\" ) . annotate ( vol = Sum ( \"volume\" )) \"\"\" SELECT `ormdemo_course`.`teacher_id`, SUM(`ormdemo_course`.`volume`) AS `vol` FROM `ormdemo_course` GROUP BY `ormdemo_course`.`teacher_id` ORDER BY NULL LIMIT 21; \"\"\" Course . objects . values ( \"teacher\" ) . annotate ( pri = Avg ( \"price\" )) \"\"\" SELECT `ormdemo_course`.`teacher_id`, AVG(`ormdemo_course`.`price`) AS `pri` FROM `ormdemo_course` GROUP BY `ormdemo_course`.`teacher_id` ORDER BY NULL LIMIT 21; # order by null\u7528\u9014\u662f\u5f3a\u5236\u5bf9\u67e5\u8be2\u7ed3\u679c\u7981\u7528\u6392\u5e8f \"\"\"","title":"\u8fd4\u56de\u65b0\u7684QuerySet\u7684API"},{"location":"Python/ORM/#querysetapi_1","text":"\u5199\u64cd\u4f5c\u90fd\u4e0d\u8fd4\u56de\u7ed3\u679c\u96c6 1\u3001\u83b7\u53d6\u5bf9\u8c61 get, get_or_create, first, last, in_bulk latest\u6700\u8fd1\u8bb0\u5f55, earliest \u6700\u65e9\u8bb0\u5f55 \u9700\u8981\u8bbe\u7f6e\u5143\u6570\u636eget_latest_by Student . objects . get ( nickname = \"A\u540c\u5b66\" ) # \u8fd4\u56de\u591a\u4e2a\u4f1a\u62a5\u9519 \"\"\" SELECT `ormdemo_student`.`nickname` FROM `ormdemo_student` WHERE `ormdemo_student`.`nickname` = 'A\u540c\u5b66' \"\"\" Student . objects . first () \"\"\" SELECT `ormdemo_student`.`nickname` FROM `ormdemo_student` ORDER BY `ormdemo_student`.`nickname` ASC LIMIT 1 \"\"\" Student . objects . last () \"\"\" SELECT `ormdemo_student`.`nickname` FROM `ormdemo_student` ORDER BY `ormdemo_student`.`nickname` DESC LIMIT 1; \"\"\" Student . objects . in_bulk ([ \"A\u540c\u5b66\" ]) \"\"\" SELECT `ormdemo_student`.`nickname` FROM `ormdemo_student` WHERE `ormdemo_student`.`nickname` IN ('A\u540c\u5b66'); \"\"\" Student . objects . latest () \"\"\" SELECT `ormdemo_student`.`nickname FROM `ormdemo_student` ORDER BY `ormdemo_student`.`created_at` DESC LIMIT 1; \"\"\" Student . objects . earliest () \"\"\" SELECT `ormdemo_student`.`nickname FROM `ormdemo_student` ORDER BY `ormdemo_student`.`created_at` ASC LIMIT 1; 2\u3001\u521b\u5efa\u5bf9\u8c61 create, bulk_create, update_or_create 3\u3001\u66f4\u65b0\u5bf9\u8c61 update, update_or_create Student . objects . filter ( nickname = \"A\u540c\u5b66\" ) . update ( age = 13 ) \"\"\" UPDATE `ormdemo_student` SET `age` = 13 WHERE `ormdemo_student`.`nickname` = 'A\u540c\u5b66'; \"\"\" 4\u3001\u5220\u9664\u5bf9\u8c61 delete \u4f7f\u7528filter\u8fc7\u6ee4 Student . objects . filter ( nickname = \"A\u540c\u5b66\" ) . delete () \"\"\" SELECT `ormdemo_student`.`nickname FROM `ormdemo_student` WHERE `ormdemo_student`.`nickname` = 'A\u540c\u5b66'; DELETE FROM `ormdemo_student_course` WHERE `ormdemo_student_course`.`student_id` IN ('A\u540c\u5b66'); DELETE FROM `ormdemo_student` WHERE `ormdemo_student`.`nickname` IN ('A\u540c\u5b66'); (13, {'ormdemo.Student_course': 12, 'ormdemo.Student': 1}) \"\"\" 5\u3001\u5176\u4ed6\u64cd\u4f5c exists, count, aggregate(\u6574\u4e2a\u6570\u636e\u8868\u7edf\u8ba1) Student . objects . filter ( nickname = \"B\u540c\u5b66\" ) . exists () \"\"\" SELECT (1) AS `a` FROM `ormdemo_student` WHERE `ormdemo_student`.`nickname` = 'B\u540c\u5b66' LIMIT 1 \"\"\" Student . objects . filter ( nickname = \"B\u540c\u5b66\" ) . count () \"\"\" SELECT COUNT(*) AS `__count` FROM `ormdemo_student` WHERE `ormdemo_student`.`nickname` = 'B\u540c\u5b66'; \"\"\" Course . objects . aggregate ( Max ( \"price\" ), Min ( \"price\" ), Avg ( \"price\" ), Sum ( \"volum\" )) \"\"\" SELECT MAX(`ormdemo_course`.`price`) AS `price__max`, MIN(`ormdemo_course`.`price`) AS `price__min`, AVG(`ormdemo_course`.`price`) AS `price__avg`, SUM(`ormdemo_course`.`volume`) AS `volume__sum` FROM `ormdemo_course`; {'price__max': 295, 'price__min': 210, 'price__avg': 250.75, 'volume__sum': 60559} \"\"\" \u81ea\u5b9a\u4e49\u805a\u5408\u67e5\u8be2\uff08\u7565\uff09 group_contact","title":"\u4e0d\u8fd4\u56deQuerySet\u7684API"},{"location":"Python/ORM/#fq","text":"F\u5bf9\u8c61 \u64cd\u4f5c\u5b57\u6bb5\u6570\u636e Q\u5bf9\u8c61 \u7ed3\u5408AND OR NOT | ~ & \u5b9e\u73b0\u590d\u6742\u67e5\u8be2 from django.db.models import F , Q Student . objects . update ( age = F ( \"age\" ) + 3 ) \"\"\" UPDATE `ormdemo_student` SET `age` = (`ormdemo_student`.`age` + 3); \"\"\" Student . objects . filter ( Q ( age__gte = 1 ) & Q ( age__lte = 10 )) \"\"\" SELECT `ormdemo_student`.`nickname` FROM `ormdemo_student` WHERE (`ormdemo_student`.`age` >= 1 AND `ormdemo_student`.`age` <= 10) LIMIT 21; \"\"\"","title":"F\u5bf9\u8c61\u548cQ\u5bf9\u8c61"},{"location":"Python/orator/","text":"orator \u5b89\u88c5 pip install orator \u6587\u6863 https://orator-orm.com/docs/ Orator\u6587\u6863\u4e0d\u662f\u5f88\u5b8c\u6574\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u7ed3\u5408Laravel\u548cThinkPHP\u6587\u6863\uff0c\u601d\u60f3\u548c\u64cd\u4f5c\u57fa\u672c\u4e00\u81f4 \uff08\u82f1\u6587\uff09 https://www.kancloud.cn/manual/thinkphp5/135176 \uff08\u4e2d\u6587\uff09 https://www.kancloud.cn/manual/thinkphp5/135176 \u548cLaravel\u4e00\u6837\uff0c\u652f\u6301\u4e09\u79cd\u64cd\u4f5c\u65b9\u5f0f\uff1a 1\u3001Query 2\u3001Query Builder 3\u3001ORM \u4e00\u3001\u914d\u7f6e \u6d4b\u8bd5\u4f7f\u7528\u7684\u8868 CREATE TABLE ` student ` ( ` id ` int ( 11 ) NOT NULL AUTO_INCREMENT , ` name ` varchar ( 20 ) NOT NULL DEFAULT '' COMMENT '\u59d3\u540d' , ` age ` tinyint ( 3 ) unsigned NOT NULL DEFAULT '0' COMMENT '\u5e74\u9f84' , ` sex ` tinyint ( 3 ) unsigned NOT NULL DEFAULT '0' COMMENT '\u6027\u522b' , ` created_at ` int ( 11 ) NOT NULL DEFAULT '0' COMMENT '\u521b\u5efa\u65f6\u95f4' , ` updated_at ` int ( 11 ) NOT NULL DEFAULT '0' COMMENT '\u4fee\u6539\u65f6\u95f4' , PRIMARY KEY ( ` id ` ) ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COMMENT = '\u5b66\u751f\u8868' 1\u3001\u8bbe\u7f6e\u67e5\u8be2\u65e5\u5fd7\uff0c\u6253\u5370sql import logging logger = logging . getLogger ( 'orator.connection.queries' ) logger . setLevel ( logging . DEBUG ) formatter = logging . Formatter ( ' %(elapsed_time)s ms %(query)s ' ) handler = logging . StreamHandler () handler . setFormatter ( formatter ) logger . addHandler ( handler ) 2\u3001\u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u53c2\u6570 from orator import DatabaseManager # \u914d\u7f6e\u652f\u6301\u591a\u4e2a\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u652f\u6301\u8bfb\u5199\u5206\u79bb config = { 'default' : 'mysql' , 'mysql' : { 'read' : [ { 'host' : 'localhost' } ], 'write' : [ { 'host' : 'localhost' } ], 'driver' : 'mysql' , 'database' : 'data' , 'user' : 'root' , 'password' : '123456' , 'prefix' : '' , 'log_queries' : True , # \u5f00\u542f\u65e5\u5fd7 'use_qmark' : True , # \u4f7f\u7528 ? \u66ff\u4ee3\u53d8\u91cf } } db = DatabaseManager ( config ) \u4e8c\u3001Query 1\u3001\u8bfb\u64cd\u4f5c # select return list results = db . select ( 'select * from student where id = ?' , [ 2 ]) print ( results ) # ({'id': 2, 'name': '\u674e\u767d', 'age': 24, 'sex': 1, 'created_at': 1575127010, 'updated_at': 1575187008},) 2\u3001\u5199\u64cd\u4f5c # insert return int result = db . insert ( 'insert into student (age, name) values (?, ?)' , [ 23 , 'John' ]) print ( result ) # 1 # update return int result = db . update ( 'update student set age = 10 where name = ?' , [ 'John' ]) print ( result ) # 1 # delete return int result = db . delete ( 'delete from student where id = ?' , [ 132 ]) print ( result ) # 1 3\u3001\u8868\u64cd\u4f5c\u548c\u4e8b\u52a1 # statement result = db . statement ( 'drop table student' ) print ( result ) # 0 # \u6267\u884c\u4e8b\u52a1 with db . transaction (): db . table ( 'student' ) . update ({ 'age' : 1 }) # db.table('posts').delete() \u4e09\u3001Query Builder 1\u3001select # select all row from table users = db . table ( 'student' ) . get () # 'SELECT * FROM `student`' for user in users : print ( user [ 'name' ]) # \u6216\u8005 user.name # chunk \u6bcf\u6b21\u83b7\u53d65\u4e2a for users in db . table ( 'student' ) . chunk ( 5 ): print ( '==' ) for user in users : print ( user [ 'name' ]) # \u83b7\u53d6single row(None) from a table user = db . table ( 'student' ) . where ( 'name' , 'John' ) . first () \"SELECT * FROM `student` WHERE `name` = 'John' LIMIT 1\" print ( user [ 'name' ]) # \u8fd4\u56desingle column from a row user = db . table ( 'student' ) . where ( 'name' , 'John' ) . pluck ( 'name' ) \"SELECT `name` FROM `student` WHERE `name` = 'John' LIMIT 1\" print ( user ) # \u8fd4\u56de \u67d0\u5217\u503c\u7684\u5217\u8868 sql = db . table ( 'student' ) . lists ( 'name' ) 'SELECT `name` FROM `student`' print ( list ( sql )) # \u8fd4\u56de\u4e00\u4e2a\u5b57\u5178\u5217\u8868 roles = db . table ( 'student' ) . lists ( 'age' , 'name' ) print ( roles ) 'SELECT `age`, `name` FROM `student`' # {'John': 1} # select users = db . table ( 'student' ) . select ( 'name' , 'age' ) . get () # 'SELECT `name`, `age` FROM `student`' users = db . table ( 'student' ) . distinct () . get () # 'SELECT DISTINCT * FROM `student`' users = db . table ( 'student' ) . select ( 'name as user_name' ) . get () # 'SELECT `name` AS `user_name` FROM `student`' # where users = db . table ( 'student' ) . where ( 'age' , '>' , 25 ) . get () # 'SELECT * FROM `student` WHERE `age` > 25' users = db . table ( 'student' ) . where ( 'age' , '>' , 25 ) . or_where ( 'name' , '--\"John' ) . get () # 'SELECT * FROM `student` WHERE `age` > 25 OR `name` = \\'--\\\\\"John\\'' users = db . table ( 'student' ) . where_between ( 'age' , [ 25 , 35 ]) . get () # 'SELECT * FROM `student` WHERE `age` BETWEEN 25 AND 35' users = db . table ( 'student' ) . where_not_between ( 'age' , [ 25 , 35 ]) . get () # 'SELECT * FROM `student` WHERE `age` NOT BETWEEN 25 AND 35' users = db . table ( 'student' ) . where_in ( 'id' , [ 1 , 2 , 3 ]) . get () # 'SELECT * FROM `student` WHERE `id` IN (1, 2, 3)' users = db . table ( 'student' ) . where_not_in ( 'id' , [ 1 , 2 , 3 ]) . get () # 'SELECT * FROM `student` WHERE `id` NOT IN (1, 2, 3)' users = db . table ( 'student' ) . where_null ( 'updated_at' ) . get () # 'SELECT * FROM `student` WHERE `updated_at` IS NULL' query = db . table ( 'student' ) . select ( 'age' ) . order_by ( 'age' ) query . group_by ( 'age' ) query . having ( 'age' , '>' , 100 ) users = query . get () # SELECT `age` FROM `student` GROUP BY `age` HAVING `age` > 100 ORDER BY `age` ASC' 2\u3001 insert db . table ( 'student' ) . insert ( name = 'Tom' , age = 12 ) # \"INSERT INTO `student` (`name`, `age`) VALUES ('Tom', 12)\" db . table ( 'student' ) . insert ({ 'name' : 'Tom' , 'age' : 13 }) # \"INSERT INTO `student` (`name`, `age`) VALUES ('Tom', 13)\" uid = db . table ( 'student' ) . insert_get_id ({ 'name' : 'Tom' , 'age' : 13 }) # \"INSERT INTO `student` (`age`, `name`) VALUES (13, 'Tom')\" db . table ( 'student' ) . insert ([ { 'name' : 'Tom' , 'age' : 13 }, { 'name' : 'Tom' , 'age' : 14 } ]) # \"INSERT INTO `student` (`age`, `name`) VALUES (13, 'Tom'), (14, 'Tom')\" 3\u3001update db . table ( 'student' ) . where ( 'id' , 1 ) . update ( age = 1 ) # 'UPDATE `student` SET `age` = 1 WHERE `id` = 1' db . table ( 'student' ) . where ( 'id' , 1 ) . update ({ 'age' : 1 }) # 'UPDATE `student` SET `age` = 1 WHERE `id` = 1' 4\u3001increment /decrement db . table ( 'student' ) . increment ( 'age' ) # Increment the value by 1 'UPDATE `student` SET `age` = `age` + 1' db . table ( 'student' ) . increment ( 'age' , 5 ) # Increment the value by 5 'UPDATE `student` SET `age` = `age` + 5' db . table ( 'student' ) . decrement ( 'age' ) # Decrement the value by 1 'UPDATE `student` SET `age` = `age` - 1' db . table ( 'student' ) . decrement ( 'age' , 5 ) # Decrement the value by 5 'UPDATE `student` SET `age` = `age` - 5' db . table ( 'student' ) . increment ( 'votes' , 1 , name = 'John' ) # TypeError: increment() got an unexpected keyword argument 'name' db . table ( 'student' ) . increment ( 'age' , 1 , { 'name' : 'John' }) \"UPDATE `student` SET `age` = `age` + 1, `name` = 'John'\" 5\u3001delete db . table ( 'student' ) . where ( 'age' , '<' , 25 ) . delete () # 'DELETE FROM `student` WHERE `age` < 25' db . table ( 'student' ) . delete () 'DELETE FROM `student`' db . table ( 'student' ) . truncate () 'TRUNCATE `student`' \u56db\u3001Model \u5b9a\u4e49model from orator import Model , SoftDeletes Model . set_connection_resolver ( db ) class User ( SoftDeletes , Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' # \u8bbe\u7f6e\u53ef\u4ee5\u6279\u91cf\u8d4b\u503c\u7684\u5b57\u6bb5 __fillable__ = [ 'name' , 'age' ] # \u8bbe\u7f6e\u4e0d\u5141\u8bb8\u8d4b\u503c\u5b57\u6bb5 __guarded__ = [ 'id' ] # \u7981\u7528\u65f6\u95f4\u81ea\u52a8\u66f4\u65b0 created_at updated_at __timestamps__ = False # \u9700\u8981\u7ee7\u627f SoftDeletes \u4f7f\u7528\u8f6f\u5220\u9664, \u597d\u50cf\u4e0d\u8d77\u4f5c\u7528 __dates__ = [ 'deleted_at' ] 1\u3001select users = User . all () 'SELECT * FROM `student`' user = User . find ( 1 ) 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' # \u5982\u679c\u6ca1\u6709\u629b\u51fa\u5f02\u5e38 model = User . find_or_fail ( 1 ) model = User . where ( 'age' , '>' , 100 ) . first_or_fail () 'SELECT * FROM `student` WHERE `age` > 100 LIMIT 1' users = User . where ( 'age' , '>' , 100 ) . take ( 10 ) . get () 'SELECT * FROM `student` WHERE `age` > 100 LIMIT 10' count = User . where ( 'age' , '>' , 100 ) . count () 'SELECT COUNT(*) AS aggregate FROM `student` WHERE `age` > 100' # \u4f7f\u7528\u539f\u6837\u67e5\u8be2 users = User . where_raw ( 'id > ? and age = 100' , [ 25 ]) . get () 'SELECT * FROM `student` WHERE id > 25 AND age = 100' # \u5206\u6b21\u53d6\u56de\u6570\u636e for users in User . chunk ( 100 ): for user in users : pass 2 insert # Save\u65b0\u589e\u6570\u636e user = User () user . name = 'John' user . save () \"INSERT INTO `student` (`name`) VALUES ('John')\" # Create user = User . create ( name = 'John' ) \"INSERT INTO `student` (`name`) VALUES ('John')\" # \u67e5\u8be2\u6570\u636e\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u4e00\u6761\u6570\u636e user = User . first_or_create ( name = 'Jini' ) \"SELECT * FROM `student` WHERE (`name` = 'Jini') LIMIT 1\" \"INSERT INTO `student` (`name`) VALUES ('Jini')\" # \u67e5\u8be2\u6570\u636e\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b user = User . first_or_new ( name = 'java' ) \"SELECT * FROM `student` WHERE (`name` = 'java') LIMIT 1\" 3\u3001 Update # find ->save user = User . find ( 14 ) 'SELECT * FROM `student` WHERE `student`.`id` = 14 LIMIT 1' user . name = 'Foo' user . save () \"UPDATE `student` SET `name` = 'Foo' WHERE `id` = 14\" # update User . where ( 'age' , '>' , 100 ) . update ( name = 'Jack' ) \"UPDATE `student` SET `name` = 'Jack' WHERE `age` > 100\" 4\u3001 delete # find -> delete user = User . find ( 14 ) # 'SELECT * FROM `student` WHERE `student`.`id` = 14 LIMIT 1' user . delete () # 'DELETE FROM `student` WHERE `id` = 14' User . destroy ( 15 ) 'SELECT * FROM `student` WHERE `id` IN (15)' 'DELETE FROM `student` WHERE `id` = 15' User . destroy ( 16 , 17 , 18 ) 'SELECT * FROM `student` WHERE `id` IN (16, 17, 18)' 'DELETE FROM `student` WHERE `id` = 16' 'DELETE FROM `student` WHERE `id` = 17' 'DELETE FROM `student` WHERE `id` = 18' User . where ( 'age' , '>' , 100 ) . delete () 'DELETE FROM `student` WHERE `age` > 100' # User.where('id', '=', 19).delete() 'DELETE FROM `student` WHERE `id` = 19' # \u4f7f\u7528\u8f6f\u5220\u9664\u540e\uff0c\u67e5\u8be2\u7ed3\u679c\u6ca1\u6709\u5220\u9664\u540e\u7684\u6570\u636e phone = User . find ( 20 ) 'SELECT * FROM `student` WHERE (`student`.`id` = 20) AND (`student`.`deleted_at` IS NULL) LIMIT 1' # \u5305\u542b\u8f6f\u5220\u9664\u540e\u7684\u6570\u636e User . with_trashed () . where ( 'id' , 1 ) . get () 'SELECT * FROM `student` WHERE `id` = 1' \u4e94\u3001Model\u5173\u8054\u67e5\u8be2 \u5f15\u5165\u6a21\u5757 from orator import Model Model . set_connection_resolver ( db ) from orator.orm import ( has_one , belongs_to , has_many , belongs_to_many , has_many_through , morph_to , morph_one , morph_many , morph_to_many , morphed_by_many ) 1\u3001\u4e00\u5bf9\u4e00 \"\"\" student <- -> phone student id - integer name - string phone id - integer number - string student_id - integer \"\"\" class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' # \u6307\u5b9a\u5916\u952e @has_one ( 'student_id' ) def phone ( self ): return Phone class Phone ( Model ): # \u6307\u5b9a\u672c\u8868\u4e2d\u7684\u5916\u952e\u5b57\u6bb5 @belongs_to ( 'student_id' ) def student ( self ): return Student phone = Student . find ( 20 ) . phone 'SELECT * FROM `student` WHERE `student`.`id` = 20 LIMIT 1' print ( phone ) 'SELECT * FROM `phones` WHERE `phones`.`student_id` = 20 LIMIT 1' ret = Phone . find ( 1 ) . student 'SELECT * FROM `phones` WHERE `phones`.`id` = 1 LIMIT 1' print ( ret ) 'SELECT * FROM `student` WHERE `student`.`id` = 20 LIMIT 1' 2\u3001\u4e00\u5bf9\u591a \"\"\" student <- => comment \u8868\u7ed3\u6784\u548c\u4e00\u5bf9\u4e00\u6837\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u6ca1\u6709limit 1\u9650\u5236 student id - integer name - string comment id - integer name - string student_id - integer \"\"\" class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' @has_many ( 'student_id' , 'id' ) def comments ( self ): return Comment class Comment ( Model ): # \u5b9a\u4e49\u53cd\u5411\u5173\u7cfb @belongs_to def student ( self ): return Student comments = Student . find ( 20 ) . comments print ( comments ) 'SELECT * FROM `student` WHERE `student`.`id` = 20 LIMIT 1' 'SELECT * FROM `comments` WHERE `comments`.`student_id` = 20' print ( Comment . find ( 1 ) . student ) 'SELECT * FROM `comments` WHERE `comments`.`id` = 1 LIMIT 1' 'SELECT * FROM `student` WHERE `student`.`id` = 20 LIMIT 1' 3\u3001\u591a\u5bf9\u591a \"\"\" student <- => roles_student <= -> roles student id - integer name - string roles id - integer name - string roles_student id - integer role_id - integer student_id - integer \"\"\" class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' @belongs_to_many def roles ( self ): return Role class Role ( Model ): @belongs_to_many def students ( self ): return Student roles = Student . find ( 20 ) . roles print ( roles ) 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' \"\"\" SELECT `roles`. *, `roles_student`. `student_id` AS `pivot_student_id`, `roles_student`. `role_id` AS `pivot_role_id` FROM `roles` INNER JOIN `roles_student` ON `roles`. `id` = `roles_student`. `role_id` WHERE `roles_student`. `student_id` = 20 \"\"\" print ( Role . find ( 1 ) . students ) 'SELECT * FROM `roles` WHERE `roles`.`id` = 1 LIMIT 1' \"\"\" SELECT `student`. *, `roles_student`. `role_id` AS `pivot_role_id`, `roles_student`. `student_id` AS `pivot_student_id` FROM `student` INNER JOIN `roles_student` ON `student`. `id` = `roles_student`. `student_id` WHERE `roles_student`. `role_id` = 1 \"\"\" 4\u3001\u8de8\u4e2d\u95f4\u8868\u4e00\u5bf9\u591a \"\"\" countries <- => students <- => roles countries id - integer name - string students id - integer name - string country_id - integer roles id - integer title - string student_id - integer \"\"\" class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' @has_many def roles ( self ): return Role class Role ( Model ): @belongs_to def students ( self ): return Student class Country ( Model ): __table__ = 'countrys' # \u5b9a\u4e49\u53cd\u5411\u5173\u7cfb @has_many_through ( Student , 'country_id' , 'student_id' ) def roles ( self ): return Role print ( Country . find ( 1 ) . roles ) 'SELECT * FROM `countrys` WHERE `countrys`.`id` = 1 LIMIT 1' \"\"\" SELECT `roles`.*, `student`.`country_id` FROM `roles` INNER JOIN `student` ON `student`.`id` = `roles`.`student_id` WHERE `student`.`country_id` = 1 \"\"\" \u516d\u3001Model\u591a\u6001\u5173\u8054 1\u3001\u591a\u6001\u4e00\u5bf9\u4e00\u5173\u8054 \u548c\u4e00\u5bf9\u4e00\u5173\u7cfb\u76f8\u6bd4\uff0c\u591a\u4e86\u4e00\u4e2atype\u7c7b\u578b\u5b57\u6bb5\uff0c\u6807\u8bb0\u591a\u4e2a\u8868 # \u4e00\u4e2a\u6a21\u578b\u5c5e\u4e8e\u4e00\u4e2a\u6a21\u578b \"\"\" Staff <- -> Photo Order <- -> Photo staff id - integer name - string orders id - integer price - integer photos id - integer path - string imageable_id - integer imageable_type - string \"\"\" from orator.orm import morph_one , morph_to class Photo ( Model ): @morph_to def imageable ( self ): return class Staff ( Model ): @morph_one ( 'imageable' ) def photo ( self ): return Photo class Order ( Model ): # \u91cd\u5199\u591a\u6001\u5173\u8054\u5b57\u6bb5 __morph_name__ = 'order' @morph_one ( 'imageable' ) def photo ( self ): return Photo staff = Staff . find ( 1 ) 'SELECT * FROM `staffs` WHERE `staffs`.`id` = 1 LIMIT 1' print ( staff . photo ) \"\"\" SELECT * FROM `photos` WHERE `photos`.`imageable_id` = 1 AND `photos`.`imageable_type` = 'staffs' LIMIT 1 \"\"\" photo = Photo . find ( 1 ) 'SELECT * FROM `photos` WHERE `photos`.`id` = 1 LIMIT 1' 2\u3001\u591a\u6001\u4e00\u5bf9\u591a\u5173\u8054 \u6ca1\u6709\u548c\u591a\u6001\u4e00\u5bf9\u591a\u76f8\u6bd4\uff0c\u6ca1\u6709limit from orator.orm import morph_to , morph_many \"\"\" # \u4e00\u4e2a\u6a21\u578b\u5c5e\u4e8e\u591a\u4e2a\u6a21\u578b Staff <- => Photo Order <- => Photo staff id - integer name - string orders id - integer price - integer photos id - integer path - string imageable_id - integer imageable_type - string \"\"\" class Photo ( Model ): @morph_to def imageable ( self ): return class Staff ( Model ): @morph_many ( 'imageable' ) def photos ( self ): return Photo class Order ( Model ): # \u91cd\u5199\u591a\u6001\u5173\u8054\u5b57\u6bb5 __morph_name__ = 'order' @morph_many ( 'imageable' ) def photos ( self ): return Photo staff = Staff . find ( 1 ) 'SELECT * FROM `staffs` WHERE `staffs`.`id` = 1 LIMIT 1' for photo in staff . photos : pass \"\"\" SELECT * FROM `photos` WHERE `photos`.`imageable_id` = 1 AND `photos`.`imageable_type` = 'staffs' photo = Photo.find(1) 'SELECT * FROM `photos` WHERE `photos`.`id` = 1 LIMIT 1' imageable = photo.imageable print(imageable) # 'SELECT * FROM `staffs` WHERE `staffs`.`id` = 1 LIMIT 1' \"\"\" 3\u3001\u591a\u6001\u591a\u5bf9\u591a \"\"\" posts id - integer name - string videos id - integer name - string tags id - integer name - string taggables tag_id - integer taggable_id - integer taggable_type - string \"\"\" from orator.orm import morph_to_many , morphed_by_many class Tag ( Model ): @morphed_by_many ( 'taggable' ) def posts ( self ): return Post @morphed_by_many ( 'taggable' ) def videos ( self ): return Video class Post ( Model ): @morph_to_many ( 'taggable' ) def tags ( self ): return Tag class Video ( Model ): @morph_to_many ( 'taggable' ) def tags ( self ): return Tag print ( Video . find ( 1 ) . tags ) 'SELECT * FROM `videos` WHERE `videos`.`id` = 1 LIMIT 1' \"\"\" SELECT `tags`.*, `taggables`.`taggable_id` AS `pivot_taggable_id`, `taggables`.`tag_id` AS `pivot_tag_id` FROM `tags` INNER JOIN `taggables` ON `tags`.`id` = `taggables`.`tag_id` WHERE `taggables`.`taggable_id` = 1 AND `taggables`.`taggable_type` = 'videos' \"\"\" \u4e03\u3001\u5176\u4ed6\u64cd\u4f5c 1\u3001\u52a8\u6001\u5c5e\u6027 from orator import Model , SoftDeletes Model . set_connection_resolver ( db ) class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' @has_many ( 'student_id' , 'id' ) def comments ( self ): return Comment class Comment ( Model ): # \u5b9a\u4e49\u53cd\u5411\u5173\u7cfb @belongs_to def student ( self ): return Student print ( Student . find ( 1 ) . comments . count ()) 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' 'SELECT * FROM `comments` WHERE `comments`.`student_id` = 1' # 2 # \u589e\u52a0\u6761\u4ef6\u67e5\u8be2 print ( Student . find ( 1 ) . comments () . where ( 'id' , '>' , 1 ) . first ()) 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' 'SELECT * FROM `comments` WHERE `comments`.`student_id` = 1 AND `id` > 1 LIMIT 1' 2\u3001\u9884\u52a0\u8f7d\u6570\u636e from orator import Model , SoftDeletes Model . set_connection_resolver ( db ) class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' @has_many ( 'student_id' , 'id' ) def comments ( self ): return Comment class Comment ( Model ): # \u5b9a\u4e49\u53cd\u5411\u5173\u7cfb @belongs_to def student ( self ): return Student for comment in Comment . all (): print ( comment . student . name ) \"\"\" 'SELECT * FROM `comments`' 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' 'SELECT * FROM `student` WHERE `student`.`id` = 2 LIMIT 1' \"\"\" # \u9884\u52a0\u8f7d \u89e3\u51b3 N + 1 \u6b21\u67e5\u8be2\u95ee\u9898 for comment in Comment . with_ ( 'student' ) . get (): print ( comment . student . name ) \"\"\" 'SELECT * FROM `comments`' 'SELECT * FROM `student` WHERE `student`.`id` IN (1, 2)' \"\"\" # \u589e\u52a0\u67e5\u8be2\u6761\u4ef6 Comment . with_ ({ 'student' : Student . query () . where ( 'id' , '>' , 1 ) }) . get () \"\"\" 'SELECT * FROM `comments`' 'SELECT * FROM `student` WHERE `student`.`id` IN (1, 2) AND `id` > 1' \"\"\" # load\u52a0\u8f7d comments = Comment . all () comments . load ( 'student' ) 'SELECT * FROM `comments`' 'SELECT * FROM `student` WHERE `student`.`id` IN (1, 2)' # \u6dfb\u52a0\u6761\u4ef6 comments . load ({ 'student' : Student . query () . where ( 'name' , 'like' , ' %f oo%' ) }) \"SELECT * FROM `student` WHERE `student`.`id` IN (1, 2) AND `name` like ' %f oo%'\" 3\u3001\u63d2\u5165\u5173\u8054\u6570\u636e Model . set_connection_resolver ( db ) class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' @has_many ( 'student_id' , 'id' ) def comments ( self ): return Comment class Comment ( Model ): __fillable__ = [ 'number' ] __timestamps__ = False # \u5b9a\u4e49\u53cd\u5411\u5173\u7cfb @belongs_to def student ( self ): return Student # \u63d2\u5165\u4e00\u6761\u5173\u8054\u6570\u636e comment = Comment ( number = 'A new comment' ) student = Student . find ( 1 ) 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' comment = student . comments () . save ( comment ) \"INSERT INTO `comments` (`number`, `student_id`) VALUES ('A new comment', 1)\" # \u63d2\u5165\u591a\u6761\u5173\u8054\u6570\u636e comments = [ Comment ( number = 'Comment 1' ), Comment ( number = 'Comment 2' ), Comment ( number = 'Comment 3' ) ] student = student . find ( 1 ) student . comments () . save_many ( comments ) \"\"\" \"INSERT INTO `comments` (`number`, `student_id`) VALUES ('Comment 1', 1)\" \"INSERT INTO `comments` (`number`, `student_id`) VALUES ('Comment 2', 1)\" \"INSERT INTO `comments` (`number`, `student_id`) VALUES ('Comment 3', 1)\" \"\"\" # create\u65b9\u6cd5 student = Student . find ( 1 ) student . comments () . create ( number = \"123\" ) 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' \"INSERT INTO `comments` (`number`, `student_id`) VALUES ('123', 1)\" 4\u3001\u4e00\u5bf9\u591a\u5173\u7cfb\u7ef4\u62a4 from orator import Model , SoftDeletes Model . set_connection_resolver ( db ) class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' @has_many ( 'student_id' , 'id' ) def comments ( self ): return Comment class Comment ( Model ): __fillable__ = [ 'number' ] __timestamps__ = False # \u5b9a\u4e49\u53cd\u5411\u5173\u7cfb @belongs_to def student ( self ): return Student # belongs_to \u5173\u7cfb\u66f4\u65b0 comment = Comment . find ( 1 ) student = Student . find ( 22 ) # # \u6dfb\u52a0\u5173\u7cfb comment . student () . associate ( student ) comment . save () \"\"\" 'SELECT * FROM `comments` WHERE `comments`.`id` = 1 LIMIT 1' 'SELECT * FROM `student` WHERE `student`.`id` = 22 LIMIT 1' 'UPDATE `comments` SET `student_id` = 22 WHERE `id` = 1' \"\"\" # \u89e3\u9664\u5173\u7cfb comment . student () . dissociate () comment . save () 'UPDATE `comments` SET `student_id` = NULL WHERE `id` = 1' 5\u3001\u591a\u5bf9\u591a\u5173\u7cfb\u7ef4\u62a4 from orator import Model , SoftDeletes Model . set_connection_resolver ( db ) class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' @belongs_to_many def roles ( self ): return Role class Role ( Model ): @belongs_to_many def students ( self ): return Student user = Student . find ( 1 ) role = Role . find ( 1 ) # \u6dfb\u52a0\u5173\u8054 user . roles () . attach ( role ) \"\"\" 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' 'SELECT * FROM `roles` WHERE `roles`.`id` = 1 LIMIT 1' 'INSERT INTO `roles_student` (`role_id`, `student_id`) VALUES (1, 1)' \"\"\" # \u89e3\u9664\u5173\u8054 # user.roles().detach(1) 'DELETE FROM `roles_student` WHERE `student_id` = 1 AND `role_id` IN (1)' # \u540c\u6b65\u5173\u7cfb user . roles () . sync ([ 1 , 2 , 3 ]) \"\"\" 'SELECT `role_id` FROM `roles_student` WHERE `student_id` = 1' 'DELETE FROM `roles_student` WHERE `student_id` = 1 AND `role_id` IN (NULL)' 'INSERT INTO `roles_student` (`role_id`, `student_id`) VALUES (1, 1)' 'INSERT INTO `roles_student` (`role_id`, `student_id`) VALUES (2, 1)' 'INSERT INTO `roles_student` (`role_id`, `student_id`) VALUES (3, 1)' \"\"\" 6\u3001\u4fee\u6539\u65f6\u95f4\u5b57\u6bb5\u683c\u5f0f class User ( Model ): def get_date_format ( self ): return 'DD-MM-YY' 7\u3001scope\u91cd\u7528\u67e5\u8be2 class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' @scope def popular ( self , query ): return query . where ( 'age' , '>' , 100 ) @scope def women ( self , query , sex = 'womem' ): return query . where ( 'sex' , sex ) users = Student . popular () . women () . order_by ( 'created_at' ) . get () \"SELECT * FROM `student` WHERE (`age` > 100) AND (`sex` = 'womem') ORDER BY `created_at` ASC\" 8\u3001accessor\u3001mutator from orator import Model , SoftDeletes from orator.orm import scope , accessor , mutator Model . set_connection_resolver ( db ) # scope\u91cd\u7528\u67e5\u8be2 class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' __timestamps__ = False # \u8bbe\u7f6e\u5e8f\u5217\u5316\u5b57\u6bb5 __hidden__ = [ 'created' ] __visible__ = [ 'name' , 'age' , 'is_man' ] # \u6dfb\u52a0\u989d\u5916\u5b57\u6bb5 __appends__ = [ 'is_man' ] # \u7c7b\u578b\u81ea\u52a8\u8f6c\u6362 # \u652f\u6301 int, float, str, bool, dict, list. __casts__ = { 'age' : 'str' } sex_map = { 0 : '\u5973' , 1 : '\u7537' } # \u8bbf\u95ee\u5668 @accessor def get_sex ( self ): sex = self . get_raw_attribute ( 'sex' ) sex_map = { 0 : '\u5973' , 1 : '\u7537' } return sex_map . get ( sex ) # \u8bbe\u7f6e\u5668 @mutator def set_sex ( self , value ): sex_map_reverse = { v : k for k , v in self . sex_map . items ()} self . set_raw_attribute ( 'sex' , sex_map_reverse . get ( value , 1 )) @accessor def is_man ( self ): return self . get_raw_attribute ( 'sex' ) == 1 # users = Student.popular().women().order_by('created_at').get() \"SELECT * FROM `student` WHERE (`age` > 100) AND (`sex` = 'womem') ORDER BY `created_at` ASC\" # print(Student.find(1).first_name) 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' # John student = Student . find ( 1 ) # student.set_first_name = 'JAcK' # student.save() print ( student . get_sex ) student . set_sex = '\u7537' print ( type ( student . age )) # <class 'str'> student . save () print ( student . to_json ()) { \"name\" : \"1\" , \"age\" : \"0\" } print ( student . serialize ()) { 'name' : '1' , 'age' : '0' } # \u6dfb\u52a0\u989d\u5916\u5b57\u6bb5\u540e\u8f93\u51fa { 'name' : '1' , 'age' : '0' , 'is_man' : True } 9\u3001Pagination\u5206\u9875 users = db . table ( 'student' ) . paginate ( 15 , 2 ) 'SELECT COUNT(*) AS aggregate FROM `student`' 'SELECT * FROM `student` LIMIT 15 OFFSET 15' print ( dir ( users )) \"\"\" [ 'count', 'current_page', 'current_page_resolver', 'first_item', 'get_collection', 'has_more_pages', 'has_pages', 'is_empty', 'items', 'last_item', 'last_page', 'next_page', 'per_page', 'previous_page', 'resolve_current_page', 'serialize', 'to_dict', 'to_json', 'total' ] \"\"\" # \u8f6c\u6362\u4e3ajson\u6570\u636e print ( users . to_json ()) \"\"\" [ {\"id\": 35, \"name\": \"John\", \"age\": 0, \"sex\": 0, \"created_at\": 0, \"updated_at\": 0, \"deleted_at\": null, \"country_id\": null}, {\"id\": 36, \"name\": \"John\", \"age\": 0, \"sex\": 0, \"created_at\": 0, \"updated_at\": 0, \"deleted_at\": null, \"country_id\": null} ] \"\"\" some_users = Student . where ( 'age' , '>' , 100 ) . paginate ( 15 , 2 ) 'SELECT COUNT(*) AS aggregate FROM `student` WHERE `age` > 100' 'SELECT * FROM `student` WHERE `age` > 100 LIMIT 15 OFFSET 15' # simple-pagination ret = Student . simple_paginate ( 15 , 2 ) 'SELECT * FROM `student` LIMIT 16 OFFSET 15' print ( dir ( ret )) \"\"\" ['count', 'current_page', 'current_page_resolver', 'first_item', 'get_collection', 'has_more_pages', 'has_pages', 'is_empty', 'items', 'last_item', 'next_page', 'per_page', 'previous_page', 'resolve_current_page', 'serialize', 'to_dict', 'to_json'] \"\"\"","title":"orator"},{"location":"Python/orator/#orator","text":"\u5b89\u88c5 pip install orator \u6587\u6863 https://orator-orm.com/docs/ Orator\u6587\u6863\u4e0d\u662f\u5f88\u5b8c\u6574\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u7ed3\u5408Laravel\u548cThinkPHP\u6587\u6863\uff0c\u601d\u60f3\u548c\u64cd\u4f5c\u57fa\u672c\u4e00\u81f4 \uff08\u82f1\u6587\uff09 https://www.kancloud.cn/manual/thinkphp5/135176 \uff08\u4e2d\u6587\uff09 https://www.kancloud.cn/manual/thinkphp5/135176 \u548cLaravel\u4e00\u6837\uff0c\u652f\u6301\u4e09\u79cd\u64cd\u4f5c\u65b9\u5f0f\uff1a 1\u3001Query 2\u3001Query Builder 3\u3001ORM","title":"orator"},{"location":"Python/orator/#_1","text":"\u6d4b\u8bd5\u4f7f\u7528\u7684\u8868 CREATE TABLE ` student ` ( ` id ` int ( 11 ) NOT NULL AUTO_INCREMENT , ` name ` varchar ( 20 ) NOT NULL DEFAULT '' COMMENT '\u59d3\u540d' , ` age ` tinyint ( 3 ) unsigned NOT NULL DEFAULT '0' COMMENT '\u5e74\u9f84' , ` sex ` tinyint ( 3 ) unsigned NOT NULL DEFAULT '0' COMMENT '\u6027\u522b' , ` created_at ` int ( 11 ) NOT NULL DEFAULT '0' COMMENT '\u521b\u5efa\u65f6\u95f4' , ` updated_at ` int ( 11 ) NOT NULL DEFAULT '0' COMMENT '\u4fee\u6539\u65f6\u95f4' , PRIMARY KEY ( ` id ` ) ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COMMENT = '\u5b66\u751f\u8868' 1\u3001\u8bbe\u7f6e\u67e5\u8be2\u65e5\u5fd7\uff0c\u6253\u5370sql import logging logger = logging . getLogger ( 'orator.connection.queries' ) logger . setLevel ( logging . DEBUG ) formatter = logging . Formatter ( ' %(elapsed_time)s ms %(query)s ' ) handler = logging . StreamHandler () handler . setFormatter ( formatter ) logger . addHandler ( handler ) 2\u3001\u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u53c2\u6570 from orator import DatabaseManager # \u914d\u7f6e\u652f\u6301\u591a\u4e2a\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u652f\u6301\u8bfb\u5199\u5206\u79bb config = { 'default' : 'mysql' , 'mysql' : { 'read' : [ { 'host' : 'localhost' } ], 'write' : [ { 'host' : 'localhost' } ], 'driver' : 'mysql' , 'database' : 'data' , 'user' : 'root' , 'password' : '123456' , 'prefix' : '' , 'log_queries' : True , # \u5f00\u542f\u65e5\u5fd7 'use_qmark' : True , # \u4f7f\u7528 ? \u66ff\u4ee3\u53d8\u91cf } } db = DatabaseManager ( config )","title":"\u4e00\u3001\u914d\u7f6e"},{"location":"Python/orator/#query","text":"1\u3001\u8bfb\u64cd\u4f5c # select return list results = db . select ( 'select * from student where id = ?' , [ 2 ]) print ( results ) # ({'id': 2, 'name': '\u674e\u767d', 'age': 24, 'sex': 1, 'created_at': 1575127010, 'updated_at': 1575187008},) 2\u3001\u5199\u64cd\u4f5c # insert return int result = db . insert ( 'insert into student (age, name) values (?, ?)' , [ 23 , 'John' ]) print ( result ) # 1 # update return int result = db . update ( 'update student set age = 10 where name = ?' , [ 'John' ]) print ( result ) # 1 # delete return int result = db . delete ( 'delete from student where id = ?' , [ 132 ]) print ( result ) # 1 3\u3001\u8868\u64cd\u4f5c\u548c\u4e8b\u52a1 # statement result = db . statement ( 'drop table student' ) print ( result ) # 0 # \u6267\u884c\u4e8b\u52a1 with db . transaction (): db . table ( 'student' ) . update ({ 'age' : 1 }) # db.table('posts').delete()","title":"\u4e8c\u3001Query"},{"location":"Python/orator/#query-builder","text":"1\u3001select # select all row from table users = db . table ( 'student' ) . get () # 'SELECT * FROM `student`' for user in users : print ( user [ 'name' ]) # \u6216\u8005 user.name # chunk \u6bcf\u6b21\u83b7\u53d65\u4e2a for users in db . table ( 'student' ) . chunk ( 5 ): print ( '==' ) for user in users : print ( user [ 'name' ]) # \u83b7\u53d6single row(None) from a table user = db . table ( 'student' ) . where ( 'name' , 'John' ) . first () \"SELECT * FROM `student` WHERE `name` = 'John' LIMIT 1\" print ( user [ 'name' ]) # \u8fd4\u56desingle column from a row user = db . table ( 'student' ) . where ( 'name' , 'John' ) . pluck ( 'name' ) \"SELECT `name` FROM `student` WHERE `name` = 'John' LIMIT 1\" print ( user ) # \u8fd4\u56de \u67d0\u5217\u503c\u7684\u5217\u8868 sql = db . table ( 'student' ) . lists ( 'name' ) 'SELECT `name` FROM `student`' print ( list ( sql )) # \u8fd4\u56de\u4e00\u4e2a\u5b57\u5178\u5217\u8868 roles = db . table ( 'student' ) . lists ( 'age' , 'name' ) print ( roles ) 'SELECT `age`, `name` FROM `student`' # {'John': 1} # select users = db . table ( 'student' ) . select ( 'name' , 'age' ) . get () # 'SELECT `name`, `age` FROM `student`' users = db . table ( 'student' ) . distinct () . get () # 'SELECT DISTINCT * FROM `student`' users = db . table ( 'student' ) . select ( 'name as user_name' ) . get () # 'SELECT `name` AS `user_name` FROM `student`' # where users = db . table ( 'student' ) . where ( 'age' , '>' , 25 ) . get () # 'SELECT * FROM `student` WHERE `age` > 25' users = db . table ( 'student' ) . where ( 'age' , '>' , 25 ) . or_where ( 'name' , '--\"John' ) . get () # 'SELECT * FROM `student` WHERE `age` > 25 OR `name` = \\'--\\\\\"John\\'' users = db . table ( 'student' ) . where_between ( 'age' , [ 25 , 35 ]) . get () # 'SELECT * FROM `student` WHERE `age` BETWEEN 25 AND 35' users = db . table ( 'student' ) . where_not_between ( 'age' , [ 25 , 35 ]) . get () # 'SELECT * FROM `student` WHERE `age` NOT BETWEEN 25 AND 35' users = db . table ( 'student' ) . where_in ( 'id' , [ 1 , 2 , 3 ]) . get () # 'SELECT * FROM `student` WHERE `id` IN (1, 2, 3)' users = db . table ( 'student' ) . where_not_in ( 'id' , [ 1 , 2 , 3 ]) . get () # 'SELECT * FROM `student` WHERE `id` NOT IN (1, 2, 3)' users = db . table ( 'student' ) . where_null ( 'updated_at' ) . get () # 'SELECT * FROM `student` WHERE `updated_at` IS NULL' query = db . table ( 'student' ) . select ( 'age' ) . order_by ( 'age' ) query . group_by ( 'age' ) query . having ( 'age' , '>' , 100 ) users = query . get () # SELECT `age` FROM `student` GROUP BY `age` HAVING `age` > 100 ORDER BY `age` ASC' 2\u3001 insert db . table ( 'student' ) . insert ( name = 'Tom' , age = 12 ) # \"INSERT INTO `student` (`name`, `age`) VALUES ('Tom', 12)\" db . table ( 'student' ) . insert ({ 'name' : 'Tom' , 'age' : 13 }) # \"INSERT INTO `student` (`name`, `age`) VALUES ('Tom', 13)\" uid = db . table ( 'student' ) . insert_get_id ({ 'name' : 'Tom' , 'age' : 13 }) # \"INSERT INTO `student` (`age`, `name`) VALUES (13, 'Tom')\" db . table ( 'student' ) . insert ([ { 'name' : 'Tom' , 'age' : 13 }, { 'name' : 'Tom' , 'age' : 14 } ]) # \"INSERT INTO `student` (`age`, `name`) VALUES (13, 'Tom'), (14, 'Tom')\" 3\u3001update db . table ( 'student' ) . where ( 'id' , 1 ) . update ( age = 1 ) # 'UPDATE `student` SET `age` = 1 WHERE `id` = 1' db . table ( 'student' ) . where ( 'id' , 1 ) . update ({ 'age' : 1 }) # 'UPDATE `student` SET `age` = 1 WHERE `id` = 1' 4\u3001increment /decrement db . table ( 'student' ) . increment ( 'age' ) # Increment the value by 1 'UPDATE `student` SET `age` = `age` + 1' db . table ( 'student' ) . increment ( 'age' , 5 ) # Increment the value by 5 'UPDATE `student` SET `age` = `age` + 5' db . table ( 'student' ) . decrement ( 'age' ) # Decrement the value by 1 'UPDATE `student` SET `age` = `age` - 1' db . table ( 'student' ) . decrement ( 'age' , 5 ) # Decrement the value by 5 'UPDATE `student` SET `age` = `age` - 5' db . table ( 'student' ) . increment ( 'votes' , 1 , name = 'John' ) # TypeError: increment() got an unexpected keyword argument 'name' db . table ( 'student' ) . increment ( 'age' , 1 , { 'name' : 'John' }) \"UPDATE `student` SET `age` = `age` + 1, `name` = 'John'\" 5\u3001delete db . table ( 'student' ) . where ( 'age' , '<' , 25 ) . delete () # 'DELETE FROM `student` WHERE `age` < 25' db . table ( 'student' ) . delete () 'DELETE FROM `student`' db . table ( 'student' ) . truncate () 'TRUNCATE `student`'","title":"\u4e09\u3001Query Builder"},{"location":"Python/orator/#model","text":"\u5b9a\u4e49model from orator import Model , SoftDeletes Model . set_connection_resolver ( db ) class User ( SoftDeletes , Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' # \u8bbe\u7f6e\u53ef\u4ee5\u6279\u91cf\u8d4b\u503c\u7684\u5b57\u6bb5 __fillable__ = [ 'name' , 'age' ] # \u8bbe\u7f6e\u4e0d\u5141\u8bb8\u8d4b\u503c\u5b57\u6bb5 __guarded__ = [ 'id' ] # \u7981\u7528\u65f6\u95f4\u81ea\u52a8\u66f4\u65b0 created_at updated_at __timestamps__ = False # \u9700\u8981\u7ee7\u627f SoftDeletes \u4f7f\u7528\u8f6f\u5220\u9664, \u597d\u50cf\u4e0d\u8d77\u4f5c\u7528 __dates__ = [ 'deleted_at' ] 1\u3001select users = User . all () 'SELECT * FROM `student`' user = User . find ( 1 ) 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' # \u5982\u679c\u6ca1\u6709\u629b\u51fa\u5f02\u5e38 model = User . find_or_fail ( 1 ) model = User . where ( 'age' , '>' , 100 ) . first_or_fail () 'SELECT * FROM `student` WHERE `age` > 100 LIMIT 1' users = User . where ( 'age' , '>' , 100 ) . take ( 10 ) . get () 'SELECT * FROM `student` WHERE `age` > 100 LIMIT 10' count = User . where ( 'age' , '>' , 100 ) . count () 'SELECT COUNT(*) AS aggregate FROM `student` WHERE `age` > 100' # \u4f7f\u7528\u539f\u6837\u67e5\u8be2 users = User . where_raw ( 'id > ? and age = 100' , [ 25 ]) . get () 'SELECT * FROM `student` WHERE id > 25 AND age = 100' # \u5206\u6b21\u53d6\u56de\u6570\u636e for users in User . chunk ( 100 ): for user in users : pass 2 insert # Save\u65b0\u589e\u6570\u636e user = User () user . name = 'John' user . save () \"INSERT INTO `student` (`name`) VALUES ('John')\" # Create user = User . create ( name = 'John' ) \"INSERT INTO `student` (`name`) VALUES ('John')\" # \u67e5\u8be2\u6570\u636e\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u4e00\u6761\u6570\u636e user = User . first_or_create ( name = 'Jini' ) \"SELECT * FROM `student` WHERE (`name` = 'Jini') LIMIT 1\" \"INSERT INTO `student` (`name`) VALUES ('Jini')\" # \u67e5\u8be2\u6570\u636e\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b user = User . first_or_new ( name = 'java' ) \"SELECT * FROM `student` WHERE (`name` = 'java') LIMIT 1\" 3\u3001 Update # find ->save user = User . find ( 14 ) 'SELECT * FROM `student` WHERE `student`.`id` = 14 LIMIT 1' user . name = 'Foo' user . save () \"UPDATE `student` SET `name` = 'Foo' WHERE `id` = 14\" # update User . where ( 'age' , '>' , 100 ) . update ( name = 'Jack' ) \"UPDATE `student` SET `name` = 'Jack' WHERE `age` > 100\" 4\u3001 delete # find -> delete user = User . find ( 14 ) # 'SELECT * FROM `student` WHERE `student`.`id` = 14 LIMIT 1' user . delete () # 'DELETE FROM `student` WHERE `id` = 14' User . destroy ( 15 ) 'SELECT * FROM `student` WHERE `id` IN (15)' 'DELETE FROM `student` WHERE `id` = 15' User . destroy ( 16 , 17 , 18 ) 'SELECT * FROM `student` WHERE `id` IN (16, 17, 18)' 'DELETE FROM `student` WHERE `id` = 16' 'DELETE FROM `student` WHERE `id` = 17' 'DELETE FROM `student` WHERE `id` = 18' User . where ( 'age' , '>' , 100 ) . delete () 'DELETE FROM `student` WHERE `age` > 100' # User.where('id', '=', 19).delete() 'DELETE FROM `student` WHERE `id` = 19' # \u4f7f\u7528\u8f6f\u5220\u9664\u540e\uff0c\u67e5\u8be2\u7ed3\u679c\u6ca1\u6709\u5220\u9664\u540e\u7684\u6570\u636e phone = User . find ( 20 ) 'SELECT * FROM `student` WHERE (`student`.`id` = 20) AND (`student`.`deleted_at` IS NULL) LIMIT 1' # \u5305\u542b\u8f6f\u5220\u9664\u540e\u7684\u6570\u636e User . with_trashed () . where ( 'id' , 1 ) . get () 'SELECT * FROM `student` WHERE `id` = 1'","title":"\u56db\u3001Model"},{"location":"Python/orator/#model_1","text":"\u5f15\u5165\u6a21\u5757 from orator import Model Model . set_connection_resolver ( db ) from orator.orm import ( has_one , belongs_to , has_many , belongs_to_many , has_many_through , morph_to , morph_one , morph_many , morph_to_many , morphed_by_many ) 1\u3001\u4e00\u5bf9\u4e00 \"\"\" student <- -> phone student id - integer name - string phone id - integer number - string student_id - integer \"\"\" class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' # \u6307\u5b9a\u5916\u952e @has_one ( 'student_id' ) def phone ( self ): return Phone class Phone ( Model ): # \u6307\u5b9a\u672c\u8868\u4e2d\u7684\u5916\u952e\u5b57\u6bb5 @belongs_to ( 'student_id' ) def student ( self ): return Student phone = Student . find ( 20 ) . phone 'SELECT * FROM `student` WHERE `student`.`id` = 20 LIMIT 1' print ( phone ) 'SELECT * FROM `phones` WHERE `phones`.`student_id` = 20 LIMIT 1' ret = Phone . find ( 1 ) . student 'SELECT * FROM `phones` WHERE `phones`.`id` = 1 LIMIT 1' print ( ret ) 'SELECT * FROM `student` WHERE `student`.`id` = 20 LIMIT 1' 2\u3001\u4e00\u5bf9\u591a \"\"\" student <- => comment \u8868\u7ed3\u6784\u548c\u4e00\u5bf9\u4e00\u6837\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u6ca1\u6709limit 1\u9650\u5236 student id - integer name - string comment id - integer name - string student_id - integer \"\"\" class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' @has_many ( 'student_id' , 'id' ) def comments ( self ): return Comment class Comment ( Model ): # \u5b9a\u4e49\u53cd\u5411\u5173\u7cfb @belongs_to def student ( self ): return Student comments = Student . find ( 20 ) . comments print ( comments ) 'SELECT * FROM `student` WHERE `student`.`id` = 20 LIMIT 1' 'SELECT * FROM `comments` WHERE `comments`.`student_id` = 20' print ( Comment . find ( 1 ) . student ) 'SELECT * FROM `comments` WHERE `comments`.`id` = 1 LIMIT 1' 'SELECT * FROM `student` WHERE `student`.`id` = 20 LIMIT 1' 3\u3001\u591a\u5bf9\u591a \"\"\" student <- => roles_student <= -> roles student id - integer name - string roles id - integer name - string roles_student id - integer role_id - integer student_id - integer \"\"\" class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' @belongs_to_many def roles ( self ): return Role class Role ( Model ): @belongs_to_many def students ( self ): return Student roles = Student . find ( 20 ) . roles print ( roles ) 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' \"\"\" SELECT `roles`. *, `roles_student`. `student_id` AS `pivot_student_id`, `roles_student`. `role_id` AS `pivot_role_id` FROM `roles` INNER JOIN `roles_student` ON `roles`. `id` = `roles_student`. `role_id` WHERE `roles_student`. `student_id` = 20 \"\"\" print ( Role . find ( 1 ) . students ) 'SELECT * FROM `roles` WHERE `roles`.`id` = 1 LIMIT 1' \"\"\" SELECT `student`. *, `roles_student`. `role_id` AS `pivot_role_id`, `roles_student`. `student_id` AS `pivot_student_id` FROM `student` INNER JOIN `roles_student` ON `student`. `id` = `roles_student`. `student_id` WHERE `roles_student`. `role_id` = 1 \"\"\" 4\u3001\u8de8\u4e2d\u95f4\u8868\u4e00\u5bf9\u591a \"\"\" countries <- => students <- => roles countries id - integer name - string students id - integer name - string country_id - integer roles id - integer title - string student_id - integer \"\"\" class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' @has_many def roles ( self ): return Role class Role ( Model ): @belongs_to def students ( self ): return Student class Country ( Model ): __table__ = 'countrys' # \u5b9a\u4e49\u53cd\u5411\u5173\u7cfb @has_many_through ( Student , 'country_id' , 'student_id' ) def roles ( self ): return Role print ( Country . find ( 1 ) . roles ) 'SELECT * FROM `countrys` WHERE `countrys`.`id` = 1 LIMIT 1' \"\"\" SELECT `roles`.*, `student`.`country_id` FROM `roles` INNER JOIN `student` ON `student`.`id` = `roles`.`student_id` WHERE `student`.`country_id` = 1 \"\"\"","title":"\u4e94\u3001Model\u5173\u8054\u67e5\u8be2"},{"location":"Python/orator/#model_2","text":"1\u3001\u591a\u6001\u4e00\u5bf9\u4e00\u5173\u8054 \u548c\u4e00\u5bf9\u4e00\u5173\u7cfb\u76f8\u6bd4\uff0c\u591a\u4e86\u4e00\u4e2atype\u7c7b\u578b\u5b57\u6bb5\uff0c\u6807\u8bb0\u591a\u4e2a\u8868 # \u4e00\u4e2a\u6a21\u578b\u5c5e\u4e8e\u4e00\u4e2a\u6a21\u578b \"\"\" Staff <- -> Photo Order <- -> Photo staff id - integer name - string orders id - integer price - integer photos id - integer path - string imageable_id - integer imageable_type - string \"\"\" from orator.orm import morph_one , morph_to class Photo ( Model ): @morph_to def imageable ( self ): return class Staff ( Model ): @morph_one ( 'imageable' ) def photo ( self ): return Photo class Order ( Model ): # \u91cd\u5199\u591a\u6001\u5173\u8054\u5b57\u6bb5 __morph_name__ = 'order' @morph_one ( 'imageable' ) def photo ( self ): return Photo staff = Staff . find ( 1 ) 'SELECT * FROM `staffs` WHERE `staffs`.`id` = 1 LIMIT 1' print ( staff . photo ) \"\"\" SELECT * FROM `photos` WHERE `photos`.`imageable_id` = 1 AND `photos`.`imageable_type` = 'staffs' LIMIT 1 \"\"\" photo = Photo . find ( 1 ) 'SELECT * FROM `photos` WHERE `photos`.`id` = 1 LIMIT 1' 2\u3001\u591a\u6001\u4e00\u5bf9\u591a\u5173\u8054 \u6ca1\u6709\u548c\u591a\u6001\u4e00\u5bf9\u591a\u76f8\u6bd4\uff0c\u6ca1\u6709limit from orator.orm import morph_to , morph_many \"\"\" # \u4e00\u4e2a\u6a21\u578b\u5c5e\u4e8e\u591a\u4e2a\u6a21\u578b Staff <- => Photo Order <- => Photo staff id - integer name - string orders id - integer price - integer photos id - integer path - string imageable_id - integer imageable_type - string \"\"\" class Photo ( Model ): @morph_to def imageable ( self ): return class Staff ( Model ): @morph_many ( 'imageable' ) def photos ( self ): return Photo class Order ( Model ): # \u91cd\u5199\u591a\u6001\u5173\u8054\u5b57\u6bb5 __morph_name__ = 'order' @morph_many ( 'imageable' ) def photos ( self ): return Photo staff = Staff . find ( 1 ) 'SELECT * FROM `staffs` WHERE `staffs`.`id` = 1 LIMIT 1' for photo in staff . photos : pass \"\"\" SELECT * FROM `photos` WHERE `photos`.`imageable_id` = 1 AND `photos`.`imageable_type` = 'staffs' photo = Photo.find(1) 'SELECT * FROM `photos` WHERE `photos`.`id` = 1 LIMIT 1' imageable = photo.imageable print(imageable) # 'SELECT * FROM `staffs` WHERE `staffs`.`id` = 1 LIMIT 1' \"\"\" 3\u3001\u591a\u6001\u591a\u5bf9\u591a \"\"\" posts id - integer name - string videos id - integer name - string tags id - integer name - string taggables tag_id - integer taggable_id - integer taggable_type - string \"\"\" from orator.orm import morph_to_many , morphed_by_many class Tag ( Model ): @morphed_by_many ( 'taggable' ) def posts ( self ): return Post @morphed_by_many ( 'taggable' ) def videos ( self ): return Video class Post ( Model ): @morph_to_many ( 'taggable' ) def tags ( self ): return Tag class Video ( Model ): @morph_to_many ( 'taggable' ) def tags ( self ): return Tag print ( Video . find ( 1 ) . tags ) 'SELECT * FROM `videos` WHERE `videos`.`id` = 1 LIMIT 1' \"\"\" SELECT `tags`.*, `taggables`.`taggable_id` AS `pivot_taggable_id`, `taggables`.`tag_id` AS `pivot_tag_id` FROM `tags` INNER JOIN `taggables` ON `tags`.`id` = `taggables`.`tag_id` WHERE `taggables`.`taggable_id` = 1 AND `taggables`.`taggable_type` = 'videos' \"\"\"","title":"\u516d\u3001Model\u591a\u6001\u5173\u8054"},{"location":"Python/orator/#_2","text":"1\u3001\u52a8\u6001\u5c5e\u6027 from orator import Model , SoftDeletes Model . set_connection_resolver ( db ) class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' @has_many ( 'student_id' , 'id' ) def comments ( self ): return Comment class Comment ( Model ): # \u5b9a\u4e49\u53cd\u5411\u5173\u7cfb @belongs_to def student ( self ): return Student print ( Student . find ( 1 ) . comments . count ()) 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' 'SELECT * FROM `comments` WHERE `comments`.`student_id` = 1' # 2 # \u589e\u52a0\u6761\u4ef6\u67e5\u8be2 print ( Student . find ( 1 ) . comments () . where ( 'id' , '>' , 1 ) . first ()) 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' 'SELECT * FROM `comments` WHERE `comments`.`student_id` = 1 AND `id` > 1 LIMIT 1' 2\u3001\u9884\u52a0\u8f7d\u6570\u636e from orator import Model , SoftDeletes Model . set_connection_resolver ( db ) class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' @has_many ( 'student_id' , 'id' ) def comments ( self ): return Comment class Comment ( Model ): # \u5b9a\u4e49\u53cd\u5411\u5173\u7cfb @belongs_to def student ( self ): return Student for comment in Comment . all (): print ( comment . student . name ) \"\"\" 'SELECT * FROM `comments`' 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' 'SELECT * FROM `student` WHERE `student`.`id` = 2 LIMIT 1' \"\"\" # \u9884\u52a0\u8f7d \u89e3\u51b3 N + 1 \u6b21\u67e5\u8be2\u95ee\u9898 for comment in Comment . with_ ( 'student' ) . get (): print ( comment . student . name ) \"\"\" 'SELECT * FROM `comments`' 'SELECT * FROM `student` WHERE `student`.`id` IN (1, 2)' \"\"\" # \u589e\u52a0\u67e5\u8be2\u6761\u4ef6 Comment . with_ ({ 'student' : Student . query () . where ( 'id' , '>' , 1 ) }) . get () \"\"\" 'SELECT * FROM `comments`' 'SELECT * FROM `student` WHERE `student`.`id` IN (1, 2) AND `id` > 1' \"\"\" # load\u52a0\u8f7d comments = Comment . all () comments . load ( 'student' ) 'SELECT * FROM `comments`' 'SELECT * FROM `student` WHERE `student`.`id` IN (1, 2)' # \u6dfb\u52a0\u6761\u4ef6 comments . load ({ 'student' : Student . query () . where ( 'name' , 'like' , ' %f oo%' ) }) \"SELECT * FROM `student` WHERE `student`.`id` IN (1, 2) AND `name` like ' %f oo%'\" 3\u3001\u63d2\u5165\u5173\u8054\u6570\u636e Model . set_connection_resolver ( db ) class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' @has_many ( 'student_id' , 'id' ) def comments ( self ): return Comment class Comment ( Model ): __fillable__ = [ 'number' ] __timestamps__ = False # \u5b9a\u4e49\u53cd\u5411\u5173\u7cfb @belongs_to def student ( self ): return Student # \u63d2\u5165\u4e00\u6761\u5173\u8054\u6570\u636e comment = Comment ( number = 'A new comment' ) student = Student . find ( 1 ) 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' comment = student . comments () . save ( comment ) \"INSERT INTO `comments` (`number`, `student_id`) VALUES ('A new comment', 1)\" # \u63d2\u5165\u591a\u6761\u5173\u8054\u6570\u636e comments = [ Comment ( number = 'Comment 1' ), Comment ( number = 'Comment 2' ), Comment ( number = 'Comment 3' ) ] student = student . find ( 1 ) student . comments () . save_many ( comments ) \"\"\" \"INSERT INTO `comments` (`number`, `student_id`) VALUES ('Comment 1', 1)\" \"INSERT INTO `comments` (`number`, `student_id`) VALUES ('Comment 2', 1)\" \"INSERT INTO `comments` (`number`, `student_id`) VALUES ('Comment 3', 1)\" \"\"\" # create\u65b9\u6cd5 student = Student . find ( 1 ) student . comments () . create ( number = \"123\" ) 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' \"INSERT INTO `comments` (`number`, `student_id`) VALUES ('123', 1)\" 4\u3001\u4e00\u5bf9\u591a\u5173\u7cfb\u7ef4\u62a4 from orator import Model , SoftDeletes Model . set_connection_resolver ( db ) class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' @has_many ( 'student_id' , 'id' ) def comments ( self ): return Comment class Comment ( Model ): __fillable__ = [ 'number' ] __timestamps__ = False # \u5b9a\u4e49\u53cd\u5411\u5173\u7cfb @belongs_to def student ( self ): return Student # belongs_to \u5173\u7cfb\u66f4\u65b0 comment = Comment . find ( 1 ) student = Student . find ( 22 ) # # \u6dfb\u52a0\u5173\u7cfb comment . student () . associate ( student ) comment . save () \"\"\" 'SELECT * FROM `comments` WHERE `comments`.`id` = 1 LIMIT 1' 'SELECT * FROM `student` WHERE `student`.`id` = 22 LIMIT 1' 'UPDATE `comments` SET `student_id` = 22 WHERE `id` = 1' \"\"\" # \u89e3\u9664\u5173\u7cfb comment . student () . dissociate () comment . save () 'UPDATE `comments` SET `student_id` = NULL WHERE `id` = 1' 5\u3001\u591a\u5bf9\u591a\u5173\u7cfb\u7ef4\u62a4 from orator import Model , SoftDeletes Model . set_connection_resolver ( db ) class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' @belongs_to_many def roles ( self ): return Role class Role ( Model ): @belongs_to_many def students ( self ): return Student user = Student . find ( 1 ) role = Role . find ( 1 ) # \u6dfb\u52a0\u5173\u8054 user . roles () . attach ( role ) \"\"\" 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' 'SELECT * FROM `roles` WHERE `roles`.`id` = 1 LIMIT 1' 'INSERT INTO `roles_student` (`role_id`, `student_id`) VALUES (1, 1)' \"\"\" # \u89e3\u9664\u5173\u8054 # user.roles().detach(1) 'DELETE FROM `roles_student` WHERE `student_id` = 1 AND `role_id` IN (1)' # \u540c\u6b65\u5173\u7cfb user . roles () . sync ([ 1 , 2 , 3 ]) \"\"\" 'SELECT `role_id` FROM `roles_student` WHERE `student_id` = 1' 'DELETE FROM `roles_student` WHERE `student_id` = 1 AND `role_id` IN (NULL)' 'INSERT INTO `roles_student` (`role_id`, `student_id`) VALUES (1, 1)' 'INSERT INTO `roles_student` (`role_id`, `student_id`) VALUES (2, 1)' 'INSERT INTO `roles_student` (`role_id`, `student_id`) VALUES (3, 1)' \"\"\" 6\u3001\u4fee\u6539\u65f6\u95f4\u5b57\u6bb5\u683c\u5f0f class User ( Model ): def get_date_format ( self ): return 'DD-MM-YY' 7\u3001scope\u91cd\u7528\u67e5\u8be2 class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' @scope def popular ( self , query ): return query . where ( 'age' , '>' , 100 ) @scope def women ( self , query , sex = 'womem' ): return query . where ( 'sex' , sex ) users = Student . popular () . women () . order_by ( 'created_at' ) . get () \"SELECT * FROM `student` WHERE (`age` > 100) AND (`sex` = 'womem') ORDER BY `created_at` ASC\" 8\u3001accessor\u3001mutator from orator import Model , SoftDeletes from orator.orm import scope , accessor , mutator Model . set_connection_resolver ( db ) # scope\u91cd\u7528\u67e5\u8be2 class Student ( Model ): # \u8bbe\u7f6e\u771f\u6b63\u7684\u8868\u540d __table__ = 'student' __timestamps__ = False # \u8bbe\u7f6e\u5e8f\u5217\u5316\u5b57\u6bb5 __hidden__ = [ 'created' ] __visible__ = [ 'name' , 'age' , 'is_man' ] # \u6dfb\u52a0\u989d\u5916\u5b57\u6bb5 __appends__ = [ 'is_man' ] # \u7c7b\u578b\u81ea\u52a8\u8f6c\u6362 # \u652f\u6301 int, float, str, bool, dict, list. __casts__ = { 'age' : 'str' } sex_map = { 0 : '\u5973' , 1 : '\u7537' } # \u8bbf\u95ee\u5668 @accessor def get_sex ( self ): sex = self . get_raw_attribute ( 'sex' ) sex_map = { 0 : '\u5973' , 1 : '\u7537' } return sex_map . get ( sex ) # \u8bbe\u7f6e\u5668 @mutator def set_sex ( self , value ): sex_map_reverse = { v : k for k , v in self . sex_map . items ()} self . set_raw_attribute ( 'sex' , sex_map_reverse . get ( value , 1 )) @accessor def is_man ( self ): return self . get_raw_attribute ( 'sex' ) == 1 # users = Student.popular().women().order_by('created_at').get() \"SELECT * FROM `student` WHERE (`age` > 100) AND (`sex` = 'womem') ORDER BY `created_at` ASC\" # print(Student.find(1).first_name) 'SELECT * FROM `student` WHERE `student`.`id` = 1 LIMIT 1' # John student = Student . find ( 1 ) # student.set_first_name = 'JAcK' # student.save() print ( student . get_sex ) student . set_sex = '\u7537' print ( type ( student . age )) # <class 'str'> student . save () print ( student . to_json ()) { \"name\" : \"1\" , \"age\" : \"0\" } print ( student . serialize ()) { 'name' : '1' , 'age' : '0' } # \u6dfb\u52a0\u989d\u5916\u5b57\u6bb5\u540e\u8f93\u51fa { 'name' : '1' , 'age' : '0' , 'is_man' : True } 9\u3001Pagination\u5206\u9875 users = db . table ( 'student' ) . paginate ( 15 , 2 ) 'SELECT COUNT(*) AS aggregate FROM `student`' 'SELECT * FROM `student` LIMIT 15 OFFSET 15' print ( dir ( users )) \"\"\" [ 'count', 'current_page', 'current_page_resolver', 'first_item', 'get_collection', 'has_more_pages', 'has_pages', 'is_empty', 'items', 'last_item', 'last_page', 'next_page', 'per_page', 'previous_page', 'resolve_current_page', 'serialize', 'to_dict', 'to_json', 'total' ] \"\"\" # \u8f6c\u6362\u4e3ajson\u6570\u636e print ( users . to_json ()) \"\"\" [ {\"id\": 35, \"name\": \"John\", \"age\": 0, \"sex\": 0, \"created_at\": 0, \"updated_at\": 0, \"deleted_at\": null, \"country_id\": null}, {\"id\": 36, \"name\": \"John\", \"age\": 0, \"sex\": 0, \"created_at\": 0, \"updated_at\": 0, \"deleted_at\": null, \"country_id\": null} ] \"\"\" some_users = Student . where ( 'age' , '>' , 100 ) . paginate ( 15 , 2 ) 'SELECT COUNT(*) AS aggregate FROM `student` WHERE `age` > 100' 'SELECT * FROM `student` WHERE `age` > 100 LIMIT 15 OFFSET 15' # simple-pagination ret = Student . simple_paginate ( 15 , 2 ) 'SELECT * FROM `student` LIMIT 16 OFFSET 15' print ( dir ( ret )) \"\"\" ['count', 'current_page', 'current_page_resolver', 'first_item', 'get_collection', 'has_more_pages', 'has_pages', 'is_empty', 'items', 'last_item', 'next_page', 'per_page', 'previous_page', 'resolve_current_page', 'serialize', 'to_dict', 'to_json'] \"\"\"","title":"\u4e03\u3001\u5176\u4ed6\u64cd\u4f5c"},{"location":"Python/tensorflow/","text":"iOS\u5f00\u53d160\u5206\u949f\u5165\u95e8 https://github.com/qinjx/30min_guides/blob/master/ios.md","title":"Tensorflow"},{"location":"Python/\u5f00\u6e90\u9879\u76ee/","text":"\u5f00\u6e90\u9879\u76ee \u9879\u76ee\u540d\u79f0 \u7b80\u4ecb \u9879\u76ee\u5730\u5740 DBAdmin \u6570\u636e\u5e93\u7ba1\u7406\u540e\u53f0 https://github.com/mouday/DbAdmin SpiderAdmin \u722c\u866b\u8c03\u5ea6 https://github.com/mouday/SpiderAdmin PureMySQL MySQL\u7b80\u5355\u64cd\u4f5c\u65b9\u5f0f https://github.com/mouday/PureMySQL PyThink MySQL\u7b80\u5355\u7684\u589e\u5220\u6539\u67e5 https://github.com/mouday/PyThink PyCase \u53d8\u91cf\u540d\u8f6c\u6362\u7684\u547d\u4ee4\u884c\u5de5\u5177 https://github.com/mouday/PyCase chinesename \u4e2d\u6587\u53d6\u540d https://github.com/mouday/chinesename PageParser \u7f51\u9875\u89e3\u6790\u5305 https://github.com/mouday/PageParser today-news \u6293\u53d6\u5fae\u4fe1\u6587\u7ae0\u4eff\u4eca\u65e5\u5934\u6761\u65b0\u95fb https://github.com/mouday/today-news FreeIpProxy IP\u4ee3\u7406\u6c60 https://github.com/mouday/FreeIpProxy chinaarea \u4e2d\u56fd\u884c\u653f\u5212\u5206\u67e5\u8be2 https://github.com/mouday/chinaarea Django-website \u4f01\u4e1a\u6d41\u7a0b\u7ba1\u7406\u7cfb\u7edf https://github.com/mouday/Django-website","title":"\u5f00\u6e90\u9879\u76ee"},{"location":"Python/\u5f00\u6e90\u9879\u76ee/#_1","text":"\u9879\u76ee\u540d\u79f0 \u7b80\u4ecb \u9879\u76ee\u5730\u5740 DBAdmin \u6570\u636e\u5e93\u7ba1\u7406\u540e\u53f0 https://github.com/mouday/DbAdmin SpiderAdmin \u722c\u866b\u8c03\u5ea6 https://github.com/mouday/SpiderAdmin PureMySQL MySQL\u7b80\u5355\u64cd\u4f5c\u65b9\u5f0f https://github.com/mouday/PureMySQL PyThink MySQL\u7b80\u5355\u7684\u589e\u5220\u6539\u67e5 https://github.com/mouday/PyThink PyCase \u53d8\u91cf\u540d\u8f6c\u6362\u7684\u547d\u4ee4\u884c\u5de5\u5177 https://github.com/mouday/PyCase chinesename \u4e2d\u6587\u53d6\u540d https://github.com/mouday/chinesename PageParser \u7f51\u9875\u89e3\u6790\u5305 https://github.com/mouday/PageParser today-news \u6293\u53d6\u5fae\u4fe1\u6587\u7ae0\u4eff\u4eca\u65e5\u5934\u6761\u65b0\u95fb https://github.com/mouday/today-news FreeIpProxy IP\u4ee3\u7406\u6c60 https://github.com/mouday/FreeIpProxy chinaarea \u4e2d\u56fd\u884c\u653f\u5212\u5206\u67e5\u8be2 https://github.com/mouday/chinaarea Django-website \u4f01\u4e1a\u6d41\u7a0b\u7ba1\u7406\u7cfb\u7edf https://github.com/mouday/Django-website","title":"\u5f00\u6e90\u9879\u76ee"},{"location":"php/","text":"PHP Laravel-\u57fa\u7840\u7bc7 Laravel-\u8868\u5355\u7bc7 Laravel-\u9ad8\u7ea7\u7bc7 Laravel\u5f00\u53d1APP\u63a5\u53e3 PHP\u52a0\u5bc6 PHP\u81ea\u5b9a\u4e49\u6846\u67b6","title":"PHP"},{"location":"php/#php","text":"Laravel-\u57fa\u7840\u7bc7 Laravel-\u8868\u5355\u7bc7 Laravel-\u9ad8\u7ea7\u7bc7 Laravel\u5f00\u53d1APP\u63a5\u53e3 PHP\u52a0\u5bc6 PHP\u81ea\u5b9a\u4e49\u6846\u67b6","title":"PHP"},{"location":"php/Laravel-\u57fa\u7840\u7bc7/","text":"Laravel-\u57fa\u7840\u7bc7 \u4e00\u3001Laravel\u7b80\u4ecb \u6846\u67b6\u63d0\u4f9b\u7684\u529f\u80fd\uff1a 1\u3001\u6570\u636e\u5e93DB 2\u3001\u7f13\u5b58Cache 3\u3001\u4f1a\u8bddSession 4\u3001\u6587\u4ef6\u4e0a\u4f20 \u6d41\u884c\u6846\u67b6\u7684\u4f18\u70b9 \u6587\u6863\u9f50\u5168 \u793e\u533a\u6d3b\u8dc3 \u540e\u671f\u652f\u6301 Laravel\u7b80\u4ecb 1\u3001\u7b80\u6d01\uff0c\u4f18\u96c5 2\u3001\u9a8c\u8bc1\uff0c\u8def\u7531\uff0csession\u7f13\u5b58\uff0c\u6570\u636e\u5e93\u8fc1\u79fb\u529f\u80fd\uff0c\u5355\u5143\u6d4b\u8bd5 \u7248\u672c\u9009\u62e9 \u957f\u671f\u652f\u6301 LTS Long Time support \u4e8c\u3001\u73af\u5883\u914d\u7f6e \u670d\u52a1\u5668\u73af\u5883 $ php -v PHP 7 .1.23 Laravel 5.8 \u8981\u6c42\uff1aPHP >= 7.1.3 \u6587\u6863\uff1a https://laravel.com/docs/5.8 MVC\u6570\u636e\u4ea4\u4e92 \u89c6\u56fe View <-> \u63a7\u5236\u5668 Controller <-> \u6a21\u578b Model Mac MAMP Win XAMPP phpinfo.php <?php phpinfo (); \u8bbe\u7f6e\u56fd\u5185\u955c\u50cf # \u67e5\u770b\u5168\u5c40\u8bbe\u7f6e composer config -gl # \u8bbe\u7f6e\u955c\u50cf composer config -g repo.packagist composer https://mirrors.aliyun.com/composer # \u89e3\u9664\u955c\u50cf composer config -g --unset repos.packagist \u53c2\u8003 \u56fd\u5185\u7684Composer\u5168\u91cf\u955c\u50cf\u6c47\u603b \u521b\u5efa\u9879\u76ee $ composer create-project laravel/laravel = 5 .8.* demo --prefer-dist $ cd demo $ php artisan --version Laravel Framework 5 .8.35 # \u542f\u52a8\u670d\u52a1 $ php artisan serve \u8bbf\u95ee\uff1ahttp://127.0.0.1:8000 \u6574\u4e2a\u6587\u4ef6\u5939\u5927\u5c0f Laravel Framework 5.8.35 32.8M ThinkPHP_5.0.24_with_extend 5.6M \u4e09\u3001\u8def\u7531 1\u3001\u8def\u7531\u7b80\u4ecb \u8def\u7531\u5c06\u7528\u6237\u7684\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u5bf9\u5e94\u7684\u7a0b\u5e8f\u8fdb\u884c\u5904\u7406 \u4f5c\u7528\uff1a\u5efa\u7acburl\u548c\u7a0b\u5e8f\u4e4b\u95f4\u7684\u6620\u5c04 \u8bf7\u6c42\u7c7b\u578b\uff1aget\u3001post\u3001put\u3001patch\u3001delete \u8def\u7531\u6587\u4ef6\uff1aroutes/web.php 2\u3001\u57fa\u672c\u8def\u7531 Route::get('hello', function () { return 'hello world'; }); Route::post('post', function () { return 'post'; }); 3\u3001\u591a\u8bf7\u6c42\u8def\u7531 Route::match(['get', 'post'], 'match', function () { return 'match'; }); Route::any('any', function () { return 'any'; }); 4\u3001\u8def\u7531\u53c2\u6570 Route::get('detail/{id}', function ($id) { return 'detail-id: ' . $id ; }); // \u9ed8\u8ba4\u53c2\u6570 Route::get('detail/{name?}', function ($name = null) { return 'detail-name: ' . $name ; }); // \u6b63\u5219\u5224\u65ad\u53c2\u6570\u7c7b\u578b Route::get('detail/{id}', function ($id) { return 'detail-id: ' . $id ; })->where('id', '\\d+'); Route::get('detail/{name?}', function ($name = null) { return 'detail-name: ' . $name ; })->where('name', '[A-Za-z]+'); // \u591a\u4e2a\u53c2\u6570\u6821\u9a8c Route::get('detail/{id}/{name?}', function ($id, $name = null) { return 'detail-id: ' . $id . ' detail-name: ' . $name ; })->where(['id' => '\\d+', 'name' => '[A-Za-z]+']); 5\u3001\u8def\u7531\u522b\u540d Route::get('path', ['as'=>'alias', function(){ return Route('alias'); }]); 6\u3001\u8def\u7531\u7fa4\u7ec4 Route::group(['prefix' => 'user'], function (){ // \u8bbf\u95ee\u65b9\u5f0f\uff1auser/name Route::get('name', function (){ return 'user name'; }); // \u8bbf\u95ee\u65b9\u5f0f\uff1auser/age Route::get('age', function (){ return 'user age'; }); }); 7\u3001\u8def\u7531\u4e2d\u8f93\u51fa\u89c6\u56fe Route::get('/', function () { return view('welcome'); // resources/views/welcome.blade.php }); \u56db\u3001\u63a7\u5236\u5668 \u8def\u7531\u53ea\u63a5\u6536\u8bf7\u6c42\uff0c\u5177\u4f53\u4e1a\u52a1\u903b\u8f91\u4ea4\u7531\u63a7\u5236\u5668\u5904\u7406 1\u3001\u65b0\u5efa\u63a7\u5236\u5668 app/Http/Controllers/MemberController.php namespace App\\Http\\Controllers; class MemberController extends Controller { function info(){ return 'hello world'; } } 2\u3001\u63a7\u5236\u5668\u548c\u8def\u7531\u5173\u8054 Route::get('member/info', 'MemberController@info'); // \u6216\u8005 Route::get('member/info', ['uses' => 'MemberController@info']); 3\u3001\u5173\u8054\u63a7\u5236\u5668\u540e\uff0c\u8def\u7531\u7279\u6027\u4f7f\u7528 // \u522b\u540d Route::get('member/info', [ 'uses' => 'MemberController@info', 'as' => 'memberinfo' ]); // \u63a7\u5236\u5668\u4e2d\u4f7f\u7528\u522b\u540d // Route('memberinfo'); // \u8def\u7531\u53c2\u6570 Route::get('member/info/{id}', 'MemberController@info'); // \u63a7\u5236\u5668\u63a5\u6536\u53c2\u6570 // function info($id){ // return 'info:' . $id; // } // \u9a8c\u8bc1\u8def\u7531\u53c2\u6570 Route::get('member/info/{id}', 'MemberController@info') ->where('id', '[0-9]+'); \u4e94\u3001\u89c6\u56fe \u4e00\u4e2a\u63a7\u5236\u5668\u5bf9\u5e94\u4e00\u4e2a\u76ee\u5f55 1\u3001\u65b0\u5efa\u89c6\u56fe \u5982\u679c\u8981\u8f93\u51fa\u53d8\u91cf\uff0c\u6ce8\u610f\u540e\u7f00\u4e3a blade.php resources/views/member/info.blade.php < h1 > member info </ h1 > name: {{$name}} age: {{$age}} 2\u3001\u8f93\u51fa\u89c6\u56fe \u8def\u7531\u914d\u7f6e Route::get('member/info', 'MemberController@info'); \u63a7\u5236\u5668\u65b9\u6cd5 class MemberController extends Controller { function info(){ $data = [ 'name' => 'Tom', 'age' => 18 ]; return view('member/info', $data); } } \u516d\u3001\u6a21\u578b 1\u3001\u65b0\u5efa\u6a21\u578b app/Member.php namespace App; use Illuminate\\Database\\Eloquent\\Model; class Member extends Model { public static function getMember(){ return [ 'name' => 'Tom', 'age' => 18 ]; } } 2\u3001\u4f7f\u7528\u6a21\u578b namespace App\\Http\\Controllers; use App\\Member; class MemberController extends Controller { function info(){ $data = Member::getMember(); return $data } } \u4e03\u3001\u6570\u636e\u5e93 Laravel\u63d0\u4f9b3\u79cd\u64cd\u4f5c\u6570\u636e\u5e93\u65b9\u5f0f 1\u3001DB facade \u539f\u59cb\u67e5\u627e 2\u3001\u67e5\u8be2\u6784\u9020\u5668query builder 3\u3001Eloquent ORM \u516b\u3001DB facade \u539f\u59cb\u67e5\u627e 1\u3001\u65b0\u5efa\u6570\u636e\u8868\u4e0e\u8fde\u63a5\u6570\u636e\u5e93 CREATE TABLE ` student ` ( ` id ` int ( 11 ) NOT NULL AUTO_INCREMENT , ` name ` varchar ( 20 ) NOT NULL DEFAULT '' COMMENT '\u59d3\u540d' , ` age ` tinyint ( 3 ) unsigned NOT NULL DEFAULT '0' COMMENT '\u5e74\u9f84' , ` sex ` tinyint ( 3 ) unsigned NOT NULL DEFAULT '0' COMMENT '\u6027\u522b' , ` created_at ` int ( 11 ) NOT NULL DEFAULT '0' COMMENT '\u521b\u5efa\u65f6\u95f4' , ` updated_at ` int ( 11 ) NOT NULL DEFAULT '0' COMMENT '\u4fee\u6539\u65f6\u95f4' , PRIMARY KEY ( ` id ` ) ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COMMENT = '\u5b66\u751f\u8868' 2\u3001\u914d\u7f6e\u6570\u636e\u8fde\u63a5\u5e93\u53c2\u6570 .env DB_CONNECTION=mysql DB_HOST=127.0.0.1 DB_PORT=3306 DB_DATABASE=data DB_USERNAME=root DB_PASSWORD=123456 3\u3001\u4f7f\u7528DB facade\u5b9e\u73b0CURD \u5982\u679c\u914d\u7f6e\u5b8c\u6570\u636e\u5e93\u4fe1\u606f\u4e0d\u751f\u6548\uff0c\u53ef\u4ee5\u6e05\u7406\u7f13\u5b58\u91cd\u542f\u670d\u52a1 php artisan cache : clear php artisan config : clear php artisan serve CURD\u51fd\u6570 static array select(string $query, array $bindings = []) static bool insert(string $query, array $bindings = []) static int update(string $query, array $bindings = []) static int delete(string $query, array $bindings = []) \u5b8c\u6574\u793a\u4f8b namespace App\\Http\\Controllers; use Illuminate\\Support\\Facades\\DB; class StudentController extends Controller { function list() { # \u67e5\u8be2 $list = DB::select('select * from student'); // return $list; // json // var_dump($list); // Array dd($list); // \u4fbf\u4e8e\u67e5\u770b\u7684Array } function insert() { // \u63d2\u5165 $bool = DB::insert('insert into student(name, age) values(?, ?)', ['\u5c0f\u767d', 23] ); var_dump($bool); // bool(true) } function update() { // \u66f4\u65b0 $num = DB::update('update student set name = ? where id = ? ', ['\u5927\u767d', 1] ); var_dump($num); // int(1) } function delete() { // \u5220\u9664 $num = DB::delete('delete from student where id = ?', [2] ); var_dump($num); // int(1) } } \u4e5d\u3001\u67e5\u8be2\u6784\u9020\u5668 Laravel\u67e5\u8be2\u6784\u9020\u5668query builder \u4f7f\u7528PDO\u53c2\u6570\u7ed1\u5b9a\uff0cSQL\u6ce8\u5165\u4fdd\u62a4 \u6253\u5370\u6267\u884c\u7684SQL\u8bed\u53e5 # \u5b89\u88c5 $ composer require \"eleven26/listen-sql:~1.0.4\" --dev # \u4fee\u6539 bootstrap/app.php $app ->register ( Eleven26 \\L istenSql \\L istenSqlServiceProvider::class ) ; # \u542f\u52a8 $ php artisan listen-sql:start \u53c2\u8003 \u63a7\u5236\u53f0\u5b9e\u65f6\u67e5\u770b sql 1\u3001\u65b0\u589e\u6570\u636e $data = [ 'name' => '\u5c0f\u767d', 'age' => 23 ]; // 1\u3001\u63d2\u5165 $bool = DB::table('student')->insert($data); // insert into `student` (`name`, `age`) values (\"\u5c0f\u767d\", 23) var_dump($bool); // bool(true) // 2\u3001\u63d2\u5165\u5e76\u83b7\u53d6\u81ea\u589eid $id = DB::table('student')->insertGetId($data); // insert into `student` (`name`, `age`) values (\"\u5c0f\u767d\", 23) var_dump($id); // int(2) $list = [ ['name' => '\u5c0f\u767d', 'age' => 23], ['name' => '\u5927\u767d', 'age' => 24], ]; // 3\u3001\u63d2\u5165\u591a\u6761\u6570\u636e $bool = DB::table('student')->insert($list); // insert into `student` (`age`, `name`) values (23, \"\u5c0f\u767d\"), (24, \"\u5927\u767d\") var_dump($bool); // bool(true) 2\u3001\u66f4\u65b0\u6570\u636e // 1\u3001\u66f4\u65b0\uff0c \u6ce8\u610f\u8981\u5199where\u6761\u4ef6 $num = DB::table('student') ->where('id', '=',1) ->update(['name' => '\u5927\u9ec4']); // update `student` set `name` = \"\u5927\u9ec4\" where `id` = 1 var_dump($num); // int(1) // 2\u3001\u81ea\u589e\uff0c\u9ed8\u8ba41 $num = DB::table('student')->increment('age'); // update `student` set `age` = `age` + 1 var_dump($num); // int(8) // 3\u3001\u81ea\u51cf\uff0c\u9ed8\u8ba41 $num = DB::table('student')->decrement('age'); // update `student` set `age` = `age` - 1 var_dump($num); // int(8) // 4\u3001\u5e26\u6761\u4ef6\u81ea\u589e $num = DB::table('student') ->where('id', 1) ->increment('age'); // update `student` set `age` = `age` + 1 where `id` = 1 var_dump($num); // int(1) // 5\u3001\u81ea\u589e\u989d\u5916\u4fee\u6539\u5176\u4ed6\u5b57\u6bb5 $num = DB::table('student') ->where('id', 1) ->increment('age', 1, ['name' => '\u5927\u767d']); // update `student` set `age` = `age` + 1, `name` = \"\u5927\u767d\" where `id` = 1 var_dump($num); // int(1) 3\u3001\u5220\u9664\u6570\u636e // 1\u3001\u5220\u9664\u6570\u636e $num = DB::table('student') ->where('id', '=', 1) ->delete(); // delete from `student` where `id` = 1 var_dump($num); // int(1) // 2\u3001\u6e05\u7a7a\u6570\u636e, \u5371\u9669 \u8c28\u614e\u4f7f\u7528 $num = DB::table('student')->truncate(); // truncate `student` var_dump($num); // NULL 4\u3001\u67e5\u8be2\u6570\u636e // 1\u3001get\u83b7\u53d6\u5217\u8868 $list = DB::table('student')->get(); // select * from `student` // 2\u3001first\u83b7\u53d6\u4e00\u6761\u6570\u636e $data = DB::table('student') ->orderBy('age', 'desc') ->first(); // select * from `student` order by `age` desc limit 1 // 3\u3001where\u6761\u4ef6 $data = DB::table('student') ->where('age', '>=', 24) ->get(); // select * from `student` where `age` >= 24 // 4\u3001where\u591a\u6761\u4ef6 $data = DB::table('student') ->whereRaw('id > ? and age > ?', [1, 23]) ->get(); // select * from `student` where id > 1 and age > 23 // 5\u3001\u8fd4\u56de\u952e\u503c\u5bf9\uff0c\u7b2c\u4e8c\u4e2a\u5b57\u6bb5\u662fkey\uff0c\u7b2c\u4e00\u4e2a\u5b57\u6bb5\u662fvalue // 5.3\u7248\u672c\u5f03\u7528\u4e86lists\uff0c\u4f7f\u7528pluck $data = DB::table('student') ->pluck('name', 'id'); // select `name`, `id` from `student` // 6\u3001select \u6307\u5b9a\u5b57\u6bb5 $data = DB::table('student') ->select('name', 'age') ->get(); // select `name`, `age` from `student` // 7\u3001chunk\u5206\u6bb5\u83b7\u53d6\uff0c\u5fc5\u987b\u52a0order\u6392\u5e8f DB::table('student') ->orderBy('id') ->chunk(2, function ($list) { echo $list; }); // select * from `student` order by `id` asc limit 2 offset 0 // select * from `student` order by `id` asc limit 2 offset 2 // ... 5\u3001\u805a\u5408\u51fd\u6570 count \u8ba1\u6570 max \u6700\u5927\u503c min \u6700\u5c0f\u503c avg \u5e73\u5747\u503c sum \u6c42\u548c $count = DB::table('student')->count(); // select count(*) as aggregate from `student` var_dump($count); // int(3) $count = DB::table('student')->min('age'); // select min(`age`) as aggregate from `student` \u5341\u3001Eloquent ORM Active Record \u6bcf\u4e00\u5f20\u8868\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94\u7684\u6a21\u578bModel 1\u3001\u6a21\u578b\u5efa\u7acb\u53ca\u67e5\u8be2\u6570\u636e \u9ed8\u8ba4\u5173\u8054\u6a21\u578b\u540d\u79f0\u7684\u590d\u6570\u8868\u540d \u9ed8\u8ba4\u4ee5id\u4e3a\u4e3b\u952e // 1\u3001\u5168\u90e8\u6570\u636e Student::all(); // select * from `student` // 2\u3001\u6839\u636e\u4e3b\u952eid\u67e5\u627e\u4e00\u6761\u6570\u636e Student::find(1); // select * from `student` where `student`.`id` = 1 limit 1 // 3\u3001\u6839\u636e\u4e3b\u952eid\u67e5\u627e\u4e00\u6761\u6570\u636e,\u5982\u679c\u6ca1\u6709\u629b\u51fa\u5f02\u5e38 Student::findOrFail(11); // select * from `student` where `student`.`id` = 1 limit 1 // 4\u3001\u83b7\u53d6\u5217\u8868 Student::get(); // select * from `student` // 5\u3001\u83b7\u53d6\u4e00\u6761\u6570\u636e Student::where('id', '>', 1) ->orderbyDesc('age') ->first(); // select * from `student` where `id` > 1 order by `age` desc limit 1 // 6\u3001chunk\u5206\u6b21\u83b7\u53d6 Student::chunk(2, function ($data){ var_dump($data); }); // select * from `student` order by `student`.`id` asc limit 2 offset 0 // select * from `student` order by `student`.`id` asc limit 2 offset 2 // ... // 7\u3001\u805a\u5408\u51fd\u6570 Student::count(); // select count(*) as aggregate from `student` Student::where('id', '>=', 1) ->max('age'); // select max(`age`) as aggregate from `student` where `id` >= 1 2\u3001\u65b0\u589e\u6570\u636e\uff0c\u81ea\u5b9a\u4e49\u65f6\u95f4\u6233\u53ca\u6279\u91cf\u8d4b\u503c \uff081\uff09\u901a\u8fc7\u6a21\u578b\u65b0\u589e\uff0c\u6d89\u53ca\u5230\u81ea\u5b9a\u4e49\u65f6\u95f4\u6233 \u9ed8\u8ba4\u7ef4\u62a4\u65f6\u95f4\u5b57\u6bb5created_at, updated_at [1]\u65b0\u589e\u6570\u636e # \u53d6\u6d88\u81ea\u52a8\u7ef4\u62a4\u65f6\u95f4\u5b57\u6bb5\uff0c\u4e00\u822c\u8bbe\u7f6e\u4e3atrue public $timestamps = false; # \u81ea\u5b9a\u4e49\u65f6\u95f4\u6233\u683c\u5f0f public function getDateFormat(){ return time(); } \u901a\u8fc7\u6a21\u578b\u65b0\u589e\u6570\u636e $student = new Student(); $student->name = '\u5c0f\u5b59'; $student->age = 23; $bool = $student->save(); // insert into `student` (`name`, `age`, `updated_at`, `created_at`) // values (\"\u5c0f\u5b59\", 23, \"157459359, \"1574593597\") [2]\u83b7\u53d6\u6570\u636e \u83b7\u53d6\u6570\u636e\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u683c\u5f0f\u5316 $student = Student::find(5); echo $student->created_at; // 2019-11-24 10:11:23 // \u4e0d\u81ea\u52a8\u683c\u5f0f\u5316\u65f6\u95f4\u6233 protected function asDateTime($value) { return $value; } // \u81ea\u5b9a\u4e49\u683c\u5f0f\u5316 date('Y-m-d H:i:s', $student->created_at); // 2019-11-24 10:11:23 \u65f6\u533a\u8bbe\u7f6e \u65b9\u6cd5\u4e00\uff1a\u4fee\u6539php.ini\u914d\u7f6e\u6587\u4ef6 // \u67e5\u770bphp.ini\u6587\u4ef6\u8def\u5f84 phpinfo() $ cp php.ini.default php.ini [Date] date.timezone = PRC // \u6216\u8005 // date.timezone = \"Asia/Shanghai\" // PRC\u662f\u6307\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd \uff08People's Republic of China\uff09 \u65b9\u6cd5\u4e8c\uff1a\u4e34\u65f6\u4fee\u6539 // \u67e5\u770b\u5f53\u524d\u65f6\u533a date_default_timezone_get(); // \u4e34\u65f6\u8bbe\u7f6e\u65f6\u533a date_default_timezone_set('Asia/Shanghai'); \u53c2\u8003 PHP \u7684 date \u65e5\u671f\u65f6\u95f4\u51fd\u6570\u5e93\u7b80\u4ecb \u5982\u679c\u4e0d\u751f\u6548\u9700\u8981\u4fee\u6539Laravel\u914d\u7f6e config/app.php // 'timezone' => 'UTC', 'timezone' => 'PRC', \uff082\uff09\u4f7f\u7528\u6a21\u578bcreate\u65b9\u6cd5\u65b0\u589e\u6570\u636e\uff0c\u6d89\u53ca\u6279\u91cf\u8d4b\u503c // \u6307\u5b9a\u5141\u8bb8\u6279\u91cf\u8d4b\u503c\u7684\u5b57\u6bb5 protected $fillable = ['name', 'age']; // \u6307\u5b9a\u4e0d\u5141\u8bb8\u6279\u91cf\u8d4b\u503c\u7684\u5b57\u6bb5 protected $guarded = []; $data = [ 'name'=> '\u5c0f\u7ea2', 'age'=> 23 ]; $student = Student::create($data); // insert into `student` (`name`, `age`, `updated_at`, `created_at`) // values (\"\u5c0f\u7ea2\", 23, \"157459331, \"1574593314\") \u67e5\u627e\u6216\u521b\u5efa firstOrCreate() // \u5b58\u5728\u5219\u83b7\u53d6 $data = [ 'name'=> '\u5c0f\u7ea2', 'age'=> 23 ]; $student = Student::firstOrCreate($data); // select * from `student` where (`name` = \"\u5c0f\u7ea2\" and `age` = 23) limit 1 // \u4e0d\u5b58\u5728\u5219\u521b\u5efa $data = [ 'name'=> '\u5c0f\u7ea2', 'age'=> 25 ]; $student = Student::firstOrCreate($data); // select * from `student` where (`name` = \"\u5c0f\u7ea2\" and `age` = 25) limit 1 // insert into `student` (`name`, `age`, `updated_at`, `created_at`) // values (\"\u5c0f\u7ea2\", 25, \"157459366, \"1574593662\") \u67e5\u627e\u6216\u521b\u5efa\u5b9e\u4f8b\uff0c\u4fdd\u5b58\u9700\u8981\u8c03\u7528save firstOrNew() 3\u3001\u4fee\u6539\u6570\u636e \uff081\uff09\u6a21\u578b\u66f4\u65b0 $student = Student::find(4); // select * from `student` where `student`.`id` = 4 limit 1 $student->name = '\u5927\u767d'; $student->save(); // update `student` // set `name` = \"\u5927\u767d\", `student`.`updated_at` = 1574594275 // where `id` = 4 \uff082\uff09\u6279\u91cf\u66f4\u65b0 Student::where('id', 1)->update(['name' => '\u5927\u767d']); // update `student` // set `name` = \"\u5927\u767d\", `student`.`updated_at` = 1574594465 // where `id` = 1 4\u3001\u5220\u9664\u6570\u636e \uff081\uff09\u6a21\u578b\u5220\u9664 $student = Student::find(4); // select * from `student` where `student`.`id` = 4 limit 1 $bool = $student->delete(); // delete from `student` where `id` = 4 \uff082\uff09\u4e3b\u952e\u5220\u9664 $num = Student::destroy(1); // select * from `student` where `id` in (1) // delete from `student` where `id` = 1 $num = Student::destroy(1, 2, 3); // select * from `student` where `id` in (1, 2, 3) // delete from `student` where `id` = 2 // delete from `student` where `id` = 3 $num = Student::destroy([1, 2, 3]); // select * from `student` where `id` in (1, 2, 3) // delete from `student` where `id` = 1 // delete from `student` where `id` = 2 // delete from `student` where `id` = 3 \uff083\uff09\u6761\u4ef6\u5220\u9664 $num = Student::where('id', '=', '1')->delete(); // delete from `student` where `id` = \"1\" \u5341\u4e00\u3001Blade\u6a21\u677f\u5f15\u64ce Blade\u6a21\u677f\u5f15\u64ce\u53ef\u4ee5\u4f7f\u7528PHP\u4ee3\u7801 \u7f16\u8bd1\u5b8c\u6210\u540e\u4f1a\u88ab\u7f13\u5b58 1\u3001\u6a21\u677f\u7ee7\u627f resources/views/student/layout.blade.php <h1>@yield('title', '\u6807\u9898')</h1> <div> @section('main') \u4e3b\u8981\u5185\u5bb9 @show </div> resources/views/student/index.blade.php @extends('student/layout') @section('title') \u91cd\u5199\u6807\u9898 @stop @section('main') @parent \u91cd\u5199\u5185\u5bb9 @stop Controller\u8fd4\u56de\u6a21\u677f namespace App\\Http\\Controllers; class StudentController extends Controller { function list() { $data = [ 'name' => 'Tom' ]; return view('student/index', $data); } } \u7f16\u8bd1\u7ed3\u679c <h1>\u91cd\u5199\u6807\u9898</h1> <div>\u4e3b\u8981\u5185\u5bb9\u91cd\u5199\u5185\u5bb9</div> 2\u3001\u57fa\u7840\u8bed\u6cd5\u548cinclude // 1\u3001\u6a21\u677f\u4e2d\u8f93\u51faPHP\u53d8\u91cf {{ $name }} // 2\u3001\u6a21\u677f\u4e2d\u8c03\u7528PHP\u4ee3\u7801 {{ time() }} {{ date('Y-m-d H:i:s', time()) }} {{ in_array($name, $arr) ? 'true' : 'false' }} {{ var_dump($arr) }} {{ isset($name) ? $name : 'default' }} {{ $name or 'default' }} // 3\u3001\u539f\u6837\u8f93\u51fa @{{ @name }} // 4\u3001\u6ce8\u91ca {{-- \u8fd9\u662f\u6a21\u677f\u6ce8\u91ca\uff0c\u770b\u4e0d\u5230 --}} <!-- \u8fd9\u662fhtml\u6ce8\u91ca\uff0c\u53ef\u4ee5\u770b\u5230 --> // 5\u3001\u5f15\u5165\u5b50\u89c6\u56fe @include('student.common', ['key' => 'value']) 3\u3001\u6d41\u7a0b\u63a7\u5236 // if\u63a7\u5236 @if($name == 'Tom') Tom @elseif($name == 'Jack') Jack @else else @endif // unless === not if @unless($name != 'Tom') Tom @endunless // for\u5faa\u73af @for ($i=0; $i < 10; $i++) {{$i}} @endfor @foreach($students as $student) {{$student->name}} @endforeach // forelse \u6570\u7ec4\u4e3a\u7a7a\u7ed9\u9ed8\u8ba4\u503c @forelse($students as $student) {{$student->name}} @empty null @endforelse 4\u3001\u6a21\u677f\u4e2d\u7684URL url \u8def\u7531\u540d\u79f0\u751f\u6210 action \u63a7\u5236\u5668\u548c\u65b9\u6cd5\u540d\u751f\u6210 route \u522b\u540d\u751f\u6210 \u63a7\u5236\u5668\u8bbe\u7f6e Route::get('student/list', ['as'=> 'list', 'uses'=> 'StudentController@list']); \u4e09\u79cd\u65b9\u5f0f\u7ed3\u679c\u4e00\u6837 {{ url('student/list') }} {{ action('StudentController@list') }} {{ route('list') }} http://localhost:8000/student/list \u603b\u7ed3 \u5b89\u88c5Laravel \u6838\u5fc3\u76ee\u5f55\u6587\u4ef6 \u8def\u7531 MVC \u6570\u636e\u5e93\u64cd\u4f5c3\u79cd \u6a21\u677f\u5f15\u64ce","title":"Laravel-\u57fa\u7840\u7bc7"},{"location":"php/Laravel-\u57fa\u7840\u7bc7/#laravel-","text":"","title":"Laravel-\u57fa\u7840\u7bc7"},{"location":"php/Laravel-\u57fa\u7840\u7bc7/#laravel","text":"\u6846\u67b6\u63d0\u4f9b\u7684\u529f\u80fd\uff1a 1\u3001\u6570\u636e\u5e93DB 2\u3001\u7f13\u5b58Cache 3\u3001\u4f1a\u8bddSession 4\u3001\u6587\u4ef6\u4e0a\u4f20 \u6d41\u884c\u6846\u67b6\u7684\u4f18\u70b9 \u6587\u6863\u9f50\u5168 \u793e\u533a\u6d3b\u8dc3 \u540e\u671f\u652f\u6301 Laravel\u7b80\u4ecb 1\u3001\u7b80\u6d01\uff0c\u4f18\u96c5 2\u3001\u9a8c\u8bc1\uff0c\u8def\u7531\uff0csession\u7f13\u5b58\uff0c\u6570\u636e\u5e93\u8fc1\u79fb\u529f\u80fd\uff0c\u5355\u5143\u6d4b\u8bd5 \u7248\u672c\u9009\u62e9 \u957f\u671f\u652f\u6301 LTS Long Time support","title":"\u4e00\u3001Laravel\u7b80\u4ecb"},{"location":"php/Laravel-\u57fa\u7840\u7bc7/#_1","text":"\u670d\u52a1\u5668\u73af\u5883 $ php -v PHP 7 .1.23 Laravel 5.8 \u8981\u6c42\uff1aPHP >= 7.1.3 \u6587\u6863\uff1a https://laravel.com/docs/5.8 MVC\u6570\u636e\u4ea4\u4e92 \u89c6\u56fe View <-> \u63a7\u5236\u5668 Controller <-> \u6a21\u578b Model Mac MAMP Win XAMPP phpinfo.php <?php phpinfo (); \u8bbe\u7f6e\u56fd\u5185\u955c\u50cf # \u67e5\u770b\u5168\u5c40\u8bbe\u7f6e composer config -gl # \u8bbe\u7f6e\u955c\u50cf composer config -g repo.packagist composer https://mirrors.aliyun.com/composer # \u89e3\u9664\u955c\u50cf composer config -g --unset repos.packagist \u53c2\u8003 \u56fd\u5185\u7684Composer\u5168\u91cf\u955c\u50cf\u6c47\u603b \u521b\u5efa\u9879\u76ee $ composer create-project laravel/laravel = 5 .8.* demo --prefer-dist $ cd demo $ php artisan --version Laravel Framework 5 .8.35 # \u542f\u52a8\u670d\u52a1 $ php artisan serve \u8bbf\u95ee\uff1ahttp://127.0.0.1:8000 \u6574\u4e2a\u6587\u4ef6\u5939\u5927\u5c0f Laravel Framework 5.8.35 32.8M ThinkPHP_5.0.24_with_extend 5.6M","title":"\u4e8c\u3001\u73af\u5883\u914d\u7f6e"},{"location":"php/Laravel-\u57fa\u7840\u7bc7/#_2","text":"1\u3001\u8def\u7531\u7b80\u4ecb \u8def\u7531\u5c06\u7528\u6237\u7684\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u5bf9\u5e94\u7684\u7a0b\u5e8f\u8fdb\u884c\u5904\u7406 \u4f5c\u7528\uff1a\u5efa\u7acburl\u548c\u7a0b\u5e8f\u4e4b\u95f4\u7684\u6620\u5c04 \u8bf7\u6c42\u7c7b\u578b\uff1aget\u3001post\u3001put\u3001patch\u3001delete \u8def\u7531\u6587\u4ef6\uff1aroutes/web.php 2\u3001\u57fa\u672c\u8def\u7531 Route::get('hello', function () { return 'hello world'; }); Route::post('post', function () { return 'post'; }); 3\u3001\u591a\u8bf7\u6c42\u8def\u7531 Route::match(['get', 'post'], 'match', function () { return 'match'; }); Route::any('any', function () { return 'any'; }); 4\u3001\u8def\u7531\u53c2\u6570 Route::get('detail/{id}', function ($id) { return 'detail-id: ' . $id ; }); // \u9ed8\u8ba4\u53c2\u6570 Route::get('detail/{name?}', function ($name = null) { return 'detail-name: ' . $name ; }); // \u6b63\u5219\u5224\u65ad\u53c2\u6570\u7c7b\u578b Route::get('detail/{id}', function ($id) { return 'detail-id: ' . $id ; })->where('id', '\\d+'); Route::get('detail/{name?}', function ($name = null) { return 'detail-name: ' . $name ; })->where('name', '[A-Za-z]+'); // \u591a\u4e2a\u53c2\u6570\u6821\u9a8c Route::get('detail/{id}/{name?}', function ($id, $name = null) { return 'detail-id: ' . $id . ' detail-name: ' . $name ; })->where(['id' => '\\d+', 'name' => '[A-Za-z]+']); 5\u3001\u8def\u7531\u522b\u540d Route::get('path', ['as'=>'alias', function(){ return Route('alias'); }]); 6\u3001\u8def\u7531\u7fa4\u7ec4 Route::group(['prefix' => 'user'], function (){ // \u8bbf\u95ee\u65b9\u5f0f\uff1auser/name Route::get('name', function (){ return 'user name'; }); // \u8bbf\u95ee\u65b9\u5f0f\uff1auser/age Route::get('age', function (){ return 'user age'; }); }); 7\u3001\u8def\u7531\u4e2d\u8f93\u51fa\u89c6\u56fe Route::get('/', function () { return view('welcome'); // resources/views/welcome.blade.php });","title":"\u4e09\u3001\u8def\u7531"},{"location":"php/Laravel-\u57fa\u7840\u7bc7/#_3","text":"\u8def\u7531\u53ea\u63a5\u6536\u8bf7\u6c42\uff0c\u5177\u4f53\u4e1a\u52a1\u903b\u8f91\u4ea4\u7531\u63a7\u5236\u5668\u5904\u7406 1\u3001\u65b0\u5efa\u63a7\u5236\u5668 app/Http/Controllers/MemberController.php namespace App\\Http\\Controllers; class MemberController extends Controller { function info(){ return 'hello world'; } } 2\u3001\u63a7\u5236\u5668\u548c\u8def\u7531\u5173\u8054 Route::get('member/info', 'MemberController@info'); // \u6216\u8005 Route::get('member/info', ['uses' => 'MemberController@info']); 3\u3001\u5173\u8054\u63a7\u5236\u5668\u540e\uff0c\u8def\u7531\u7279\u6027\u4f7f\u7528 // \u522b\u540d Route::get('member/info', [ 'uses' => 'MemberController@info', 'as' => 'memberinfo' ]); // \u63a7\u5236\u5668\u4e2d\u4f7f\u7528\u522b\u540d // Route('memberinfo'); // \u8def\u7531\u53c2\u6570 Route::get('member/info/{id}', 'MemberController@info'); // \u63a7\u5236\u5668\u63a5\u6536\u53c2\u6570 // function info($id){ // return 'info:' . $id; // } // \u9a8c\u8bc1\u8def\u7531\u53c2\u6570 Route::get('member/info/{id}', 'MemberController@info') ->where('id', '[0-9]+');","title":"\u56db\u3001\u63a7\u5236\u5668"},{"location":"php/Laravel-\u57fa\u7840\u7bc7/#_4","text":"\u4e00\u4e2a\u63a7\u5236\u5668\u5bf9\u5e94\u4e00\u4e2a\u76ee\u5f55 1\u3001\u65b0\u5efa\u89c6\u56fe \u5982\u679c\u8981\u8f93\u51fa\u53d8\u91cf\uff0c\u6ce8\u610f\u540e\u7f00\u4e3a blade.php resources/views/member/info.blade.php < h1 > member info </ h1 > name: {{$name}} age: {{$age}} 2\u3001\u8f93\u51fa\u89c6\u56fe \u8def\u7531\u914d\u7f6e Route::get('member/info', 'MemberController@info'); \u63a7\u5236\u5668\u65b9\u6cd5 class MemberController extends Controller { function info(){ $data = [ 'name' => 'Tom', 'age' => 18 ]; return view('member/info', $data); } }","title":"\u4e94\u3001\u89c6\u56fe"},{"location":"php/Laravel-\u57fa\u7840\u7bc7/#_5","text":"1\u3001\u65b0\u5efa\u6a21\u578b app/Member.php namespace App; use Illuminate\\Database\\Eloquent\\Model; class Member extends Model { public static function getMember(){ return [ 'name' => 'Tom', 'age' => 18 ]; } } 2\u3001\u4f7f\u7528\u6a21\u578b namespace App\\Http\\Controllers; use App\\Member; class MemberController extends Controller { function info(){ $data = Member::getMember(); return $data } }","title":"\u516d\u3001\u6a21\u578b"},{"location":"php/Laravel-\u57fa\u7840\u7bc7/#_6","text":"Laravel\u63d0\u4f9b3\u79cd\u64cd\u4f5c\u6570\u636e\u5e93\u65b9\u5f0f 1\u3001DB facade \u539f\u59cb\u67e5\u627e 2\u3001\u67e5\u8be2\u6784\u9020\u5668query builder 3\u3001Eloquent ORM","title":"\u4e03\u3001\u6570\u636e\u5e93"},{"location":"php/Laravel-\u57fa\u7840\u7bc7/#db-facade","text":"1\u3001\u65b0\u5efa\u6570\u636e\u8868\u4e0e\u8fde\u63a5\u6570\u636e\u5e93 CREATE TABLE ` student ` ( ` id ` int ( 11 ) NOT NULL AUTO_INCREMENT , ` name ` varchar ( 20 ) NOT NULL DEFAULT '' COMMENT '\u59d3\u540d' , ` age ` tinyint ( 3 ) unsigned NOT NULL DEFAULT '0' COMMENT '\u5e74\u9f84' , ` sex ` tinyint ( 3 ) unsigned NOT NULL DEFAULT '0' COMMENT '\u6027\u522b' , ` created_at ` int ( 11 ) NOT NULL DEFAULT '0' COMMENT '\u521b\u5efa\u65f6\u95f4' , ` updated_at ` int ( 11 ) NOT NULL DEFAULT '0' COMMENT '\u4fee\u6539\u65f6\u95f4' , PRIMARY KEY ( ` id ` ) ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COMMENT = '\u5b66\u751f\u8868' 2\u3001\u914d\u7f6e\u6570\u636e\u8fde\u63a5\u5e93\u53c2\u6570 .env DB_CONNECTION=mysql DB_HOST=127.0.0.1 DB_PORT=3306 DB_DATABASE=data DB_USERNAME=root DB_PASSWORD=123456 3\u3001\u4f7f\u7528DB facade\u5b9e\u73b0CURD \u5982\u679c\u914d\u7f6e\u5b8c\u6570\u636e\u5e93\u4fe1\u606f\u4e0d\u751f\u6548\uff0c\u53ef\u4ee5\u6e05\u7406\u7f13\u5b58\u91cd\u542f\u670d\u52a1 php artisan cache : clear php artisan config : clear php artisan serve CURD\u51fd\u6570 static array select(string $query, array $bindings = []) static bool insert(string $query, array $bindings = []) static int update(string $query, array $bindings = []) static int delete(string $query, array $bindings = []) \u5b8c\u6574\u793a\u4f8b namespace App\\Http\\Controllers; use Illuminate\\Support\\Facades\\DB; class StudentController extends Controller { function list() { # \u67e5\u8be2 $list = DB::select('select * from student'); // return $list; // json // var_dump($list); // Array dd($list); // \u4fbf\u4e8e\u67e5\u770b\u7684Array } function insert() { // \u63d2\u5165 $bool = DB::insert('insert into student(name, age) values(?, ?)', ['\u5c0f\u767d', 23] ); var_dump($bool); // bool(true) } function update() { // \u66f4\u65b0 $num = DB::update('update student set name = ? where id = ? ', ['\u5927\u767d', 1] ); var_dump($num); // int(1) } function delete() { // \u5220\u9664 $num = DB::delete('delete from student where id = ?', [2] ); var_dump($num); // int(1) } }","title":"\u516b\u3001DB facade \u539f\u59cb\u67e5\u627e"},{"location":"php/Laravel-\u57fa\u7840\u7bc7/#_7","text":"Laravel\u67e5\u8be2\u6784\u9020\u5668query builder \u4f7f\u7528PDO\u53c2\u6570\u7ed1\u5b9a\uff0cSQL\u6ce8\u5165\u4fdd\u62a4 \u6253\u5370\u6267\u884c\u7684SQL\u8bed\u53e5 # \u5b89\u88c5 $ composer require \"eleven26/listen-sql:~1.0.4\" --dev # \u4fee\u6539 bootstrap/app.php $app ->register ( Eleven26 \\L istenSql \\L istenSqlServiceProvider::class ) ; # \u542f\u52a8 $ php artisan listen-sql:start \u53c2\u8003 \u63a7\u5236\u53f0\u5b9e\u65f6\u67e5\u770b sql 1\u3001\u65b0\u589e\u6570\u636e $data = [ 'name' => '\u5c0f\u767d', 'age' => 23 ]; // 1\u3001\u63d2\u5165 $bool = DB::table('student')->insert($data); // insert into `student` (`name`, `age`) values (\"\u5c0f\u767d\", 23) var_dump($bool); // bool(true) // 2\u3001\u63d2\u5165\u5e76\u83b7\u53d6\u81ea\u589eid $id = DB::table('student')->insertGetId($data); // insert into `student` (`name`, `age`) values (\"\u5c0f\u767d\", 23) var_dump($id); // int(2) $list = [ ['name' => '\u5c0f\u767d', 'age' => 23], ['name' => '\u5927\u767d', 'age' => 24], ]; // 3\u3001\u63d2\u5165\u591a\u6761\u6570\u636e $bool = DB::table('student')->insert($list); // insert into `student` (`age`, `name`) values (23, \"\u5c0f\u767d\"), (24, \"\u5927\u767d\") var_dump($bool); // bool(true) 2\u3001\u66f4\u65b0\u6570\u636e // 1\u3001\u66f4\u65b0\uff0c \u6ce8\u610f\u8981\u5199where\u6761\u4ef6 $num = DB::table('student') ->where('id', '=',1) ->update(['name' => '\u5927\u9ec4']); // update `student` set `name` = \"\u5927\u9ec4\" where `id` = 1 var_dump($num); // int(1) // 2\u3001\u81ea\u589e\uff0c\u9ed8\u8ba41 $num = DB::table('student')->increment('age'); // update `student` set `age` = `age` + 1 var_dump($num); // int(8) // 3\u3001\u81ea\u51cf\uff0c\u9ed8\u8ba41 $num = DB::table('student')->decrement('age'); // update `student` set `age` = `age` - 1 var_dump($num); // int(8) // 4\u3001\u5e26\u6761\u4ef6\u81ea\u589e $num = DB::table('student') ->where('id', 1) ->increment('age'); // update `student` set `age` = `age` + 1 where `id` = 1 var_dump($num); // int(1) // 5\u3001\u81ea\u589e\u989d\u5916\u4fee\u6539\u5176\u4ed6\u5b57\u6bb5 $num = DB::table('student') ->where('id', 1) ->increment('age', 1, ['name' => '\u5927\u767d']); // update `student` set `age` = `age` + 1, `name` = \"\u5927\u767d\" where `id` = 1 var_dump($num); // int(1) 3\u3001\u5220\u9664\u6570\u636e // 1\u3001\u5220\u9664\u6570\u636e $num = DB::table('student') ->where('id', '=', 1) ->delete(); // delete from `student` where `id` = 1 var_dump($num); // int(1) // 2\u3001\u6e05\u7a7a\u6570\u636e, \u5371\u9669 \u8c28\u614e\u4f7f\u7528 $num = DB::table('student')->truncate(); // truncate `student` var_dump($num); // NULL 4\u3001\u67e5\u8be2\u6570\u636e // 1\u3001get\u83b7\u53d6\u5217\u8868 $list = DB::table('student')->get(); // select * from `student` // 2\u3001first\u83b7\u53d6\u4e00\u6761\u6570\u636e $data = DB::table('student') ->orderBy('age', 'desc') ->first(); // select * from `student` order by `age` desc limit 1 // 3\u3001where\u6761\u4ef6 $data = DB::table('student') ->where('age', '>=', 24) ->get(); // select * from `student` where `age` >= 24 // 4\u3001where\u591a\u6761\u4ef6 $data = DB::table('student') ->whereRaw('id > ? and age > ?', [1, 23]) ->get(); // select * from `student` where id > 1 and age > 23 // 5\u3001\u8fd4\u56de\u952e\u503c\u5bf9\uff0c\u7b2c\u4e8c\u4e2a\u5b57\u6bb5\u662fkey\uff0c\u7b2c\u4e00\u4e2a\u5b57\u6bb5\u662fvalue // 5.3\u7248\u672c\u5f03\u7528\u4e86lists\uff0c\u4f7f\u7528pluck $data = DB::table('student') ->pluck('name', 'id'); // select `name`, `id` from `student` // 6\u3001select \u6307\u5b9a\u5b57\u6bb5 $data = DB::table('student') ->select('name', 'age') ->get(); // select `name`, `age` from `student` // 7\u3001chunk\u5206\u6bb5\u83b7\u53d6\uff0c\u5fc5\u987b\u52a0order\u6392\u5e8f DB::table('student') ->orderBy('id') ->chunk(2, function ($list) { echo $list; }); // select * from `student` order by `id` asc limit 2 offset 0 // select * from `student` order by `id` asc limit 2 offset 2 // ... 5\u3001\u805a\u5408\u51fd\u6570 count \u8ba1\u6570 max \u6700\u5927\u503c min \u6700\u5c0f\u503c avg \u5e73\u5747\u503c sum \u6c42\u548c $count = DB::table('student')->count(); // select count(*) as aggregate from `student` var_dump($count); // int(3) $count = DB::table('student')->min('age'); // select min(`age`) as aggregate from `student`","title":"\u4e5d\u3001\u67e5\u8be2\u6784\u9020\u5668"},{"location":"php/Laravel-\u57fa\u7840\u7bc7/#eloquent-orm","text":"Active Record \u6bcf\u4e00\u5f20\u8868\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94\u7684\u6a21\u578bModel 1\u3001\u6a21\u578b\u5efa\u7acb\u53ca\u67e5\u8be2\u6570\u636e \u9ed8\u8ba4\u5173\u8054\u6a21\u578b\u540d\u79f0\u7684\u590d\u6570\u8868\u540d \u9ed8\u8ba4\u4ee5id\u4e3a\u4e3b\u952e // 1\u3001\u5168\u90e8\u6570\u636e Student::all(); // select * from `student` // 2\u3001\u6839\u636e\u4e3b\u952eid\u67e5\u627e\u4e00\u6761\u6570\u636e Student::find(1); // select * from `student` where `student`.`id` = 1 limit 1 // 3\u3001\u6839\u636e\u4e3b\u952eid\u67e5\u627e\u4e00\u6761\u6570\u636e,\u5982\u679c\u6ca1\u6709\u629b\u51fa\u5f02\u5e38 Student::findOrFail(11); // select * from `student` where `student`.`id` = 1 limit 1 // 4\u3001\u83b7\u53d6\u5217\u8868 Student::get(); // select * from `student` // 5\u3001\u83b7\u53d6\u4e00\u6761\u6570\u636e Student::where('id', '>', 1) ->orderbyDesc('age') ->first(); // select * from `student` where `id` > 1 order by `age` desc limit 1 // 6\u3001chunk\u5206\u6b21\u83b7\u53d6 Student::chunk(2, function ($data){ var_dump($data); }); // select * from `student` order by `student`.`id` asc limit 2 offset 0 // select * from `student` order by `student`.`id` asc limit 2 offset 2 // ... // 7\u3001\u805a\u5408\u51fd\u6570 Student::count(); // select count(*) as aggregate from `student` Student::where('id', '>=', 1) ->max('age'); // select max(`age`) as aggregate from `student` where `id` >= 1 2\u3001\u65b0\u589e\u6570\u636e\uff0c\u81ea\u5b9a\u4e49\u65f6\u95f4\u6233\u53ca\u6279\u91cf\u8d4b\u503c \uff081\uff09\u901a\u8fc7\u6a21\u578b\u65b0\u589e\uff0c\u6d89\u53ca\u5230\u81ea\u5b9a\u4e49\u65f6\u95f4\u6233 \u9ed8\u8ba4\u7ef4\u62a4\u65f6\u95f4\u5b57\u6bb5created_at, updated_at [1]\u65b0\u589e\u6570\u636e # \u53d6\u6d88\u81ea\u52a8\u7ef4\u62a4\u65f6\u95f4\u5b57\u6bb5\uff0c\u4e00\u822c\u8bbe\u7f6e\u4e3atrue public $timestamps = false; # \u81ea\u5b9a\u4e49\u65f6\u95f4\u6233\u683c\u5f0f public function getDateFormat(){ return time(); } \u901a\u8fc7\u6a21\u578b\u65b0\u589e\u6570\u636e $student = new Student(); $student->name = '\u5c0f\u5b59'; $student->age = 23; $bool = $student->save(); // insert into `student` (`name`, `age`, `updated_at`, `created_at`) // values (\"\u5c0f\u5b59\", 23, \"157459359, \"1574593597\") [2]\u83b7\u53d6\u6570\u636e \u83b7\u53d6\u6570\u636e\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u683c\u5f0f\u5316 $student = Student::find(5); echo $student->created_at; // 2019-11-24 10:11:23 // \u4e0d\u81ea\u52a8\u683c\u5f0f\u5316\u65f6\u95f4\u6233 protected function asDateTime($value) { return $value; } // \u81ea\u5b9a\u4e49\u683c\u5f0f\u5316 date('Y-m-d H:i:s', $student->created_at); // 2019-11-24 10:11:23 \u65f6\u533a\u8bbe\u7f6e \u65b9\u6cd5\u4e00\uff1a\u4fee\u6539php.ini\u914d\u7f6e\u6587\u4ef6 // \u67e5\u770bphp.ini\u6587\u4ef6\u8def\u5f84 phpinfo() $ cp php.ini.default php.ini [Date] date.timezone = PRC // \u6216\u8005 // date.timezone = \"Asia/Shanghai\" // PRC\u662f\u6307\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd \uff08People's Republic of China\uff09 \u65b9\u6cd5\u4e8c\uff1a\u4e34\u65f6\u4fee\u6539 // \u67e5\u770b\u5f53\u524d\u65f6\u533a date_default_timezone_get(); // \u4e34\u65f6\u8bbe\u7f6e\u65f6\u533a date_default_timezone_set('Asia/Shanghai'); \u53c2\u8003 PHP \u7684 date \u65e5\u671f\u65f6\u95f4\u51fd\u6570\u5e93\u7b80\u4ecb \u5982\u679c\u4e0d\u751f\u6548\u9700\u8981\u4fee\u6539Laravel\u914d\u7f6e config/app.php // 'timezone' => 'UTC', 'timezone' => 'PRC', \uff082\uff09\u4f7f\u7528\u6a21\u578bcreate\u65b9\u6cd5\u65b0\u589e\u6570\u636e\uff0c\u6d89\u53ca\u6279\u91cf\u8d4b\u503c // \u6307\u5b9a\u5141\u8bb8\u6279\u91cf\u8d4b\u503c\u7684\u5b57\u6bb5 protected $fillable = ['name', 'age']; // \u6307\u5b9a\u4e0d\u5141\u8bb8\u6279\u91cf\u8d4b\u503c\u7684\u5b57\u6bb5 protected $guarded = []; $data = [ 'name'=> '\u5c0f\u7ea2', 'age'=> 23 ]; $student = Student::create($data); // insert into `student` (`name`, `age`, `updated_at`, `created_at`) // values (\"\u5c0f\u7ea2\", 23, \"157459331, \"1574593314\") \u67e5\u627e\u6216\u521b\u5efa firstOrCreate() // \u5b58\u5728\u5219\u83b7\u53d6 $data = [ 'name'=> '\u5c0f\u7ea2', 'age'=> 23 ]; $student = Student::firstOrCreate($data); // select * from `student` where (`name` = \"\u5c0f\u7ea2\" and `age` = 23) limit 1 // \u4e0d\u5b58\u5728\u5219\u521b\u5efa $data = [ 'name'=> '\u5c0f\u7ea2', 'age'=> 25 ]; $student = Student::firstOrCreate($data); // select * from `student` where (`name` = \"\u5c0f\u7ea2\" and `age` = 25) limit 1 // insert into `student` (`name`, `age`, `updated_at`, `created_at`) // values (\"\u5c0f\u7ea2\", 25, \"157459366, \"1574593662\") \u67e5\u627e\u6216\u521b\u5efa\u5b9e\u4f8b\uff0c\u4fdd\u5b58\u9700\u8981\u8c03\u7528save firstOrNew() 3\u3001\u4fee\u6539\u6570\u636e \uff081\uff09\u6a21\u578b\u66f4\u65b0 $student = Student::find(4); // select * from `student` where `student`.`id` = 4 limit 1 $student->name = '\u5927\u767d'; $student->save(); // update `student` // set `name` = \"\u5927\u767d\", `student`.`updated_at` = 1574594275 // where `id` = 4 \uff082\uff09\u6279\u91cf\u66f4\u65b0 Student::where('id', 1)->update(['name' => '\u5927\u767d']); // update `student` // set `name` = \"\u5927\u767d\", `student`.`updated_at` = 1574594465 // where `id` = 1 4\u3001\u5220\u9664\u6570\u636e \uff081\uff09\u6a21\u578b\u5220\u9664 $student = Student::find(4); // select * from `student` where `student`.`id` = 4 limit 1 $bool = $student->delete(); // delete from `student` where `id` = 4 \uff082\uff09\u4e3b\u952e\u5220\u9664 $num = Student::destroy(1); // select * from `student` where `id` in (1) // delete from `student` where `id` = 1 $num = Student::destroy(1, 2, 3); // select * from `student` where `id` in (1, 2, 3) // delete from `student` where `id` = 2 // delete from `student` where `id` = 3 $num = Student::destroy([1, 2, 3]); // select * from `student` where `id` in (1, 2, 3) // delete from `student` where `id` = 1 // delete from `student` where `id` = 2 // delete from `student` where `id` = 3 \uff083\uff09\u6761\u4ef6\u5220\u9664 $num = Student::where('id', '=', '1')->delete(); // delete from `student` where `id` = \"1\"","title":"\u5341\u3001Eloquent ORM"},{"location":"php/Laravel-\u57fa\u7840\u7bc7/#blade","text":"Blade\u6a21\u677f\u5f15\u64ce\u53ef\u4ee5\u4f7f\u7528PHP\u4ee3\u7801 \u7f16\u8bd1\u5b8c\u6210\u540e\u4f1a\u88ab\u7f13\u5b58 1\u3001\u6a21\u677f\u7ee7\u627f resources/views/student/layout.blade.php <h1>@yield('title', '\u6807\u9898')</h1> <div> @section('main') \u4e3b\u8981\u5185\u5bb9 @show </div> resources/views/student/index.blade.php @extends('student/layout') @section('title') \u91cd\u5199\u6807\u9898 @stop @section('main') @parent \u91cd\u5199\u5185\u5bb9 @stop Controller\u8fd4\u56de\u6a21\u677f namespace App\\Http\\Controllers; class StudentController extends Controller { function list() { $data = [ 'name' => 'Tom' ]; return view('student/index', $data); } } \u7f16\u8bd1\u7ed3\u679c <h1>\u91cd\u5199\u6807\u9898</h1> <div>\u4e3b\u8981\u5185\u5bb9\u91cd\u5199\u5185\u5bb9</div> 2\u3001\u57fa\u7840\u8bed\u6cd5\u548cinclude // 1\u3001\u6a21\u677f\u4e2d\u8f93\u51faPHP\u53d8\u91cf {{ $name }} // 2\u3001\u6a21\u677f\u4e2d\u8c03\u7528PHP\u4ee3\u7801 {{ time() }} {{ date('Y-m-d H:i:s', time()) }} {{ in_array($name, $arr) ? 'true' : 'false' }} {{ var_dump($arr) }} {{ isset($name) ? $name : 'default' }} {{ $name or 'default' }} // 3\u3001\u539f\u6837\u8f93\u51fa @{{ @name }} // 4\u3001\u6ce8\u91ca {{-- \u8fd9\u662f\u6a21\u677f\u6ce8\u91ca\uff0c\u770b\u4e0d\u5230 --}} <!-- \u8fd9\u662fhtml\u6ce8\u91ca\uff0c\u53ef\u4ee5\u770b\u5230 --> // 5\u3001\u5f15\u5165\u5b50\u89c6\u56fe @include('student.common', ['key' => 'value']) 3\u3001\u6d41\u7a0b\u63a7\u5236 // if\u63a7\u5236 @if($name == 'Tom') Tom @elseif($name == 'Jack') Jack @else else @endif // unless === not if @unless($name != 'Tom') Tom @endunless // for\u5faa\u73af @for ($i=0; $i < 10; $i++) {{$i}} @endfor @foreach($students as $student) {{$student->name}} @endforeach // forelse \u6570\u7ec4\u4e3a\u7a7a\u7ed9\u9ed8\u8ba4\u503c @forelse($students as $student) {{$student->name}} @empty null @endforelse 4\u3001\u6a21\u677f\u4e2d\u7684URL url \u8def\u7531\u540d\u79f0\u751f\u6210 action \u63a7\u5236\u5668\u548c\u65b9\u6cd5\u540d\u751f\u6210 route \u522b\u540d\u751f\u6210 \u63a7\u5236\u5668\u8bbe\u7f6e Route::get('student/list', ['as'=> 'list', 'uses'=> 'StudentController@list']); \u4e09\u79cd\u65b9\u5f0f\u7ed3\u679c\u4e00\u6837 {{ url('student/list') }} {{ action('StudentController@list') }} {{ route('list') }} http://localhost:8000/student/list","title":"\u5341\u4e00\u3001Blade\u6a21\u677f\u5f15\u64ce"},{"location":"php/Laravel-\u57fa\u7840\u7bc7/#_8","text":"\u5b89\u88c5Laravel \u6838\u5fc3\u76ee\u5f55\u6587\u4ef6 \u8def\u7531 MVC \u6570\u636e\u5e93\u64cd\u4f5c3\u79cd \u6a21\u677f\u5f15\u64ce","title":"\u603b\u7ed3"},{"location":"php/Laravel-\u8868\u5355\u7bc7/","text":"Laravel-\u8868\u5355\u7bc7 \u7b2c1\u7ae0 Controller \u4ecb\u7ecd 1\u3001Request 2\u3001Session 3\u3001Response 4\u3001Middleware 1\u3001Request Laravel\u8bf7\u6c42\u4f7f\u7528\u7684\u7ec4\u4ef6\u662fsymfony/http-foundatio \u8bf7\u6c42\u4e2d\u5b58\u653e\u4e86 $ _GET $ _POST $ _COOKIE $ _FILES $ _SERVER \u83b7\u53d6\u8bf7\u6c42\u4e2d\u7684\u503c \u5224\u65ad\u8bf7\u6c42\u7c7b\u578b /** * \u8bf7\u6c42url * http://127.0.0.1:8000/student/list?name=Tom */ // \u53d6\u503c $request->input('name'); // Tom // \u53d6\u503c\uff0c\u8bbe\u7f6e\u9ed8\u8ba4\u503c $request->input('age', 'default'); // default // \u5224\u65ad\u662f\u5426\u6709\u503c $request->has('name'); // true // \u53d6\u51fa\u6240\u6709\u53c2\u6570 $request->all(); // { [\"name\"]=> \"Tom\" } // \u83b7\u53d6\u8bf7\u6c42\u7c7b\u578b $request->method(); // GET // \u5224\u65ad\u8bf7\u6c42\u7c7b\u578b $request->isMethod('GET'); // true // \u5224\u65ad\u662f\u5426\u4e3aajax\u8bf7\u6c42 $request->ajax(); // false // \u5224\u65ad\u8def\u7531\u683c\u5f0f $request->is('student/*'); // true // \u83b7\u53d6\u5f53\u524durl $request->url(); // http://127.0.0.1:8000/student/list 2\u3001Session HTTP\u534f\u8bae\u65e0\u72b6\u6001 Stateless Session\u63d0\u4f9b\u4e00\u79cd\u4fdd\u5b58\u7528\u6237\u6570\u636e\u7684\u65b9\u6cd5 \u652f\u6301\u591a\u79cdsession\u540e\u7aef\u9a71\u52a8\uff1a Memcached\u3001Redis\u3001\u6570\u636e\u5e93 \u9ed8\u8ba4\u4f7f\u7528file\u7684Session\u9a71\u52a8 \u914d\u7f6e\u6587\u4ef6\uff1aconfig/session.php \u542f\u7528Session\u4e2d\u95f4\u4ef6 Route::group(['middleware'=>['web']], function (){ Route::get('student/list', 'StudentController@list'); }); \u4f7f\u7528\u65b9\u5f0f 1\u3001Request\u7c7bsession()\u65b9\u6cd5 2\u3001session()\u8f85\u52a9\u51fd\u6570 3\u3001Session facade \u4f7f\u7528\u793a\u4f8b // 1\u3001HTTP request $request->session()->put('key', 'value'); $request->session()->get('key'); // 2\u3001session() session()->put('key', 'value'); session()->get('key'); // 3\u3001Session Session::put('key', 'value'); Session::get('key', 'default'); // \u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u5b58\u50a8 Session::put(['key' => 'value']); // \u653e\u5230Session\u6570\u7ec4\u4e2d Session::push('key', 'value1'); Session::push('key', 'value2'); // \u4eceSession\u4e2d\u53d6\u6570\u636e\uff0c\u53d6\u51fa\u5c31\u5220\u9664 Session::pull('key', 'value'); // \u53d6\u51fa\u6240\u6709\u503c Session::all(); // \u5224\u65ad\u5b58\u5728 Session::has('key'); // \u5220\u9664\u6307\u5b9akey\u7684\u503c Session::forget('key'); // \u6e05\u7a7a Session::flush(); // \u6682\u5b58\u6570\u636e\uff0c\u7b2c\u4e00\u6b21\u8bbf\u95ee\u7684\u65f6\u5019\u5b58\u5728 Session::flash('key', 'value'); 3\u3001Response \u5e38\u89c1\u54cd\u5e94\u7c7b\u578b\uff1a 1\u3001\u5b57\u7b26\u4e32 2\u3001\u89c6\u56fe 3\u3001Json 4\u3001\u91cd\u5b9a\u5411 // json $data = [ 'code': 0, 'data': ['name' => 'Tom'], 'msg': 'ok', ]; return response()->json($data); // \u91cd\u5b9a\u5411\uff0c Route::get('student/list', [ 'as' => 'list', 'uses' =>'StudentController@list' ]); return redirect('student/list'); // \u643a\u5e26Session\u5feb\u95ea\u6570\u636e return redirect('student/list')->with('key', 'value'); // action return redirect()-action('StudentController@list'); // route return redirect()-route('list'); // \u8fd4\u56de\u4e0a\u4e00\u9875\u9762 return redirect()-back(); 4\u3001Middleware Laravel\u4e2d\u95f4\u4ef6\u63d0\u4f9b\u4e00\u4e2a\u65b9\u4fbf\u7684\u673a\u5236\u6765\u8fc7\u6ee4\u8fdb\u5165\u5e94\u7528\u7a0b\u5e8f\u7684HTTP\u8bf7\u6c42 \u6b65\u9aa4\uff1a \u65b0\u5efa\u4e2d\u95f4\u4ef6 \u6ce8\u518c\u4e2d\u95f4\u4ef6 \u4f7f\u7528\u4e2d\u95f4\u4ef6 \u4e2d\u95f4\u4ef6\u7684\u524d\u7f6e\u548c\u540e\u7f6e\u64cd\u4f5c \u4f7f\u7528\u793a\u4f8b \u9700\u6c42\uff1a \u6d3b\u52a8\u5f00\u59cb\u524d\u53ea\u80fd\u8bbf\u95ee\u6d3b\u52a8\u7684-\u4ecb\u7ecd\u9875 \u6d3b\u52a8\u5f00\u59cb\u540e\u53ef\u4ee5\u8bbf\u95ee\u6d3b\u52a8\u7684-\u6d3b\u52a8\u9875 1\u3001\u65b0\u5efa\u4e2d\u95f4\u4ef6 app/Http/Middleware/Active.php namespace App\\Http\\Middleware; use Closure; class Active { public function handle($request, Closure $next) { if (time() < strtotime('2019-11-01')) { return redirect('student/index'); } else{ return $next($request); } } } 2\u3001\u6ce8\u518c\u4e2d\u95f4\u4ef6 app/Http/Kernel.php namespace App\\Http; use Illuminate\\Foundation\\Http\\Kernel as HttpKernel; class Kernel extends HttpKernel { protected $routeMiddleware = [ 'active' => \\App\\Http\\Middleware\\Active::class, ]; } 3\u3001\u4f7f\u7528\u4e2d\u95f4\u4ef6 app/Http/Controllers/StudentController.php namespace App\\Http\\Controllers; use Illuminate\\Http\\Request; class StudentController extends Controller { function list(Request $request) { return '\u6d3b\u52a8\u9875'; } function index(Request $request) { return '\u4ecb\u7ecd\u9875'; } } routes/web.php // \u6d3b\u52a8\u5f00\u59cb\u524d\u53ef\u4ee5\u8bbf\u95ee\u6d3b\u52a8\u9996\u9875 Route::get('student/index', 'StudentController@index'); // \u6d3b\u52a8\u5f00\u59cb\u540e\u624d\u80fd\u8bbf\u95ee\u6d3b\u52a8\u5217\u8868\u9875 Route::group(['middleware'=>['active']], function (){ Route::get('student/list', 'StudentController@list'); }); \u524d\u7f6e\u64cd\u4f5c\uff1a\u8bf7\u6c42\u6267\u884c\u524d \u540e\u7f6e\u64cd\u4f5c\uff1a\u8bf7\u6c42\u6267\u884c\u540e namespace App\\Http\\Middleware; use Closure; class Active { // \u524d\u7f6e\u64cd\u4f5c public function handleBefore($request, Closure $next) { if (time() < strtotime('2019-11-01')) { return redirect('student/index'); } else{ return $next($request); } } // \u540e\u7f6e\u64cd\u4f5c public function handleAfter($request, Closure $next) { $response = $next($request); echo '\u540e\u7f6e\u64cd\u4f5c'; return $response; } } \u7b2c2\u7ae0 Laravel\u8868\u5355 1\u3001\u9759\u6001\u8d44\u6e90\u7ba1\u7406\u53ca\u6a21\u677f\u5e03\u5c40 2\u3001\u8868\u5355\u5217\u8868\u53ca\u5206\u9875\u5b9e\u73b0 3\u3001\u901a\u8fc7\u8868\u5355\u5b9e\u73b0\u65b0\u589e\u53ca\u64cd\u4f5c\u72b6\u6001\u63d0\u793a\u529f\u80fd 4\u3001\u8868\u5355\u9a8c\u8bc1\u53ca\u6570\u636e\u4fdd\u6301\u8be6\u89e3 5\u3001\u901a\u8fc7\u6a21\u578b\u5904\u7406\u6027\u522b 6\u3001\u901a\u8fc7\u8868\u5355\u5b9e\u73b0\u4fee\u6539 7\u3001\u8868\u5355\u4e2d\u67e5\u770b\u8be6\u60c5\u53ca\u5220\u9664 \u5b8c\u6574\u4ee3\u7801 1\u3001\u914d\u7f6e\u6570\u636e\u5e93 .env DB_CONNECTION=mysql DB_HOST=127.0.0.1 DB_PORT=3306 DB_DATABASE=data DB_USERNAME=root DB_PASSWORD=123456 2\u3001\u914d\u7f6e\u8def\u7531 routes/web.php Route::get('/', [ 'uses'=> 'StudentController@index' ]); Route::any('create', [ 'uses'=> 'StudentController@create' ]); Route::post('save', [ 'uses'=> 'StudentController@save' ]); Route::any('update/{id}', [ 'uses'=> 'StudentController@update' ]); Route::any('detail/{id}', [ 'uses'=> 'StudentController@detail' ]); Route::any('delete/{id}', [ 'uses'=> 'StudentController@delete' ]); 3\u3001Model app/Student.php namespace App; use Illuminate\\Database\\Eloquent\\Model; class Student extends Model { // \u5b9a\u4e49\u5e38\u91cf const SEX_NULL = 0; const SEX_BOY = 1; const SEX_GIRL = 2; // \u6307\u5b9a\u8868\u540d protected $table = 'student'; // \u6307\u5b9a\u4e3b\u952e protected $primaryKey = 'id'; // \u81ea\u52a8\u7ef4\u62a4\u65f6\u95f4\u6233\u5b57\u6bb5 public $timestamps = true; // \u6307\u5b9a\u5141\u8bb8\u6279\u91cf\u8d4b\u503c\u7684\u5b57\u6bb5 protected $fillable = ['name', 'age', 'sex']; // \u81ea\u5b9a\u4e49\u4fdd\u5b58\u65f6\u95f4\u6233\u683c\u5f0f public function getDateFormat() { return time(); } // \u89e3\u51b3 Call to a member function format() on string public function fromDateTime($val) { return empty($val) ? $val : $this->getDateFormat(); } // \u4e0d\u81ea\u52a8\u683c\u5f0f\u5316\u65f6\u95f4\u6233 protected function asDateTime($value) { return $value; } public function getSex($key = null) { $arr = [ self::SEX_NULL => '\u672a\u77e5', self::SEX_BOY => '\u7537', self::SEX_GIRL => '\u5973', ]; if ($key !== null) { return array_key_exists($key, $arr) ? $arr[$key] : $arr[self::SEX_NULL]; } else { return $arr; } } } 5\u3001\u63a7\u5236\u5668 app/Http/Controllers/StudentController.php namespace App\\Http\\Controllers; use App\\Student; use Illuminate\\Http\\Request; class StudentController extends Controller { function index(Request $request) { // \u5206\u9875\u6bcf\u9875\u6570\u91cf $students = Student::paginate(20); return view('student/index', ['students' => $students] ); } function create(Request $request) { if ($request->isMethod('POST')) { // \u6570\u636e\u9a8c\u8bc1 // 1\u3001\u63a7\u5236\u5668\u9a8c\u8bc1 // \u901a\u8fc7\u4f1a\u7ee7\u7eed\u6267\u884c // \u672a\u901a\u8fc7\u4f1a\u91cd\u5b9a\u5411\u5230\u4e0a\u4e00\u9875\u9762\uff0c\u629b\u51fa\u5f02\u5e38\uff0c\u9519\u8bef\u4fe1\u606f\u5b58\u50a8\u5230Session // $this->validate($request, [ // 'Student.name' => 'required|min:2|max:20', // 'Student.age' => 'required|integer', // 'Student.sex' => 'required|integer', // ], [ // 'required' => ':attribute \u4e3a\u5fc5\u586b\u9879', // \u5360\u4f4d\u7b26 // 'integer' => ':attribute \u5fc5\u987b\u4e3a\u6574\u6570', // 'min' => ':attribute \u957f\u5ea6\u4e0d\u7b26\u5408\u8981\u6c42', // ], [ // 'Student.name' => '\u59d3\u540d', // 'Student.age' => '\u5e74\u9f84', // 'Student.sex' => '\u6027\u522b', // ]); // 2\u3001Validator\u9a8c\u8bc1 $validator = \\Validator::make($request->input(), [ 'Student.name' => 'required|min:2|max:20', 'Student.age' => 'required|integer', 'Student.sex' => 'required|integer', ], [ 'required' => ':attribute \u4e3a\u5fc5\u586b\u9879', // \u5360\u4f4d\u7b26 'integer' => ':attribute \u5fc5\u987b\u4e3a\u6574\u6570', 'min' => ':attribute \u957f\u5ea6\u4e0d\u7b26\u5408\u8981\u6c42', ], [ 'Student.name' => '\u59d3\u540d', 'Student.age' => '\u5e74\u9f84', 'Student.sex' => '\u6027\u522b', ] ); if ($validator->fails()) { // \u6570\u636e\u4fdd\u6301 return redirect()->back()->withErrors($validator)->withInput(); } $data = $request->input('Student'); // \u9700\u8981\u8bbe\u7f6e\u6a21\u578b\u6279\u91cf\u8d4b\u503c\u5b57\u6bb5 if (Student::create($data)) { return redirect('/')->with('success', '\u6dfb\u52a0\u6210\u529f'); } else { return redirect()->back(); } } else { $student = new Student(); return view('student/create', [ 'student' => $student ]); } } function save(Request $request) { $data = $request->input('Student'); var_dump($data); $student = new Student(); $student->name = $data['name']; $student->age = $data['age']; $student->sex = $data['sex']; if ($student->save()) { return redirect('/'); } else { return redirect()->back(); } } function update(Request $request, $id) { $student = Student::find($id); if ($request->isMethod('POST')) { $data = $request->input('Student'); $student->name = $data['name']; $student->age = $data['age']; $student->sex = $data['sex']; if ($student->save()) { return redirect('/')->with('success', '\u4fee\u6539\u6210\u529f-' . $id); } } else { return view('student/create', [ 'student' => $student ]); } } function detail(Request $request, $id) { $student = Student::find($id); return view('student/detail', [ 'student' => $student ]); } function delete(Request $request, $id) { $student = Student::find($id); if($student->delete()){ return redirect('/')->with('success', '\u5220\u9664\u6210\u529f-' . $id); } } } 6\u3001\u89c6\u56fe (1)\u516c\u5171\u5e03\u5c40 resources/views/common/layouts.blade.php <html> <head> <meta charset=\"UTF-8\"> <title>Document - @yield('title')</title> <link rel=\"stylesheet\" href=\"/css/index.css\"> </head> <body> @section('header') <div> <h1>\u5b66\u751f\u7ba1\u7406</h1> </div> @show <div class=\"main\"> <div class=\"container\"> @section('left') <p><a href=\"{{url('/')}}\" class=\"{{Request::getPathInfo() == '/'? 'active': ''}}\">\u5b66\u751f\u5217\u8868</a></p> <p><a href=\"{{url('/create')}}\" class=\"{{Request::getPathInfo() == '/create'? 'active': ''}}\">\u6dfb\u52a0\u5b66\u751f</a></p> @show </div> <div class=\"container\"> @include('common/message') @section('right') \u4e3b\u9875 @show </div> </div> @section('footer') <div> @2019 </div> @show </body> </html> \uff082\uff09\u6d88\u606f\u7ec4\u4ef6 resources/views/common/message.blade.php <div> @if(Session::has('success')) {{ Session::get('success')}} @endif @if(count($errors)) <p>{{$errors->first()}}</p> @endif {{-- @if(count($errors))--}} {{-- @foreach($errors->all() as $error)--}} {{-- <p>{{$error}}</p>--}} {{-- @endforeach--}} {{-- @endif--}} </div> \uff083\uff09\u9996\u9875 resources/views/student/index.blade.php @extends('common/layouts') @section('right') <table> <thead> <tr> <th>\u5e8f\u53f7</th> <th>\u59d3\u540d</th> <th>\u5e74\u9f84</th> <th>\u6027\u522b</th> <th>\u521b\u5efa\u65e5\u671f</th> <th>\u4fee\u6539\u65e5\u671f</th> <th>\u64cd\u4f5c</th> </tr> </thead> <tbody> @foreach($students as $student) <tr> <td>{{$student->id}}</td> <td>{{$student->name}}</td> <td>{{$student->age}}</td> <td>{{$student->getSex($student->sex)}}</td> <td>{{date('Y-m-d', $student->created_at)}}</td> <td>{{date('Y-m-d', $student->updated_at)}}</td> <td> <a href=\"{{url('update', ['id'=> $student->id])}}\">\u4fee\u6539</a> <a href=\"{{url('detail', ['id'=> $student->id])}}\">\u8be6\u60c5</a> <a href=\"{{url('delete', ['id'=> $student->id])}}\" onclick=\"if(confirm('\u786e\u5b9a\u5220\u9664')===false)return false;\">\u5220\u9664</a> </td> </tr> @endforeach </tbody> </table> {{ $students->render() }} @stop \uff084\uff09\u8be6\u60c5\u9875 resources/views/student/detail.blade.php @extends('common/layouts') @section('right') <table> <tr><th>id</th><td>{{$student->id}}</td></tr> <tr><th>\u59d3\u540d</th><td>{{$student->name}}</td></tr> <tr><th>\u5e74\u9f84</th><td>{{$student->age}}</td></tr> <tr><th>\u6027\u522b</th><td>{{$student->getSex($student->sex)}}</td></tr> <tr><th>\u6dfb\u52a0\u65e5\u671f</th><td>{{date('Y-m-d', $student->created_at)}}</td></tr> <tr><th>\u4fee\u6539\u65e5\u671f</th><td>{{date('Y-m-d', $student->updated_at)}}</td></tr> </table> @stop \uff085\uff09\u7f16\u8f91\u9875 resources/views/student/create.blade.php @extends('common/layouts') @section('right') <div class=\"form\"> <form action=\"\" method=\"post\"> {{csrf_field()}} <input type=\"hidden\" name=\"id\" value=\"{{$student->id}}\" /> <p> <label for=\"name\">\u59d3\u540d</label> <input id=\"name\" name=\"Student[name]\" type=\"text\" value=\"{{old('Student')['name'] ? old('Student')['name']: $student->name }}\" > <span class=\"error\">{{$errors->first('Student.name')}}</span> </p> <p> <label for=\"age\">\u5e74\u9f84</label> <input id=\"age\" name=\"Student[age]\" type=\"text\" value=\"{{old('Student')['age']? old('Student')['age']: $student->age }}\"> <span class=\"error\">{{$errors->first('Student.age')}}</span> </p> <p> \u6027\u522b @foreach($student->getSex() as $key=> $val) <label> <input id=\"sex-man\" name=\"Student[sex]\" type=\"radio\" value=\"{{$key}}\" {{(old('Student')['sex'] ? old('Student')['sex']: $student->sex) === $key? 'checked': ''}} > {{$val}} </label> @endforeach <span class=\"error\">{{$errors->first('Student.sex')}}</span> </p> <p> <input type=\"submit\" value=\"\u63d0\u4ea4\"> </p> </form> </div> @stop \uff086\uff09css\u6587\u4ef6 public/css/index.scss body { width : 600 px ; margin : 0 auto ; text-align : center ; } . main { display : flex ; width : 100 % ; .container { border : 1 px solid #DDDDDD ; a { text-decoration : none ; padding : 3 px 5 px ; &:link, &:visited { color : #1b1e21 ; } & : active { color : #1b1e21 ; } & : hover , & . active { color : #FFFFFF ; background-color : #DDDDDD ; } } . form { .error{ color : red ; font-size : 12 px ; } } } . pagination { ul, li { list-style : none ; } display : flex ; li { background-color : #DDDDDD ; color : #FFFFFF ; padding : 3 px 5 px ; margin : 0 5 px ; } } } \u7b2c3\u5f20 \u603b\u7ed3 Request Response Session Middleware","title":"Laravel-\u8868\u5355\u7bc7"},{"location":"php/Laravel-\u8868\u5355\u7bc7/#laravel-","text":"","title":"Laravel-\u8868\u5355\u7bc7"},{"location":"php/Laravel-\u8868\u5355\u7bc7/#1-controller","text":"1\u3001Request 2\u3001Session 3\u3001Response 4\u3001Middleware","title":"\u7b2c1\u7ae0 Controller \u4ecb\u7ecd"},{"location":"php/Laravel-\u8868\u5355\u7bc7/#1request","text":"Laravel\u8bf7\u6c42\u4f7f\u7528\u7684\u7ec4\u4ef6\u662fsymfony/http-foundatio \u8bf7\u6c42\u4e2d\u5b58\u653e\u4e86 $ _GET $ _POST $ _COOKIE $ _FILES $ _SERVER \u83b7\u53d6\u8bf7\u6c42\u4e2d\u7684\u503c \u5224\u65ad\u8bf7\u6c42\u7c7b\u578b /** * \u8bf7\u6c42url * http://127.0.0.1:8000/student/list?name=Tom */ // \u53d6\u503c $request->input('name'); // Tom // \u53d6\u503c\uff0c\u8bbe\u7f6e\u9ed8\u8ba4\u503c $request->input('age', 'default'); // default // \u5224\u65ad\u662f\u5426\u6709\u503c $request->has('name'); // true // \u53d6\u51fa\u6240\u6709\u53c2\u6570 $request->all(); // { [\"name\"]=> \"Tom\" } // \u83b7\u53d6\u8bf7\u6c42\u7c7b\u578b $request->method(); // GET // \u5224\u65ad\u8bf7\u6c42\u7c7b\u578b $request->isMethod('GET'); // true // \u5224\u65ad\u662f\u5426\u4e3aajax\u8bf7\u6c42 $request->ajax(); // false // \u5224\u65ad\u8def\u7531\u683c\u5f0f $request->is('student/*'); // true // \u83b7\u53d6\u5f53\u524durl $request->url(); // http://127.0.0.1:8000/student/list","title":"1\u3001Request"},{"location":"php/Laravel-\u8868\u5355\u7bc7/#2session","text":"HTTP\u534f\u8bae\u65e0\u72b6\u6001 Stateless Session\u63d0\u4f9b\u4e00\u79cd\u4fdd\u5b58\u7528\u6237\u6570\u636e\u7684\u65b9\u6cd5 \u652f\u6301\u591a\u79cdsession\u540e\u7aef\u9a71\u52a8\uff1a Memcached\u3001Redis\u3001\u6570\u636e\u5e93 \u9ed8\u8ba4\u4f7f\u7528file\u7684Session\u9a71\u52a8 \u914d\u7f6e\u6587\u4ef6\uff1aconfig/session.php \u542f\u7528Session\u4e2d\u95f4\u4ef6 Route::group(['middleware'=>['web']], function (){ Route::get('student/list', 'StudentController@list'); }); \u4f7f\u7528\u65b9\u5f0f 1\u3001Request\u7c7bsession()\u65b9\u6cd5 2\u3001session()\u8f85\u52a9\u51fd\u6570 3\u3001Session facade \u4f7f\u7528\u793a\u4f8b // 1\u3001HTTP request $request->session()->put('key', 'value'); $request->session()->get('key'); // 2\u3001session() session()->put('key', 'value'); session()->get('key'); // 3\u3001Session Session::put('key', 'value'); Session::get('key', 'default'); // \u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u5b58\u50a8 Session::put(['key' => 'value']); // \u653e\u5230Session\u6570\u7ec4\u4e2d Session::push('key', 'value1'); Session::push('key', 'value2'); // \u4eceSession\u4e2d\u53d6\u6570\u636e\uff0c\u53d6\u51fa\u5c31\u5220\u9664 Session::pull('key', 'value'); // \u53d6\u51fa\u6240\u6709\u503c Session::all(); // \u5224\u65ad\u5b58\u5728 Session::has('key'); // \u5220\u9664\u6307\u5b9akey\u7684\u503c Session::forget('key'); // \u6e05\u7a7a Session::flush(); // \u6682\u5b58\u6570\u636e\uff0c\u7b2c\u4e00\u6b21\u8bbf\u95ee\u7684\u65f6\u5019\u5b58\u5728 Session::flash('key', 'value');","title":"2\u3001Session"},{"location":"php/Laravel-\u8868\u5355\u7bc7/#3response","text":"\u5e38\u89c1\u54cd\u5e94\u7c7b\u578b\uff1a 1\u3001\u5b57\u7b26\u4e32 2\u3001\u89c6\u56fe 3\u3001Json 4\u3001\u91cd\u5b9a\u5411 // json $data = [ 'code': 0, 'data': ['name' => 'Tom'], 'msg': 'ok', ]; return response()->json($data); // \u91cd\u5b9a\u5411\uff0c Route::get('student/list', [ 'as' => 'list', 'uses' =>'StudentController@list' ]); return redirect('student/list'); // \u643a\u5e26Session\u5feb\u95ea\u6570\u636e return redirect('student/list')->with('key', 'value'); // action return redirect()-action('StudentController@list'); // route return redirect()-route('list'); // \u8fd4\u56de\u4e0a\u4e00\u9875\u9762 return redirect()-back();","title":"3\u3001Response"},{"location":"php/Laravel-\u8868\u5355\u7bc7/#4middleware","text":"Laravel\u4e2d\u95f4\u4ef6\u63d0\u4f9b\u4e00\u4e2a\u65b9\u4fbf\u7684\u673a\u5236\u6765\u8fc7\u6ee4\u8fdb\u5165\u5e94\u7528\u7a0b\u5e8f\u7684HTTP\u8bf7\u6c42 \u6b65\u9aa4\uff1a \u65b0\u5efa\u4e2d\u95f4\u4ef6 \u6ce8\u518c\u4e2d\u95f4\u4ef6 \u4f7f\u7528\u4e2d\u95f4\u4ef6 \u4e2d\u95f4\u4ef6\u7684\u524d\u7f6e\u548c\u540e\u7f6e\u64cd\u4f5c \u4f7f\u7528\u793a\u4f8b \u9700\u6c42\uff1a \u6d3b\u52a8\u5f00\u59cb\u524d\u53ea\u80fd\u8bbf\u95ee\u6d3b\u52a8\u7684-\u4ecb\u7ecd\u9875 \u6d3b\u52a8\u5f00\u59cb\u540e\u53ef\u4ee5\u8bbf\u95ee\u6d3b\u52a8\u7684-\u6d3b\u52a8\u9875 1\u3001\u65b0\u5efa\u4e2d\u95f4\u4ef6 app/Http/Middleware/Active.php namespace App\\Http\\Middleware; use Closure; class Active { public function handle($request, Closure $next) { if (time() < strtotime('2019-11-01')) { return redirect('student/index'); } else{ return $next($request); } } } 2\u3001\u6ce8\u518c\u4e2d\u95f4\u4ef6 app/Http/Kernel.php namespace App\\Http; use Illuminate\\Foundation\\Http\\Kernel as HttpKernel; class Kernel extends HttpKernel { protected $routeMiddleware = [ 'active' => \\App\\Http\\Middleware\\Active::class, ]; } 3\u3001\u4f7f\u7528\u4e2d\u95f4\u4ef6 app/Http/Controllers/StudentController.php namespace App\\Http\\Controllers; use Illuminate\\Http\\Request; class StudentController extends Controller { function list(Request $request) { return '\u6d3b\u52a8\u9875'; } function index(Request $request) { return '\u4ecb\u7ecd\u9875'; } } routes/web.php // \u6d3b\u52a8\u5f00\u59cb\u524d\u53ef\u4ee5\u8bbf\u95ee\u6d3b\u52a8\u9996\u9875 Route::get('student/index', 'StudentController@index'); // \u6d3b\u52a8\u5f00\u59cb\u540e\u624d\u80fd\u8bbf\u95ee\u6d3b\u52a8\u5217\u8868\u9875 Route::group(['middleware'=>['active']], function (){ Route::get('student/list', 'StudentController@list'); }); \u524d\u7f6e\u64cd\u4f5c\uff1a\u8bf7\u6c42\u6267\u884c\u524d \u540e\u7f6e\u64cd\u4f5c\uff1a\u8bf7\u6c42\u6267\u884c\u540e namespace App\\Http\\Middleware; use Closure; class Active { // \u524d\u7f6e\u64cd\u4f5c public function handleBefore($request, Closure $next) { if (time() < strtotime('2019-11-01')) { return redirect('student/index'); } else{ return $next($request); } } // \u540e\u7f6e\u64cd\u4f5c public function handleAfter($request, Closure $next) { $response = $next($request); echo '\u540e\u7f6e\u64cd\u4f5c'; return $response; } }","title":"4\u3001Middleware"},{"location":"php/Laravel-\u8868\u5355\u7bc7/#2-laravel","text":"1\u3001\u9759\u6001\u8d44\u6e90\u7ba1\u7406\u53ca\u6a21\u677f\u5e03\u5c40 2\u3001\u8868\u5355\u5217\u8868\u53ca\u5206\u9875\u5b9e\u73b0 3\u3001\u901a\u8fc7\u8868\u5355\u5b9e\u73b0\u65b0\u589e\u53ca\u64cd\u4f5c\u72b6\u6001\u63d0\u793a\u529f\u80fd 4\u3001\u8868\u5355\u9a8c\u8bc1\u53ca\u6570\u636e\u4fdd\u6301\u8be6\u89e3 5\u3001\u901a\u8fc7\u6a21\u578b\u5904\u7406\u6027\u522b 6\u3001\u901a\u8fc7\u8868\u5355\u5b9e\u73b0\u4fee\u6539 7\u3001\u8868\u5355\u4e2d\u67e5\u770b\u8be6\u60c5\u53ca\u5220\u9664 \u5b8c\u6574\u4ee3\u7801 1\u3001\u914d\u7f6e\u6570\u636e\u5e93 .env DB_CONNECTION=mysql DB_HOST=127.0.0.1 DB_PORT=3306 DB_DATABASE=data DB_USERNAME=root DB_PASSWORD=123456 2\u3001\u914d\u7f6e\u8def\u7531 routes/web.php Route::get('/', [ 'uses'=> 'StudentController@index' ]); Route::any('create', [ 'uses'=> 'StudentController@create' ]); Route::post('save', [ 'uses'=> 'StudentController@save' ]); Route::any('update/{id}', [ 'uses'=> 'StudentController@update' ]); Route::any('detail/{id}', [ 'uses'=> 'StudentController@detail' ]); Route::any('delete/{id}', [ 'uses'=> 'StudentController@delete' ]); 3\u3001Model app/Student.php namespace App; use Illuminate\\Database\\Eloquent\\Model; class Student extends Model { // \u5b9a\u4e49\u5e38\u91cf const SEX_NULL = 0; const SEX_BOY = 1; const SEX_GIRL = 2; // \u6307\u5b9a\u8868\u540d protected $table = 'student'; // \u6307\u5b9a\u4e3b\u952e protected $primaryKey = 'id'; // \u81ea\u52a8\u7ef4\u62a4\u65f6\u95f4\u6233\u5b57\u6bb5 public $timestamps = true; // \u6307\u5b9a\u5141\u8bb8\u6279\u91cf\u8d4b\u503c\u7684\u5b57\u6bb5 protected $fillable = ['name', 'age', 'sex']; // \u81ea\u5b9a\u4e49\u4fdd\u5b58\u65f6\u95f4\u6233\u683c\u5f0f public function getDateFormat() { return time(); } // \u89e3\u51b3 Call to a member function format() on string public function fromDateTime($val) { return empty($val) ? $val : $this->getDateFormat(); } // \u4e0d\u81ea\u52a8\u683c\u5f0f\u5316\u65f6\u95f4\u6233 protected function asDateTime($value) { return $value; } public function getSex($key = null) { $arr = [ self::SEX_NULL => '\u672a\u77e5', self::SEX_BOY => '\u7537', self::SEX_GIRL => '\u5973', ]; if ($key !== null) { return array_key_exists($key, $arr) ? $arr[$key] : $arr[self::SEX_NULL]; } else { return $arr; } } } 5\u3001\u63a7\u5236\u5668 app/Http/Controllers/StudentController.php namespace App\\Http\\Controllers; use App\\Student; use Illuminate\\Http\\Request; class StudentController extends Controller { function index(Request $request) { // \u5206\u9875\u6bcf\u9875\u6570\u91cf $students = Student::paginate(20); return view('student/index', ['students' => $students] ); } function create(Request $request) { if ($request->isMethod('POST')) { // \u6570\u636e\u9a8c\u8bc1 // 1\u3001\u63a7\u5236\u5668\u9a8c\u8bc1 // \u901a\u8fc7\u4f1a\u7ee7\u7eed\u6267\u884c // \u672a\u901a\u8fc7\u4f1a\u91cd\u5b9a\u5411\u5230\u4e0a\u4e00\u9875\u9762\uff0c\u629b\u51fa\u5f02\u5e38\uff0c\u9519\u8bef\u4fe1\u606f\u5b58\u50a8\u5230Session // $this->validate($request, [ // 'Student.name' => 'required|min:2|max:20', // 'Student.age' => 'required|integer', // 'Student.sex' => 'required|integer', // ], [ // 'required' => ':attribute \u4e3a\u5fc5\u586b\u9879', // \u5360\u4f4d\u7b26 // 'integer' => ':attribute \u5fc5\u987b\u4e3a\u6574\u6570', // 'min' => ':attribute \u957f\u5ea6\u4e0d\u7b26\u5408\u8981\u6c42', // ], [ // 'Student.name' => '\u59d3\u540d', // 'Student.age' => '\u5e74\u9f84', // 'Student.sex' => '\u6027\u522b', // ]); // 2\u3001Validator\u9a8c\u8bc1 $validator = \\Validator::make($request->input(), [ 'Student.name' => 'required|min:2|max:20', 'Student.age' => 'required|integer', 'Student.sex' => 'required|integer', ], [ 'required' => ':attribute \u4e3a\u5fc5\u586b\u9879', // \u5360\u4f4d\u7b26 'integer' => ':attribute \u5fc5\u987b\u4e3a\u6574\u6570', 'min' => ':attribute \u957f\u5ea6\u4e0d\u7b26\u5408\u8981\u6c42', ], [ 'Student.name' => '\u59d3\u540d', 'Student.age' => '\u5e74\u9f84', 'Student.sex' => '\u6027\u522b', ] ); if ($validator->fails()) { // \u6570\u636e\u4fdd\u6301 return redirect()->back()->withErrors($validator)->withInput(); } $data = $request->input('Student'); // \u9700\u8981\u8bbe\u7f6e\u6a21\u578b\u6279\u91cf\u8d4b\u503c\u5b57\u6bb5 if (Student::create($data)) { return redirect('/')->with('success', '\u6dfb\u52a0\u6210\u529f'); } else { return redirect()->back(); } } else { $student = new Student(); return view('student/create', [ 'student' => $student ]); } } function save(Request $request) { $data = $request->input('Student'); var_dump($data); $student = new Student(); $student->name = $data['name']; $student->age = $data['age']; $student->sex = $data['sex']; if ($student->save()) { return redirect('/'); } else { return redirect()->back(); } } function update(Request $request, $id) { $student = Student::find($id); if ($request->isMethod('POST')) { $data = $request->input('Student'); $student->name = $data['name']; $student->age = $data['age']; $student->sex = $data['sex']; if ($student->save()) { return redirect('/')->with('success', '\u4fee\u6539\u6210\u529f-' . $id); } } else { return view('student/create', [ 'student' => $student ]); } } function detail(Request $request, $id) { $student = Student::find($id); return view('student/detail', [ 'student' => $student ]); } function delete(Request $request, $id) { $student = Student::find($id); if($student->delete()){ return redirect('/')->with('success', '\u5220\u9664\u6210\u529f-' . $id); } } } 6\u3001\u89c6\u56fe (1)\u516c\u5171\u5e03\u5c40 resources/views/common/layouts.blade.php <html> <head> <meta charset=\"UTF-8\"> <title>Document - @yield('title')</title> <link rel=\"stylesheet\" href=\"/css/index.css\"> </head> <body> @section('header') <div> <h1>\u5b66\u751f\u7ba1\u7406</h1> </div> @show <div class=\"main\"> <div class=\"container\"> @section('left') <p><a href=\"{{url('/')}}\" class=\"{{Request::getPathInfo() == '/'? 'active': ''}}\">\u5b66\u751f\u5217\u8868</a></p> <p><a href=\"{{url('/create')}}\" class=\"{{Request::getPathInfo() == '/create'? 'active': ''}}\">\u6dfb\u52a0\u5b66\u751f</a></p> @show </div> <div class=\"container\"> @include('common/message') @section('right') \u4e3b\u9875 @show </div> </div> @section('footer') <div> @2019 </div> @show </body> </html> \uff082\uff09\u6d88\u606f\u7ec4\u4ef6 resources/views/common/message.blade.php <div> @if(Session::has('success')) {{ Session::get('success')}} @endif @if(count($errors)) <p>{{$errors->first()}}</p> @endif {{-- @if(count($errors))--}} {{-- @foreach($errors->all() as $error)--}} {{-- <p>{{$error}}</p>--}} {{-- @endforeach--}} {{-- @endif--}} </div> \uff083\uff09\u9996\u9875 resources/views/student/index.blade.php @extends('common/layouts') @section('right') <table> <thead> <tr> <th>\u5e8f\u53f7</th> <th>\u59d3\u540d</th> <th>\u5e74\u9f84</th> <th>\u6027\u522b</th> <th>\u521b\u5efa\u65e5\u671f</th> <th>\u4fee\u6539\u65e5\u671f</th> <th>\u64cd\u4f5c</th> </tr> </thead> <tbody> @foreach($students as $student) <tr> <td>{{$student->id}}</td> <td>{{$student->name}}</td> <td>{{$student->age}}</td> <td>{{$student->getSex($student->sex)}}</td> <td>{{date('Y-m-d', $student->created_at)}}</td> <td>{{date('Y-m-d', $student->updated_at)}}</td> <td> <a href=\"{{url('update', ['id'=> $student->id])}}\">\u4fee\u6539</a> <a href=\"{{url('detail', ['id'=> $student->id])}}\">\u8be6\u60c5</a> <a href=\"{{url('delete', ['id'=> $student->id])}}\" onclick=\"if(confirm('\u786e\u5b9a\u5220\u9664')===false)return false;\">\u5220\u9664</a> </td> </tr> @endforeach </tbody> </table> {{ $students->render() }} @stop \uff084\uff09\u8be6\u60c5\u9875 resources/views/student/detail.blade.php @extends('common/layouts') @section('right') <table> <tr><th>id</th><td>{{$student->id}}</td></tr> <tr><th>\u59d3\u540d</th><td>{{$student->name}}</td></tr> <tr><th>\u5e74\u9f84</th><td>{{$student->age}}</td></tr> <tr><th>\u6027\u522b</th><td>{{$student->getSex($student->sex)}}</td></tr> <tr><th>\u6dfb\u52a0\u65e5\u671f</th><td>{{date('Y-m-d', $student->created_at)}}</td></tr> <tr><th>\u4fee\u6539\u65e5\u671f</th><td>{{date('Y-m-d', $student->updated_at)}}</td></tr> </table> @stop \uff085\uff09\u7f16\u8f91\u9875 resources/views/student/create.blade.php @extends('common/layouts') @section('right') <div class=\"form\"> <form action=\"\" method=\"post\"> {{csrf_field()}} <input type=\"hidden\" name=\"id\" value=\"{{$student->id}}\" /> <p> <label for=\"name\">\u59d3\u540d</label> <input id=\"name\" name=\"Student[name]\" type=\"text\" value=\"{{old('Student')['name'] ? old('Student')['name']: $student->name }}\" > <span class=\"error\">{{$errors->first('Student.name')}}</span> </p> <p> <label for=\"age\">\u5e74\u9f84</label> <input id=\"age\" name=\"Student[age]\" type=\"text\" value=\"{{old('Student')['age']? old('Student')['age']: $student->age }}\"> <span class=\"error\">{{$errors->first('Student.age')}}</span> </p> <p> \u6027\u522b @foreach($student->getSex() as $key=> $val) <label> <input id=\"sex-man\" name=\"Student[sex]\" type=\"radio\" value=\"{{$key}}\" {{(old('Student')['sex'] ? old('Student')['sex']: $student->sex) === $key? 'checked': ''}} > {{$val}} </label> @endforeach <span class=\"error\">{{$errors->first('Student.sex')}}</span> </p> <p> <input type=\"submit\" value=\"\u63d0\u4ea4\"> </p> </form> </div> @stop \uff086\uff09css\u6587\u4ef6 public/css/index.scss body { width : 600 px ; margin : 0 auto ; text-align : center ; } . main { display : flex ; width : 100 % ; .container { border : 1 px solid #DDDDDD ; a { text-decoration : none ; padding : 3 px 5 px ; &:link, &:visited { color : #1b1e21 ; } & : active { color : #1b1e21 ; } & : hover , & . active { color : #FFFFFF ; background-color : #DDDDDD ; } } . form { .error{ color : red ; font-size : 12 px ; } } } . pagination { ul, li { list-style : none ; } display : flex ; li { background-color : #DDDDDD ; color : #FFFFFF ; padding : 3 px 5 px ; margin : 0 5 px ; } } }","title":"\u7b2c2\u7ae0 Laravel\u8868\u5355"},{"location":"php/Laravel-\u8868\u5355\u7bc7/#3","text":"Request Response Session Middleware","title":"\u7b2c3\u5f20 \u603b\u7ed3"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/","text":"Laravel-\u9ad8\u7ea7\u7bc7 \u7b2c1\u7ae0 Composer \u5feb\u901f\u5165\u95e8 1 Composer\u7b80\u4ecb \u5305\u7ba1\u7406\u5668 Java : Maven NodeJS : NPM Objective - C : CocoaPods PHP : PEAR PEAR\u7f3a\u70b9 \u4f9d\u8d56\u5904\u7406\u5bb9\u6613\u51fa\u95ee\u9898 \u914d\u7f6e\u975e\u5e38\u590d\u6742 \u96be\u7528\u7684\u547d\u4ee4\u884c\u63a5\u53e3 Composer Composer\u662fPHP\u7684\u4e00\u4e2a\u4f9d\u8d56\uff08dependency\uff09\u7ba1\u7406\u5de5\u5177\uff0c\u4e0d\u662f\u5305\u7ba1\u7406\u5668 \u6d89\u53capackages \u548c libraries \u5728\u9879\u76ee\u4e2d\u58f0\u660e\u6240\u4f9d\u8d56\u7684\u5916\u90e8\u5de5\u5177\u5e93\uff0cComposer\u4f1a\u81ea\u52a8\u5b89\u88c5\u8fd9\u4e9b\u5de5\u5177\u5e93\u53ca\u4f9d\u8d56\u7684\u5e93\u6587\u4ef6 Composer\u5b98\u7f51 https://getcomposer.org/ Composer\u4e2d\u6587\u7f51 https://www.phpcomposer.com/ 2 \u5b89\u88c5Composer \u4e0b\u8f7d composer.phar https://getcomposer.org/download/ \u5c40\u90e8\u5b89\u88c5 php composer . phar \u5168\u5c40\u5b89\u88c5 sudo mv composer . phar / usr / local / bin / composer sudo chmod - R 755 / usr / local / bin / composer 3 Composer\u4e2d\u56fd\u5168\u91cf\u955c\u50cf https://pkg.phpcomposer.com/ \u4f7f\u7528\u963f\u91cc\u955c\u50cf https://mirrors.aliyun.com/composer \u542f\u7528\u955c\u50cf\u670d\u52a1 1\u3001\u5355\u4e2a\u9879\u76ee\u914d\u7f6e echo '{}' > composer.json composer config repo.packagist composer https://mirrors.aliyun.com/composer 2\u3001\u7cfb\u7edf\u5168\u5c40\u914d\u7f6e # \u67e5\u770b\u5f53\u524d\u955c\u50cf\u5730\u5740 composer config -g repo.packagist.org # \u914d\u7f6e\u955c\u50cf composer config -g repo.packagist composer https://mirrors.aliyun.com/composer # \u89e3\u9664\u955c\u50cf composer config -g --unset repos.packagist 4 \u4f7f\u7528Composer \u641c\u7d22 search \u5c55\u793a show \u7533\u660e\u4f9d\u8d56 require \u5b89\u88c5 install \u66f4\u65b0 update # \u521d\u59cb\u5316 $ composer init { \"name\" : \"demo/demo\" , \"description\" : \"demo\" , \"type\" : \"library\" , \"authors\" : [ { \"name\" : \"pengshiyu\" , \"email\" : \"1940607002@qq.com\" } ] , \"require\" : {} } # \u641c\u7d22 $ composer search monolog # \u663e\u793a\u4fe1\u606f $ composer show --all monolog/monolog # \u914d\u7f6e\u4f9d\u8d56\u5e76\u5b89\u88c5 \"require\" : { \"monolog/monolog\" : \"2.0.1\" } $ composer install # \u901a\u8fc7require\u5b89\u88c5 $ composer require symfony/http-foundation \"require\" : { \"monolog/monolog\" : \"1.25.2\" , \"symfony/http-foundation\" : \"^4.4\" } # \u66f4\u65b0\u4f9d\u8d56 \"require\" : { \"symfony/http-foundation\" : \"^4.4\" } $ composer update \u7b2c2\u7ae0 PHP\u6846\u67b6\u5b89\u88c5\u4e4bLaravel https://laravel.com/docs/5.8 Composer \u5b89\u88c5Laravel\u7684\u4e24\u79cd\u65b9\u5f0f 1\u3001\u901a\u8fc7Composer Create-Project\u5b89\u88c5 # \u5b89\u88c5\u6700\u65b0 composer create-project --prefer-dist laravel/laravel [ \u522b\u540d ] # \u5b89\u88c5\u6307\u5b9a\u7248\u672c composer create-project --prefer-dist laravel/laravel blog \"5.8.*\" 2\u3001Laravel\u5b89\u88c5\u5668 \u5b89\u88c5\u6700\u65b0\u7248\u672c composer global require \"laravel/installer\" \u6dfb\u52a0\u73af\u5883\u53d8\u91cf $ vim ~/.bash_profile # composer export PATH = $PATH : $HOME /.composer/vendor/bin laravel new blog \u7b2c3\u7ae0 Artisan \u63a7\u5236\u53f0 Artisan\u662fLaravel\u81ea\u5e26\u547d\u4ee4\u884c\u5de5\u5177 Symfony Console\u7ec4\u4ef6\u9a71\u52a8 # \u67e5\u770b\u547d\u4ee4 php artisan # \u6216\u8005 php artisan list # \u67e5\u770b\u5e2e\u52a9 php artisan help migrate # \u521b\u5efa\u63a7\u5236\u5668 php artisan make:controller StudentController # \u521b\u5efa\u6a21\u578b php artisan make:model Student # \u521b\u5efa\u4e2d\u95f4\u4ef6 php artisan make:middleware Activity \u7b2c4\u7ae0 Laravel\u4e2d\u7684\u7528\u6237\u8ba4\u8bc1\uff08Auth\uff09 1\u3001Laravel\u4e2d\u751f\u6210Auth\u6240\u9700\u6587\u4ef6 php artisan make:auth # \u6570\u636e\u5e93\u4e2d\u751f\u6210\u8868 php artisan migrate \u5b9e\u73b0\u4e86\u767b\u5f55\u6ce8\u518c\u529f\u80fd 2\u3001Laravel\u4e2d\u7684\u6570\u636e\u8fc1\u79fb # \u65b0\u5efa\u6570\u636e\u8868\u8fc1\u79fb\u6587\u4ef6 php artisan make:migration create_students_table # --table \u6307\u5b9a\u6570\u636e\u8868\u540d # --create \u8fc1\u79fb\u6587\u4ef6\u662f\u5426\u8981\u5efa\u7acb\u65b0\u7684\u6570\u636e\u8868 # eg: php artisan make:migration create_students_table --create = students # \u751f\u6210\u6a21\u578b\u65f6\u540c\u65f6\u751f\u6210\u8fc1\u79fb\u6587\u4ef6 php artisan make:model Student -m \u7f16\u8f91\u8fc1\u79fb\u6587\u4ef6 use Illuminate\\Support\\Facades\\Schema; use Illuminate\\Database\\Schema\\Blueprint; use Illuminate\\Database\\Migrations\\Migration; class CreateStudentsTable extends Migration { /** * Run the migrations. * * @return void */ public function up() { Schema::create('students', function (Blueprint $table) { $table->bigIncrements('id'); $table->string('name'); $table->integer('age')->unsigned()->default(0); $table->integer('sex')->unsigned()->default(0); $table->integer('created_at')->default(0); $table->integer('updated_at')->default(0); }); } /** * Reverse the migrations. * * @return void */ public function down() { Schema::dropIfExists('students'); } } \u7528\u8fc1\u79fb\u6587\u4ef6\u521b\u5efa\u8868 php artisan migrate \u67e5\u770b\u8868\u7ed3\u6784 show create table students CREATE TABLE ` students ` ( ` id ` bigint ( 20 ) unsigned NOT NULL AUTO_INCREMENT , ` name ` varchar ( 255 ) COLLATE utf8mb4_unicode_ci NOT NULL , ` age ` int ( 10 ) unsigned NOT NULL DEFAULT '0' , ` sex ` int ( 10 ) unsigned NOT NULL DEFAULT '0' , ` created_at ` int ( 11 ) NOT NULL DEFAULT '0' , ` updated_at ` int ( 11 ) NOT NULL DEFAULT '0' , PRIMARY KEY ( ` id ` ) ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_unicode_ci 3\u3001Laravel\u4e2d\u7684\u6570\u636e\u586b\u5145 \u521b\u5efa\u586b\u5145\u6587\u4ef6 php artisan make:seeder StudentTableSeeder \u7f16\u8f91\u586b\u5145\u6587\u4ef6 use Illuminate\\Database\\Seeder; use Illuminate\\Support\\Facades\\DB; class StudentTableSeeder extends Seeder { /** * Run the database seeds. * * @return void */ public function run() { // DB::table('students')->insert([ ['name'=> 'Tom', 'age'=> 23], ['name'=> 'Jack', 'age'=> 24], ['name'=> 'Greed', 'age'=> 25], ]); } } \u6267\u884c\u5355\u4e2a\u586b\u5145\u6587\u4ef6 php artisan db:seed --class = StudentTableSeeder \u6279\u91cf\u6267\u884c\u586b\u5145\u6587\u4ef6 use Illuminate\\Database\\Seeder; class DatabaseSeeder extends Seeder { /** * Seed the application's database. * * @return void */ public function run() { // $this->call(UsersTableSeeder::class); $this->call(StudentTableSeeder::class); } } \u6267\u884c\u6279\u91cf\u586b\u5145 php artisan db:seed \u7b2c5\u7ae0 Laravel\u6846\u67b6\u5e38\u7528\u529f\u80fd \u6587\u4ef6\u4e0a\u4f20\u3001\u90ae\u4ef6\u3001\u7f13\u5b58\u3001\u9519\u8bef&\u65e5\u5fd7\u3001\u961f\u5217 1\u3001Laravel\u4e2d\u7684\u6587\u4ef6\u4e0a\u4f20 Laravel\u6587\u4ef6\u7cfb\u7edf\u57fa\u4e8eFrank de Jonge Flysystem\u6269\u5c55\u5305 \u914d\u7f6e\u6587\u4ef6 config/filesystems.php return [ 'disks' => [ 'uploads' => [ 'driver' => 'local', 'root' => public_path('uploads'), ], ], ]; \u6a21\u677f\u6587\u4ef6 resources/views/upload.blade.php <form action=\"\" method=\"post\" enctype=\"multipart/form-data\"> {{csrf_field()}} <input type=\"file\" name=\"file\"> <input type=\"submit\"> </form> \u63a7\u5236\u5668 app/Http/Controllers/FileController.php namespace App\\Http\\Controllers; use Illuminate\\Http\\Request; use Illuminate\\Support\\Facades\\Storage; class FileController extends Controller { // public function upload(Request $request) { if ($request->isMethod('POST')) { $file = $request->file('file'); if ($file->isValid()) { // \u539f\u6587\u4ef6\u540d $originalName = $file->getClientOriginalName(); // \u6269\u5c55\u540d $ext = $file->getClientOriginalExtension(); // \u7c7b\u578b $type = $file->getMimeType(); // \u4e34\u65f6\u7edd\u5bf9\u8def\u5f84 $realPath = $file->getRealPath(); $filename = date('Y-m-d-H-i-s') . '-' . uniqid() . '.' . $ext; $bool = Storage::disk('uploads')->put($filename, file_get_contents($realPath)); var_dump($bool); } } else { return view('upload'); } } } \u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84 public/uploads/2019-12-01-12-51-38-5de3b75a97f0e.png 2\u3001Laravel\u4e2d\u7684\u90ae\u4ef6\u53d1\u9001 Laravel \u90ae\u4ef6\u529f\u80fd\u57fa\u4e8eSwiftMailer \u51fd\u6570\u5e93 \u914d\u7f6e config/mail.php MAIL_DRIVER=smtp MAIL_HOST=smtp.163.com MAIL_PORT=465 MAIL_USERNAME=username@163.com MAIL_PASSWORD=password MAIL_ENCRYPTION=ssl MAIL_FROM_ADDRESS=username@163.com MAIL_FROM_NAME=username 163\u90ae\u7bb1\u8981\u6c42from\u548cusername\u5fc5\u987b\u4e00\u81f4 \u53d1\u9001 1\u3001Mail::raw() namespace App\\Http\\Controllers; use Illuminate\\Support\\Facades\\Mail; class MailController extends Controller { public function mail() { Mail::raw('\u90ae\u4ef6\u5185\u5bb9', function ($message){ $message->subject('\u90ae\u4ef6\u4e3b\u9898'); $message->to('123456@qq.com'); }); } } 2\u3001Mail::send() \u90ae\u4ef6\u6a21\u677f resources/views/mail.blade.php <h1>{{$name}}</h1> namespace App\\Http\\Controllers; use Illuminate\\Support\\Facades\\Mail; class MailController extends Controller { public function mail() { Mail::send('mail', ['name'=> 'Laravel'], function ($message){ $message->subject('\u90ae\u4ef6\u4e3b\u9898'); $message->to('123456@qq.com'); }); } } 3\u3001Laravel\u4e2d\u7684\u7f13\u5b58\u4f7f\u7528 Laravel\u652f\u6301\u5e38\u89c1\u7684\u540e\u7aef\u7f13\u5b58\u7cfb\u7edf File\u3001Memcached\u3001Redis use Illuminate\\Support\\Facades\\Cache; static bool has(string $key) static bool put(string $key, $value, \\DateTimeInterface|\\DateInterval|int $ttl) # key\u5b58\u5728\u4e0d\u6dfb\u52a0\uff0c\u4e0d\u5b58\u5728\u6dfb\u52a0 static bool add(string $key, $value, \\DateTimeInterface|\\DateInterval|int $ttl) static mixed get(string $key, mixed $default = null) // \u53d6\u51fa\u5e76\u5220\u9664 static mixed pull(string $key, mixed $default = null) static bool forever(string $key, $value) static bool forget(string $key) \u914d\u7f6e\u9ed8\u8ba4\u7c7b\u578b\u4e3afile config/cache.php 4\u3001Laravel\u4e2d\u7684\u9519\u8bef\u4e0e\u65e5\u5fd7 1\u3001DEBUG\u6a21\u5f0f \u914d\u7f6e config/app.php // \u672c\u5730\u5f00\u53d1 APP_DEBUG=true // \u7ebf\u4e0a\u73af\u5883 APP_DEBUG=false 2\u3001HTTP\u5f02\u5e38 \u81ea\u5b9a\u4e49\u5f02\u5e38\u6a21\u677f resources/views/errors/500.blade.php 500 \u4f7f\u7528 abort(500); Laravel\u9ed8\u8ba4\u63d0\u4f9b404\u672a\u627e\u5230\u7b49\u5f02\u5e38\u9875\u9762 3\u3001\u65e5\u5fd7 Laravel\u57fa\u4e8eMonolog\u63d0\u4f9b\u65e5\u5fd7\u6a21\u5f0f\uff1a single\uff0c daily\uff0c \u6bcf\u5929\u751f\u6210\u4e00\u4e2a\u65e5\u5fd7\u6587\u4ef6 syslog\uff0c errorlog \u4e03\u4e2a\u9519\u8bef\u7ea7\u522b debug info notice warning error critical alert \u65e5\u5fd7\u8def\u5f84 storage/logs \u4f7f\u7528\u793a\u4f8b use Illuminate\\Support\\Facades\\Log; LOG::info('info \u7ea7\u522b\u7684\u65e5\u5fd7'); 5\u3001Laravel\u4e2d\u7684\u961f\u5217\u5e94\u7528 \u961f\u5217\u670d\u52a1\u5141\u8bb8\u63a8\u8fdf\u8017\u65f6\u4efb\u52a1\u6267\u884c\uff0c\u63d0\u9ad8web\u8bf7\u6c42\u901f\u5ea6 \u6bd4\u5982\u53d1\u9001\u90ae\u4ef6\u6267\u884c \u4e3b\u8981\u6b65\u9aa4 \u8fc1\u79fb\u961f\u5217\u9700\u8981\u7684\u6570\u636e\u8868 \u7f16\u5199\u4efb\u52a1\u7c7b \u63a8\u9001\u4efb\u52a1\u5230\u961f\u5217 \u8fd0\u884c\u961f\u91cc\u76d1\u542c\u5668 \u5904\u7406\u5931\u8d25\u4efb\u52a1 \u914d\u7f6e config/queue.php QUEUE_CONNECTION=database \u521b\u5efa\u961f\u5217\u6570\u636e\u8868 php artisan queue : table php artisan migrate php artisan make : job SendEmail app/Jobs/SendEmail.php namespace App\\Jobs; use Illuminate\\Bus\\Queueable; use Illuminate\\Queue\\SerializesModels; use Illuminate\\Queue\\InteractsWithQueue; use Illuminate\\Contracts\\Queue\\ShouldQueue; use Illuminate\\Foundation\\Bus\\Dispatchable; use Illuminate\\Support\\Facades\\Mail; class SendEmail implements ShouldQueue { use Dispatchable, InteractsWithQueue, Queueable, SerializesModels; protected $email; /** * Create a new job instance. * * @return void */ public function __construct($email) { $this->email = $email; } /** * Execute the job. * * @return void */ public function handle() { Mail::raw('\u90ae\u4ef6\u5185\u5bb9', function ($message){ $message->subject('\u90ae\u4ef6\u4e3b\u9898 \u6d4b\u8bd5'); $message->to($this->email); }); } } dispatch(new SendEmail('123456@qq.com')); \u6267\u884c\u4efb\u52a1 php artisan queue : listen php artisan queue : listen --tries=3 \u8fc1\u79fb\u5931\u8d25\u4efb\u52a1\u8868 php artisan queue : failed - table php artisan migrate \u5931\u8d25\u4efb\u52a1\u64cd\u4f5c # \u67e5\u770b\u5931\u8d25\u961f\u5217 php artisan queue:failed # \u91cd\u8bd5\u4e00\u6b21\uff0c\u6307\u5b9aid php artisan queue:retry 1 # \u91cd\u8bd5\u6240\u6709 php artisan queue:retry all # \u5220\u9664\u5931\u8d25\u4efb\u52a1\uff0c\u6307\u5b9aid php artisan queue:forget 1 # \u6e05\u7a7a\u5931\u8d25\u4efb\u52a1 php artisan queue:flush \u62a5\u9519\uff1aClass 'Predis\\Client' not found composer require predis / predis ^ 1 . 1 \u603b\u7ed3 1\u3001\u5b89\u88c5\u548c\u4f7f\u7528composer 2\u3001composer\u5b89\u88c5laravel 3\u3001artisan\u63a7\u5236\u53f0 4\u3001auth\u7528\u6237\u9a8c\u8bc1 5\u3001\u6570\u636e\u8fc1\u79fb\uff0c\u6570\u636e\u586b\u5145 6\u3001\u6587\u4ef6\u3001\u90ae\u4ef6\u3001\u7f13\u5b58\u3001\u961f\u5217","title":"Laravel-\u9ad8\u7ea7\u7bc7"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/#laravel-","text":"","title":"Laravel-\u9ad8\u7ea7\u7bc7"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/#1-composer","text":"","title":"\u7b2c1\u7ae0 Composer \u5feb\u901f\u5165\u95e8"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/#1-composer_1","text":"\u5305\u7ba1\u7406\u5668 Java : Maven NodeJS : NPM Objective - C : CocoaPods PHP : PEAR PEAR\u7f3a\u70b9 \u4f9d\u8d56\u5904\u7406\u5bb9\u6613\u51fa\u95ee\u9898 \u914d\u7f6e\u975e\u5e38\u590d\u6742 \u96be\u7528\u7684\u547d\u4ee4\u884c\u63a5\u53e3 Composer Composer\u662fPHP\u7684\u4e00\u4e2a\u4f9d\u8d56\uff08dependency\uff09\u7ba1\u7406\u5de5\u5177\uff0c\u4e0d\u662f\u5305\u7ba1\u7406\u5668 \u6d89\u53capackages \u548c libraries \u5728\u9879\u76ee\u4e2d\u58f0\u660e\u6240\u4f9d\u8d56\u7684\u5916\u90e8\u5de5\u5177\u5e93\uff0cComposer\u4f1a\u81ea\u52a8\u5b89\u88c5\u8fd9\u4e9b\u5de5\u5177\u5e93\u53ca\u4f9d\u8d56\u7684\u5e93\u6587\u4ef6 Composer\u5b98\u7f51 https://getcomposer.org/ Composer\u4e2d\u6587\u7f51 https://www.phpcomposer.com/","title":"1 Composer\u7b80\u4ecb"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/#2-composer","text":"\u4e0b\u8f7d composer.phar https://getcomposer.org/download/ \u5c40\u90e8\u5b89\u88c5 php composer . phar \u5168\u5c40\u5b89\u88c5 sudo mv composer . phar / usr / local / bin / composer sudo chmod - R 755 / usr / local / bin / composer","title":"2 \u5b89\u88c5Composer"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/#3-composer","text":"https://pkg.phpcomposer.com/ \u4f7f\u7528\u963f\u91cc\u955c\u50cf https://mirrors.aliyun.com/composer \u542f\u7528\u955c\u50cf\u670d\u52a1 1\u3001\u5355\u4e2a\u9879\u76ee\u914d\u7f6e echo '{}' > composer.json composer config repo.packagist composer https://mirrors.aliyun.com/composer 2\u3001\u7cfb\u7edf\u5168\u5c40\u914d\u7f6e # \u67e5\u770b\u5f53\u524d\u955c\u50cf\u5730\u5740 composer config -g repo.packagist.org # \u914d\u7f6e\u955c\u50cf composer config -g repo.packagist composer https://mirrors.aliyun.com/composer # \u89e3\u9664\u955c\u50cf composer config -g --unset repos.packagist","title":"3 Composer\u4e2d\u56fd\u5168\u91cf\u955c\u50cf"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/#4-composer","text":"\u641c\u7d22 search \u5c55\u793a show \u7533\u660e\u4f9d\u8d56 require \u5b89\u88c5 install \u66f4\u65b0 update # \u521d\u59cb\u5316 $ composer init { \"name\" : \"demo/demo\" , \"description\" : \"demo\" , \"type\" : \"library\" , \"authors\" : [ { \"name\" : \"pengshiyu\" , \"email\" : \"1940607002@qq.com\" } ] , \"require\" : {} } # \u641c\u7d22 $ composer search monolog # \u663e\u793a\u4fe1\u606f $ composer show --all monolog/monolog # \u914d\u7f6e\u4f9d\u8d56\u5e76\u5b89\u88c5 \"require\" : { \"monolog/monolog\" : \"2.0.1\" } $ composer install # \u901a\u8fc7require\u5b89\u88c5 $ composer require symfony/http-foundation \"require\" : { \"monolog/monolog\" : \"1.25.2\" , \"symfony/http-foundation\" : \"^4.4\" } # \u66f4\u65b0\u4f9d\u8d56 \"require\" : { \"symfony/http-foundation\" : \"^4.4\" } $ composer update","title":"4 \u4f7f\u7528Composer"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/#2-phplaravel","text":"https://laravel.com/docs/5.8 Composer \u5b89\u88c5Laravel\u7684\u4e24\u79cd\u65b9\u5f0f 1\u3001\u901a\u8fc7Composer Create-Project\u5b89\u88c5 # \u5b89\u88c5\u6700\u65b0 composer create-project --prefer-dist laravel/laravel [ \u522b\u540d ] # \u5b89\u88c5\u6307\u5b9a\u7248\u672c composer create-project --prefer-dist laravel/laravel blog \"5.8.*\" 2\u3001Laravel\u5b89\u88c5\u5668 \u5b89\u88c5\u6700\u65b0\u7248\u672c composer global require \"laravel/installer\" \u6dfb\u52a0\u73af\u5883\u53d8\u91cf $ vim ~/.bash_profile # composer export PATH = $PATH : $HOME /.composer/vendor/bin laravel new blog","title":"\u7b2c2\u7ae0 PHP\u6846\u67b6\u5b89\u88c5\u4e4bLaravel"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/#3-artisan","text":"Artisan\u662fLaravel\u81ea\u5e26\u547d\u4ee4\u884c\u5de5\u5177 Symfony Console\u7ec4\u4ef6\u9a71\u52a8 # \u67e5\u770b\u547d\u4ee4 php artisan # \u6216\u8005 php artisan list # \u67e5\u770b\u5e2e\u52a9 php artisan help migrate # \u521b\u5efa\u63a7\u5236\u5668 php artisan make:controller StudentController # \u521b\u5efa\u6a21\u578b php artisan make:model Student # \u521b\u5efa\u4e2d\u95f4\u4ef6 php artisan make:middleware Activity","title":"\u7b2c3\u7ae0 Artisan \u63a7\u5236\u53f0"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/#4-laravelauth","text":"","title":"\u7b2c4\u7ae0 Laravel\u4e2d\u7684\u7528\u6237\u8ba4\u8bc1\uff08Auth\uff09"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/#1laravelauth","text":"php artisan make:auth # \u6570\u636e\u5e93\u4e2d\u751f\u6210\u8868 php artisan migrate \u5b9e\u73b0\u4e86\u767b\u5f55\u6ce8\u518c\u529f\u80fd","title":"1\u3001Laravel\u4e2d\u751f\u6210Auth\u6240\u9700\u6587\u4ef6"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/#2laravel","text":"# \u65b0\u5efa\u6570\u636e\u8868\u8fc1\u79fb\u6587\u4ef6 php artisan make:migration create_students_table # --table \u6307\u5b9a\u6570\u636e\u8868\u540d # --create \u8fc1\u79fb\u6587\u4ef6\u662f\u5426\u8981\u5efa\u7acb\u65b0\u7684\u6570\u636e\u8868 # eg: php artisan make:migration create_students_table --create = students # \u751f\u6210\u6a21\u578b\u65f6\u540c\u65f6\u751f\u6210\u8fc1\u79fb\u6587\u4ef6 php artisan make:model Student -m \u7f16\u8f91\u8fc1\u79fb\u6587\u4ef6 use Illuminate\\Support\\Facades\\Schema; use Illuminate\\Database\\Schema\\Blueprint; use Illuminate\\Database\\Migrations\\Migration; class CreateStudentsTable extends Migration { /** * Run the migrations. * * @return void */ public function up() { Schema::create('students', function (Blueprint $table) { $table->bigIncrements('id'); $table->string('name'); $table->integer('age')->unsigned()->default(0); $table->integer('sex')->unsigned()->default(0); $table->integer('created_at')->default(0); $table->integer('updated_at')->default(0); }); } /** * Reverse the migrations. * * @return void */ public function down() { Schema::dropIfExists('students'); } } \u7528\u8fc1\u79fb\u6587\u4ef6\u521b\u5efa\u8868 php artisan migrate \u67e5\u770b\u8868\u7ed3\u6784 show create table students CREATE TABLE ` students ` ( ` id ` bigint ( 20 ) unsigned NOT NULL AUTO_INCREMENT , ` name ` varchar ( 255 ) COLLATE utf8mb4_unicode_ci NOT NULL , ` age ` int ( 10 ) unsigned NOT NULL DEFAULT '0' , ` sex ` int ( 10 ) unsigned NOT NULL DEFAULT '0' , ` created_at ` int ( 11 ) NOT NULL DEFAULT '0' , ` updated_at ` int ( 11 ) NOT NULL DEFAULT '0' , PRIMARY KEY ( ` id ` ) ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_unicode_ci","title":"2\u3001Laravel\u4e2d\u7684\u6570\u636e\u8fc1\u79fb"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/#3laravel","text":"\u521b\u5efa\u586b\u5145\u6587\u4ef6 php artisan make:seeder StudentTableSeeder \u7f16\u8f91\u586b\u5145\u6587\u4ef6 use Illuminate\\Database\\Seeder; use Illuminate\\Support\\Facades\\DB; class StudentTableSeeder extends Seeder { /** * Run the database seeds. * * @return void */ public function run() { // DB::table('students')->insert([ ['name'=> 'Tom', 'age'=> 23], ['name'=> 'Jack', 'age'=> 24], ['name'=> 'Greed', 'age'=> 25], ]); } } \u6267\u884c\u5355\u4e2a\u586b\u5145\u6587\u4ef6 php artisan db:seed --class = StudentTableSeeder \u6279\u91cf\u6267\u884c\u586b\u5145\u6587\u4ef6 use Illuminate\\Database\\Seeder; class DatabaseSeeder extends Seeder { /** * Seed the application's database. * * @return void */ public function run() { // $this->call(UsersTableSeeder::class); $this->call(StudentTableSeeder::class); } } \u6267\u884c\u6279\u91cf\u586b\u5145 php artisan db:seed","title":"3\u3001Laravel\u4e2d\u7684\u6570\u636e\u586b\u5145"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/#5-laravel","text":"\u6587\u4ef6\u4e0a\u4f20\u3001\u90ae\u4ef6\u3001\u7f13\u5b58\u3001\u9519\u8bef&\u65e5\u5fd7\u3001\u961f\u5217","title":"\u7b2c5\u7ae0 Laravel\u6846\u67b6\u5e38\u7528\u529f\u80fd"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/#1laravel","text":"Laravel\u6587\u4ef6\u7cfb\u7edf\u57fa\u4e8eFrank de Jonge Flysystem\u6269\u5c55\u5305 \u914d\u7f6e\u6587\u4ef6 config/filesystems.php return [ 'disks' => [ 'uploads' => [ 'driver' => 'local', 'root' => public_path('uploads'), ], ], ]; \u6a21\u677f\u6587\u4ef6 resources/views/upload.blade.php <form action=\"\" method=\"post\" enctype=\"multipart/form-data\"> {{csrf_field()}} <input type=\"file\" name=\"file\"> <input type=\"submit\"> </form> \u63a7\u5236\u5668 app/Http/Controllers/FileController.php namespace App\\Http\\Controllers; use Illuminate\\Http\\Request; use Illuminate\\Support\\Facades\\Storage; class FileController extends Controller { // public function upload(Request $request) { if ($request->isMethod('POST')) { $file = $request->file('file'); if ($file->isValid()) { // \u539f\u6587\u4ef6\u540d $originalName = $file->getClientOriginalName(); // \u6269\u5c55\u540d $ext = $file->getClientOriginalExtension(); // \u7c7b\u578b $type = $file->getMimeType(); // \u4e34\u65f6\u7edd\u5bf9\u8def\u5f84 $realPath = $file->getRealPath(); $filename = date('Y-m-d-H-i-s') . '-' . uniqid() . '.' . $ext; $bool = Storage::disk('uploads')->put($filename, file_get_contents($realPath)); var_dump($bool); } } else { return view('upload'); } } } \u751f\u6210\u7684\u6587\u4ef6\u8def\u5f84 public/uploads/2019-12-01-12-51-38-5de3b75a97f0e.png","title":"1\u3001Laravel\u4e2d\u7684\u6587\u4ef6\u4e0a\u4f20"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/#2laravel_1","text":"Laravel \u90ae\u4ef6\u529f\u80fd\u57fa\u4e8eSwiftMailer \u51fd\u6570\u5e93 \u914d\u7f6e config/mail.php MAIL_DRIVER=smtp MAIL_HOST=smtp.163.com MAIL_PORT=465 MAIL_USERNAME=username@163.com MAIL_PASSWORD=password MAIL_ENCRYPTION=ssl MAIL_FROM_ADDRESS=username@163.com MAIL_FROM_NAME=username 163\u90ae\u7bb1\u8981\u6c42from\u548cusername\u5fc5\u987b\u4e00\u81f4 \u53d1\u9001 1\u3001Mail::raw() namespace App\\Http\\Controllers; use Illuminate\\Support\\Facades\\Mail; class MailController extends Controller { public function mail() { Mail::raw('\u90ae\u4ef6\u5185\u5bb9', function ($message){ $message->subject('\u90ae\u4ef6\u4e3b\u9898'); $message->to('123456@qq.com'); }); } } 2\u3001Mail::send() \u90ae\u4ef6\u6a21\u677f resources/views/mail.blade.php <h1>{{$name}}</h1> namespace App\\Http\\Controllers; use Illuminate\\Support\\Facades\\Mail; class MailController extends Controller { public function mail() { Mail::send('mail', ['name'=> 'Laravel'], function ($message){ $message->subject('\u90ae\u4ef6\u4e3b\u9898'); $message->to('123456@qq.com'); }); } }","title":"2\u3001Laravel\u4e2d\u7684\u90ae\u4ef6\u53d1\u9001"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/#3laravel_1","text":"Laravel\u652f\u6301\u5e38\u89c1\u7684\u540e\u7aef\u7f13\u5b58\u7cfb\u7edf File\u3001Memcached\u3001Redis use Illuminate\\Support\\Facades\\Cache; static bool has(string $key) static bool put(string $key, $value, \\DateTimeInterface|\\DateInterval|int $ttl) # key\u5b58\u5728\u4e0d\u6dfb\u52a0\uff0c\u4e0d\u5b58\u5728\u6dfb\u52a0 static bool add(string $key, $value, \\DateTimeInterface|\\DateInterval|int $ttl) static mixed get(string $key, mixed $default = null) // \u53d6\u51fa\u5e76\u5220\u9664 static mixed pull(string $key, mixed $default = null) static bool forever(string $key, $value) static bool forget(string $key) \u914d\u7f6e\u9ed8\u8ba4\u7c7b\u578b\u4e3afile config/cache.php","title":"3\u3001Laravel\u4e2d\u7684\u7f13\u5b58\u4f7f\u7528"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/#4laravel","text":"1\u3001DEBUG\u6a21\u5f0f \u914d\u7f6e config/app.php // \u672c\u5730\u5f00\u53d1 APP_DEBUG=true // \u7ebf\u4e0a\u73af\u5883 APP_DEBUG=false 2\u3001HTTP\u5f02\u5e38 \u81ea\u5b9a\u4e49\u5f02\u5e38\u6a21\u677f resources/views/errors/500.blade.php 500 \u4f7f\u7528 abort(500); Laravel\u9ed8\u8ba4\u63d0\u4f9b404\u672a\u627e\u5230\u7b49\u5f02\u5e38\u9875\u9762 3\u3001\u65e5\u5fd7 Laravel\u57fa\u4e8eMonolog\u63d0\u4f9b\u65e5\u5fd7\u6a21\u5f0f\uff1a single\uff0c daily\uff0c \u6bcf\u5929\u751f\u6210\u4e00\u4e2a\u65e5\u5fd7\u6587\u4ef6 syslog\uff0c errorlog \u4e03\u4e2a\u9519\u8bef\u7ea7\u522b debug info notice warning error critical alert \u65e5\u5fd7\u8def\u5f84 storage/logs \u4f7f\u7528\u793a\u4f8b use Illuminate\\Support\\Facades\\Log; LOG::info('info \u7ea7\u522b\u7684\u65e5\u5fd7');","title":"4\u3001Laravel\u4e2d\u7684\u9519\u8bef\u4e0e\u65e5\u5fd7"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/#5laravel","text":"\u961f\u5217\u670d\u52a1\u5141\u8bb8\u63a8\u8fdf\u8017\u65f6\u4efb\u52a1\u6267\u884c\uff0c\u63d0\u9ad8web\u8bf7\u6c42\u901f\u5ea6 \u6bd4\u5982\u53d1\u9001\u90ae\u4ef6\u6267\u884c \u4e3b\u8981\u6b65\u9aa4 \u8fc1\u79fb\u961f\u5217\u9700\u8981\u7684\u6570\u636e\u8868 \u7f16\u5199\u4efb\u52a1\u7c7b \u63a8\u9001\u4efb\u52a1\u5230\u961f\u5217 \u8fd0\u884c\u961f\u91cc\u76d1\u542c\u5668 \u5904\u7406\u5931\u8d25\u4efb\u52a1 \u914d\u7f6e config/queue.php QUEUE_CONNECTION=database \u521b\u5efa\u961f\u5217\u6570\u636e\u8868 php artisan queue : table php artisan migrate php artisan make : job SendEmail app/Jobs/SendEmail.php namespace App\\Jobs; use Illuminate\\Bus\\Queueable; use Illuminate\\Queue\\SerializesModels; use Illuminate\\Queue\\InteractsWithQueue; use Illuminate\\Contracts\\Queue\\ShouldQueue; use Illuminate\\Foundation\\Bus\\Dispatchable; use Illuminate\\Support\\Facades\\Mail; class SendEmail implements ShouldQueue { use Dispatchable, InteractsWithQueue, Queueable, SerializesModels; protected $email; /** * Create a new job instance. * * @return void */ public function __construct($email) { $this->email = $email; } /** * Execute the job. * * @return void */ public function handle() { Mail::raw('\u90ae\u4ef6\u5185\u5bb9', function ($message){ $message->subject('\u90ae\u4ef6\u4e3b\u9898 \u6d4b\u8bd5'); $message->to($this->email); }); } } dispatch(new SendEmail('123456@qq.com')); \u6267\u884c\u4efb\u52a1 php artisan queue : listen php artisan queue : listen --tries=3 \u8fc1\u79fb\u5931\u8d25\u4efb\u52a1\u8868 php artisan queue : failed - table php artisan migrate \u5931\u8d25\u4efb\u52a1\u64cd\u4f5c # \u67e5\u770b\u5931\u8d25\u961f\u5217 php artisan queue:failed # \u91cd\u8bd5\u4e00\u6b21\uff0c\u6307\u5b9aid php artisan queue:retry 1 # \u91cd\u8bd5\u6240\u6709 php artisan queue:retry all # \u5220\u9664\u5931\u8d25\u4efb\u52a1\uff0c\u6307\u5b9aid php artisan queue:forget 1 # \u6e05\u7a7a\u5931\u8d25\u4efb\u52a1 php artisan queue:flush \u62a5\u9519\uff1aClass 'Predis\\Client' not found composer require predis / predis ^ 1 . 1","title":"5\u3001Laravel\u4e2d\u7684\u961f\u5217\u5e94\u7528"},{"location":"php/Laravel-\u9ad8\u7ea7\u7bc7/#_1","text":"1\u3001\u5b89\u88c5\u548c\u4f7f\u7528composer 2\u3001composer\u5b89\u88c5laravel 3\u3001artisan\u63a7\u5236\u53f0 4\u3001auth\u7528\u6237\u9a8c\u8bc1 5\u3001\u6570\u636e\u8fc1\u79fb\uff0c\u6570\u636e\u586b\u5145 6\u3001\u6587\u4ef6\u3001\u90ae\u4ef6\u3001\u7f13\u5b58\u3001\u961f\u5217","title":"\u603b\u7ed3"},{"location":"php/Laravel\u5f00\u53d1APP\u63a5\u53e3/","text":"\u73af\u5883\u7b80\u4ecb LNMP 1\u3001Linux 2\u3001Nginx 3\u3001MySQL 4\u3001PHP APP\u63a5\u53e3 \u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u7aef\u6570\u636e\u7684\u4ea4\u6362 HTTP\u901a\u8baf\u4e09\u8981\u7d20 1\u3001URL \u5730\u5740 2\u3001Method \u65b9\u5f0f 3\u3001Params \u5185\u5bb9 \u5ba2\u6237\u7aef\u4f20\u9012\u53c2\u6570 1\u3001URl\u53c2\u6570 GET 2\u3001Request Body POST \uff081\uff09form-url \uff082\uff09form-data \uff083\uff09json \u73af\u5883\u642d\u5efa \u73af\u5883\u8981\u6c42 PHP >= 7.0.0 \u5168\u5c40\u5b89\u88c5composer curl - sS https : // getcomposer . org / installer | php mv composer . phar / usr / local / bin / composer \u914d\u7f6e\u8def\u5f84 cat ~/ . bash_profile # composer export PATH = $ PATH : $ HOME / . composer / vendor / bin \u5b89\u88c5 Laravel composer global require \"laravel/installer\" \u521b\u5efa\u65b0\u5e94\u7528 laravel new blog \u672c\u5730\u5f00\u53d1\u670d\u52a1\u5668 php artisan serve http://localhost:8000 jquery.ajax jQuery.ajax([settings]) type \u7c7b\u578b\uff1aString \u9ed8\u8ba4\u503c: \"GET\"\u3002\u8bf7\u6c42\u65b9\u5f0f POST/GET/PUT/DELETE url \u7c7b\u578b\uff1aString \u9ed8\u8ba4\u503c: \u5f53\u524d\u9875\u5730\u5740\u3002\u53d1\u9001\u8bf7\u6c42\u7684\u5730\u5740 contentType \u7c7b\u578b\uff1aString \u9ed8\u8ba4\u503c: \"application/x-www-form-urlencoded\"\u3002\u53d1\u9001\u4fe1\u606f\u81f3\u670d\u52a1\u5668\u65f6\u5185\u5bb9\u7f16\u7801\u7c7b\u578b\u3002 data \u7c7b\u578b\uff1aString \u53d1\u9001\u5230\u670d\u52a1\u5668\u7684\u6570\u636e dataType \u7c7b\u578b\uff1aString \u9884\u671f\u670d\u52a1\u5668\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u3002xml/html/script/json/jsonp/text success \u7c7b\u578b\uff1aFunction \u8bf7\u6c42\u6210\u529f\u540e\u7684\u56de\u8c03\u51fd\u6570\u3002 jsonp \u7c7b\u578b\uff1aString \u5728\u4e00\u4e2a jsonp \u8bf7\u6c42\u4e2d\u91cd\u5199\u56de\u8c03\u51fd\u6570\u7684\u540d\u5b57 jsonpCallback \u7c7b\u578b\uff1aString \u4e3a jsonp \u8bf7\u6c42\u6307\u5b9a\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u540d ajax\u53d1\u9001\u5404\u79cd\u8bf7\u6c42 < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < title > Document </ title > < script src = \"https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js\" ></ script > </ head > < body > < h1 > hello </ h1 > < script > var data = { \"name\" : \"Tom\" , \"age\" : 23 }; // \u53d1\u9001GET\u8bf7\u6c42 $ . ajax ({ type : \"GET\" , url : \"/api/get\" , dataType : \"json\" , data : data , success : function ( data ) { console . log ( data ); } }); // \u53d1\u9001POST\u8bf7\u6c42 // Content-Type: application/x-www-form-urlencoded; charset=UTF-8 $ . ajax ({ type : \"POST\" , url : \"/api/post-form\" , dataType : \"json\" , data : data , success : function ( data ) { console . log ( data ); } }); // \u53d1\u9001POST\u8bf7\u6c42 \u4e0d\u7f16\u7801 // Content-Type: multipart/form-data; charset=UTF-8 var formData = new FormData (); formData . append ( \"name\" , \"Tom\" ); formData . append ( \"age\" , \"23\" ); $ . ajax ({ type : \"POST\" , url : \"/api/post-form-data\" , dataType : \"json\" , contentType : false , processData : false , data : formData , success : function ( data ) { console . log ( data ); } }); // \u53d1\u9001json\u6570\u636e // Content-Type: application/json; charset=UTF-8 $ . ajax ({ type : \"POST\" , url : \"/api/post-json\" , dataType : \"json\" , contentType : 'application/json; charset=UTF-8' , data : JSON . stringify ( data ), success : function ( data ) { console . log ( data ); } }); // \u53d1\u9001jsonp\u6570\u636e $ . ajax ({ type : \"GET\" , url : \"/api/get-jsonp\" , dataType : \"jsonp\" , data : data , success : function ( data ) { console . log ( data ); } }); </ script > </ body > </ html > PHP\u540e\u7aef\u63a5\u6536\u53c2\u6570 routes/web.php Route::get('/', function () { // return view('welcome'); return view('index'); }); routes/api.php Route::get('/get', function () { $name = $_GET[\"name\"]; $age = $_GET[\"age\"]; echo json_encode([$name => $age]); }); Route::post('/post-form', function () { $name = $_POST[\"name\"]; $age = $_POST[\"age\"]; echo json_encode([$name => $age]); }); Route::post('/post-form-data', function () { $name = $_POST[\"name\"]; $age = $_POST[\"age\"]; echo json_encode([$name => $age]); }); Route::post('/post-json', function () { $ret = file_get_contents(\"php://input\"); $data = json_decode($ret, true); $name = $data[\"name\"]; $age = $data[\"age\"]; echo json_encode([$name => $age]); }); Route::get('/get-jsonp', function () { $callback = $_GET[\"callback\"]; $name = $_GET[\"name\"]; $age = $_GET[\"age\"]; echo $callback . \"(\" . json_encode([$name => $age]) . \")\"; }); Laravel \u63a5\u6536GET\u6216POST\u53c2\u6570 Route::get('/getOrPost', function (Request $request) { $name = $request->input(\"name\"); $age = $request->input(\"age\"); echo json_encode([$name => $age]); }); XML\u548cJSON APP\u63a5\u53e3\u8f93\u51fa\u683c\u5f0f\u4e09\u8981\u7d20 code \u9519\u8bef\u7801 msg \u9519\u8bef\u7801\u63cf\u8ff0 data \u63a5\u53e3\u6570\u636e \u5c01\u88c5app\u63a5\u53e3\u6570\u636e\u683c\u5f0f app/Http/Response/ResponseJson.php <?php namespace App\\Http\\Response ; /** * https://www.php.net/manual/zh/language.oop5.traits.php * traits \u901a\u8fc7\u7ec4\u5408\uff0c\u4ee3\u7801\u590d\u7528 */ trait ResponseJson { /** * \u63a5\u53e3\u6570\u636e\u9519\u8bef\u65f6\u8fd4\u56de */ public function jsonData ( $code , $message , $data = []) { return $this -> jsonResponse ( $code , $message , $data ); } /** * \u63a5\u53e3\u6570\u636e\u6210\u529f\u65f6\u8fd4\u56de */ public function jsonSuccessData ( $data = []) { return $this -> jsonResponse ( 0 , \"success\" , $data ); } /** * \u5c01\u88c5\u63a5\u53e3\u6570\u636e\u683c\u5f0f */ private function jsonResponse ( $code , $message , $data ) { $content = [ \"code\" => $code , \"message\" => $message , \"data\" => $data ]; return json_encode ( $content ); } } app/Http/Controllers/Controller.php <?php namespace App\\Http\\Controllers ; use Illuminate\\Routing\\Controller as BaseController ; use App\\Http\\Response\\ResponseJson ; class Controller extends BaseController { use ResponseJson ; public function index () { return $this -> jsonSuccessData ([ \"name\" => \"Tom\" ]); } } routes/api.php Route::get('/index', \"Controller@index\"); \u8bbf\u95ee\u6d4b\u8bd5 http://127.0.0.1:8000/api/index { code : 0 , message : \"success\" , data : { name : \"Tom\" } } App\u63a5\u53e3\u9274\u6743 \u5ba2\u6237\u7aef\u9700\u8981\u5e26\u7740\u51ed\u8bc1\u6765\u8c03\u7528APP\u63a5\u53e3 \u4f20\u7edfweb cookie session\u9274\u6743 Json Web Token JWT Header Payload Signature Base64URL \u7b97\u6cd5\uff1a Base64 \u6709\u4e09\u4e2a\u5b57\u7b26+\u3001/\u548c=\uff0c\u5728 URL \u91cc\u9762\u6709\u7279\u6b8a\u542b\u4e49\uff0c \u6240\u4ee5\u8981\u88ab\u66ff\u6362\u6389\uff1a=\u88ab\u7701\u7565\u3001+\u66ff\u6362\u6210-\uff0c/\u66ff\u6362\u6210_ \u95ee\u9898\uff1a Python binascii.Error: Incorrect padding \u89e3\u51b3\uff1a \u53c2\u6570\u6700\u540e\u52a0\u4e0a\u7b49\u4e8e\u53f7\"=\"(\u4e00\u4e2a\u6216\u8005\u4e24\u4e2a) http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html https://jwt.io/ composer require lcobucci/jwt composer dump-autoload \u9519\u8bef\u7801 \u9519\u8bef\u7801\u662f\u7528\u6765\u63cf\u8ff0\u5f53\u524d\u63a5\u53e3\u5904\u7406\u7684\u7ed3\u679c \u9519\u8bef\u7801\u662f\u524d\u540e\u7aef\u5171\u540c\u7684\u4e00\u4e2a\u7ea6\u675f class ApiErrDesc { /** * \u901a\u7528\u9519\u8bef\u7801 */ const SUCCESS = [0, \"Success\"]; const UNKNOWN_ERR = [1, \"\u4f4d\u7f6e\u9519\u8bef\"]; /** * \u5176\u4ed6\u9519\u8bef\u7801 */ const URL_ERR = [2, \"url\u9519\u8bef\"]; } ApiErrDesc::SUCCESS[0], ApiErrDesc::SUCCESS[1] \u5f02\u5e38\u5904\u7406 \u8bbe\u7f6e\u9ed8\u8ba4\u7684\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\uff0c\u7528\u4e8e\u6ca1\u6709\u7528 try/catch \u5757\u6765\u6355\u83b7\u7684\u5f02\u5e38 set_exception_handler \u7528\u6237\u4fe1\u606f\u63a5\u53e3 1\u3001\u6570\u636e\u5e93\u7528\u6237\u4fe1\u606f\u8bbe\u8ba1 2\u3001\u5f00\u53d1\u7528\u6237\u4fe1\u606f\u63a5\u53e3 3\u3001\u4f7f\u7528redis\u7f13\u5b58\u52a0\u901f\u7528\u6237\u4fe1\u606f\u63a5\u53e3 \u7528\u6237\u8868 id\u3001name\u3001sex\u3001email\u3001password\u3001create_time\u3001update_time unique email \u5bc6\u7801hash\u548c\u5bc6\u7801\u6821\u9a8c $ php -a Interactive shell php > $ret = password_hash ( \"123456\" , PASSWORD_DEFAULT ) ; php > echo $ret ; $2 y $10$6 AOQgUCZ7ukn.MAnilB0uuWxu4vrveWCMdPzFg4UyDVI5G7QR.fki php > echo password_verify ( \"123456\" , $ret ) ; 1 redis \u7f13\u5b58\u4fe1\u606f\u52a0\u5feb\u8bbf\u95ee\u901f\u5ea6","title":"Laravel\u5f00\u53d1APP\u63a5\u53e3"},{"location":"php/Laravel\u5f00\u53d1APP\u63a5\u53e3/#_1","text":"LNMP 1\u3001Linux 2\u3001Nginx 3\u3001MySQL 4\u3001PHP APP\u63a5\u53e3 \u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u7aef\u6570\u636e\u7684\u4ea4\u6362 HTTP\u901a\u8baf\u4e09\u8981\u7d20 1\u3001URL \u5730\u5740 2\u3001Method \u65b9\u5f0f 3\u3001Params \u5185\u5bb9 \u5ba2\u6237\u7aef\u4f20\u9012\u53c2\u6570 1\u3001URl\u53c2\u6570 GET 2\u3001Request Body POST \uff081\uff09form-url \uff082\uff09form-data \uff083\uff09json","title":"\u73af\u5883\u7b80\u4ecb"},{"location":"php/Laravel\u5f00\u53d1APP\u63a5\u53e3/#_2","text":"\u73af\u5883\u8981\u6c42 PHP >= 7.0.0 \u5168\u5c40\u5b89\u88c5composer curl - sS https : // getcomposer . org / installer | php mv composer . phar / usr / local / bin / composer \u914d\u7f6e\u8def\u5f84 cat ~/ . bash_profile # composer export PATH = $ PATH : $ HOME / . composer / vendor / bin \u5b89\u88c5 Laravel composer global require \"laravel/installer\" \u521b\u5efa\u65b0\u5e94\u7528 laravel new blog \u672c\u5730\u5f00\u53d1\u670d\u52a1\u5668 php artisan serve http://localhost:8000","title":"\u73af\u5883\u642d\u5efa"},{"location":"php/Laravel\u5f00\u53d1APP\u63a5\u53e3/#jqueryajax","text":"jQuery.ajax([settings]) type \u7c7b\u578b\uff1aString \u9ed8\u8ba4\u503c: \"GET\"\u3002\u8bf7\u6c42\u65b9\u5f0f POST/GET/PUT/DELETE url \u7c7b\u578b\uff1aString \u9ed8\u8ba4\u503c: \u5f53\u524d\u9875\u5730\u5740\u3002\u53d1\u9001\u8bf7\u6c42\u7684\u5730\u5740 contentType \u7c7b\u578b\uff1aString \u9ed8\u8ba4\u503c: \"application/x-www-form-urlencoded\"\u3002\u53d1\u9001\u4fe1\u606f\u81f3\u670d\u52a1\u5668\u65f6\u5185\u5bb9\u7f16\u7801\u7c7b\u578b\u3002 data \u7c7b\u578b\uff1aString \u53d1\u9001\u5230\u670d\u52a1\u5668\u7684\u6570\u636e dataType \u7c7b\u578b\uff1aString \u9884\u671f\u670d\u52a1\u5668\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u3002xml/html/script/json/jsonp/text success \u7c7b\u578b\uff1aFunction \u8bf7\u6c42\u6210\u529f\u540e\u7684\u56de\u8c03\u51fd\u6570\u3002 jsonp \u7c7b\u578b\uff1aString \u5728\u4e00\u4e2a jsonp \u8bf7\u6c42\u4e2d\u91cd\u5199\u56de\u8c03\u51fd\u6570\u7684\u540d\u5b57 jsonpCallback \u7c7b\u578b\uff1aString \u4e3a jsonp \u8bf7\u6c42\u6307\u5b9a\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u540d ajax\u53d1\u9001\u5404\u79cd\u8bf7\u6c42 < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < title > Document </ title > < script src = \"https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js\" ></ script > </ head > < body > < h1 > hello </ h1 > < script > var data = { \"name\" : \"Tom\" , \"age\" : 23 }; // \u53d1\u9001GET\u8bf7\u6c42 $ . ajax ({ type : \"GET\" , url : \"/api/get\" , dataType : \"json\" , data : data , success : function ( data ) { console . log ( data ); } }); // \u53d1\u9001POST\u8bf7\u6c42 // Content-Type: application/x-www-form-urlencoded; charset=UTF-8 $ . ajax ({ type : \"POST\" , url : \"/api/post-form\" , dataType : \"json\" , data : data , success : function ( data ) { console . log ( data ); } }); // \u53d1\u9001POST\u8bf7\u6c42 \u4e0d\u7f16\u7801 // Content-Type: multipart/form-data; charset=UTF-8 var formData = new FormData (); formData . append ( \"name\" , \"Tom\" ); formData . append ( \"age\" , \"23\" ); $ . ajax ({ type : \"POST\" , url : \"/api/post-form-data\" , dataType : \"json\" , contentType : false , processData : false , data : formData , success : function ( data ) { console . log ( data ); } }); // \u53d1\u9001json\u6570\u636e // Content-Type: application/json; charset=UTF-8 $ . ajax ({ type : \"POST\" , url : \"/api/post-json\" , dataType : \"json\" , contentType : 'application/json; charset=UTF-8' , data : JSON . stringify ( data ), success : function ( data ) { console . log ( data ); } }); // \u53d1\u9001jsonp\u6570\u636e $ . ajax ({ type : \"GET\" , url : \"/api/get-jsonp\" , dataType : \"jsonp\" , data : data , success : function ( data ) { console . log ( data ); } }); </ script > </ body > </ html > PHP\u540e\u7aef\u63a5\u6536\u53c2\u6570 routes/web.php Route::get('/', function () { // return view('welcome'); return view('index'); }); routes/api.php Route::get('/get', function () { $name = $_GET[\"name\"]; $age = $_GET[\"age\"]; echo json_encode([$name => $age]); }); Route::post('/post-form', function () { $name = $_POST[\"name\"]; $age = $_POST[\"age\"]; echo json_encode([$name => $age]); }); Route::post('/post-form-data', function () { $name = $_POST[\"name\"]; $age = $_POST[\"age\"]; echo json_encode([$name => $age]); }); Route::post('/post-json', function () { $ret = file_get_contents(\"php://input\"); $data = json_decode($ret, true); $name = $data[\"name\"]; $age = $data[\"age\"]; echo json_encode([$name => $age]); }); Route::get('/get-jsonp', function () { $callback = $_GET[\"callback\"]; $name = $_GET[\"name\"]; $age = $_GET[\"age\"]; echo $callback . \"(\" . json_encode([$name => $age]) . \")\"; }); Laravel \u63a5\u6536GET\u6216POST\u53c2\u6570 Route::get('/getOrPost', function (Request $request) { $name = $request->input(\"name\"); $age = $request->input(\"age\"); echo json_encode([$name => $age]); });","title":"jquery.ajax"},{"location":"php/Laravel\u5f00\u53d1APP\u63a5\u53e3/#xmljson","text":"APP\u63a5\u53e3\u8f93\u51fa\u683c\u5f0f\u4e09\u8981\u7d20 code \u9519\u8bef\u7801 msg \u9519\u8bef\u7801\u63cf\u8ff0 data \u63a5\u53e3\u6570\u636e \u5c01\u88c5app\u63a5\u53e3\u6570\u636e\u683c\u5f0f app/Http/Response/ResponseJson.php <?php namespace App\\Http\\Response ; /** * https://www.php.net/manual/zh/language.oop5.traits.php * traits \u901a\u8fc7\u7ec4\u5408\uff0c\u4ee3\u7801\u590d\u7528 */ trait ResponseJson { /** * \u63a5\u53e3\u6570\u636e\u9519\u8bef\u65f6\u8fd4\u56de */ public function jsonData ( $code , $message , $data = []) { return $this -> jsonResponse ( $code , $message , $data ); } /** * \u63a5\u53e3\u6570\u636e\u6210\u529f\u65f6\u8fd4\u56de */ public function jsonSuccessData ( $data = []) { return $this -> jsonResponse ( 0 , \"success\" , $data ); } /** * \u5c01\u88c5\u63a5\u53e3\u6570\u636e\u683c\u5f0f */ private function jsonResponse ( $code , $message , $data ) { $content = [ \"code\" => $code , \"message\" => $message , \"data\" => $data ]; return json_encode ( $content ); } } app/Http/Controllers/Controller.php <?php namespace App\\Http\\Controllers ; use Illuminate\\Routing\\Controller as BaseController ; use App\\Http\\Response\\ResponseJson ; class Controller extends BaseController { use ResponseJson ; public function index () { return $this -> jsonSuccessData ([ \"name\" => \"Tom\" ]); } } routes/api.php Route::get('/index', \"Controller@index\"); \u8bbf\u95ee\u6d4b\u8bd5 http://127.0.0.1:8000/api/index { code : 0 , message : \"success\" , data : { name : \"Tom\" } }","title":"XML\u548cJSON"},{"location":"php/Laravel\u5f00\u53d1APP\u63a5\u53e3/#app","text":"\u5ba2\u6237\u7aef\u9700\u8981\u5e26\u7740\u51ed\u8bc1\u6765\u8c03\u7528APP\u63a5\u53e3 \u4f20\u7edfweb cookie session\u9274\u6743 Json Web Token JWT Header Payload Signature Base64URL \u7b97\u6cd5\uff1a Base64 \u6709\u4e09\u4e2a\u5b57\u7b26+\u3001/\u548c=\uff0c\u5728 URL \u91cc\u9762\u6709\u7279\u6b8a\u542b\u4e49\uff0c \u6240\u4ee5\u8981\u88ab\u66ff\u6362\u6389\uff1a=\u88ab\u7701\u7565\u3001+\u66ff\u6362\u6210-\uff0c/\u66ff\u6362\u6210_ \u95ee\u9898\uff1a Python binascii.Error: Incorrect padding \u89e3\u51b3\uff1a \u53c2\u6570\u6700\u540e\u52a0\u4e0a\u7b49\u4e8e\u53f7\"=\"(\u4e00\u4e2a\u6216\u8005\u4e24\u4e2a) http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html https://jwt.io/ composer require lcobucci/jwt composer dump-autoload","title":"App\u63a5\u53e3\u9274\u6743"},{"location":"php/Laravel\u5f00\u53d1APP\u63a5\u53e3/#_3","text":"\u9519\u8bef\u7801\u662f\u7528\u6765\u63cf\u8ff0\u5f53\u524d\u63a5\u53e3\u5904\u7406\u7684\u7ed3\u679c \u9519\u8bef\u7801\u662f\u524d\u540e\u7aef\u5171\u540c\u7684\u4e00\u4e2a\u7ea6\u675f class ApiErrDesc { /** * \u901a\u7528\u9519\u8bef\u7801 */ const SUCCESS = [0, \"Success\"]; const UNKNOWN_ERR = [1, \"\u4f4d\u7f6e\u9519\u8bef\"]; /** * \u5176\u4ed6\u9519\u8bef\u7801 */ const URL_ERR = [2, \"url\u9519\u8bef\"]; } ApiErrDesc::SUCCESS[0], ApiErrDesc::SUCCESS[1]","title":"\u9519\u8bef\u7801"},{"location":"php/Laravel\u5f00\u53d1APP\u63a5\u53e3/#_4","text":"\u8bbe\u7f6e\u9ed8\u8ba4\u7684\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\uff0c\u7528\u4e8e\u6ca1\u6709\u7528 try/catch \u5757\u6765\u6355\u83b7\u7684\u5f02\u5e38 set_exception_handler \u7528\u6237\u4fe1\u606f\u63a5\u53e3 1\u3001\u6570\u636e\u5e93\u7528\u6237\u4fe1\u606f\u8bbe\u8ba1 2\u3001\u5f00\u53d1\u7528\u6237\u4fe1\u606f\u63a5\u53e3 3\u3001\u4f7f\u7528redis\u7f13\u5b58\u52a0\u901f\u7528\u6237\u4fe1\u606f\u63a5\u53e3 \u7528\u6237\u8868 id\u3001name\u3001sex\u3001email\u3001password\u3001create_time\u3001update_time unique email \u5bc6\u7801hash\u548c\u5bc6\u7801\u6821\u9a8c $ php -a Interactive shell php > $ret = password_hash ( \"123456\" , PASSWORD_DEFAULT ) ; php > echo $ret ; $2 y $10$6 AOQgUCZ7ukn.MAnilB0uuWxu4vrveWCMdPzFg4UyDVI5G7QR.fki php > echo password_verify ( \"123456\" , $ret ) ; 1 redis \u7f13\u5b58\u4fe1\u606f\u52a0\u5feb\u8bbf\u95ee\u901f\u5ea6","title":"\u5f02\u5e38\u5904\u7406"},{"location":"php/MySQLi\u6269\u5c55/","text":"MySQLi\u6269\u5c55 \u7b80\u4ecb MySQL\u589e\u5f3a\u6269\u5c55 PHP>=5 \u9762\u5411\u8fc7\u7a0b + \u9762\u5411\u5bf9\u8c61 \u652f\u6301\u9884\u5904\u7406\u8bed\u53e5 \u652f\u6301\u4e8b\u52a1 \u5b89\u88c5\u914d\u7f6e 1\u3001php\u914d\u7f6e\u6587\u4ef6 \u5f00\u542fphp_mysqli.dll 2\u3001\u914d\u7f6eextension_dir= ext\u76ee\u5f55\u6240\u5728\u4f4d\u7f6e 3\u3001\u91cd\u542f\u670d\u52a1\u5668 4\u3001\u68c0\u6d4b\u6269\u5c55\u5f00\u542f\u56db\u79cd\u65b9\u5f0f <?php // 1\u3001\u67e5\u770b\u73af\u5883\u4fe1\u606f phpinfo (); // 2\u3001\u68c0\u6d4b\u6269\u5c55\u662f\u5426\u52a0\u8f7d true/false var_dump ( extension_loaded ( 'mysqli' )); // 3\u3001\u68c0\u6d4b\u51fd\u6570\u662f\u5426\u5b58\u5728 var_dump ( function_exists ( 'mysqli_connect' )); // 4\u3001\u5f97\u5230\u5f53\u524d\u5df2\u7ecf\u5f00\u542f\u7684\u6269\u5c55 print_r ( get_loaded_extensions ()); MySQLi\u6269\u5c55\u9762\u5411\u5bf9\u8c61\u7684\u4f7f\u7528 \u5efa\u7acbMySQL\u8fde\u63a5 \u6253\u5f00\u6307\u5b9a\u6570\u636e\u5e93 \u8bbe\u7f6e\u9ed8\u8ba4\u5ba2\u6237\u7aef\u5b57\u7b26\u96c6 utf-8 \u6267\u884cSQL\u67e5\u8be2 \u91ca\u653e\u7ed3\u679c\u96c6 \u5173\u95ed\u6570\u636e\u5e93 MySQLi\u5e38\u7528\u65b9\u6cd5 \u65b9\u6cd5 | \u8bf4\u660e -|- new mysqli() | \u5b9e\u4f8b\u5316 connect() | \u8fde\u63a5 close() | \u5173\u95ed select_db() | \u9009\u62e9\u6570\u636e\u5e93 connect_errno | \u8fde\u63a5\u9519\u8bef\u53f7 connect_error | \u8fde\u63a5\u9519\u8bef client_info | \u5ba2\u6237\u7aef\u4fe1\u606f get_client_info() | \u5ba2\u6237\u7aef\u4fe1\u606f client_version | \u5ba2\u6237\u7aef\u7248\u672c server_info | \u670d\u52a1\u5668\u4fe1\u606f get_server_info() | \u670d\u52a1\u5668\u4fe1\u606f server_version | \u670d\u52a1\u5668\u7248\u672c set_charset() | \u8bbe\u7f6e\u5b57\u7b26\u7f16\u7801 query() | \u6267\u884c\u67e5\u8be2(bool, \u83b7\u53d6result_set) insert_id | \u83b7\u53d6\u81ea\u589eid affected_rows | \u5f71\u54cd\u884c\u6570\uff08\u53d7\u5f71\u54cd\u6761\u6570>0, \u6ca1\u6709\u5f71\u54cd\u6761\u6570=0, sql\u6709\u95ee\u9898=-1\uff09 errorno | \u6267\u884c\u9519\u8bef\u53f7 error | \u6267\u884c\u9519\u8bef\u7f16\u7801 multi_query() | \u6267\u884c\u591a\u6761sql\uff0c\u5206\u53f7\u5206\u9694 use_result()/store_result() | \u83b7\u53d6\u7ed3\u679c\u96c6 more_results() | \u68c0\u6d4b\u662f\u5426\u8fd8\u6709\u66f4\u591a\u7ed3\u679c\u96c6 next_result() | \u7ed3\u679c\u96c6\u6307\u9488\u5411\u4e0b\u79fb\u52a8\u4e00\u4f4d prepare() | \u9884\u5904\u7406\u8bed\u53e5 \u5360\u4f4d\u7b26\uff1a? $stmt->bind_param() | \u7ed1\u5b9a\u53c2\u6570 $stmt->execute() | \u6267\u884csql \u7ed3\u679c\u96c6\u65b9\u6cd5 \u65b9\u6cd5 | \u8bf4\u660e -|- $result->num_rows | \u7ed3\u679c\u96c6\u6570\u91cf $result->fetch_all() | \u83b7\u53d6\u7ed3\u679c\u96c6\u6240\u6709\u6570\u636e\uff0c $result->fetch_row() | \u83b7\u53d6\u7ed3\u679c\u96c6\u4e00\u6761\u6570\u636e $result->fetch_assoc() | \u83b7\u53d6\u7ed3\u679c\u96c6\u4e00\u6761\u5173\u8054\u6570\u636e $result->fetch_array() | \u83b7\u53d6\u7ed3\u679c\u96c6\u7d22\u5f15+\u5173\u8054\u6570\u636e $result->fetch_object() | \u83b7\u53d6\u7ed3\u679c\u96c6\u5bf9\u8c61 $result->data_seek(0) | \u79fb\u52a8\u7ed3\u679c\u96c6\u5185\u90e8\u6307\u9488 $result->close() | \u91ca\u653e\u7ed3\u679c\u96c6 fetch_all\u53ef\u9009\u5e38\u91cf\u53c2\u6570\u53ef\u7701\u7565 \u7d22\u5f15 MYSQLI_NUM \u5173\u8054 MYSQLI_ASSOC \u7d22\u5f15+\u5173\u8054 MYSQLI_BOTH \u4f7f\u7528\u793a\u4f8b 1\u3001\u914d\u7f6e\u4fe1\u606f $host = 'localhost'; $user = 'root'; $password = '123456'; $database = 'data'; 2\u3001\u8fde\u63a5\u6570\u636e\u5e93 // \u65b9\u5f0f\u4e00 $mysqli = new mysqli(); $mysqli->connect($host, $username, $password); $mysqli->select_db($database); // \u65b9\u5f0f\u4e8c $mysqli = new mysqli($host, $username, $password); $mysqli->select_db($database); // \u65b9\u5f0f\u4e09 $mysqli = new mysqli($host, $username, $password, $database); // \u83b7\u53d6\u8fde\u63a5\u4ea7\u751f\u7684\u9519\u8bef\u7f16\u53f7\u548c\u9519\u8bef\u4fe1\u606f if($mysqli->connect_errno){ die($mysqli->connect_error); } // \u5173\u95ed\u94fe\u63a5 $mysqli->close(); 3\u3001\u83b7\u53d6\u4fe1\u606f // \u5ba2\u6237\u7aef\u4fe1\u606f echo $mysqli->client_info . PHP_EOL; echo $mysqli->get_client_info(). PHP_EOL; // \u5ba2\u6237\u7aef\u7248\u672c echo $mysqli->client_version . PHP_EOL; // \u670d\u52a1\u7aef\u4fe1\u606f echo $mysqli->server_info . PHP_EOL; echo $mysqli->get_server_info() . PHP_EOL; // \u670d\u52a1\u7aef\u7248\u672c echo $mysqli->server_version . PHP_EOL; 4\u3001\u5b9e\u73b0sql\u67e5\u8be2 // @\u53d6\u6d88\u8b66\u544aWarning $mysqli = @new mysqli($host, $username, $password, $database); // \u83b7\u53d6\u8fde\u63a5\u4ea7\u751f\u7684\u9519\u8bef\u7f16\u53f7\u548c\u9519\u8bef\u4fe1\u606f if($mysqli->connect_errno){ die($mysqli->connect_error); } // \u8bbe\u7f6e\u7f16\u7801\u65b9\u5f0f $mysqli->set_charset('utf8'); // \u6267\u884csql $sql = 'insert into student(name, age) values(\"Tom\", 25)'; $res = $mysqli->query($sql); var_dump($res); // bool(true) if($res){ // \u83b7\u53d6\u81ea\u589eid echo \"\u81ea\u589eid\uff1a\" . $mysql->insert_id; echo \"\u63d2\u5165\u6761\u6570\uff1a\" . $mysql->affected_rows; } else{ // \u83b7\u53d6\u9519\u8bef\u53f7\u548c\u9519\u8bef\u4fe1\u606f echo \"error\" . $mysql->errorno . $mysql->error; } // \u8fd4\u56de\u7ed3\u679c 2\u79cd // select/desc/describe/show/explain \u6210\u529f\u8fd4\u56de\u7ed3\u679c\u96c6mysqli_result\u5bf9\u8c61\uff0c\u5931\u8d25\u8fd4\u56defalse // \u5176\u4ed6\u6267\u884c\u6210\u529f\u8fd4\u56detrue\uff0c\u5176\u4ed6\u8fd4\u56defalse // \u5173\u95ed\u8fde\u63a5 $mysqli->close(); php\u548chtml\u6df7\u5199\u793a\u4f8b <!-- \u5b9a\u4e49\u53d8\u91cf --> <!-- \u66ff\u4ee3\u8bed\u6cd5 --> <!-- https://www.jb51.net/article/23252.htm --> <?php $items = [ 'Tom' , 'Jack' , 'Steve' ] ?> <!-- \u5faa\u73af\u8f93\u51fa --> <?php $i = 1 ; foreach ( $items as $item ) : ?> <li> <?php echo $i . ' - ' . $item ?> </li> <?php $i ++ ; endforeach ; ?> \u8f93\u51fa\u7ed3\u679c 1 - Tom 2 - Jack 3 - Steve \u793a\u4f8b\uff1a\u6267\u884c\u591a\u6761sql $sql = 'select * from student limit 1;'; $sql .= 'select now()'; $mysqli->multi_query($sql); do{ if($mysqli_result = $mysqli->store_result()){ $rows[] = $mysqli_result->fetch_assoc(); } } while($mysqli->more_results() && $mysqli->next_result()); var_dump($rows);","title":"MySQLi\u6269\u5c55"},{"location":"php/MySQLi\u6269\u5c55/#mysqli","text":"","title":"MySQLi\u6269\u5c55"},{"location":"php/MySQLi\u6269\u5c55/#_1","text":"MySQL\u589e\u5f3a\u6269\u5c55 PHP>=5 \u9762\u5411\u8fc7\u7a0b + \u9762\u5411\u5bf9\u8c61 \u652f\u6301\u9884\u5904\u7406\u8bed\u53e5 \u652f\u6301\u4e8b\u52a1","title":"\u7b80\u4ecb"},{"location":"php/MySQLi\u6269\u5c55/#_2","text":"1\u3001php\u914d\u7f6e\u6587\u4ef6 \u5f00\u542fphp_mysqli.dll 2\u3001\u914d\u7f6eextension_dir= ext\u76ee\u5f55\u6240\u5728\u4f4d\u7f6e 3\u3001\u91cd\u542f\u670d\u52a1\u5668 4\u3001\u68c0\u6d4b\u6269\u5c55\u5f00\u542f\u56db\u79cd\u65b9\u5f0f <?php // 1\u3001\u67e5\u770b\u73af\u5883\u4fe1\u606f phpinfo (); // 2\u3001\u68c0\u6d4b\u6269\u5c55\u662f\u5426\u52a0\u8f7d true/false var_dump ( extension_loaded ( 'mysqli' )); // 3\u3001\u68c0\u6d4b\u51fd\u6570\u662f\u5426\u5b58\u5728 var_dump ( function_exists ( 'mysqli_connect' )); // 4\u3001\u5f97\u5230\u5f53\u524d\u5df2\u7ecf\u5f00\u542f\u7684\u6269\u5c55 print_r ( get_loaded_extensions ());","title":"\u5b89\u88c5\u914d\u7f6e"},{"location":"php/MySQLi\u6269\u5c55/#mysqli_1","text":"\u5efa\u7acbMySQL\u8fde\u63a5 \u6253\u5f00\u6307\u5b9a\u6570\u636e\u5e93 \u8bbe\u7f6e\u9ed8\u8ba4\u5ba2\u6237\u7aef\u5b57\u7b26\u96c6 utf-8 \u6267\u884cSQL\u67e5\u8be2 \u91ca\u653e\u7ed3\u679c\u96c6 \u5173\u95ed\u6570\u636e\u5e93 MySQLi\u5e38\u7528\u65b9\u6cd5 \u65b9\u6cd5 | \u8bf4\u660e -|- new mysqli() | \u5b9e\u4f8b\u5316 connect() | \u8fde\u63a5 close() | \u5173\u95ed select_db() | \u9009\u62e9\u6570\u636e\u5e93 connect_errno | \u8fde\u63a5\u9519\u8bef\u53f7 connect_error | \u8fde\u63a5\u9519\u8bef client_info | \u5ba2\u6237\u7aef\u4fe1\u606f get_client_info() | \u5ba2\u6237\u7aef\u4fe1\u606f client_version | \u5ba2\u6237\u7aef\u7248\u672c server_info | \u670d\u52a1\u5668\u4fe1\u606f get_server_info() | \u670d\u52a1\u5668\u4fe1\u606f server_version | \u670d\u52a1\u5668\u7248\u672c set_charset() | \u8bbe\u7f6e\u5b57\u7b26\u7f16\u7801 query() | \u6267\u884c\u67e5\u8be2(bool, \u83b7\u53d6result_set) insert_id | \u83b7\u53d6\u81ea\u589eid affected_rows | \u5f71\u54cd\u884c\u6570\uff08\u53d7\u5f71\u54cd\u6761\u6570>0, \u6ca1\u6709\u5f71\u54cd\u6761\u6570=0, sql\u6709\u95ee\u9898=-1\uff09 errorno | \u6267\u884c\u9519\u8bef\u53f7 error | \u6267\u884c\u9519\u8bef\u7f16\u7801 multi_query() | \u6267\u884c\u591a\u6761sql\uff0c\u5206\u53f7\u5206\u9694 use_result()/store_result() | \u83b7\u53d6\u7ed3\u679c\u96c6 more_results() | \u68c0\u6d4b\u662f\u5426\u8fd8\u6709\u66f4\u591a\u7ed3\u679c\u96c6 next_result() | \u7ed3\u679c\u96c6\u6307\u9488\u5411\u4e0b\u79fb\u52a8\u4e00\u4f4d prepare() | \u9884\u5904\u7406\u8bed\u53e5 \u5360\u4f4d\u7b26\uff1a? $stmt->bind_param() | \u7ed1\u5b9a\u53c2\u6570 $stmt->execute() | \u6267\u884csql \u7ed3\u679c\u96c6\u65b9\u6cd5 \u65b9\u6cd5 | \u8bf4\u660e -|- $result->num_rows | \u7ed3\u679c\u96c6\u6570\u91cf $result->fetch_all() | \u83b7\u53d6\u7ed3\u679c\u96c6\u6240\u6709\u6570\u636e\uff0c $result->fetch_row() | \u83b7\u53d6\u7ed3\u679c\u96c6\u4e00\u6761\u6570\u636e $result->fetch_assoc() | \u83b7\u53d6\u7ed3\u679c\u96c6\u4e00\u6761\u5173\u8054\u6570\u636e $result->fetch_array() | \u83b7\u53d6\u7ed3\u679c\u96c6\u7d22\u5f15+\u5173\u8054\u6570\u636e $result->fetch_object() | \u83b7\u53d6\u7ed3\u679c\u96c6\u5bf9\u8c61 $result->data_seek(0) | \u79fb\u52a8\u7ed3\u679c\u96c6\u5185\u90e8\u6307\u9488 $result->close() | \u91ca\u653e\u7ed3\u679c\u96c6 fetch_all\u53ef\u9009\u5e38\u91cf\u53c2\u6570\u53ef\u7701\u7565 \u7d22\u5f15 MYSQLI_NUM \u5173\u8054 MYSQLI_ASSOC \u7d22\u5f15+\u5173\u8054 MYSQLI_BOTH \u4f7f\u7528\u793a\u4f8b 1\u3001\u914d\u7f6e\u4fe1\u606f $host = 'localhost'; $user = 'root'; $password = '123456'; $database = 'data'; 2\u3001\u8fde\u63a5\u6570\u636e\u5e93 // \u65b9\u5f0f\u4e00 $mysqli = new mysqli(); $mysqli->connect($host, $username, $password); $mysqli->select_db($database); // \u65b9\u5f0f\u4e8c $mysqli = new mysqli($host, $username, $password); $mysqli->select_db($database); // \u65b9\u5f0f\u4e09 $mysqli = new mysqli($host, $username, $password, $database); // \u83b7\u53d6\u8fde\u63a5\u4ea7\u751f\u7684\u9519\u8bef\u7f16\u53f7\u548c\u9519\u8bef\u4fe1\u606f if($mysqli->connect_errno){ die($mysqli->connect_error); } // \u5173\u95ed\u94fe\u63a5 $mysqli->close(); 3\u3001\u83b7\u53d6\u4fe1\u606f // \u5ba2\u6237\u7aef\u4fe1\u606f echo $mysqli->client_info . PHP_EOL; echo $mysqli->get_client_info(). PHP_EOL; // \u5ba2\u6237\u7aef\u7248\u672c echo $mysqli->client_version . PHP_EOL; // \u670d\u52a1\u7aef\u4fe1\u606f echo $mysqli->server_info . PHP_EOL; echo $mysqli->get_server_info() . PHP_EOL; // \u670d\u52a1\u7aef\u7248\u672c echo $mysqli->server_version . PHP_EOL; 4\u3001\u5b9e\u73b0sql\u67e5\u8be2 // @\u53d6\u6d88\u8b66\u544aWarning $mysqli = @new mysqli($host, $username, $password, $database); // \u83b7\u53d6\u8fde\u63a5\u4ea7\u751f\u7684\u9519\u8bef\u7f16\u53f7\u548c\u9519\u8bef\u4fe1\u606f if($mysqli->connect_errno){ die($mysqli->connect_error); } // \u8bbe\u7f6e\u7f16\u7801\u65b9\u5f0f $mysqli->set_charset('utf8'); // \u6267\u884csql $sql = 'insert into student(name, age) values(\"Tom\", 25)'; $res = $mysqli->query($sql); var_dump($res); // bool(true) if($res){ // \u83b7\u53d6\u81ea\u589eid echo \"\u81ea\u589eid\uff1a\" . $mysql->insert_id; echo \"\u63d2\u5165\u6761\u6570\uff1a\" . $mysql->affected_rows; } else{ // \u83b7\u53d6\u9519\u8bef\u53f7\u548c\u9519\u8bef\u4fe1\u606f echo \"error\" . $mysql->errorno . $mysql->error; } // \u8fd4\u56de\u7ed3\u679c 2\u79cd // select/desc/describe/show/explain \u6210\u529f\u8fd4\u56de\u7ed3\u679c\u96c6mysqli_result\u5bf9\u8c61\uff0c\u5931\u8d25\u8fd4\u56defalse // \u5176\u4ed6\u6267\u884c\u6210\u529f\u8fd4\u56detrue\uff0c\u5176\u4ed6\u8fd4\u56defalse // \u5173\u95ed\u8fde\u63a5 $mysqli->close(); php\u548chtml\u6df7\u5199\u793a\u4f8b <!-- \u5b9a\u4e49\u53d8\u91cf --> <!-- \u66ff\u4ee3\u8bed\u6cd5 --> <!-- https://www.jb51.net/article/23252.htm --> <?php $items = [ 'Tom' , 'Jack' , 'Steve' ] ?> <!-- \u5faa\u73af\u8f93\u51fa --> <?php $i = 1 ; foreach ( $items as $item ) : ?> <li> <?php echo $i . ' - ' . $item ?> </li> <?php $i ++ ; endforeach ; ?> \u8f93\u51fa\u7ed3\u679c 1 - Tom 2 - Jack 3 - Steve \u793a\u4f8b\uff1a\u6267\u884c\u591a\u6761sql $sql = 'select * from student limit 1;'; $sql .= 'select now()'; $mysqli->multi_query($sql); do{ if($mysqli_result = $mysqli->store_result()){ $rows[] = $mysqli_result->fetch_assoc(); } } while($mysqli->more_results() && $mysqli->next_result()); var_dump($rows);","title":"MySQLi\u6269\u5c55\u9762\u5411\u5bf9\u8c61\u7684\u4f7f\u7528"},{"location":"php/PHP\u52a0\u5bc6/","text":"PHP\u52a0\u5bc6 \u52a0\u5bc6\u89e3\u51b3\u7684\u95ee\u9898 1\u3001\u9632\u6b62\u901a\u4fe1\u5185\u5bb9\u88ab\u7a83\u542c 2\u3001\u9632\u6b62\u901a\u4fe1\u5185\u5bb9\u88ab\u7be1\u6539 \u5bf9\u79f0\u52a0\u5bc6 DES Data Encryption Standard \u53ef\u4ee5\u88ab\u66b4\u529b\u7834\u89e3 \u52a0\u5bc6\uff1a\u660e\u6587 + \u79d8\u94a5 -> DES\u52a0\u5bc6 -> \u5bc6\u6587 \u89e3\u5bc6\uff1a\u5bc6\u6587 + \u79d8\u94a5 -> DES\u89e3\u5bc6 -> \u660e\u6587 \u5bf9\u79f0\u52a0\u5bc6 Triple-DES 3\u6b21DES,\u6027\u80fd\u8f83\u5dee \u5bf9\u79f0\u52a0\u5bc6 AES Advance Encryption Standard \u5b89\u5168\u7684 \u52a0\u5bc6\uff1a\u5b57\u8282\u66ff\u6362 -> \u5217\u79fb\u52a8 -> \u6df7\u5408\u5217 -> \u4e0e\u79d8\u94a5\u8fdb\u884c XOR \u89e3\u5bc6\uff1a\u5b57\u8282\u66ff\u6362 <- \u5217\u79fb\u52a8 <- \u6df7\u5408\u5217 <- \u4e0e\u79d8\u94a5\u8fdb\u884c XOR DES\u4ee3\u7801\u5b9e\u4f8b <?php // \u67e5\u770b\u53ef\u7528\u65b9\u6cd5 // $ciphers = openssl_get_cipher_methods(); // var_dump($ciphers); // \u83b7\u53d6\u4e00\u5b9a\u957f\u5ea6\u7684\u79d8\u94a5 $key = uniqid (); var_dump ( $key ); $md5_key = md5 ( $key ); var_dump ( $md5_key ); $vi = substr ( $md5_key , 0 , 8 ); var_dump ( $vi ); $data = \"hello world\" ; $method = \"DES-CBC\" ; // \u52a0\u5bc6\u6570\u636e $content = openssl_encrypt ( $data , $method , $key , OPENSSL_RAW_DATA , $vi ); var_dump ( $content ); // \u89e3\u5bc6\u6570\u636e $content = openssl_decrypt ( $content , $method , $key , OPENSSL_RAW_DATA , $vi ); var_dump ( $content ); RSA\u975e\u5bf9\u79f0\u52a0\u5bc6 \u516c\u94a5\u52a0\u5bc6 \u5bc6\u6587 = \u660e\u6587 E\u6b21\u65b9 mod N \u516c\u94a5 = {E, N} \u79c1\u94a5\u89e3\u5bc6 \u660e\u6587 = \u5bc6\u6587 D\u6b21\u65b9 mod N \u79c1\u94a5 = {D, N} \u7f3a\u70b9\uff1a\u8fd0\u7b97\u901f\u5ea6\u6162 RSA\u4ee3\u7801\u793a\u4f8b <?php // \u79d8\u94a5\u5bf9\u751f\u6210\u7f51\u5740\uff1ahttp://web.chacuo.net/netrsakeypair $public = '-----BEGIN PUBLIC KEY----- MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0HOTvtgR3rSeaun7RaGl ECy2DCGVEd2fxCI8/MomgJoHYonpomtk8LzFC6UXApEzBK9Qe05x30cHMI0ejNtI y9EtCkhgpVe8SDWA6volZjBZSOzF5FZmnMG+LV2eL60TnSHFeVGEl/qQxqM1143d w4+Ymza+adfFDU2xBMobw5q37++9qwj8mrtviP7P8I+dOVNSCt/qIct+GdcBHSl/ N8V0XLmFnjPUiNGI90moeTMFUR5JQG7wxipsU4O/b2Ik92/2EpJ4/dnJBEKhsA9Z Wedo0YOWXr0F7dO4xUfYqVvqdR0J67Meb4ah2mFBGLbaJ3I276QelBWvM13Mp+lA EQIDAQAB -----END PUBLIC KEY-----' ; $private = '-----BEGIN PRIVATE KEY----- MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDQc5O+2BHetJ5q 6ftFoaUQLLYMIZUR3Z/EIjz8yiaAmgdiiemia2TwvMULpRcCkTMEr1B7TnHfRwcw jR6M20jL0S0KSGClV7xINYDq+iVmMFlI7MXkVmacwb4tXZ4vrROdIcV5UYSX+pDG ozXXjd3Dj5ibNr5p18UNTbEEyhvDmrfv772rCPyau2+I/s/wj505U1IK3+ohy34Z 1wEdKX83xXRcuYWeM9SI0Yj3Sah5MwVRHklAbvDGKmxTg79vYiT3b/YSknj92ckE QqGwD1lZ52jRg5ZevQXt07jFR9ipW+p1HQnrsx5vhqHaYUEYttoncjbvpB6UFa8z Xcyn6UARAgMBAAECggEBAJpv9tefJ+YzNWeKwUJ+l1ebeKkWPGaHJ3Zd04eKkeoX tD76ZKGUJa4CfY66GokpYH4pEVy56r381sPO2gKL+Kwg5tjGdOwrS3DISyJMgGbs jUntOlSI+u9Kz4a25Jr4BR8WxUKz9aPP3XF9vEdecR4RhoQAlCTA2tqXY/5jaxyI bs6+kpN7hnKFMCQJ/T7/9UrIaNR9L3mcrQwjpcGBHPx7I2vZtkENMVh6D67ecEo0 i7g116/VexST9XKD1EJXdLlkmbx2YPSyKMnNQxRqWtazSXtMz9FaEMzMzXxwI4vQ h7JW8LYYosI8hbrToj1AfQsbfl08WI+cnPZptPssUT0CgYEA8+P1cND+OHEMh73K 9HhoJN4rCBxdB7WJAlo7+WvmI5UTKnb4Vwx24Jm2KkAqFZYnrWInARyCjEK2EqBS 4jTiBCWKoG7fYd0YE+M3vOGZ/t8FMeSZLbBf0dcBqDbF8sp7x/SiTUGG8npED/5J mJT9os6TsRMoCKFDkKhf3gTrYSMCgYEA2s0pI2UQO+ysWvu76339V6RzP4ZJdT5i Tc+uwoNJ6gisitOovRfhdOiT29AxXKbh1Eib7ug6jlVpIXJQGVEcJIGPGq2dxZ3f 7Rx/XHAzsfw65nCJ80O4bjZkxFPT8P7c04hxUKI29wuSPEgzUnGVLDbKgwKlzUOK NNbz5ZL4/zsCgYA8F+seBSDen1xLBgS///sJOoS31uVFRQGhRsKIToHCOrUiPXYr XLLd3IH6Hx0/fGQCYLDjoTa5gKaEKGTDv+wAwY9KwIbiAiwwmkfdjmj3V9Rb2suz akXx2lxaKkTT8fhV6H0lNAQgMugaWLmhkvR77RKPCv1OQw320sXsWqH0qQKBgFQK AQcLRlT97qVzkxY8ahZDn9CCb6yMrY1de65SZw1xD3SzH1ih14Lj4gbHzG3d21eC HAKDSBprS9oA4isXMEwFR0Xj8Xl5zgxwqaqDnhd63dSs3Q+Gr0wFsGaIHBuwiHjn Kz7hT2NMGnr08GF2Jum4kcgIOE7C5k6tUTiYXvMJAoGBAIc+TEvBmnjPrupmToCI OCFvUJtKrlEPACHU2Vut/g33/oVartWB4+6Wlmb57cfDdnHZRUNTom/BkGC4WDfa d30Sc5hqeAINZD6557JkR/ZmIVgN90QFNCSJWOirYNzsLDlF0v6Weun6yQlygGim +Ck7L+QHMgFEQQCYFd6ET5Cl -----END PRIVATE KEY-----' ; // \u516c\u94a5\u52a0\u5bc6 $content = \"hello world\" ; $encrypt = \"\" ; $ret = openssl_private_encrypt ( $content , $encrypt , $private ); var_dump ( $ret ); var_dump ( $encrypt ); // bool(true) string(256) ... // \u79c1\u94a5\u89e3\u5bc6 $decrypt = \"\" ; $ret = openssl_public_decrypt ( $encrypt , $decrypt , $public ); var_dump ( $ret ); var_dump ( $decrypt ); // bool(true) string(11) \"hello world\" \u4e2d\u95f4\u4eba\u653b\u51fb https hash\u51fd\u6570 md5() -> 32\u4f4d\u552f\u4e00\u5b57\u7b26\u4e32 \u53ef\u4ee5\u88ab\u649e\u5e93\u53cd\u89e3 \u6570\u5b57\u7b7e\u540d \u7efc\u5408\u5b9e\u8df5 rsa aes md5\u7b7e\u540d ak appkey sk secretkey \u5ba2\u6237\u7aef\u4ee3\u7801 < ? php $ public = ' -----BEGIN PUBLIC KEY----- MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0HOTvtgR3rSeaun7RaGl ECy2DCGVEd2fxCI8 / MomgJoHYonpomtk8LzFC6UXApEzBK9Qe05x30cHMI0ejNtI y9EtCkhgpVe8SDWA6volZjBZSOzF5FZmnMG + LV2eL60TnSHFeVGEl / qQxqM1143d w4 + Ymza + adfFDU2xBMobw5q37 ++ 9 qwj8mrtviP7P8I + dOVNSCt / qIct + GdcBHSl / N8V0XLmFnjPUiNGI90moeTMFUR5JQG7wxipsU4O / b2Ik92 / 2 EpJ4 / dnJBEKhsA9Z Wedo0YOWXr0F7dO4xUfYqVvqdR0J67Meb4ah2mFBGLbaJ3I276QelBWvM13Mp + lA EQIDAQAB ----- END PUBLIC KEY ----- ' ; // 1 \u3001\u53c2\u6570\u7f16\u7801 $a ppkey = \" 123 \" ; $ secretkey = \" abc \" ; $ url = \" http://127.0.0.1:8009/server.php? \" ; $ params [ \" appkey \" ] = $a ppkey ; $ params [ \" name \" ] = \" Tom \" ; $ params [ \" password \" ] = \" 123456 \" ; $ params [ \" time \" ] = time () ; $ queryString = http_build_query ( $ params ) ; // 2 \u3001\u53c2\u6570\u751f\u6210\u7b7e\u540d $ sign = getSign ( $ params , $ secretkey ) ; $ queryString . = \" &sign= \" . $ sign ; // 3 \u3001\u516c\u94a5\u52a0\u5bc6 $e ncrypt = \"\" ; openssl_public_encrypt ( $ queryString , $e ncrypt , $ public ) ; $e ncrypt = urlencode ( $e ncrypt ) ; $ url . = \" q= \" . $e ncrypt ; var_dump ( $ url ) ; // http : // 127 . 0 . 0 . 1 : 8009 / server . php ? // appkey = 123 // name = Tom // password = 123456 // time = 1560870998 // sign = 2 f8c18c6bf072f6310375a66e7082648 function getSign ( $ params , $ secretkey ) { ksort ( $ params ) ; // \u6309\u952e\u6392\u5e8f $ q = http_build_query ( $ params ) ; $ q . = $ secretkey ; return md5 ( $ q ) ; } \u670d\u52a1\u7aef\u4ee3\u7801 < ? php // \u670d\u52a1\u5668\u7aef $ private = ' -----BEGIN PRIVATE KEY----- MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDQc5O + 2 BHetJ5q 6 ftFoaUQLLYMIZUR3Z / EIjz8yiaAmgdiiemia2TwvMULpRcCkTMEr1B7TnHfRwcw jR6M20jL0S0KSGClV7xINYDq + iVmMFlI7MXkVmacwb4tXZ4vrROdIcV5UYSX + pDG ozXXjd3Dj5ibNr5p18UNTbEEyhvDmrfv772rCPyau2 + I / s / wj505U1IK3 + ohy34Z 1 wEdKX83xXRcuYWeM9SI0Yj3Sah5MwVRHklAbvDGKmxTg79vYiT3b / YSknj92ckE QqGwD1lZ52jRg5ZevQXt07jFR9ipW + p1HQnrsx5vhqHaYUEYttoncjbvpB6UFa8z Xcyn6UARAgMBAAECggEBAJpv9tefJ + YzNWeKwUJ + l1ebeKkWPGaHJ3Zd04eKkeoX tD76ZKGUJa4CfY66GokpYH4pEVy56r381sPO2gKL + Kwg5tjGdOwrS3DISyJMgGbs jUntOlSI + u9Kz4a25Jr4BR8WxUKz9aPP3XF9vEdecR4RhoQAlCTA2tqXY / 5 jaxyI bs6 + kpN7hnKFMCQJ / T7 / 9 UrIaNR9L3mcrQwjpcGBHPx7I2vZtkENMVh6D67ecEo0 i7g116 / VexST9XKD1EJXdLlkmbx2YPSyKMnNQxRqWtazSXtMz9FaEMzMzXxwI4vQ h7JW8LYYosI8hbrToj1AfQsbfl08WI + cnPZptPssUT0CgYEA8 + P1cND + OHEMh73K 9 HhoJN4rCBxdB7WJAlo7 + WvmI5UTKnb4Vwx24Jm2KkAqFZYnrWInARyCjEK2EqBS 4 jTiBCWKoG7fYd0YE + M3vOGZ / t8FMeSZLbBf0dcBqDbF8sp7x / SiTUGG8npED / 5 J mJT9os6TsRMoCKFDkKhf3gTrYSMCgYEA2s0pI2UQO + ysWvu76339V6RzP4ZJdT5i Tc + uwoNJ6gisitOovRfhdOiT29AxXKbh1Eib7ug6jlVpIXJQGVEcJIGPGq2dxZ3f 7 Rx / XHAzsfw65nCJ80O4bjZkxFPT8P7c04hxUKI29wuSPEgzUnGVLDbKgwKlzUOK NNbz5ZL4 / zsCgYA8F + seBSDen1xLBgS /// sJOoS31uVFRQGhRsKIToHCOrUiPXYr XLLd3IH6Hx0 / fGQCYLDjoTa5gKaEKGTDv + wAwY9KwIbiAiwwmkfdjmj3V9Rb2suz akXx2lxaKkTT8fhV6H0lNAQgMugaWLmhkvR77RKPCv1OQw320sXsWqH0qQKBgFQK AQcLRlT97qVzkxY8ahZDn9CCb6yMrY1de65SZw1xD3SzH1ih14Lj4gbHzG3d21eC HAKDSBprS9oA4isXMEwFR0Xj8Xl5zgxwqaqDnhd63dSs3Q + Gr0wFsGaIHBuwiHjn Kz7hT2NMGnr08GF2Jum4kcgIOE7C5k6tUTiYXvMJAoGBAIc + TEvBmnjPrupmToCI OCFvUJtKrlEPACHU2Vut / g33 / oVartWB4 + 6 Wlmb57cfDdnHZRUNTom / BkGC4WDfa d30Sc5hqeAINZD6557JkR / ZmIVgN90QFNCSJWOirYNzsLDlF0v6Weun6yQlygGim + Ck7L + QHMgFEQQCYFd6ET5Cl ----- END PRIVATE KEY ----- ' ; // 1 \u3001\u83b7\u53d6\u53c2\u6570\u4e4b\u540e\u4f7f\u7528\u79c1\u94a5\u89e3\u5bc6 $ q = $ _GET [ \" q \" ] ; $dec rypt = \"\" ; openssl_private_decrypt ( $ q , $dec rypt , $ private ) ; // 2 \u3001\u5c06\u5b57\u7b26\u4e32\u683c\u5f0f\u7684\u53c2\u6570\u8f6c\u4e3a\u6570\u7ec4 $ params = [] ; parse_str ( $dec rypt , $ params ) ; // 3 \u3001\u65f6\u95f4\u68c0\u9a8c\uff0c\u63a7\u5236 url \u5b58\u6d3b\u65f6\u95f4 if ( abs ( $ params [ \" time \" ] - time ()) >= 60 ) { echo \" \u9875\u9762\u8d85\u65f6 \" ; die ; } // 4 \u3001\u6bd4\u5bf9\u7b7e\u540d\u662f\u5426\u6b63\u786e $ sign = getSign ( $ params ) ; if ( $ sign != $ params [ \" sign \" ] ) { echo \" error \" ; die ; } echo \" success \" ; function getSign ( $ params ) { // \u53ef\u4ee5\u914d\u7f6e\u591a\u4e2a\u79d8\u94a5\u5bf9 $c onfig = [ \" 123 \" => \" abc \" ] ; unset ( $ params [ \" sign \" ] ) ; ksort ( $ params ) ; $ q = http_build_query ( $ params ) ; return md5 ( $ q . $c onfig [$ params [ \" appkey \" ]] ) ; }","title":"PHP\u52a0\u5bc6"},{"location":"php/PHP\u81ea\u5b9a\u4e49\u6846\u67b6/","text":"3\u4e2a\u5e38\u7528\u6846\u67b6\u5bf9\u6bd4 TP CI laravel \u6846\u67b6\u8fd0\u884c\u6d41\u7a0b \u5165\u53e3\u6587\u4ef6 \u5b9a\u4e49\u5e38\u91cf \u5f15\u5165\u51fd\u6570\u5e93 \u81ea\u52a8\u52a0\u8f7d\u7c7b \u542f\u52a8\u6846\u67b6 \u8def\u7531\u89e3\u6790 \u52a0\u8f7d\u63a7\u5236\u5668 \u8fd4\u56de\u7ed3\u679c filp/whoops \u9519\u8bef\u65e5\u5fd7 symfony/var_dumper \u6253\u5370\u8f93\u51fa","title":"PHP\u81ea\u5b9a\u4e49\u6846\u67b6"},{"location":"php/PHP\u81ea\u5b9a\u4e49\u6846\u67b6/#3","text":"TP CI laravel","title":"3\u4e2a\u5e38\u7528\u6846\u67b6\u5bf9\u6bd4"},{"location":"php/PHP\u81ea\u5b9a\u4e49\u6846\u67b6/#_1","text":"\u5165\u53e3\u6587\u4ef6 \u5b9a\u4e49\u5e38\u91cf \u5f15\u5165\u51fd\u6570\u5e93 \u81ea\u52a8\u52a0\u8f7d\u7c7b \u542f\u52a8\u6846\u67b6 \u8def\u7531\u89e3\u6790 \u52a0\u8f7d\u63a7\u5236\u5668 \u8fd4\u56de\u7ed3\u679c filp/whoops \u9519\u8bef\u65e5\u5fd7 symfony/var_dumper \u6253\u5370\u8f93\u51fa","title":"\u6846\u67b6\u8fd0\u884c\u6d41\u7a0b"},{"location":"php/PHP\u9488\u5bf9\u5b57\u7b26\u4e32\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u5224\u65ad\u65b9\u6cd5/","text":"PHP\u9488\u5bf9\u5b57\u7b26\u4e32\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u5224\u65ad\u65b9\u6cd5 1\u3001\u77e5\u8bc6\u51c6\u5907 // \u8ba1\u7b97\u5b57\u7b26\u4e32\u957f\u5ea6 echo strlen(\"hello\") . PHP_EOL; // 5 // \u622a\u53d6\u5b57\u7b26\u4e32 echo substr(\"hello world!\", 6, 5) . PHP_EOL; // world // \u67e5\u627e\u5b50\u4e32\u8d77\u59cb\u4f4d\u7f6e echo strpos(\"hello world!\", \"world\"). PHP_EOL; // 6 2\u3001\u5b57\u7b26\u4e32\u5f00\u5934\u7ed3\u5c3e\u5224\u65ad //\u53d8\u91cf\uff1a $s1 = \"hello\"; $s2 = \"hello world!\"; $s3 = \"world hello\"; //php\u5224\u65ad\u5b57\u7b26\u4e32\u5f00\u5934\uff1a var_dump(substr($s2, 0, strlen($s1)) === $s1); // bool(true) var_dump(strpos($s2, $s1) === 0); // bool(true) //php\u5224\u65ad\u5b57\u7b26\u4e32\u7ed3\u5c3e\uff1a var_dump(substr($s3, strpos($s3, $s1)) === $s1); // bool(true) <?php /** * \u5b57\u7b26\u4e32\u5de5\u5177\u7c7b */ class StringUtil { public static function startsWith ( string $string , string $subString ) : bool { return substr ( $string , 0 , strlen ( $subString )) === $subString ; // \u6216\u8005 strpos($s2, $s1) === 0 } public static function endsWith ( string $string , String $subString ) : bool { return substr ( $string , strpos ( $string , $subString )) === $subString ; } } // \u6d4b\u8bd5\u4ee3\u7801 var_dump ( StringUtil :: startsWith ( 'hello world' , 'hello' )); // bool(true) var_dump ( StringUtil :: startsWith ( 'hello world' , 'world' )); // bool(false) var_dump ( StringUtil :: endsWith ( 'hello world' , 'hello' )); // bool(false) var_dump ( StringUtil :: endsWith ( 'hello world' , 'world' )); // bool(true)","title":"PHP\u9488\u5bf9\u5b57\u7b26\u4e32\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u5224\u65ad\u65b9\u6cd5"},{"location":"php/PHP\u9488\u5bf9\u5b57\u7b26\u4e32\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u5224\u65ad\u65b9\u6cd5/#php","text":"","title":"PHP\u9488\u5bf9\u5b57\u7b26\u4e32\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u5224\u65ad\u65b9\u6cd5"},{"location":"php/PHP\u9488\u5bf9\u5b57\u7b26\u4e32\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u5224\u65ad\u65b9\u6cd5/#1","text":"// \u8ba1\u7b97\u5b57\u7b26\u4e32\u957f\u5ea6 echo strlen(\"hello\") . PHP_EOL; // 5 // \u622a\u53d6\u5b57\u7b26\u4e32 echo substr(\"hello world!\", 6, 5) . PHP_EOL; // world // \u67e5\u627e\u5b50\u4e32\u8d77\u59cb\u4f4d\u7f6e echo strpos(\"hello world!\", \"world\"). PHP_EOL; // 6","title":"1\u3001\u77e5\u8bc6\u51c6\u5907"},{"location":"php/PHP\u9488\u5bf9\u5b57\u7b26\u4e32\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u5224\u65ad\u65b9\u6cd5/#2","text":"//\u53d8\u91cf\uff1a $s1 = \"hello\"; $s2 = \"hello world!\"; $s3 = \"world hello\"; //php\u5224\u65ad\u5b57\u7b26\u4e32\u5f00\u5934\uff1a var_dump(substr($s2, 0, strlen($s1)) === $s1); // bool(true) var_dump(strpos($s2, $s1) === 0); // bool(true) //php\u5224\u65ad\u5b57\u7b26\u4e32\u7ed3\u5c3e\uff1a var_dump(substr($s3, strpos($s3, $s1)) === $s1); // bool(true) <?php /** * \u5b57\u7b26\u4e32\u5de5\u5177\u7c7b */ class StringUtil { public static function startsWith ( string $string , string $subString ) : bool { return substr ( $string , 0 , strlen ( $subString )) === $subString ; // \u6216\u8005 strpos($s2, $s1) === 0 } public static function endsWith ( string $string , String $subString ) : bool { return substr ( $string , strpos ( $string , $subString )) === $subString ; } } // \u6d4b\u8bd5\u4ee3\u7801 var_dump ( StringUtil :: startsWith ( 'hello world' , 'hello' )); // bool(true) var_dump ( StringUtil :: startsWith ( 'hello world' , 'world' )); // bool(false) var_dump ( StringUtil :: endsWith ( 'hello world' , 'hello' )); // bool(false) var_dump ( StringUtil :: endsWith ( 'hello world' , 'world' )); // bool(true)","title":"2\u3001\u5b57\u7b26\u4e32\u5f00\u5934\u7ed3\u5c3e\u5224\u65ad"},{"location":"\u4eba\u5de5\u667a\u80fd/","text":"\u4eba\u5de5\u667a\u80fd \u65b0\u95fb\u5185\u5bb9\u76f8\u4f3c \u51c6\u786e\u7387 \u65b0\u95fb\u63a8\u8350\u7cfb\u7edf \u6570\u636e\u6316\u6398 \u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406 jTessBoxEditorFX \u8bad\u7ec3\u6570\u636e\u6b65\u9aa4","title":"\u4eba\u5de5\u667a\u80fd"},{"location":"\u4eba\u5de5\u667a\u80fd/#_1","text":"\u65b0\u95fb\u5185\u5bb9\u76f8\u4f3c \u51c6\u786e\u7387 \u65b0\u95fb\u63a8\u8350\u7cfb\u7edf \u6570\u636e\u6316\u6398 \u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406 jTessBoxEditorFX \u8bad\u7ec3\u6570\u636e\u6b65\u9aa4","title":"\u4eba\u5de5\u667a\u80fd"},{"location":"\u4eba\u5de5\u667a\u80fd/jTessBoxEditorFX\u8bad\u7ec3\u6570\u636e\u6b65\u9aa4/","text":"\u5b57\u5e93\u8bad\u7ec3 \u4e0b\u8f7djTessBoxEditorFX https://sourceforge.net/projects/vietocr/files/jTessBoxEditor/ \u6587\u4ef6\u540d\u5fc5\u987b\u662f\u5982\u4e0b\u683c\u5f0f\uff1a [ lang ] . [ fontname ] . exp [ num ] lang:\u8bed\u8a00\u540d(\u8bad\u7ec3\u751f\u6210\u7684\u793a\u4e3a\u8bed\u8a00) fontname:\u5b57\u4f53\u540d num:\u5e8f\u53f7(\u65e0\u6240\u8c13) \u4e8e\u662f\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u547d\u540d\u4e3a num.peng.exp1.tif \u7684\u6587\u4ef6 1\u3001\u51c6\u5907\u6837\u672c\u56fe\u7247\uff0c\u5408\u5e76\u4e3a.tif\u6587\u4ef6 jTessBoxEditorFX -> tools->merge tiff 2\u3001\u751f\u6210.bok\u6587\u4ef6 tesseract num . peng . exp1 . tif num . peng . exp1 batch . nochop makebox 3\u3001\u5b57\u7b26\u77eb\u6b63 jTessBoxEditorFX -> Box Editor->Open\uff0cnum.peng.exp1.tif\uff0c\u8c03\u6574\u6821\u6b63 \u751f\u6210\u8bad\u7ec3\u6570\u636e \u793a\u4f8b\u5047\u8bbe\u67093\u4e2a\u6587\u4ef6\uff0ctif\u6587\u4ef6 1\u3001\u521b\u5efafont_properties\u6587\u4ef6 \u6587\u4ef6\u5185\u5bb9\u4e3a \uff1a < fontname > < italic > < bold > < fixed > < serif > < fraktur > # eg : echo peng 0 0 0 0 0 > font_properties 2\u3001\u4ea7\u751f\u5b57\u7b26\u7279\u5f81\u6587\u4ef6.tr tesseract num . peng . exp1 . tif num . peng . exp1 nobatch box . train tesseract num . peng . exp2 . tif num . peng . exp2 nobatch box . train tesseract num . peng . exp3 . tif num . peng . exp3 nobatch box . train 3\u3001\u8ba1\u7b97\u5b57\u7b26\u96c6\u6587\u4ef6 unicharset unicharset_extractor num . peng . exp1 . box num . peng . exp2 . box num . peng . exp3 . box 4\u3001\u805a\u96c6\u5b57\u7b26\u7279\u5f81 \u751f\u6210\u6587\u4ef6 shapetable shapeclustering - F font_properties - U unicharset num . peng . exp1 . tr num . peng . exp2 . tr num . peng . exp3 . tr mftraining - F font_properties - U unicharset - O num . unicharset num . peng . exp1 . tr num . peng . exp2 . tr num . peng . exp3 . tr cntraining num . peng . exp1 . tr num . peng . exp2 . tr num . peng . exp3 . tr 5\u3001\u91cd\u547d\u540d mv shapetable num . shapetable && \\ mv normproto num . normproto && \\ mv inttemp num . inttemp && \\ mv pffmtable num . pffmtable 6\u3001\u751f\u6210\u5b57\u5e93 combine_tessdata num . \u53c2\u8003 \u6587\u5b57\u8bc6\u522b OCR \u8bad\u7ec3\u6837\u672c \u57fa\u4e8eTesseract\u7684OCR\u8bc6\u522b Tesseract-OCR-3.0.5 \u6570\u5b57\u8bc6\u522b\u8bad\u7ec3\u4e0e\u5408\u5e76\u591a\u6b21\u8bad\u7ec3\u6570\u636e python tesseract 4.0 \u5b89\u88c5\u8e29\u8fc7\u7684\u5751\uff08\u57fa\u4e8emacOS \uff09 \u7efc\u5408\u793a\u4f8b 1\u3001\u6570\u636e\u5408\u6210\u52a9\u624b \u5047\u8bbe\u53ea\u6709\u4e00\u4e2atif\u6587\u4ef6 num.peng.exp1.tif \u4e0a\u9762\u7684\u6b65\u9aa4\u6709\u70b9\u591a\uff0c\u5408\u6210\u4e00\u4e2a\u811a\u672c\u4fbf\u4e8e\u4f7f\u7528 \u5907\u6ce8\uff1a\u9700\u8981\u8bbe\u7f6e\u597d\u73af\u5883\u53d8\u91cf\uff1a TESSDATA_PREFIX traindata.sh #\uff01/bin/bash # \u6240\u7528\u5230\u7684\u53d8\u91cf lang = \"num\" fontname = \"peng\" num = \"1\" name = \" ${ lang } . ${ fontname } .exp ${ num } \" # \u73af\u5883\u53d8\u91cf\u4e2d\u9700\u8981\u8bbe\u7f6e\u597d\u8d44\u6e90\u6587\u4ef6\u8def\u5f84 TESSDATA_PREFIX \u91cd\u542f\u7535\u8111\u751f\u6548 if [ -e \" ${ name } .tif\" ] ; then echo \"\u6587\u4ef6\u5b58\u5728\" else echo \"\u6587\u4ef6\u4e0d\u5b58\u5728: ${ name } .tif\" exit 0 fi # \u751f\u6210box box = $1 if [[ ${ box } == 'box' ]] ; then echo \"\u751f\u6210box\" tesseract \" ${ name } .tif\" ${ name } batch.nochop makebox exit 0 else echo \"\u751f\u6210\u8bad\u7ec3\u6570\u636e\" fi # 1\u3001\u521b\u5efafont_properties\u6587\u4ef6 echo 'peng 0 0 0 0 0' > font_properties && \\ # 2\u3001\u4ea7\u751f\u5b57\u7b26\u7279\u5f81\u6587\u4ef6.tr tesseract \" ${ name } .tif\" ${ name } nobatch box.train && \\ # 3\u3001\u8ba1\u7b97\u5b57\u7b26\u96c6\u6587\u4ef6 unicharset unicharset_extractor \" ${ name } .box\" && \\ # 4. \u805a\u96c6\u5b57\u7b26\u7279\u5f81 \u751f\u6210\u6587\u4ef6 shapetable shapeclustering -F font_properties -U unicharset \" ${ name } .tr\" && \\ mftraining -F font_properties -U unicharset -O \" ${ lang } .unicharset\" \" ${ name } .tr\" && \\ cntraining \" ${ name } .tr\" && \\ # 5\u3001\u91cd\u547d\u540d mv shapetable \" ${ lang } .shapetable\" && \\ mv normproto \" ${ lang } .normproto\" && \\ mv inttemp \" ${ lang } .inttemp\" && \\ mv pffmtable \" ${ lang } .pffmtable\" && \\ # 6\u3001\u751f\u6210\u5b57\u5e93 combine_tessdata \" ${ lang } .\" && \\ # \u62f7\u8d1d\u5b57\u5e93 cp *.traineddata ${ TESSDATA_PREFIX } && \\ echo \"\u5b8c\u6210\" \u4f7f\u7528\u65b9\u5f0f \u5c06\u6587\u4ef6\u62f7\u8d1d\u5230\u6837\u672c\u6570\u636e\u76ee\u5f55\u4e0b # \u751f\u6210box\u6587\u4ef6 bash traindata.sh box # \u751f\u6210traineddata\u6587\u4ef6 bash traindata.sh 2\u3001\u6570\u636e\u51c6\u5907 \u6267\u884c\u4e0b\u9762\u7684python\u4ee3\u7801\uff0c\u5728\u76ee\u5f55sample\u4e0b\u751f\u621010\u4e2a\u6837\u672c VerifyCode.py # -*- coding: utf-8 -*- import random import string from PIL import Image , ImageFilter , ImageFont , ImageDraw class VerifyCode ( object ): @classmethod def get_char ( cls ): \"\"\"\u83b7\u53d6\u4e00\u4e2a\u5b57\u6bcd\u6216\u6570\u5b57 \"\"\" return random . choice ( string . ascii_letters + string . digits ) @classmethod def get_num ( cls ): \"\"\"\u83b7\u53d6\u4e00\u4e2a\u5b57\u6bcd\u6216\u6570\u5b57 \"\"\" return random . choice ( string . digits ) @classmethod def get_color1 ( cls ): \"\"\"\u83b7\u53d6\u989c\u8272\u503c 3\u5143\u7ec4 \"\"\" return ( random . randint ( 64 , 255 ), random . randint ( 64 , 255 ), random . randint ( 64 , 255 ) ) @classmethod def get_color2 ( cls ): return ( random . randint ( 32 , 127 ), random . randint ( 32 , 127 ), random . randint ( 32 , 127 ) ) @classmethod def get_code ( cls , num ): lst = [] for idx in range ( num ): lst . append ( cls . get_char ()) return '' . join ( lst ) @classmethod def get_num_code ( cls , num ): lst = [] for idx in range ( num ): lst . append ( cls . get_num ()) return '' . join ( lst ) @classmethod def get_verifycode_image ( cls , code , save_path ): \"\"\"\u751f\u6210\u5b57\u6bcd\u9a8c\u8bc1\u7801\u56fe\u7247 @param n: {int} \u5b57\u6bcd\u6570\u91cf @param save_path: {str} \u4fdd\u5b58\u8def\u5f84 @return: None \"\"\" # \u56fe\u7247\u5c3a\u5bf8 width = 60 * len ( code ) height = 60 image = Image . new ( \"RGB\" , ( width , height ), ( 255 , 255 , 255 )) # \u521b\u5efaFont\u5bf9\u8c61 font = ImageFont . truetype ( 'Arial.ttf' , 36 ) # \u521b\u5efaDraw\u5bf9\u8c61 draw = ImageDraw . Draw ( image ) # \u586b\u5145\u6bcf\u4e2a\u50cf\u7d20 # for x in range(width): # for y in range(height): # draw.point((x, y), fill=cls.get_color1()) # \u8f93\u51fa\u6587\u5b57 for idx in range ( len ( code )): draw . text (( 60 * idx + 10 , 10 ), code [ idx ], font = font , fill = 'black' ) # \u6a21\u7cca\u5904\u7406 # image = image.filter(ImageFilter.BLUR) image . save ( save_path , \"jpeg\" , dpi = ( 300.0 , 300.0 )) if __name__ == '__main__' : for i in range ( 10 ): code = VerifyCode . get_num_code ( 4 ) VerifyCode . get_verifycode_image ( code , f \"sample/{code}.jpg\" ) 3\u3001\u6570\u636e\u8bad\u7ec3 \uff081\uff09\u7b2c\u4e00\u6b21\u8bc6\u522b\u6d4b\u8bd5 \u76f4\u63a5\u4f7f\u7528tesseract \u8bc6\u522b\u751f\u6210\u7684\u6570\u636e # -*- coding: utf-8 -*- import glob import os import pytesseract from PIL import Image def to_string ( filename ): name , ext = os . path . splitext ( filename ) code = name . split ( \"/\" )[ - 1 ] img = Image . open ( filename ) img = img . convert ( \"L\" ) # \u8f6c\u4e3a\u9ed1\u767d\u56fe ret = pytesseract . image_to_string ( img ) print ( code , ret ) lst = glob . glob ( \"sample/*.jpg\" ) for file in lst : to_string ( file ) \u7b2c\u4e00\u6b21\u8bc6\u522b\u7ed3\u679c\uff1a \u5b9e\u9645\u5185\u5bb9 \u8bc6\u522b\u7ed3\u679c 3791 379 1 7455 7455 7195 8502 5502 1107 9375 9375 3498 3493 0384 0354 6519 4631 463 1 \uff082\uff09\u7b2c\u4e8c\u6b21\u8bc6\u522b\u6d4b\u8bd5 \u589e\u52a0\u53c2\u6570 --psm 6 ret = pytesseract . image_to_string ( img , config = '--psm 6' ) \u5b9e\u9645\u5185\u5bb9 \u8bc6\u522b\u7ed3\u679c 3791 3791 7455 7455 7195 7195 8502 5502 <- 1107 1107 9375 9375 3498 3493 <- 0384 0354 <- 6519 6519 4631 4631 \uff083\uff09\u7b2c\u4e09\u6b21\u8bc6\u522b \u4e0a\u9762\u7684\u6b65\u9aa4\u603b\u7ed3\u4e3a4\u6b65\uff1a \uff083.1\uff09\u5148\u4f7f\u7528jTessBoxEditorFX\u751f\u6210tif\u6587\u4ef6 jTessBoxEditorFX -> tools->merge tiff \uff083.2\uff09\u751f\u6210box\u6587\u4ef6 bash traindata . sh box \uff083.3\uff09\u6821\u6b63\u6570\u636e jTessBoxEditorFX -> Box Editor->Open\uff0cnum.peng.exp1.tif\uff0c\u8c03\u6574\u6821\u6b63 \uff083.4\uff09\u751f\u6210traineddata\u6587\u4ef6 bash traindata . sh \u6dfb\u52a0\u53c2\u6570 lang='num' \u540e\uff0c\u8bc6\u522b\u6570\u636e ret = pytesseract . image_to_string ( img , lang = 'num' , config = '--psm 6' ) \u8bad\u7ec3\u6570\u636e\u540e\uff0c100%\u51c6\u786e\u7387 \u5b9e\u9645\u5185\u5bb9 \u8bc6\u522b\u7ed3\u679c 3791 3791 7455 7455 7195 7195 8502 8502 1107 1107 9375 9375 3498 3498 0384 0384 6519 6519 4631 4631 \uff084\uff09\u7b2c\u56db\u6b21\u8bc6\u522b \u518d\u4f7f\u7528VerifyCode.py\u6587\u4ef6\u751f\u621010\u4e2a\u65b0\u7684\u9a8c\u8bc1\u7801\u56fe\u7247\uff0c\u518d\u8bd5\u8bd5 \u65b0\u6570\u636e\u7684\u51c6\u786e\u7387\u4e5f\u662f100% \u5b9e\u9645\u5185\u5bb9 \u8bc6\u522b\u7ed3\u679c 2465 2465 8765 8765 1912 1912 5815 5815 3704 3704 0974 0974 9548 9548 4236 4236 2655 2655 3763 3763","title":"jTessBoxEditorFX\u8bad\u7ec3\u6570\u636e\u6b65\u9aa4"},{"location":"\u4eba\u5de5\u667a\u80fd/jTessBoxEditorFX\u8bad\u7ec3\u6570\u636e\u6b65\u9aa4/#_1","text":"\u4e0b\u8f7djTessBoxEditorFX https://sourceforge.net/projects/vietocr/files/jTessBoxEditor/ \u6587\u4ef6\u540d\u5fc5\u987b\u662f\u5982\u4e0b\u683c\u5f0f\uff1a [ lang ] . [ fontname ] . exp [ num ] lang:\u8bed\u8a00\u540d(\u8bad\u7ec3\u751f\u6210\u7684\u793a\u4e3a\u8bed\u8a00) fontname:\u5b57\u4f53\u540d num:\u5e8f\u53f7(\u65e0\u6240\u8c13) \u4e8e\u662f\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u547d\u540d\u4e3a num.peng.exp1.tif \u7684\u6587\u4ef6 1\u3001\u51c6\u5907\u6837\u672c\u56fe\u7247\uff0c\u5408\u5e76\u4e3a.tif\u6587\u4ef6 jTessBoxEditorFX -> tools->merge tiff 2\u3001\u751f\u6210.bok\u6587\u4ef6 tesseract num . peng . exp1 . tif num . peng . exp1 batch . nochop makebox 3\u3001\u5b57\u7b26\u77eb\u6b63 jTessBoxEditorFX -> Box Editor->Open\uff0cnum.peng.exp1.tif\uff0c\u8c03\u6574\u6821\u6b63","title":"\u5b57\u5e93\u8bad\u7ec3"},{"location":"\u4eba\u5de5\u667a\u80fd/jTessBoxEditorFX\u8bad\u7ec3\u6570\u636e\u6b65\u9aa4/#_2","text":"\u793a\u4f8b\u5047\u8bbe\u67093\u4e2a\u6587\u4ef6\uff0ctif\u6587\u4ef6 1\u3001\u521b\u5efafont_properties\u6587\u4ef6 \u6587\u4ef6\u5185\u5bb9\u4e3a \uff1a < fontname > < italic > < bold > < fixed > < serif > < fraktur > # eg : echo peng 0 0 0 0 0 > font_properties 2\u3001\u4ea7\u751f\u5b57\u7b26\u7279\u5f81\u6587\u4ef6.tr tesseract num . peng . exp1 . tif num . peng . exp1 nobatch box . train tesseract num . peng . exp2 . tif num . peng . exp2 nobatch box . train tesseract num . peng . exp3 . tif num . peng . exp3 nobatch box . train 3\u3001\u8ba1\u7b97\u5b57\u7b26\u96c6\u6587\u4ef6 unicharset unicharset_extractor num . peng . exp1 . box num . peng . exp2 . box num . peng . exp3 . box 4\u3001\u805a\u96c6\u5b57\u7b26\u7279\u5f81 \u751f\u6210\u6587\u4ef6 shapetable shapeclustering - F font_properties - U unicharset num . peng . exp1 . tr num . peng . exp2 . tr num . peng . exp3 . tr mftraining - F font_properties - U unicharset - O num . unicharset num . peng . exp1 . tr num . peng . exp2 . tr num . peng . exp3 . tr cntraining num . peng . exp1 . tr num . peng . exp2 . tr num . peng . exp3 . tr 5\u3001\u91cd\u547d\u540d mv shapetable num . shapetable && \\ mv normproto num . normproto && \\ mv inttemp num . inttemp && \\ mv pffmtable num . pffmtable 6\u3001\u751f\u6210\u5b57\u5e93 combine_tessdata num . \u53c2\u8003 \u6587\u5b57\u8bc6\u522b OCR \u8bad\u7ec3\u6837\u672c \u57fa\u4e8eTesseract\u7684OCR\u8bc6\u522b Tesseract-OCR-3.0.5 \u6570\u5b57\u8bc6\u522b\u8bad\u7ec3\u4e0e\u5408\u5e76\u591a\u6b21\u8bad\u7ec3\u6570\u636e python tesseract 4.0 \u5b89\u88c5\u8e29\u8fc7\u7684\u5751\uff08\u57fa\u4e8emacOS \uff09","title":"\u751f\u6210\u8bad\u7ec3\u6570\u636e"},{"location":"\u4eba\u5de5\u667a\u80fd/jTessBoxEditorFX\u8bad\u7ec3\u6570\u636e\u6b65\u9aa4/#_3","text":"1\u3001\u6570\u636e\u5408\u6210\u52a9\u624b \u5047\u8bbe\u53ea\u6709\u4e00\u4e2atif\u6587\u4ef6 num.peng.exp1.tif \u4e0a\u9762\u7684\u6b65\u9aa4\u6709\u70b9\u591a\uff0c\u5408\u6210\u4e00\u4e2a\u811a\u672c\u4fbf\u4e8e\u4f7f\u7528 \u5907\u6ce8\uff1a\u9700\u8981\u8bbe\u7f6e\u597d\u73af\u5883\u53d8\u91cf\uff1a TESSDATA_PREFIX traindata.sh #\uff01/bin/bash # \u6240\u7528\u5230\u7684\u53d8\u91cf lang = \"num\" fontname = \"peng\" num = \"1\" name = \" ${ lang } . ${ fontname } .exp ${ num } \" # \u73af\u5883\u53d8\u91cf\u4e2d\u9700\u8981\u8bbe\u7f6e\u597d\u8d44\u6e90\u6587\u4ef6\u8def\u5f84 TESSDATA_PREFIX \u91cd\u542f\u7535\u8111\u751f\u6548 if [ -e \" ${ name } .tif\" ] ; then echo \"\u6587\u4ef6\u5b58\u5728\" else echo \"\u6587\u4ef6\u4e0d\u5b58\u5728: ${ name } .tif\" exit 0 fi # \u751f\u6210box box = $1 if [[ ${ box } == 'box' ]] ; then echo \"\u751f\u6210box\" tesseract \" ${ name } .tif\" ${ name } batch.nochop makebox exit 0 else echo \"\u751f\u6210\u8bad\u7ec3\u6570\u636e\" fi # 1\u3001\u521b\u5efafont_properties\u6587\u4ef6 echo 'peng 0 0 0 0 0' > font_properties && \\ # 2\u3001\u4ea7\u751f\u5b57\u7b26\u7279\u5f81\u6587\u4ef6.tr tesseract \" ${ name } .tif\" ${ name } nobatch box.train && \\ # 3\u3001\u8ba1\u7b97\u5b57\u7b26\u96c6\u6587\u4ef6 unicharset unicharset_extractor \" ${ name } .box\" && \\ # 4. \u805a\u96c6\u5b57\u7b26\u7279\u5f81 \u751f\u6210\u6587\u4ef6 shapetable shapeclustering -F font_properties -U unicharset \" ${ name } .tr\" && \\ mftraining -F font_properties -U unicharset -O \" ${ lang } .unicharset\" \" ${ name } .tr\" && \\ cntraining \" ${ name } .tr\" && \\ # 5\u3001\u91cd\u547d\u540d mv shapetable \" ${ lang } .shapetable\" && \\ mv normproto \" ${ lang } .normproto\" && \\ mv inttemp \" ${ lang } .inttemp\" && \\ mv pffmtable \" ${ lang } .pffmtable\" && \\ # 6\u3001\u751f\u6210\u5b57\u5e93 combine_tessdata \" ${ lang } .\" && \\ # \u62f7\u8d1d\u5b57\u5e93 cp *.traineddata ${ TESSDATA_PREFIX } && \\ echo \"\u5b8c\u6210\" \u4f7f\u7528\u65b9\u5f0f \u5c06\u6587\u4ef6\u62f7\u8d1d\u5230\u6837\u672c\u6570\u636e\u76ee\u5f55\u4e0b # \u751f\u6210box\u6587\u4ef6 bash traindata.sh box # \u751f\u6210traineddata\u6587\u4ef6 bash traindata.sh 2\u3001\u6570\u636e\u51c6\u5907 \u6267\u884c\u4e0b\u9762\u7684python\u4ee3\u7801\uff0c\u5728\u76ee\u5f55sample\u4e0b\u751f\u621010\u4e2a\u6837\u672c VerifyCode.py # -*- coding: utf-8 -*- import random import string from PIL import Image , ImageFilter , ImageFont , ImageDraw class VerifyCode ( object ): @classmethod def get_char ( cls ): \"\"\"\u83b7\u53d6\u4e00\u4e2a\u5b57\u6bcd\u6216\u6570\u5b57 \"\"\" return random . choice ( string . ascii_letters + string . digits ) @classmethod def get_num ( cls ): \"\"\"\u83b7\u53d6\u4e00\u4e2a\u5b57\u6bcd\u6216\u6570\u5b57 \"\"\" return random . choice ( string . digits ) @classmethod def get_color1 ( cls ): \"\"\"\u83b7\u53d6\u989c\u8272\u503c 3\u5143\u7ec4 \"\"\" return ( random . randint ( 64 , 255 ), random . randint ( 64 , 255 ), random . randint ( 64 , 255 ) ) @classmethod def get_color2 ( cls ): return ( random . randint ( 32 , 127 ), random . randint ( 32 , 127 ), random . randint ( 32 , 127 ) ) @classmethod def get_code ( cls , num ): lst = [] for idx in range ( num ): lst . append ( cls . get_char ()) return '' . join ( lst ) @classmethod def get_num_code ( cls , num ): lst = [] for idx in range ( num ): lst . append ( cls . get_num ()) return '' . join ( lst ) @classmethod def get_verifycode_image ( cls , code , save_path ): \"\"\"\u751f\u6210\u5b57\u6bcd\u9a8c\u8bc1\u7801\u56fe\u7247 @param n: {int} \u5b57\u6bcd\u6570\u91cf @param save_path: {str} \u4fdd\u5b58\u8def\u5f84 @return: None \"\"\" # \u56fe\u7247\u5c3a\u5bf8 width = 60 * len ( code ) height = 60 image = Image . new ( \"RGB\" , ( width , height ), ( 255 , 255 , 255 )) # \u521b\u5efaFont\u5bf9\u8c61 font = ImageFont . truetype ( 'Arial.ttf' , 36 ) # \u521b\u5efaDraw\u5bf9\u8c61 draw = ImageDraw . Draw ( image ) # \u586b\u5145\u6bcf\u4e2a\u50cf\u7d20 # for x in range(width): # for y in range(height): # draw.point((x, y), fill=cls.get_color1()) # \u8f93\u51fa\u6587\u5b57 for idx in range ( len ( code )): draw . text (( 60 * idx + 10 , 10 ), code [ idx ], font = font , fill = 'black' ) # \u6a21\u7cca\u5904\u7406 # image = image.filter(ImageFilter.BLUR) image . save ( save_path , \"jpeg\" , dpi = ( 300.0 , 300.0 )) if __name__ == '__main__' : for i in range ( 10 ): code = VerifyCode . get_num_code ( 4 ) VerifyCode . get_verifycode_image ( code , f \"sample/{code}.jpg\" ) 3\u3001\u6570\u636e\u8bad\u7ec3 \uff081\uff09\u7b2c\u4e00\u6b21\u8bc6\u522b\u6d4b\u8bd5 \u76f4\u63a5\u4f7f\u7528tesseract \u8bc6\u522b\u751f\u6210\u7684\u6570\u636e # -*- coding: utf-8 -*- import glob import os import pytesseract from PIL import Image def to_string ( filename ): name , ext = os . path . splitext ( filename ) code = name . split ( \"/\" )[ - 1 ] img = Image . open ( filename ) img = img . convert ( \"L\" ) # \u8f6c\u4e3a\u9ed1\u767d\u56fe ret = pytesseract . image_to_string ( img ) print ( code , ret ) lst = glob . glob ( \"sample/*.jpg\" ) for file in lst : to_string ( file ) \u7b2c\u4e00\u6b21\u8bc6\u522b\u7ed3\u679c\uff1a \u5b9e\u9645\u5185\u5bb9 \u8bc6\u522b\u7ed3\u679c 3791 379 1 7455 7455 7195 8502 5502 1107 9375 9375 3498 3493 0384 0354 6519 4631 463 1 \uff082\uff09\u7b2c\u4e8c\u6b21\u8bc6\u522b\u6d4b\u8bd5 \u589e\u52a0\u53c2\u6570 --psm 6 ret = pytesseract . image_to_string ( img , config = '--psm 6' ) \u5b9e\u9645\u5185\u5bb9 \u8bc6\u522b\u7ed3\u679c 3791 3791 7455 7455 7195 7195 8502 5502 <- 1107 1107 9375 9375 3498 3493 <- 0384 0354 <- 6519 6519 4631 4631 \uff083\uff09\u7b2c\u4e09\u6b21\u8bc6\u522b \u4e0a\u9762\u7684\u6b65\u9aa4\u603b\u7ed3\u4e3a4\u6b65\uff1a \uff083.1\uff09\u5148\u4f7f\u7528jTessBoxEditorFX\u751f\u6210tif\u6587\u4ef6 jTessBoxEditorFX -> tools->merge tiff \uff083.2\uff09\u751f\u6210box\u6587\u4ef6 bash traindata . sh box \uff083.3\uff09\u6821\u6b63\u6570\u636e jTessBoxEditorFX -> Box Editor->Open\uff0cnum.peng.exp1.tif\uff0c\u8c03\u6574\u6821\u6b63 \uff083.4\uff09\u751f\u6210traineddata\u6587\u4ef6 bash traindata . sh \u6dfb\u52a0\u53c2\u6570 lang='num' \u540e\uff0c\u8bc6\u522b\u6570\u636e ret = pytesseract . image_to_string ( img , lang = 'num' , config = '--psm 6' ) \u8bad\u7ec3\u6570\u636e\u540e\uff0c100%\u51c6\u786e\u7387 \u5b9e\u9645\u5185\u5bb9 \u8bc6\u522b\u7ed3\u679c 3791 3791 7455 7455 7195 7195 8502 8502 1107 1107 9375 9375 3498 3498 0384 0384 6519 6519 4631 4631 \uff084\uff09\u7b2c\u56db\u6b21\u8bc6\u522b \u518d\u4f7f\u7528VerifyCode.py\u6587\u4ef6\u751f\u621010\u4e2a\u65b0\u7684\u9a8c\u8bc1\u7801\u56fe\u7247\uff0c\u518d\u8bd5\u8bd5 \u65b0\u6570\u636e\u7684\u51c6\u786e\u7387\u4e5f\u662f100% \u5b9e\u9645\u5185\u5bb9 \u8bc6\u522b\u7ed3\u679c 2465 2465 8765 8765 1912 1912 5815 5815 3704 3704 0974 0974 9548 9548 4236 4236 2655 2655 3763 3763","title":"\u7efc\u5408\u793a\u4f8b"},{"location":"\u4eba\u5de5\u667a\u80fd/\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406/","text":"\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406\u77e5\u8bc6\u5165\u95e8\u4e0e\u5e94\u7528 http://bit.baidu.com/Course/detail/id/56.html \u6570\u636e\u5206\u6790\u4e2d\u7684\u7f3a\u5931\u503c\u5904\u7406 https://blog.csdn.net/lujiandong1/article/details/52654703 \u5bf9\u542b\u566a\u6570\u636e\u8fdb\u884c\u5e73\u6ed1\u5904\u7406 https://ww2.mathworks.cn/help/matlab/ref/smoothdata.html","title":"\u4e2d\u6587\u81ea\u7136\u8bed\u8a00\u5904\u7406"},{"location":"\u4eba\u5de5\u667a\u80fd/\u51c6\u786e\u7387/","text":"\u51c6\u786e\u7387(accuracy): \u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6d4b\u8bd5\u6570\u636e\u96c6\uff0c\u5206\u7c7b\u5668\u6b63\u786e\u5206\u7c7b\u7684\u6837\u672c\u6570\u4e0e\u603b\u6837\u672c\u6570\u4e4b\u6bd4 https://www.cnblogs.com/sddai/p/5696870.html http://www.cnblogs.com/bluepoint2009/archive/2012/09/18/precision-recall-f_measures.html \u4e3e\u4f8b\uff1a \u5b9e\u9645\uff1a \u7537\u751f 80 \u5973\u751f 20 \u6311\u9009\u5973\u751f\uff1a 50 \uff0820\u5973\u751f + 30\u7537\u751f\uff09","title":"\u51c6\u786e\u7387"},{"location":"\u4eba\u5de5\u667a\u80fd/\u6570\u636e\u6316\u6398/","text":"\u534f\u540c\u8fc7\u6ee4 \u5229\u7528\u4ed6\u4eba\u7684\u559c\u597d\u6765\u8fdb\u884c\u63a8\u8350\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u662f\u5927\u5bb6\u4e00\u8d77\u4ea7\u751f\u7684\u63a8\u8350\u3002 \u5de5\u4f5c\u539f\u7406\uff1a \u5982\u679c\u8981\u63a8\u8350\u4e00\u672c\u4e66\u7ed9\u4f60\uff0c\u6211\u4f1a\u5728\u7f51\u7ad9\u4e0a\u67e5\u627e\u4e00\u4e2a\u548c\u4f60\u7c7b\u4f3c\u7684\u7528\u6237\uff0c\u7136\u540e\u5c06\u4ed6\u559c\u6b22\u7684\u4e66\u7c4d\u63a8\u8350\u7ed9\u4f60 \u66fc\u54c8\u987f\u8ddd\u79bb \u76f8\u5f53\u4e8e\u4e09\u89d2\u5f62\u4e24\u8fb9\u4e4b\u548c \u516c\u5f0f $$ d = |x_1 - x_2| + |y_1 - y_2| $$ \u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb \u4e24\u70b9\u76f4\u7ebf\u8ddd\u79bb\uff0c\u76f8\u5f53\u4e8e\u4e09\u89d2\u5f62\u7b2c\u4e09\u8fb9 \u5229\u7528\u52fe\u80a1\u5b9a\u7406\u8ba1\u7b97 \u516c\u5f0f $$ d = \\sqrt{(x_1 -x_2)^2 + (y_1 -y_2)^2} $$ \u95f5\u53ef\u592b\u65af\u57fa\u8ddd\u79bb \u5c06\u66fc\u54c8\u987f\u8ddd\u79bb\u548c\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u5f52\u7eb3\u6210\u4e00\u4e2a\u516c\u5f0f \u516c\u5f0f $$ d(x, y) = (\\sum_{k=1}^n{|x_k - y_k|^r})^{\\frac{1}{r}} $$ \u5176\u4e2d r = 1 \u66fc\u54c8\u987f\u8ddd\u79bb r = 2 \u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb $r = \\infty$ \u6781\u5927\u8ddd\u79bb r\u503c\u8d8a\u5927,\u5355\u4e2a\u7ef4\u5ea6\u7684\u5dee\u503c\u5927\u5c0f\u4f1a\u5bf9\u6574\u4f53\u8ddd\u79bb\u6709\u66f4\u5927\u7684\u5f71\u54cd \u8ba1\u7b97\u793a\u4f8b 1\u3001\u4e8c\u7ef4\u6a21\u578b \u6570\u636e \u70b9 | x | y - | -| - A | 5| 5 B | 2| 5 C | 1| 4 D | 4 | 2 \u66fc\u54c8\u987f\u8ddd\u79bb \u70b9 | \u548cD\u7684\u8ddd\u79bb\u8ba1\u7b97 | \u548cD\u7684\u8ddd\u79bb - | - | - A | $|5-4| + |5-2| = 1 + 3 $ | 4 B | $|2-4| + |5-2| = 2 + 3 $ | 5 C | $|1-4| + |4-2| = 3 + 2 $ | 5 \u6b27\u5f0f\u8ddd\u79bb \u70b9 | \u548cD\u7684\u8ddd\u79bb\u8ba1\u7b97 | \u548cD\u7684\u8ddd\u79bb - | - | - A | $\\sqrt{(5-4)^2 + (5-2)^2} = \\sqrt{1 + 9} = \\sqrt{10}$ | 3.16 B | $\\sqrt{(2-4)^2 + (5-2)^2} = \\sqrt{4 + 9} = \\sqrt{13}$ | 3.60 C | $\\sqrt{(1-4)^2 + (4-2)^2} = \\sqrt{9 + 4} = \\sqrt{13}$ | 3.60 2\u3001N\u7ef4\u6a21\u578b \u6211\u4eec\u5728\u8ba1\u7b97\u4e24\u4e2a\u7528\u6237\u7684\u8ddd\u79bb\u65f6\uff0c\u53ea\u91c7\u7528\u4ed6\u4eec\u90fd\u8bc4\u4ef7\u8fc7\u7684\u9879\u76ee \u66fc\u54c8\u987f\u8ddd\u79bb\u548c\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u5728\u6570\u636e\u5b8c\u6574\u7684\u60c5\u51b5\u4e0b\u6548\u679c\u6700\u597d \u9879\u76ee\\\u8bc4\u5206 A B Difference $Difference^2$ a 3.5 2 1.5 2.25 b 2 3.5 1.5 2.25 c - 4 - - d 4.5 - - - e 5 2 3 9 f 1.5 3.5 2 4 g 2.5 - - - h 2 3 1 1 Manhattan Distance (\u66fc\u54c8\u987f) 9 sum of squares 18.50 Euclidean Distance (\u6b27\u51e0\u91cc\u5f97) 4.30 \u8ba1\u7b97\u8fc7\u7a0b $Euclidean = \\sqrt{(3.5-2)^2 + (2-3.5)^2 + (5 -2)^2 + (1.5-3.5)^2 + (2-3)^2}$ $= \\sqrt{1.5^2 + (-1.5)^2 + 3^2 + (-2)^2 + (-1)^2} $ $= \\sqrt{2.25 + 2.25 + 9 + 4 + 1} $ $= \\sqrt{18.5}$ $= 4.3$ Python\u4ee3\u7801\u5b9e\u73b0 # -*- coding: utf-8 -*- # \u7528\u6237\u6570\u636e\uff0c\u683c\u5f0f\uff1a[\u7528\u6237: {\u4e50\u961f: \u8bc4\u5206}] users = { \"Hailey\" : { \"Broken Bells\" : 4 , \"Deadmau5\" : 1 , \"Norah Jones\" : 4 , \"The Strokes\" : 4 , \"Vampire Weekend\" : 1 }, \"Jordyn\" : { \"Broken Bells\" : 4.5 , \"Deadmau5\" : 4 , \"Norah Jones\" : 5 , \"Phoeni x\" : 5 , \"Slightly Stoopid\" : 4.5 , \"The Strokes\" : 4 , \"Vampire Weekend\" : 4 } } import math def manhattan ( rating1 , rating2 ): \"\"\" \u66fc\u54c8\u987f\u8ddd\u79bb rating1\u548crating2\u53c2\u6570\u4e2d\u5b58\u50a8\u7684\u6570\u636e\u683c\u5f0f\u5747\u4e3a {'The Strokes': 3.0, 'Slightly Stoopid': 2.5} \"\"\" distance = 0 # \u53d6key \u7684\u4ea4\u96c6 keys = rating1 . keys () & rating2 . keys () for key in keys : distance += abs ( rating1 [ key ] - rating2 [ key ]) return distance # print(manhattan(users[\"Hailey\"], users[\"Jordyn\"])) def euclidean ( rating1 , rating2 ): \"\"\" \u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb rating1\u548crating2\u53c2\u6570\u4e2d\u5b58\u50a8\u7684\u6570\u636e\u683c\u5f0f\u5747\u4e3a {'The Strokes': 3.0, 'Slightly Stoopid': 2.5} \"\"\" distance = 0 # \u53d6key \u7684\u4ea4\u96c6 keys = rating1 . keys () & rating2 . keys () for key in keys : distance += math . pow ( rating1 [ key ] - rating2 [ key ], 2 ) return math . sqrt ( distance ) # print(euclidean(users[\"Hailey\"], users[\"Jordyn\"])) def minkowski ( rating1 , rating2 , r ): \"\"\" \u95f5\u53ef\u592b\u65af\u57fa\u8ddd\u79bb r = 1 \u66fc\u54c8\u987f\u8ddd\u79bb r = 2 \u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb rating1\u548crating2\u53c2\u6570\u4e2d\u5b58\u50a8\u7684\u6570\u636e\u683c\u5f0f\u5747\u4e3a {'The Strokes': 3.0, 'Slightly Stoopid': 2.5} \"\"\" distance = 0 # \u53d6key \u7684\u4ea4\u96c6 keys = rating1 . keys () & rating2 . keys () for key in keys : distance += pow ( abs ( rating1 [ key ] - rating2 [ key ]), r ) return pow ( distance , 1 / r ) # print(minkowski(users[\"Hailey\"], users[\"Jordyn\"], r=2)) def compute_near_neighbors ( username , users ): \"\"\"\u8ba1\u7b97\u6240\u6709\u7528\u6237\u81f3username\u7528\u6237\u7684\u8ddd\u79bb\uff0c\u5012\u5e8f\u6392\u5217\u5e76\u8fd4\u56de\u7ed3\u679c\u5217\u8868\"\"\" distances = [] for user in users : if user != username : distance = manhattan ( users [ username ], users [ user ]) distances . append (( distance , user )) # \u6309\u8ddd\u79bb\u6392\u5e8f\u2014\u2014\u8ddd\u79bb\u8fd1\u7684\u6392\u5728\u524d\u9762 distances . sort () return distances # print(compute_near_neighbors(\"Hailey\", users)) def recommend ( username , users ): \"\"\"\u8fd4\u56de\u63a8\u8350\u7ed3\u679c\u5217\u8868\"\"\" # \u627e\u5230\u8ddd\u79bb\u6700\u8fd1\u7684\u7528\u6237 nearest = compute_near_neighbors ( username , users )[ 0 ][ 1 ] recommendations = [] # \u627e\u51fa\u8fd9\u4f4d\u7528\u6237\u8bc4\u4ef7\u8fc7\u3001\u4f46\u81ea\u5df1\u672a\u66fe\u8bc4\u4ef7\u7684\u4e50\u961f neighborRatings = users [ nearest ] userRatings = users [ username ] for artist in neighborRatings : if artist not in userRatings : recommendations . append (( artist , neighborRatings [ artist ])) # \u6309\u7167\u8bc4\u5206\u8fdb\u884c\u9ad8\u5230\u4f4e\u6392\u5e8f return sorted ( recommendations , key = lambda item : item [ 1 ], reverse = True ) # print(recommend(\"Hailey\", users)) \u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570 \u5206\u6570\u81a8\u80c0: \u6bcf\u4e2a\u7528\u6237\u7684\u6253\u5206\u6807\u51c6\u975e\u5e38\u4e0d\u540c \u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\u7528\u4e8e\u8861\u91cf\u4e24\u4e2a\u53d8\u91cf\u4e4b\u95f4\u7684\u76f8\u5173\u6027 \u5b83\u7684\u503c\u5728-1\u81f31\u4e4b\u95f4\uff0c1\u8868\u793a\u5b8c\u5168\u543b\u5408\uff0c-1\u8868\u793a\u5b8c\u5168\u76f8\u6096\u3002 \u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\u7684\u8ba1\u7b97\u516c\u5f0f $$ r = \\frac{ \\sum_{i=1}^n{ (x_i-\\overline{x})(y_i-\\overline{y}) } } { \\sqrt{\\sum_{i=1}^n(x_i-\\overline{x})^2} \\sqrt{\\sum_{i=1}^n(y_i-\\overline{y})^2} } $$ \u8ba1\u7b97\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\u7684\u8fd1\u4f3c\u503c $$ r = \\frac{ \\sum_{i=1}^nx_iy_i - \\frac{\\sum_{i=1}^nx_i\\sum_{i=1}^ny_i}{n} } { \\sqrt{\\sum_{i=1}^nx_i^2 - \\frac{(\\sum_{i=1}^nx_i)^2}{n}} \\sqrt{\\sum_{i=1}^ny_i^2 - \\frac{(\\sum_{i=1}^ny_i)^2}{n}} } $$ \u5206\u89e3\u8ba1\u7b97\u793a\u4f8b @| a | b | c | d |e -|-|-|-|-|- A | 4.75 | 4.5 | 5 | 4.25 | 4 B | 4 | 3 | 5 | 2 | 1 \u7b2c\u4e00\u6b65\uff0c\u8ba1\u7b97\u5206\u5b50 $\\sum_{i=1}^nx_iy_i$ $=(4.75 \\times 4) + (4.5 \\times 3) + (5 \\times 5) + (4.25 \\times 2) + (4 \\times 1)$ $= 19 + 13.5 + 25 + 8.5 + 4$ $=70$ $\\frac{\\sum_{i=1}^nx_i\\sum_{i=1}^ny_i}{n}$ $=\\frac{(4.75+4.5 +5 +4.25+4) \\times ( 4 +3 +5 +2 + 1)}{5}$ $=\\frac{22.50 \\times 15}{5}$ $=\\frac{337.5}{5}$ $=67.50$ \u6240\u4ee5\uff0c\u5206\u5b50\u4e3a $\\sum_{i=1}^nx_iy_i - \\frac{\\sum_{i=1}^nx_i\\sum_{i=1}^ny_i}{n}$ $= 70 - 67.5$ $=2.5$ \u7b2c\u4e8c\u6b65\uff0c\u8ba1\u7b97\u5206\u6bcd \u5148\u8ba1\u7b97A $\\sum_{i=1}^nx_i^2$ $=4.75^2 + 4.5^2 + 5^2 + 4.25^2 + 4^2$ $=22.56 + 20.25 + 25 + 18.06 + 16$ $=101.874$ $\\frac{(\\sum_{i=1}^nx_i)^2}{n}$ $=\\frac{(4.75 + 4.5 + 5 + 4.25 + 4)^2}{5}$ $=\\frac{506.250}{5}$ $=101.250$ \u540c\u6837\u7684\u65b9\u6cd5\u8ba1\u7b97B $\\sum_{i=1}^ny_i^2$ $= 4^2 + 3^2 + 5^2 + 2^2 + 1^2$ $=16 + 9 + 25 + 4 + 1$ $=55$ $\\frac{(\\sum_{i=1}^ny_i)^2}{n}$ $=\\frac{(4 + 3+ 5+2+ 1)^2}{5}$ $=\\frac{225}/{5}$ $=45$ \u6240\u4ee5\uff0c\u5206\u6bcd\u4e3a $\\sqrt{\\sum_{i=1}^nx_i^2 - \\frac{(\\sum_{i=1}^nx_i)^2}{n}}\\sqrt{\\sum_{i=1}^ny_i^2 - \\frac{(\\sum_{i=1}^ny_i)^2}{n}}$ $=\\sqrt{101.874 - 101.250}\\sqrt{55 - 45}$ $=\\sqrt{0.62}\\sqrt{10}$ $=0.789 \\times 3.162$ $=2.494$ \u6700\u540e\u8ba1\u7b97r $r = \\frac{2.5}{2.494}$ $= 1.002$ \u56e0\u6b64\uff0cA\u548cB\u7684\u504f\u597d\u5b8c\u5168\u543b\u5408 def pearson ( rating1 , rating2 ): \"\"\" \u8ba1\u7b97\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570 \"\"\" sum_xy = 0 sum_x = 0 sum_y = 0 sum_x2 = 0 sum_y2 = 0 # \u53d6key \u7684\u4ea4\u96c6 keys = rating1 . keys () & rating2 . keys () n = len ( keys ) for key in keys : x = rating1 [ key ] y = rating2 [ key ] sum_xy += x * y sum_x += x sum_y += y sum_x2 += pow ( x , 2 ) sum_y2 += pow ( y , 2 ) # \u8ba1\u7b97\u5206\u6bcd denominator = math . sqrt ( sum_x2 - pow ( sum_x , 2 ) / n ) * math . sqrt ( sum_y2 - pow ( sum_y , 2 ) / n ) if denominator == 0 : return 0 else : # \u8ba1\u7b97\u5206\u5b50 numerator = sum_xy - ( sum_x * sum_y ) / n return numerator / denominator # \u8ba1\u7b97\u4e0a\u9762\u793a\u4f8b users = { \"A\" : { \"a\" : 4.75 , \"b\" : 4.5 , \"c\" : 5 , \"d\" : 4.25 , \"e\" : 4 }, \"B\" : { \"a\" : 4 , \"b\" : 3 , \"c\" : 5 , \"d\" : 2 , \"e\" : 1 } } print ( pearson ( users [ 'A' ], users [ 'B' ])) # 0.9999999999999998 \u4f59\u5f26\u76f8\u4f3c\u5ea6 \u7a00\u758f\u6027\u95ee\u9898 \u5f53\u975e\u96f6\u503c\u5f88\u7a00\u5c11\u4e86\uff0c\u4e5f\u5c31\u4e0d\u80fd\u8ba1\u7b97\u4e24\u9879\u76ee\u4e4b\u95f4\u7684\u8ddd\u79bb \u4f59\u5f26\u76f8\u4f3c\u5ea6\u7684\u8ba1\u7b97\u4e2d\u4f1a\u7565\u8fc7\u8fd9\u4e9b\u975e\u96f6\u503c \u516c\u5f0f $$ \\cos(x, y) = \\frac{x \\centerdot y}{| x| \\times |y|} $$ \u5176\u4e2d\uff0c\u201c\u00b7\u201d\u53f7\u8868\u793a\u6570\u91cf\u79ef\u3002\u201c||x||\u201d\u8868\u793a\u5411\u91cfx\u7684\u6a21\uff0c\u8ba1\u7b97\u516c\u5f0f\u662f\uff1a $$ \\sqrt{\\sum_{i=1}^nx_i{^2}} $$ \u4f59\u5f26\u76f8\u4f3c\u5ea6\u7684\u8303\u56f4\u4ece1\u5230-1\uff0c1\u8868\u793a\u5b8c\u5168\u5339\u914d\uff0c-1\u8868\u793a\u5b8c\u5168\u76f8\u6096 \u8ba1\u7b97\u793a\u4f8b \u9879\u76ee | a | b | c | d | e -|-|-|-|-|- A |4.75 |4.5|5 |4.25|4 B |4|3|5|2|1 \u4e24\u5411\u91cf\u4e3a $x = (4.75, 4.5, 5, 4.25, 4)$ $y = (4, 3, 5, 2, 1)$ \u5206\u5b50\u6c42\u6570\u91cf\u79ef $x \\centerdot y = (4.75 \\times 4) + (4.5 \\times 3) + ( 5 \\times 5 ) + (4.25 \\times 2)+( 4 \\times 1)$ $= 19 + 13.5 + 25 + 8.50 + 4$ $= 70$ \u5206\u6bcd\u6c42\u6a21\uff1a $$| x |= \\sqrt{4.75^2+4.5^2+ 5^2+ 4.25^2+ 4^2} = \\sqrt{101.875} = 10.09$$ $$| y |= \\sqrt{4^2+3^2+5^2+ 2^2+1^2} = \\sqrt{55} = 7.416$$ \u4f59\u5f26\u503c $$ \\cos(x, y) = \\frac{70}{10.09 \\times 7.416} = \\frac{70}{74.83} = 0.935 $$ \u5982\u679c\u6570\u636e\u5b58\u5728\u201c\u5206\u6570\u81a8\u80c0\u201d\u95ee\u9898\uff0c\u5c31\u4f7f\u7528\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\u3002 \u5982\u679c\u6570\u636e\u6bd4\u8f83\u201c\u5bc6\u96c6\u201d\uff0c\u53d8\u91cf\u4e4b\u95f4\u57fa\u672c\u90fd\u5b58\u5728\u516c\u6709\u503c\uff0c\u4e14\u8fd9\u4e9b\u8ddd\u79bb\u6570\u636e\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u90a3\u5c31\u4f7f\u7528\u6b27\u51e0\u91cc\u5f97\u6216\u66fc\u54c8\u987f\u8ddd\u79bb\u3002 \u5982\u679c\u6570\u636e\u662f\u7a00\u758f\u7684\uff0c\u5219\u4f7f\u7528\u4f59\u5f26\u76f8\u4f3c\u5ea6\u3002 \u89e3\u51b3\u7a00\u758f\u6570\u636e\u95ee\u9898\uff08\u6548\u679c\u90fd\u4e0d\u597d\uff09 1\u3001\u4eba\u4eec\u7ed9\u97f3\u4e50\u6253\u5206\u662f\u4ece1\u52305\u5206\uff0c\u90a3\u4e9b\u6ca1\u6709\u6253\u5206\u7684\u9879\u76ee\u5c31\u7edf\u4e00\u7ed90\u5206 2\u3001\u8ba1\u7b97\u201c\u5e73\u5747\u503c\u201d\u2014\u2014\u5c06\u4e24\u4eba\u5171\u540c\u8bc4\u4ef7\u8fc7\u7684\u6b4c\u66f2\u5206\u6570\u9664\u4ee5\u6b4c\u66f2\u6570\u91cf \u603b\u4e4b\uff0c\u66fc\u54c8\u987f\u8ddd\u79bb\u548c\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u5728\u6570\u636e\u5b8c\u6574\u7684\u60c5\u51b5\u4e0b\u4f1a\u8fd0\u4f5c\u5f97\u975e\u5e38\u597d\uff0c \u5982\u679c\u6570\u636e\u6bd4\u8f83\u7a00\u758f\uff0c\u5219\u8981\u8003\u8651\u4f7f\u7528\u4f59\u5f26\u8ddd\u79bb\u3002 K\u6700\u90bb\u8fd1\u7b97\u6cd5 \u5728\u534f\u540c\u8fc7\u6ee4\u4e2d\u53ef\u4ee5\u4f7f\u7528K\u6700\u90bb\u8fd1\u7b97\u6cd5\u6765\u627e\u51faK\u4e2a\u6700\u76f8\u4f3c\u7684\u7528\u6237 \u53ea\u4f9d\u9760\u6700\u76f8\u4f3c\u7684 \u4e00\u4e2a \u7528\u6237\u6765\u505a\u63a8\u8350\uff0c\u5982\u679c\u8fd9\u4e2a\u7528\u6237\u6709\u4e9b\u7279\u6b8a\u7684\u504f\u597d\uff0c\u5c31\u4f1a\u76f4\u63a5\u53cd\u6620\u5728\u63a8\u8350\u5185\u5bb9\u91cc\u3002 \u89e3\u51b3\u65b9\u6cd5\u4e4b\u4e00\u662f\u627e\u5bfb\u591a\u4e2a\u76f8\u4f3c\u7684\u7528\u6237\uff0c\u8fd9\u91cc\u5c31\u8981\u7528\u5230K\u6700\u90bb\u8fd1\u7b97\u6cd5\u4e86\u3002 \u4f8b\u5982\uff1aK=3 Person | \u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570 | \u5f71\u54cd\u503c |\u9879\u76ee\u8bc4\u5206| \u52a0\u6743\u8bc4\u5206 - | -| -|-|- A | 0.8 | 40% | 3.5 | 1.40 B | 0.7 | 35% |5 | 1.75 C | 0.5 | 25% |4.5 |1.125 \u6c47\u603b | | | | 4.275 \u8ba1\u7b97\u8d21\u732e\u6bd4\u91cd $ total = 0.8 + 0.7 + 0.5 = 2.0 $ $ influence_A = 0.8 / 2 = 40\\% $ $ influence_B = 0.7 / 2 = 35\\% $ $ influence_C = 0.5 / 2 = 25\\% $ \u8ba1\u7b97\u52a0\u6743\u8bc4\u5206 $rating = (3.5 \\times 40\\%) + (5 \\times 35\\%)+ (4.5 \\times 25\\%)$ $=1.40+ 1.75 + 1.125 $ $=4.275$","title":"\u6570\u636e\u6316\u6398"},{"location":"\u4eba\u5de5\u667a\u80fd/\u6570\u636e\u6316\u6398/#_1","text":"\u5229\u7528\u4ed6\u4eba\u7684\u559c\u597d\u6765\u8fdb\u884c\u63a8\u8350\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u662f\u5927\u5bb6\u4e00\u8d77\u4ea7\u751f\u7684\u63a8\u8350\u3002 \u5de5\u4f5c\u539f\u7406\uff1a \u5982\u679c\u8981\u63a8\u8350\u4e00\u672c\u4e66\u7ed9\u4f60\uff0c\u6211\u4f1a\u5728\u7f51\u7ad9\u4e0a\u67e5\u627e\u4e00\u4e2a\u548c\u4f60\u7c7b\u4f3c\u7684\u7528\u6237\uff0c\u7136\u540e\u5c06\u4ed6\u559c\u6b22\u7684\u4e66\u7c4d\u63a8\u8350\u7ed9\u4f60","title":"\u534f\u540c\u8fc7\u6ee4"},{"location":"\u4eba\u5de5\u667a\u80fd/\u6570\u636e\u6316\u6398/#_2","text":"\u76f8\u5f53\u4e8e\u4e09\u89d2\u5f62\u4e24\u8fb9\u4e4b\u548c \u516c\u5f0f $$ d = |x_1 - x_2| + |y_1 - y_2| $$","title":"\u66fc\u54c8\u987f\u8ddd\u79bb"},{"location":"\u4eba\u5de5\u667a\u80fd/\u6570\u636e\u6316\u6398/#_3","text":"\u4e24\u70b9\u76f4\u7ebf\u8ddd\u79bb\uff0c\u76f8\u5f53\u4e8e\u4e09\u89d2\u5f62\u7b2c\u4e09\u8fb9 \u5229\u7528\u52fe\u80a1\u5b9a\u7406\u8ba1\u7b97 \u516c\u5f0f $$ d = \\sqrt{(x_1 -x_2)^2 + (y_1 -y_2)^2} $$","title":"\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb"},{"location":"\u4eba\u5de5\u667a\u80fd/\u6570\u636e\u6316\u6398/#_4","text":"\u5c06\u66fc\u54c8\u987f\u8ddd\u79bb\u548c\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u5f52\u7eb3\u6210\u4e00\u4e2a\u516c\u5f0f \u516c\u5f0f $$ d(x, y) = (\\sum_{k=1}^n{|x_k - y_k|^r})^{\\frac{1}{r}} $$ \u5176\u4e2d r = 1 \u66fc\u54c8\u987f\u8ddd\u79bb r = 2 \u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb $r = \\infty$ \u6781\u5927\u8ddd\u79bb r\u503c\u8d8a\u5927,\u5355\u4e2a\u7ef4\u5ea6\u7684\u5dee\u503c\u5927\u5c0f\u4f1a\u5bf9\u6574\u4f53\u8ddd\u79bb\u6709\u66f4\u5927\u7684\u5f71\u54cd","title":"\u95f5\u53ef\u592b\u65af\u57fa\u8ddd\u79bb"},{"location":"\u4eba\u5de5\u667a\u80fd/\u6570\u636e\u6316\u6398/#_5","text":"1\u3001\u4e8c\u7ef4\u6a21\u578b \u6570\u636e \u70b9 | x | y - | -| - A | 5| 5 B | 2| 5 C | 1| 4 D | 4 | 2 \u66fc\u54c8\u987f\u8ddd\u79bb \u70b9 | \u548cD\u7684\u8ddd\u79bb\u8ba1\u7b97 | \u548cD\u7684\u8ddd\u79bb - | - | - A | $|5-4| + |5-2| = 1 + 3 $ | 4 B | $|2-4| + |5-2| = 2 + 3 $ | 5 C | $|1-4| + |4-2| = 3 + 2 $ | 5 \u6b27\u5f0f\u8ddd\u79bb \u70b9 | \u548cD\u7684\u8ddd\u79bb\u8ba1\u7b97 | \u548cD\u7684\u8ddd\u79bb - | - | - A | $\\sqrt{(5-4)^2 + (5-2)^2} = \\sqrt{1 + 9} = \\sqrt{10}$ | 3.16 B | $\\sqrt{(2-4)^2 + (5-2)^2} = \\sqrt{4 + 9} = \\sqrt{13}$ | 3.60 C | $\\sqrt{(1-4)^2 + (4-2)^2} = \\sqrt{9 + 4} = \\sqrt{13}$ | 3.60 2\u3001N\u7ef4\u6a21\u578b \u6211\u4eec\u5728\u8ba1\u7b97\u4e24\u4e2a\u7528\u6237\u7684\u8ddd\u79bb\u65f6\uff0c\u53ea\u91c7\u7528\u4ed6\u4eec\u90fd\u8bc4\u4ef7\u8fc7\u7684\u9879\u76ee \u66fc\u54c8\u987f\u8ddd\u79bb\u548c\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u5728\u6570\u636e\u5b8c\u6574\u7684\u60c5\u51b5\u4e0b\u6548\u679c\u6700\u597d \u9879\u76ee\\\u8bc4\u5206 A B Difference $Difference^2$ a 3.5 2 1.5 2.25 b 2 3.5 1.5 2.25 c - 4 - - d 4.5 - - - e 5 2 3 9 f 1.5 3.5 2 4 g 2.5 - - - h 2 3 1 1 Manhattan Distance (\u66fc\u54c8\u987f) 9 sum of squares 18.50 Euclidean Distance (\u6b27\u51e0\u91cc\u5f97) 4.30 \u8ba1\u7b97\u8fc7\u7a0b $Euclidean = \\sqrt{(3.5-2)^2 + (2-3.5)^2 + (5 -2)^2 + (1.5-3.5)^2 + (2-3)^2}$ $= \\sqrt{1.5^2 + (-1.5)^2 + 3^2 + (-2)^2 + (-1)^2} $ $= \\sqrt{2.25 + 2.25 + 9 + 4 + 1} $ $= \\sqrt{18.5}$ $= 4.3$","title":"\u8ba1\u7b97\u793a\u4f8b"},{"location":"\u4eba\u5de5\u667a\u80fd/\u6570\u636e\u6316\u6398/#python","text":"# -*- coding: utf-8 -*- # \u7528\u6237\u6570\u636e\uff0c\u683c\u5f0f\uff1a[\u7528\u6237: {\u4e50\u961f: \u8bc4\u5206}] users = { \"Hailey\" : { \"Broken Bells\" : 4 , \"Deadmau5\" : 1 , \"Norah Jones\" : 4 , \"The Strokes\" : 4 , \"Vampire Weekend\" : 1 }, \"Jordyn\" : { \"Broken Bells\" : 4.5 , \"Deadmau5\" : 4 , \"Norah Jones\" : 5 , \"Phoeni x\" : 5 , \"Slightly Stoopid\" : 4.5 , \"The Strokes\" : 4 , \"Vampire Weekend\" : 4 } } import math def manhattan ( rating1 , rating2 ): \"\"\" \u66fc\u54c8\u987f\u8ddd\u79bb rating1\u548crating2\u53c2\u6570\u4e2d\u5b58\u50a8\u7684\u6570\u636e\u683c\u5f0f\u5747\u4e3a {'The Strokes': 3.0, 'Slightly Stoopid': 2.5} \"\"\" distance = 0 # \u53d6key \u7684\u4ea4\u96c6 keys = rating1 . keys () & rating2 . keys () for key in keys : distance += abs ( rating1 [ key ] - rating2 [ key ]) return distance # print(manhattan(users[\"Hailey\"], users[\"Jordyn\"])) def euclidean ( rating1 , rating2 ): \"\"\" \u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb rating1\u548crating2\u53c2\u6570\u4e2d\u5b58\u50a8\u7684\u6570\u636e\u683c\u5f0f\u5747\u4e3a {'The Strokes': 3.0, 'Slightly Stoopid': 2.5} \"\"\" distance = 0 # \u53d6key \u7684\u4ea4\u96c6 keys = rating1 . keys () & rating2 . keys () for key in keys : distance += math . pow ( rating1 [ key ] - rating2 [ key ], 2 ) return math . sqrt ( distance ) # print(euclidean(users[\"Hailey\"], users[\"Jordyn\"])) def minkowski ( rating1 , rating2 , r ): \"\"\" \u95f5\u53ef\u592b\u65af\u57fa\u8ddd\u79bb r = 1 \u66fc\u54c8\u987f\u8ddd\u79bb r = 2 \u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb rating1\u548crating2\u53c2\u6570\u4e2d\u5b58\u50a8\u7684\u6570\u636e\u683c\u5f0f\u5747\u4e3a {'The Strokes': 3.0, 'Slightly Stoopid': 2.5} \"\"\" distance = 0 # \u53d6key \u7684\u4ea4\u96c6 keys = rating1 . keys () & rating2 . keys () for key in keys : distance += pow ( abs ( rating1 [ key ] - rating2 [ key ]), r ) return pow ( distance , 1 / r ) # print(minkowski(users[\"Hailey\"], users[\"Jordyn\"], r=2)) def compute_near_neighbors ( username , users ): \"\"\"\u8ba1\u7b97\u6240\u6709\u7528\u6237\u81f3username\u7528\u6237\u7684\u8ddd\u79bb\uff0c\u5012\u5e8f\u6392\u5217\u5e76\u8fd4\u56de\u7ed3\u679c\u5217\u8868\"\"\" distances = [] for user in users : if user != username : distance = manhattan ( users [ username ], users [ user ]) distances . append (( distance , user )) # \u6309\u8ddd\u79bb\u6392\u5e8f\u2014\u2014\u8ddd\u79bb\u8fd1\u7684\u6392\u5728\u524d\u9762 distances . sort () return distances # print(compute_near_neighbors(\"Hailey\", users)) def recommend ( username , users ): \"\"\"\u8fd4\u56de\u63a8\u8350\u7ed3\u679c\u5217\u8868\"\"\" # \u627e\u5230\u8ddd\u79bb\u6700\u8fd1\u7684\u7528\u6237 nearest = compute_near_neighbors ( username , users )[ 0 ][ 1 ] recommendations = [] # \u627e\u51fa\u8fd9\u4f4d\u7528\u6237\u8bc4\u4ef7\u8fc7\u3001\u4f46\u81ea\u5df1\u672a\u66fe\u8bc4\u4ef7\u7684\u4e50\u961f neighborRatings = users [ nearest ] userRatings = users [ username ] for artist in neighborRatings : if artist not in userRatings : recommendations . append (( artist , neighborRatings [ artist ])) # \u6309\u7167\u8bc4\u5206\u8fdb\u884c\u9ad8\u5230\u4f4e\u6392\u5e8f return sorted ( recommendations , key = lambda item : item [ 1 ], reverse = True ) # print(recommend(\"Hailey\", users))","title":"Python\u4ee3\u7801\u5b9e\u73b0"},{"location":"\u4eba\u5de5\u667a\u80fd/\u6570\u636e\u6316\u6398/#_6","text":"\u5206\u6570\u81a8\u80c0: \u6bcf\u4e2a\u7528\u6237\u7684\u6253\u5206\u6807\u51c6\u975e\u5e38\u4e0d\u540c \u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\u7528\u4e8e\u8861\u91cf\u4e24\u4e2a\u53d8\u91cf\u4e4b\u95f4\u7684\u76f8\u5173\u6027 \u5b83\u7684\u503c\u5728-1\u81f31\u4e4b\u95f4\uff0c1\u8868\u793a\u5b8c\u5168\u543b\u5408\uff0c-1\u8868\u793a\u5b8c\u5168\u76f8\u6096\u3002 \u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\u7684\u8ba1\u7b97\u516c\u5f0f $$ r = \\frac{ \\sum_{i=1}^n{ (x_i-\\overline{x})(y_i-\\overline{y}) } } { \\sqrt{\\sum_{i=1}^n(x_i-\\overline{x})^2} \\sqrt{\\sum_{i=1}^n(y_i-\\overline{y})^2} } $$ \u8ba1\u7b97\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\u7684\u8fd1\u4f3c\u503c $$ r = \\frac{ \\sum_{i=1}^nx_iy_i - \\frac{\\sum_{i=1}^nx_i\\sum_{i=1}^ny_i}{n} } { \\sqrt{\\sum_{i=1}^nx_i^2 - \\frac{(\\sum_{i=1}^nx_i)^2}{n}} \\sqrt{\\sum_{i=1}^ny_i^2 - \\frac{(\\sum_{i=1}^ny_i)^2}{n}} } $$ \u5206\u89e3\u8ba1\u7b97\u793a\u4f8b @| a | b | c | d |e -|-|-|-|-|- A | 4.75 | 4.5 | 5 | 4.25 | 4 B | 4 | 3 | 5 | 2 | 1 \u7b2c\u4e00\u6b65\uff0c\u8ba1\u7b97\u5206\u5b50 $\\sum_{i=1}^nx_iy_i$ $=(4.75 \\times 4) + (4.5 \\times 3) + (5 \\times 5) + (4.25 \\times 2) + (4 \\times 1)$ $= 19 + 13.5 + 25 + 8.5 + 4$ $=70$ $\\frac{\\sum_{i=1}^nx_i\\sum_{i=1}^ny_i}{n}$ $=\\frac{(4.75+4.5 +5 +4.25+4) \\times ( 4 +3 +5 +2 + 1)}{5}$ $=\\frac{22.50 \\times 15}{5}$ $=\\frac{337.5}{5}$ $=67.50$ \u6240\u4ee5\uff0c\u5206\u5b50\u4e3a $\\sum_{i=1}^nx_iy_i - \\frac{\\sum_{i=1}^nx_i\\sum_{i=1}^ny_i}{n}$ $= 70 - 67.5$ $=2.5$ \u7b2c\u4e8c\u6b65\uff0c\u8ba1\u7b97\u5206\u6bcd \u5148\u8ba1\u7b97A $\\sum_{i=1}^nx_i^2$ $=4.75^2 + 4.5^2 + 5^2 + 4.25^2 + 4^2$ $=22.56 + 20.25 + 25 + 18.06 + 16$ $=101.874$ $\\frac{(\\sum_{i=1}^nx_i)^2}{n}$ $=\\frac{(4.75 + 4.5 + 5 + 4.25 + 4)^2}{5}$ $=\\frac{506.250}{5}$ $=101.250$ \u540c\u6837\u7684\u65b9\u6cd5\u8ba1\u7b97B $\\sum_{i=1}^ny_i^2$ $= 4^2 + 3^2 + 5^2 + 2^2 + 1^2$ $=16 + 9 + 25 + 4 + 1$ $=55$ $\\frac{(\\sum_{i=1}^ny_i)^2}{n}$ $=\\frac{(4 + 3+ 5+2+ 1)^2}{5}$ $=\\frac{225}/{5}$ $=45$ \u6240\u4ee5\uff0c\u5206\u6bcd\u4e3a $\\sqrt{\\sum_{i=1}^nx_i^2 - \\frac{(\\sum_{i=1}^nx_i)^2}{n}}\\sqrt{\\sum_{i=1}^ny_i^2 - \\frac{(\\sum_{i=1}^ny_i)^2}{n}}$ $=\\sqrt{101.874 - 101.250}\\sqrt{55 - 45}$ $=\\sqrt{0.62}\\sqrt{10}$ $=0.789 \\times 3.162$ $=2.494$ \u6700\u540e\u8ba1\u7b97r $r = \\frac{2.5}{2.494}$ $= 1.002$ \u56e0\u6b64\uff0cA\u548cB\u7684\u504f\u597d\u5b8c\u5168\u543b\u5408 def pearson ( rating1 , rating2 ): \"\"\" \u8ba1\u7b97\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570 \"\"\" sum_xy = 0 sum_x = 0 sum_y = 0 sum_x2 = 0 sum_y2 = 0 # \u53d6key \u7684\u4ea4\u96c6 keys = rating1 . keys () & rating2 . keys () n = len ( keys ) for key in keys : x = rating1 [ key ] y = rating2 [ key ] sum_xy += x * y sum_x += x sum_y += y sum_x2 += pow ( x , 2 ) sum_y2 += pow ( y , 2 ) # \u8ba1\u7b97\u5206\u6bcd denominator = math . sqrt ( sum_x2 - pow ( sum_x , 2 ) / n ) * math . sqrt ( sum_y2 - pow ( sum_y , 2 ) / n ) if denominator == 0 : return 0 else : # \u8ba1\u7b97\u5206\u5b50 numerator = sum_xy - ( sum_x * sum_y ) / n return numerator / denominator # \u8ba1\u7b97\u4e0a\u9762\u793a\u4f8b users = { \"A\" : { \"a\" : 4.75 , \"b\" : 4.5 , \"c\" : 5 , \"d\" : 4.25 , \"e\" : 4 }, \"B\" : { \"a\" : 4 , \"b\" : 3 , \"c\" : 5 , \"d\" : 2 , \"e\" : 1 } } print ( pearson ( users [ 'A' ], users [ 'B' ])) # 0.9999999999999998","title":"\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570"},{"location":"\u4eba\u5de5\u667a\u80fd/\u6570\u636e\u6316\u6398/#_7","text":"\u7a00\u758f\u6027\u95ee\u9898 \u5f53\u975e\u96f6\u503c\u5f88\u7a00\u5c11\u4e86\uff0c\u4e5f\u5c31\u4e0d\u80fd\u8ba1\u7b97\u4e24\u9879\u76ee\u4e4b\u95f4\u7684\u8ddd\u79bb \u4f59\u5f26\u76f8\u4f3c\u5ea6\u7684\u8ba1\u7b97\u4e2d\u4f1a\u7565\u8fc7\u8fd9\u4e9b\u975e\u96f6\u503c \u516c\u5f0f $$ \\cos(x, y) = \\frac{x \\centerdot y}{| x| \\times |y|} $$ \u5176\u4e2d\uff0c\u201c\u00b7\u201d\u53f7\u8868\u793a\u6570\u91cf\u79ef\u3002\u201c||x||\u201d\u8868\u793a\u5411\u91cfx\u7684\u6a21\uff0c\u8ba1\u7b97\u516c\u5f0f\u662f\uff1a $$ \\sqrt{\\sum_{i=1}^nx_i{^2}} $$ \u4f59\u5f26\u76f8\u4f3c\u5ea6\u7684\u8303\u56f4\u4ece1\u5230-1\uff0c1\u8868\u793a\u5b8c\u5168\u5339\u914d\uff0c-1\u8868\u793a\u5b8c\u5168\u76f8\u6096 \u8ba1\u7b97\u793a\u4f8b \u9879\u76ee | a | b | c | d | e -|-|-|-|-|- A |4.75 |4.5|5 |4.25|4 B |4|3|5|2|1 \u4e24\u5411\u91cf\u4e3a $x = (4.75, 4.5, 5, 4.25, 4)$ $y = (4, 3, 5, 2, 1)$ \u5206\u5b50\u6c42\u6570\u91cf\u79ef $x \\centerdot y = (4.75 \\times 4) + (4.5 \\times 3) + ( 5 \\times 5 ) + (4.25 \\times 2)+( 4 \\times 1)$ $= 19 + 13.5 + 25 + 8.50 + 4$ $= 70$ \u5206\u6bcd\u6c42\u6a21\uff1a $$| x |= \\sqrt{4.75^2+4.5^2+ 5^2+ 4.25^2+ 4^2} = \\sqrt{101.875} = 10.09$$ $$| y |= \\sqrt{4^2+3^2+5^2+ 2^2+1^2} = \\sqrt{55} = 7.416$$ \u4f59\u5f26\u503c $$ \\cos(x, y) = \\frac{70}{10.09 \\times 7.416} = \\frac{70}{74.83} = 0.935 $$ \u5982\u679c\u6570\u636e\u5b58\u5728\u201c\u5206\u6570\u81a8\u80c0\u201d\u95ee\u9898\uff0c\u5c31\u4f7f\u7528\u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570\u3002 \u5982\u679c\u6570\u636e\u6bd4\u8f83\u201c\u5bc6\u96c6\u201d\uff0c\u53d8\u91cf\u4e4b\u95f4\u57fa\u672c\u90fd\u5b58\u5728\u516c\u6709\u503c\uff0c\u4e14\u8fd9\u4e9b\u8ddd\u79bb\u6570\u636e\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u90a3\u5c31\u4f7f\u7528\u6b27\u51e0\u91cc\u5f97\u6216\u66fc\u54c8\u987f\u8ddd\u79bb\u3002 \u5982\u679c\u6570\u636e\u662f\u7a00\u758f\u7684\uff0c\u5219\u4f7f\u7528\u4f59\u5f26\u76f8\u4f3c\u5ea6\u3002 \u89e3\u51b3\u7a00\u758f\u6570\u636e\u95ee\u9898\uff08\u6548\u679c\u90fd\u4e0d\u597d\uff09 1\u3001\u4eba\u4eec\u7ed9\u97f3\u4e50\u6253\u5206\u662f\u4ece1\u52305\u5206\uff0c\u90a3\u4e9b\u6ca1\u6709\u6253\u5206\u7684\u9879\u76ee\u5c31\u7edf\u4e00\u7ed90\u5206 2\u3001\u8ba1\u7b97\u201c\u5e73\u5747\u503c\u201d\u2014\u2014\u5c06\u4e24\u4eba\u5171\u540c\u8bc4\u4ef7\u8fc7\u7684\u6b4c\u66f2\u5206\u6570\u9664\u4ee5\u6b4c\u66f2\u6570\u91cf \u603b\u4e4b\uff0c\u66fc\u54c8\u987f\u8ddd\u79bb\u548c\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb\u5728\u6570\u636e\u5b8c\u6574\u7684\u60c5\u51b5\u4e0b\u4f1a\u8fd0\u4f5c\u5f97\u975e\u5e38\u597d\uff0c \u5982\u679c\u6570\u636e\u6bd4\u8f83\u7a00\u758f\uff0c\u5219\u8981\u8003\u8651\u4f7f\u7528\u4f59\u5f26\u8ddd\u79bb\u3002","title":"\u4f59\u5f26\u76f8\u4f3c\u5ea6"},{"location":"\u4eba\u5de5\u667a\u80fd/\u6570\u636e\u6316\u6398/#k","text":"\u5728\u534f\u540c\u8fc7\u6ee4\u4e2d\u53ef\u4ee5\u4f7f\u7528K\u6700\u90bb\u8fd1\u7b97\u6cd5\u6765\u627e\u51faK\u4e2a\u6700\u76f8\u4f3c\u7684\u7528\u6237 \u53ea\u4f9d\u9760\u6700\u76f8\u4f3c\u7684 \u4e00\u4e2a \u7528\u6237\u6765\u505a\u63a8\u8350\uff0c\u5982\u679c\u8fd9\u4e2a\u7528\u6237\u6709\u4e9b\u7279\u6b8a\u7684\u504f\u597d\uff0c\u5c31\u4f1a\u76f4\u63a5\u53cd\u6620\u5728\u63a8\u8350\u5185\u5bb9\u91cc\u3002 \u89e3\u51b3\u65b9\u6cd5\u4e4b\u4e00\u662f\u627e\u5bfb\u591a\u4e2a\u76f8\u4f3c\u7684\u7528\u6237\uff0c\u8fd9\u91cc\u5c31\u8981\u7528\u5230K\u6700\u90bb\u8fd1\u7b97\u6cd5\u4e86\u3002 \u4f8b\u5982\uff1aK=3 Person | \u76ae\u5c14\u900a\u76f8\u5173\u7cfb\u6570 | \u5f71\u54cd\u503c |\u9879\u76ee\u8bc4\u5206| \u52a0\u6743\u8bc4\u5206 - | -| -|-|- A | 0.8 | 40% | 3.5 | 1.40 B | 0.7 | 35% |5 | 1.75 C | 0.5 | 25% |4.5 |1.125 \u6c47\u603b | | | | 4.275 \u8ba1\u7b97\u8d21\u732e\u6bd4\u91cd $ total = 0.8 + 0.7 + 0.5 = 2.0 $ $ influence_A = 0.8 / 2 = 40\\% $ $ influence_B = 0.7 / 2 = 35\\% $ $ influence_C = 0.5 / 2 = 25\\% $ \u8ba1\u7b97\u52a0\u6743\u8bc4\u5206 $rating = (3.5 \\times 40\\%) + (5 \\times 35\\%)+ (4.5 \\times 25\\%)$ $=1.40+ 1.75 + 1.125 $ $=4.275$","title":"K\u6700\u90bb\u8fd1\u7b97\u6cd5"},{"location":"\u4eba\u5de5\u667a\u80fd/\u65b0\u95fb\u5185\u5bb9\u76f8\u4f3c/","text":"\u65b0\u95fb\u5185\u5bb9\u76f8\u4f3c \u559c\u597d\u5173\u952e\u8bcd\u8868 \u5174\u8da3\u8fc1\u79fb\u2014\u2014\u8870\u51cf\u673a\u5236","title":"\u65b0\u95fb\u5185\u5bb9\u76f8\u4f3c"},{"location":"\u4eba\u5de5\u667a\u80fd/\u65b0\u95fb\u63a8\u8350\u7cfb\u7edf/","text":"\u65b0\u95fb\u63a8\u8350\u7cfb\u7edf\uff1a\u57fa\u4e8e\u5185\u5bb9\u7684\u63a8\u8350\u7b97\u6cd5\uff08Recommender System\uff1aContent-based Recommendation\uff09 https://blog.csdn.net/qq_32690999/article/details/77434381 36\u6c2a\u9996\u53d1 | \u4eca\u65e5\u5934\u6761\u63a8\u8350\u7b97\u6cd5\u539f\u7406\u5168\u6587\u8be6\u89e3 https://baijiahao.baidu.com/s?id=1589714822818540008&wfr=spider&for=pc \u4f59\u5f26\u76f8\u4f3c\u5ea6\u8ba1\u7b97 https://www.cnblogs.com/dsgcBlogs/p/8619566.html \u63a8\u8350\u7b97\u6cd5\u548c\u673a\u5668\u5b66\u4e60\u7cfb\u5217 - \u534f\u540c\u8fc7\u6ee4\u63a8\u8350\u7b97\u6cd5\u548c\u4f59\u5f26\u76f8\u4f3c\u6027\u7b97\u6cd5 https://blog.csdn.net/initphp/article/details/52368867 TF-IDF\u4e0e\u4f59\u5f26\u76f8\u4f3c\u6027\u7684\u5e94\u7528\uff08\u4e8c\uff09\uff1a\u627e\u51fa\u76f8\u4f3c\u6587\u7ae0 http://www.ruanyifeng.com/blog/2013/03/cosine_similarity.html \u5728Python\u4e2d\u5b9e\u73b0\u4f60\u81ea\u5df1\u7684\u63a8\u8350\u7cfb\u7edf http://python.jobbole.com/85516/ sklearn cosine_similarity vs pairwise_distances https://www.jianshu.com/p/06eaeb39738d \u8bba\u65b0\u95fb\u4e2a\u6027\u5316\u63a8\u8350\u7cfb\u7edf https://www.xzbu.com/1/view-12521023.htm \u70ed\u95e8\u63a8\u8350 \u76f8\u5173\u63a8\u8350 \u77ed\u671f\u5174\u8da3 \u957f\u671f\u5174\u8da3 \u57fa\u4e8e\u5185\u5bb9\uff08\u7528\u6237\u753b\u50cf\uff09 \u534f\u540c\u8fc7\u6ee4 \u878d\u5408\u63a8\u8350 \u63a8\u8350\u7cfb\u7edf(Recommendation system )\u4ecb\u7ecd https://www.cnblogs.com/annjia/p/4544059.html ResysChina https://zhuanlan.zhihu.com/resyschina https://499730.kuaizhan.com/ https://site.douban.com/106414/ \u8bfb\u4e66\u7b14\u8bb0 |\u300a\u63a8\u8350\u7cfb\u7edf\u5b9e\u8df5\u300b- \u4e2a\u6027\u5316\u63a8\u8350\u7cfb\u7edf\u603b\u7ed3 https://www.jianshu.com/p/319e4933c5ba \u63a8\u8350\u7cfb\u7edf\u5b9e\u8df5 http://product.dangdang.com/22775361.html \u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u5b9e\u8df5 http://product.dangdang.com/25581997.html [\u8f6c]\u6210\u4e3a\u4e00\u540d\u63a8\u8350\u7cfb\u7edf\u5de5\u7a0b\u5e08\u6c38\u8fdc\u90fd\u4e0d\u665a https://www.jianshu.com/p/00911d29703d \u63a8\u8350\u7cfb\u7edf\u5b9e\u8df5.pdf http://vdisk.weibo.com/s/aSXlSkLAQjzMT Gensim\u5b98\u65b9\u4ecb\u7ecd\u7ffb\u8bd1 https://blog.csdn.net/questionfish/article/category/5610303","title":"\u65b0\u95fb\u63a8\u8350\u7cfb\u7edf"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/","text":"\u8bbe\u8ba1\u6a21\u5f0f \u5de5\u5382\u6a21\u5f0f \u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668-\u590d\u5408\u6a21\u5f0f \u6a21\u677f\u6a21\u5f0f \u53cd\u6a21\u5f0f \u8bbe\u8ba1\u6a21\u5f0f \u4ee3\u7406\u6a21\u5f0f \u95e8\u9762\u6a21\u5f0f \u5355\u4f8b\u6a21\u5f0f \u89c2\u5bdf\u8005\u6a21\u5f0f \u547d\u4ee4\u6a21\u5f0f \u72b6\u6001\u8bbe\u8ba1\u6a21\u5f0f","title":"\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/#_1","text":"\u5de5\u5382\u6a21\u5f0f \u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668-\u590d\u5408\u6a21\u5f0f \u6a21\u677f\u6a21\u5f0f \u53cd\u6a21\u5f0f \u8bbe\u8ba1\u6a21\u5f0f \u4ee3\u7406\u6a21\u5f0f \u95e8\u9762\u6a21\u5f0f \u5355\u4f8b\u6a21\u5f0f \u89c2\u5bdf\u8005\u6a21\u5f0f \u547d\u4ee4\u6a21\u5f0f \u72b6\u6001\u8bbe\u8ba1\u6a21\u5f0f","title":"\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u4ee3\u7406\u6a21\u5f0f/","text":"\u4e00\u3001\u4ee3\u7406\u6a21\u5f0f \u4ee3\u7406\uff0c\u901a\u5e38\u5c31\u662f\u4e00\u4e2a\u4ecb\u4e8e\u5bfb\u6c42\u65b9\u548c\u63d0\u4f9b\u65b9\u4e4b\u95f4\u7684\u4e2d\u4ecb\u7cfb\u7edf \u8bbe\u8ba1\u6a21\u5f0f\u4e2d\uff0c\u4ee3\u7406\u5145\u5f53\u5b9e\u9645\u5bf9\u8c61\u63a5\u53e3\u7684\u7c7b \u4e8c\u3001\u4f7f\u7528\u573a\u666f 1\u3001\u4ee5\u7b80\u5355\u7684\u65b9\u5f0f\u8868\u793a\u4e00\u4e2a\u590d\u6742\u7cfb\u7edf 2\u3001\u63d0\u9ad8\u73b0\u6709\u5b9e\u9645\u5bf9\u8c61\u7684\u5b89\u5168\u6027 3\u3001\u4e3a\u4e0d\u540c\u670d\u52a1\u5668\u4e0a\u7684\u8fdc\u7a0b\u5bf9\u8c61\u63d0\u4f9b\u672c\u5730\u63a5\u53e3 4\u3001\u4e3a\u6d88\u8017\u5927\u91cf\u5185\u5b58\u7684\u5bf9\u8c61\u63d0\u4f9b\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u53e5\u67c4 \u4e09\u3001\u4ee3\u7406\u6a21\u5f0f\u7684\u4f18\u70b9 1\u3001\u4ee3\u7406\u6a21\u5f0f\u53ef\u4ee5\u901a\u8fc7\u7f13\u5b58\u7b28\u91cd\u7684\u5bf9\u8c61\u6216\u9891\u7e41\u8bbf\u95ee\u7684\u5bf9\u8c61\u6765\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd 2\u3001\u4ee3\u7406\u8fd8\u63d0\u4f9b\u5bf9\u4e8e\u771f\u5b9e\u4e3b\u9898\u7684\u8bbf\u95ee\u6388\u6743 3\u3001\u8fdc\u7a0b\u4ee3\u7406\u8fd8\u4fbf\u4e8e\u4e0e\u53ef\u7528\u4f5c\u7f51\u7edc\u8fde\u63a5\u548c\u6570\u636e\u5e93\u8fde\u63a5\u7684\u8fdc\u7a0b\u670d\u52a1\u5668\u8fdb\u884c\u4ea4\u4e92\uff0c\u5e76\u53ef\u7528\u4e8e\u76d1\u89c6\u7cfb\u7edf \u56db\u30013\u4e2a\u4e3b\u8981\u53c2\u4e0e\u8005 \u4ee3\u7406\uff1a\u63a7\u5236\u5bf9\u771f\u5b9e\u4e3b\u9898\u7c7b\u7684\u8bbf\u95ee\u7684\u7c7b \u4e3b\u9898/\u771f\u5b9e\u4e3b\u9898\uff1a\u4e3b\u9898\u662f\u5b9a\u4e49\u771f\u5b9e\u4e3b\u9898\u548c\u4ee3\u7406\u76f8\u7c7b\u4f3c\u7684\u63a5\u53e3\uff0c\u771f\u5b9e\u4e3b\u9898\u662f\u4e3b\u9898\u7684\u5b9e\u73b0\uff0c\u63d0\u4f9b\u771f\u6b63\u529f\u80fd\uff0c\u7531\u5ba2\u6237\u7aef\u4f7f\u7528 \u5ba2\u6237\u7aef\uff1a\u8bbf\u95ee\u8981\u5b8c\u6210\u5de5\u4f5c\u7684\u4ee3\u7406\u7c7b \u4e94\u3001\u4ee3\u7406\u7c7b\u7684\u7c7b\u578b 1\u3001\u865a\u62df\u4ee3\u7406\uff1a\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\u5316\u540e\u4f1a\u5360\u7528\u5927\u91cf\u5185\u5b58\u7684\u8bdd\uff0c\u53ef\u4ee5\u5148\u5229\u7528\u5360\u4f4d\u7b26\u6765\u8868\u793a 2\u3001\u8fdc\u7a0b\u4ee3\u7406\uff1a\u7ed9\u536b\u6d74\u8fdc\u7a0b\u670d\u52a1\u5668\u6216\u4e0d\u540c\u5730\u5740\u7a7a\u95f4\u4e0a\u7684\u5b9e\u9645\u5bf9\u8c61\u63d0\u4f9b\u672c\u5730\u8868\u793a 3\u3001\u4fdd\u62a4\u4ee3\u7406\uff1a\u80fd\u591f\u63a7\u5236\u771f\u5b9e\u5bf9\u8c61\u7684\u94ed\u611f\u5bf9\u8c61\u7684\u8bbf\u95ee 4\u3001\u667a\u80fd\u4ee3\u7406\uff1a\u5728\u8bbf\u95ee\u65f6\u63d2\u5165\u5176\u4ed6\u64cd\u4f5c \u516d\u3001\u4ee3\u7801\u793a\u4f8b 1\u3001\u7ecf\u7eaa\u4eba\u4f5c\u4e3a\u6f14\u5458\u7684\u4ee3\u7406\u4eba\uff0c\u5b89\u6392\u6f14\u5458\u7684\u884c\u7a0b # -*- coding: utf-8 -*- class Actor ( object ): def __init__ ( self ): self . is_empty = True def show_film ( self ): self . is_empty = False print ( type ( self ) . __name__ , \"show_film\" ) def listen_music ( self ): self . is_empty = True print ( type ( self ) . __name__ , \"listen_music\" ) class Agent ( object ): def __init__ ( self ): self . actor = Actor () def work ( self ): if self . actor . is_empty : self . actor . show_film () else : self . actor . listen_music () if __name__ == '__main__' : agent = Agent () agent . work () agent . work () \"\"\" Actor show_film Actor listen_music \"\"\" 2\u3001\u901a\u8fc7\u501f\u8bb0\u5361\u4ee3\u7406\u94f6\u884c\u5b8c\u6210\u652f\u4ed8\u5de5\u4f5c # -*- coding: utf-8 -*- from abc import ABC , abstractmethod # \u652f\u4ed8\u63a5\u53e3 class Payment ( ABC ): @abstractmethod def do_pay ( self ): pass # \u94f6\u884c\u7c7b\uff1a\u771f\u5b9e\u4e3b\u9898 class Bank ( Payment ): def check_account ( self ): print ( \"\u8d26\u6237\u68c0\u67e5\u4e2d...\" ) return True def do_pay ( self ): self . check_account () print ( \"\u94f6\u884c\u7ed3\u7b97\u5b8c\u6210\" ) # \u94f6\u884c\u7c7b\u7684\u4ee3\u7406 class DebitCard ( Payment ): def __init__ ( self ): self . bank = Bank () def do_pay ( self ): print ( \"\u501f\u8bb0\u5361\u5373\u5c06\u53bb\u94f6\u884c\u652f\u4ed8\" ) self . bank . do_pay () print ( \"\u501f\u8bb0\u5361\u5b8c\u6210\u94f6\u884c\u652f\u4ed8\" ) # \u5ba2\u6237\u7aef class You ( object ): def __init__ ( self ): self . debit_card = DebitCard () def make_payment ( self ): print ( \"\u501f\u8bb0\u5361\u652f\u4ed8\u5f00\u59cb\" ) self . debit_card . do_pay () print ( \"\u501f\u8bb0\u5361\u652f\u4ed8\u7ed3\u675f\" ) if __name__ == '__main__' : you = You () you . make_payment () \"\"\" \u501f\u8bb0\u5361\u652f\u4ed8\u5f00\u59cb \u501f\u8bb0\u5361\u5373\u5c06\u53bb\u94f6\u884c\u652f\u4ed8 \u8d26\u6237\u68c0\u67e5\u4e2d... \u94f6\u884c\u7ed3\u7b97\u5b8c\u6210 \u501f\u8bb0\u5361\u5b8c\u6210\u94f6\u884c\u652f\u4ed8 \u501f\u8bb0\u5361\u652f\u4ed8\u7ed3\u675f \"\"\" \u4e03\u3001\u95e8\u9762\u6a21\u5f0f\u548c\u4ee3\u7406\u6a21\u5f0f\u6bd4\u8f83 \u4ee3\u7406\u6a21\u5f0f \u95e8\u9762\u6a21\u5f0f \u4e3a\u5176\u4ed6\u5bf9\u8c61\u63d0\u4f9b\u4e86\u4ee3\u7406\u6216\u5360\u4f4d\u7b26\uff0c\u4ee5\u63a7\u5236\u5bf9\u539f\u59cb\u5bf9\u8c61\u7684\u8bbf\u95ee \u4e3a\u7c7b\u7684\u5927\u578b\u5b50\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63a5\u53e3 \u4ee3\u7406\u5bf9\u8c61\u5177\u6709\u4e0e\u5176\u76ee\u6807\u5bf9\u8c61\u76f8\u540c\u7684\u63a5\u53e3\uff0c\u5e76\u4fdd\u5b58\u6709\u76ee\u6807\u5bf9\u8c61\u7684\u5f15\u7528 \u5b9e\u73b0\u4e86\u5b50\u7cfb\u7edf\u4e4b\u95f4\u7684\u901a\u4fe1\u548c\u4f9d\u8d56\u6027\u7684\u6700\u5c0f\u5316 \u5145\u5f53\u5ba2\u6237\u7aef\u548c\u88ab\u5c01\u88c5\u5bf9\u8c61\u4e4b\u95f4\u7684\u4e2d\u4ecb \u95e8\u9762\u5bf9\u8c61\u63d0\u4f9b\u4e86\u5355\u4e00\u7684\u7b80\u5355\u63a5\u53e3","title":"\u4e00\u3001\u4ee3\u7406\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u4ee3\u7406\u6a21\u5f0f/#_1","text":"\u4ee3\u7406\uff0c\u901a\u5e38\u5c31\u662f\u4e00\u4e2a\u4ecb\u4e8e\u5bfb\u6c42\u65b9\u548c\u63d0\u4f9b\u65b9\u4e4b\u95f4\u7684\u4e2d\u4ecb\u7cfb\u7edf \u8bbe\u8ba1\u6a21\u5f0f\u4e2d\uff0c\u4ee3\u7406\u5145\u5f53\u5b9e\u9645\u5bf9\u8c61\u63a5\u53e3\u7684\u7c7b","title":"\u4e00\u3001\u4ee3\u7406\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u4ee3\u7406\u6a21\u5f0f/#_2","text":"1\u3001\u4ee5\u7b80\u5355\u7684\u65b9\u5f0f\u8868\u793a\u4e00\u4e2a\u590d\u6742\u7cfb\u7edf 2\u3001\u63d0\u9ad8\u73b0\u6709\u5b9e\u9645\u5bf9\u8c61\u7684\u5b89\u5168\u6027 3\u3001\u4e3a\u4e0d\u540c\u670d\u52a1\u5668\u4e0a\u7684\u8fdc\u7a0b\u5bf9\u8c61\u63d0\u4f9b\u672c\u5730\u63a5\u53e3 4\u3001\u4e3a\u6d88\u8017\u5927\u91cf\u5185\u5b58\u7684\u5bf9\u8c61\u63d0\u4f9b\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u53e5\u67c4","title":"\u4e8c\u3001\u4f7f\u7528\u573a\u666f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u4ee3\u7406\u6a21\u5f0f/#_3","text":"1\u3001\u4ee3\u7406\u6a21\u5f0f\u53ef\u4ee5\u901a\u8fc7\u7f13\u5b58\u7b28\u91cd\u7684\u5bf9\u8c61\u6216\u9891\u7e41\u8bbf\u95ee\u7684\u5bf9\u8c61\u6765\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd 2\u3001\u4ee3\u7406\u8fd8\u63d0\u4f9b\u5bf9\u4e8e\u771f\u5b9e\u4e3b\u9898\u7684\u8bbf\u95ee\u6388\u6743 3\u3001\u8fdc\u7a0b\u4ee3\u7406\u8fd8\u4fbf\u4e8e\u4e0e\u53ef\u7528\u4f5c\u7f51\u7edc\u8fde\u63a5\u548c\u6570\u636e\u5e93\u8fde\u63a5\u7684\u8fdc\u7a0b\u670d\u52a1\u5668\u8fdb\u884c\u4ea4\u4e92\uff0c\u5e76\u53ef\u7528\u4e8e\u76d1\u89c6\u7cfb\u7edf","title":"\u4e09\u3001\u4ee3\u7406\u6a21\u5f0f\u7684\u4f18\u70b9"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u4ee3\u7406\u6a21\u5f0f/#3","text":"\u4ee3\u7406\uff1a\u63a7\u5236\u5bf9\u771f\u5b9e\u4e3b\u9898\u7c7b\u7684\u8bbf\u95ee\u7684\u7c7b \u4e3b\u9898/\u771f\u5b9e\u4e3b\u9898\uff1a\u4e3b\u9898\u662f\u5b9a\u4e49\u771f\u5b9e\u4e3b\u9898\u548c\u4ee3\u7406\u76f8\u7c7b\u4f3c\u7684\u63a5\u53e3\uff0c\u771f\u5b9e\u4e3b\u9898\u662f\u4e3b\u9898\u7684\u5b9e\u73b0\uff0c\u63d0\u4f9b\u771f\u6b63\u529f\u80fd\uff0c\u7531\u5ba2\u6237\u7aef\u4f7f\u7528 \u5ba2\u6237\u7aef\uff1a\u8bbf\u95ee\u8981\u5b8c\u6210\u5de5\u4f5c\u7684\u4ee3\u7406\u7c7b","title":"\u56db\u30013\u4e2a\u4e3b\u8981\u53c2\u4e0e\u8005"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u4ee3\u7406\u6a21\u5f0f/#_4","text":"1\u3001\u865a\u62df\u4ee3\u7406\uff1a\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u5b9e\u4f8b\u5316\u540e\u4f1a\u5360\u7528\u5927\u91cf\u5185\u5b58\u7684\u8bdd\uff0c\u53ef\u4ee5\u5148\u5229\u7528\u5360\u4f4d\u7b26\u6765\u8868\u793a 2\u3001\u8fdc\u7a0b\u4ee3\u7406\uff1a\u7ed9\u536b\u6d74\u8fdc\u7a0b\u670d\u52a1\u5668\u6216\u4e0d\u540c\u5730\u5740\u7a7a\u95f4\u4e0a\u7684\u5b9e\u9645\u5bf9\u8c61\u63d0\u4f9b\u672c\u5730\u8868\u793a 3\u3001\u4fdd\u62a4\u4ee3\u7406\uff1a\u80fd\u591f\u63a7\u5236\u771f\u5b9e\u5bf9\u8c61\u7684\u94ed\u611f\u5bf9\u8c61\u7684\u8bbf\u95ee 4\u3001\u667a\u80fd\u4ee3\u7406\uff1a\u5728\u8bbf\u95ee\u65f6\u63d2\u5165\u5176\u4ed6\u64cd\u4f5c","title":"\u4e94\u3001\u4ee3\u7406\u7c7b\u7684\u7c7b\u578b"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u4ee3\u7406\u6a21\u5f0f/#_5","text":"1\u3001\u7ecf\u7eaa\u4eba\u4f5c\u4e3a\u6f14\u5458\u7684\u4ee3\u7406\u4eba\uff0c\u5b89\u6392\u6f14\u5458\u7684\u884c\u7a0b # -*- coding: utf-8 -*- class Actor ( object ): def __init__ ( self ): self . is_empty = True def show_film ( self ): self . is_empty = False print ( type ( self ) . __name__ , \"show_film\" ) def listen_music ( self ): self . is_empty = True print ( type ( self ) . __name__ , \"listen_music\" ) class Agent ( object ): def __init__ ( self ): self . actor = Actor () def work ( self ): if self . actor . is_empty : self . actor . show_film () else : self . actor . listen_music () if __name__ == '__main__' : agent = Agent () agent . work () agent . work () \"\"\" Actor show_film Actor listen_music \"\"\" 2\u3001\u901a\u8fc7\u501f\u8bb0\u5361\u4ee3\u7406\u94f6\u884c\u5b8c\u6210\u652f\u4ed8\u5de5\u4f5c # -*- coding: utf-8 -*- from abc import ABC , abstractmethod # \u652f\u4ed8\u63a5\u53e3 class Payment ( ABC ): @abstractmethod def do_pay ( self ): pass # \u94f6\u884c\u7c7b\uff1a\u771f\u5b9e\u4e3b\u9898 class Bank ( Payment ): def check_account ( self ): print ( \"\u8d26\u6237\u68c0\u67e5\u4e2d...\" ) return True def do_pay ( self ): self . check_account () print ( \"\u94f6\u884c\u7ed3\u7b97\u5b8c\u6210\" ) # \u94f6\u884c\u7c7b\u7684\u4ee3\u7406 class DebitCard ( Payment ): def __init__ ( self ): self . bank = Bank () def do_pay ( self ): print ( \"\u501f\u8bb0\u5361\u5373\u5c06\u53bb\u94f6\u884c\u652f\u4ed8\" ) self . bank . do_pay () print ( \"\u501f\u8bb0\u5361\u5b8c\u6210\u94f6\u884c\u652f\u4ed8\" ) # \u5ba2\u6237\u7aef class You ( object ): def __init__ ( self ): self . debit_card = DebitCard () def make_payment ( self ): print ( \"\u501f\u8bb0\u5361\u652f\u4ed8\u5f00\u59cb\" ) self . debit_card . do_pay () print ( \"\u501f\u8bb0\u5361\u652f\u4ed8\u7ed3\u675f\" ) if __name__ == '__main__' : you = You () you . make_payment () \"\"\" \u501f\u8bb0\u5361\u652f\u4ed8\u5f00\u59cb \u501f\u8bb0\u5361\u5373\u5c06\u53bb\u94f6\u884c\u652f\u4ed8 \u8d26\u6237\u68c0\u67e5\u4e2d... \u94f6\u884c\u7ed3\u7b97\u5b8c\u6210 \u501f\u8bb0\u5361\u5b8c\u6210\u94f6\u884c\u652f\u4ed8 \u501f\u8bb0\u5361\u652f\u4ed8\u7ed3\u675f \"\"\"","title":"\u516d\u3001\u4ee3\u7801\u793a\u4f8b"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u4ee3\u7406\u6a21\u5f0f/#_6","text":"\u4ee3\u7406\u6a21\u5f0f \u95e8\u9762\u6a21\u5f0f \u4e3a\u5176\u4ed6\u5bf9\u8c61\u63d0\u4f9b\u4e86\u4ee3\u7406\u6216\u5360\u4f4d\u7b26\uff0c\u4ee5\u63a7\u5236\u5bf9\u539f\u59cb\u5bf9\u8c61\u7684\u8bbf\u95ee \u4e3a\u7c7b\u7684\u5927\u578b\u5b50\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63a5\u53e3 \u4ee3\u7406\u5bf9\u8c61\u5177\u6709\u4e0e\u5176\u76ee\u6807\u5bf9\u8c61\u76f8\u540c\u7684\u63a5\u53e3\uff0c\u5e76\u4fdd\u5b58\u6709\u76ee\u6807\u5bf9\u8c61\u7684\u5f15\u7528 \u5b9e\u73b0\u4e86\u5b50\u7cfb\u7edf\u4e4b\u95f4\u7684\u901a\u4fe1\u548c\u4f9d\u8d56\u6027\u7684\u6700\u5c0f\u5316 \u5145\u5f53\u5ba2\u6237\u7aef\u548c\u88ab\u5c01\u88c5\u5bf9\u8c61\u4e4b\u95f4\u7684\u4e2d\u4ecb \u95e8\u9762\u5bf9\u8c61\u63d0\u4f9b\u4e86\u5355\u4e00\u7684\u7b80\u5355\u63a5\u53e3","title":"\u4e03\u3001\u95e8\u9762\u6a21\u5f0f\u548c\u4ee3\u7406\u6a21\u5f0f\u6bd4\u8f83"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u5355\u4f8b\u6a21\u5f0f/","text":"\u5355\u4f8b\u6a21\u5f0f\uff1a 1\u3001\u786e\u4fdd\u7c7b\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u5bf9\u8c61\u88ab\u521b\u5efa 2\u3001\u4e3a\u5bf9\u8c61\u63d0\u4f9b\u4e00\u4e2a\u5168\u5c40\u8bbf\u95ee\u70b9 3\u3001\u63a7\u5236\u5171\u4eab\u8d44\u6e90\u7684\u5e76\u884c\u8bbf\u95ee \u5b9e\u73b0\u5355\u4f8b\u6700\u7b80\u5355\u7684\u65b9\u5f0f\uff1a \u4f7f\u6784\u9020\u51fd\u6570\u79c1\u6709\u5316\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\u6765\u5b8c\u6210\u5bf9\u8c61\u521d\u59cb\u5316 \u4f7f\u7528\u573a\u666f\uff1a \u4e00\u4e2a\u7c7b\u8981\u6c42\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61 \u5355\u4f8b\u6a21\u5f0f\u7684\u7f3a\u70b9 1\u3001\u5168\u5c40\u53d8\u91cf\u53ef\u80fd\u88ab\u8bef\u4fee\u6539 2\u3001\u5bf9\u540c\u4e00\u4e2a\u5bf9\u8c61\u521b\u5efa\u591a\u4e2a\u5f15\u7528 3\u3001\u6240\u6709\u4f9d\u8d56\u4e8e\u5168\u5c40\u53d8\u91cf\u7684\u7c7b\u90fd\u4f1a\u7531\u4e8e\u4e00\u4e2a\u7c7b\u7684\u6539\u53d8\u800c\u7d27\u5bc6\u8026\u5408\u4e3a\u5168\u5c40\u6570\u636e\uff0c\u4ece\u800c\u53ef\u80fd\u5728\u65e0\u610f\u4e2d\u5f71\u54cd\u53e6\u4e00\u4e2a\u7c7b \u4e00\u3001\u7ecf\u5178\u7684\u5355\u4f8b\u6a21\u5f0f \u53ea\u5141\u8bb8Singleton\u7c7b\u751f\u6210\u4e00\u4e2a\u5b9e\u4f8b # -*- coding: utf-8 -*- class Singleton ( object ): def __new__ ( cls ): if not hasattr ( cls , \"_instance\" ): cls . _instance = super ( Singleton , cls ) . __new__ ( cls ) return cls . _instance if __name__ == '__main__' : s1 = Singleton () s2 = Singleton () print ( s1 ) print ( s2 ) print ( s1 == s2 ) print ( s1 is s2 ) \"\"\" <__main__.Singleton object at 0x1021d58d0> <__main__.Singleton object at 0x1021d58d0> True True \"\"\" \u4e8c\u3001\u61d2\u6c49\u5f0f\u5b9e\u4f8b\u5316 \u5b9e\u9645\u5bf9\u8c61\u521b\u5efa\u53d1\u751f\u5728 get_instance() # -*- coding: utf-8 -*- class Singleton ( object ): __instance = None def __init__ ( self ): if not Singleton . __instance : print ( \"create...\" ) else : print ( \"already exist...\" ) @classmethod def get_instance ( cls ): if not cls . __instance : cls . __instance = Singleton () return cls . __instance if __name__ == '__main__' : s1 = Singleton . get_instance () # \u5b9e\u4f8b\u5316 s2 = Singleton . get_instance () # \u5df2\u5b58\u5728\uff0c\u4e0d\u4f1a\u5b9e\u4f8b\u5316 print ( s1 ) print ( s2 ) print ( s1 == s2 ) print ( s1 is s2 ) \"\"\" create... <__main__.Singleton object at 0x101ad5860> <__main__.Singleton object at 0x101ad5860> True True \"\"\" \u5355\u6001\u6a21\u5f0f Monostate \u6240\u6709\u5bf9\u8c61\u5171\u4eab\u76f8\u540c\u7684\u72b6\u6001 # -*- coding: utf-8 -*- class Borg ( object ): __data = { \"age\" : 23 } def __init__ ( self ): self . __dict__ = self . __data if __name__ == '__main__' : b1 = Borg () b2 = Borg () # b1 \u548c b2\u662f\u4e0d\u540c\u7684\u5bf9\u8c61\uff0c\u5171\u4eab\u4e86\u76f8\u540c\u7684\u5c5e\u6027 print ( b1 ) print ( b2 ) # \u4fee\u6539b1\u5bf9\u8c61\uff0c b2\u5bf9\u8c61\u7684\u5c5e\u6027\u4e5f\u53d8\u5316\u4e86 b1 . name = \"Tom\" print ( b1 . __dict__ ) print ( b2 . __dict__ ) \"\"\" <__main__.Borg object at 0x102345f60> <__main__.Borg object at 0x1023452e8> {'age': 23, 'name': 'Tom'} {'age': 23, 'name': 'Tom'} \"\"\" \u57fa\u4e8e\u5143\u7c7b\u7684\u5355\u4f8b \u5143\u7c7b\u63a7\u5236\u7c7b\u7684\u5b9e\u4f8b\u5316 # -*- coding: utf-8 -*- class MetaSingleton ( type ): _instances = {} def __call__ ( cls , * args , ** kwargs ): if cls not in cls . _instances : cls . _instances [ cls ] = super ( MetaSingleton , cls ) . __call__ ( * args , ** kwargs ) return cls . _instances [ cls ] class Logger ( metaclass = MetaSingleton ): pass if __name__ == '__main__' : logger1 = Logger () logger2 = Logger () print ( logger1 ) print ( logger2 ) \"\"\" <__main__.Logger object at 0x1013658d0> <__main__.Logger object at 0x1013658d0> \"\"\" \u5355\u4f8b\u6a21\u5f0f\u5e94\u7528 \u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u540c\u6b65\u64cd\u4f5c # -*- coding: utf-8 -*- class MetaSingleton ( type ): _instances = {} def __call__ ( cls , * args , ** kwargs ): if cls not in cls . _instances : cls . _instances [ cls ] = super ( MetaSingleton , cls ) . __call__ ( * args , ** kwargs ) return cls . _instances [ cls ] import sqlite3 class Database ( metaclass = MetaSingleton ): connection = None def __init__ ( self , db_url ): self . db_url = db_url def get_cursor ( self ): if self . connection is None : self . connection = sqlite3 . connect ( self . db_url ) self . cursor = self . connection . cursor () return self . cursor if __name__ == '__main__' : db_url = \"db.sqlite3\" cursor1 = Database ( db_url ) . get_cursor () cursor2 = Database ( db_url ) . get_cursor () print ( cursor1 ) print ( cursor2 ) \"\"\" <sqlite3.Cursor object at 0x101b4c490> <sqlite3.Cursor object at 0x101b4c490> \"\"\" \u5355\u4f8b\u6a21\u5f0f\u5e94\u7528 \u76d1\u63a7\u670d\u52a1\u5668\uff0c\u5171\u4eab\u670d\u52a1\u5668\u6570\u636e # -*- coding: utf-8 -*- class HealthCheck ( object ): _instance = None def __new__ ( cls , * args , ** kwargs ): if not cls . _instance : cls . _instance = super ( HealthCheck , cls ) . __new__ ( cls , * args , ** kwargs ) return cls . _instance def __init__ ( self ): self . servers = [] def add_server ( self , server ): self . servers . append ( server ) def pop_server ( self ): return self . servers . pop () def show_server ( self ): print ( \"*\" * 10 ) for server in self . servers : print ( server ) print ( \"*\" * 10 ) if __name__ == '__main__' : h1 = HealthCheck () h2 = HealthCheck () h1 . add_server ( \"server1\" ) h1 . add_server ( \"server2\" ) h1 . add_server ( \"server3\" ) h2 . pop_server () h2 . show_server () \"\"\" ********** server1 server2 ********** \"\"\" \u603b\u7ed3 1\u3001\u5f53\u8981\u6c42\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f 2\u3001\u7ecf\u5178\u5355\u4f8b\u6a21\u5f0f\uff0c\u5141\u8bb8\u591a\u6b21\u5b9e\u4f8b\u5316\uff0c\u4f46\u8fd4\u56de\u540c\u4e00\u4e2a\u5bf9\u8c61 3\u3001Borg\u6216Monostate\u5355\u6001\u6a21\u5f0f\u5141\u8bb8\u521b\u5efa\u5171\u4eab\u76f8\u540c\u72b6\u6001\u7684\u591a\u4e2a\u5bf9\u8c61 4\u3001\u5355\u4f8b\u6a21\u5f0f\u53ef\u5e94\u7528\u4e8e\u591a\u4e2a\u670d\u52a1\u95f4\uff0c\u5b9e\u73b0\u4e00\u81f4\u7684\u6570\u636e\u5e93\u64cd\u4f5c","title":"\u5355\u4f8b\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u5355\u4f8b\u6a21\u5f0f/#_1","text":"\u53ea\u5141\u8bb8Singleton\u7c7b\u751f\u6210\u4e00\u4e2a\u5b9e\u4f8b # -*- coding: utf-8 -*- class Singleton ( object ): def __new__ ( cls ): if not hasattr ( cls , \"_instance\" ): cls . _instance = super ( Singleton , cls ) . __new__ ( cls ) return cls . _instance if __name__ == '__main__' : s1 = Singleton () s2 = Singleton () print ( s1 ) print ( s2 ) print ( s1 == s2 ) print ( s1 is s2 ) \"\"\" <__main__.Singleton object at 0x1021d58d0> <__main__.Singleton object at 0x1021d58d0> True True \"\"\"","title":"\u4e00\u3001\u7ecf\u5178\u7684\u5355\u4f8b\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u5355\u4f8b\u6a21\u5f0f/#_2","text":"\u5b9e\u9645\u5bf9\u8c61\u521b\u5efa\u53d1\u751f\u5728 get_instance() # -*- coding: utf-8 -*- class Singleton ( object ): __instance = None def __init__ ( self ): if not Singleton . __instance : print ( \"create...\" ) else : print ( \"already exist...\" ) @classmethod def get_instance ( cls ): if not cls . __instance : cls . __instance = Singleton () return cls . __instance if __name__ == '__main__' : s1 = Singleton . get_instance () # \u5b9e\u4f8b\u5316 s2 = Singleton . get_instance () # \u5df2\u5b58\u5728\uff0c\u4e0d\u4f1a\u5b9e\u4f8b\u5316 print ( s1 ) print ( s2 ) print ( s1 == s2 ) print ( s1 is s2 ) \"\"\" create... <__main__.Singleton object at 0x101ad5860> <__main__.Singleton object at 0x101ad5860> True True \"\"\"","title":"\u4e8c\u3001\u61d2\u6c49\u5f0f\u5b9e\u4f8b\u5316"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u5355\u4f8b\u6a21\u5f0f/#monostate","text":"\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u76f8\u540c\u7684\u72b6\u6001 # -*- coding: utf-8 -*- class Borg ( object ): __data = { \"age\" : 23 } def __init__ ( self ): self . __dict__ = self . __data if __name__ == '__main__' : b1 = Borg () b2 = Borg () # b1 \u548c b2\u662f\u4e0d\u540c\u7684\u5bf9\u8c61\uff0c\u5171\u4eab\u4e86\u76f8\u540c\u7684\u5c5e\u6027 print ( b1 ) print ( b2 ) # \u4fee\u6539b1\u5bf9\u8c61\uff0c b2\u5bf9\u8c61\u7684\u5c5e\u6027\u4e5f\u53d8\u5316\u4e86 b1 . name = \"Tom\" print ( b1 . __dict__ ) print ( b2 . __dict__ ) \"\"\" <__main__.Borg object at 0x102345f60> <__main__.Borg object at 0x1023452e8> {'age': 23, 'name': 'Tom'} {'age': 23, 'name': 'Tom'} \"\"\"","title":"\u5355\u6001\u6a21\u5f0f Monostate"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u5355\u4f8b\u6a21\u5f0f/#_3","text":"\u5143\u7c7b\u63a7\u5236\u7c7b\u7684\u5b9e\u4f8b\u5316 # -*- coding: utf-8 -*- class MetaSingleton ( type ): _instances = {} def __call__ ( cls , * args , ** kwargs ): if cls not in cls . _instances : cls . _instances [ cls ] = super ( MetaSingleton , cls ) . __call__ ( * args , ** kwargs ) return cls . _instances [ cls ] class Logger ( metaclass = MetaSingleton ): pass if __name__ == '__main__' : logger1 = Logger () logger2 = Logger () print ( logger1 ) print ( logger2 ) \"\"\" <__main__.Logger object at 0x1013658d0> <__main__.Logger object at 0x1013658d0> \"\"\"","title":"\u57fa\u4e8e\u5143\u7c7b\u7684\u5355\u4f8b"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u5355\u4f8b\u6a21\u5f0f/#_4","text":"\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u540c\u6b65\u64cd\u4f5c # -*- coding: utf-8 -*- class MetaSingleton ( type ): _instances = {} def __call__ ( cls , * args , ** kwargs ): if cls not in cls . _instances : cls . _instances [ cls ] = super ( MetaSingleton , cls ) . __call__ ( * args , ** kwargs ) return cls . _instances [ cls ] import sqlite3 class Database ( metaclass = MetaSingleton ): connection = None def __init__ ( self , db_url ): self . db_url = db_url def get_cursor ( self ): if self . connection is None : self . connection = sqlite3 . connect ( self . db_url ) self . cursor = self . connection . cursor () return self . cursor if __name__ == '__main__' : db_url = \"db.sqlite3\" cursor1 = Database ( db_url ) . get_cursor () cursor2 = Database ( db_url ) . get_cursor () print ( cursor1 ) print ( cursor2 ) \"\"\" <sqlite3.Cursor object at 0x101b4c490> <sqlite3.Cursor object at 0x101b4c490> \"\"\"","title":"\u5355\u4f8b\u6a21\u5f0f\u5e94\u7528"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u5355\u4f8b\u6a21\u5f0f/#_5","text":"\u76d1\u63a7\u670d\u52a1\u5668\uff0c\u5171\u4eab\u670d\u52a1\u5668\u6570\u636e # -*- coding: utf-8 -*- class HealthCheck ( object ): _instance = None def __new__ ( cls , * args , ** kwargs ): if not cls . _instance : cls . _instance = super ( HealthCheck , cls ) . __new__ ( cls , * args , ** kwargs ) return cls . _instance def __init__ ( self ): self . servers = [] def add_server ( self , server ): self . servers . append ( server ) def pop_server ( self ): return self . servers . pop () def show_server ( self ): print ( \"*\" * 10 ) for server in self . servers : print ( server ) print ( \"*\" * 10 ) if __name__ == '__main__' : h1 = HealthCheck () h2 = HealthCheck () h1 . add_server ( \"server1\" ) h1 . add_server ( \"server2\" ) h1 . add_server ( \"server3\" ) h2 . pop_server () h2 . show_server () \"\"\" ********** server1 server2 ********** \"\"\" \u603b\u7ed3 1\u3001\u5f53\u8981\u6c42\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f 2\u3001\u7ecf\u5178\u5355\u4f8b\u6a21\u5f0f\uff0c\u5141\u8bb8\u591a\u6b21\u5b9e\u4f8b\u5316\uff0c\u4f46\u8fd4\u56de\u540c\u4e00\u4e2a\u5bf9\u8c61 3\u3001Borg\u6216Monostate\u5355\u6001\u6a21\u5f0f\u5141\u8bb8\u521b\u5efa\u5171\u4eab\u76f8\u540c\u72b6\u6001\u7684\u591a\u4e2a\u5bf9\u8c61 4\u3001\u5355\u4f8b\u6a21\u5f0f\u53ef\u5e94\u7528\u4e8e\u591a\u4e2a\u670d\u52a1\u95f4\uff0c\u5b9e\u73b0\u4e00\u81f4\u7684\u6570\u636e\u5e93\u64cd\u4f5c","title":"\u5355\u4f8b\u6a21\u5f0f\u5e94\u7528"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u53cd\u6a21\u5f0f/","text":"\u53cd\u6a21\u5f0f \u4e0d\u826f\u8bbe\u8ba1 \u4e0d\u52a8\u6027\uff1a\u5e94\u7528\u7a0b\u5e8f\u96be\u4ee5\u91cd\u7528 \u521a\u6027\uff1a\u4efb\u4f55\u5c0f\u7684\u4fee\u6539\u90fd\u4f1a\u5bfc\u81f4\u8f6f\u4ef6\u7684\u5927\u591a\u90e8\u5206\u5fc5\u987b\u8fdb\u884c\u76f8\u5e94\u6539\u52a8\uff0c\u7275\u4e00\u53d1\u52a8\u5168\u8eab \u8106\u5f31\u6027\uff1a\u4efb\u4f55\u66f4\u6539\u90fd\u4f1a\u5bfc\u81f4\u5148\u6709\u7cfb\u7edf\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\u5d29\u6e83 \u7c98\u6ede\u6027\uff1a\u7531\u4e8e\u67b6\u6784\u5c42\u9762\u7684\u4fee\u6539\u975e\u5e38\u56f0\u96be\uff0c\u56e0\u6b64\u4fee\u6539\u5fc5\u987b\u7531\u5f00\u53d1\u4eba\u5458\u5728\u4ee3\u7801\u6216\u73af\u5883\u672c\u8eab\u4e2d\u8fdb\u884c \u53cd\u6a21\u5f0f\u5206\u7c7b \u8f6f\u4ef6\u5f00\u53d1\u53cd\u6a21\u5f0f \u8f6f\u4ef6\u67b6\u6784\u53cd\u6a21\u5f0f \u8f6f\u4ef6\u5f00\u53d1\u53cd\u6a21\u5f0f 1\u3001\u610f\u5927\u5229\u9762\u6761\u5f0f\u4ee3\u7801 \u63a7\u5236\u6d41\u7a0b\u9519\u7efc\u590d\u6742 2\u3001\u91d1\u9524 \u7531\u4e8e\u67d0\u4e2a\u89e3\u51b3\u65b9\u6848\uff08\u6280\u672f\uff0c\u8bbe\u8ba1\u6216\u6a21\u5757\uff09\u5728\u591a\u4e2a\u9879\u76ee\u4e2d\u6548\u679c\u4e0d\u9519\uff0c\u5c31\u628a\u5b83\u63a8\u5e7f\u5230\u66f4\u591a\u7684\u5730\u65b9 \u91d1\u9524\uff1a\u4f7f\u7528\u6210\u719f\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4e0d\u7ba1\u662f\u4e0d\u662f\u6ee1\u8db3\u9002\u7528\u6027 3\u3001\u7194\u5ca9\ufe0f\u6d41 \u4e00\u6bb5\u7528\u4e0d\u5230\u7684\u4ee3\u7801\uff0c\u5bb3\u6015\u4fee\u6539\u4e86\u4f1a\u7834\u8bdd\u5176\u4ed6\u4e1c\u897f\uff0c\u968f\u7740\u65f6\u95f4\u6d41\u901d\uff0c\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u4e00\u76f4\u7559\u5728\u8f6f\u4ef6\u4e2d\u5e76\u56fa\u5316\u5176\u4f4d\u7f6e 4\u3001\u590d\u5236\u7c98\u8d34\u5f0f\u7f16\u7a0b \u6ca1\u6709\u8003\u8651\u8fd9\u4e9b\u4ee3\u7801\u662f\u5426\u7ecf\u8fc7\u4e86\u6700\u5927\u5316\u7684\u4f18\u5316\uff0c\u662f\u5426\u771f\u6b63\u9002\u5408\u5f53\u524d\u573a\u666f \u8f6f\u4ef6\u67b6\u6784\u53cd\u6a21\u5f0f 1\u3001\u91cd\u65b0\u53d1\u660e\u8f6e\u5b50 \u5982\u679c\u5df2\u7ecf\u6709\u76f8\u540c\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5728\u9047\u5230\u7684\u65f6\u5019\u53ef\u4ee5\u91cd\u7528\u65b9\u6848\uff0c\u4e0d\u5fc5\u91cd\u65b0\u53d1\u660e\u8f6e\u5b50 2\u3001\u4f9b\u5e94\u5546\u5957\u7262 \u4ea7\u54c1\u516c\u53f8\u4f9d\u8d56\u4e8e\u4f9b\u5e94\u5546\u63d0\u4f9b\u7684\u67d0\u4e9b\u6280\u672f\uff0c\u96be\u4ee5\u6446\u8131\u8fd9\u4e9b\u6280\u672f 3\u3001\u59d4\u5458\u4f1a\u8bbe\u8ba1 \u6ca1\u6709\u76f8\u5e94\u6280\u80fd\u6216\u76f8\u5e94\u4ea7\u54c1\u8bbe\u8ba1\u7ecf\u9a8c\u7684\u6280\u672f\u4e13\u5bb6\u8bbe\u8ba1\u7684\u7279\u6027\u7cfb\u7edf","title":"\u53cd\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u53cd\u6a21\u5f0f/#_1","text":"","title":"\u53cd\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u53cd\u6a21\u5f0f/#_2","text":"\u4e0d\u52a8\u6027\uff1a\u5e94\u7528\u7a0b\u5e8f\u96be\u4ee5\u91cd\u7528 \u521a\u6027\uff1a\u4efb\u4f55\u5c0f\u7684\u4fee\u6539\u90fd\u4f1a\u5bfc\u81f4\u8f6f\u4ef6\u7684\u5927\u591a\u90e8\u5206\u5fc5\u987b\u8fdb\u884c\u76f8\u5e94\u6539\u52a8\uff0c\u7275\u4e00\u53d1\u52a8\u5168\u8eab \u8106\u5f31\u6027\uff1a\u4efb\u4f55\u66f4\u6539\u90fd\u4f1a\u5bfc\u81f4\u5148\u6709\u7cfb\u7edf\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\u5d29\u6e83 \u7c98\u6ede\u6027\uff1a\u7531\u4e8e\u67b6\u6784\u5c42\u9762\u7684\u4fee\u6539\u975e\u5e38\u56f0\u96be\uff0c\u56e0\u6b64\u4fee\u6539\u5fc5\u987b\u7531\u5f00\u53d1\u4eba\u5458\u5728\u4ee3\u7801\u6216\u73af\u5883\u672c\u8eab\u4e2d\u8fdb\u884c","title":"\u4e0d\u826f\u8bbe\u8ba1"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u53cd\u6a21\u5f0f/#_3","text":"\u8f6f\u4ef6\u5f00\u53d1\u53cd\u6a21\u5f0f \u8f6f\u4ef6\u67b6\u6784\u53cd\u6a21\u5f0f","title":"\u53cd\u6a21\u5f0f\u5206\u7c7b"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u53cd\u6a21\u5f0f/#_4","text":"1\u3001\u610f\u5927\u5229\u9762\u6761\u5f0f\u4ee3\u7801 \u63a7\u5236\u6d41\u7a0b\u9519\u7efc\u590d\u6742 2\u3001\u91d1\u9524 \u7531\u4e8e\u67d0\u4e2a\u89e3\u51b3\u65b9\u6848\uff08\u6280\u672f\uff0c\u8bbe\u8ba1\u6216\u6a21\u5757\uff09\u5728\u591a\u4e2a\u9879\u76ee\u4e2d\u6548\u679c\u4e0d\u9519\uff0c\u5c31\u628a\u5b83\u63a8\u5e7f\u5230\u66f4\u591a\u7684\u5730\u65b9 \u91d1\u9524\uff1a\u4f7f\u7528\u6210\u719f\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4e0d\u7ba1\u662f\u4e0d\u662f\u6ee1\u8db3\u9002\u7528\u6027 3\u3001\u7194\u5ca9\ufe0f\u6d41 \u4e00\u6bb5\u7528\u4e0d\u5230\u7684\u4ee3\u7801\uff0c\u5bb3\u6015\u4fee\u6539\u4e86\u4f1a\u7834\u8bdd\u5176\u4ed6\u4e1c\u897f\uff0c\u968f\u7740\u65f6\u95f4\u6d41\u901d\uff0c\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u4e00\u76f4\u7559\u5728\u8f6f\u4ef6\u4e2d\u5e76\u56fa\u5316\u5176\u4f4d\u7f6e 4\u3001\u590d\u5236\u7c98\u8d34\u5f0f\u7f16\u7a0b \u6ca1\u6709\u8003\u8651\u8fd9\u4e9b\u4ee3\u7801\u662f\u5426\u7ecf\u8fc7\u4e86\u6700\u5927\u5316\u7684\u4f18\u5316\uff0c\u662f\u5426\u771f\u6b63\u9002\u5408\u5f53\u524d\u573a\u666f","title":"\u8f6f\u4ef6\u5f00\u53d1\u53cd\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u53cd\u6a21\u5f0f/#_5","text":"1\u3001\u91cd\u65b0\u53d1\u660e\u8f6e\u5b50 \u5982\u679c\u5df2\u7ecf\u6709\u76f8\u540c\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5728\u9047\u5230\u7684\u65f6\u5019\u53ef\u4ee5\u91cd\u7528\u65b9\u6848\uff0c\u4e0d\u5fc5\u91cd\u65b0\u53d1\u660e\u8f6e\u5b50 2\u3001\u4f9b\u5e94\u5546\u5957\u7262 \u4ea7\u54c1\u516c\u53f8\u4f9d\u8d56\u4e8e\u4f9b\u5e94\u5546\u63d0\u4f9b\u7684\u67d0\u4e9b\u6280\u672f\uff0c\u96be\u4ee5\u6446\u8131\u8fd9\u4e9b\u6280\u672f 3\u3001\u59d4\u5458\u4f1a\u8bbe\u8ba1 \u6ca1\u6709\u76f8\u5e94\u6280\u80fd\u6216\u76f8\u5e94\u4ea7\u54c1\u8bbe\u8ba1\u7ecf\u9a8c\u7684\u6280\u672f\u4e13\u5bb6\u8bbe\u8ba1\u7684\u7279\u6027\u7cfb\u7edf","title":"\u8f6f\u4ef6\u67b6\u6784\u53cd\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u547d\u4ee4\u6a21\u5f0f/","text":"\u547d\u4ee4\u6a21\u5f0f \u547d\u4ee4\u6a21\u5f0f\u5c5e\u4e8e\u884c\u4e3a\u578b\u6a21\u5f0f \u884c\u4e3a\u578b\u6a21\u5f0f\u4fa7\u91cd\u4e8e\u5bf9\u8c61\u7684\u54cd\u5e94\u6027\uff0c\u5229\u7528\u5bf9\u8c61\u4e4b\u95f4\u7684\u4ea4\u4e92\u5b9e\u73b0\u66f4\u5f3a\u5927\u7684\u529f\u80fd \u5176\u4e2d\u5bf9\u8c61\u7528\u4e8e\u5c01\u88c5\u5728\u5b8c\u6210\u4e00\u9879\u64cd\u4f5c\u6216\u5728\u89e6\u53d1\u4e00\u4e2a\u4e8b\u4ef6\u65f6\u6240\u9700\u7684\u5168\u90e8\u4fe1\u606f\uff1a 1\u3001\u65b9\u6cd5\u540d\u79f0 2\u3001\u62e5\u6709\u65b9\u6cd5\u7684\u5bf9\u8c61 3\u3001\u65b9\u6cd5\u53c2\u6570\u7684\u503c \u547d\u4ee4\u6a21\u5f0f\u672f\u8bed Command: \u58f0\u660e\u6267\u884c\u64cd\u4f5c\u7684\u63a5\u53e3 ConcreteCommand\uff1a\u5c06\u4e00\u4e2aReceiver\u5bf9\u8c61\u548c\u4e00\u4e2a\u64cd\u4f5c\u7ed1\u5b9a\u5728\u4e00\u8d77 Receiver\uff1a\u521b\u5efaConcreteCommand\u5bf9\u8c61\u5e76\u8bbe\u5b9a\u5176\u63a5\u6536\u8005 Invoker\uff1a\u8981\u6c42\u8be5ConcreteCommand\u6267\u884c\u8fd9\u4e2a\u8bf7\u6c42 Client\uff1a\u77e5\u9053\u5982\u4f55\u5b9e\u65bd\u4e0e\u6267\u884c\u4e00\u4e2a\u8bf7\u6c42\u76f8\u5173\u7684\u64cd\u4f5c \u6267\u884c\u6d41\u7a0b\uff1a \u5ba2\u6237\u7aef\u8bf7\u6c42\u6267\u884c\u547d\u4ee4\uff0c \u8c03\u7528\u8005\u63a5\u53d7\u547d\u4ee4\uff0c\u5c01\u88c5\u5b83\u5e76\u5c06\u5176\u653e\u7f6e\u5230\u961f\u5217\u4e2d\uff0c ConcreteCommand\u7c7b\u6839\u636e\u6240\u8bf7\u6c42\u7684\u547d\u4ee4\u6765\u77e5\u9053\u63a5\u6536\u8005\u6267\u884c\u7279\u5b9a\u7684\u52a8\u4f5c \u547d\u4ee4\u6a21\u5f0f\u4e3b\u8981\u610f\u56fe 1\u3001\u5c06\u8bf7\u6c42\u5c01\u88c5\u4e3a\u5bf9\u8c61 2\u3001\u53ef\u7528\u4e0d\u540c\u7684\u8bf7\u6c42\u5bf9\u5ba2\u6237\u8fdb\u884c\u53c2\u6570\u5316 3\u3001\u5141\u8bb8\u5c06\u8bf7\u6c42\u4fdd\u5b58\u5728\u961f\u5217\u4e2d 4\u3001\u63d0\u4f9b\u9762\u5411\u5bf9\u8c61\u7684\u56de\u8c03 \u547d\u4ee4\u6a21\u5f0f\u9002\u7528\u573a\u666f 1\u3001\u6839\u636e\u9700\u8981\u6267\u884c\u7684\u64cd\u4f5c\u5bf9\u5bf9\u8c61\u8fdb\u884c\u53c2\u6570\u5316 2\u3001\u5c06\u64cd\u4f5c\u6dfb\u52a0\u5230\u961f\u5217\u5e76\u5728\u4e0d\u540c\u5730\u70b9\u6267\u884c\u8bf7\u6c42 3\u3001\u521b\u5efa\u4e00\u4e2a\u7ed3\u6784\u6765\u6839\u636e\u8f83\u5c0f\u64cd\u4f5c\u5b8c\u6210\u9ad8\u7ea7\u64cd\u4f5c \u547d\u4ee4\u6a21\u5f0f\u5e94\u7528 1\u3001\u91cd\u505a\u6216\u56de\u6eda\u64cd\u4f5c 2\u3001\u5f02\u6b65\u4efb\u52a1\u6267\u884c \u547d\u4ee4\u6a21\u5f0f\u7684\u4f18\u70b9 1\u3001\u5c06\u8c03\u7528\u64cd\u4f5c\u7684\u7c7b\u4e0e\u77e5\u9053\u5982\u4f55\u6267\u884c\u8be5\u64cd\u4f5c\u7684\u5bf9\u8c61\u89e3\u8026 2\u3001\u63d0\u4f9b\u961f\u5217\u7cfb\u7edf\u540e\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u7cfb\u5217\u547d\u4ee4 3\u3001\u6dfb\u52a0\u65b0\u547d\u4ee4\u66f4\u5bb9\u6613\uff0c\u5e76\u4e14\u65e0\u9700\u66f4\u6539\u73b0\u6709\u4ee3\u7801 4\u3001\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u6a21\u5f0f\u5b9a\u4e49\u56de\u6eda\u7cfb\u7edf \u547d\u4ee4\u6a21\u5f0f\u7684\u7f3a\u70b9 1\u3001\u4e3a\u4e86\u5b9e\u73b0\u76ee\u6807\uff0c\u9700\u8981\u5927\u91cf\u7684\u7c7b\u548c\u5bf9\u8c61\u8fdb\u884c\u534f\u4f5c 2\u3001\u6bcf\u4e2a\u5355\u72ec\u7684\u547d\u4ee4\u90fd\u662f\u4e00\u4e2aConcreteCommand\u7c7b\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u9700\u8981\u5b9e\u73b0\u548c\u7ef4\u62a4\u7684\u7c7b\u7684\u6570\u91cf \u4ee3\u7801\u5b9e\u4f8b\uff1a # -*- coding: utf-8 -*- from abc import ABCMeta , abstractmethod # \u63d0\u4f9b\u63a5\u53e3Command class Order ( metaclass = ABCMeta ): @abstractmethod def execute ( self ): pass # \u5177\u4f53\u547d\u4ee4 ConcreteCommand class BuyStockOrder ( Order ): def __init__ ( self , stock ): self . stock = stock def execute ( self ): self . stock . buy () class SellStockOrder ( Order ): def __init__ ( self , stock ): self . stock = stock def execute ( self ): self . stock . sell () # Receiver\u5bf9\u8c61 class StockTrade ( object ): def buy ( self ): print ( \"buy stock\" ) def sell ( self ): print ( \"sell stock\" ) # \u8c03\u7528\u8005Agent\uff0c\u4e2d\u4ecb class Broker ( object ): def __init__ ( self ): self . __order_list = [] # \u8ba2\u5355\u961f\u5217 def add_order ( self , order ): self . __order_list . append ( order ) def place_order ( self ): for order in self . __order_list : order . execute () self . __order_list . clear () if __name__ == '__main__' : # client stock = StockTrade () buy_stock = BuyStockOrder ( stock ) sell_stock = SellStockOrder ( stock ) # invoker broker = Broker () broker . add_order ( buy_stock ) broker . add_order ( sell_stock ) broker . place_order () \"\"\" buy stock sell stock \"\"\" 1\u3001A\u80a1\u5229\u6da6\u8868\uff0c\u8d44\u4ea7\u8d1f\u503a\u8868\uff0c\u73b0\u91d1\u6d41\u91cf\u8868\u8865\u51682019\u5e74\u4e00\u5b63\u5ea6\u6570\u636e 3\u3001\u67e5\u627e\u878d\u8d44\u5386\u53f2\u4e2d\u5f02\u5e38\u6570\u636e\uff0c\u53d1\u73b0500\u591a\u6761\u9636\u6bb5\u91cd\u590d\u7684\u6570\u636e\uff0c\u8fd0\u8425\u5355\u72ec\u5904\u7406 4\u3001A\u80a1\u3001\u6e2f\u80a1\u516c\u5f00\u53d1\u884c\u9636\u6bb5\u4e0d\u663e\u793a\uff0c\u548cdel\u9879\u76ee\u5904\u7406 \u4fee\u590d\u540e\u89c2\u5bdf\u4e0b \u6700\u540e\u4e0a\u5e02\u65f6\u95f4\u4e3a\uff1a2019.06.18 5\u3001\u5904\u7406\u6e2f\u80a1\u62a5\u544a\u5927\u5c0f\uff0c\u7edf\u4e00\u4fee\u6539\u4e3a\u5b57\u8282\u5b58\u50a8\u6d89\u53ca\u8868 mf_hk_prospectus TODO\uff1a 1\u3001\u4fee\u590d \u6e2f\u80a1\u5386\u53f2\u62a5\u544a ganggu_history_reports 301 2\u3001\u4fee\u590d \u6e2f\u80a1\u6240\u6709\u516c\u544a ganggu_reports 302 2\u3001\u6e2f\u80a1\u516c\u53f8\u540d -B \u8fd9\u79cd\u5c31\u53bb\u6389\u8fd9\u4e2a\u5c0f\u5c3e\u5df4\uff08\u540e\u9762\u5904\u7406\uff0c\u6570\u636e\u53ef\u80fd\u4f1a\u91cd\u590d\uff09","title":"\u547d\u4ee4\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u547d\u4ee4\u6a21\u5f0f/#_1","text":"\u547d\u4ee4\u6a21\u5f0f\u5c5e\u4e8e\u884c\u4e3a\u578b\u6a21\u5f0f \u884c\u4e3a\u578b\u6a21\u5f0f\u4fa7\u91cd\u4e8e\u5bf9\u8c61\u7684\u54cd\u5e94\u6027\uff0c\u5229\u7528\u5bf9\u8c61\u4e4b\u95f4\u7684\u4ea4\u4e92\u5b9e\u73b0\u66f4\u5f3a\u5927\u7684\u529f\u80fd \u5176\u4e2d\u5bf9\u8c61\u7528\u4e8e\u5c01\u88c5\u5728\u5b8c\u6210\u4e00\u9879\u64cd\u4f5c\u6216\u5728\u89e6\u53d1\u4e00\u4e2a\u4e8b\u4ef6\u65f6\u6240\u9700\u7684\u5168\u90e8\u4fe1\u606f\uff1a 1\u3001\u65b9\u6cd5\u540d\u79f0 2\u3001\u62e5\u6709\u65b9\u6cd5\u7684\u5bf9\u8c61 3\u3001\u65b9\u6cd5\u53c2\u6570\u7684\u503c","title":"\u547d\u4ee4\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u547d\u4ee4\u6a21\u5f0f/#_2","text":"Command: \u58f0\u660e\u6267\u884c\u64cd\u4f5c\u7684\u63a5\u53e3 ConcreteCommand\uff1a\u5c06\u4e00\u4e2aReceiver\u5bf9\u8c61\u548c\u4e00\u4e2a\u64cd\u4f5c\u7ed1\u5b9a\u5728\u4e00\u8d77 Receiver\uff1a\u521b\u5efaConcreteCommand\u5bf9\u8c61\u5e76\u8bbe\u5b9a\u5176\u63a5\u6536\u8005 Invoker\uff1a\u8981\u6c42\u8be5ConcreteCommand\u6267\u884c\u8fd9\u4e2a\u8bf7\u6c42 Client\uff1a\u77e5\u9053\u5982\u4f55\u5b9e\u65bd\u4e0e\u6267\u884c\u4e00\u4e2a\u8bf7\u6c42\u76f8\u5173\u7684\u64cd\u4f5c \u6267\u884c\u6d41\u7a0b\uff1a \u5ba2\u6237\u7aef\u8bf7\u6c42\u6267\u884c\u547d\u4ee4\uff0c \u8c03\u7528\u8005\u63a5\u53d7\u547d\u4ee4\uff0c\u5c01\u88c5\u5b83\u5e76\u5c06\u5176\u653e\u7f6e\u5230\u961f\u5217\u4e2d\uff0c ConcreteCommand\u7c7b\u6839\u636e\u6240\u8bf7\u6c42\u7684\u547d\u4ee4\u6765\u77e5\u9053\u63a5\u6536\u8005\u6267\u884c\u7279\u5b9a\u7684\u52a8\u4f5c","title":"\u547d\u4ee4\u6a21\u5f0f\u672f\u8bed"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u547d\u4ee4\u6a21\u5f0f/#_3","text":"1\u3001\u5c06\u8bf7\u6c42\u5c01\u88c5\u4e3a\u5bf9\u8c61 2\u3001\u53ef\u7528\u4e0d\u540c\u7684\u8bf7\u6c42\u5bf9\u5ba2\u6237\u8fdb\u884c\u53c2\u6570\u5316 3\u3001\u5141\u8bb8\u5c06\u8bf7\u6c42\u4fdd\u5b58\u5728\u961f\u5217\u4e2d 4\u3001\u63d0\u4f9b\u9762\u5411\u5bf9\u8c61\u7684\u56de\u8c03","title":"\u547d\u4ee4\u6a21\u5f0f\u4e3b\u8981\u610f\u56fe"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u547d\u4ee4\u6a21\u5f0f/#_4","text":"1\u3001\u6839\u636e\u9700\u8981\u6267\u884c\u7684\u64cd\u4f5c\u5bf9\u5bf9\u8c61\u8fdb\u884c\u53c2\u6570\u5316 2\u3001\u5c06\u64cd\u4f5c\u6dfb\u52a0\u5230\u961f\u5217\u5e76\u5728\u4e0d\u540c\u5730\u70b9\u6267\u884c\u8bf7\u6c42 3\u3001\u521b\u5efa\u4e00\u4e2a\u7ed3\u6784\u6765\u6839\u636e\u8f83\u5c0f\u64cd\u4f5c\u5b8c\u6210\u9ad8\u7ea7\u64cd\u4f5c","title":"\u547d\u4ee4\u6a21\u5f0f\u9002\u7528\u573a\u666f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u547d\u4ee4\u6a21\u5f0f/#_5","text":"1\u3001\u91cd\u505a\u6216\u56de\u6eda\u64cd\u4f5c 2\u3001\u5f02\u6b65\u4efb\u52a1\u6267\u884c","title":"\u547d\u4ee4\u6a21\u5f0f\u5e94\u7528"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u547d\u4ee4\u6a21\u5f0f/#_6","text":"1\u3001\u5c06\u8c03\u7528\u64cd\u4f5c\u7684\u7c7b\u4e0e\u77e5\u9053\u5982\u4f55\u6267\u884c\u8be5\u64cd\u4f5c\u7684\u5bf9\u8c61\u89e3\u8026 2\u3001\u63d0\u4f9b\u961f\u5217\u7cfb\u7edf\u540e\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u7cfb\u5217\u547d\u4ee4 3\u3001\u6dfb\u52a0\u65b0\u547d\u4ee4\u66f4\u5bb9\u6613\uff0c\u5e76\u4e14\u65e0\u9700\u66f4\u6539\u73b0\u6709\u4ee3\u7801 4\u3001\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u6a21\u5f0f\u5b9a\u4e49\u56de\u6eda\u7cfb\u7edf","title":"\u547d\u4ee4\u6a21\u5f0f\u7684\u4f18\u70b9"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u547d\u4ee4\u6a21\u5f0f/#_7","text":"1\u3001\u4e3a\u4e86\u5b9e\u73b0\u76ee\u6807\uff0c\u9700\u8981\u5927\u91cf\u7684\u7c7b\u548c\u5bf9\u8c61\u8fdb\u884c\u534f\u4f5c 2\u3001\u6bcf\u4e2a\u5355\u72ec\u7684\u547d\u4ee4\u90fd\u662f\u4e00\u4e2aConcreteCommand\u7c7b\uff0c\u4ece\u800c\u589e\u52a0\u4e86\u9700\u8981\u5b9e\u73b0\u548c\u7ef4\u62a4\u7684\u7c7b\u7684\u6570\u91cf","title":"\u547d\u4ee4\u6a21\u5f0f\u7684\u7f3a\u70b9"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u547d\u4ee4\u6a21\u5f0f/#_8","text":"# -*- coding: utf-8 -*- from abc import ABCMeta , abstractmethod # \u63d0\u4f9b\u63a5\u53e3Command class Order ( metaclass = ABCMeta ): @abstractmethod def execute ( self ): pass # \u5177\u4f53\u547d\u4ee4 ConcreteCommand class BuyStockOrder ( Order ): def __init__ ( self , stock ): self . stock = stock def execute ( self ): self . stock . buy () class SellStockOrder ( Order ): def __init__ ( self , stock ): self . stock = stock def execute ( self ): self . stock . sell () # Receiver\u5bf9\u8c61 class StockTrade ( object ): def buy ( self ): print ( \"buy stock\" ) def sell ( self ): print ( \"sell stock\" ) # \u8c03\u7528\u8005Agent\uff0c\u4e2d\u4ecb class Broker ( object ): def __init__ ( self ): self . __order_list = [] # \u8ba2\u5355\u961f\u5217 def add_order ( self , order ): self . __order_list . append ( order ) def place_order ( self ): for order in self . __order_list : order . execute () self . __order_list . clear () if __name__ == '__main__' : # client stock = StockTrade () buy_stock = BuyStockOrder ( stock ) sell_stock = SellStockOrder ( stock ) # invoker broker = Broker () broker . add_order ( buy_stock ) broker . add_order ( sell_stock ) broker . place_order () \"\"\" buy stock sell stock \"\"\" 1\u3001A\u80a1\u5229\u6da6\u8868\uff0c\u8d44\u4ea7\u8d1f\u503a\u8868\uff0c\u73b0\u91d1\u6d41\u91cf\u8868\u8865\u51682019\u5e74\u4e00\u5b63\u5ea6\u6570\u636e 3\u3001\u67e5\u627e\u878d\u8d44\u5386\u53f2\u4e2d\u5f02\u5e38\u6570\u636e\uff0c\u53d1\u73b0500\u591a\u6761\u9636\u6bb5\u91cd\u590d\u7684\u6570\u636e\uff0c\u8fd0\u8425\u5355\u72ec\u5904\u7406 4\u3001A\u80a1\u3001\u6e2f\u80a1\u516c\u5f00\u53d1\u884c\u9636\u6bb5\u4e0d\u663e\u793a\uff0c\u548cdel\u9879\u76ee\u5904\u7406 \u4fee\u590d\u540e\u89c2\u5bdf\u4e0b \u6700\u540e\u4e0a\u5e02\u65f6\u95f4\u4e3a\uff1a2019.06.18 5\u3001\u5904\u7406\u6e2f\u80a1\u62a5\u544a\u5927\u5c0f\uff0c\u7edf\u4e00\u4fee\u6539\u4e3a\u5b57\u8282\u5b58\u50a8\u6d89\u53ca\u8868 mf_hk_prospectus TODO\uff1a 1\u3001\u4fee\u590d \u6e2f\u80a1\u5386\u53f2\u62a5\u544a ganggu_history_reports 301 2\u3001\u4fee\u590d \u6e2f\u80a1\u6240\u6709\u516c\u544a ganggu_reports 302 2\u3001\u6e2f\u80a1\u516c\u53f8\u540d -B \u8fd9\u79cd\u5c31\u53bb\u6389\u8fd9\u4e2a\u5c0f\u5c3e\u5df4\uff08\u540e\u9762\u5904\u7406\uff0c\u6570\u636e\u53ef\u80fd\u4f1a\u91cd\u590d\uff09","title":"\u4ee3\u7801\u5b9e\u4f8b\uff1a"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u5de5\u5382\u6a21\u5f0f/","text":"\u5de5\u5382\u6a21\u5f0f \u5de5\u5382\uff1a \u8868\u793a\u8d1f\u8d23\u521b\u5efa\u5176\u4ed6\u7c7b\u578b\u5bf9\u8c61\u7684\u7c7b \u4f18\u70b9\uff1a 1\u3001\u677e\u8026\u5408\uff0c\u5bf9\u8c61\u7684\u521b\u5efa\u53ef\u4ee5\u72ec\u7acb\u4e8e\u7c7b\u7684\u5b9e\u73b0 2\u3001\u5ba2\u6237\u7aef\u65e0\u9700\u4e86\u89e3\u521b\u5efa\u5bf9\u8c61\u7684\u7c7b\uff0c\u4f46\u662f\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u521b\u5efa\u5bf9\u8c61\u3002\u53ea\u9700\u8981\u77e5\u9053\u9700\u8981\u4f20\u9012\u7684\u63a5\u53e3\uff0c\u65b9\u6cd5\u548c\u53c2\u6570 3\u3001\u5de5\u5382\u4e2d\u6dfb\u52a0\u5176\u4ed6\u7c7b\u6765\u521b\u5efa\u5176\u4ed6\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u65e0\u9700\u66f4\u6539\u5ba2\u6237\u7aef\u4ee3\u7801 4\u3001\u5de5\u5382\u53ef\u4ee5\u91cd\u7528\u73b0\u6709\u5bf9\u8c61 \u5206\u7c7b 1\u3001\u7b80\u5355\u5de5\u5382\u6a21\u5f0f \u5141\u8bb8\u63a5\u53e3\u521b\u5efa\u5bf9\u8c61\uff0c\u4f46\u4e0d\u4f1a\u66b4\u9732\u5bf9\u8c61\u7684\u521b\u5efa\u903b\u8f91 2\u3001\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f \u5141\u8bb8\u63a5\u53e3\u521b\u5efa\u5bf9\u8c61\uff0c\u4f46\u4f7f\u7528\u54ea\u4e2a\u7c7b\u6765\u521b\u5efa\u5bf9\u8c61\uff0c\u5219\u4ea4\u7531\u5b50\u7c7b\u51b3\u5b9a 3\u3001\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f \u62bd\u8c61\u5de5\u5382\u662f\u4e00\u4e2a\u80fd\u521b\u5efa\u4e00\u7cfb\u5217\u76f8\u5173\u5bf9\u8c61\uff0c\u800c\u65e0\u9700\u6307\u5b9a/\u516c\u5f00\u5177\u4f53\u7c7b\u7684\u63a5\u53e3\uff0c \u8be5\u6a21\u5f0f\u80fd\u591f\u63d0\u4f9b\u5176\u4ed6\u5de5\u5382\u7684\u5bf9\u8c61\uff0c\u5728\u5176\u5185\u90e8\u521b\u5efa\u5bf9\u8c61 \u7b80\u5355\u5de5\u5382\u6a21\u5f0f # -*- coding: utf-8 -*- from abc import ABC , abstractmethod class Animal ( ABC ): @abstractmethod def say_hi ( self ): pass class Dog ( Animal ): def say_hi ( self ): print ( \"\u6c6a\u6c6a\u6c6a...\" ) class Cat ( Animal ): def say_hi ( self ): print ( \"\u55b5\u55b5\u55b5...\" ) class Factory ( object ): def make_sound ( self , animal ): eval ( animal )() . say_hi () if __name__ == '__main__' : factory = Factory () factory . make_sound ( \"Dog\" ) factory . make_sound ( \"Cat\" ) \"\"\" \u6c6a\u6c6a\u6c6a... \u55b5\u55b5\u55b5... \"\"\" \u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f 1\u3001\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\u6765\u521b\u5efa\u5bf9\u8c61\uff0c\u5de5\u5382\u672c\u8eab\u5e76\u4e0d\u8d1f\u8d23\u521b\u5efa\u5bf9\u8c61\uff0c\u7531\u5b50\u7c7b\u5b8c\u6210 2\u3001\u5de5\u5382\u65b9\u6cd5\u7684\u521b\u5efa\u901a\u8fc7\u7ee7\u627f\u800c\u4e0d\u662f\u5b9e\u4f8b\u5316\u5b8c\u6210 3\u3001\u5de5\u5382\u65b9\u6cd5\u4f7f\u5f97\u8bbe\u8ba1\u66f4\u52a0\u5177\u6709\u53ef\u5b9a\u5236\u6027\uff0c\u8fd4\u56de\u76f8\u540c\u7684\u5b9e\u4f8b\u6216\u5b50\u7c7b\uff0c\u800c\u4e0d\u662f\u67d0\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\uff08\u7c7b\u4f3c\u7b80\u5355\u5de5\u5382\u65b9\u6cd5\uff09 # -*- coding: utf-8 -*- from abc import ABC , abstractmethod # \u7ec4\u4ef6\u90e8\u5206 class Section ( ABC ): @abstractmethod def describe ( self ): pass class PersonalSection ( Section ): def describe ( self ): print ( \"PersonalSection\" ) class AlbumSection ( Section ): def describe ( self ): print ( \"AlbumSection\" ) class PatentSection ( Section ): def describe ( self ): print ( \"PatentSection\" ) class PublicationSection ( Section ): def describe ( self ): print ( \"PublicationSection\" ) # \u5de5\u5382\u90e8\u5206 class Profile ( ABC ): def __init__ ( self ): self . sections = [] self . create_profile () @abstractmethod def create_profile ( self ): pass def show_sections ( self ): for section in self . sections : section . describe () def add_section ( self , section ): self . sections . append ( section ) class LinkedIn ( Profile ): def create_profile ( self ): self . add_section ( PersonalSection ()) self . add_section ( PatentSection ()) self . add_section ( PublicationSection ()) class FaceBook ( Profile ): def create_profile ( self ): self . add_section ( PersonalSection ()) self . add_section ( AlbumSection ()) if __name__ == '__main__' : linkedin = LinkedIn () linkedin . show_sections () \"\"\" PersonalSection PatentSection PublicationSection \"\"\" facebook = FaceBook () facebook . show_sections () \"\"\" PersonalSection AlbumSection \"\"\" \u62bd\u8c61\u5de5\u5382 \u63d0\u4f9b\u4e00\u4e2a\u63a5\u53e3\u6765\u521b\u5efa\u4e00\u7cfb\u5217\u76f8\u5173\u5bf9\u8c61\uff0c\u800c\u65e0\u9700\u6307\u5b9a\u5177\u4f53\u7684\u7c7b # -*- coding: utf-8 -*- from abc import ABC , abstractmethod class FruitPizza ( ABC ): @abstractmethod def prepare ( self ): pass class MeatPizza ( ABC ): @abstractmethod def serve ( self ): pass class ApplePizza ( FruitPizza ): def prepare ( self ): print ( \"ApplePizza\" ) class PeachPizza ( FruitPizza ): def prepare ( self ): print ( \"PeachPizza\" ) class PorkPizza ( MeatPizza ): def serve ( self ): print ( \"PorkPizza\" ) class BeefPizza ( MeatPizza ): def serve ( self ): print ( \"BeefPizza\" ) # \u62bd\u8c61\u5de5\u5382 class PizzaFactory ( ABC ): @abstractmethod def create_meat_pizza ( self ): pass @abstractmethod def create_fruit_pizza ( self ): pass class IndianPizzaFactory ( PizzaFactory ): def create_meat_pizza ( self ): return PorkPizza () def create_fruit_pizza ( self ): return ApplePizza () class USPizzaFactory ( PizzaFactory ): def create_meat_pizza ( self ): return BeefPizza () def create_fruit_pizza ( self ): return PeachPizza () class PizzaStore ( object ): def make_pizza ( self ): for factory in [ IndianPizzaFactory (), USPizzaFactory ()]: meat_pizza = factory . create_meat_pizza () fruit_pizza = factory . create_fruit_pizza () meat_pizza . serve () fruit_pizza . prepare () if __name__ == '__main__' : pizza_store = PizzaStore () pizza_store . make_pizza () \"\"\" PorkPizza ApplePizza BeefPizza PeachPizza \"\"\" \u533a\u522b \u5de5\u5382\u65b9\u6cd5 | \u62bd\u8c61\u5de5\u5382\u65b9\u6cd5 -|- \u5411\u5ba2\u6237\u7aef\u5f00\u653e\u4e86\u4e00\u4e2a\u521b\u5efa\u5bf9\u8c61\u7684\u65b9\u6cd5 | \u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u5de5\u5382\u65b9\u6cd5\u6765\u521b\u5efa\u4e00\u4e2a\u7cfb\u5217\u7684\u76f8\u5173\u5bf9\u8c61 \u4f7f\u7528\u7ee7\u627f\u548c\u5b50\u7c7b\u51b3\u5b9a\u521b\u5efa\u54ea\u4e2a\u5bf9\u8c61 | \u4f7f\u7528\u7ec4\u5408\u5c06\u521b\u5efa\u5bf9\u8c61\u7684\u4efb\u52a1\u59d4\u6258\u7ed9\u5176\u4ed6\u7c7b \u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u4ea7\u54c1 | \u7528\u4e8e\u521b\u5efa\u76f8\u5173\u4ea7\u54c1\u7684\u7cfb\u5217 \u603b\u7ed3\uff1a \u7b80\u5355\u5de5\u5382\uff1a\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5ba2\u6237\u7aef\u4f20\u5165\u7684\u53c2\u6570\u7c7b\u578b\u6765\u521b\u5efa\u76f8\u5e94\u7684\u5b9e\u4f8b \u5de5\u5382\u65b9\u6cd5\uff1a\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\u6765\u521b\u5efa\u5bf9\u8c61\uff0c\u4f46\u662f\u521b\u5efa\u5bf9\u8c61\u7531\u5b50\u7c7b\u5b8c\u6210 \u62bd\u8c61\u5de5\u5382\u65b9\u6cd5\uff1a\u63d0\u4f9b\u4e00\u4e2a\u63a5\u53e3\uff0c\u65e0\u9700\u6307\u5b9a\u5177\u4f53\u7684\u7c7b\uff0c\u5c31\u80fd\u521b\u5efa\u4e00\u7cfb\u5217\u76f8\u5173\u7684\u5bf9\u8c61","title":"\u5de5\u5382\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u5de5\u5382\u6a21\u5f0f/#_1","text":"# -*- coding: utf-8 -*- from abc import ABC , abstractmethod class Animal ( ABC ): @abstractmethod def say_hi ( self ): pass class Dog ( Animal ): def say_hi ( self ): print ( \"\u6c6a\u6c6a\u6c6a...\" ) class Cat ( Animal ): def say_hi ( self ): print ( \"\u55b5\u55b5\u55b5...\" ) class Factory ( object ): def make_sound ( self , animal ): eval ( animal )() . say_hi () if __name__ == '__main__' : factory = Factory () factory . make_sound ( \"Dog\" ) factory . make_sound ( \"Cat\" ) \"\"\" \u6c6a\u6c6a\u6c6a... \u55b5\u55b5\u55b5... \"\"\"","title":"\u7b80\u5355\u5de5\u5382\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u5de5\u5382\u6a21\u5f0f/#_2","text":"1\u3001\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\u6765\u521b\u5efa\u5bf9\u8c61\uff0c\u5de5\u5382\u672c\u8eab\u5e76\u4e0d\u8d1f\u8d23\u521b\u5efa\u5bf9\u8c61\uff0c\u7531\u5b50\u7c7b\u5b8c\u6210 2\u3001\u5de5\u5382\u65b9\u6cd5\u7684\u521b\u5efa\u901a\u8fc7\u7ee7\u627f\u800c\u4e0d\u662f\u5b9e\u4f8b\u5316\u5b8c\u6210 3\u3001\u5de5\u5382\u65b9\u6cd5\u4f7f\u5f97\u8bbe\u8ba1\u66f4\u52a0\u5177\u6709\u53ef\u5b9a\u5236\u6027\uff0c\u8fd4\u56de\u76f8\u540c\u7684\u5b9e\u4f8b\u6216\u5b50\u7c7b\uff0c\u800c\u4e0d\u662f\u67d0\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\uff08\u7c7b\u4f3c\u7b80\u5355\u5de5\u5382\u65b9\u6cd5\uff09 # -*- coding: utf-8 -*- from abc import ABC , abstractmethod # \u7ec4\u4ef6\u90e8\u5206 class Section ( ABC ): @abstractmethod def describe ( self ): pass class PersonalSection ( Section ): def describe ( self ): print ( \"PersonalSection\" ) class AlbumSection ( Section ): def describe ( self ): print ( \"AlbumSection\" ) class PatentSection ( Section ): def describe ( self ): print ( \"PatentSection\" ) class PublicationSection ( Section ): def describe ( self ): print ( \"PublicationSection\" ) # \u5de5\u5382\u90e8\u5206 class Profile ( ABC ): def __init__ ( self ): self . sections = [] self . create_profile () @abstractmethod def create_profile ( self ): pass def show_sections ( self ): for section in self . sections : section . describe () def add_section ( self , section ): self . sections . append ( section ) class LinkedIn ( Profile ): def create_profile ( self ): self . add_section ( PersonalSection ()) self . add_section ( PatentSection ()) self . add_section ( PublicationSection ()) class FaceBook ( Profile ): def create_profile ( self ): self . add_section ( PersonalSection ()) self . add_section ( AlbumSection ()) if __name__ == '__main__' : linkedin = LinkedIn () linkedin . show_sections () \"\"\" PersonalSection PatentSection PublicationSection \"\"\" facebook = FaceBook () facebook . show_sections () \"\"\" PersonalSection AlbumSection \"\"\"","title":"\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u5de5\u5382\u6a21\u5f0f/#_3","text":"\u63d0\u4f9b\u4e00\u4e2a\u63a5\u53e3\u6765\u521b\u5efa\u4e00\u7cfb\u5217\u76f8\u5173\u5bf9\u8c61\uff0c\u800c\u65e0\u9700\u6307\u5b9a\u5177\u4f53\u7684\u7c7b # -*- coding: utf-8 -*- from abc import ABC , abstractmethod class FruitPizza ( ABC ): @abstractmethod def prepare ( self ): pass class MeatPizza ( ABC ): @abstractmethod def serve ( self ): pass class ApplePizza ( FruitPizza ): def prepare ( self ): print ( \"ApplePizza\" ) class PeachPizza ( FruitPizza ): def prepare ( self ): print ( \"PeachPizza\" ) class PorkPizza ( MeatPizza ): def serve ( self ): print ( \"PorkPizza\" ) class BeefPizza ( MeatPizza ): def serve ( self ): print ( \"BeefPizza\" ) # \u62bd\u8c61\u5de5\u5382 class PizzaFactory ( ABC ): @abstractmethod def create_meat_pizza ( self ): pass @abstractmethod def create_fruit_pizza ( self ): pass class IndianPizzaFactory ( PizzaFactory ): def create_meat_pizza ( self ): return PorkPizza () def create_fruit_pizza ( self ): return ApplePizza () class USPizzaFactory ( PizzaFactory ): def create_meat_pizza ( self ): return BeefPizza () def create_fruit_pizza ( self ): return PeachPizza () class PizzaStore ( object ): def make_pizza ( self ): for factory in [ IndianPizzaFactory (), USPizzaFactory ()]: meat_pizza = factory . create_meat_pizza () fruit_pizza = factory . create_fruit_pizza () meat_pizza . serve () fruit_pizza . prepare () if __name__ == '__main__' : pizza_store = PizzaStore () pizza_store . make_pizza () \"\"\" PorkPizza ApplePizza BeefPizza PeachPizza \"\"\" \u533a\u522b \u5de5\u5382\u65b9\u6cd5 | \u62bd\u8c61\u5de5\u5382\u65b9\u6cd5 -|- \u5411\u5ba2\u6237\u7aef\u5f00\u653e\u4e86\u4e00\u4e2a\u521b\u5efa\u5bf9\u8c61\u7684\u65b9\u6cd5 | \u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u5de5\u5382\u65b9\u6cd5\u6765\u521b\u5efa\u4e00\u4e2a\u7cfb\u5217\u7684\u76f8\u5173\u5bf9\u8c61 \u4f7f\u7528\u7ee7\u627f\u548c\u5b50\u7c7b\u51b3\u5b9a\u521b\u5efa\u54ea\u4e2a\u5bf9\u8c61 | \u4f7f\u7528\u7ec4\u5408\u5c06\u521b\u5efa\u5bf9\u8c61\u7684\u4efb\u52a1\u59d4\u6258\u7ed9\u5176\u4ed6\u7c7b \u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u4ea7\u54c1 | \u7528\u4e8e\u521b\u5efa\u76f8\u5173\u4ea7\u54c1\u7684\u7cfb\u5217 \u603b\u7ed3\uff1a \u7b80\u5355\u5de5\u5382\uff1a\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5ba2\u6237\u7aef\u4f20\u5165\u7684\u53c2\u6570\u7c7b\u578b\u6765\u521b\u5efa\u76f8\u5e94\u7684\u5b9e\u4f8b \u5de5\u5382\u65b9\u6cd5\uff1a\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\u6765\u521b\u5efa\u5bf9\u8c61\uff0c\u4f46\u662f\u521b\u5efa\u5bf9\u8c61\u7531\u5b50\u7c7b\u5b8c\u6210 \u62bd\u8c61\u5de5\u5382\u65b9\u6cd5\uff1a\u63d0\u4f9b\u4e00\u4e2a\u63a5\u53e3\uff0c\u65e0\u9700\u6307\u5b9a\u5177\u4f53\u7684\u7c7b\uff0c\u5c31\u80fd\u521b\u5efa\u4e00\u7cfb\u5217\u76f8\u5173\u7684\u5bf9\u8c61","title":"\u62bd\u8c61\u5de5\u5382"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668-\u590d\u5408\u6a21\u5f0f/","text":"\u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668-MVC\u590d\u5408\u6a21\u5f0f \u590d\u5408\u6a21\u5f0f\uff1a \u5c06\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u6a21\u5f0f\u7ec4\u5408\u6210\u89e3\u51b3\u5e38\u89c1\u6216\u666e\u904d\u6027\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848 MVC\u6a21\u5f0f\u5de5\u4f5c\u673a\u5236 \u6a21\u578b\uff0c\u63d0\u4f9b\u6570\u636e\u548c\u4e1a\u52a1\u903b\u8f91 \u89c6\u56fe\uff0c\u8d1f\u8d23\u6570\u636e\u5c55\u793a \u63a7\u5236\u5668\uff0c\u6a21\u578b\u548c\u89c6\u56fe\u7684\u7c98\u5408\u5242 MVC\u6a21\u5f0f\u672f\u8bed \u6a21\u578b\uff1a\u58f0\u660e\u4e00\u4e2a\u5b58\u50a8\u548c\u64cd\u4f5c\u6570\u636e\u7684\u7c7b \u89c6\u56fe\uff1a\u58f0\u660e\u4e00\u4e2a\u7c7b\u6765\u6784\u5efa\u7528\u6237\u754c\u9762\u548c\u663e\u793a\u6570\u636e \u63a7\u5236\u5668\uff1a\u58f0\u660e\u4e00\u4e2a\u8fde\u63a5\u6a21\u578b\u548c\u89c6\u56fe\u7684\u7c7b \u5ba2\u6237\u7aef\uff1a\u58f0\u660e\u4e00\u4e2a\u7c7b\uff0c\u66f4\u5177\u67d0\u4e9b\u64cd\u4f5c\u6765\u83b7\u5f97\u67d0\u4e9b\u7ed3\u679c MVC\u6a21\u5f0f\u5e94\u7528\u573a\u666f 1\u3001\u5f53\u9700\u8981\u66f4\u6539\u5c55\u793a\u65b9\u5f0f\u800c\u4e0d\u66f4\u6539\u4e1a\u52a1\u903b\u8f91 2\u3001\u591a\u4e2a\u63a7\u5236\u5668\u53ef\u4ee5\u7528\u4e8e\u4f7f\u7528\u591a\u4e2a\u89c6\u56fe\u6765\u66f4\u6539\u7528\u6237\u754c\u9762\u4e0a\u7684\u5c55\u793a 3\u3001\u518d\u6b21\u91cd\u7533\uff0c\u5f53\u6a21\u578b\u6539\u53d8\u65f6\uff0c\u89c6\u56fe\u65e0\u9700\u6539\u52a8\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u76f8\u4e92\u72ec\u7acb\u7684 MVC\u8be6\u7ec6\u4ecb\u7ecd 1\u3001\u6a21\u578b-\u4e86\u89e3\u5e94\u7528\u7a0b\u5e8f\u7684\u60c5\u51b5 \u6a21\u578b\u662f\u5e94\u7528\u7a0b\u5e8f\u7684\u57fa\u77f3\uff0c\u5b83\u72ec\u7acb\u4e8e\u89c6\u56fe\u548c\u63a7\u5236\u5668\uff0c\u800c\u89c6\u56fe\u548c\u63a7\u5236\u5668\u5219\u4f9d\u8d56\u4e8e\u6a21\u578b 2\u3001\u89c6\u56fe-\u5916\u89c2 \u89c6\u56fe\u7528\u6765\u5c06\u6570\u636e\u5c55\u793a\u5230\u63a5\u53e3\u4e0a\uff0c\u53ef\u4ee5\u72ec\u7acb\u5f00\u53d1\uff0c\u4f46\u4e0d\u5e94\u8be5\u5305\u542b\u4efb\u4f55\u590d\u6742\u7684\u903b\u8f91 \u903b\u8f91\u5e94\u8be5\u653e\u5728\u63a7\u5236\u5668\u6216\u6a21\u578b\u4e2d 3\u3001\u63a7\u5236\u5668-\u80f6\u6c34 \u63a7\u5236\u5668\u7528\u6765\u63a7\u5236\u7528\u6237\u5728\u754c\u9762\u4e0a\u7684\u4ea4\u4e92 \u63a7\u5236\u5668\u4e0d\u5e94\u8be5\u8fdb\u884c\u6570\u636e\u5e93\u8c03\u7528\u6216\u53c2\u4e0e\u6570\u636e\u5c55\u793a \u63a7\u5236\u5668\u5e94\u8be5\u4f5c\u4e3a\u6a21\u578b\u548c\u89c6\u56fe\u4e4b\u95f4\u7684\u7c98\u5408\u5242\uff0c\u5e76\u4e14\u5c3d\u53ef\u80fd\u8584 MVC\u6a21\u5f0f\u7684\u4f18\u70b9 1\u3001\u4f7f\u7528MVC\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5c06\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u5206\u4e3a3\u4e2a\u4e3b\u8981\u90e8\u5206\uff1a\u6a21\u578b\uff0c\u89c6\u56fe\uff0c\u63a7\u5236\u5668 \u6709\u52a9\u4e8e\u63d0\u9ad8\u53ef\u7ef4\u62a4\u6027\uff0c\u5f3a\u5236\u677e\u8026\u5408\uff0c\u5e76\u964d\u4f4e\u590d\u6742\u5ea6 2\u3001MVC\u5141\u8bb8\u5bf9\u524d\u7aef\u89c6\u56fe\u8fdb\u884c\u72ec\u7acb\u66f4\u6539\uff0c\u800c\u540e\u7aef\u903b\u8f91\u65e0\u9700\u4efb\u4f55\u4fee\u6539\u6216\u53ea\u9700\u8fdb\u884c\u5f88\u5c11\u7684\u66f4\u6539 \u56e0\u6b64\uff0c\u5f00\u53d1\u5de5\u4f5c\u4ecd\u7136\u53ef\u4ee5\u72ec\u7acb\u8fdb\u884c 3\u3001\u7c7b\u4f3c\u5730\uff0c\u53ef\u4ee5\u66f4\u6539\u6a21\u578b\u6216\u4e1a\u52a1\u903b\u8f91\uff0c\u800c\u65e0\u9700\u5bf9\u89c6\u56fe\u8fdb\u884c\u4efb\u4f55\u66f4\u6539 4\u3001\u53ef\u4ee5\u66f4\u6539\u63a7\u5236\u5668\uff0c\u800c\u4e0d\u4f1a\u5bf9\u89c6\u56fe\u6216\u8005\u6a21\u578b\u9020\u6210\u4efb\u4f55\u5f71\u54cd 5\u3001MVC\u6709\u52a9\u4e8e\u62db\u8058\u5177\u6709\u7279\u5b9a\u80fd\u529b\u7684\u4eba\u5458\uff0c\u4f8b\u5982\u5e73\u53f0\u5de5\u7a0b\u5e08\u548cUI\u5de5\u7a0b\u5e08\uff0c \u4ed6\u4eec\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u4e13\u4e1a\u9886\u57df\u72ec\u7acb\u5de5\u4f5c \u4ee3\u7801\u793a\u4f8b # -*- coding: utf-8 -*- class Model ( object ): def get_data ( self ): data = [ { \"name\" : \"Tom\" , \"age\" : 23 }, { \"name\" : \"Jack\" , \"age\" : 21 }, ] return data class View ( object ): def show_data ( self , data ): for row in data : print ( row [ \"name\" ], row [ \"age\" ]) class Controller ( object ): def __init__ ( self ): self . model = Model () self . view = View () def interface ( self ): data = self . model . get_data () self . view . show_data ( data ) if __name__ == '__main__' : controller = Controller () controller . interface () \"\"\" Tom 23 Jack 21 \"\"\"","title":"\u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668-MVC\u590d\u5408\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668-\u590d\u5408\u6a21\u5f0f/#-mvc","text":"\u590d\u5408\u6a21\u5f0f\uff1a \u5c06\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u6a21\u5f0f\u7ec4\u5408\u6210\u89e3\u51b3\u5e38\u89c1\u6216\u666e\u904d\u6027\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848","title":"\u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668-MVC\u590d\u5408\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668-\u590d\u5408\u6a21\u5f0f/#mvc","text":"\u6a21\u578b\uff0c\u63d0\u4f9b\u6570\u636e\u548c\u4e1a\u52a1\u903b\u8f91 \u89c6\u56fe\uff0c\u8d1f\u8d23\u6570\u636e\u5c55\u793a \u63a7\u5236\u5668\uff0c\u6a21\u578b\u548c\u89c6\u56fe\u7684\u7c98\u5408\u5242","title":"MVC\u6a21\u5f0f\u5de5\u4f5c\u673a\u5236"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668-\u590d\u5408\u6a21\u5f0f/#mvc_1","text":"\u6a21\u578b\uff1a\u58f0\u660e\u4e00\u4e2a\u5b58\u50a8\u548c\u64cd\u4f5c\u6570\u636e\u7684\u7c7b \u89c6\u56fe\uff1a\u58f0\u660e\u4e00\u4e2a\u7c7b\u6765\u6784\u5efa\u7528\u6237\u754c\u9762\u548c\u663e\u793a\u6570\u636e \u63a7\u5236\u5668\uff1a\u58f0\u660e\u4e00\u4e2a\u8fde\u63a5\u6a21\u578b\u548c\u89c6\u56fe\u7684\u7c7b \u5ba2\u6237\u7aef\uff1a\u58f0\u660e\u4e00\u4e2a\u7c7b\uff0c\u66f4\u5177\u67d0\u4e9b\u64cd\u4f5c\u6765\u83b7\u5f97\u67d0\u4e9b\u7ed3\u679c","title":"MVC\u6a21\u5f0f\u672f\u8bed"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668-\u590d\u5408\u6a21\u5f0f/#mvc_2","text":"1\u3001\u5f53\u9700\u8981\u66f4\u6539\u5c55\u793a\u65b9\u5f0f\u800c\u4e0d\u66f4\u6539\u4e1a\u52a1\u903b\u8f91 2\u3001\u591a\u4e2a\u63a7\u5236\u5668\u53ef\u4ee5\u7528\u4e8e\u4f7f\u7528\u591a\u4e2a\u89c6\u56fe\u6765\u66f4\u6539\u7528\u6237\u754c\u9762\u4e0a\u7684\u5c55\u793a 3\u3001\u518d\u6b21\u91cd\u7533\uff0c\u5f53\u6a21\u578b\u6539\u53d8\u65f6\uff0c\u89c6\u56fe\u65e0\u9700\u6539\u52a8\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u76f8\u4e92\u72ec\u7acb\u7684","title":"MVC\u6a21\u5f0f\u5e94\u7528\u573a\u666f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668-\u590d\u5408\u6a21\u5f0f/#mvc_3","text":"1\u3001\u6a21\u578b-\u4e86\u89e3\u5e94\u7528\u7a0b\u5e8f\u7684\u60c5\u51b5 \u6a21\u578b\u662f\u5e94\u7528\u7a0b\u5e8f\u7684\u57fa\u77f3\uff0c\u5b83\u72ec\u7acb\u4e8e\u89c6\u56fe\u548c\u63a7\u5236\u5668\uff0c\u800c\u89c6\u56fe\u548c\u63a7\u5236\u5668\u5219\u4f9d\u8d56\u4e8e\u6a21\u578b 2\u3001\u89c6\u56fe-\u5916\u89c2 \u89c6\u56fe\u7528\u6765\u5c06\u6570\u636e\u5c55\u793a\u5230\u63a5\u53e3\u4e0a\uff0c\u53ef\u4ee5\u72ec\u7acb\u5f00\u53d1\uff0c\u4f46\u4e0d\u5e94\u8be5\u5305\u542b\u4efb\u4f55\u590d\u6742\u7684\u903b\u8f91 \u903b\u8f91\u5e94\u8be5\u653e\u5728\u63a7\u5236\u5668\u6216\u6a21\u578b\u4e2d 3\u3001\u63a7\u5236\u5668-\u80f6\u6c34 \u63a7\u5236\u5668\u7528\u6765\u63a7\u5236\u7528\u6237\u5728\u754c\u9762\u4e0a\u7684\u4ea4\u4e92 \u63a7\u5236\u5668\u4e0d\u5e94\u8be5\u8fdb\u884c\u6570\u636e\u5e93\u8c03\u7528\u6216\u53c2\u4e0e\u6570\u636e\u5c55\u793a \u63a7\u5236\u5668\u5e94\u8be5\u4f5c\u4e3a\u6a21\u578b\u548c\u89c6\u56fe\u4e4b\u95f4\u7684\u7c98\u5408\u5242\uff0c\u5e76\u4e14\u5c3d\u53ef\u80fd\u8584","title":"MVC\u8be6\u7ec6\u4ecb\u7ecd"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668-\u590d\u5408\u6a21\u5f0f/#mvc_4","text":"1\u3001\u4f7f\u7528MVC\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5c06\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u5206\u4e3a3\u4e2a\u4e3b\u8981\u90e8\u5206\uff1a\u6a21\u578b\uff0c\u89c6\u56fe\uff0c\u63a7\u5236\u5668 \u6709\u52a9\u4e8e\u63d0\u9ad8\u53ef\u7ef4\u62a4\u6027\uff0c\u5f3a\u5236\u677e\u8026\u5408\uff0c\u5e76\u964d\u4f4e\u590d\u6742\u5ea6 2\u3001MVC\u5141\u8bb8\u5bf9\u524d\u7aef\u89c6\u56fe\u8fdb\u884c\u72ec\u7acb\u66f4\u6539\uff0c\u800c\u540e\u7aef\u903b\u8f91\u65e0\u9700\u4efb\u4f55\u4fee\u6539\u6216\u53ea\u9700\u8fdb\u884c\u5f88\u5c11\u7684\u66f4\u6539 \u56e0\u6b64\uff0c\u5f00\u53d1\u5de5\u4f5c\u4ecd\u7136\u53ef\u4ee5\u72ec\u7acb\u8fdb\u884c 3\u3001\u7c7b\u4f3c\u5730\uff0c\u53ef\u4ee5\u66f4\u6539\u6a21\u578b\u6216\u4e1a\u52a1\u903b\u8f91\uff0c\u800c\u65e0\u9700\u5bf9\u89c6\u56fe\u8fdb\u884c\u4efb\u4f55\u66f4\u6539 4\u3001\u53ef\u4ee5\u66f4\u6539\u63a7\u5236\u5668\uff0c\u800c\u4e0d\u4f1a\u5bf9\u89c6\u56fe\u6216\u8005\u6a21\u578b\u9020\u6210\u4efb\u4f55\u5f71\u54cd 5\u3001MVC\u6709\u52a9\u4e8e\u62db\u8058\u5177\u6709\u7279\u5b9a\u80fd\u529b\u7684\u4eba\u5458\uff0c\u4f8b\u5982\u5e73\u53f0\u5de5\u7a0b\u5e08\u548cUI\u5de5\u7a0b\u5e08\uff0c \u4ed6\u4eec\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u4e13\u4e1a\u9886\u57df\u72ec\u7acb\u5de5\u4f5c","title":"MVC\u6a21\u5f0f\u7684\u4f18\u70b9"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668-\u590d\u5408\u6a21\u5f0f/#_1","text":"# -*- coding: utf-8 -*- class Model ( object ): def get_data ( self ): data = [ { \"name\" : \"Tom\" , \"age\" : 23 }, { \"name\" : \"Jack\" , \"age\" : 21 }, ] return data class View ( object ): def show_data ( self , data ): for row in data : print ( row [ \"name\" ], row [ \"age\" ]) class Controller ( object ): def __init__ ( self ): self . model = Model () self . view = View () def interface ( self ): data = self . model . get_data () self . view . show_data ( data ) if __name__ == '__main__' : controller = Controller () controller . interface () \"\"\" Tom 23 Jack 21 \"\"\"","title":"\u4ee3\u7801\u793a\u4f8b"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u6a21\u677f\u6a21\u5f0f/","text":"Python\uff1a\u8bbe\u8ba1\u6a21\u5f0f\u4e4b\u6a21\u677f\u6a21\u5f0f \u6a21\u677f\u6a21\u5f0f\u5c5e\u4e8e\u884c\u4e3a\u6a21\u5f0f\uff0c\u901a\u8fc7\u6a21\u677f\u65b9\u6cd5\u6765\u5b9a\u4e49\u7a0b\u5e8f\u6846\u67b6\u6216\u7b97\u65b9\u6cd5 \u53ef\u4ee5\u4f7f\u7528\u62bd\u8c61\u7c7b\u6765\u5b9a\u4e49\u7b97\u6cd5\u6b65\u9aa4\uff0c\u7531\u5b50\u7c7b\u6765\u5b9e\u73b0\u7b97\u6cd5\u4e2d\u7279\u5b9a\u6b65\u9aa4 \u9002\u7528\u573a\u666f 1\u3001\u5f53\u591a\u4e2a\u7b97\u6cd5\u6216\u7c7b\u5b9e\u73b0\u7c7b\u4f3c\u6216\u76f8\u540c\u903b\u8f91\u7684\u65f6\u5019 2\u3001\u5728\u5b50\u7c7b\u4e2d\u5b9e\u73b0\u7b97\u6cd5\u6709\u52a9\u4e8e\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\u7684\u65f6\u5019 3\u3001\u53ef\u4ee5\u8ba9\u5b50\u7c7b\u5229\u7528\u8986\u76d6\u4e8b\u9879\u884c\u4e3a\u6765\u5b9a\u4e49\u591a\u4e2a\u7b97\u6cd5\u7684\u65f6\u5019 \u4e3b\u8981\u610f\u56fe 1\u3001\u9002\u7528\u57fa\u4e8e\u64cd\u4f5c\u5b9a\u4e49\u7b97\u6cd5\u7684\u6846\u67b6 2\u3001\u91cd\u65b0\u5b9a\u4e49\u5b50\u7c7b\u7684\u67d0\u4e9b\u64cd\u4f5c\uff0c\u800c\u65e0\u9700\u4fee\u6539\u7b97\u6cd5\u7684\u7ed3\u6784 3\u3001\u5b9e\u73b0\u4ee3\u7801\u91cd\u7528\u5e76\u907f\u514d\u91cd\u590d\u5de5\u4f5c 4\u3001\u5229\u7528\u901a\u7528\u63a5\u53e3\u6216\u5b9e\u73b0 \u4e3b\u8981\u672f\u8bed AbstractClass \u58f0\u660e\u4e00\u4e2a\u5b9a\u4e49\u7b97\u6cd5\u6b65\u9aa4\u7684\u63a5\u53e3 ConcreteClass \u5b9a\u4e49\u5b50\u7c7b\u7279\u5b9a\u7684\u6b65\u9aa4 TemplateMethod \u901a\u8fc7\u8c03\u7528\u6b65\u9aa4\u65b9\u6cd5\u6765\u5b9a\u4e49\u7b97\u6cd5 \u4ee3\u7801\u793a\u4f8b # -*- coding: utf-8 -*- from abc import ABCMeta , abstractmethod class AbstractClass ( metaclass = ABCMeta ): @abstractmethod def operation1 ( self ): pass @abstractmethod def operation2 ( self ): pass def template_method ( self ): self . operation1 () self . operation2 () class ConcreteClass ( AbstractClass ): def operation1 ( self ): print ( \"ConcreteClass operation1\" ) def operation2 ( self ): print ( \"ConcreteClass operation2\" ) if __name__ == '__main__' : client = ConcreteClass () client . template_method () \"\"\" ConcreteClass operation1 ConcreteClass operation2 \"\"\" \u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f-\u94a9\u5b50 \u94a9\u5b50\u662f\u5728\u62bd\u8c61\u7c7b\u4e2d\u58f0\u660e\u7684\u65b9\u6cd5\uff0c\u901a\u5e38\u88ab\u8d4b\u4e88\u4e00\u4e2a\u9ed8\u8ba4\u5b9e\u73b0\u3002 \u94a9\u5b50\u80cc\u540e\u7684\u601d\u60f3\u662f\u4e3a\u5b50\u7c7b\u63d0\u4f9b\u6309\u9700\u94a9\u53d6\u7b97\u6cd5\u7684\u80fd\u529b \u901a\u5e38\uff0c\u5f53\u5b50\u7c7b\u5fc5\u987b\u63d0\u4f9b\u65f6\uff0c\u4f1a\u4f7f\u7528\u62bd\u8c61\u65b9\u6cd5\uff0c\u5e76\u4e14\u5f53\u5b50\u7c7b\u7684\u5b9e\u73b0\u4e0d\u662f\u5f3a\u5236\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u4f7f\u7528\u94a9\u5b50 \u597d\u83b1\u575e\u539f\u5219 \u4e0d\u8981\u7ed9\u6211\u4eec\u6253\u7535\u8bdd\uff0c\u6211\u4eec\u4f1a\u7ed9\u4f60\u6253\u7535\u8bdd\u3002\u5982\u679c\u6709\u9002\u5408\u7684\u89d2\u8272\uff0c\u5f71\u68da\u4f1a\u7ed9\u6f14\u5458\u6253\u7535\u8bdd \u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\uff0c\u662f\u9ad8\u7ea7\u62bd\u8c61\u7c7b\uff0c\u5b89\u6392\u5b9a\u4e49\u7b97\u6cd5\u7684\u6b65\u9aa4\uff0c \u6839\u636e\u7b97\u6cd5\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u901a\u8fc7\u8c03\u7528\u5e95\u5c42\u7c7b\u6765\u5b9a\u4e49\u5404\u4e2a\u6b65\u9aa4\u7684\u5177\u4f53\u5b9e\u73b0 \u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\u7684\u4f18\u70b9 1\u3001\u6ca1\u6709\u4ee3\u7801\u91cd\u590d 2\u3001\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\u4f7f\u7528\u7ee7\u627f\u800c\u4e0d\u662f\u5408\u6210\uff0c\u56e0\u6b64\u80fd\u591f\u5bf9\u4ee3\u7801\u8fdb\u884c\u91cd\u7528 3\u3001\u7075\u6d3b\u6027\u5141\u8bb8\u5b50\u7c7b\u51b3\u5b9a\u5982\u4f55\u5b9e\u73b0\u7b97\u6cd5\u4e2d\u7684\u6b65\u9aa4 \u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\u7684\u7f3a\u70b9 1\u3001\u8c03\u8bd5\u548c\u7406\u89e3\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\u4e2d\u7684\u6d41\u7a0b\u5e8f\u5217\u6709\u65f6\u4f1a\u4ee4\u4eba\u56f0\u60d1 2\u3001\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\u53ef\u80fd\u4f1a\u4f7f\u7ef4\u62a4\u53d8\u5f97\u5f02\u5e38\u75db\u82e6 \u53c2\u8003 \u300aPython\u8bbe\u8ba1\u6a21\u5f0f\u7b2c2\u7248\u300b\u7b2c\u516b\u7ae0 \u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f-\u5c01\u88c5\u7b97\u6cd5","title":"\u6a21\u677f\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u6a21\u677f\u6a21\u5f0f/#_1","text":"1\u3001\u5f53\u591a\u4e2a\u7b97\u6cd5\u6216\u7c7b\u5b9e\u73b0\u7c7b\u4f3c\u6216\u76f8\u540c\u903b\u8f91\u7684\u65f6\u5019 2\u3001\u5728\u5b50\u7c7b\u4e2d\u5b9e\u73b0\u7b97\u6cd5\u6709\u52a9\u4e8e\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\u7684\u65f6\u5019 3\u3001\u53ef\u4ee5\u8ba9\u5b50\u7c7b\u5229\u7528\u8986\u76d6\u4e8b\u9879\u884c\u4e3a\u6765\u5b9a\u4e49\u591a\u4e2a\u7b97\u6cd5\u7684\u65f6\u5019","title":"\u9002\u7528\u573a\u666f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u6a21\u677f\u6a21\u5f0f/#_2","text":"1\u3001\u9002\u7528\u57fa\u4e8e\u64cd\u4f5c\u5b9a\u4e49\u7b97\u6cd5\u7684\u6846\u67b6 2\u3001\u91cd\u65b0\u5b9a\u4e49\u5b50\u7c7b\u7684\u67d0\u4e9b\u64cd\u4f5c\uff0c\u800c\u65e0\u9700\u4fee\u6539\u7b97\u6cd5\u7684\u7ed3\u6784 3\u3001\u5b9e\u73b0\u4ee3\u7801\u91cd\u7528\u5e76\u907f\u514d\u91cd\u590d\u5de5\u4f5c 4\u3001\u5229\u7528\u901a\u7528\u63a5\u53e3\u6216\u5b9e\u73b0","title":"\u4e3b\u8981\u610f\u56fe"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u6a21\u677f\u6a21\u5f0f/#_3","text":"AbstractClass \u58f0\u660e\u4e00\u4e2a\u5b9a\u4e49\u7b97\u6cd5\u6b65\u9aa4\u7684\u63a5\u53e3 ConcreteClass \u5b9a\u4e49\u5b50\u7c7b\u7279\u5b9a\u7684\u6b65\u9aa4 TemplateMethod \u901a\u8fc7\u8c03\u7528\u6b65\u9aa4\u65b9\u6cd5\u6765\u5b9a\u4e49\u7b97\u6cd5 \u4ee3\u7801\u793a\u4f8b # -*- coding: utf-8 -*- from abc import ABCMeta , abstractmethod class AbstractClass ( metaclass = ABCMeta ): @abstractmethod def operation1 ( self ): pass @abstractmethod def operation2 ( self ): pass def template_method ( self ): self . operation1 () self . operation2 () class ConcreteClass ( AbstractClass ): def operation1 ( self ): print ( \"ConcreteClass operation1\" ) def operation2 ( self ): print ( \"ConcreteClass operation2\" ) if __name__ == '__main__' : client = ConcreteClass () client . template_method () \"\"\" ConcreteClass operation1 ConcreteClass operation2 \"\"\"","title":"\u4e3b\u8981\u672f\u8bed"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u6a21\u677f\u6a21\u5f0f/#-","text":"\u94a9\u5b50\u662f\u5728\u62bd\u8c61\u7c7b\u4e2d\u58f0\u660e\u7684\u65b9\u6cd5\uff0c\u901a\u5e38\u88ab\u8d4b\u4e88\u4e00\u4e2a\u9ed8\u8ba4\u5b9e\u73b0\u3002 \u94a9\u5b50\u80cc\u540e\u7684\u601d\u60f3\u662f\u4e3a\u5b50\u7c7b\u63d0\u4f9b\u6309\u9700\u94a9\u53d6\u7b97\u6cd5\u7684\u80fd\u529b \u901a\u5e38\uff0c\u5f53\u5b50\u7c7b\u5fc5\u987b\u63d0\u4f9b\u65f6\uff0c\u4f1a\u4f7f\u7528\u62bd\u8c61\u65b9\u6cd5\uff0c\u5e76\u4e14\u5f53\u5b50\u7c7b\u7684\u5b9e\u73b0\u4e0d\u662f\u5f3a\u5236\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u4f7f\u7528\u94a9\u5b50","title":"\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f-\u94a9\u5b50"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u6a21\u677f\u6a21\u5f0f/#_4","text":"\u4e0d\u8981\u7ed9\u6211\u4eec\u6253\u7535\u8bdd\uff0c\u6211\u4eec\u4f1a\u7ed9\u4f60\u6253\u7535\u8bdd\u3002\u5982\u679c\u6709\u9002\u5408\u7684\u89d2\u8272\uff0c\u5f71\u68da\u4f1a\u7ed9\u6f14\u5458\u6253\u7535\u8bdd \u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\uff0c\u662f\u9ad8\u7ea7\u62bd\u8c61\u7c7b\uff0c\u5b89\u6392\u5b9a\u4e49\u7b97\u6cd5\u7684\u6b65\u9aa4\uff0c \u6839\u636e\u7b97\u6cd5\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u901a\u8fc7\u8c03\u7528\u5e95\u5c42\u7c7b\u6765\u5b9a\u4e49\u5404\u4e2a\u6b65\u9aa4\u7684\u5177\u4f53\u5b9e\u73b0","title":"\u597d\u83b1\u575e\u539f\u5219"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u6a21\u677f\u6a21\u5f0f/#_5","text":"1\u3001\u6ca1\u6709\u4ee3\u7801\u91cd\u590d 2\u3001\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\u4f7f\u7528\u7ee7\u627f\u800c\u4e0d\u662f\u5408\u6210\uff0c\u56e0\u6b64\u80fd\u591f\u5bf9\u4ee3\u7801\u8fdb\u884c\u91cd\u7528 3\u3001\u7075\u6d3b\u6027\u5141\u8bb8\u5b50\u7c7b\u51b3\u5b9a\u5982\u4f55\u5b9e\u73b0\u7b97\u6cd5\u4e2d\u7684\u6b65\u9aa4","title":"\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\u7684\u4f18\u70b9"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u6a21\u677f\u6a21\u5f0f/#_6","text":"1\u3001\u8c03\u8bd5\u548c\u7406\u89e3\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\u4e2d\u7684\u6d41\u7a0b\u5e8f\u5217\u6709\u65f6\u4f1a\u4ee4\u4eba\u56f0\u60d1 2\u3001\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\u53ef\u80fd\u4f1a\u4f7f\u7ef4\u62a4\u53d8\u5f97\u5f02\u5e38\u75db\u82e6 \u53c2\u8003 \u300aPython\u8bbe\u8ba1\u6a21\u5f0f\u7b2c2\u7248\u300b\u7b2c\u516b\u7ae0 \u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f-\u5c01\u88c5\u7b97\u6cd5","title":"\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\u7684\u7f3a\u70b9"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u72b6\u6001\u8bbe\u8ba1\u6a21\u5f0f/","text":"\u72b6\u6001\u8bbe\u8ba1\u6a21\u5f0f \u5c5e\u4e8e\u884c\u4e3a\u6a21\u5f0f \u4e00\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u57fa\u4e8e\u5176\u5185\u90e8\u72b6\u6001\u5c01\u88c5\u591a\u4e2a\u884c\u4e3a\uff0c\u72b6\u6001\u6a21\u5f0f\u4e5f\u53ef\u4ee5\u88ab\u770b\u505a\u662f\u5728\u8fd0\u884c\u65f6\u6539\u53d8\u5bf9\u8c61\u884c\u4e3a\u7684\u4e00\u79cd\u65b9\u5f0f \u72b6\u6001\u8bbe\u8ba1\u6a21\u5f0f\u76843\u4e2a\u4e3b\u8981\u53c2\u4e0e\u8005 1\u3001State\uff1a \u5c01\u88c5\u5bf9\u8c61\u884c\u4e3a\u7684\u63a5\u53e3\uff0c\u8fd9\u4e2a\u884c\u4e3a\u4e0e\u5bf9\u8c61\u7684\u72b6\u6001\u76f8\u5173\u8054 2\u3001ConcreteState\uff1a \u5b9e\u73b0State \u63a5\u53e3\u7684\u5b50\u7c7b\uff0cConcreteState \u5b9e\u73b0\u4e0e\u5bf9\u8c61\u7684\u7279\u5b9a\u72b6\u6001\u76f8\u5173\u8054\u7684\u5b9e\u9645\u884c\u4e3a 3\u3001Context\uff1a\u5b9a\u4e49\u4e86\u5ba2\u6237\u611f\u5174\u8da3\u7684\u63a5\u53e3\uff0cContext\u8fd8\u7ef4\u62a4\u4e86\u4e00\u4e2aConcreteState \u5b50\u7c7b\u7684\u5b9e\u4f8b\uff0c \u8be5\u5b50\u7c7b\u5728\u5185\u90e8\u5b9a\u4e49\u4e86\u5bf9\u8c61\u7684\u7279\u5b9a\u72b6\u6001\u7684\u5b9e\u73b0 \u7b80\u5355\u5b9e\u4f8b \u7535\u89c6\u673a\u5f00\u673a\uff0c\u5173\u673a # -*- coding: utf-8 -*- from abc import ABCMeta , abstractmethod class State ( metaclass = ABCMeta ): @abstractmethod def do_this ( self ): pass class StartState ( State ): def do_this ( self ): print ( \"start state\" ) class StopState ( State ): def do_this ( self ): print ( \"stop state\" ) class TVContext ( State ): def __init__ ( self ): self . state = None def get_state ( self ): return self . state def set_state ( self , state ): self . state = state def do_this ( self ): self . state . do_this () if __name__ == '__main__' : context = TVContext () start = StartState () stop = StopState () context . set_state ( start ) context . do_this () context . set_state ( stop ) context . do_this () \"\"\" start state stop state \"\"\" 3\u79cd\u72b6\u6001\u5207\u6362\u793a\u4f8b \u7535\u8111\u5f00\u673a\uff0c\u5f85\u673a\uff0c\u5173\u673a # -*- coding: utf-8 -*- # \u63a5\u53e3 class ComputerState ( object ): name = \"state\" allowed = [] def switch ( self , state ): if state . name in self . allowed : print ( \"switch state: {}\" . format ( state . name )) self . __class__ = state else : print ( \"state not allowed\" ) def __str__ ( self ): return self . name # \u5177\u4f53\u5b9e\u73b0 # \u5f00\u673a class On ( ComputerState ): name = \"on\" allowed = [ \"off\" , \"hibernate\" ] # \u5173\u673a class Off ( ComputerState ): name = \"off\" allowed = [ \"on\" ] # \u4f11\u7720 class Hibernate ( ComputerState ): name = \"hibernate\" allowed = [ \"on\" , \"off\" ] # \u5ba2\u6237\u7aef class Computer ( object ): def __init__ ( self ): self . state = Off () # \u521d\u59cb\u72b6\u6001\u662f\u5173\u673a\u72b6\u6001 def change ( self , state ): self . state . switch ( state ) if __name__ == '__main__' : computer = Computer () # \u5f00\u673a -> \u4f11\u7720 -> \u5173\u673a computer . change ( On ) computer . change ( Hibernate ) computer . change ( Off ) # \u5173\u673a\u7684\u8bf7\u60c5\u51b5\u4e0b\u4f11\u7720 computer . change ( Hibernate ) \"\"\" switch state: on switch state: hibernate switch state: off state not allowed \"\"\" \u72b6\u6001\u6a21\u5f0f\u7684\u4f18\u70b9 1\u3001\u72b6\u6001\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\uff0c\u5bf9\u8c61\u7684\u884c\u4e3a\u662f\u5176\u72b6\u6001\u51fd\u6570\u7ed3\u679c\uff0c\u5e76\u4e14\u884c\u4e3a\u5728\u8fd0\u884c\u65f6\u6839\u636e\u72b6\u6001\u800c\u6539\u53d8 \u6d88\u9664\u4e86\u5bf9if/else \u6216 switch/case \u6761\u4ef6\u903b\u8f91\u7684\u4f9d\u8d56 2\u3001\u4f7f\u7528\u72b6\u6001\u6a21\u5f0f\uff0c\u5b9e\u73b0\u591a\u6001\u884c\u4e3a\uff0c\u66f4\u6613\u4e8e\u6dfb\u52a0\u8f6c\u6001\u6765\u652f\u6301\u989d\u5916\u7684\u884c\u4e3a 3\u3001\u72b6\u6001\u8bbe\u8ba1\u6a21\u5f0f\u8fd8\u63d0\u9ad8\u4e86\u805a\u5408\u6027\uff0c\u7279\u5b9a\u4e8e\u72b6\u6001\u7684\u884c\u4e3a\u88ab\u805a\u5408\u5230\u5b9e\u73b0\u7c7bConcreteState \u4e2d\uff0c \u5e76\u4e14\u653e\u7f6e\u5728\u4ee3\u7801\u7684\u540c\u4e00\u4e2a\u5730\u65b9 4\u3001\u72b6\u6001\u6a21\u5f0f\uff0c\u901a\u8fc7\u53ea\u6dfb\u52a0\u4e00\u4e2a ConcreteState \u7c7b\u6765\u6dfb\u52a0\u884c\u4e3a\u975e\u5e38\u5bb9\u6613\uff0c \u4e0d\u4ec5\u6539\u5584\u4e86\u6269\u5c55\u5e94\u7528\u7a0b\u5e8f\u884c\u4e3a\u65f6\u7684\u7075\u6d3b\u6027\uff0c\u800c\u4e14\u5168\u9762\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027 \u72b6\u6001\u6a21\u5f0f\u7684\u7f3a\u70b9 1\u3001\u7c7b\u7206\u70b8\uff0c\u7531\u4e8e\u6bcf\u4e2a\u72b6\u6001\u90fd\u8981\u5728ConcreteState \u7c7b\u7684\u5e2e\u52a9\u4e0b\u5b9a\u4e49\uff0c\u56e0\u6b64\u53ef\u80fd\u5bfc\u81f4\u521b\u5efa\u4e86\u592a\u591a\u529f\u80fd\u8f83\u4e3a\u5355\u4e00\u7684\u7c7b 2\u3001\u968f\u7740\u6bcf\u4e2a\u65b0\u884c\u4e3a\u7684\u5f15\u5165\uff0cContext\u7c7b\u90fd\u5c06\u9700\u8981\u8fdb\u884c\u76f8\u5e94\u7684\u66f4\u65b0\u4ee5\u5904\u7406\u6bcf\u4e2a\u884c\u4e3a\uff0c \u8fd9\u4f7f\u5f97\u4e0a\u4e0b\u6587\u884c\u4e3a\u66f4\u5bb9\u6613\u53d7\u5230\u6bcf\u4e2a\u65b0\u7684\u884c\u4e3a\u5f71\u54cd","title":"\u72b6\u6001\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u72b6\u6001\u8bbe\u8ba1\u6a21\u5f0f/#_1","text":"\u5c5e\u4e8e\u884c\u4e3a\u6a21\u5f0f \u4e00\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u57fa\u4e8e\u5176\u5185\u90e8\u72b6\u6001\u5c01\u88c5\u591a\u4e2a\u884c\u4e3a\uff0c\u72b6\u6001\u6a21\u5f0f\u4e5f\u53ef\u4ee5\u88ab\u770b\u505a\u662f\u5728\u8fd0\u884c\u65f6\u6539\u53d8\u5bf9\u8c61\u884c\u4e3a\u7684\u4e00\u79cd\u65b9\u5f0f","title":"\u72b6\u6001\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u72b6\u6001\u8bbe\u8ba1\u6a21\u5f0f/#3","text":"1\u3001State\uff1a \u5c01\u88c5\u5bf9\u8c61\u884c\u4e3a\u7684\u63a5\u53e3\uff0c\u8fd9\u4e2a\u884c\u4e3a\u4e0e\u5bf9\u8c61\u7684\u72b6\u6001\u76f8\u5173\u8054 2\u3001ConcreteState\uff1a \u5b9e\u73b0State \u63a5\u53e3\u7684\u5b50\u7c7b\uff0cConcreteState \u5b9e\u73b0\u4e0e\u5bf9\u8c61\u7684\u7279\u5b9a\u72b6\u6001\u76f8\u5173\u8054\u7684\u5b9e\u9645\u884c\u4e3a 3\u3001Context\uff1a\u5b9a\u4e49\u4e86\u5ba2\u6237\u611f\u5174\u8da3\u7684\u63a5\u53e3\uff0cContext\u8fd8\u7ef4\u62a4\u4e86\u4e00\u4e2aConcreteState \u5b50\u7c7b\u7684\u5b9e\u4f8b\uff0c \u8be5\u5b50\u7c7b\u5728\u5185\u90e8\u5b9a\u4e49\u4e86\u5bf9\u8c61\u7684\u7279\u5b9a\u72b6\u6001\u7684\u5b9e\u73b0","title":"\u72b6\u6001\u8bbe\u8ba1\u6a21\u5f0f\u76843\u4e2a\u4e3b\u8981\u53c2\u4e0e\u8005"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u72b6\u6001\u8bbe\u8ba1\u6a21\u5f0f/#_2","text":"\u7535\u89c6\u673a\u5f00\u673a\uff0c\u5173\u673a # -*- coding: utf-8 -*- from abc import ABCMeta , abstractmethod class State ( metaclass = ABCMeta ): @abstractmethod def do_this ( self ): pass class StartState ( State ): def do_this ( self ): print ( \"start state\" ) class StopState ( State ): def do_this ( self ): print ( \"stop state\" ) class TVContext ( State ): def __init__ ( self ): self . state = None def get_state ( self ): return self . state def set_state ( self , state ): self . state = state def do_this ( self ): self . state . do_this () if __name__ == '__main__' : context = TVContext () start = StartState () stop = StopState () context . set_state ( start ) context . do_this () context . set_state ( stop ) context . do_this () \"\"\" start state stop state \"\"\"","title":"\u7b80\u5355\u5b9e\u4f8b"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u72b6\u6001\u8bbe\u8ba1\u6a21\u5f0f/#3_1","text":"\u7535\u8111\u5f00\u673a\uff0c\u5f85\u673a\uff0c\u5173\u673a # -*- coding: utf-8 -*- # \u63a5\u53e3 class ComputerState ( object ): name = \"state\" allowed = [] def switch ( self , state ): if state . name in self . allowed : print ( \"switch state: {}\" . format ( state . name )) self . __class__ = state else : print ( \"state not allowed\" ) def __str__ ( self ): return self . name # \u5177\u4f53\u5b9e\u73b0 # \u5f00\u673a class On ( ComputerState ): name = \"on\" allowed = [ \"off\" , \"hibernate\" ] # \u5173\u673a class Off ( ComputerState ): name = \"off\" allowed = [ \"on\" ] # \u4f11\u7720 class Hibernate ( ComputerState ): name = \"hibernate\" allowed = [ \"on\" , \"off\" ] # \u5ba2\u6237\u7aef class Computer ( object ): def __init__ ( self ): self . state = Off () # \u521d\u59cb\u72b6\u6001\u662f\u5173\u673a\u72b6\u6001 def change ( self , state ): self . state . switch ( state ) if __name__ == '__main__' : computer = Computer () # \u5f00\u673a -> \u4f11\u7720 -> \u5173\u673a computer . change ( On ) computer . change ( Hibernate ) computer . change ( Off ) # \u5173\u673a\u7684\u8bf7\u60c5\u51b5\u4e0b\u4f11\u7720 computer . change ( Hibernate ) \"\"\" switch state: on switch state: hibernate switch state: off state not allowed \"\"\"","title":"3\u79cd\u72b6\u6001\u5207\u6362\u793a\u4f8b"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u72b6\u6001\u8bbe\u8ba1\u6a21\u5f0f/#_3","text":"1\u3001\u72b6\u6001\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\uff0c\u5bf9\u8c61\u7684\u884c\u4e3a\u662f\u5176\u72b6\u6001\u51fd\u6570\u7ed3\u679c\uff0c\u5e76\u4e14\u884c\u4e3a\u5728\u8fd0\u884c\u65f6\u6839\u636e\u72b6\u6001\u800c\u6539\u53d8 \u6d88\u9664\u4e86\u5bf9if/else \u6216 switch/case \u6761\u4ef6\u903b\u8f91\u7684\u4f9d\u8d56 2\u3001\u4f7f\u7528\u72b6\u6001\u6a21\u5f0f\uff0c\u5b9e\u73b0\u591a\u6001\u884c\u4e3a\uff0c\u66f4\u6613\u4e8e\u6dfb\u52a0\u8f6c\u6001\u6765\u652f\u6301\u989d\u5916\u7684\u884c\u4e3a 3\u3001\u72b6\u6001\u8bbe\u8ba1\u6a21\u5f0f\u8fd8\u63d0\u9ad8\u4e86\u805a\u5408\u6027\uff0c\u7279\u5b9a\u4e8e\u72b6\u6001\u7684\u884c\u4e3a\u88ab\u805a\u5408\u5230\u5b9e\u73b0\u7c7bConcreteState \u4e2d\uff0c \u5e76\u4e14\u653e\u7f6e\u5728\u4ee3\u7801\u7684\u540c\u4e00\u4e2a\u5730\u65b9 4\u3001\u72b6\u6001\u6a21\u5f0f\uff0c\u901a\u8fc7\u53ea\u6dfb\u52a0\u4e00\u4e2a ConcreteState \u7c7b\u6765\u6dfb\u52a0\u884c\u4e3a\u975e\u5e38\u5bb9\u6613\uff0c \u4e0d\u4ec5\u6539\u5584\u4e86\u6269\u5c55\u5e94\u7528\u7a0b\u5e8f\u884c\u4e3a\u65f6\u7684\u7075\u6d3b\u6027\uff0c\u800c\u4e14\u5168\u9762\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027","title":"\u72b6\u6001\u6a21\u5f0f\u7684\u4f18\u70b9"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u72b6\u6001\u8bbe\u8ba1\u6a21\u5f0f/#_4","text":"1\u3001\u7c7b\u7206\u70b8\uff0c\u7531\u4e8e\u6bcf\u4e2a\u72b6\u6001\u90fd\u8981\u5728ConcreteState \u7c7b\u7684\u5e2e\u52a9\u4e0b\u5b9a\u4e49\uff0c\u56e0\u6b64\u53ef\u80fd\u5bfc\u81f4\u521b\u5efa\u4e86\u592a\u591a\u529f\u80fd\u8f83\u4e3a\u5355\u4e00\u7684\u7c7b 2\u3001\u968f\u7740\u6bcf\u4e2a\u65b0\u884c\u4e3a\u7684\u5f15\u5165\uff0cContext\u7c7b\u90fd\u5c06\u9700\u8981\u8fdb\u884c\u76f8\u5e94\u7684\u66f4\u65b0\u4ee5\u5904\u7406\u6bcf\u4e2a\u884c\u4e3a\uff0c \u8fd9\u4f7f\u5f97\u4e0a\u4e0b\u6587\u884c\u4e3a\u66f4\u5bb9\u6613\u53d7\u5230\u6bcf\u4e2a\u65b0\u7684\u884c\u4e3a\u5f71\u54cd","title":"\u72b6\u6001\u6a21\u5f0f\u7684\u7f3a\u70b9"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u89c2\u5bdf\u8005\u6a21\u5f0f/","text":"\u89c2\u5bdf\u8005\u6a21\u5f0f \u4e09\u7c7b\u6a21\u5f0f 1\u3001\u521b\u5efa\u578b\u6a21\u5f0f\uff1a\u57fa\u4e8e\u5bf9\u8c61\u7684\u521b\u5efa\u673a\u5236\u3002\u9694\u79bb\u4e86\u5bf9\u8c61\u7684\u521b\u5efa\u7ec6\u8282\uff0c\u4f7f\u5f97\u4ee3\u7801\u80fd\u591f\u4e0e\u8981\u521b\u5efa\u7684\u5bf9\u8c61\u7684\u7c7b\u578b\u76f8\u4e92\u72ec\u7acb 2\u3001\u7ed3\u6784\u578b\u6a21\u5f0f\uff1a\u7528\u4e8e\u8bbe\u8ba1\u5bf9\u8c61\u548c\u7c7b\u7684\u7ed3\u6784\uff0c\u4ece\u800c\u4f7f\u4ed6\u4eec\u53ef\u4ee5\u76f8\u4e92\u534f\u4f5c\u4ee5\u83b7\u5f97\u66f4\u5927\u7684\u7ed3\u6784\uff0c \u91cd\u70b9\u5173\u6ce8\u7684\u662f\u7b80\u5316\u7ed3\u6784\u548c\u8bc6\u522b\u7c7b\u548c\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u7cfb 3\u3001\u884c\u4e3a\u578b\u6a21\u5f0f\uff1a\u4e3b\u8981\u5173\u6ce8\u5bf9\u8c61\u7684\u8d23\u4efb\u3002\u7528\u6765\u5904\u7406\u5bf9\u8c61\u4e4b\u95f4\u4ea4\u4e92\uff0c\u4ee5\u5b9e\u73b0\u66f4\u5927\u7684\u529f\u80fd \u884c\u4e3a\u578b\u6a21\u5f0f\u5efa\u8bae\uff1a\u5bf9\u8c61\u4e4b\u95f4\u5e94\u8be5\u80fd\u591f\u5f7c\u6b64\u4ea4\u4e92\uff0c\u540c\u65f6\u8fd8\u5e94\u8be5\u662f\u677e\u8026\u5408\u7684 \u89c2\u5bdf\u8005\u6a21\u5f0f \u89c2\u5bdf\u8005\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\uff0c\u5bf9\u8c61\uff08\u4e3b\u9898\uff09\u7ef4\u62a4\u4e86\u4e00\u4e2a\u4f9d\u8d56\uff08\u89c2\u5bdf\u8005\uff09\u5217\u8868\uff0c \u4ee5\u4fbf\u4e3b\u9898\u53ef\u4ee5\u4f7f\u7528\u89c2\u5bdf\u8005\u5b9a\u4e49\u7684\u4efb\u4f55\u65b9\u6cd5\u901a\u77e5\u6240\u6709\u89c2\u5bdf\u8005\uff0c\u5b83\u6240\u53d1\u751f\u7684\u53d8\u5316 \u4f8b\u5982\uff1a \u5e7f\u64ad\u6216\u53d1\u5e03/\u8ba2\u9605\u7cfb\u7edf \u89c2\u5bdf\u8005\u6a21\u5f0f\u7684\u4e3b\u8981\u76ee\u6807 1\u3001\u5b9a\u4e49\u4e86\u5bf9\u8c61\u4e4b\u95f4\u7684\u4e00\u5bf9\u591a\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u4ece\u800c\u4f7f\u5f97\u4e00\u4e2a\u5bf9\u8c61\u4e2d\u7684\u4efb\u4f55\u66f4\u6539\u90fd\u5c06\u81ea\u52a8\u901a\u77e5\u7ed9\u5176\u4ed6\u4f9d\u8d56\u5bf9\u8c61 2\u3001\u5c01\u88c5\u4e86\u4e3b\u9898\u7684\u6838\u5fc3\u7ec4\u4ef6 \u89c2\u5bdf\u8005\u6a21\u5f0f\u7684\u5e94\u7528\u573a\u666f 1\u3001\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u5b9e\u73b0\u4e8b\u4ef6\u670d\u52a1 2\u3001\u7528\u4f5c\u65b0\u95fb\u673a\u6784\u7684\u6846\u67b6 3\u3001\u80a1\u7968\u5e02\u573a\u4e5f\u662f\u89c2\u5bdf\u8005\u6a21\u5f0f\u7684\u4e00\u4e2a\u5927\u578b\u573a\u666f \u4ee3\u7801\u5b9e\u73b0 # -*- coding: utf-8 -*- # \u4e3b\u9898 class Subject ( object ): def __init__ ( self ): self . __observers = [] def register ( self , observer ): self . __observers . append ( observer ) def notify_all ( self , message ): for observer in self . __observers : observer . notify ( self , message ) from abc import ABC , abstractmethod # \u89c2\u5bdf\u8005 class IObserver ( ABC ): @abstractmethod def notify ( self , subject , message ): pass # \u5177\u4f53\u89c2\u5bdf\u8005 class Observer1 ( IObserver ): def notify ( self , subject , message ): print ( \"Observer1 \u6536\u5230{}\u4e3b\u9898\u6d88\u606f: {}\" . format ( type ( subject ) . __name__ , message )) class Observer2 ( IObserver ): def notify ( self , subject , message ): print ( \"Observer2 \u6536\u5230{}\u4e3b\u9898\u6d88\u606f: {}\" . format ( type ( subject ) . __name__ , message )) if __name__ == '__main__' : observer1 = Observer1 () observer2 = Observer2 () subject = Subject () subject . register ( observer1 ) subject . register ( observer2 ) subject . notify_all ( \"\u901a\u77e5\uff1a3\uff1a00\u5f00\u4f1a\" ) \"\"\" Observer1 \u6536\u5230Subject\u4e3b\u9898\u6d88\u606f: \u901a\u77e5\uff1a3\uff1a00\u5f00\u4f1a Observer2 \u6536\u5230Subject\u4e3b\u9898\u6d88\u606f: \u901a\u77e5\uff1a3\uff1a00\u5f00\u4f1a \"\"\" \u89c2\u5bdf\u8005\u6a21\u5f0f\u67093\u4e2a\u4e3b\u8981\u89d2\u8272\uff1a 1\u3001\u4e3b\u9898\uff1a\u4e3b\u9898\u9700\u8981\u4e86\u89e3\u89c2\u5bdf\u8005\uff0c\u63d0\u4f9b\u6ce8\u518c\u65b9\u6cd5\uff0c\u4e00\u4e2a\u4e3b\u9898\u53ef\u4ee5\u5904\u7406\u591a\u4e2a\u89c2\u5bdf\u8005 2\u3001\u89c2\u5bdf\u8005\uff1a\u4e3a\u5173\u6ce8\u4e3b\u9898\u7684\u5bf9\u8c61\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\uff0c\u5b9a\u4e49\u4e86\u89c2\u5bdf\u8005\u9700\u8981\u5b9e\u73b0\u7684\u5404\u4e2a\u65b9\u6cd5\uff0c \u4ee5\u4fbf\u5728\u4e3b\u9898\u53d1\u751f\u65f6\u80fd\u591f\u6d3b\u7740\u76f8\u5e94\u901a\u77e5 3\u3001\u5177\u4f53\u89c2\u5bdf\u8005\uff1a\u5b9e\u73b0\u4e86\u89c2\u5bdf\u8005\u63a5\u53e3\u4ee5\u4fdd\u6301\u5176\u72b6\u6001\u4e0e\u4e3b\u9898\u4e2d\u7684\u53d8\u5316\u76f8\u4e00\u81f4 \u5177\u4f53\u6d41\u7a0b\uff1a \u5177\u4f53\u89c2\u5bdf\u8005\u901a\u8fc7\u5b9e\u73b0\u89c2\u5bdf\u8005\u63d0\u4f9b\u7684\u63a5\u53e3\u5411\u4e3b\u9898\u6ce8\u518c\u81ea\u5df1\uff0c \u6bcf\u5f53\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u8be5\u4e3b\u9898\u90fd\u4f1a\u4f7f\u7528\u89c2\u5bdf\u8005\u63d0\u4f9b\u7684\u901a\u77e5\u65b9\u6cd5\u6765\u901a\u544a\u6240\u6709\u5177\u4f53\u89c2\u5bdf\u8005 \u89c2\u5bdf\u8005\u6a21\u5f0f\u7684\u901a\u77e5\u65b9\u5f0f 1\u3001\u62c9\u6a21\u5f0f\uff1a\u89c2\u5bdf\u8005\u626e\u6f14\u79ef\u6781\u89d2\u8272\uff0c\u4e3b\u9898\u53d8\u5316->\u5e7f\u64ad\u7ed9\u5df2\u6ce8\u518c\u7684\u89c2\u5bdf\u8005->\u89c2\u5bdf\u8005\u83b7\u53d6\u76f8\u5e94\u7684\u53d8\u5316\u60c5\u51b5 2\u3001\u63a8\u6a21\u5f0f\uff1a\u4e3b\u9898\u8d77\u4e3b\u5bfc\u4f5c\u7528\uff0c\u53d8\u5316\u7531\u4e3b\u9898\u63a8\u9001\u5230\u89c2\u5bdf\u8005 \u8026\u5408\uff1a\u4e00\u4e2a\u5bf9\u8c61\u5bf9\u4e8e\u4e0e\u5176\u4ea4\u4e92\u7684\u5176\u4ed6\u5bf9\u8c61\u7684\u4e86\u89e3\u7a0b\u5ea6 \u677e\u8026\u5408\uff1a\u964d\u4f4e\u591a\u4e2a\u5bf9\u8c61\u4e4b\u95f4\u7684\u4f9d\u8d56\u6027 \u89c2\u5bdf\u8005\u6a21\u5f0f\u7684\u4f18\u70b9 1\u3001\u4f7f\u5f97\u5f7c\u6b64\u4ea4\u4e92\u5bf9\u8c61\u4e4b\u95f4\u4fdd\u6301\u677e\u8026\u5408 2\u3001\u6211\u4eec\u53ef\u4ee5\u5728\u65e0\u9700\u5bf9\u4e3b\u9898\u6216\u8005\u89c2\u5bdf\u8005\u8fdb\u884c\u4efb\u4f55\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\u9ad8\u6548\u5730\u53d1\u9001\u6570\u636e\u5230\u5176\u4ed6\u5bf9\u8c61 3\u3001\u968f\u65f6\u6dfb\u52a0/\u5220\u9664\u89c2\u5bdf\u8005 \u89c2\u5bdf\u8005\u6a21\u5f0f\u7684\u7f3a\u70b9 1\u3001\u89c2\u5bdf\u8005\u63a5\u53e3\u5fc5\u987b\u7531\u5177\u4f53\u89c2\u5bdf\u8005\u5b9e\u73b0\uff0c\u800c\u6d89\u53ca\u7ee7\u627f\uff0c\u65e0\u6cd5\u8fdb\u884c\u7ec4\u5408\uff0c\u56e0\u4e3a\u89c2\u5bdf\u8005\u63a5\u53e3\u53ef\u4ee5\u5b9e\u4f8b\u5316 2\u3001\u5982\u679c\u5b9e\u73b0\u4e0d\u5f53\uff0c\u89c2\u5bdf\u8005\u53ef\u80fd\u56de\u589e\u52a0\u590d\u6742\u6027\uff0c\u5e76\u4e14\u5bfc\u81f4\u6027\u80fd\u964d\u4f4e 3\u3001\u5728\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u901a\u77e5\u6709\u65f6\u53ef\u80fd\u4e0d\u53ef\u9760\uff0c\u5e76\u5bfc\u81f4\u7ade\u4e89\u6761\u4ef6\u6216\u4e0d\u4e00\u81f4\u6027","title":"\u89c2\u5bdf\u8005\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u89c2\u5bdf\u8005\u6a21\u5f0f/#_1","text":"1\u3001\u521b\u5efa\u578b\u6a21\u5f0f\uff1a\u57fa\u4e8e\u5bf9\u8c61\u7684\u521b\u5efa\u673a\u5236\u3002\u9694\u79bb\u4e86\u5bf9\u8c61\u7684\u521b\u5efa\u7ec6\u8282\uff0c\u4f7f\u5f97\u4ee3\u7801\u80fd\u591f\u4e0e\u8981\u521b\u5efa\u7684\u5bf9\u8c61\u7684\u7c7b\u578b\u76f8\u4e92\u72ec\u7acb 2\u3001\u7ed3\u6784\u578b\u6a21\u5f0f\uff1a\u7528\u4e8e\u8bbe\u8ba1\u5bf9\u8c61\u548c\u7c7b\u7684\u7ed3\u6784\uff0c\u4ece\u800c\u4f7f\u4ed6\u4eec\u53ef\u4ee5\u76f8\u4e92\u534f\u4f5c\u4ee5\u83b7\u5f97\u66f4\u5927\u7684\u7ed3\u6784\uff0c \u91cd\u70b9\u5173\u6ce8\u7684\u662f\u7b80\u5316\u7ed3\u6784\u548c\u8bc6\u522b\u7c7b\u548c\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u7cfb 3\u3001\u884c\u4e3a\u578b\u6a21\u5f0f\uff1a\u4e3b\u8981\u5173\u6ce8\u5bf9\u8c61\u7684\u8d23\u4efb\u3002\u7528\u6765\u5904\u7406\u5bf9\u8c61\u4e4b\u95f4\u4ea4\u4e92\uff0c\u4ee5\u5b9e\u73b0\u66f4\u5927\u7684\u529f\u80fd \u884c\u4e3a\u578b\u6a21\u5f0f\u5efa\u8bae\uff1a\u5bf9\u8c61\u4e4b\u95f4\u5e94\u8be5\u80fd\u591f\u5f7c\u6b64\u4ea4\u4e92\uff0c\u540c\u65f6\u8fd8\u5e94\u8be5\u662f\u677e\u8026\u5408\u7684","title":"\u4e09\u7c7b\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u89c2\u5bdf\u8005\u6a21\u5f0f/#_2","text":"\u89c2\u5bdf\u8005\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\uff0c\u5bf9\u8c61\uff08\u4e3b\u9898\uff09\u7ef4\u62a4\u4e86\u4e00\u4e2a\u4f9d\u8d56\uff08\u89c2\u5bdf\u8005\uff09\u5217\u8868\uff0c \u4ee5\u4fbf\u4e3b\u9898\u53ef\u4ee5\u4f7f\u7528\u89c2\u5bdf\u8005\u5b9a\u4e49\u7684\u4efb\u4f55\u65b9\u6cd5\u901a\u77e5\u6240\u6709\u89c2\u5bdf\u8005\uff0c\u5b83\u6240\u53d1\u751f\u7684\u53d8\u5316 \u4f8b\u5982\uff1a \u5e7f\u64ad\u6216\u53d1\u5e03/\u8ba2\u9605\u7cfb\u7edf","title":"\u89c2\u5bdf\u8005\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u89c2\u5bdf\u8005\u6a21\u5f0f/#_3","text":"1\u3001\u5b9a\u4e49\u4e86\u5bf9\u8c61\u4e4b\u95f4\u7684\u4e00\u5bf9\u591a\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u4ece\u800c\u4f7f\u5f97\u4e00\u4e2a\u5bf9\u8c61\u4e2d\u7684\u4efb\u4f55\u66f4\u6539\u90fd\u5c06\u81ea\u52a8\u901a\u77e5\u7ed9\u5176\u4ed6\u4f9d\u8d56\u5bf9\u8c61 2\u3001\u5c01\u88c5\u4e86\u4e3b\u9898\u7684\u6838\u5fc3\u7ec4\u4ef6","title":"\u89c2\u5bdf\u8005\u6a21\u5f0f\u7684\u4e3b\u8981\u76ee\u6807"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u89c2\u5bdf\u8005\u6a21\u5f0f/#_4","text":"1\u3001\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u5b9e\u73b0\u4e8b\u4ef6\u670d\u52a1 2\u3001\u7528\u4f5c\u65b0\u95fb\u673a\u6784\u7684\u6846\u67b6 3\u3001\u80a1\u7968\u5e02\u573a\u4e5f\u662f\u89c2\u5bdf\u8005\u6a21\u5f0f\u7684\u4e00\u4e2a\u5927\u578b\u573a\u666f \u4ee3\u7801\u5b9e\u73b0 # -*- coding: utf-8 -*- # \u4e3b\u9898 class Subject ( object ): def __init__ ( self ): self . __observers = [] def register ( self , observer ): self . __observers . append ( observer ) def notify_all ( self , message ): for observer in self . __observers : observer . notify ( self , message ) from abc import ABC , abstractmethod # \u89c2\u5bdf\u8005 class IObserver ( ABC ): @abstractmethod def notify ( self , subject , message ): pass # \u5177\u4f53\u89c2\u5bdf\u8005 class Observer1 ( IObserver ): def notify ( self , subject , message ): print ( \"Observer1 \u6536\u5230{}\u4e3b\u9898\u6d88\u606f: {}\" . format ( type ( subject ) . __name__ , message )) class Observer2 ( IObserver ): def notify ( self , subject , message ): print ( \"Observer2 \u6536\u5230{}\u4e3b\u9898\u6d88\u606f: {}\" . format ( type ( subject ) . __name__ , message )) if __name__ == '__main__' : observer1 = Observer1 () observer2 = Observer2 () subject = Subject () subject . register ( observer1 ) subject . register ( observer2 ) subject . notify_all ( \"\u901a\u77e5\uff1a3\uff1a00\u5f00\u4f1a\" ) \"\"\" Observer1 \u6536\u5230Subject\u4e3b\u9898\u6d88\u606f: \u901a\u77e5\uff1a3\uff1a00\u5f00\u4f1a Observer2 \u6536\u5230Subject\u4e3b\u9898\u6d88\u606f: \u901a\u77e5\uff1a3\uff1a00\u5f00\u4f1a \"\"\" \u89c2\u5bdf\u8005\u6a21\u5f0f\u67093\u4e2a\u4e3b\u8981\u89d2\u8272\uff1a 1\u3001\u4e3b\u9898\uff1a\u4e3b\u9898\u9700\u8981\u4e86\u89e3\u89c2\u5bdf\u8005\uff0c\u63d0\u4f9b\u6ce8\u518c\u65b9\u6cd5\uff0c\u4e00\u4e2a\u4e3b\u9898\u53ef\u4ee5\u5904\u7406\u591a\u4e2a\u89c2\u5bdf\u8005 2\u3001\u89c2\u5bdf\u8005\uff1a\u4e3a\u5173\u6ce8\u4e3b\u9898\u7684\u5bf9\u8c61\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\uff0c\u5b9a\u4e49\u4e86\u89c2\u5bdf\u8005\u9700\u8981\u5b9e\u73b0\u7684\u5404\u4e2a\u65b9\u6cd5\uff0c \u4ee5\u4fbf\u5728\u4e3b\u9898\u53d1\u751f\u65f6\u80fd\u591f\u6d3b\u7740\u76f8\u5e94\u901a\u77e5 3\u3001\u5177\u4f53\u89c2\u5bdf\u8005\uff1a\u5b9e\u73b0\u4e86\u89c2\u5bdf\u8005\u63a5\u53e3\u4ee5\u4fdd\u6301\u5176\u72b6\u6001\u4e0e\u4e3b\u9898\u4e2d\u7684\u53d8\u5316\u76f8\u4e00\u81f4 \u5177\u4f53\u6d41\u7a0b\uff1a \u5177\u4f53\u89c2\u5bdf\u8005\u901a\u8fc7\u5b9e\u73b0\u89c2\u5bdf\u8005\u63d0\u4f9b\u7684\u63a5\u53e3\u5411\u4e3b\u9898\u6ce8\u518c\u81ea\u5df1\uff0c \u6bcf\u5f53\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u8be5\u4e3b\u9898\u90fd\u4f1a\u4f7f\u7528\u89c2\u5bdf\u8005\u63d0\u4f9b\u7684\u901a\u77e5\u65b9\u6cd5\u6765\u901a\u544a\u6240\u6709\u5177\u4f53\u89c2\u5bdf\u8005","title":"\u89c2\u5bdf\u8005\u6a21\u5f0f\u7684\u5e94\u7528\u573a\u666f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u89c2\u5bdf\u8005\u6a21\u5f0f/#_5","text":"1\u3001\u62c9\u6a21\u5f0f\uff1a\u89c2\u5bdf\u8005\u626e\u6f14\u79ef\u6781\u89d2\u8272\uff0c\u4e3b\u9898\u53d8\u5316->\u5e7f\u64ad\u7ed9\u5df2\u6ce8\u518c\u7684\u89c2\u5bdf\u8005->\u89c2\u5bdf\u8005\u83b7\u53d6\u76f8\u5e94\u7684\u53d8\u5316\u60c5\u51b5 2\u3001\u63a8\u6a21\u5f0f\uff1a\u4e3b\u9898\u8d77\u4e3b\u5bfc\u4f5c\u7528\uff0c\u53d8\u5316\u7531\u4e3b\u9898\u63a8\u9001\u5230\u89c2\u5bdf\u8005 \u8026\u5408\uff1a\u4e00\u4e2a\u5bf9\u8c61\u5bf9\u4e8e\u4e0e\u5176\u4ea4\u4e92\u7684\u5176\u4ed6\u5bf9\u8c61\u7684\u4e86\u89e3\u7a0b\u5ea6 \u677e\u8026\u5408\uff1a\u964d\u4f4e\u591a\u4e2a\u5bf9\u8c61\u4e4b\u95f4\u7684\u4f9d\u8d56\u6027","title":"\u89c2\u5bdf\u8005\u6a21\u5f0f\u7684\u901a\u77e5\u65b9\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u89c2\u5bdf\u8005\u6a21\u5f0f/#_6","text":"1\u3001\u4f7f\u5f97\u5f7c\u6b64\u4ea4\u4e92\u5bf9\u8c61\u4e4b\u95f4\u4fdd\u6301\u677e\u8026\u5408 2\u3001\u6211\u4eec\u53ef\u4ee5\u5728\u65e0\u9700\u5bf9\u4e3b\u9898\u6216\u8005\u89c2\u5bdf\u8005\u8fdb\u884c\u4efb\u4f55\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\u9ad8\u6548\u5730\u53d1\u9001\u6570\u636e\u5230\u5176\u4ed6\u5bf9\u8c61 3\u3001\u968f\u65f6\u6dfb\u52a0/\u5220\u9664\u89c2\u5bdf\u8005","title":"\u89c2\u5bdf\u8005\u6a21\u5f0f\u7684\u4f18\u70b9"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u89c2\u5bdf\u8005\u6a21\u5f0f/#_7","text":"1\u3001\u89c2\u5bdf\u8005\u63a5\u53e3\u5fc5\u987b\u7531\u5177\u4f53\u89c2\u5bdf\u8005\u5b9e\u73b0\uff0c\u800c\u6d89\u53ca\u7ee7\u627f\uff0c\u65e0\u6cd5\u8fdb\u884c\u7ec4\u5408\uff0c\u56e0\u4e3a\u89c2\u5bdf\u8005\u63a5\u53e3\u53ef\u4ee5\u5b9e\u4f8b\u5316 2\u3001\u5982\u679c\u5b9e\u73b0\u4e0d\u5f53\uff0c\u89c2\u5bdf\u8005\u53ef\u80fd\u56de\u589e\u52a0\u590d\u6742\u6027\uff0c\u5e76\u4e14\u5bfc\u81f4\u6027\u80fd\u964d\u4f4e 3\u3001\u5728\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u901a\u77e5\u6709\u65f6\u53ef\u80fd\u4e0d\u53ef\u9760\uff0c\u5e76\u5bfc\u81f4\u7ade\u4e89\u6761\u4ef6\u6216\u4e0d\u4e00\u81f4\u6027","title":"\u89c2\u5bdf\u8005\u6a21\u5f0f\u7684\u7f3a\u70b9"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u8bbe\u8ba1\u6a21\u5f0f/","text":"1\u3001\u9762\u5411\u5bf9\u8c61 \u5bf9\u8c61 \u5e94\u7528\u7a0b\u5e8f\u5185\u7684\u5b9e\u4f53 \u7c7b \u5b9a\u4e49\u5bf9\u8c61\u7684\u5c5e\u6027\uff08\u6570\u636e\u6210\u5458\uff09\u548c\u884c\u4e3a\uff08\u6210\u5458\u51fd\u6570\uff09 \u6784\u9020\u51fd\u6570\uff1a\u521d\u59cb\u5316\u5bf9\u8c61\u72b6\u6001 \u6a21\u677f\uff0c\u5229\u4e8e\u590d\u7528 \u65b9\u6cd5 \u8868\u793a\u5bf9\u8c61\u7684\u884c\u4e3a \u5904\u7406\u5c5e\u6027\uff0c\u5b9e\u73b0\u529f\u80fd 2\u3001\u9762\u5411\u5bf9\u8c61\u7684\u4e3b\u8981\u6982\u5ff5 \u5c01\u88c5\uff1a \u6570\u636e\u548c\u65b9\u6cd5\u7684\u9690\u85cf \u591a\u6001\uff1a \u5bf9\u8c61\u6839\u636e\u8f93\u5165\u53c2\u6570\u63d0\u4f9b\u65b9\u6cd5\u7684\u4e0d\u540c\u5b9e\u73b0 \u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u63a5\u53e3 \u7ee7\u627f\uff1a \u4e0d\u540c\u7c7b\u7684\u5bf9\u8c61\u4e4b\u95f4\u5efa\u7acb\u5c42\u6b21\u7ed3\u6784 \u62bd\u8c61\uff1a \u5ba2\u6237\u7aef\u4e0d\u9700\u8981\u77e5\u9053\u5185\u90e8\u5b9e\u73b0 \u7ec4\u5408\uff1a \u65e0\u9700\u901a\u8fc7\u7ee7\u627f\u5c31\u53ef\u4ee5\u5b9e\u73b0\u57fa\u672c\u529f\u80fd\u7684\u8de8\u6a21\u5757\u4f7f\u7528 3\u3001\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u539f\u5219 \u5f00\u653e\u5c01\u95ed \u5f00\u653e\u6269\u5c55\uff0c\u5c01\u95ed\u4fee\u6539\uff0c\u5411\u540e\u517c\u5bb9 \u63a7\u5236\u53cd\u8f6c \u7ec6\u8282\u4f9d\u8d56\u4e8e\u62bd\u8c61 \u63a5\u53e3\u9694\u79bb \u5ba2\u6237\u7aef\u4e0d\u5e94\u8be5\u4f9d\u8d56\u4e8e\u4ed6\u4eec\u4e0d\u9700\u8981\u4f7f\u7528\u7684\u63a5\u53e3 \u5355\u4e00\u804c\u8d23 \u7c7b\u7684\u804c\u8d23\u5355\u4e00\uff0c\u5f15\u8d77\u7c7b\u53d8\u5316\u7684\u539f\u56e0\u5355\u4e00 \u66ff\u6362\u539f\u5219 \u6d3e\u751f\u7c7b\u5fc5\u987b\u80fd\u591f\u5b8c\u5168\u53d6\u4ee3\u57fa\u7c7b 4\u3001\u8bbe\u8ba1\u6a21\u5f0f\u6982\u5ff5 \u89e3\u51b3\u7279\u5b9a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848 \u4ece\u522b\u4eba\u7684\u6210\u529f\u4e2d\u5b66\u4e60 5\u3001\u6a21\u5f0f\u5206\u7c7b \u521b\u5efa\u578b \u7ed3\u6784\u578b \u884c\u4e3a\u578b","title":"\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"\u8bbe\u8ba1\u6a21\u5f0f/\u95e8\u9762\u6a21\u5f0f/","text":"\u95e8\u9762\u6a21\u5f0f 1\u3001\u7ed3\u6784\u578b\u6a21\u5f0f \u63cf\u8ff0\u5982\u4f55\u5c06\u5bf9\u8c61\u548c\u7c7b\u7ec4\u5408\u6210\u66f4\u5927\u7684\u7ed3\u6784 -\u7c7b\u6a21\u5f0f\uff1a\u901a\u8fc7\u7ee7\u627f\u6765\u63cf\u8ff0\u62bd\u8c61\uff0c\u4ece\u800c\u63d0\u4f9b\u66f4\u6709\u7528\u7684\u7a0b\u5e8f\u63a5\u53e3 -\u5bf9\u8c61\u6a21\u5f0f\uff1a\u63cf\u8ff0\u4e86\u5982\u4f55\u5c06\u5bf9\u8c61\u8054\u7cfb\u8d77\u6765\uff0c\u4ece\u800c\u7ec4\u5408\u6210\u66f4\u5927\u7684\u5bf9\u8c61 2\u3001\u7ed3\u6784\u578b\u6a21\u5f0f\u4f8b\u5b50\uff1a \u9002\u914d\u5668\u6a21\u5f0f\uff1a\u5c06\u4e00\u4e2a\u63a5\u53e3\u8f6c\u6362\u6210\u5ba2\u6237\u5e0c\u671b\u7684\u53e6\u4e00\u4e2a\u63a5\u53e3\uff0c\u6839\u636e\u5ba2\u6237\u7aef\u7684\u4e0d\u540c\u9700\u6c42\u6765\u5339\u914d\u4e0d\u540c\u7c7b\u7684\u63a5\u53e3 \u6865\u63a5\u6a21\u5f0f\uff1a\u5c06\u5bf9\u8c61\u7684\u63a5\u53e3\u4e0e\u5176\u5b9e\u73b0\u8fdb\u884c\u89e3\u8026\uff0c\u4f7f\u5f97\u4e24\u8005\u53ef\u4ee5\u72ec\u7acb\u5de5\u4f5c \u88c5\u9970\u5668\u6a21\u5f0f\uff1a\u5141\u8bb8\u5728\u8fd0\u884c\u65f6\u6216\u4ee5\u52a8\u6001\u65b9\u5f0f\u4e3a\u5bf9\u8c61\u6dfb\u52a0\u804c\u8d23\uff0c\u901a\u8fc7\u63a5\u53e3\u7ed9\u5bf9\u8c61\u6dfb\u52a0\u67d0\u4e9b\u5c5e\u6027 3\u3001\u95e8\u9762\u6a21\u5f0ffacade \uff081\uff09\u4e3a\u5b50\u7cfb\u7edf\u4e2d\u7684\u4e00\u7ec4\u63a5\u53e3\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\uff0c \u5e76\u5b9a\u4e49\u4e00\u4e2a\u9ad8\u7ea7\u63a5\u53e3\u6765\u5e2e\u52a9\u5ba2\u6237\u7aef\u901a\u8fc7\u66f4\u52a0\u7b80\u5355\u7684\u65b9\u5f0f\u6765\u4f7f\u7528\u5b50\u7cfb\u7edf \uff082\uff09\u95e8\u9762\u6240\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u5982\u4f55\u7528\u5355\u4e2a\u63a5\u53e3\u5bf9\u8c61\u8868\u793a\u590d\u6742\u7684\u5b50\u7cfb\u7edf\u3002 \u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u5c01\u88c5\u5b50\u7cfb\u7edf\uff0c\u800c\u662f\u5bf9\u5e95\u5c42\u5b50\u7cfb\u7edf\u8fdb\u884c\u7ec4\u5408 \uff083\uff09\u4fc3\u8fdb\u5b9e\u73b0\u4e0e\u5ba2\u6237\u7aef\u7684\u89e3\u8026 4\u30013\u4e2a\u4e3b\u8981\u53c2\u4e0e\u8005 \uff081\uff09\u95e8\u9762\uff1a\u5c06\u4e00\u7ec4\u590d\u6742\u7684\u5b50\u7cfb\u7edf\u5c01\u88c5\u8d77\u6765\uff0c\u4ece\u800c\u4e3a\u5916\u90e8\u4e16\u754c\u63d0\u4f9b\u4e00\u4e2a\u8212\u9002\u7684\u5916\u89c2 \uff082\uff09\u7cfb\u7edf\uff1a\u4ee3\u8868\u4e00\u7ec4\u4e0d\u540c\u7684\u5b50\u7cfb\u7edf\uff0c\u4f7f\u6574\u4e2a\u7cfb\u7edf\u6df7\u6742\u5728\u4e00\u8d77\uff0c\u96be\u4ee5\u89c2\u5bdf\u6216\u4f7f\u7528 \uff083\uff09\u5ba2\u6237\u7aef\uff1a\u4e0e\u95e8\u9762\u4ea4\u4e92\uff0c\u8f7b\u677e\u7684\u4e0e\u5b50\u7cfb\u7edf\u8fdb\u884c\u901a\u4fe1\u5e76\u5b8c\u6210\u5de5\u4f5c\uff0c\u4e0d\u5fc5\u62c5\u5fc3\u7cfb\u7edf\u7684\u590d\u6742\u6027 5\u3001\u6700\u5c11\u77e5\u8bc6\u539f\u5219\uff1a\u51cf\u5c11\u5bf9\u8c61\u4e4b\u95f4\u7684\u4ea4\u4e92 6\u3001\u4ee3\u7801\u793a\u4f8b # -*- coding: utf-8 -*- # \u5b50\u7cfb\u7edf class Dog ( object ): def say_hi ( self ): print ( \"\u6c6a\u6c6a\u6c6a...\" ) class Cat ( object ): def say_hi ( self ): print ( \"\u55b5\u55b5\u55b5...\" ) # \u95e8\u9762 class Zoo ( object ): def animal_say_hi ( self ): dog = Dog () dog . say_hi () cat = Cat () cat . say_hi () # \u5ba2\u6237\u7aef class Visitor ( object ): def visit ( self ): zoo = Zoo () zoo . animal_say_hi () if __name__ == '__main__' : visitor = Visitor () visitor . visit () \"\"\" \u6c6a\u6c6a\u6c6a... \u55b5\u55b5\u55b5... \"\"\"","title":"\u95e8\u9762\u6a21\u5f0f"}]}